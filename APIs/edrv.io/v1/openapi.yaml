openapi: 3.0.0
servers:
  - url: //api.edrv.io
info:
  contact:
    email: hello@edrv.io
    name: eDRV
    url: https://edrv.io
  description: edrv.io API Documentation
  title: eDRV API
  version: v1
  x-apisguru-categories:
    - open_data
    - transport
    - location
  x-logo:
    url: https://uploads-ssl.webflow.com/5eb5ba31ecd0593f18002773/5edcf57799287361407a98a4_Untitled%20(3)-p-500.png
  x-origin:
    - format: openapi
      url: https://developers.edrv.io/openapi/5f15c43c87b0d6001ea97414
      version: "3.0"
  x-providerName: edrv.io
security:
  - oauth2: []
paths:
  /v1/chargestations:
    get:
      description: Get ChargeStation info
      operationId: getChargeStations
      parameters:
        - description: Filter by Org. Id
          in: query
          name: organization
          schema:
            type: string
        - description: Filter by Location Id
          in: query
          name: location
          schema:
            type: string
        - description: Filter by Online Status
          in: query
          name: online
          schema:
            type: boolean
        - description: Chargestations that have been activated/deactivated by the admin
          in: query
          name: active
          schema:
            type: boolean
      responses:
        "200":
          description: Success
      tags:
        - Charge Stations
    post:
      description: Create charge station with parameters
      operationId: postChargeStations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/schema1"
        description: Include charge station properties to create here
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  connector:
                    type: object
                  message:
                    type: string
                  ok:
                    type: boolean
                type: object
          description: A successful response
        "400":
          description: A failure response
      tags:
        - Charge Stations
  "/v1/chargestations/{id}":
    delete:
      description: Use to delete a charge station
      operationId: deleteChargeStation
      parameters:
        - description: The charge station id that needs to be deleted
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      tags:
        - Charge Stations
    get:
      description: Use to request a single charge station's data
      operationId: getChargeStation
      parameters:
        - description: The charge station id that needs to be fetched
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      tags:
        - Charge Stations
    patch:
      description: Update charge station with parameters
      operationId: patchChargeStation
      parameters:
        - description: ID of charge station that needs to be updated
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/schema1"
        description: Include charge station properties to update here
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  ok:
                    type: boolean
                  result:
                    type: object
                type: object
          description: A successful response
        "400":
          description: A failure response
      tags:
        - Charge Stations
  "/v1/chargestations/{id}/connectors":
    get:
      description: Get Connectors data filtered by ChargeStation
      operationId: getChargeStationConnectors
      parameters:
        - description: The ChargeStation id that connectors need to be fetched for
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      tags:
        - Charge Stations
  /v1/commands:
    get:
      description: Get Commands data
      operationId: getCommands
      responses:
        "200":
          description: Success
      tags:
        - Commands
  /v1/commands/cancelreservation:
    post:
      description: Use to request a delete an existing reservation. The request will wait for the charge station to process the command. It will timeout after 60 seconds.
      operationId: cancelreservation
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reservation:
                  type: string
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  ok:
                    type: boolean
                  result:
                    type: object
                type: object
          description: A successful response
        "400":
          description: A failure response
      tags:
        - Commands
  /v1/commands/remotestart:
    post:
      description: Use to request a remote start command. The request will wait for the charge station to process the command. It will timeout after 60 seconds.
      operationId: remotestart
      requestBody:
        content:
          application/json:
            schema:
              properties:
                chargestation:
                  type: string
                connector:
                  minimum: 1
                  type: integer
                evdriver:
                  type: string
                evse:
                  minimum: 1
                  type: integer
                token:
                  type: string
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  command:
                    type: object
                  message:
                    type: string
                  ok:
                    type: boolean
                type: object
          description: A successful response
        "400":
          description: A failure response
      tags:
        - Commands
  /v1/commands/remotestop:
    post:
      description: Use to request a remote stop command. The request will wait for the charge station to process the command. It will timeout after 60 seconds.
      operationId: remotestop
      requestBody:
        content:
          application/json:
            schema:
              properties:
                chargestation:
                  type: string
                evdriver:
                  type: string
                transaction:
                  type: string
              type: object
        description: Remote stop transaction info here.
        required: true
      responses:
        "201":
          description: A successful response
        "400":
          description: A failure response
      tags:
        - Commands
  /v1/commands/reserve:
    post:
      description: Use to request a reserve command. The request will wait for the charge station to process the command. It will timeout after 60 seconds.
      operationId: reserve
      requestBody:
        content:
          application/json:
            schema:
              properties:
                chargestation:
                  type: string
                connector:
                  minimum: 1
                  type: integer
                endDate:
                  type: string
                evdriver:
                  type: string
                evse:
                  minimum: 1
                  type: integer
                token:
                  type: string
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  command:
                    type: object
                  message:
                    type: string
                  ok:
                    type: boolean
                type: object
          description: A successful response
        "400":
          description: A failure response
      tags:
        - Commands
  /v1/commands/reset:
    post:
      description: Use to request a reset command. The request will wait for the charge station to process the command. It will timeout after 60 seconds.
      operationId: reset
      requestBody:
        content:
          application/json:
            schema:
              properties:
                chargestation:
                  type: string
                type:
                  type: string
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  ok:
                    type: boolean
                  result:
                    type: object
                type: object
          description: A successful response
        "400":
          description: A failure response
      tags:
        - Commands
  /v1/commands/unlockconnector:
    post:
      description: Use to request an unlock command for a connector. The request will wait for the charge station to process the command. It will timeout after 60 seconds.
      operationId: unlockconnector
      requestBody:
        content:
          application/json:
            schema:
              properties:
                chargestation:
                  type: string
                connector:
                  minimum: 1
                  type: integer
                evse:
                  minimum: 1
                  type: integer
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  command:
                    type: object
                  message:
                    type: string
                  ok:
                    type: boolean
                type: object
          description: A successful response
        "400":
          description: A failure response
      tags:
        - Commands
  /v1/configurations:
    get:
      description: Get Configurations data
      operationId: getConfigurations
      responses:
        "200":
          description: Success
      tags:
        - Configurations
    post:
      description: Create connector with parameters
      operationId: postConfigurations
      requestBody:
        content:
          application/json:
            schema:
              properties:
                key:
                  type: string
                value:
                  type: string
              type: object
        description: Include Configuration properties to create here
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  ok:
                    type: boolean
                  result:
                    type: object
                type: object
          description: A successful response
        "400":
          description: A failure response
      tags:
        - Configurations
  "/v1/configurations/{id}":
    get:
      description: Get one Configuration data
      operationId: getConfiguration
      parameters:
        - description: ID of Configuration that needs to be fetched
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      tags:
        - Configurations
  /v1/connectors:
    get:
      description: Get Connectors data
      operationId: getConnectors
      responses:
        "200":
          description: Success
      tags:
        - Connectors
    post:
      description: Create connector with parameters
      operationId: postConnectors
      requestBody:
        content:
          application/json:
            schema:
              properties:
                chargestation:
                  type: string
                format:
                  type: string
                power:
                  type: integer
                power_type:
                  type: string
                type:
                  type: string
              type: object
        description: Include Connector properties to create here
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  ok:
                    type: boolean
                  result:
                    type: object
                type: object
          description: A successful response
        "400":
          description: A failure response
      tags:
        - Connectors
  "/v1/connectors/{id}":
    get:
      description: Get one Connector data
      operationId: getConnector
      parameters:
        - description: ID of Connector that needs to be fetched
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      tags:
        - Connectors
    patch:
      description: Update connector parameters
      operationId: patchConnector
      parameters:
        - description: ID of Connector that needs to be updated
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                chargestation:
                  type: string
                format:
                  type: string
                power:
                  type: integer
                power_type:
                  type: string
                type:
                  type: string
              type: object
        description: Include Connector properties to update here
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  ok:
                    type: boolean
                  result:
                    type: object
                type: object
          description: A successful response
        "400":
          description: A failure response
      tags:
        - Connectors
  /v1/drivers:
    get:
      description: Get All Drivers data
      operationId: getDrivers
      parameters:
        - description: Get a list of active drivers
          in: query
          name: active
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  ok:
                    type: boolean
                  result:
                    items: {}
                    type: array
                type: object
          description: A successful response
        "401":
          description: A failure response
      tags:
        - Drivers
    post:
      description: Create driver with parameters
      operationId: postDrivers
      requestBody:
        content:
          application/json:
            schema:
              properties:
                active:
                  default: true
                  type: boolean
                address:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    postalCode:
                      type: string
                    streetAndNumber:
                      type: string
                  type: object
                email:
                  type: string
                firstname:
                  type: string
                lastname:
                  type: string
                phone:
                  properties:
                    home:
                      type: string
                    mobile:
                      type: string
                    work:
                      type: string
                  type: object
                source:
                  enum:
                    - physical
                    - slack
                    - telegram
                    - sms
                  type: string
              required:
                - firstname
                - lastname
                - source
              type: object
        description: Include driver properties to create here
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  ok:
                    type: boolean
                  result:
                    type: object
                type: object
          description: A successful response
        "400":
          description: A failure response
      tags:
        - Drivers
  "/v1/drivers/{id}":
    delete:
      description: Use to delete a driver
      operationId: deleteDriver
      parameters:
        - description: The driver id that needs to be deleted
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      tags:
        - Drivers
    get:
      description: Use to request a single driver
      operationId: getDriver
      parameters:
        - description: The driver id that needs to be fetched
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      tags:
        - Drivers
    patch:
      description: Update driver with parameters
      operationId: patchDriver
      parameters:
        - description: ID of driver that needs to be updated
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                active:
                  type: boolean
                address:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    postalCode:
                      type: string
                    streetAndNumber:
                      type: string
                  type: object
                email:
                  type: string
                firstname:
                  type: string
                lastname:
                  type: string
                phone:
                  properties:
                    home:
                      type: string
                    mobile:
                      type: string
                    work:
                      type: string
                  type: object
                source:
                  type: string
                tokens:
                  items: {}
                  type: array
              type: object
        description: Include driver properties to create here
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  ok:
                    type: boolean
                  result:
                    items: {}
                    type: array
                type: object
          description: A successful response
        "400":
          description: A failure response
      tags:
        - Drivers
  /v1/locations:
    get:
      description: Get Locations data
      operationId: getLocations
      responses:
        "200":
          description: Success
      tags:
        - Locations
  /v1/organizations:
    get:
      description: Get Organizations data
      operationId: getOrganizations
      responses:
        "200":
          description: Success
      tags:
        - Organizations
  "/v1/organizations/{id}":
    get:
      description: Get one organization data by id
      operationId: getOrganization
      parameters:
        - description: ID of organization that needs to be fetched
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      tags:
        - Organizations
    patch:
      description: Update organization with parameters
      operationId: patchOrganization
      parameters:
        - description: ID of organization that needs to be updated
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                active:
                  type: boolean
                address:
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    postalCode:
                      type: string
                    streetAndNumber:
                      type: string
                  type: object
                channels:
                  properties:
                    slack:
                      type: object
                    telegram:
                      type: object
                  type: object
                configurations:
                  properties:
                    basicAuthEnabled:
                      type: boolean
                    basicAuthPassword:
                      type: boolean
                  type: object
                locations:
                  items: {}
                  type: array
                name:
                  type: string
                otp:
                  type: string
              type: object
        description: Include organization properties to create here
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  ok:
                    type: boolean
                  result:
                    items: {}
                    type: array
                type: object
          description: A successful response
        "400":
          description: A failure response
      tags:
        - Organizations
  /v1/realtime:
    get:
      description: Use to request a Websockets handshake
      operationId: getRealtime
      parameters:
        - description: The JWT token to use for auth
          in: header
          name: sec-websocket-protocol
          required: true
          schema:
            type: string
      responses:
        "101":
          description: Upgrade connection
      tags:
        - Realtime
  /v1/reservations:
    get:
      description: Get Reservations data
      operationId: getReservations
      responses:
        "200":
          description: Success
      tags:
        - Reservations
  "/v1/reservations/{id}":
    get:
      description: Get one reservation data
      operationId: getReservation
      parameters:
        - description: ID of the reservation that needs to be fetched
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      tags:
        - Reservations
    patch:
      description: Use to request a update an existing reservation. The request will wait for the charge station to process the command. It will timeout after 60 seconds.
      operationId: updatereservation
      parameters:
        - description: ID of the reservation that needs to be fetched
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                connector:
                  minimum: 1
                  type: integer
                endDate:
                  type: string
                evdriver:
                  type: string
                evse:
                  minimum: 1
                  type: integer
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  ok:
                    type: boolean
                  result:
                    type: object
                type: object
          description: A successful response
        "400":
          description: A failure response
      tags:
        - Reservations
  "/v1/stats/{asset}/{statistic}":
    get:
      description: Get statistics for an activity for an asset within a certain date
      operationId: getStat
      parameters:
        - description: The asset you would like to get stats for.
          in: path
          name: asset
          required: true
          schema:
            enum:
              - transactions
              - drivers
            type: string
        - description: Type of statistic to calculate
          in: path
          name: statistic
          required: true
          schema:
            enum:
              - count
            type: string
        - description: Date as ISO String
          in: query
          name: from
          required: true
          schema:
            type: string
        - description: Date as ISO String
          in: query
          name: to
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
        "401":
          description: Not Found
      tags:
        - Stats
  /v1/tokens:
    get:
      description: Get Tokens data
      operationId: getTokens
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  ok:
                    type: boolean
                  result:
                    items: {}
                    type: array
                type: object
          description: A successful response
        "401":
          description: A failure response
      tags:
        - Tokens
    post:
      description: Create token with parameters
      operationId: postTokens
      requestBody:
        content:
          application/json:
            schema:
              properties:
                active:
                  default: true
                  type: boolean
                channel:
                  enum:
                    - physical
                    - slack
                    - telegram
                    - sms
                  type: string
                evdriver:
                  type: string
                physicalId:
                  type: string
                type:
                  type: string
              required:
                - active
                - physicalId
                - evdriver
                - channel
              type: object
        description: Include token properties to create here
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  ok:
                    type: boolean
                  result:
                    items: {}
                    type: array
                type: object
          description: A successful response
        "400":
          description: A failure response
      tags:
        - Tokens
  "/v1/tokens/{id}":
    delete:
      description: Use to delete a token
      operationId: deleteToken
      parameters:
        - description: The token id that needs to be deleted
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      tags:
        - Tokens
    get:
      description: Use to request a single token
      operationId: getToken
      parameters:
        - description: The token id that needs to be fetched
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      tags:
        - Tokens
    patch:
      description: Update token with parameters
      operationId: patchToken
      parameters:
        - description: ID of token that needs to be updated
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                active:
                  default: true
                  type: boolean
                channel:
                  enum:
                    - physical
                    - slack
                    - telegram
                    - sms
                  type: string
                evdriver:
                  type: string
                physicalId:
                  type: string
                type:
                  type: string
              type: object
        description: Include token properties to create here
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  ok:
                    type: boolean
                  result:
                    items: {}
                    type: array
                type: object
          description: A successful response
        "400":
          description: A failure response
      tags:
        - Tokens
  /v1/transactions:
    get:
      description: Get all transactions
      operationId: getTransactions
      parameters:
        - description: Number of results per page
          in: query
          name: limit
          schema:
            default: 10
            maximum: 100
            minimum: 1
            type: integer
        - description: Sort data by this key
          in: query
          name: sortBy
          schema:
            type: string
        - description: The queried page index.
          in: query
          name: page
          schema:
            type: string
        - description: True to sort ascending (default is false - descending)
          in: query
          name: sortAscending
          schema:
            default: false
            type: boolean
        - description: True to get only active transactions
          in: query
          name: onlyActive
          schema:
            default: false
            type: boolean
        - description: Date as ISO String
          in: query
          name: from
          required: true
          schema:
            type: string
        - description: Date as ISO String
          in: query
          name: to
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  hasNext:
                    type: boolean
                  hasPrevious:
                    type: boolean
                  message:
                    type: string
                  ok:
                    type: boolean
                  result:
                    items: {}
                    type: array
                type: object
          description: Success
        "401":
          description: Not Found
      tags:
        - Transactions
  "/v1/transactions/{id}":
    get:
      description: Get a specific transaction
      operationId: getTransaction
      parameters:
        - description: BSON
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Return Driver Info based on Identification Method used for this transaction
          in: query
          name: driver
          schema:
            type: boolean
      responses:
        "200":
          description: Success
        "401":
          description: Not Found
      tags:
        - Transactions
components:
  schemas:
    schema1:
      properties:
        location:
          type: string
        manufacturer:
          type: string
        model:
          type: string
        protocol:
          type: string
      type: object
  securitySchemes:
    oauth2:
      flows:
        implicit:
          authorizationUrl: https://edrv.auth0.com/authorize
          scopes:
            read:chargestations: Read chargestations
            read:chargestations/:id: Read a chargestation
            read:chargestations/:id/connectors: Read connectors for a chargestation
            read:connectors: Read connectors
            read:connectors/:id: Read a connector
            read:drivers: Read drivers
            read:drivers/:id: Read a driver
            read:locations: Read locations
            read:locations/:id: Read a location
            read:organizations: Read organizations
            read:organizations/:id: Read an organization
            read:realtime: Read realtime
            read:reservations: Read reservations
            read:reservations/:id: Read a reservations
            read:stats/:asset/:statistic: Read a statistic
            read:tokens: Read tokens
            read:tokens/:id: Read a token
            read:transactions: Read transactions
            read:transactions/:id: Read a transaction
            write:chargestations: Write chargestations
            write:chargestations/:id: Write a chargestation
            write:commands/remotestart: Write remotestart for commands
            write:commands/remotestop: Write remotestop for commands
            write:commands/reserve: Write reserve for commands
            write:commands/reset: Write reset for commands
            write:commands/unlockconnector: Write unlockconnector for commands
            write:connectors: Write connectors
            write:connectors/:id: Write a connector
            write:drivers: Write drivers
            write:drivers/:id: Write a driver
            write:locations: Write locations
            write:locations/:id: Write a location
            write:organizations: Write organizations
            write:organizations/:id: Writen an organization
            write:reservations: Write reservations
            write:reservations/:id: Write a reservation
            write:tokens: Write tokens
            write:tokens/:id: Write a token
            write:transactions: Write transactions
            write:transactions/:id: Write a transactions
      type: oauth2
x-explorer-enabled: true
x-github-repo: rsafaya-edrv/edrv-api
x-github-sha: df5aa5f0d5bd2b84c4ed31c52f5ffdaf5e46c60f
x-proxy-enabled: true
x-samples-enabled: true
x-samples-languages:
  - curl
  - node
  - ruby
  - javascript
  - python
x-si-base: /home/runner/work/edrv-api/edrv-api/swagger.yml
