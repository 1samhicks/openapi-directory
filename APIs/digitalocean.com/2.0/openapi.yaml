openapi: 3.0.0
servers:
  - description: production
    url: https://api.digitalocean.com
info:
  contact:
    email: api-engineering@digitalocean.com
    name: DigitalOcean API Team
  description: >
    The DigitalOcean API allows you to manage Droplets and resources within the DigitalOcean cloud in a simple, programmatic way using conventional HTTP requests.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://www.digitalocean.com/legal/terms-of-service-agreement/
  title: DigitalOcean API
  version: "2.0"
  x-apisguru-categories:
    - hosting
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/digitalocean/openapi/main/specification/DigitalOcean-public.v2.yaml
      version: "3.0"
  x-providerName: digitalocean.com
  x-preferred: null
security:
  - bearer_auth: []
tags:
  - description: 1-Click applications are pre-built Droplet images or Kubernetes apps with software, features, and configuration details already set up for you. They can be found in the [DigitalOcean Marketplace](https://www.digitalocean.com/docs/marketplace).
    name: 1-Click Applications
  - description: Provides information about your current account.
    name: Account
  - description: >-
      Actions are records of events that have occurred on the resources in your account. These can be things like rebooting a Droplet, or transferring an image to a new region.

      An action object is created every time one of these actions is initiated. The action object contains information about the current status of the action, start and complete timestamps, and the associated resource type and ID.

      Every action that creates an action object is available through this endpoint. Completed actions are not removed from this list and are always available for querying.
    name: Actions
  - description: >-
      App Platform is a Platform-as-a-Service (PaaS) offering from DigitalOcean that allows developers to publish code directly to DigitalOcean servers without worrying about the underlying infrastructure.

      Most API operations are centered around a few core object types. Following are the definitions of these types. These definitions will be omitted from the operation-specific documentation.

      For documentation on app specifications (`AppSpec` objects), please refer to the [product documentation](https://www.digitalocean.com/docs/app-platform/references/app-specification-reference/).
    name: Apps
  - description: By sending requests to the `/v2/customers/my/balance` endpoint, you can retrieve the balance information for the requested customer account.
    name: Balance
  - description: >-
      Billing history is a record of billing events for your account. For example, entries may include events like payments made, invoices issued, or credits granted.

      To interact with the billing history for an account, you will generally send requests to the billing history endpoint at `/v2/customers/my/billing_history`.
    name: Billing History
  - description: >-
      [DigitalOcean Block Storage Volumes](https://www.digitalocean.com/docs/volumes/) provide expanded storage capacity for your Droplets and can be moved between Droplets within a specific region.

      Volumes function as raw block devices, meaning they appear to the operating system as locally attached storage which can be formatted using any file system supported by the OS. They may be created in sizes from 1GiB to 16TiB.

      By sending requests to the /v2/volumes endpoint, you can list, create, or delete volumes as well as attach and detach them from Droplets
    name: Block Storage
  - description: >-
      Block storage actions are commands that can be given to a DigitalOcean Block Storage Volume. An example would be detaching or attaching a volume from a Droplet. These requests are made on the `/v2/volumes/$VOLUME_ID/actions` endpoint.

      An action object is returned. These objects hold the current status of the requested action.
    name: Block Storage Actions
  - description: Content hosted in DigitalOcean's object storage solution, [Spaces](https://www.digitalocean.com/docs/spaces/overview/), can optionally be served by our globally distributed Content Delivery Network (CDN). By sending requests to `/v2/cdn/endpoints`, you can list, create, or delete CDN Endpoints as well as purge cached content. To use a custom subdomain to access the CDN Endpoint, provide the ID of a DigitalOcean managed TLS certificate and the fully qualified domain name for the custom subdomain.
    name: CDN Endpoints
  - description: >-
      In order to perform SSL termination on load balancers, DigitalOcean offers two types of [SSL certificate management](https://www.digitalocean.com/docs/accounts/security/#certificates):

      * **Custom**: User-generated certificates may be uploaded to DigitalOcean where they will be placed in a fully encrypted and isolated storage system.

      * **Let's Encrypt**: Certificates may be automatically generated by DigitalOcean utilizing an integration with Let's Encrypt, the free and open certificate authority. These certificates will also be automatically renewed as required.
    name: Certificates
  - description: >-
      DigitalOcean offers the ability for you to create a [private container registry](https://www.digitalocean.com/docs/images/container-registry/quickstart/) to store your Docker images for use with your Kubernetes clusters. This container registry runs inside the same datacenters as your cluster, ensuring reliable and performant rollout of image deployments.

      You can only create one registry per DigitalOcean account, but you can use that registry to create as many repositories as you wish.
    name: Container Registry
  - description: >
      DigitalOcean's [managed database service](https://www.digitalocean.com/docs/databases)

      simplifies the creation and management of highly available database clusters. Currently, it

      offers support for [PostgreSQL](http://www.digitalocean.com/docs/databases/postgresql/),

      [Redis](https://www.digitalocean.com/docs/databases/redis/), and

      [MySQL](https://www.digitalocean.com/docs/databases/mysql/).


      By sending requests to the `/v2/databases` endpoint, you can list, create, or delete

      database clusters as well as scale the size of a cluster, add or remove read-only replicas,

      and manage other configuration details.


      The size of individual nodes in a database cluster is represented by a human-readable slug.

      These slugs denote the underlying Droplet class, amount of RAM, and CPU count for the node.

      Database clusters may be deployed in a multi-node, highly available configuration. In

      addition to the primary node, up to two standby nodes may be added to a cluster with one

      exception. High availability configurations are not available when using the smallest node

      size. The currently available sizes and their corresponding slugs are:


      Size Slug        | RAM   | CPU     | Storage | High Availability Plans

      -----------------|-------|---------|---------|------------------------

      db-s-1vcpu-1gb   | 1 GB  | 1 vCPU  | 10 GB   | False

      db-s-1vcpu-2gb   | 2 GB  | 1 vCPU  | 25 GB   | True

      db-s-2vcpu-4gb   | 4 GB  | 2 vCPU  | 38 GB   | True

      db-s-4vcpu-8gb   | 8 GB  | 4 vCPU  | 115 GB  | True

      db-s-6vcpu-16gb  | 16 GB | 6 vCPU  | 270 GB  | True

      db-s-8vcpu-32gb  | 32 GB | 8 vCPU  | 580 GB  | True

      db-s-16vcpu-64gb | 64 GB | 16 vCPU | 1.12 TB | True
    name: Databases
  - description: >
      Domain record resources are used to set or retrieve information about the

      individual DNS records configured for a domain. This allows you to build

      and manage DNS zone files by adding and modifying individual records for a

      domain.


      The [DigitalOcean DNS management interface](https://www.digitalocean.com/docs/networking/dns/)

      allows you to configure the following DNS records:


      Name  | Description                                                                                                                                        | Description                                                                                                                                                                                                                                                                                                                                                                 | Required

      ------|----------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------

      A     | This record type is used to map an IPv4 address to a hostname.                                                                                     | The record type (A, MX, CNAME, etc).                                                                                                                                                                                                                                                                                                                                        | All Records

      AAAA  | This record type is used to map an IPv6 address to a hostname.                                                                                     | The host name, alias, or service being defined by the record.                                                                                                                                                                                                                                                                                                               | A, AAAA, CAA, CNAME, TXT, SRV

      CAA   | As specified in RFC-6844, this record type can be used to restrict which certificate authorities are permitted to issue certificates for a domain. | Variable data depending on record type. For example, the "data" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates.                                                                                                            | A, AAAA, CAA, CNAME, MX, TXT, SRV, NS

      CNAME | This record type defines an alias for your canonical hostname (the one defined by an A or AAAA record).                                            | The priority of the host (for SRV and MX records. null otherwise).                                                                                                                                                                                                                                                                                                          | MX, SRV

      MX    | This record type is used to define the mail exchanges used for the domain.                                                                         | The port that the service is accessible on (for SRV records only. null otherwise).                                                                                                                                                                                                                                                                                          | SRV

      NS    | This record type defines the name servers that are used for this zone.                                                                             | This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested. There is a minimum ttl value of 30, unless it is not set. If not set, the default value is the value of the SOA record. For SOA records, defines the time to live for purposes of negative caching. | SOA

      TXT   | This record type is used to associate a string of text with a hostname, primarily used for verification.                                           | The weight of records with the same priority (for SRV records only. null otherwise).                                                                                                                                                                                                                                                                                        | SRV

      SRV   | This record type specifies the location (hostname and port number) of servers for specific services.                                               | An unsigned integer between 0-255 used for CAA records.                                                                                                                                                                                                                                                                                                                     | CAA

      SOA   | This record type defines administrative information about the zone. Can only have ttl changed, cannot be deleted                                   | The parameter tag for CAA records. Valid values are "issue", "issuewild", or "iodef"                                                                                                                                                                                                                                                                                        | CAA
    name: Domain Records
  - description: >-
      Domain resources are domain names that you have purchased from a domain name registrar that you are managing through the [DigitalOcean DNS interface](https://www.digitalocean.com/docs/networking/dns/).

      This resource establishes top-level control over each domain. Actions that affect individual domain records should be taken on the [Domain Records](#tag/Domain-Records) resource.
    name: Domains
  - description: >-
      Droplet actions are tasks that can be executed on a Droplet. These can be things like rebooting, resizing, snapshotting, etc.

      Droplet action requests are generally targeted at one of the "actions" endpoints for a specific Droplet. The specific actions are usually initiated by sending a POST request with the action and arguments as parameters.

      Droplet action requests create a Droplet actions object, which can be used to get information about the status of an action. Creating a Droplet action is asynchronous: the HTTP call will return the action object before the action has finished processing on the Droplet. The current status of an action can be retrieved from either the Droplet actions endpoint or the global actions endpoint. If a Droplet action is uncompleted it may block the creation of a subsequent action for that Droplet, the locked attribute of the Droplet will be true and attempts to create a Droplet action will fail with a status of 422.
    name: Droplet Actions
  - description: >-
      A [Droplet](https://www.digitalocean.com/docs/droplets/) is a DigitalOcean virtual machine. By sending requests to the Droplet endpoint, you can list, create, or delete Droplets.

      Some of the attributes will have an object value. The `region` and `image` objects will all contain the standard attributes of their associated types. Find more information about each of these objects in their respective sections.
    name: Droplets
  - description: "[DigitalOcean Cloud Firewalls](https://www.digitalocean.com/docs/networking/firewalls/) provide the ability to restrict network access to and from a Droplet allowing you to define which ports will accept inbound or outbound connections. By sending requests to the `/v2/firewalls` endpoint, you can list, create, or delete firewalls as well as modify access rules."
    name: Firewalls
  - description: >-
      Floating IP actions are commands that can be given to a DigitalOcean floating IP. These requests are made on the actions endpoint of a specific floating IP.

      An action object is returned. These objects hold the current status of the requested action.
    name: Floating IP Actions
  - description: >-
      [DigitalOcean Floating IPs](https://www.digitalocean.com/docs/networking/floating-ips/) are publicly-accessible static IP addresses that can be mapped to one of your Droplets. They can be used to create highly available setups or other configurations requiring movable addresses.

      Floating IPs are bound to a specific region.
    name: Floating IPs
  - description: >+
      Image actions are commands that can be given to a DigitalOcean image. In general, these requests are made on the actions endpoint of a specific image.

      An image action object is returned. These objects hold the current status of the requested action.

    name: Image Actions
  - description: >-
      A DigitalOcean [image](https://www.digitalocean.com/docs/images/) can be used to create a Droplet and may come in a number of flavors. Currently, there are five types of images: snapshots, backups, applications, distributions, and custom images.

      * [Snapshots](https://www.digitalocean.com/docs/images/snapshots/) provide a full copy of an existing Droplet instance taken on demand.

      * [Backups](https://www.digitalocean.com/docs/images/backups/) are similar to snapshots but are created automatically at regular intervals when enabled for a Droplet.

      * [Custom images](https://www.digitalocean.com/docs/images/custom-images/) are Linux-based virtual machine images (raw, qcow2, vhdx, vdi, and vmdk formats are supported) that you may upload for use on DigitalOcean.

      * Distributions are the public Linux distributions that are available to be used as a base to create Droplets.

      * Applications, or [1-Click Apps](https://www.digitalocean.com/docs/one-clicks/), are distributions pre-configured with additional software.

      To interact with images, you will generally send requests to the images endpoint at /v2/images.
    name: Images
  - description: >-
      [Invoices](https://www.digitalocean.com/docs/accounts/billing/invoices/) are generated on the first of each month for every DigitalOcean customer. An invoice preview is generated daily, which can be accessed with the `preview` keyword in place of `$INVOICE_UUID`.

      To interact with invoices, you will generally send requests to the invoices endpoint at `/v2/customers/my/invoices`.
    name: Invoices
  - description: "[DigitalOcean Kubernetes](https://www.digitalocean.com/docs/kubernetes/) allows you to quickly deploy scalable and secure Kubernetes clusters. By sending requests to the `/v2/kubernetes/clusters` endpoint, you can list, create, or delete clusters as well as scale node pools up and down, recycle individual nodes, and retrieve the kubeconfig file for use with a cluster."
    name: Kubernetes
  - description: "[DigitalOcean Load Balancers](https://www.digitalocean.com/docs/networking/load-balancers/) provide a way to distribute traffic across multiple Droplets. By sending requests to the `/v2/load_balancers` endpoint, you can list, create, or delete load balancers as well as add or remove Droplets, forwarding rules, and other configuration details."
    name: Load Balancers
  - description: >-
      Project Resources are resources that can be grouped into your projects.

      You can group resources (like Droplets, Spaces, load balancers, domains,

      and floating IPs) in ways that align with the applications you host on

      DigitalOcean.


      ### Supported Resource Types Examples


      Projects resources are identified by uniform resource names or URNs. A

      valid URN has the following format: `do:resource_type:resource_id`. The

      following resource types are supported:


      Resource Type | Example URN

      --------------|------------

      Database      | `do:dbaas:83c7a55f-0d84-4760-9245-aba076ec2fb2`

      Domain        | `do:domain:example.com`

      Droplet       | `do:droplet:4126873`

      Floating IP   | `do:floatingip:192.168.99.100`

      Load Balancer | `do:loadbalancer:39052d89-8dd4-4d49-8d5a-3c3b6b365b5b`

      Space         | `do:space:my-website-assets`

      Volume        | `do:volume:6fc4c277-ea5c-448a-93cd-dd496cfef71f`


      ### Resource Status Codes


      When assigning and retrieving resources in projects, a `status` attribute

      is returned that indicates if a resource was successfully retrieved or

      assigned. The status codes can be one of the following:


      Status Code | Explanation

      ------------|------------

      `ok`          | There was no problem retrieving or assigning a resource.

      `not_found`   | The resource was not found.

      `assigned`    | The resource was successfully assigned.

      `already_assigned` | The resource was already assigned.

      `service_down`     | There was a problem retrieving or assigning a resource. Please try again.
    name: Project Resources
  - description: Projects allow you to organize your resources into groups that fit the way you work. You can group resources (like Droplets, Spaces, load balancers, domains, and floating IPs) in ways that align with the applications you host on DigitalOcean.
    name: Projects
  - description: Provides information about DigitalOcean data center regions.
    name: Regions
  - description: >-
      The sizes objects represent different packages of hardware resources that can be used for Droplets. When a Droplet is created, a size must be selected so that the correct resources can be allocated.

      Each size represents a plan that bundles together specific sets of resources. This includes the amount of RAM, the number of virtual CPUs, disk space, and transfer. The size object also includes the pricing details and the regions that the size is available in.
    name: Sizes
  - description: >-
      [Snapshots](https://www.digitalocean.com/docs/images/snapshots/) are saved instances of a Droplet or a block storage volume, which is reflected in the `resource_type` attribute. In order to avoid problems with compressing filesystems, each defines a `min_disk_size` attribute which is the minimum size of the Droplet or volume disk when creating a new resource from the saved snapshot.

      To interact with snapshots, you will generally send requests to the snapshots endpoint at `/v2/snapshots`.
    name: Snapshots
  - description: Manage SSH keys available on your account.
    name: SSH Keys
  - description: >-
      A tag is a label that can be applied to a resource (currently Droplets, Images, Volumes, Volume Snapshots, and Database clusters) in order to better organize or facilitate the lookups and actions on it.

      Tags have two attributes: a user defined `name` attribute and an embedded `resources` attribute with information about resources that have been tagged.
    name: Tags
  - description: >-
      [VPCs (virtual private clouds)](https://www.digitalocean.com/docs/networking/vpc/) allow you to create virtual networks containing resources that can communicate with each other in full isolation using private IP addresses.

      By sending requests to the `/v2/vpcs` endpoint, you can create, configure, list, and delete custom VPCs as well as retrieve information about the resources assigned to them.
    name: VPCs
paths:
  /v2/1-clicks:
    get:
      description: >
        To list all available 1-Click applications, send a GET request to `/v2/1-clicks`. The `type` may

        be provided as query paramater in order to restrict results to a certain type of 1-Click, for

        example: `/v2/1-clicks?type=droplet`. Current supported types are `kubernetes` and `droplet`.


        The response will be a JSON object with a key called `1_clicks`. This will be set to an array of

        1-Click application data, each of which will contain the the slug and type for the 1-Click.
      operationId: list
      parameters:
        - $ref: "#/components/parameters/1_click_type"
      responses:
        "200":
          $ref: "#/components/responses/all_1_clicks"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List 1-Click Applications
      tags:
        - 1-Click Applications
  /v2/1-clicks/kubernetes:
    post:
      description: >
        To install a Kubernetes 1-Click application on a cluster, send a POST request to

        `/v2/1-clicks/kubernetes`. The `addon_slugs` and `cluster_uuid` must be provided as body

        parameter in order to specify which 1-Click application(s) to install. To list all available

        1-Click Kubernetes applications, send a request to `/v2/1-clicks?type=kubernetes`.
      operationId: install_kubernetes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/1_click_create"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/1_click_create"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Install Kubernetes 1-Click Applications
      tags:
        - 1-Click Applications
  /v2/account:
    get:
      description: To show information about the current user account, send a GET request to `/v2/account`.
      operationId: get_user_information
      responses:
        "200":
          $ref: "#/components/responses/account"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Get User Information
      tags:
        - Account
  /v2/account/keys:
    get:
      description: To list all of the keys in your account, send a GET request to `/v2/account/keys`. The response will be a JSON object with a key set to `ssh_keys`. The value of this will be an array of ssh_key objects, each of which contains the standard ssh_key attributes.
      operationId: list_all_keys
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/all_keys"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All SSH Keys
      tags:
        - SSH Keys
    post:
      description: To add a new SSH public key to your DigitalOcean account, send a POST request to `/v2/account/keys`. Set the `name` attribute to the name you wish to use and the `public_key` attribute to the full public key you are adding.
      operationId: create_ssh_key
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ssh_key"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/key_created"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Create a New SSH Key
      tags:
        - SSH Keys
  "/v2/account/keys/{ssh_key_identifier}":
    delete:
      description: >-
        To destroy a public SSH key that you have in your account, send a DELETE request to `/v2/account/keys/$KEY_ID` or `/v2/account/keys/$KEY_FINGERPRINT`.

        A 204 status will be returned, indicating that the action was successful and that the response body is empty.
      operationId: destroy_ssh_key
      parameters:
        - $ref: "#/components/parameters/ssh_key_identifier"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete an SSH Key
      tags:
        - SSH Keys
    get:
      description: >-
        To get information about a key, send a GET request to `/v2/account/keys/$KEY_ID` or `/v2/account/keys/$KEY_FINGERPRINT`.

        The response will be a JSON object with the key `ssh_key` and value an ssh_key object which contains the standard ssh_key attributes.
      operationId: get_ssh_key
      parameters:
        - $ref: "#/components/parameters/ssh_key_identifier"
      responses:
        "200":
          $ref: "#/components/responses/existing_key"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing SSH Key
      tags:
        - SSH Keys
    patch:
      description: To update the name of an SSH key, send a PUT request to either `/v2/account/keys/$SSH_KEY_ID` or `/v2/account/keys/$SSH_KEY_FINGERPRINT`. Set the `name` attribute to the new name you want to use.
      operationId: patch_ssh_key
      parameters:
        - $ref: "#/components/parameters/ssh_key_identifier"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: "#/components/schemas/ssh_key_name"
              type: object
        description: Set the `name` attribute to the new name you want to use.
        required: true
      responses:
        "200":
          $ref: "#/components/responses/existing_key"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Update an SSH Key's Name
      tags:
        - SSH Keys
  /v2/actions:
    get:
      description: This will be the entire list of actions taken on your account, so it will be quite large.  As with any large collection returned by the API, the results will be paginated with only 20 on each page by default.
      operationId: list_all_actions
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/all_actions"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Actions
      tags:
        - Actions
  "/v2/actions/{action_id}":
    get:
      description: To retrieve a specific action object, send a GET request to `/v2/actions/$ACTION_ID`.
      operationId: get_action
      parameters:
        - $ref: "#/components/parameters/action_id"
      responses:
        "200":
          $ref: "#/components/responses/existing_action"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing Action
      tags:
        - Actions
  /v2/apps:
    get:
      description: List all apps on your account. Information about the current active deployment as well as any in progress ones will also be included for each app.
      operationId: list_apps
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/per_page"
      responses:
        "200":
          $ref: "#/components/responses/list_apps"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Apps
      tags:
        - Apps
    post:
      description: Create a new app by submitting an app specification. For documentation on app specifications (`AppSpec` objects), please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/references/app-specification-reference/).
      operationId: create_app
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/apps_create_app_request"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/new_app"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Create a New App
      tags:
        - Apps
  /v2/apps/detect:
    post:
      description: >-
        Given a git repository, app detection will scan it for supported types of applications and return the first match. You can use this information to aid in the creation of app specifications.


        You may specify either a branch in the source spec or a specific commit hash. Additionally, you may pass a preferred component type to target. For documentation on app specifications (`AppSpec` objects), please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/references/app-specification-reference/).
      operationId: post_detect
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/apps_detect_request"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/detect"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Run App Detection
      tags:
        - Apps
  /v2/apps/regions:
    get:
      description: List all regions supported by App Platform.
      operationId: list_regions
      responses:
        "200":
          $ref: "#/components/responses/list_regions"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List App Regions
      tags:
        - Apps
  /v2/apps/tiers:
    get:
      description: List all app tiers.
      operationId: list_tiers
      responses:
        "200":
          $ref: "#/components/responses/all_tiers"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List App Tiers
      tags:
        - Apps
  /v2/apps/tiers/instance_sizes:
    get:
      description: List all instance sizes for `service`, `worker`, and `job` components.
      operationId: list_instance_sizes
      responses:
        "200":
          $ref: "#/components/responses/list_instance"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List Instance Sizes
      tags:
        - Apps
  "/v2/apps/tiers/instance_sizes/{slug}":
    get:
      description: Retrieve information about a specific instance size for `service`, `worker`, and `job` components.
      operationId: get_instance_size
      parameters:
        - $ref: "#/components/parameters/slug_size"
      responses:
        "200":
          $ref: "#/components/responses/get_instance"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Instance Size
      tags:
        - Apps
  "/v2/apps/tiers/{slug}":
    get:
      description: Retrieve information about a specific app tier.
      operationId: get_tier
      parameters:
        - $ref: "#/components/parameters/slug_tier"
      responses:
        "200":
          $ref: "#/components/responses/get_tier"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an App Tier
      tags:
        - Apps
  "/v2/apps/{app_id}/deployments":
    get:
      description: List all deployments of an app.
      operationId: list_deployments
      parameters:
        - $ref: "#/components/parameters/app_id"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/per_page"
      responses:
        "200":
          $ref: "#/components/responses/existing_deployments"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List App Deployments
      tags:
        - Apps
    post:
      description: Creating an app deployment will pull the latest changes from your repository and schedule a new deployment for your app.
      operationId: create_deployment
      parameters:
        - $ref: "#/components/parameters/app_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/apps_create_deployment_request"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/new_app_deployment"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Create an App Deployment
      tags:
        - Apps
  "/v2/apps/{app_id}/deployments/{deployment_id}":
    get:
      description: Retrieve information about an app deployment.
      operationId: get_deployment
      parameters:
        - $ref: "#/components/parameters/app_id"
        - $ref: "#/components/parameters/deployment_id"
      responses:
        "200":
          $ref: "#/components/responses/list_deployment"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an App Deployment
      tags:
        - Apps
  "/v2/apps/{app_id}/deployments/{deployment_id}/cancel":
    post:
      description: Immediately cancel an in-progress deployment.
      operationId: post_cancel_deployment
      parameters:
        - $ref: "#/components/parameters/app_id"
        - $ref: "#/components/parameters/deployment_id"
      responses:
        "200":
          $ref: "#/components/responses/cancel_deployment"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Cancel a Deployment
      tags:
        - Apps
  "/v2/apps/{app_id}/deployments/{deployment_id}/components/{component_name}/logs":
    get:
      description: Retrieve the logs of a past, in-progress, or active deployment. If a component name is specified, the logs will be limited to only that component. The response will include links to either real-time logs of an in-progress or active deployment or archived logs of a past deployment.
      operationId: get_logs
      parameters:
        - $ref: "#/components/parameters/app_id"
        - $ref: "#/components/parameters/deployment_id"
        - $ref: "#/components/parameters/component"
        - $ref: "#/components/parameters/live_updates"
        - $ref: "#/components/parameters/log_type"
        - $ref: "#/components/parameters/time_wait"
      responses:
        "200":
          $ref: "#/components/responses/list_logs"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve Deployment Logs
      tags:
        - Apps
  "/v2/apps/{app_id}/deployments/{deployment_id}/logs":
    get:
      description: Retrieve the logs of a past, in-progress, or active deployment. If a component name is specified, the logs will be limited to only that component. The response will include links to either real-time logs of an in-progress or active deployment or archived logs of a past deployment.
      operationId: get_logs_aggregate
      parameters:
        - $ref: "#/components/parameters/app_id"
        - $ref: "#/components/parameters/deployment_id"
        - $ref: "#/components/parameters/live_updates"
        - $ref: "#/components/parameters/log_type"
        - $ref: "#/components/parameters/time_wait"
      responses:
        "200":
          $ref: "#/components/responses/list_logs_aggregate"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve Aggregate Deployment Logs
      tags:
        - Apps
  "/v2/apps/{id}":
    delete:
      description: Delete an existing app. Once deleted, all active deployments will be permanently shut down and the app deleted. If needed, be sure to back up your app specification so that you may re-create it at a later time.
      operationId: delete_app
      parameters:
        - $ref: "#/components/parameters/id_app"
      responses:
        "200":
          $ref: "#/components/responses/delete_app"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete an App
      tags:
        - Apps
    get:
      description: Retrieve details about an existing app by either its ID or name. To retrieve an app by its name, do not include an ID in the request path. Information about the current active deployment as well as any in progress ones will also be included in the response.
      operationId: get_app
      parameters:
        - $ref: "#/components/parameters/id_app"
        - $ref: "#/components/parameters/app_name"
      responses:
        "200":
          $ref: "#/components/responses/get_app"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing App
      tags:
        - Apps
    put:
      description: Update an existing app by submiting a new app specification. For documentation on app specifications (`AppSpec` objects), please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/references/app-specification-reference/).
      operationId: update_app
      parameters:
        - $ref: "#/components/parameters/id_app"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/apps_update_app_request"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/update_app"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Update an App
      tags:
        - Apps
  /v2/cdn/endpoints:
    get:
      description: To list all of the CDN endpoints available on your account, send a GET request to `/v2/cdn/endpoints`.
      operationId: list_cdn_endpoints
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/all_cdn_endpoints"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All CDN Endpoints
      tags:
        - CDN Endpoints
    post:
      description: >
        To create a new CDN endpoint, send a POST request to `/v2/cdn/endpoints`. The

        origin attribute must be set to the fully qualified domain name (FQDN) of a

        DigitalOcean Space. Optionally, the TTL may be configured by setting the `ttl`

        attribute.


        A custom subdomain may be configured by specifying the `custom_domain` and

        `certificate_id` attributes.
      operationId: create_cdn_endpoint
      requestBody:
        content:
          application/json:
            examples:
              CDN Endpoint:
                value:
                  origin: static-images.nyc3.digitaloceanspaces.com
                  ttl: 3600
              CDN Endpoint With Custom Domain:
                value:
                  certificate_id: 892071a0-bb95-49bc-8021-3afd67a210bf
                  custom_domain: static.example.com
                  origin: static-images.nyc3.digitaloceanspaces.com
                  ttl: 3600
            schema:
              $ref: "#/components/schemas/cdn_endpoint"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/existing_endpoint"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Create a New CDN Endpoint
      tags:
        - CDN Endpoints
  "/v2/cdn/endpoints/{cdn_id}":
    delete:
      description: >
        To delete a specific CDN endpoint, send a DELETE request to

        `/v2/cdn/endpoints/$ENDPOINT_ID`.


        A status of 204 will be given. This indicates that the request was processed

        successfully, but that no response body is needed.
      operationId: delete_cdn_endpoint
      parameters:
        - $ref: "#/components/parameters/cdn_endpoint_id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete a CDN Endpoint
      tags:
        - CDN Endpoints
    get:
      description: To show information about an existing CDN endpoint, send a GET request to `/v2/cdn/endpoints/$ENDPOINT_ID`.
      operationId: get_cdn_endpoint
      parameters:
        - $ref: "#/components/parameters/cdn_endpoint_id"
      responses:
        "200":
          $ref: "#/components/responses/existing_endpoint"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing CDN Endpoint
      tags:
        - CDN Endpoints
  "/v2/cdn/endpoints/{cdn_id}/cache":
    delete:
      description: >
        To purge cached content from a CDN endpoint, send a DELETE request to

        `/v2/cdn/endpoints/$ENDPOINT_ID/cache`. The body of the request should include

        a `files` attribute containing a list of cached file paths to be purged. A

        path may be for a single file or may contain a wildcard (`*`) to recursively

        purge all files under a directory. When only a wildcard is provided, all

        cached files will be purged.
      operationId: purge_cdn_cache
      parameters:
        - $ref: "#/components/parameters/cdn_endpoint_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/purge_cache"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Purge the Cache for an Existing CDN Endpoint
      tags:
        - CDN Endpoints
  /v2/certificates:
    get:
      description: To list all of the certificates available on your account, send a GET request to `/v2/certificates`.
      operationId: list_certificates
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/all_certificates"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Certificates
      tags:
        - Certificates
    post:
      description: >
        To upload new SSL certificate which you have previously generated, send a POST

        request to `/v2/certificates`.


        When uploading a user-generated certificate, the `private_key`,

        `leaf_certificate`, and optionally the `certificate_chain` attributes should

        be provided. The type must be set to `custom`.


        When using Let's Encrypt to create a certificate, the `dns_names` attribute

        must be provided, and the type must be set to `lets_encrypt`.
      operationId: create_certificates
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/certificate_request_lets_encrypt"
                - $ref: "#/components/schemas/certificate_request_custom"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/new_certificate"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Create a New Certificate
      tags:
        - Certificates
  "/v2/certificates/{certificate_id}":
    delete:
      description: >
        To delete a specific certificate, send a DELETE request to

        `/v2/certificates/$CERTIFICATE_ID`.
      operationId: delete_certificate
      parameters:
        - $ref: "#/components/parameters/certificate_id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete a Certificate
      tags:
        - Certificates
    get:
      description: To show information about an existing certificate, send a GET request to `/v2/certificates/$CERTIFICATE_ID`.
      operationId: get_certificate
      parameters:
        - $ref: "#/components/parameters/certificate_id"
      responses:
        "200":
          $ref: "#/components/responses/existing_certificate"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing Certificate
      tags:
        - Certificates
  /v2/customers/my/balance:
    get:
      description: To retrieve the balances on a customer's account, send a GET request to  `/v2/customers/my/balance`.
      operationId: get_customer_balance
      responses:
        "200":
          $ref: "#/components/responses/balance"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Get Customer Balance
      tags:
        - Balance
  /v2/customers/my/billing_history:
    get:
      description: To retrieve a list of all billing history entries, send a GET request to  `/v2/customers/my/billing_history`.
      operationId: list_billing_history
      responses:
        "200":
          $ref: "#/components/responses/billing_history"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List Billing History
      tags:
        - Billing History
  /v2/customers/my/invoices:
    get:
      description: To retrieve a list of all invoices, send a GET request to  `/v2/customers/my/invoices`.
      operationId: list_invoices
      responses:
        "200":
          $ref: "#/components/responses/invoices"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Invoices
      tags:
        - Invoices
  "/v2/customers/my/invoices/{invoice_uuid}":
    get:
      description: To retrieve the invoice items for an invoice, send a GET request to  `/v2/customers/my/invoices/$INVOICE_UUID`.
      operationId: get_invoice_by_uuid
      parameters:
        - $ref: "#/components/parameters/invoice_uuid"
      responses:
        "200":
          $ref: "#/components/responses/invoice"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Invoice by UUID
      tags:
        - Invoices
  "/v2/customers/my/invoices/{invoice_uuid}/csv":
    get:
      description: To retrieve a CSV for an invoice, send a GET request to  `/v2/customers/my/invoices/$INVOICE_UUID/csv`.
      operationId: get_invoice_csv_by_uuid
      parameters:
        - $ref: "#/components/parameters/invoice_uuid"
      responses:
        "200":
          $ref: "#/components/responses/invoice_csv"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Invoice CSV by UUID
      tags:
        - Invoices
  "/v2/customers/my/invoices/{invoice_uuid}/pdf":
    get:
      description: To retrieve a PDF for an invoice, send a GET request to  `/v2/customers/my/invoices/$INVOICE_UUID/pdf`.
      operationId: get_invoice_pdf_by_uuid
      parameters:
        - $ref: "#/components/parameters/invoice_uuid"
      responses:
        "200":
          $ref: "#/components/responses/invoice_pdf"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Invoice PDF by UUID
      tags:
        - Invoices
  "/v2/customers/my/invoices/{invoice_uuid}/summary":
    get:
      description: To retrieve a summary for an invoice, send a GET request to  `/v2/customers/my/invoices/$INVOICE_UUID/summary`.
      operationId: get_invoice_summary_by_uuid
      parameters:
        - $ref: "#/components/parameters/invoice_uuid"
      responses:
        "200":
          $ref: "#/components/responses/invoice_summary"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Invoice Summary by UUID
      tags:
        - Invoices
  /v2/databases:
    get:
      description: >-
        To list all of the database clusters available on your account, send a GET request to `/v2/databases`. To limit the results to database clusters with a specific tag, include the `tag_name` query parameter set to the name of the tag. For example, `/v2/databases?tag_name=$TAG_NAME`.

        The result will be a JSON object with a `databases` key. This will be set to an array of database objects, each of which will contain the standard database attributes.

        The embedded `connection` and `private_connection` objects will contain the information needed to access the database cluster:

        The embedded `maintenance_window` object will contain information about any scheduled maintenance for the database cluster.
      operationId: list_database_clusters
      parameters:
        - $ref: "#/components/parameters/tag_name"
      responses:
        "200":
          $ref: "#/components/responses/database_clusters"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Database Clusters
      tags:
        - Databases
    post:
      description: >-
        To create a database cluster, send a POST request to `/v2/databases`.

        The response will be a JSON object with a key called `database`. The value of this will be an object that contains the standard attributes associated with a database cluster. The initial value of the database cluster's `status` attribute will be `creating`. When the cluster is ready to receive traffic, this will transition to `online`.

        The embedded `connection` and `private_connection` objects will contain the information needed to access the database cluster.

        DigitalOcean managed PostgreSQL and MySQL database clusters take automated daily backups. To create a new database cluster based on a backup of an exising cluster, send a POST request to `/v2/databases`. In addition to the standard database cluster attributes, the JSON body must include a key named `backup_restore` with the name of the original database cluster and the timestamp of the backup to be restored.

        Note: Backups are not supported for Redis clusters.
      operationId: create_database_cluster
      requestBody:
        content:
          application/json:
            examples:
              Create a New Database Cluster:
                value:
                  engine: pg
                  name: backend
                  num_nodes: 2
                  region: nyc3
                  size: db-s-2vcpu-4gb
                  tags:
                    - production
                  version: "10"
              Restore from a Database Cluster Backup:
                value:
                  backup_restore:
                    backup_created_at: 2019-01-31T19:25:22Z
                    database_name: backend
                  engine: pg
                  name: backend-restored
                  num_nodes: 2
                  region: nyc3
                  size: db-s-2vcpu-4gb
                  version: "10"
            schema:
              allOf:
                - $ref: "#/components/schemas/database_cluster"
                - properties:
                    backup_restore:
                      $ref: "#/components/schemas/database_backup"
                  type: object
        required: true
      responses:
        "201":
          $ref: "#/components/responses/database_cluster"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Create a New Database Cluster
      tags:
        - Databases
  "/v2/databases/{database_cluster_uuid}":
    get:
      description: >-
        To show information about an existing database cluster, send a GET request to `/v2/databases/$DATABASE_ID`.

        The response will be a JSON object with a database key. This will be set to an object containing the standard database cluster attributes.

        The embedded connection and private_connection objects will contain the information needed to access the database cluster.

        The embedded maintenance_window object will contain information about any scheduled maintenance for the database cluster.
      operationId: get_database_cluster
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
      responses:
        "200":
          $ref: "#/components/responses/database_cluster"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing Database Cluster
      tags:
        - Databases
  "/v2/databases/{database_cluster_uuid}/backups":
    get:
      description: >-
        To list all of the available backups of a PostgreSQL or MySQL database cluster, send a GET request to `/v2/databases/$DATABASE_ID/backups`.

        **Note**: Backups are not supported for Redis clusters.

        The result will be a JSON object with a `backups key`. This will be set to an array of backup objects, each of which will contain the size of the backup and the timestamp at which it was created.
      operationId: list_database_backups
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
      responses:
        "200":
          $ref: "#/components/responses/database_backups"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List Backups for a Database Cluster
      tags:
        - Databases
  "/v2/databases/{database_cluster_uuid}/dbs":
    get:
      description: >
        To list all of the databases in a clusters, send a GET request to

        `/v2/databases/$DATABASE_ID/dbs`.


        The result will be a JSON object with a `dbs` key. This will be set to an array

        of database objects, each of which will contain the standard database attributes.


        Note: Database management is not supported for Redis clusters.
      operationId: list_databases
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
      responses:
        "200":
          $ref: "#/components/responses/databases"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Databases
      tags:
        - Databases
    post:
      description: >
        To add a new database to an existing cluster, send a POST request to

        `/v2/databases/$DATABASE_ID/dbs`.


        Note: Database management is not supported for Redis clusters.


        The response will be a JSON object with a key called `db`. The value of this will be

        an object that contains the standard attributes associated with a database.
      operationId: add_database
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
      requestBody:
        content:
          application/json:
            example:
              name: alpha
            schema:
              $ref: "#/components/schemas/database"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/database"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Add a New Database
      tags:
        - Databases
  "/v2/databases/{database_cluster_uuid}/dbs/{database_name}":
    delete:
      description: >
        To delete a specific database, send a DELETE request to

        `/v2/databases/$DATABASE_ID/dbs/$DB_NAME`.


        A status of 204 will be given. This indicates that the request was processed

        successfully, but that no response body is needed.


        Note: Database management is not supported for Redis clusters.
      operationId: delete_database
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
        - $ref: "#/components/parameters/database_name"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete a Database
      tags:
        - Databases
    get:
      description: >
        To show information about an existing database cluster, send a GET request to

        `/v2/databases/$DATABASE_ID/dbs/$DB_NAME`.


        Note: Database management is not supported for Redis clusters.


        The response will be a JSON object with a `db` key. This will be set to an object

        containing the standard database attributes.
      operationId: get_database
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
        - $ref: "#/components/parameters/database_name"
      responses:
        "200":
          $ref: "#/components/responses/database"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing Database
      tags:
        - Databases
  "/v2/databases/{database_cluster_uuid}/eviction_policy":
    get:
      description: >-
        To retrieve the configured eviction policy for an existing Redis cluster, send a GET request to `/v2/databases/$DATABASE_ID/eviction_policy`.

        The response will be a JSON object with an `eviction_policy` key. This will be set to a string representing the eviction policy.
      operationId: get_eviction_policy
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
      responses:
        "200":
          $ref: "#/components/responses/eviction_policy"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve the Eviction Policy for a Redis Cluster
      tags:
        - Databases
    put:
      description: To configure an eviction policy for an existing Redis cluster, send a PUT request to `/v2/databases/$DATABASE_ID/eviction_policy` specifying the desired policy.
      operationId: update_eviction_policy
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
      requestBody:
        content:
          application/json:
            example:
              eviction_policy: allkeys_lru
            schema:
              $ref: "#/components/schemas/eviction_policy"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Configure the Eviction Policy for a Redis Cluster
      tags:
        - Databases
  "/v2/databases/{database_cluster_uuid}/firewall":
    get:
      description: >-
        To list all of a database cluster's firewall rules (known as "trusted sources" in the control panel), send a GET request to `/v2/databases/$DATABASE_ID/firewall`.

        The result will be a JSON object with a `rules` key.
      operationId: list_database_firewalls
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
      responses:
        "200":
          $ref: "#/components/responses/firewall_rules"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List Firewall Rules (Trusted Sources) for a Database Cluster
      tags:
        - Databases
    put:
      description: >-
        To update a database cluster's firewall rules (known as "trusted sources" in the control panel), send a PUT request to `/v2/databases/$DATABASE_ID/firewall` specifying which resources should be able to open connections to the database. You may limit connections to specific Droplets, Kubernetes clusters, or IP addresses. When a tag is provided, any Droplet or Kubernetes node with that tag applied to it will have access. The firewall is limited to 100 rules (or trusted sources). When possible, we recommend [placing your databases into a VPC network](https://www.digitalocean.com/docs/networking/vpc/) to limit access to them instead of using a firewall.

        A successful
      operationId: update_database_firewall
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
      requestBody:
        content:
          application/json:
            example:
              rules:
                - type: ip_addr
                  value: 192.168.1.1
                - type: k8s
                  value: ff2a6c52-5a44-4b63-b99c-0e98e7a63d61
                - type: droplet
                  value: "163973392"
                - type: tag
                  value: backend
            schema:
              properties:
                rules:
                  items:
                    $ref: "#/components/schemas/firewall_rule"
                  type: array
              type: object
        required: true
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Update Firewall Rules (Trusted Sources) for a Database
      tags:
        - Databases
  "/v2/databases/{database_cluster_uuid}/maintenance":
    put:
      description: >-
        To configure the window when automatic maintenance should be performed for a database cluster, send a PUT request to `/v2/databases/$DATABASE_ID/maintenance`.

        A successful request will receive a 204 No Content status code with no body in response.
      operationId: update_maintenance_window
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
      requestBody:
        content:
          application/json:
            example:
              day: tuesday
              hour: 14:00
            schema:
              $ref: "#/components/schemas/database_maintenance_window"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Configure a Database Cluster's Maintenance Window
      tags:
        - Databases
  "/v2/databases/{database_cluster_uuid}/migrate":
    put:
      description: >
        To migrate a database cluster to a new region, send a `PUT` request to

        `/v2/databases/$DATABASE_ID/migrate`. The body of the request must specify a

        `region` attribute.


        A successful request will receive a 202 Accepted status code with no body in

        response. Querying the database cluster will show that its `status` attribute

        will now be set to `migrating`. This will transition back to `online` when the

        migration has completed.
      operationId: update_database_cluster
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
      requestBody:
        content:
          application/json:
            schema:
              example:
                region: lon1
              properties:
                region:
                  description: A slug identifier for the region to which the database cluster will be migrated.
                  example: lon1
                  type: string
              required:
                - region
              type: object
        required: true
      responses:
        "202":
          $ref: "#/components/responses/accepted"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Migrate a Database Cluster to a New Region
      tags:
        - Databases
  "/v2/databases/{database_cluster_uuid}/replicas":
    get:
      description: >-
        To list all of the read-only replicas associated with a database cluster, send a GET request to `/v2/databases/$DATABASE_ID/replicas`.

        **Note**: Read-only replicas are not supported for Redis clusters.

        The result will be a JSON object with a `replicas` key. This will be set to an array of database replica objects, each of which will contain the standard database replica attributes.
      operationId: list_replicas
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
      responses:
        "200":
          $ref: "#/components/responses/database_replicas"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Read-only Replicas
      tags:
        - Databases
    post:
      description: >-
        To create a read-only replica for a PostgreSQL or MySQL database cluster, send a POST request to `/v2/databases/$DATABASE_ID/replicas` specifying the name it should be given, the size of the node to be used, and the region where it will be located.

        **Note**: Read-only replicas are not supported for Redis clusters.

        The response will be a JSON object with a key called `replica`. The value of this will be an object that contains the standard attributes associated with a database replica. The initial value of the read-only replica's `status` attribute will be `forking`. When the replica is ready to receive traffic, this will transition to `active`.
      operationId: create_replica
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
      requestBody:
        content:
          application/json:
            example:
              name: read-nyc3-01
              region: nyc3
              size: db-s-2vcpu-4gb
            schema:
              allOf:
                - $ref: "#/components/schemas/database_replica"
              required:
                - name
                - size
      responses:
        "201":
          $ref: "#/components/responses/database_replica"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Create a Read-only Replica
      tags:
        - Databases
  "/v2/databases/{database_cluster_uuid}/replicas/{replica_name}":
    delete:
      description: >-
        To destroy a specific read-only replica, send a DELETE request to `/v2/databases/$DATABASE_ID/replicas/$REPLICA_NAME`.

        **Note**: Read-only replicas are not supported for Redis clusters.

        A status of 204 will be given. This indicates that the request was processed successfully, but that no response body is needed.
      operationId: destroy_replica
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
        - $ref: "#/components/parameters/replica_name"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Destroy a Read-only Replica
      tags:
        - Databases
    get:
      description: >-
        To show information about an existing database replica, send a GET request to `/v2/databases/$DATABASE_ID/replicas/$REPLICA_NAME`.

        **Note**: Read-only replicas are not supported for Redis clusters.

        The response will be a JSON object with a `replica key`. This will be set to an object containing the standard database replica attributes.
      operationId: get_replica
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
        - $ref: "#/components/parameters/replica_name"
      responses:
        "200":
          $ref: "#/components/responses/database_replica"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing Read-only Replica
      tags:
        - Databases
  "/v2/databases/{database_cluster_uuid}/sql_mode":
    get:
      description: >-
        To retrieve the configured SQL modes for an existing MySQL cluster, send a GET request to `/v2/databases/$DATABASE_ID/sql_mode`.

        The response will be a JSON object with a `sql_mode` key. This will be set to a string representing the configured SQL modes.
      operationId: get_sql_mode
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
      responses:
        "200":
          $ref: "#/components/responses/sql_mode"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve the SQL Modes for a MySQL Cluster
      tags:
        - Databases
    put:
      description: >-
        To configure the SQL modes for an existing MySQL cluster, send a PUT request to `/v2/databases/$DATABASE_ID/sql_mode` specifying the desired modes. See the official MySQL 8 documentation for a [full list of supported SQL modes](https://dev.mysql.com/doc/refman/8.0/en/sql-mode.html#sql-mode-full).

        A successful request will receive a 204 No Content status code with no body in response.
      operationId: update_sql_mode
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
      requestBody:
        content:
          application/json:
            example:
              sql_mode: ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE
            schema:
              $ref: "#/components/schemas/sql_mode"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Configure the Eviction Policy for a Redis Cluster
      tags:
        - Databases
  "/v2/databases/{database_cluster_uuid}/users":
    get:
      description: >
        To list all of the users for your database cluster, send a GET request to

        `/v2/databases/$DATABASE_ID/users`.


        Note: User management is not supported for Redis clusters.


        The result will be a JSON object with a `users` key. This will be set to an array

        of database user objects, each of which will contain the standard database user attributes.


        For MySQL clusters, additional options will be contained in the mysql_settings object.
      operationId: list_users
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
      responses:
        "200":
          $ref: "#/components/responses/users"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List all Database Users
      tags:
        - Databases
    post:
      description: >
        To add a new database user, send a POST request to `/v2/databases/$DATABASE_ID/users`

        with the desired username.


        Note: User management is not supported for Redis clusters.


        When adding a user to a MySQL cluster, additional options can be configured in the

        `mysql_settings` object.


        The response will be a JSON object with a key called `user`. The value of this will be an

        object that contains the standard attributes associated with a database user including

        its randomly generated password.
      operationId: add_user
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
      requestBody:
        content:
          application/json:
            examples:
              Add New User:
                value:
                  name: app-01
              Add New User with MySQL Auth Plugin:
                value:
                  mysql_settings:
                    auth_plugin: mysql_native_password
                  name: app-02
            schema:
              $ref: "#/components/schemas/database_user"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/user"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Add a Database User
      tags:
        - Databases
  "/v2/databases/{database_cluster_uuid}/users/{username}":
    delete:
      description: >
        To remove a specific database user, send a DELETE request to

        `/v2/databases/$DATABASE_ID/users/$USERNAME`.


        A status of 204 will be given. This indicates that the request was processed

        successfully, but that no response body is needed.


        Note: User management is not supported for Redis clusters.
      operationId: delete_user
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
        - $ref: "#/components/parameters/username"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Remove a Database User
      tags:
        - Databases
    get:
      description: >
        To show information about an existing database user, send a GET request to

        `/v2/databases/$DATABASE_ID/users/$USERNAME`.


        Note: User management is not supported for Redis clusters.


        The response will be a JSON object with a `user` key. This will be set to an object

        containing the standard database user attributes.


        For MySQL clusters, additional options will be contained in the mysql_settings

        object.
      operationId: get_user
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
        - $ref: "#/components/parameters/username"
      responses:
        "200":
          $ref: "#/components/responses/user"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing Database User
      tags:
        - Databases
  "/v2/databases/{database_cluster_uuid}/users/{username}/reset_auth":
    post:
      description: >
        To reset the MySQL authentication method for a user, send a POST request to

        `/v2/databases/$DATABASE_ID/users/$USERNAME/reset_auth`. The JSON body must include

        a key called `mysql_settings`.


        Note: Resetting user authentication is not supported for PostgreSQL and Redis clusters.


        The response will be a JSON object with a `user` key. This will be set to an object

        containing the standard database user attributes.
      operationId: reset_auth
      parameters:
        - $ref: "#/components/parameters/database_cluster_uuid"
        - $ref: "#/components/parameters/username"
      requestBody:
        content:
          application/json:
            example:
              mysql_settings:
                auth_plugin: caching_sha2_password
            schema:
              properties:
                mysql_settings:
                  $ref: "#/components/schemas/mysql_settings"
              required:
                - mysql_settings
              type: object
        required: true
      responses:
        "200":
          $ref: "#/components/responses/user"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Reset a Database User's MySQL Authentication Method
      tags:
        - Databases
  /v2/domains:
    get:
      description: To retrieve a list of all of the domains in your account, send a GET request to `/v2/domains`.
      operationId: list_all_domains
      responses:
        "200":
          $ref: "#/components/responses/all_domains_response"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Domains
      tags:
        - Domains
    post:
      description: >
        To create a new domain, send a POST request to `/v2/domains`. Set the "name"

        attribute to the domain name you are adding. Optionally, you may set the

        "ip_address" attribute, and an A record will be automatically created pointing

        to the apex domain.
      operationId: create_domain
      requestBody:
        content:
          application/json:
            examples:
              All Domain Records:
                $ref: "#/components/examples/domain_record_created"
            schema:
              $ref: "#/components/schemas/domain"
      responses:
        "202":
          $ref: "#/components/responses/create_domain_response"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Create a New Domain
      tags:
        - Domains
  "/v2/domains/{domain_name}":
    delete:
      description: >
        To delete a domain, send a DELETE request to `/v2/domains/$DOMAIN_NAME`.
      operationId: delete_domain
      parameters:
        - $ref: "#/components/parameters/domain_name"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete a Domain
      tags:
        - Domains
    get:
      description: To get details about a specific domain, send a GET request to `/v2/domains/$DOMAIN_NAME`.
      operationId: get_domain
      parameters:
        - $ref: "#/components/parameters/domain_name"
      responses:
        "200":
          $ref: "#/components/responses/existing_domain"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing Domain
      tags:
        - Domains
  "/v2/domains/{domain_name}/records":
    get:
      description: >+
        To get a listing of all records configured for a domain, send a GET request to `/v2/domains/$DOMAIN_NAME/records`.

        The list of records returned can be filtered by using the `name` and `type` query parameters. For example, to only include A records for a domain, send a GET request to `/v2/domains/$DOMAIN_NAME/records?type=A`. `name` must be a fully qualified record name. For example, to only include records matching `sub.example.com`, send a GET request to  `/v2/domains/$DOMAIN_NAME/records?name=sub.example.com`. Both name and type may be used together.

      operationId: list_all_domain_records
      parameters:
        - $ref: "#/components/parameters/domain_name"
        - $ref: "#/components/parameters/domain_name_query"
        - $ref: "#/components/parameters/domain_type_query"
      responses:
        "200":
          $ref: "#/components/responses/all_domain_records_response"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Domain Records
      tags:
        - Domain Records
    post:
      description: >
        To create a new record to a domain, send a POST request to

        `/v2/domains/$DOMAIN_NAME/records`.


        The request must include all of the required fields for the domain record type

        being added.


        See the [attribute table](#tag/Domain-Records) for details regarding record

        types and their respective required attributes.
      operationId: create_domain_record
      parameters:
        - $ref: "#/components/parameters/domain_name"
      requestBody:
        content:
          application/json:
            example:
              data: 162.10.66.0
              flags: null
              name: www
              port: null
              priority: null
              tag: null
              ttl: 1800
              type: A
              weight: null
            schema:
              anyOf:
                - $ref: "#/components/schemas/domain_record_a"
                - $ref: "#/components/schemas/domain_record_aaaa"
                - $ref: "#/components/schemas/domain_record_caa"
                - $ref: "#/components/schemas/domain_record_cname"
                - $ref: "#/components/schemas/domain_record_mx"
                - $ref: "#/components/schemas/domain_record_ns"
                - $ref: "#/components/schemas/domain_record_soa"
                - $ref: "#/components/schemas/domain_record_srv"
                - $ref: "#/components/schemas/domain_record_txt"
              discriminator:
                mapping:
                  A: "#/components/schemas/domain_record_a"
                  AAAA: "#/components/schemas/domain_record_aaaa"
                  CAA: "#/components/schemas/domain_record_caa"
                  CNAME: "#/components/schemas/domain_record_cname"
                  MX: "#/components/schemas/domain_record_mx"
                  NS: "#/components/schemas/domain_record_ns"
                  SOA: "#/components/schemas/domain_record_soa"
                  SRV: "#/components/schemas/domain_record_srv"
                  TXT: "#/components/schemas/domain_record_txt"
                propertyName: type
      responses:
        "201":
          $ref: "#/components/responses/created_domain_record"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Create a New Domain Record
      tags:
        - Domain Records
  "/v2/domains/{domain_name}/records/{domain_record_id}":
    delete:
      description: >
        To delete a record for a domain, send a DELETE request to

        `/v2/domains/$DOMAIN_NAME/records/$DOMAIN_RECORD_ID`.


        The record will be deleted and the response status will be a 204. This

        indicates a successful request with no body returned.
      operationId: delete_domain_record
      parameters:
        - $ref: "#/components/parameters/domain_name"
        - $ref: "#/components/parameters/domain_record_id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete a Domain Record
      tags:
        - Domain Records
    get:
      description: To retrieve a specific domain record, send a GET request to `/v2/domains/$DOMAIN_NAME/records/$RECORD_ID`.
      operationId: get_domain_record
      parameters:
        - $ref: "#/components/parameters/domain_name"
        - $ref: "#/components/parameters/domain_record_id"
      responses:
        "200":
          $ref: "#/components/responses/domain_record"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing Domain Record
      tags:
        - Domain Records
    patch:
      description: >
        To update an existing record, send a PATCH request to

        `/v2/domains/$DOMAIN_NAME/records/$DOMAIN_RECORD_ID`. Any attribute valid for

        the record type can be set to a new value for the record.


        See the [attribute table](#tag/Domain-Records) for details regarding record

        types and their respective attributes.
      operationId: patch_update_domain_record
      parameters:
        - $ref: "#/components/parameters/domain_name"
        - $ref: "#/components/parameters/domain_record_id"
      requestBody:
        content:
          application/json:
            example:
              name: blog
            schema:
              $ref: "#/components/schemas/domain_record"
      responses:
        "200":
          $ref: "#/components/responses/domain_record"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Update a Domain Record
      tags:
        - Domain Records
    put:
      description: >
        To update an existing record, send a PUT request to

        `/v2/domains/$DOMAIN_NAME/records/$DOMAIN_RECORD_ID`. Any attribute valid for

        the record type can be set to a new value for the record.


        See the [attribute table](#tag/Domain-Records) for details regarding record

        types and their respective attributes.
      operationId: update_domain_record
      parameters:
        - $ref: "#/components/parameters/domain_name"
        - $ref: "#/components/parameters/domain_record_id"
      requestBody:
        content:
          application/json:
            example:
              name: blog
            schema:
              $ref: "#/components/schemas/domain_record"
      responses:
        "200":
          $ref: "#/components/responses/domain_record"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Update a Domain Record
      tags:
        - Domain Records
  /v2/droplets:
    delete:
      description: >
        To delete **all** Droplets assigned to a specific tag, include the `tag_name`

        query parameter set to the name of the tag in your DELETE request. For

        example,  `/v2/droplets?tag_name=$TAG_NAME`.


        A successful request will receive a 204 status code with no body in response.

        This indicates that the request was processed successfully.
      operationId: destroy_droplets_by_tag
      parameters:
        - $ref: "#/components/parameters/droplet_delete_tag_name"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Deleting Droplets by Tag
      tags:
        - Droplets
    get:
      description: >
        To list all Droplets in your account, send a GET request to `/v2/droplets`.


        The response body will be a JSON object with a key of `droplets`. This will be

        set to an array containing objects each representing a Droplet. These will

        contain the standard Droplet attributes.


        ### Filtering Results by Tag


        It's possible to request filtered results by including certain query parameters.

        To only list Droplets assigned to a specific tag, include the `tag_name` query

        parameter set to the name of the tag in your GET request. For example,

        `/v2/droplets?tag_name=$TAG_NAME`.
      operationId: list_all_droplets
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/droplet_tag_name"
      responses:
        "200":
          $ref: "#/components/responses/all_droplets"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Droplets
      tags:
        - Droplets
    post:
      description: >
        To create a new Droplet, send a POST request to `/v2/droplets` setting the

        required attributes.


        A Droplet will be created using the provided information. The response body

        will contain a JSON object with a key called `droplet`. The value will be an

        object containing the standard attributes for your new Droplet. The response

        code, 202 Accepted, does not indicate the success or failure of the operation,

        just that the request has been accepted for processing. The `actions` returned

        as part of the response's `links` object can be used to check the status

        of the Droplet create event.


        ### Create Multiple Droplets


        Creating multiple Droplets is very similar to creating a single Droplet.

        Instead of sending `name` as a string, send `names` as an array of strings. A

        Droplet will be created for each name you send using the associated

        information. Up to ten Droplets may be created this way at a time.


        Rather than returning a single Droplet, the response body will contain a JSON

        array with a key called `droplets`. This will be set to an array of JSON

        objects, each of which will contain the standard Droplet attributes. The

        response code, 202 Accepted, does not indicate the success or failure of any

        operation, just that the request has been accepted for processing. The array

        of `actions` returned as part of the response's `links` object can be used to

        check the status of each individual Droplet create event.
      operationId: create_droplet
      requestBody:
        content:
          application/json:
            examples:
              Multiple Droplet Create Request:
                $ref: "#/components/examples/droplet_multi_create_request"
              Single Droplet Create Request:
                $ref: "#/components/examples/droplet_create_request"
            schema:
              oneOf:
                - $ref: "#/components/schemas/droplet_single_create"
                - $ref: "#/components/schemas/droplet_multi_create"
      responses:
        "202":
          $ref: "#/components/responses/droplet_create"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Create a New Droplet
      tags:
        - Droplets
  /v2/droplets/actions:
    post:
      description: >
        Some actions can be performed in bulk on tagged Droplets. The actions can be

        initiated by sending a POST to `/v2/droplets/actions?tag_name=$TAG_NAME` with

        the action arguments.


        Only a sub-set of action types are supported:


        - `power_cycle`

        - `power_on`

        - `power_off`

        - `shutdown`

        - `enable_ipv6`

        - `enable_backups`

        - `disable_backups`

        - `snapshot`
      operationId: post_droplet_action_by_tag
      parameters:
        - $ref: "#/components/parameters/droplet_tag_name"
      requestBody:
        content:
          application/json:
            schema:
              discriminator:
                mapping:
                  disable_backups: "#/components/schemas/droplet_action_type"
                  enable_backups: "#/components/schemas/droplet_action_type"
                  enable_ipv6: "#/components/schemas/droplet_action_type"
                  power_cycle: "#/components/schemas/droplet_action_type"
                  power_off: "#/components/schemas/droplet_action_type"
                  power_on: "#/components/schemas/droplet_action_type"
                  shutdown: "#/components/schemas/droplet_action_type"
                  snapshot: "#/components/schemas/droplet_action_snapshot"
                propertyName: type
              oneOf:
                - $ref: "#/components/schemas/droplet_action_type"
                - $ref: "#/components/schemas/droplet_action_snapshot"
        description: >
          The `type` attribute set in the request body will specify the  action that

          will be taken on the Droplet. Some actions will require additional

          attributes to be set as well.
      responses:
        "201":
          $ref: "#/components/responses/droplet_actions"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Acting on Tagged Droplets
      tags:
        - Droplet Actions
  "/v2/droplets/{droplet_id}":
    delete:
      description: >
        To delete a Droplet, send a DELETE request to `/v2/droplets/$DROPLET_ID`.


        A successful request will receive a 204 status code with no body in response.

        This indicates that the request was processed successfully.
      operationId: destroy_droplet
      parameters:
        - $ref: "#/components/parameters/droplet_id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete an Existing Droplet
      tags:
        - Droplets
    get:
      description: >
        To show information about an individual Droplet, send a GET request to

        `/v2/droplets/$DROPLET_ID`.
      operationId: get_droplet
      parameters:
        - $ref: "#/components/parameters/droplet_id"
      responses:
        "200":
          $ref: "#/components/responses/existing_droplet"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing Droplet
      tags:
        - Droplets
  "/v2/droplets/{droplet_id}/actions":
    get:
      description: >
        To retrieve a list of all actions that have been executed for a Droplet, send

        a GET request to `/v2/droplets/$DROPLET_ID/actions`.


        The results will be returned as a JSON object with an `actions` key. This will

        be set to an array filled with `action` objects containing the standard

        `action` attributes.
      operationId: list_droplet_actions
      parameters:
        - $ref: "#/components/parameters/droplet_id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/all_droplet_actions"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List Actions for a Droplet
      tags:
        - Droplet Actions
    post:
      description: >
        To initiate an action on a Droplet send a POST request to

        `/v2/droplets/$DROPLET_ID/actions`. In the JSON body to the request,

        set the `type` attribute to on of the supported action types:


        | Action                                   | Details |

        | ---------------------------------------- | ----------- |

        | <nobr>`enable_backups`</nobr>            | Enables backups for a Droplet |

        | <nobr>`disable_backups`</nobr>           | Disables backups for a Droplet |

        | <nobr>`reboot`</nobr>                    | Reboots a Droplet. A `reboot` action is an attempt to reboot the Droplet in a graceful way, similar to using the `reboot` command from the console. |

        | <nobr>`power_cycle`</nobr>               | Power cycles a Droplet. A `powercycle` action is similar to pushing the reset button on a physical machine, it's similar to booting from scratch. |

        | <nobr>`shutdown`</nobr>                  | Shutsdown a Droplet. A shutdown action is an attempt to shutdown the Droplet in a graceful way, similar to using the `shutdown` command from the console. Since a `shutdown` command can fail, this action guarantees that the command is issued, not that it succeeds. The preferred way to turn off a Droplet is to attempt a shutdown, with a reasonable timeout, followed by a `power_off` action to ensure the Droplet is off. |

        | <nobr>`power_off`</nobr>                 | Powers off a Droplet. A `power_off` event is a hard shutdown and should only be used if the `shutdown` action is not successful. It is similar to cutting the power on a server and could lead to complications. |

        | <nobr>`power_on`</nobr>                  | Powers on a Droplet. |

        | <nobr>`restore`</nobr>                   | Restore a Droplet using a backup image. The image ID that is passed in must be a backup of the current Droplet instance. The operation will leave any embedded SSH keys intact. |

        | <nobr>`password_reset`</nobr>            | Resets the root password for a Droplet. A new password will be provided via email. It must be changed after first use. |

        | <nobr>`resize`</nobr>                    | Resizes a Droplet. Set the `size` attribute to a size slug. If a permanent resize with disk changes included is desired, set the `disk` attribute to `true`. |

        | <nobr>`rebuild`</nobr>                   | Rebuilds a Droplet from a new base image. Set the `image` attribute to an image ID or slug. |

        | <nobr>`rename`</nobr>                    | Renames a Droplet. |

        | <nobr>`change_kernel`</nobr>             | Changes a Droplet's kernel. Only applies to Droplets with externally managed kernels. All Droplets created after March 2017 use internal kernels by default. |

        | <nobr>`enable_ipv6`</nobr>               | Enables IPv6 for a Droplet. |

        | <nobr>`snapshot`</nobr>                  | Takes a snapshot of a Droplet. |
      operationId: post_droplet_action
      parameters:
        - $ref: "#/components/parameters/droplet_id"
      requestBody:
        content:
          application/json:
            schema:
              discriminator:
                mapping:
                  change_kernel: "#/components/schemas/droplet_action_change_kernel"
                  disable_backups: "#/components/schemas/droplet_action_type"
                  enable_backups: "#/components/schemas/droplet_action_type"
                  enable_ipv6: "#/components/schemas/droplet_action_type"
                  password_reset: "#/components/schemas/droplet_action_type"
                  power_cycle: "#/components/schemas/droplet_action_type"
                  power_off: "#/components/schemas/droplet_action_type"
                  power_on: "#/components/schemas/droplet_action_type"
                  reboot: "#/components/schemas/droplet_action_type"
                  rebuild: "#/components/schemas/droplet_action_rebuild"
                  rename: "#/components/schemas/droplet_action_rename"
                  resize: "#/components/schemas/droplet_action_resize"
                  restore: "#/components/schemas/droplet_action_restore"
                  shutdown: "#/components/schemas/droplet_action_type"
                  snapshot: "#/components/schemas/droplet_action_snapshot"
                propertyName: type
              oneOf:
                - $ref: "#/components/schemas/droplet_action_type"
                - $ref: "#/components/schemas/droplet_action_restore"
                - $ref: "#/components/schemas/droplet_action_resize"
                - $ref: "#/components/schemas/droplet_action_rebuild"
                - $ref: "#/components/schemas/droplet_action_rename"
                - $ref: "#/components/schemas/droplet_action_change_kernel"
                - $ref: "#/components/schemas/droplet_action_snapshot"
        description: >
          The `type` attribute set in the request body will specify the  action that

          will be taken on the Droplet. Some actions will require additional

          attributes to be set as well.
      responses:
        "201":
          $ref: "#/components/responses/droplet_action"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Initiate a Droplet Action
      tags:
        - Droplet Actions
  "/v2/droplets/{droplet_id}/actions/{action_id}":
    get:
      description: >
        To retrieve a Droplet action, send a GET request to

        `/v2/droplets/$DROPLET_ID/actions/$ACTION_ID`.


        The response will be a JSON object with a key called `action`. The value will

        be a Droplet action object.
      operationId: get_droplet_action
      parameters:
        - $ref: "#/components/parameters/droplet_id"
        - $ref: "#/components/parameters/action_id"
      responses:
        "200":
          $ref: "#/components/responses/existing_action"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve a Droplet Action
      tags:
        - Droplet Actions
  "/v2/droplets/{droplet_id}/backups":
    get:
      description: >
        To retrieve any backups associated with a Droplet, send a GET request to

        `/v2/droplets/$DROPLET_ID/backups`.


        You will get back a JSON object that has a `backups` key. This will be set to

        an array of backup objects, each of which contain the standard

        Droplet backup attributes.
      operationId: list_droplet_backups
      parameters:
        - $ref: "#/components/parameters/droplet_id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/all_droplet_backups"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List Backups for a Droplet
      tags:
        - Droplets
  "/v2/droplets/{droplet_id}/destroy_with_associated_resources":
    get:
      description: >
        To list the associated billable resources that can be destroyed along with a

        Droplet, send a GET request to the

        `/v2/droplets/$DROPLET_ID/destroy_with_associated_resources` endpoint.


        The response will be a JSON object containing `snapshots`, `volumes`, and

        `volume_snapshots` keys. Each will be set to an array of objects containing

        information about the associated resources.
      operationId: list_associated_resources
      parameters:
        - $ref: "#/components/parameters/droplet_id"
      responses:
        "200":
          $ref: "#/components/responses/associated_resources_list"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List Associated Resources for a Droplet
      tags:
        - Droplets
  "/v2/droplets/{droplet_id}/destroy_with_associated_resources/dangerous":
    delete:
      description: >
        To destroy a Droplet along with all of its associated resources, send a DELETE

        request to the `/v2/droplets/$DROPLET_ID/destroy_with_associated_resources/dangerous`

        endpoint. The headers of this request must include an `X-Dangerous` key set to

        `true`. To preview which resources will be destroyed, first query the

        Droplet's associated resources. This operation _can not_ be reverse and should

        be used with caution.


        A successful response will include a 202 response code and no content. Use the

        status endpoint to check on the success or failure of the destruction of the

        individual resources.
      operationId: destroy_with_associated_resources_dangerous
      parameters:
        - $ref: "#/components/parameters/droplet_id"
        - $ref: "#/components/parameters/x_dangerous"
      responses:
        "202":
          $ref: "#/components/responses/accepted"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Destroy a Droplet and All of its Associated Resources (Dangerous)
      tags:
        - Droplets
  "/v2/droplets/{droplet_id}/destroy_with_associated_resources/retry":
    post:
      description: >
        If the status of a request to destroy a Droplet with its associated resources

        reported any errors, it can be retried by sending a POST request to the

        `/v2/droplets/$DROPLET_ID/destroy_with_associated_resources/retry` endpoint.


        Only one destroy can be active at a time per Droplet. If a retry is issued

        while another destroy is in progress for the Droplet a 409 status code will

        be returned. A successful response will include a 202 response code and no

        content.
      operationId: retry_destroy_with_associated_resource
      parameters:
        - $ref: "#/components/parameters/droplet_id"
      responses:
        "202":
          $ref: "#/components/responses/accepted"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retry a Droplet Destroy with Associated Resources Request
      tags:
        - Droplets
  "/v2/droplets/{droplet_id}/destroy_with_associated_resources/selective":
    delete:
      description: >
        To destroy a Droplet along with a sub-set of its associated resources, send a

        DELETE request to the `/v2/droplets/$DROPLET_ID/destroy_with_associated_resources/selective`

        endpoint. The JSON body of the request should include `snapshots`, `volumes`,

        or `volume_snapshots` keys each set to an array of IDs for the associated

        resources to be destroyed. The IDs can be found by querying the Droplet's

        associated resources. Any associated resource not included in the request

        will remain and continue to accrue changes on your account.


        A successful response will include a 202 response code and no content. Use

        the status endpoint to check on the success or failure of the destruction of

        the individual resources.
      operationId: destroy_with_associated_resources_selective
      parameters:
        - $ref: "#/components/parameters/droplet_id"
      responses:
        "202":
          $ref: "#/components/responses/accepted"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Selectively Destroy a Droplet and its Associated Resources
      tags:
        - Droplets
  "/v2/droplets/{droplet_id}/destroy_with_associated_resources/status":
    get:
      description: >
        To check on the status of a request to destroy a Droplet with its associated

        resources, send a GET request to the

        `/v2/droplets/$DROPLET_ID/destroy_with_associated_resources/status` endpoint.
      operationId: get_destroy_with_associated_resources_status
      parameters:
        - $ref: "#/components/parameters/droplet_id"
      responses:
        "200":
          $ref: "#/components/responses/associated_resources_status"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Check Status of a Droplet Destroy with Associated Resources Request
      tags:
        - Droplets
  "/v2/droplets/{droplet_id}/firewalls":
    get:
      description: >
        To retrieve a list of all firewalls available to a Droplet, send a GET request

        to `/v2/droplets/$DROPLET_ID/firewalls`


        The response will be a JSON object that has a key called `firewalls`. This will

        be set to an array of `firewall` objects, each of which contain the standard

        `firewall` attributes.
      operationId: list_droplet_firewalls
      parameters:
        - $ref: "#/components/parameters/droplet_id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/all_firewalls"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List all Firewalls Applied to a Droplet
      tags:
        - Droplets
  "/v2/droplets/{droplet_id}/kernels":
    get:
      description: >
        To retrieve a list of all kernels available to a Droplet, send a GET request

        to `/v2/droplets/$DROPLET_ID/kernels`


        The response will be a JSON object that has a key called `kernels`. This will

        be set to an array of `kernel` objects, each of which contain the standard

        `kernel` attributes.
      operationId: list_droplet_kernels
      parameters:
        - $ref: "#/components/parameters/droplet_id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/all_kernels"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Available Kernels for a Droplet
      tags:
        - Droplets
  "/v2/droplets/{droplet_id}/neighbors":
    get:
      description: >
        To retrieve a list of any "neighbors" (i.e. Droplets that are co-located on

        the same physical hardware) for a specific Droplet, send a GET request to

        `/v2/droplets/$DROPLET_ID/neighbors`.


        The results will be returned as a JSON object with a key of `droplets`. This

        will be set to an array containing objects representing any other Droplets

        that share the same physical hardware. An empty array indicates that the

        Droplet is not co-located any other Droplets associated with your account.
      operationId: list_droplet_neighbors
      parameters:
        - $ref: "#/components/parameters/droplet_id"
      responses:
        "200":
          $ref: "#/components/responses/neighbor_droplets"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List Neighbors for a Droplet
      tags:
        - Droplets
  "/v2/droplets/{droplet_id}/snapshots":
    get:
      description: >
        To retrieve the snapshots that have been created from a Droplet, send a GET

        request to `/v2/droplets/$DROPLET_ID/snapshots`.


        You will get back a JSON object that has a `snapshots` key. This will be set

        to an array of snapshot objects, each of which contain the standard Droplet

        snapshot attributes.
      operationId: list_droplet_snapshots
      parameters:
        - $ref: "#/components/parameters/droplet_id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/all_droplet_snapshots"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List Snapshots for a Droplet
      tags:
        - Droplets
  /v2/firewalls:
    get:
      description: To list all of the firewalls available on your account, send a GET request to `/v2/firewalls`.
      operationId: list_firewalls
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/list_firewalls_response"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Firewalls
      tags:
        - Firewalls
    post:
      description: >
        To create a new firewall, send a POST request to `/v2/firewalls`. The request

        must contain at least one inbound or outbound access rule. 
      operationId: create_firewall
      requestBody:
        content:
          application/json:
            example:
              droplet_ids:
                - 8043964
              inbound_rules:
                - ports: "80"
                  protocol: tcp
                  sources:
                    load_balancer_uids:
                      - 4de7ac8b-495b-4884-9a69-1050c6793cd6
                - ports: "22"
                  protocol: tcp
                  sources:
                    addresses:
                      - 18.0.0.0/8
                    tags:
                      - gateway
              name: firewall
              outbound_rules:
                - destinations:
                    addresses:
                      - 0.0.0.0/0
                      - ::/0
                  ports: "80"
                  protocol: tcp
            schema:
              allOf:
                - $ref: "#/components/schemas/firewall"
                - required:
                    - name
                - anyOf:
                    - required:
                        - inbound_rules
                      title: Inbound Rules
                    - required:
                        - outbound_rules
                      title: Outbound Rules
      responses:
        "202":
          $ref: "#/components/responses/create_firewall_response"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Create a New Firewall
      tags:
        - Firewalls
  "/v2/firewalls/{firewall_id}":
    delete:
      description: >
        To delete a firewall send a DELETE request to `/v2/firewalls/$FIREWALL_ID`.


        No response body will be sent back, but the response code will indicate

        success. Specifically, the response code will be a 204, which means that the

        action was successful with no returned body data.
      operationId: delete_firewall
      parameters:
        - $ref: "#/components/parameters/firewall_id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete a Firewall
      tags:
        - Firewalls
    get:
      description: To show information about an existing firewall, send a GET request to `/v2/firewalls/$FIREWALL_ID`.
      operationId: get_firewall
      parameters:
        - $ref: "#/components/parameters/firewall_id"
      responses:
        "200":
          $ref: "#/components/responses/get_firewall_response"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing Firewall
      tags:
        - Firewalls
    put:
      description: >
        To update the configuration of an existing firewall, send a PUT request to

        `/v2/firewalls/$FIREWALL_ID`. The requestshould contain a full representation

        of the firewall including existing attributes. **Note that any attributes that

        are not provided will be reset to their default values.**
      operationId: update_firewall
      parameters:
        - $ref: "#/components/parameters/firewall_id"
      requestBody:
        content:
          application/json:
            example:
              droplet_ids:
                - 8043964
              inbound_rules:
                - ports: "8080"
                  protocol: tcp
                  sources:
                    load_balancer_uids:
                      - 4de7ac8b-495b-4884-9a69-1050c6793cd6
                - ports: "22"
                  protocol: tcp
                  sources:
                    addresses:
                      - 18.0.0.0/8
                    tags:
                      - gateway
              name: frontend-firewall
              outbound_rules:
                - destinations:
                    addresses:
                      - 0.0.0.0/0
                      - ::/0
                  ports: "8080"
                  protocol: tcp
              tags:
                - frontend
            schema:
              allOf:
                - $ref: "#/components/schemas/firewall"
                - anyOf:
                    - required:
                        - inbound_rules
                      title: Inbound Rules
                    - required:
                        - outbound_rules
                      title: Outbound Rules
      responses:
        "202":
          $ref: "#/components/responses/put_firewall_response"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Update a Firewall
      tags:
        - Firewalls
  "/v2/firewalls/{firewall_id}/droplets":
    delete:
      description: >
        To remove a Droplet from a firewall, send a DELETE request to 

        `/v2/firewalls/$FIREWALL_ID/droplets`. In the body of the request, there should

        be a `droplet_ids` attribute containing a list of Droplet IDs.


        No response body will be sent back, but the response code will indicate

        success. Specifically, the response code will be a 204, which means that the

        action was successful with no returned body data.
      operationId: delete_firewall_droplets
      parameters:
        - $ref: "#/components/parameters/firewall_id"
      requestBody:
        content:
          application/json:
            example:
              droplet_ids:
                - 49696269
            schema:
              properties:
                droplet_ids:
                  description: "An array containing the IDs of the Droplets to be removed from the firewall.\t"
                  example:
                    - 49696269
                  items:
                    type: integer
                  type: array
              required:
                - droplet_ids
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Remove Droplets from a Firewall
      tags:
        - Firewalls
    post:
      description: >
        To assign a Droplet to a firewall, send a POST request to

        `/v2/firewalls/$FIREWALL_ID/droplets`. In the body of the request, there

        should be a `droplet_ids` attribute containing a list of Droplet IDs.


        No response body will be sent back, but the response code will indicate

        success. Specifically, the response code will be a 204, which means that the

        action was successful with no returned body data.
      operationId: add_firewall_droplets
      parameters:
        - $ref: "#/components/parameters/firewall_id"
      requestBody:
        content:
          application/json:
            example:
              droplet_ids:
                - 49696269
            schema:
              properties:
                droplet_ids:
                  description: An array containing the IDs of the Droplets to be assigned to the firewall.
                  example:
                    - 49696269
                  items:
                    type: integer
                  type: array
              required:
                - droplet_ids
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Add Droplets to a Firewall
      tags:
        - Firewalls
  "/v2/firewalls/{firewall_id}/rules":
    delete:
      description: >
        To remove access rules from a firewall, send a DELETE request to 

        `/v2/firewalls/$FIREWALL_ID/rules`. The body of the request may include an

        `inbound_rules` and/or `outbound_rules` attribute containing an array of rules

        to be removed.


        No response body will be sent back, but the response code will indicate

        success. Specifically, the response code will be a 204, which means that the

        action was successful with no returned body data.
      operationId: delete_firewall_rules
      parameters:
        - $ref: "#/components/parameters/firewall_id"
      requestBody:
        content:
          application/json:
            example:
              inbound_rules:
                - ports: "3306"
                  protocol: tcp
                  sources:
                    droplet_ids:
                      - 49696269
              outbound_rules:
                - destinations:
                    droplet_ids:
                      - 49696269
                  ports: "3306"
                  protocol: tcp
            schema:
              allOf:
                - $ref: "#/components/schemas/firewall_rules"
                - anyOf:
                    - required:
                        - inbound_rules
                      title: Inbound Rules
                    - required:
                        - outbound_rules
                      title: Outbound Rules
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Remove Rules from a Firewall
      tags:
        - Firewalls
    post:
      description: >
        To add additional access rules to a firewall, send a POST request to

        `/v2/firewalls/$FIREWALL_ID/rules`. The body of the request may include an

        inbound_rules and/or outbound_rules attribute containing an array of rules to

        be added.


        No response body will be sent back, but the response code will indicate

        success. Specifically, the response code will be a 204, which means that the

        action was successful with no returned body data.
      operationId: add_firewall_rules
      parameters:
        - $ref: "#/components/parameters/firewall_id"
      requestBody:
        content:
          application/json:
            example:
              inbound_rules:
                - ports: "3306"
                  protocol: tcp
                  sources:
                    droplet_ids:
                      - 49696269
              outbound_rules:
                - destinations:
                    droplet_ids:
                      - 49696269
                  ports: "3306"
                  protocol: tcp
            schema:
              allOf:
                - $ref: "#/components/schemas/firewall_rules"
                - anyOf:
                    - required:
                        - inbound_rules
                      title: Inbound Rules
                    - required:
                        - outbound_rules
                      title: Outbound Rules
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Add Rules to a Firewall
      tags:
        - Firewalls
  "/v2/firewalls/{firewall_id}/tags":
    delete:
      description: >
        To remove a tag representing a group of Droplets from a firewall, send a

        DELETE request to `/v2/firewalls/$FIREWALL_ID/tags`. In the body of the

        request, there should be a `tags` attribute containing a list of tag names.


        No response body will be sent back, but the response code will indicate

        success. Specifically, the response code will be a 204, which means that the

        action was successful with no returned body data.
      operationId: delete_firewall_tags
      parameters:
        - $ref: "#/components/parameters/firewall_id"
      requestBody:
        content:
          application/json:
            example:
              tags:
                - frontend
            schema:
              properties:
                tags:
                  allOf:
                    - $ref: "#/components/schemas/tags_array"
                    - description: "An array containing the names of the Tags to be removed from the firewall.\t"
              required:
                - tags
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Remove Tags from a Firewall
      tags:
        - Firewalls
    post:
      description: >
        To assign a tag representing a group of Droplets to a firewall, send a POST

        request to `/v2/firewalls/$FIREWALL_ID/tags`. In the body of the request,

        there should be a `tags` attribute containing a list of tag names.


        No response body will be sent back, but the response code will indicate

        success. Specifically, the response code will be a 204, which means that the

        action was successful with no returned body data.
      operationId: add_firewall_tags
      parameters:
        - $ref: "#/components/parameters/firewall_id"
      requestBody:
        content:
          application/json:
            example:
              tags:
                - frontend
            schema:
              properties:
                tags:
                  allOf:
                    - $ref: "#/components/schemas/tags_array"
                    - description: An array containing the names of the Tags to be assigned to the firewall.
              required:
                - tags
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Add Tags to a Firewall
      tags:
        - Firewalls
  /v2/floating_ips:
    get:
      description: To list all of the floating IPs available on your account, send a GET request to `/v2/floating_ips`.
      operationId: list_floating_ips
      responses:
        "200":
          $ref: "#/components/responses/floating_ip_list"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Floating IPs
      tags:
        - Floating IPs
    post:
      description: >-
        On creation, a floating IP must be either assigned to a Droplet or reserved to a region.

        * To create a new floating IP assigned to a Droplet, send a POST
          request to `/v2/floating_ips` with the `droplet_id` attribute.

        * To create a new floating IP reserved to a region, send a POST request to
          `/v2/floating_ips` with the `region` attribute.

        **Note**:  In addition to the standard rate limiting, only 12 floating IPs may be created per 60 seconds.
      operationId: create_floating_ip
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/floating_ip_create"
        required: true
      responses:
        "202":
          $ref: "#/components/responses/floating_ip_created"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Create a New Floating IP
      tags:
        - Floating IPs
  "/v2/floating_ips/{floating_ip}":
    delete:
      description: >
        To delete a floating IP and remove it from your account, send a DELETE request

        to `/v2/floating_ips/$FLOATING_IP_ADDR`.


        A successful request will receive a 204 status code with no body in response.

        This indicates that the request was processed successfully.
      operationId: delete_floating_ip
      parameters:
        - $ref: "#/components/parameters/floating_ip"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete a Floating IPs
      tags:
        - Floating IPs
    get:
      description: To show information about a floating IP, send a GET request to `/v2/floating_ips/$FLOATING_IP_ADDR`.
      operationId: get_floating_ip
      parameters:
        - $ref: "#/components/parameters/floating_ip"
      responses:
        "200":
          $ref: "#/components/responses/floating_ip"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing Floating IP
      tags:
        - Floating IPs
  "/v2/floating_ips/{floating_ip}/actions":
    get:
      description: To retrieve all actions that have been executed on a floating IP, send a GET request to `/v2/floating_ips/$FLOATING_IP/actions`.
      operationId: list_floating_ip_actions
      parameters:
        - $ref: "#/components/parameters/floating_ip"
      responses:
        "200":
          $ref: "#/components/responses/floating_ip_actions"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Actions for a Floating IP
      tags:
        - Floating IP Actions
    post:
      description: >
        To initiate an action on a floating IP send a POST request to

        `/v2/floating_ips/$FLOATING_IP/actions`. In the JSON body to the request,

        set the `type` attribute to on of the supported action types:


        | Action     | Details

        |------------|--------

        | `assign`   | Assigns a floating IP to a Droplet

        | `unassign` | Unassign a floating IP from a Droplet
      operationId: post_floating_ip_action
      parameters:
        - $ref: "#/components/parameters/floating_ip"
      requestBody:
        content:
          application/json:
            schema:
              discriminator:
                mapping:
                  assign: "#/components/schemas/floating_ip_action_assign"
                  unassign: "#/components/schemas/floating_ip_action_unassign"
                propertyName: type
              oneOf:
                - $ref: "#/components/schemas/floating_ip_action_unassign"
                - $ref: "#/components/schemas/floating_ip_action_assign"
        description: >
          The `type` attribute set in the request body will specify the action that

          will be taken on the floating IP.
      responses:
        "201":
          $ref: "#/components/responses/floating_ip_action"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Initiate a Floating IP Action
      tags:
        - Floating IP Actions
  "/v2/floating_ips/{floating_ip}/actions/{action_id}":
    get:
      description: To retrieve the status of a floating IP action, send a GET request to `/v2/floating_ips/$FLOATING_IP/actions/$ACTION_ID`.
      operationId: get_floating_ip_action
      parameters:
        - $ref: "#/components/parameters/floating_ip"
        - $ref: "#/components/parameters/action_id"
      responses:
        "200":
          $ref: "#/components/responses/floating_ip_action"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing Floating IP Action
      tags:
        - Floating IP Actions
  /v2/images:
    get:
      description: >
        To list all of the images available on your account, send a GET request to /v2/images.


        ## Filtering Results

        -----


        It's possible to request filtered results by including certain query parameters.


        **Image Type**


        Either 1-Click Application or OS Distribution images can be filtered by using the `type` query parameter.


        > Important: The `type` query parameter does not directly relate to the `type` attribute.


        To retrieve only ***distribution*** images, include the `type` query parameter set to distribution, `/v2/images?type=distribution`.


        To retrieve only ***application*** images, include the `type` query parameter set to application, `/v2/images?type=application`.


        **User Images**


        To retrieve only the private images of a user, include the `private` query parameter set to true, `/v2/images?private=true`.


        **Tags**


        To list all images assigned to a specific tag, include the `tag_name` query parameter set to the name of the tag in your GET request. For example, `/v2/images?tag_name=$TAG_NAME`.
      operationId: get_images_list
      parameters:
        - $ref: "#/components/parameters/type"
        - $ref: "#/components/parameters/private"
        - $ref: "#/components/parameters/tag"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/all_images"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Images
      tags:
        - Images
    post:
      description: >
        To create a new custom image, send a POST request to /v2/images.

        The body must contain a url attribute pointing to a Linux virtual machine

        image to be imported into DigitalOcean.

        The image must be in the raw, qcow2, vhdx, vdi, or vmdk format.

        It may be compressed using gzip or bzip2 and must be smaller than 100 GB after
         being decompressed.
      operationId: create_custom_image
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/image_new_custom"
        required: true
      responses:
        "202":
          $ref: "#/components/responses/new_custom_image"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Create a Custom Image
      tags:
        - Images
  "/v2/images/{image_id}":
    delete:
      description: >
        To delete a snapshot or custom image, send a `DELETE` request to `/v2/images/$IMAGE_ID`.
      operationId: delete_image
      parameters:
        - $ref: "#/components/parameters/image_id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete an Image
      tags:
        - Images
    get:
      description: >
        To retrieve information about an image, send a `GET` request to 

        `/v2/images/$IDENTIFIER`.  
      operationId: get_image
      parameters:
        - description: >
            A unique number (id) or string (slug) used to identify and reference a 

            specific image.


            **Public** images can be identified by image `id` or `slug`.


            **Private** images *must* be identified by image `id`.
          examples:
            byId:
              summary: Retrieve a public or private image by id
              value: 62137902
            bySlug:
              summary: Retrieve a public image by slug
              value: ubuntu-16-04-x64
          in: path
          name: image_id
          required: true
          schema:
            oneOf:
              - type: integer
              - type: string
      responses:
        "200":
          $ref: "#/components/responses/existing_image"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing Image
      tags:
        - Images
    put:
      description: >
        To update an image, send a `PUT` request to `/v2/images/$IMAGE_ID`.

        Set the `name` attribute to the new value you would like to use.

        For custom images, the `description` and `distribution` attributes may also be updated.
      operationId: update_image
      parameters:
        - $ref: "#/components/parameters/image_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/image_update"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/updated_image"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Update an Image
      tags:
        - Images
  "/v2/images/{image_id}/actions":
    get:
      description: To retrieve all actions that have been executed on an image, send a GET request to `/v2/images/$IMAGE_ID/actions`.
      operationId: list_image_actions
      parameters:
        - $ref: "#/components/parameters/image_id"
      responses:
        "200":
          $ref: "#/components/responses/get_image_actions_response"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Actions for an Image
      tags:
        - Image Actions
    post:
      description: >
        The following actions are available on an Image.


        ## Convert an Image to a Snapshot


        To convert an image, for example, a backup to a snapshot, send a POST request

        to `/v2/images/$IMAGE_ID/actions`. Set the `type` attribute to `convert`.


        ## Transfer an Image


        To transfer an image to another region, send a POST request to

        `/v2/images/$IMAGE_ID/actions`. Set the `type` attribute to `transfer` and set

        `region` attribute to the slug identifier of the region you wish to transfer

        to.
      operationId: post_image_action
      parameters:
        - $ref: "#/components/parameters/image_id"
      requestBody:
        content:
          application/json:
            schema:
              discriminator:
                mapping:
                  convert: "#/components/schemas/image_action_base"
                  transfer: "#/components/schemas/image_action_transfer"
                propertyName: type
              oneOf:
                - $ref: "#/components/schemas/image_action_base"
                - $ref: "#/components/schemas/image_action_transfer"
      responses:
        "202":
          $ref: "#/components/responses/post_image_action_response"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Initiate an Image Action
      tags:
        - Image Actions
  "/v2/images/{image_id}/actions/{action_id}":
    get:
      description: To retrieve the status of an image action, send a GET request to `/v2/images/$IMAGE_ID/actions/$IMAGE_ACTION_ID`.
      operationId: get_image_action
      parameters:
        - $ref: "#/components/parameters/image_id"
        - $ref: "#/components/parameters/action_id"
      responses:
        "200":
          $ref: "#/components/responses/get_image_action_response"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retreive an Existing Action
      tags:
        - Image Actions
  /v2/kubernetes/clusters:
    get:
      description: >
        To list all of the Kubernetes clusters on your account, send a GET request

        to `/v2/kubernetes/clusters`.
      operationId: list_all_kubernetes_clusters
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/all_clusters"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Kubernetes Clusters
      tags:
        - Kubernetes
    post:
      description: >
        To create a new Kubernetes cluster, send a POST request to

        `/v2/kubernetes/clusters`. The request must contain at least one node pool

        with at least one worker.


        The request may contain a maintenance window policy describing a time period

        when disruptive maintenance tasks may be carried out. Omitting the policy

        implies that a window will be chosen automatically. See

        [here](https://www.digitalocean.com/docs/kubernetes/how-to/upgrade-cluster/)

        for details.
      operationId: create_kubernetes_cluster
      requestBody:
        content:
          application/json:
            examples:
              Kubernetes Cluster Request:
                $ref: "#/components/examples/kubernetes_clusters_basic_request"
              Kubernetes Cluster with Multiple Node Pools Request:
                $ref: "#/components/examples/kubernetes_clusters_multi_pool_request"
            schema:
              $ref: "#/components/schemas/cluster"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/cluster_create"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Create a New Kubernetes Cluster
      tags:
        - Kubernetes
  "/v2/kubernetes/clusters/{cluster_id}":
    delete:
      description: >
        To delete a Kubernetes cluster and all services deployed to it, send a DELETE

        request to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID`.


        A 204 status code with no body will be returned in response to a successful

        request.
      operationId: delete_kubernetes_cluster
      parameters:
        - $ref: "#/components/parameters/kubernetes_cluster_id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete a Kubernetes Cluster
      tags:
        - Kubernetes
    get:
      description: >
        To show information about an existing Kubernetes cluster, send a GET request

        to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID`.
      operationId: get_kubernetes_cluster
      parameters:
        - $ref: "#/components/parameters/kubernetes_cluster_id"
      responses:
        "200":
          $ref: "#/components/responses/existing_cluster"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing Kubernetes Cluster
      tags:
        - Kubernetes
    put:
      description: >
        To update a Kubernetes cluster, send a PUT request to

        `/v2/kubernetes/clusters/$K8S_CLUSTER_ID` and specify one or more of the

        attributes below.
      operationId: update_kubernetes_cluster
      parameters:
        - $ref: "#/components/parameters/kubernetes_cluster_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cluster_update"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/updated_cluster"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Update a Kubernetes Cluster
      tags:
        - Kubernetes
  "/v2/kubernetes/clusters/{cluster_id}/clusterlint":
    get:
      description: >
        To request clusterlint diagnostics for your cluster, send a GET request to

        `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/clusterlint`. If the `run_id` query

        parameter is provided, then the diagnostics for the specific run is fetched.

        By default, the latest results are shown.


        To find out how to address clusterlint feedback, please refer to

        [the clusterlint check documentation](https://github.com/digitalocean/clusterlint/blob/master/checks.md).
      operationId: get_clusterlint_results
      parameters:
        - $ref: "#/components/parameters/kubernetes_cluster_id"
        - $ref: "#/components/parameters/clusterlint_run_id"
      responses:
        "200":
          $ref: "#/components/responses/clusterlint_results"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Fetch Clusterlint Diagnostics for a Kubernetes Cluster
      tags:
        - Kubernetes
    post:
      description: >
        Clusterlint helps operators conform to Kubernetes best practices around

        resources, security and reliability to avoid common problems while operating

        or upgrading the clusters.


        To request a clusterlint run on your cluster, send a POST request to

        `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/clusterlint`. This will run all

        checks present in the `doks` group by default, if a request body is not

        specified. Optionally specify the below attributes.


        For information about the available checks, please refer to

        [the clusterlint check documentation](https://github.com/digitalocean/clusterlint/blob/master/checks.md).
      operationId: run_clusterlint
      parameters:
        - $ref: "#/components/parameters/kubernetes_cluster_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/clusterlint_request"
      responses:
        "202":
          $ref: "#/components/responses/clusterlint_run"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Run Clusterlint Checks on a Kubernetes Cluster
      tags:
        - Kubernetes
  "/v2/kubernetes/clusters/{cluster_id}/credentials":
    get:
      description: >
        This endpoint returns a JSON object . It can be used to programmatically

        construct Kubernetes clients which cannot parse kubeconfig files.


        The resulting JSON object contains token-based authentication for clusters

        supporting it, and certificate-based authentication otherwise. For a list of

        supported versions and more information, see "[How to Connect to a DigitalOcean

        Kubernetes Cluster with kubectl](https://www.digitalocean.com/docs/kubernetes/how-to/connect-with-kubectl/)".


        To retrieve credentials for accessing a Kubernetes cluster, send a GET

        request to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/credentials`.


        Clusters supporting token-based authentication may define an expiration by

        passing a duration in seconds as a query parameter to

        `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/kubeconfig?expiry_seconds=$DURATION_IN_SECONDS`.

        If not set or 0, then the token will have a 7 day expiry. The query parameter

        has no impact in certificate-based authentication.
      operationId: get_credentials
      parameters:
        - $ref: "#/components/parameters/kubernetes_cluster_id"
        - $ref: "#/components/parameters/kubernetes_expiry_seconds"
      responses:
        "200":
          $ref: "#/components/responses/credentials"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve Credentials for a Kubernetes Cluster
      tags:
        - Kubernetes
  "/v2/kubernetes/clusters/{cluster_id}/kubeconfig":
    get:
      description: >
        This endpoint returns a kubeconfig file in YAML format. It can be used to

        connect to and administer the cluster using the Kubernetes command line tool,

        `kubectl`, or other programs supporting kubeconfig files (e.g., client libraries).


        The resulting kubeconfig file uses token-based authentication for clusters

        supporting it, and certificate-based authentication otherwise. For a list of

        supported versions and more information, see "[How to Connect to a DigitalOcean

        Kubernetes Cluster with kubectl](https://www.digitalocean.com/docs/kubernetes/how-to/connect-with-kubectl/)".


        To retrieve a kubeconfig file for use with a Kubernetes cluster, send a GET

        request to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/kubeconfig`.


        Clusters supporting token-based authentication may define an expiration by

        passing a duration in seconds as a query parameter to

        `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/kubeconfig?expiry_seconds=$DURATION_IN_SECONDS`.

        If not set or 0, then the token will have a 7 day expiry. The query parameter

        has no impact in certificate-based authentication.
      operationId: get_kubeconfig
      parameters:
        - $ref: "#/components/parameters/kubernetes_cluster_id"
        - $ref: "#/components/parameters/kubernetes_expiry_seconds"
      responses:
        "200":
          $ref: "#/components/responses/kubeconfig"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve the kubeconfig for a Kubernetes Cluster
      tags:
        - Kubernetes
  "/v2/kubernetes/clusters/{cluster_id}/node_pools":
    get:
      description: >
        To list all of the node pools in a Kubernetes clusters, send a GET request to

        `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools`.
      operationId: list_node_pools
      parameters:
        - $ref: "#/components/parameters/kubernetes_cluster_id"
      responses:
        "200":
          $ref: "#/components/responses/all_node_pools"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Node Pools in a Kubernetes Clusters
      tags:
        - Kubernetes
    post:
      description: >
        To add an additional node pool to a Kubernetes clusters, send a POST request

        to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools` with the following

        attributes.
      operationId: add_kubernetes_node_pool
      parameters:
        - $ref: "#/components/parameters/kubernetes_cluster_id"
      requestBody:
        content:
          application/json:
            example:
              auto_scale: true
              count: 3
              max_nodes: 6
              min_nodes: 3
              name: new-pool
              size: s-1vcpu-2gb
              tags:
                - frontend
            schema:
              $ref: "#/components/schemas/kubernetes_node_pool"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/node_pool_create"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Add a Node Pool to a Kubernetes Cluster
      tags:
        - Kubernetes
  "/v2/kubernetes/clusters/{cluster_id}/node_pools/{node_pool_id}":
    delete:
      description: >
        To delete a node pool, send a DELETE request to

        `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools/$NODE_POOL_ID`.


        A 204 status code with no body will be returned in response to a successful

        request. Nodes in the pool will subsequently be drained and deleted.
      operationId: delete_kubernetes_node_pool
      parameters:
        - $ref: "#/components/parameters/kubernetes_cluster_id"
        - $ref: "#/components/parameters/kubernetes_node_pool_id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete a Node Pool in a Kubernetes Cluster
      tags:
        - Kubernetes
    get:
      description: >
        To show information about a specific node pool in a Kubernetes cluster, send

        a GET request to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools/$NODE_POOL_ID`.
      operationId: get_node_pool
      parameters:
        - $ref: "#/components/parameters/kubernetes_cluster_id"
        - $ref: "#/components/parameters/kubernetes_node_pool_id"
      responses:
        "200":
          $ref: "#/components/responses/existing_node_pool"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve a Node Pool for a Kubernetes Cluster
      tags:
        - Kubernetes
    put:
      description: >
        To update the name of a node pool, edit the tags applied to it, or adjust its

        number of nodes, send a PUT request to

        `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools/$NODE_POOL_ID` with the

        following attributes.
      operationId: update_kubernetes_node_pool
      parameters:
        - $ref: "#/components/parameters/kubernetes_cluster_id"
        - $ref: "#/components/parameters/kubernetes_node_pool_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/kubernetes_node_pool_update"
        required: true
      responses:
        "202":
          $ref: "#/components/responses/node_pool_update"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Update a Node Pool in a Kubernetes Cluster
      tags:
        - Kubernetes
  "/v2/kubernetes/clusters/{cluster_id}/node_pools/{node_pool_id}/nodes/{node_id}":
    delete:
      description: >
        To delete a single node in a pool, send a DELETE request to

        `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools/$NODE_POOL_ID/nodes/$NODE_ID`.


        Appending the `skip_drain=1` query parameter to the request causes node

        draining to be skipped. Omitting the query parameter or setting its value to

        `0` carries out draining prior to deletion.


        Appending the `replace=1` query parameter to the request causes the node to

        be replaced by a new one after deletion. Omitting the query parameter or

        setting its value to `0` deletes without replacement.
      operationId: delete_kubernetes_node
      parameters:
        - $ref: "#/components/parameters/kubernetes_cluster_id"
        - $ref: "#/components/parameters/kubernetes_node_pool_id"
        - $ref: "#/components/parameters/kubernetes_node_id"
        - $ref: "#/components/parameters/kubernetes_node_skip_drain"
        - $ref: "#/components/parameters/kubernetes_node_replace"
      responses:
        "202":
          $ref: "#/components/responses/accepted"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete a Node in a Kubernetes Cluster
      tags:
        - Kubernetes
  "/v2/kubernetes/clusters/{cluster_id}/node_pools/{node_pool_id}/recycle":
    post:
      deprecated: true
      description: >
        The endpoint has been deprecated. Please use the DELETE

        `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools/$NODE_POOL_ID/nodes/$NODE_ID`

        method instead.
      operationId: recycle_kubernetes_node_pool
      parameters:
        - $ref: "#/components/parameters/kubernetes_cluster_id"
        - $ref: "#/components/parameters/kubernetes_node_pool_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                nodes:
                  example:
                    - d8db5e1a-6103-43b5-a7b3-8a948210a9fc
                  items:
                    type: string
                  type: array
        required: true
      responses:
        "202":
          $ref: "#/components/responses/accepted"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Recycle a Kubernetes Node Pool
      tags:
        - Kubernetes
  "/v2/kubernetes/clusters/{cluster_id}/upgrade":
    post:
      description: >
        To immediately upgrade a Kubernetes cluster to a newer patch release of

        Kubernetes, send a POST request to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/upgrade`.

        The body of the request must specify a version attribute.


        Available upgrade versions for a cluster can be fetched from

        `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/upgrades`.
      operationId: upgrade_kubernetes_cluster
      parameters:
        - $ref: "#/components/parameters/kubernetes_cluster_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                version:
                  description: The slug identifier for the version of Kubernetes that the cluster will be upgraded to.
                  example: 1.16.13-do.0
                  type: string
        required: true
      responses:
        "202":
          $ref: "#/components/responses/accepted"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Upgrade a Kubernetes Cluster
      tags:
        - Kubernetes
  "/v2/kubernetes/clusters/{cluster_id}/upgrades":
    get:
      description: >
        To determine whether a cluster can be upgraded, and the versions to which it

        can be upgraded, send a GET request to

        `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/upgrades`.
      operationId: get_available_upgrades
      parameters:
        - $ref: "#/components/parameters/kubernetes_cluster_id"
      responses:
        "200":
          $ref: "#/components/responses/available_upgrades"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve Available Upgrades for an Existing Kubernetes Cluster
      tags:
        - Kubernetes
  "/v2/kubernetes/clusters/{cluster_id}/user":
    get:
      description: >
        To show information the user associated with a Kubernetes cluster, send a GET

        request to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/user`.
      operationId: get_cluster_user
      parameters:
        - $ref: "#/components/parameters/kubernetes_cluster_id"
      responses:
        "200":
          $ref: "#/components/responses/cluster_user"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve User Information for a Kubernetes Cluster
      tags:
        - Kubernetes
  /v2/kubernetes/options:
    get:
      description: To list the versions of Kubernetes available for use, the regions that support Kubernetes, and the available node sizes, send a GET request to `/v2/kubernetes/options`.
      operationId: list_kubernetes_options
      responses:
        "200":
          $ref: "#/components/responses/all_options"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List Available Regions, Node Sizes, and Versions of Kubernetes
      tags:
        - Kubernetes
  /v2/kubernetes/registry:
    delete:
      description: To remove the container registry from Kubernetes clusters, send a DELETE request to `/v2/kubernetes/registry`.
      operationId: remove_registry
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cluster_registries"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Remove Container Registry from Kubernetes Clusters
      tags:
        - Kubernetes
    post:
      description: To integrate the container registry with Kubernetes clusters, send a POST request to `/v2/kubernetes/registry`.
      operationId: add_registry
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cluster_registries"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Add Container Registry to Kubernetes Clusters
      tags:
        - Kubernetes
  /v2/load_balancers:
    get:
      description: >
        To list all of the load balancer instances on your account, send a GET request

        to `/v2/load_balancers`.
      operationId: list_all_load_balancers
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/all_load_balancers"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Load Balancers
      tags:
        - Load Balancers
    post:
      description: >
        To create a new load balancer instance, send a POST request to

        `/v2/load_balancers`.


        You can specify the Droplets that will sit behind the load balancer using one

        of two methods:


        * Set `droplet_ids` to a list of specific Droplet IDs.

        * Set `tag` to the name of a tag. All Droplets with this tag applied will be
          assigned to the load balancer. Additional Droplets will be automatically
          assigned as they are tagged.

        These methods are mutually exclusive.
      operationId: create_load_balancer
      requestBody:
        content:
          application/json:
            examples:
              Basic Create Request:
                $ref: "#/components/examples/load_balancer_basic_create_request"
              Create Request Using Droplet Tag:
                $ref: "#/components/examples/load_balancer_using_tag_create_request"
              SSL Termination Create Request:
                $ref: "#/components/examples/load_balancer_ssl_termination_create_request"
              Sticky Sessions and Custom Health Check:
                $ref: "#/components/examples/load_balancer_sticky_sessions_and_health_check_create_request"
            schema:
              $ref: "#/components/schemas/load_balancer_create"
        required: true
      responses:
        "202":
          $ref: "#/components/responses/load_balancer_create"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Create a New Load Balancer
      tags:
        - Load Balancers
  "/v2/load_balancers/{lb_id}":
    delete:
      description: >
        To delete a load balancer instance, disassociating any Droplets assigned to it

        and removing it from your account, send a DELETE request to

        `/v2/load_balancers/$LOAD_BALANCER_ID`.


        A successful request will receive a 204 status code with no body in response.

        This indicates that the request was processed successfully.
      operationId: delete_load_balancer
      parameters:
        - $ref: "#/components/parameters/load_balancer_id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete a Load Balancer
      tags:
        - Load Balancers
    get:
      description: >
        To show information about a load balancer instance, send a GET request to

        `/v2/load_balancers/$LOAD_BALANCER_ID`.
      operationId: get_load_balancer
      parameters:
        - $ref: "#/components/parameters/load_balancer_id"
      responses:
        "200":
          $ref: "#/components/responses/existing_load_balancer"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing Load Balancer
      tags:
        - Load Balancers
    put:
      description: >
        To update a load balancer's settings, send a PUT request to

        `/v2/load_balancers/$LOAD_BALANCER_ID`. The request should contain a full

        representation of the load balancer including existing attributes. It may

        contain _one of_ the `droplets_ids` or `tag` attributes as they are mutually

        exclusive. **Note that any attribute that is not provided will be reset to its

        default value.**
      operationId: update_load_balancer
      parameters:
        - $ref: "#/components/parameters/load_balancer_id"
      requestBody:
        content:
          application/json:
            examples:
              load_balancer_update_request:
                $ref: "#/components/examples/load_balancer_update_request"
            schema:
              $ref: "#/components/schemas/load_balancer_create"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/updated_load_balancer"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Update a Load Balancer
      tags:
        - Load Balancers
  "/v2/load_balancers/{lb_id}/droplets":
    delete:
      description: >
        To remove a Droplet from a load balancer instance, send a DELETE request to

        `/v2/load_balancers/$LOAD_BALANCER_ID/droplets`. In the body of the request,

        there should be a `droplet_ids` attribute containing a list of Droplet IDs.


        No response body will be sent back, but the response code will indicate

        success. Specifically, the response code will be a 204, which means that the

        action was successful with no returned body data.
      operationId: remove_load_balancer_droplets
      parameters:
        - $ref: "#/components/parameters/load_balancer_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                droplet_ids:
                  description: An array containing the IDs of the Droplets assigned to the load balancer.
                  example:
                    - 3164444
                    - 3164445
                  items:
                    type: integer
                  type: array
              required:
                - droplet_ids
        required: true
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Remove Droplets from a Load Balancer
      tags:
        - Load Balancers
    post:
      description: >
        To assign a Droplet to a load balancer instance, send a POST request to

        `/v2/load_balancers/$LOAD_BALANCER_ID/droplets`. In the body of the request,

        there should be a `droplet_ids` attribute containing a list of Droplet IDs.

        Individual Droplets can not be added to a load balancer configured with a

        Droplet tag. Attempting to do so will result in a "422 Unprocessable Entity"

        response from the API.


        No response body will be sent back, but the response code will indicate

        success. Specifically, the response code will be a 204, which means that the

        action was successful with no returned body data.
      operationId: add_load_balancer_droplets
      parameters:
        - $ref: "#/components/parameters/load_balancer_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                droplet_ids:
                  description: An array containing the IDs of the Droplets assigned to the load balancer.
                  example:
                    - 3164444
                    - 3164445
                  items:
                    type: integer
                  type: array
              required:
                - droplet_ids
        required: true
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Add Droplets to a Load Balancer
      tags:
        - Load Balancers
  "/v2/load_balancers/{lb_id}/forwarding_rules":
    delete:
      description: >
        To remove forwarding rules from a load balancer instance, send a DELETE

        request to `/v2/load_balancers/$LOAD_BALANCER_ID/forwarding_rules`. In the

        body of the request, there should be a `forwarding_rules` attribute containing

        an array of rules to be removed.


        No response body will be sent back, but the response code will indicate

        success. Specifically, the response code will be a 204, which means that the

        action was successful with no returned body data.
      operationId: remove_load_balancer_forwarding_rules
      parameters:
        - $ref: "#/components/parameters/load_balancer_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                forwarding_rules:
                  items:
                    $ref: "#/components/schemas/forwarding_rule"
                  minimum: 1
                  type: array
              required:
                - forwarding_rules
        required: true
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Remove Forwarding Rules from a Load Balancer
      tags:
        - Load Balancers
    post:
      description: >
        To add an additional forwarding rule to a load balancer instance, send a POST

        request to `/v2/load_balancers/$LOAD_BALANCER_ID/forwarding_rules`. In the body

        of the request, there should be a `forwarding_rules` attribute containing an

        array of rules to be added.


        No response body will be sent back, but the response code will indicate

        success. Specifically, the response code will be a 204, which means that the

        action was successful with no returned body data.
      operationId: add_load_balancer_forwarding_rules
      parameters:
        - $ref: "#/components/parameters/load_balancer_id"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                forwarding_rules:
                  items:
                    $ref: "#/components/schemas/forwarding_rule"
                  minimum: 1
                  type: array
              required:
                - forwarding_rules
        required: true
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Add Forwarding Rules to a Load Balancer
      tags:
        - Load Balancers
  /v2/projects:
    get:
      description: To list all your projects, send a GET request to `/v2/projects`.
      operationId: list_projects
      responses:
        "200":
          $ref: "#/components/responses/projects_list"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Projects
      tags:
        - Projects
    post:
      description: To create a project, send a POST request to `/v2/projects`.
      operationId: create_project
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/project_base"
              required:
                - name
                - purpose
        required: true
      responses:
        "201":
          $ref: "#/components/responses/existing_project"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Create a Project
      tags:
        - Projects
  /v2/projects/default:
    get:
      description: To get your default project, send a GET request to `/v2/projects/default`.
      operationId: get_default_project
      responses:
        "200":
          $ref: "#/components/responses/default_project"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve the Default Project
      tags:
        - Projects
    patch:
      description: To update only specific attributes of a project, send a PATCH request to `/v2/projects/default`. At least one of the following attributes needs to be sent.
      operationId: patch_default_project
      requestBody:
        content:
          application/json:
            example:
              name: my-web-api
            schema:
              $ref: "#/components/schemas/project"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/existing_project"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Patch the Default Project
      tags:
        - Projects
    put:
      description: To update a project, send a PUT request to `/v2/projects/default`. All of the following attributes must be sent.
      operationId: update_default_project
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/project"
              required:
                - name
                - description
                - purpose
                - environment
                - is_default
        required: true
      responses:
        "200":
          $ref: "#/components/responses/existing_project"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Update the Default Project
      tags:
        - Projects
  /v2/projects/default/resources:
    get:
      description: To list all your resources in your default project, send a GET request to `/v2/projects/default/resources`.
      operationId: list_default_project_resources
      responses:
        "200":
          $ref: "#/components/responses/resources_list"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List Default Project Resources
      tags:
        - Project Resources
    post:
      description: To assign resources to your default project, send a POST request to `/v2/projects/default/resources`.
      operationId: assign_default_project_resources
      requestBody:
        content:
          application/json:
            examples:
              assign_resources:
                value:
                  resources:
                    - do:droplet:13457723
                    - do:domain:example.com
            schema:
              $ref: "#/components/schemas/project_assignment"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/resources_list"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Assign Resources to Default Project
      tags:
        - Project Resources
  "/v2/projects/{project_id}":
    delete:
      description: >
        To delete a project, send a DELETE request to `/v2/projects/$PROJECT_ID`. To

        be deleted, a project must not have any resources assigned to it. Any existing

        resources must first be reassigned or destroyed, or you will receive a 412 error.


        A successful request will receive a 204 status code with no body in response.

        This indicates that the request was processed successfully.
      operationId: delete_project
      parameters:
        - $ref: "#/components/parameters/project_id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "412":
          $ref: "#/components/responses/precondition_failed"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete an Existing Project
      tags:
        - Projects
    get:
      description: To get a project, send a GET request to `/v2/projects/$PROJECT_ID`.
      operationId: get_project
      parameters:
        - $ref: "#/components/parameters/project_id"
      responses:
        "200":
          $ref: "#/components/responses/existing_project"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing Project
      tags:
        - Projects
    patch:
      description: To update only specific attributes of a project, send a PATCH request to `/v2/projects/$PROJECT_ID`. At least one of the following attributes needs to be sent.
      operationId: patch_project
      parameters:
        - $ref: "#/components/parameters/project_id"
      requestBody:
        content:
          application/json:
            example:
              name: my-web-api
            schema:
              $ref: "#/components/schemas/project"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/existing_project"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Patch a Project
      tags:
        - Projects
    put:
      description: To update a project, send a PUT request to `/v2/projects/$PROJECT_ID`. All of the following attributes must be sent.
      operationId: update_project
      parameters:
        - $ref: "#/components/parameters/project_id"
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/project"
              required:
                - name
                - description
                - purpose
                - environment
                - is_default
        required: true
      responses:
        "200":
          $ref: "#/components/responses/existing_project"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Update a Project
      tags:
        - Projects
  "/v2/projects/{project_id}/resources":
    get:
      description: To list all your resources in a project, send a GET request to `/v2/projects/$PROJECT_ID/resources`.
      operationId: list_project_resources
      parameters:
        - $ref: "#/components/parameters/project_id"
      responses:
        "200":
          $ref: "#/components/responses/resources_list"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List Project Resources
      tags:
        - Project Resources
    post:
      description: To assign resources to a project, send a POST request to `/v2/projects/$PROJECT_ID/resources`.
      operationId: assign_project_resources
      parameters:
        - $ref: "#/components/parameters/project_id"
      requestBody:
        content:
          application/json:
            examples:
              assign_resources:
                value:
                  resources:
                    - do:droplet:13457723
                    - do:domain:example.com
            schema:
              $ref: "#/components/schemas/project_assignment"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/resources_list"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Assign Resources to a Project
      tags:
        - Project Resources
  /v2/regions:
    get:
      description: >-
        To list all of the regions that are available, send a GET request to `/v2/regions`.

        The response will be a JSON object with a key called `regions`. The value of this will be an array of `region` objects, each of which will contain the standard region attributes.
      operationId: list_all_regions
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/all_regions"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Data Center Regions
      tags:
        - Regions
  /v2/registry:
    delete:
      description: To delete your container registry, destroying all container image data stored in it, send a DELETE request to `/v2/registry`.
      operationId: delete_registry
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete Container Registry
      tags:
        - Container Registry
    get:
      description: To get information about your container registry, send a GET request to `/v2/registry`.
      operationId: get_registry
      responses:
        "200":
          $ref: "#/components/responses/registry_info"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Get Container Registry Information
      tags:
        - Container Registry
    post:
      description: >
        To create your container registry, send a POST request to `/v2/registry`.


        The `name` becomes part of the URL for images stored in the registry. For

        example, if your registry is called `example`, an image in it will have the

        URL `registry.digitalocean.com/example/image:tag`.
      operationId: create_registry
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registry"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/registry_info"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Create Container Registry
      tags:
        - Container Registry
  /v2/registry/docker-credentials:
    get:
      description: >
        In order to access your container registry with the Docker client or from a

        Kubernetes cluster, you will need to configure authentication. The necessary

        JSON configuration can be retrieved by sending a GET request to

        `/v2/registry/docker-credentials`.


        The response will be in the format of a Docker `config.json` file. To use the

        config in your Kubernetes cluster, create a Secret with:

            kubectl create secret generic docr \
              --from-file=.dockerconfigjson=config.json \
              --type=kubernetes.io/dockerconfigjson

        By default, the returned credentials have read-only access to your registry

        and cannot be used to push images. This is appropriate for most Kubernetes

        clusters. To retrieve read/write credentials, suitable for use with the Docker

        client or in a CI system, read_write may be provided as query parameter. For

        example: `/v2/registry/docker-credentials?read_write=true`


        By default, the returned credentials will not expire. To retrieve credentials

        with an expiry set, expiry_seconds may be provided as a query parameter. For

        example: `/v2/registry/docker-credentials?expiry_seconds=3600` will return

        credentials that expire after one hour.
      operationId: get_docker_credentials
      parameters:
        - $ref: "#/components/parameters/registry_expiry_seconds"
        - $ref: "#/components/parameters/registry_read_write"
      responses:
        "200":
          $ref: "#/components/responses/docker_credentials"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Get Docker Credentials for Container Registry
      tags:
        - Container Registry
  /v2/registry/options:
    get:
      description: >-
        There are multiple subscription tiers available for container registry. Each tier allows a different number of image repositories to be created in your registry, and has a different amount of storage and transfer included.

        To list the available subscription tiers, send a GET request to `/v2/registry/options`.
      operationId: get_registry_options
      responses:
        "200":
          $ref: "#/components/responses/registry_options_response"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List Available Subscription Tiers
      tags:
        - Container Registry
  /v2/registry/subscription:
    get:
      description: A subscription is automatically created when you configure your container registry. To get information about your subscription, send a GET request to `/v2/registry/subscription`.
      operationId: get_registry_subscription
      responses:
        "200":
          $ref: "#/components/responses/subscription_response"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Get Subscription Information
      tags:
        - Container Registry
    post:
      description: After creating your registry, you can switch to a different subscription tier to better suit your needs. To do this, send a POST request to `/v2/registry/subscription`.
      operationId: post_registry_subscription
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tier_slug:
                  description: The slug of the subscription tier to sign up for.
                  enum:
                    - starter
                    - basic
                    - professional
                  example: basic
                  type: string
              type: object
      responses:
        "200":
          $ref: "#/components/responses/subscription_response"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Update Subscription Tier
      tags:
        - Container Registry
  /v2/registry/validate-name:
    post:
      description: >
        To validate that a container registry name is available for use, send a POST

        request to `/v2/registry/validate-name`.


        If the name is both formatted correctly and available, the response code will

        be 204 and contain no body. If the name is already in use, the response will

        be a 409 Conflict.
      operationId: validate_registry_name
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registry"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Validate a Container Registry Name
      tags:
        - Container Registry
  "/v2/registry/{registry_name}":
    get:
      description: To list all repositories in your container registry, send a GET request to `/v2/registry/$REGISTRY_NAME/repositories`.
      operationId: list_registry_repositories
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/registry_name"
      responses:
        "200":
          $ref: "#/components/responses/all_repositories"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Container Registry Repositories
      tags:
        - Container Registry
  "/v2/registry/{registry_name}/garbage-collection":
    get:
      description: To get information about the currently-active garbage collection for a registry, send a GET request to `/v2/registry/$REGISTRY_NAME/garbage-collection`.
      operationId: get_garbage_collection
      parameters:
        - $ref: "#/components/parameters/registry_name"
      responses:
        "200":
          $ref: "#/components/responses/garbage_collection"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Get Active Garbage Collection
      tags:
        - Container Registry
    post:
      description: >
        Garbage collection enables users to clear out unreferenced blobs (layer &

        manifest data) after deleting one or more manifests from a repository. If

        there are no unreferenced blobs resulting from the deletion of one or more

        manifests, garbage collection is effectively a noop.

        [See here for more information](https://www.digitalocean.com/docs/container-registry/how-to/clean-up-container-registry/)

        about how and why you should clean up your container registry periodically.


        To request a garbage collection run on your registry, send a POST request to

        `/v2/registry/$REGISTRY_NAME/garbage-collection`. This will initiate the

        following sequence of events on your registry.


        * Set the registry to read-only mode, meaning no further write-scoped
          JWTs will be issued to registry clients. Existing write-scoped JWTs will
          continue to work until they expire which can take up to 15 minutes.
        * Wait until all existing write-scoped JWTs have expired.

        * Scan all registry manifests to determine which blobs are unreferenced.

        * Delete all unreferenced blobs from the registry.

        * Record the number of blobs deleted and bytes freed, mark the garbage
          collection status as `success`.
        * Remove the read-only mode restriction from the registry, meaning write-scoped
          JWTs will once again be issued to registry clients.
      operationId: run_garbage_collection
      parameters:
        - $ref: "#/components/parameters/registry_name"
      responses:
        "201":
          $ref: "#/components/responses/garbage_collection"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Start Garbage Collection
      tags:
        - Container Registry
  "/v2/registry/{registry_name}/garbage-collection/{garbage_collection_uuid}":
    put:
      description: To cancel the currently-active garbage collection for a registry, send a PUT request to `/v2/registry/$REGISTRY_NAME/garbage-collection/$GC_UUID` and specify one or more of the attributes below.
      operationId: update_garbage_collection
      parameters:
        - $ref: "#/components/parameters/registry_name"
        - $ref: "#/components/parameters/garbage_collection_uuid"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/update_registry"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/garbage_collection"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Update Garbage Collection
      tags:
        - Container Registry
  "/v2/registry/{registry_name}/garbage-collections":
    get:
      description: To get information about past garbage collections for a registry, send a GET request to `/v2/registry/$REGISTRY_NAME/garbage-collections`.
      operationId: list_garbage_collections
      parameters:
        - $ref: "#/components/parameters/registry_name"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/garbage_collections"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List Garbage Collections
      tags:
        - Container Registry
  "/v2/registry/{registry_name}/{repository_name}/digests/{manifest_digest}":
    delete:
      description: >
        To delete a container repository manifest by digest, send a DELETE request to

        `/v2/registry/$REGISTRY_NAME/repositories/$REPOSITORY_NAME/digests/$MANIFEST_DIGEST`.


        Note that if your repository name contains `/` characters, it must be

        URL-encoded in the request URL. For example, to delete

        `registry.digitalocean.com/example/my/repo@sha256:abcd`, the path would be

        `/v2/registry/example/repositories/my%2Frepo/digests/sha256:abcd`.


        A successful request will receive a 204 status code with no body in response.

        This indicates that the request was processed successfully.
      operationId: delete_repository_manifest
      parameters:
        - $ref: "#/components/parameters/registry_name"
        - $ref: "#/components/parameters/registry_repository_name"
        - $ref: "#/components/parameters/registry_manifest_digest"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete Container Registry Repository Manifest
      tags:
        - Container Registry
  "/v2/registry/{registry_name}/{repository_name}/tags":
    get:
      description: >
        To list all tags in your container registry repository, send a GET

        request to `/v2/registry/$REGISTRY_NAME/repositories/$REPOSITORY_NAME/tags`.


        Note that if your repository name contains `/` characters, it must be

        URL-encoded in the request URL. For example, to list tags for

        `registry.digitalocean.com/example/my/repo`, the path would be

        `/v2/registry/example/repositories/my%2Frepo/tags`.
      operationId: list_repository_tags
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/registry_name"
        - $ref: "#/components/parameters/registry_repository_name"
      responses:
        "200":
          $ref: "#/components/responses/repository_tags"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Container Registry Repository Tags
      tags:
        - Container Registry
  "/v2/registry/{registry_name}/{repository_name}/tags/{repository_tag}":
    delete:
      description: >
        To delete a container repository tag, send a DELETE request to

        `/v2/registry/$REGISTRY_NAME/repositories/$REPOSITORY_NAME/tags/$TAG`.


        Note that if your repository name contains `/` characters, it must be

        URL-encoded in the request URL. For example, to delete

        `registry.digitalocean.com/example/my/repo:mytag`, the path would be

        `/v2/registry/example/repositories/my%2Frepo/tags/mytag`.


        A successful request will receive a 204 status code with no body in response.

        This indicates that the request was processed successfully.
      operationId: delete_repository_tag
      parameters:
        - $ref: "#/components/parameters/registry_name"
        - $ref: "#/components/parameters/registry_repository_name"
        - $ref: "#/components/parameters/registry_repository_tag"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete Container Registry Repository Tag
      tags:
        - Container Registry
  /v2/reports/droplet_neighbors_ids:
    get:
      description: >
        To retrieve a list of all Droplets that are co-located on the same physical

        hardware, send a GET request to `/v2/reports/droplet_neighbors_ids`.


        The results will be returned as a JSON object with a key of `neighbor_ids`.

        This will be set to an array of arrays. Each array will contain a set of

        Droplet IDs for Droplets that share a physical server. An empty array

        indicates that all Droplets associated with your account are located on

        separate physical hardware.
      operationId: list_all_droplet_neighbors_ids
      responses:
        "200":
          $ref: "#/components/responses/droplet_neighbors_ids"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Droplet Neighbors
      tags:
        - Droplets
  /v2/sizes:
    get:
      description: >-
        To list all of available Droplet sizes, send a GET request to `/v2/sizes`.

        The response will be a JSON object with a key called `sizes`. The value of this will be an array of `size` objects each of which contain the standard size attributes.
      operationId: list_all_sizes
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/all_sizes"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Droplet Sizes
      tags:
        - Sizes
  /v2/snapshots:
    get:
      description: >
        To list all of the snapshots available on your account, send a GET request to

        `/v2/snapshots`.


        The response will be a JSON object with a key called `snapshots`. This will be

        set to an array of `snapshot` objects, each of which will contain the standard

        snapshot attributes.


        ### Filtering Results by Resource Type


        It's possible to request filtered results by including certain query parameters.


        #### List Droplet Snapshots


        To retrieve only snapshots based on Droplets, include the `resource_type`

        query parameter set to `droplet`. For example, `/v2/snapshots?resource_type=droplet`.


        #### List Volume Snapshots


        To retrieve only snapshots based on volumes, include the `resource_type`

        query parameter set to `volume`. For example, `/v2/snapshots?resource_type=volume`.
      operationId: list_all_snapshots
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/snapshot_resource_type"
      responses:
        "200":
          $ref: "#/components/responses/all_snapshots"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Snapshots
      tags:
        - Snapshots
  "/v2/snapshots/{snapshot_id}":
    delete:
      description: >
        Both Droplet and volume snapshots are managed through the `/v2/snapshots/`

        endpoint. To delete a snapshot, send a DELETE request to 

        `/v2/snapshots/$SNAPSHOT_ID`.


        A status of 204 will be given. This indicates that the request was processed

        successfully, but that no response body is needed.
      operationId: delete_snapshot
      parameters:
        - $ref: "#/components/parameters/snapshot_id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete a Snapshot
      tags:
        - Snapshots
    get:
      description: >
        To retrieve information about a snapshot, send a GET request to

        `/v2/snapshots/$SNAPSHOT_ID`.


        The response will be a JSON object with a key called `snapshot`. The value of

        this will be an snapshot object containing the standard snapshot attributes.
      operationId: get_snapshot
      parameters:
        - $ref: "#/components/parameters/snapshot_id"
      responses:
        "200":
          $ref: "#/components/responses/existing_snapshot"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing Snapshot
      tags:
        - Snapshots
  /v2/tags:
    get:
      description: To list all of your tags, you can send a GET request to `/v2/tags`.
      operationId: list_all_tags
      responses:
        "200":
          $ref: "#/components/responses/all_tags"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Tags
      tags:
        - Tags
    post:
      description: To create a tag you can send a POST request to `/v2/tags` with a `name` attribute.
      operationId: create_new_tag
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tag"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/new_tag"
        "400":
          $ref: "#/components/responses/tag_bad_request"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Create a New Tag
      tags:
        - Tags
  "/v2/tags/{tag_id}":
    delete:
      description: A tag can be deleted by sending a `DELETE` request to `/v2/tags/$TAG_NAME`.  Deleting a tag also untags all the resources that have previously been tagged  by the Tag.
      operationId: delete_tag
      parameters:
        - $ref: "#/components/parameters/tag_id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete a Tag
      tags:
        - Tags
    get:
      description: To retrieve an individual tag, you can send a `GET` request to  `/v2/tags/$TAG_NAME`.
      operationId: get_tag
      parameters:
        - $ref: "#/components/parameters/tag_id"
      responses:
        "200":
          $ref: "#/components/responses/existing_tag"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve a Tag
      tags:
        - Tags
  "/v2/tags/{tag_id}/resources":
    delete:
      description: >-
        Resources can be tagged by sending a DELETE request to  `/v2/tags/$TAG_NAME/resources` with an array of json objects containing  `resource_id` and `resource_type` attributes.

        Currently only untagging of Droplets, Images, Volumes, and Volume Snapshots  is supported. `resource_id` is expected to be the Droplet's id, Image's id,  or Volume/Volume Snapshot's UUID attribute as a string, and `resource_type` is  expected to be the string `droplet`, `image`, `volume` or `volume_snapshot`.
      operationId: untag_resource
      parameters:
        - $ref: "#/components/parameters/tag_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tag_resource"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Untag a Resource
      tags:
        - Tags
    post:
      description: >-
        Resources can be tagged by sending a POST request to  `/v2/tags/$TAG_NAME/resources` with an array of json objects containing  `resource_id` and `resource_type` attributes.

        Currently only tagging of Droplets, Images, Volumes, and Volume Snapshots is  supported. `resource_id` is expected to be the Droplet's id, Image's id, or  Volume/Volume Snapshot's UUID attribute as a string, and `resource_type` is  expected to be the string `droplet`, `image`, `volume` or `volume_snapshot`.
      operationId: tag_resource
      parameters:
        - $ref: "#/components/parameters/tag_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tag_resource"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Tag a Resource
      tags:
        - Tags
  /v2/volumes:
    delete:
      description: >+
        Block storage volumes may also be deleted by name by sending a DELETE request with the volume's **name** and the **region slug** for the region it is located in as query parameters to `/v2/volumes?name=$VOLUME_NAME&region=nyc1`.

        No response body will be sent back, but the response code will indicate success. Specifically, the response code will be a 204, which means that the action was successful with no returned body data.

      operationId: delete_volume_by_name
      parameters:
        - $ref: "#/components/parameters/volume_name"
        - $ref: "#/components/parameters/region"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete a Block Storage Volume by Name
      tags:
        - Block Storage
    get:
      description: >+
        To list all of the block storage volumes available on your account, send a GET request to `/v2/volumes`.

        ## Filtering Results

        ### By Region

        The `region` may be provided as query paramater in order to restrict results to volumes available in a specific region. For example: `/v2/volumes?region=nyc1`

        ### By Name

        It is also possible to list volumes on your account that match a specified name. To do so, send a GET request with the volume's name as a query parameter to `/v2/volumes?name=$VOLUME_NAME`.

        **Note:** You can only create one volume per region with the same name.

        ### By Name and Region

        It is also possible to retrieve information about a block storage volume by name. To do so, send a GET request with the volume's name and the region slug for the region it is located in as query parameters to `/v2/volumes?name=$VOLUME_NAME&region=nyc1`.


      operationId: list_all_volumes
      parameters:
        - $ref: "#/components/parameters/volume_name"
        - $ref: "#/components/parameters/region"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/all_volumes"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Block Storage Volumes
      tags:
        - Block Storage
    post:
      description: To create a new volume, send a POST request to `/v2/volumes`. Optionally, a `filesystem_type` attribute may be provided in order to automatically format the volume's filesystem. Pre-formatted volumes are automatically mounted when attached to Ubuntu, Debian, Fedora, Fedora Atomic, and CentOS Droplets created on or after April 26, 2018. Attaching pre-formatted volumes to Droplets without support for auto-mounting is not recommended.
      operationId: create_new_volume
      requestBody:
        content:
          application/json:
            examples:
              ext4 volume:
                value:
                  description: Block store for examples
                  filesystem_label: ext4_volume_01
                  filesystem_type: ext4
                  name: ext4_example
                  region: nyc1
                  size_gigabytes: 10
              xfs volume:
                value:
                  description: Block store for examples
                  filesystem_label: xfs_volume01
                  filesystem_type: xfs
                  name: xfs_example
                  region: nyc1
                  size_gigabytes: 10
            schema:
              anyOf:
                - $ref: "#/components/schemas/new_volume_ext4"
                - $ref: "#/components/schemas/new_volume_xfs"
              discriminator:
                mapping:
                  ext4: "#/components/schemas/new_volume_ext4"
                  xfs: "#/components/schemas/new_volume_xfs"
                propertyName: filesystem_type
        required: true
      responses:
        "201":
          $ref: "#/components/responses/volume"
        "400":
          $ref: "#/components/responses/bad_request"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Create a New Block Storage Volume
      tags:
        - Block Storage
  /v2/volumes/actions:
    post:
      description: >
        To initiate an action on a block storage volume by Id, send a POST request to

        `~/v2/volumes/actions`. The body should contain the appropriate

        attributes for the respective action.


        ## Attach a Block Storage Volume to a Droplet


        | Attribute   | Details                                                             |

        | ----------- | ------------------------------------------------------------------- |

        | type        | This must be `attach`                                               |

        | volume_name | The name of the block storage volume                                |

        | droplet_id  | Set to the Droplet's ID                                             |

        | region      | Set to the slug representing the region where the volume is located |


        Each volume may only be attached to a single Droplet. However, up to five

        volumes may be attached to a Droplet at a time. Pre-formatted volumes will be

        automatically mounted to Ubuntu, Debian, Fedora, Fedora Atomic, and CentOS

        Droplets created on or after April 26, 2018 when attached. On older Droplets,

        [additional configuration](https://www.digitalocean.com/community/tutorials/how-to-partition-and-format-digitalocean-block-storage-volumes-in-linux#mounting-the-filesystems)

        is required.


        ## Remove a Block Storage Volume from a Droplet


        | Attribute   | Details                                                             |

        | ----------- | ------------------------------------------------------------------- |

        | type        | This must be `detach`                                               |

        | volume_name | The name of the block storage volume                                |

        | droplet_id  | Set to the Droplet's ID                                             |

        | region      | Set to the slug representing the region where the volume is located |
      operationId: post_volume_action_by_name
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      requestBody:
        content:
          application/json:
            examples:
              VolumeActionAttach:
                value:
                  droplet_id: 11612190
                  region: nyc1
                  tags:
                    - aninterestingtag
                  type: attach
              VolumeActionDetatch:
                value:
                  droplet_id: 11612190
                  region: nyc1
                  type: detach
            schema:
              anyOf:
                - $ref: "#/components/schemas/volume_action_post_attach"
                - $ref: "#/components/schemas/volume_action_post_detach"
              discriminator:
                mapping:
                  attach: "#/components/schemas/volume_action_post_attach"
                  detach: "#/components/schemas/volume_action_post_detach"
                propertyName: type
        required: true
      responses:
        "202":
          $ref: "#/components/responses/volume_action"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Initiate A Block Storage Action By Volume Name
      tags:
        - Block Storage Actions
  "/v2/volumes/snapshot/{snapshot_id}":
    delete:
      description: >
        To delete a volume snapshot, send a DELETE request to 

        `/v2/snapshots/$SNAPSHOT_ID`.


        A status of 204 will be given. This indicates that the request was processed

        successfully, but that no response body is needed.
      operationId: delete_volume_snapshot_by_id
      parameters:
        - $ref: "#/components/parameters/snapshot_id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete a Volume Snapshot
      tags:
        - Block Storage
    get:
      description: >+
        To retrieve the details of a snapshot that has been created from a volume, send a GET request to `/v2/volumes/snapshots/$SNAPSHOT_ID`.

      operationId: get_volume_snapshot_by_id
      parameters:
        - $ref: "#/components/parameters/snapshot_id"
      responses:
        "200":
          $ref: "#/components/responses/volume_snapshot"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retreive an Existing Volume Snapshot
      tags:
        - Block Storage
  "/v2/volumes/{volume_id}":
    delete:
      description: >+
        To delete a block storage volume, destroying all data and removing it from your account, send a DELETE request to `/v2/volumes/$VOLUME_ID`.

        No response body will be sent back, but the response code will indicate success. Specifically, the response code will be a 204, which means that the action was successful with no returned body data.

      operationId: delete_volume
      parameters:
        - $ref: "#/components/parameters/volume_id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete a Block Storage Volume
      tags:
        - Block Storage
    get:
      description: >+
        To show information about a block storage volume, send a GET request to  `/v2/volumes/$VOLUME_ID`.

      operationId: get_volume
      parameters:
        - $ref: "#/components/parameters/volume_id"
      responses:
        "200":
          $ref: "#/components/responses/volume"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing Block Storage Volume
      tags:
        - Block Storage
  "/v2/volumes/{volume_id}/actions":
    get:
      description: >+
        To retrieve all actions that have been executed on a volume, send a GET request to `/v2/volumes/$VOLUME_ID/actions`.

      operationId: list_all_volume_actions
      parameters:
        - $ref: "#/components/parameters/volume_id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/all_volume_actions"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All Actions for a Volume
      tags:
        - Block Storage Actions
    post:
      description: >
        To initiate an action on a block storage volume by Id, send a POST request to

        `~/v2/volumes/$VOLUME_ID/actions`. The body should contain the appropriate

        attributes for the respective action.


        ## Attach a Block Storage Volume to a Droplet


        | Attribute  | Details                                                             |

        | ---------- | ------------------------------------------------------------------- |

        | type       | This must be `attach`                                               |

        | droplet_id | Set to the Droplet's ID                                             |

        | region     | Set to the slug representing the region where the volume is located |


        Each volume may only be attached to a single Droplet. However, up to five

        volumes may be attached to a Droplet at a time. Pre-formatted volumes will be

        automatically mounted to Ubuntu, Debian, Fedora, Fedora Atomic, and CentOS

        Droplets created on or after April 26, 2018 when attached. On older Droplets,

        [additional configuration](https://www.digitalocean.com/community/tutorials/how-to-partition-and-format-digitalocean-block-storage-volumes-in-linux#mounting-the-filesystems)

        is required.


        ## Remove a Block Storage Volume from a Droplet


        | Attribute  | Details                                                             |

        | ---------- | ------------------------------------------------------------------- |

        | type       | This must be `detach`                                               |

        | droplet_id | Set to the Droplet's ID                                             |

        | region     | Set to the slug representing the region where the volume is located |


        ## Resize a Volume


        | Attribute      | Details                                                             |

        | -------------- | ------------------------------------------------------------------- |

        | type           | This must be `resize`                                               |

        | size_gigabytes | The new size of the block storage volume in GiB (1024^3)            |

        | region         | Set to the slug representing the region where the volume is located |


        Volumes may only be resized upwards. The maximum size for a volume is 16TiB.
      operationId: post_volume_action_by_id
      parameters:
        - $ref: "#/components/parameters/volume_id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      requestBody:
        content:
          application/json:
            examples:
              VolumeActionAttach:
                value:
                  droplet_id: 11612190
                  region: nyc1
                  tags:
                    - aninterestingtag
                  type: attach
              VolumeActionDetatch:
                value:
                  droplet_id: 11612190
                  region: nyc1
                  type: detach
              VolumeActionResize:
                value:
                  region: nyc1
                  size_gigabytes: 100
                  type: resize
            schema:
              anyOf:
                - $ref: "#/components/schemas/volume_action_post_attach"
                - $ref: "#/components/schemas/volume_action_post_detach"
                - $ref: "#/components/schemas/volume_action_post_resize"
              discriminator:
                mapping:
                  attach: "#/components/schemas/volume_action_post_attach"
                  detach: "#/components/schemas/volume_action_post_detach"
                  resize: "#/components/schemas/volume_action_post_resize"
                propertyName: type
        required: true
      responses:
        "202":
          $ref: "#/components/responses/volume_action"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Initiate A Block Storage Action By Volume Id
      tags:
        - Block Storage Actions
  "/v2/volumes/{volume_id}/actions/{action_id}":
    get:
      description: >+
        To retrieve the status of a volume action, send a GET request to `/v2/volumes/$VOLUME_ID/actions/$ACTION_ID`.

      operationId: get_volume_action
      parameters:
        - $ref: "#/components/parameters/volume_id"
        - $ref: "#/components/parameters/action_id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/volume_action"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing Volume Action
      tags:
        - Block Storage Actions
  "/v2/volumes/{volume_id}/snapshots":
    get:
      description: >+
        To retrieve the snapshots that have been created from a volume, send a GET request to `/v2/volumes/$VOLUME_ID/snapshots`.

      operationId: list_volume_snapshots
      parameters:
        - $ref: "#/components/parameters/volume_id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/volume_snapshots"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List Snapshots for a Volume
      tags:
        - Block Storage
    post:
      description: To create a snapshot from a volume, sent a POST request to `/v2/volumes/$VOLUME_ID/snapshots`.
      operationId: create_volume_snapshot
      parameters:
        - $ref: "#/components/parameters/volume_id"
      requestBody:
        content:
          application/json:
            example:
              name: big-data-snapshot1475261774
            schema:
              properties:
                name:
                  description: A human-readable name for the volume snapshot.
                  example: big-data-snapshot1475261774
                  type: string
                tags:
                  $ref: "#/components/schemas/tags_array"
              required:
                - name
        required: true
      responses:
        "201":
          $ref: "#/components/responses/volume_snapshot"
        "400":
          $ref: "#/components/responses/bad_request"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Create Snapshot from a Volume
      tags:
        - Block Storage
  /v2/vpcs:
    get:
      description: To list all of the VPCs on your account, send a GET request to `/v2/vpcs`.
      operationId: list_vpcs
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/all_vpcs"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List All VPCs
      tags:
        - VPCs
    post:
      description: >
        To create a VPC, send a POST request to `/v2/vpcs` specifying the attributes

        in the table below in the JSON body.


        **Note:** If you do not currently have a VPC network in a specific datacenter

        region, the first one that you create will be set as the default for that

        region. The default VPC for a region cannot be changed or deleted.
      operationId: create_vpc
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/vpc_updatable"
                - $ref: "#/components/schemas/vpc_create"
              required:
                - name
                - region
              type: object
        required: true
      responses:
        "201":
          $ref: "#/components/responses/existing_vpc"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Create a New VPC
      tags:
        - VPCs
  "/v2/vpcs/{vpc_id}":
    delete:
      description: >
        To delete a VPC, send a DELETE request to `/v2/vpcs/$VPC_ID`. A 204 status

        code with no body will be returned in response to a successful request.


        The default VPC for a region can not be deleted. Additionally, a VPC can only

        be deleted if it does not contain any member resources. Attempting to delete

        a region's default VPC or a VPC that still has members will result in a

        403 Forbidden error response.
      operationId: delete_vpc
      parameters:
        - $ref: "#/components/parameters/vpc_id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Delete a VPC
      tags:
        - VPCs
    get:
      description: To show information about an existing VPC, send a GET request to `/v2/vpcs/$VPC_ID`.
      operationId: get_vpc
      parameters:
        - $ref: "#/components/parameters/vpc_id"
      responses:
        "200":
          $ref: "#/components/responses/existing_vpc"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Retrieve an Existing VPC
      tags:
        - VPCs
    patch:
      description: >
        To update a subset of information about a VPC, send a PATCH request to

        `/v2/vpcs/$VPC_ID`.
      operationId: patch_vpc
      parameters:
        - $ref: "#/components/parameters/vpc_id"
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/vpc_updatable"
                - $ref: "#/components/schemas/vpc_default"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/existing_vpc"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Partially Update a VPC
      tags:
        - VPCs
    put:
      description: >
        To update information about a VPC, send a PUT request to `/v2/vpcs/$VPC_ID`.
      operationId: update_vpc
      parameters:
        - $ref: "#/components/parameters/vpc_id"
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/vpc_updatable"
                - $ref: "#/components/schemas/vpc_default"
              required:
                - name
              type: object
        required: true
      responses:
        "200":
          $ref: "#/components/responses/existing_vpc"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: Update a VPC
      tags:
        - VPCs
  "/v2/vpcs/{vpc_id}/members":
    get:
      description: >
        To list all of the resources that are members of a VPC, send a GET request to

        `/v2/vpcs/$VPC_ID/members`.


        To only list resources of a specific type that are members of the VPC,

        included a `resource_type` query parameter. For example, to only list Droplets

        in the VPC, send a GET request to `/v2/vpcs/$VPC_ID/members?resource_type=droplet`.
      operationId: list_vpc_members
      parameters:
        - $ref: "#/components/parameters/vpc_id"
        - $ref: "#/components/parameters/vpc_resource_type"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/vpc_members"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/server_error"
        default:
          $ref: "#/components/responses/unexpected_error"
      summary: List the Member Resources of a VPC
      tags:
        - VPCs
components:
  examples:
    app:
      value:
        app:
          active_deployment:
            created_at: 2020-12-01T00:40:05.000Z
            id: 3aa4d20e-5527-4c00-b496-601fbd22520a
            phase_last_updated_at: 2020-12-01T00:42:12.000Z
            services:
              - name: sample-php
                source_commit_hash: 54d4a727f457231062439895000d45437c7bb405
            spec:
              name: sample-php
              region: fra
              services:
                - environment_slug: php
                  git:
                    branch: main
                    repo_clone_url: https://github.com/digitalocean/sample-php.git
                  http_port: 8080
                  instance_count: 1
                  instance_size_slug: basic-xxs
                  name: sample-php
                  routes:
                    - path: /
                  run_command: heroku-php-apache2
            updated_at: 2020-12-01T00:42:12.000Z
          cause: app spec updated
          created_at: 2020-11-19T20:27:18.000Z
          default_ingress: https://sample-php-iaj87.ondigitalocean.app
          id: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
          last_deployment_created_at: 2020-12-01T00:40:05.000Z
          live_domain: sample-php-iaj87.ondigitalocean.app
          live_url: https://sample-php-iaj87.ondigitalocean.app
          live_url_base: https://sample-php-iaj87.ondigitalocean.app
          owner_uuid: ff36cbc6fd350fe12577f5123133bb5ba01a2419
          progress:
            phase: ACTIVE
            steps:
              - ended_at: 2020-12-01T00:41:26.653Z
                name: build
                started_at: 2020-12-01T00:40:11.979Z
                status: SUCCESS
                steps:
                  - ended_at: 2020-12-01T00:40:12.470Z
                    name: initialize
                    started_at: 2020-12-01T00:40:11.979Z
                    status: SUCCESS
                  - ended_at: 2020-12-01T00:41:26.180Z
                    name: components
                    started_at: 2020-12-01T00:40:12.470Z
                    status: SUCCESS
                    steps:
                      - component_name: sample-php
                        ended_at: 1901-01-01T00:00:00.000Z
                        message_base: Building service
                        name: sample-php
                        started_at: 1901-01-01T00:00:00.000Z
                        status: SUCCESS
            success_steps: 6
            tier_slug: basic
            total_steps: 6
          region:
            continent: Europe
            data_centers:
              - fra1
            flag: germany
            label: Frankfurt
            slug: fra
          spec:
            name: sample-php
            services:
              - environment_slug: php
                git:
                  branch: main
                  repo_clone_url: https://github.com/digitalocean/sample-php.git
                http_port: 8080
                instance_count: 1
                instance_size_slug: basic-xxs
                name: sample-php
                routes:
                  - path: /
                run_command: heroku-php-apache2
          tier_slug: basic
          updated_at: 2020-12-01T00:42:16.000Z
    apps:
      value:
        apps:
          - active_deployment:
              created_at: 2020-12-01T00:40:05.000Z
              id: 3aa4d20e-5527-4c00-b496-601fbd22520a
              phase_last_updated_at: 2020-12-01T00:42:12.000Z
              services:
                - name: sample-php
                  source_commit_hash: 54d4a727f457231062439895000d45437c7bb405
              spec:
                name: sample-php
                region: fra
                services:
                  - environment_slug: php
                    git:
                      branch: main
                      repo_clone_url: https://github.com/digitalocean/sample-php.git
                    http_port: 8080
                    instance_count: 1
                    instance_size_slug: basic-xxs
                    name: sample-php
                    routes:
                      - path: /
                    run_command: heroku-php-apache2
              updated_at: 2020-12-01T00:42:12.000Z
            cause: app spec updated
            created_at: 2020-11-19T20:27:18.000Z
            default_ingress: https://sample-php-iaj87.ondigitalocean.app
            id: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
            last_deployment_created_at: 2020-12-01T00:40:05.000Z
            live_domain: sample-php-iaj87.ondigitalocean.app
            live_url: https://sample-php-iaj87.ondigitalocean.app
            live_url_base: https://sample-php-iaj87.ondigitalocean.app
            owner_uuid: ff36cbc6fd350fe12577f5123133bb5ba01a2419
            progress:
              phase: ACTIVE
              steps:
                - ended_at: 2020-12-01T00:41:26.653Z
                  name: build
                  started_at: 2020-12-01T00:40:11.979Z
                  status: SUCCESS
                  steps:
                    - ended_at: 2020-12-01T00:40:12.470Z
                      name: initialize
                      started_at: 2020-12-01T00:40:11.979Z
                      status: SUCCESS
                    - ended_at: 2020-12-01T00:41:26.180Z
                      name: components
                      started_at: 2020-12-01T00:40:12.470Z
                      status: SUCCESS
                      steps:
                        - component_name: sample-php
                          ended_at: 1901-01-01T00:00:00.000Z
                          message_base: Building service
                          name: sample-php
                          started_at: 1901-01-01T00:00:00.000Z
                          status: SUCCESS
              success_steps: 6
              tier_slug: basic
              total_steps: 6
            region:
              continent: Europe
              data_centers:
                - fra1
              flag: germany
              label: Frankfurt
              slug: fra
            spec:
              name: sample-php
              services:
                - environment_slug: php
                  git:
                    branch: main
                    repo_clone_url: https://github.com/digitalocean/sample-php.git
                  http_port: 8080
                  instance_count: 1
                  instance_size_slug: basic-xxs
                  name: sample-php
                  routes:
                    - path: /
                  run_command: heroku-php-apache2
            tier_slug: basic
            updated_at: 2020-12-01T00:42:16.000Z
    certificates_all:
      value:
        certificates:
          - created_at: 2017-02-08T16:02:37Z
            dns_names:
              - ""
            id: 892071a0-bb95-49bc-8021-3afd67a210bf
            name: web-cert-01
            not_after: 2017-02-22T00:23:00Z
            sha1_fingerprint: dfcc9f57d86bf58e321c2c6c31c7a971be244ac7
            state: verified
            type: custom
          - created_at: 2018-03-09T18:44:11Z
            dns_names:
              - www.example.com
              - example.com
            id: ba9b9c18-6c59-46c2-99df-70da170a42ba
            name: web-cert-02
            not_after: 2018-06-07T17:44:12Z
            sha1_fingerprint: 479c82b5c63cb6d3e6fac4624d58a33b267e166c
            state: verified
            type: lets_encrypt
        links: {}
        meta:
          total: 2
    certificates_custom:
      value:
        certificate:
          created_at: 2017-02-08T16:02:37Z
          dns_names:
            - ""
          id: 892071a0-bb95-49bc-8021-3afd67a210bf
          name: web-cert-01
          not_after: 2017-02-22T00:23:00Z
          sha1_fingerprint: dfcc9f57d86bf58e321c2c6c31c7a971be244ac7
          state: verified
          type: custom
    certificates_lets_encrypt:
      value:
        certificate:
          created_at: 2018-03-09T18:44:11Z
          dns_names:
            - www.example.com
            - example.com
          id: ba9b9c18-6c59-46c2-99df-70da170a42ba
          name: web-cert-02
          not_after: 2018-06-07T17:44:12Z
          sha1_fingerprint: 479c82b5c63cb6d3e6fac4624d58a33b267e166c
          state: verified
          type: lets_encrypt
    certificates_lets_encrypt_pending:
      value:
        certificate:
          created_at: 2018-03-09T18:44:11Z
          dns_names:
            - www.example.com
            - example.com
          id: ba9b9c18-6c59-46c2-99df-70da170a42ba
          name: web-cert-02
          not_after: 2018-06-07T17:44:12Z
          sha1_fingerprint: 479c82b5c63cb6d3e6fac4624d58a33b267e166c
          state: pending
          type: lets_encrypt
    components:
      value:
        components:
          - build_command: makeFile build
            dockerfiles:
              - path/to/dockerfiles
            environment_slug: s-1vcpu-1gb
            http_ports:
              - 1202
        template:
          name: nameofjob
          region: europe
        template_error: error!
        template_found: true
        template_valid: true
    deployment:
      value:
        deployment:
          cause: commit 9a4df0b pushed to github/digitalocean/sample-golang
          created_at: 2020-07-28T18:00:00.000Z
          id: b6bdf840-2854-4f87-a36c-5f231c617c84
          phase_last_updated_at: 1901-01-01T00:00:00.000Z
          services:
            - name: web
              source_commit_hash: 9a4df0b8e161e323bc3cdf1dc71878080fe144fa
          spec:
            name: sample-golang
            region: ams
            services:
              - environment_slug: go
                github:
                  branch: branch
                  repo: digitalocean/sample-golang
                instance_count: 2
                instance_size_slug: basic-xxs
                name: web
                routes:
                  - path: /
                run_command: bin/sample-golang
          updated_at: 2020-07-28T18:00:00.000Z
    deployments:
      value:
        deployments:
          - cause: commit 9a4df0b pushed to github/digitalocean/sample-golang
            created_at: 2020-07-28T18:00:00.000Z
            id: b6bdf840-2854-4f87-a36c-5f231c617c84
            phase_last_updated_at: 1901-01-01T00:00:00.000Z
            services:
              - name: web
                source_commit_hash: 9a4df0b8e161e323bc3cdf1dc71878080fe144fa
            spec:
              name: sample-golang
              region: ams
              services:
                - environment_slug: go
                  github:
                    branch: branch
                    repo: digitalocean/sample-golang
                  instance_count: 2
                  instance_size_slug: basic-xxs
                  name: web
                  routes:
                    - path: /
                  run_command: bin/sample-golang
            updated_at: 2020-07-28T18:00:00.000Z
    domain_record_created:
      value:
        domain_record:
          data: 162.10.66.0
          flags: null
          id: 28448433
          name: www
          port: null
          priority: null
          tag: null
          ttl: 1800
          type: A
          weight: null
    domain_records_all:
      value:
        domain_records:
          - data: ns1.digitalocean.com
            flags: null
            id: 28448429
            name: "@"
            port: null
            priority: null
            tag: null
            ttl: 1800
            type: NS
            weight: null
          - data: ns2.digitalocean.com
            flags: null
            id: 28448430
            name: "@"
            port: null
            priority: null
            tag: null
            ttl: 1800
            type: NS
            weight: null
          - data: ns3.digitalocean.com
            flags: null
            id: 28448431
            name: "@"
            port: null
            priority: null
            tag: null
            ttl: 1800
            type: NS
            weight: null
          - data: 1.2.3.4
            flags: null
            id: 28448432
            name: "@"
            port: null
            priority: null
            tag: null
            ttl: 1800
            type: A
            weight: null
        links: {}
        meta:
          total: 4
    droplet_create_request:
      value:
        backups: true
        image: ubuntu-20-04-x64
        ipv6: true
        monitoring: true
        name: example.com
        region: nyc3
        size: s-1vcpu-1gb
        ssh_keys:
          - 289794
          - 3b:16:e4:bf:8b:00:8b:b8:59:8c:a9:d3:f0:19:fa:45
        tags:
          - env:prod
          - web
        user_data: >
          #cloud-config

          runcmd:
            - touch /test.txt
        vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
    droplet_create_response:
      value:
        droplet:
          backup_ids: []
          created_at: 2020-07-21T18:37:44Z
          disk: 25
          features:
            - backups
            - private_networking
            - ipv6
            - monitoring
          id: 3164444
          image:
            created_at: 2020-05-15T05:47:50Z
            description: ""
            distribution: Ubuntu
            error_message: ""
            id: 63663980
            min_disk_size: 20
            name: 20.04 (LTS) x64
            public: true
            regions:
              - ams2
              - ams3
              - blr1
              - fra1
              - lon1
              - nyc1
              - nyc2
              - nyc3
              - sfo1
              - sfo2
              - sfo3
              - sgp1
              - tor1
            size_gigabytes: 2.36
            slug: ubuntu-20-04-x64
            status: available
            tags: []
            type: snapshot
          kernel: null
          locked: false
          memory: 1024
          name: example.com
          networks:
            v4: []
            v6: []
          next_backup_window: null
          region:
            available: true
            features:
              - private_networking
              - backups
              - ipv6
              - metadata
              - install_agent
              - storage
              - image_transfer
            name: New York 3
            sizes:
              - s-1vcpu-1gb
              - s-1vcpu-2gb
              - s-1vcpu-3gb
              - s-2vcpu-2gb
              - s-3vcpu-1gb
              - s-2vcpu-4gb
              - s-4vcpu-8gb
              - s-6vcpu-16gb
              - s-8vcpu-32gb
              - s-12vcpu-48gb
              - s-16vcpu-64gb
              - s-20vcpu-96gb
              - s-24vcpu-128gb
              - s-32vcpu-192g
            slug: nyc3
          size:
            available: true
            disk: 25
            memory: 1024
            price_hourly: 0.00743999984115362
            price_monthly: 5
            regions:
              - ams2
              - ams3
              - blr1
              - fra1
              - lon1
              - nyc1
              - nyc2
              - nyc3
              - sfo1
              - sfo2
              - sfo3
              - sgp1
              - tor1
            slug: s-1vcpu-1gb
            transfer: 1
            vcpus: 1
          size_slug: s-1vcpu-1gb
          snapshot_ids: []
          status: new
          tags:
            - web
            - env:prod
          vcpus: 1
          volume_ids: []
        links:
          actions:
            - href: https://api.digitalocean.com/v2/actions/7515
              id: 7515
              rel: create
    droplet_multi_create_request:
      value:
        backups: true
        image: ubuntu-20-04-x64
        ipv6: true
        monitoring: true
        names:
          - sub-01.example.com
          - sub-02.example.com
        region: nyc3
        size: s-1vcpu-1gb
        ssh_keys:
          - 289794
          - 3b:16:e4:bf:8b:00:8b:b8:59:8c:a9:d3:f0:19:fa:45
        tags:
          - env:prod
          - web
        user_data: >
          #cloud-config

          runcmd:
            - touch /test.txt
        vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
    droplet_multi_create_response:
      value:
        droplets:
          - backup_ids: []
            created_at: 2020-07-21T18:37:44Z
            disk: 25
            features:
              - backups
              - private_networking
              - ipv6
              - monitoring
            id: 3164444
            image:
              created_at: 2020-05-15T05:47:50Z
              description: ""
              distribution: Ubuntu
              error_message: ""
              id: 63663980
              min_disk_size: 20
              name: 20.04 (LTS) x64
              public: true
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              size_gigabytes: 2.36
              slug: ubuntu-20-04-x64
              status: available
              tags: []
              type: snapshot
            kernel: null
            locked: false
            memory: 1024
            name: sub-01.example.com
            networks:
              v4: []
              v6: []
            next_backup_window: null
            region:
              available: true
              features:
                - private_networking
                - backups
                - ipv6
                - metadata
                - install_agent
                - storage
                - image_transfer
              name: New York 3
              sizes:
                - s-1vcpu-1gb
                - s-1vcpu-2gb
                - s-1vcpu-3gb
                - s-2vcpu-2gb
                - s-3vcpu-1gb
                - s-2vcpu-4gb
                - s-4vcpu-8gb
                - s-6vcpu-16gb
                - s-8vcpu-32gb
                - s-12vcpu-48gb
                - s-16vcpu-64gb
                - s-20vcpu-96gb
                - s-24vcpu-128gb
                - s-32vcpu-192g
              slug: nyc3
            size:
              available: true
              disk: 25
              memory: 1024
              price_hourly: 0.00743999984115362
              price_monthly: 5
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              slug: s-1vcpu-1gb
              transfer: 1
              vcpus: 1
            size_slug: s-1vcpu-1gb
            snapshot_ids: []
            status: new
            tags:
              - web
              - env:prod
            vcpus: 1
            volume_ids: []
          - backup_ids: []
            created_at: 2020-07-21T18:37:44Z
            disk: 25
            features:
              - backups
              - private_networking
              - ipv6
              - monitoring
            id: 3164445
            image:
              created_at: 2020-05-15T05:47:50Z
              description: ""
              distribution: Ubuntu
              error_message: ""
              id: 63663980
              min_disk_size: 20
              name: 20.04 (LTS) x64
              public: true
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              size_gigabytes: 2.36
              slug: ubuntu-20-04-x64
              status: available
              tags: []
              type: snapshot
            kernel: null
            locked: false
            memory: 1024
            name: sub-02.example.com
            networks:
              v4: []
              v6: []
            next_backup_window: null
            region:
              available: true
              features:
                - private_networking
                - backups
                - ipv6
                - metadata
                - install_agent
                - storage
                - image_transfer
              name: New York 3
              sizes:
                - s-1vcpu-1gb
                - s-1vcpu-2gb
                - s-1vcpu-3gb
                - s-2vcpu-2gb
                - s-3vcpu-1gb
                - s-2vcpu-4gb
                - s-4vcpu-8gb
                - s-6vcpu-16gb
                - s-8vcpu-32gb
                - s-12vcpu-48gb
                - s-16vcpu-64gb
                - s-20vcpu-96gb
                - s-24vcpu-128gb
                - s-32vcpu-192g
              slug: nyc3
            size:
              available: true
              disk: 25
              memory: 1024
              price_hourly: 0.00743999984115362
              price_monthly: 5
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              slug: s-1vcpu-1gb
              transfer: 1
              vcpus: 1
            size_slug: s-1vcpu-1gb
            snapshot_ids: []
            status: new
            tags:
              - web
              - env:prod
            vcpus: 1
            volume_ids: []
        links:
          actions:
            - href: https://api.digitalocean.com/v2/actions/7515
              id: 7515
              rel: create
            - href: https://api.digitalocean.com/v2/actions/7516
              id: 7516
              rel: create
    droplet_single:
      value:
        droplet:
          backup_ids:
            - 53893572
          created_at: 2020-07-21T18:37:44Z
          disk: 25
          features:
            - backups
            - private_networking
            - ipv6
          id: 3164444
          image:
            created_at: 2020-05-15T05:47:50Z
            description: ""
            distribution: Ubuntu
            error_message: ""
            id: 63663980
            min_disk_size: 20
            name: 20.04 (LTS) x64
            public: true
            regions:
              - ams2
              - ams3
              - blr1
              - fra1
              - lon1
              - nyc1
              - nyc2
              - nyc3
              - sfo1
              - sfo2
              - sfo3
              - sgp1
              - tor1
            size_gigabytes: 2.36
            slug: ubuntu-20-04-x64
            status: available
            tags: []
            type: snapshot
          kernel: null
          locked: false
          memory: 1024
          name: example.com
          networks:
            v4:
              - gateway: nil
                ip_address: 10.128.192.124
                netmask: 255.255.0.0
                type: private
              - gateway: 192.241.165.1
                ip_address: 192.241.165.154
                netmask: 255.255.255.0
                type: public
            v6:
              - gateway: 2604:a880:0:1010::1
                ip_address: 2604:a880:0:1010::18a:a001
                netmask: 64
                type: public
          next_backup_window:
            end: 2020-07-30T23:00:00Z
            start: 2020-07-30T00:00:00Z
          region:
            available: true
            features:
              - private_networking
              - backups
              - ipv6
              - metadata
              - install_agent
              - storage
              - image_transfer
            name: New York 3
            sizes:
              - s-1vcpu-1gb
              - s-1vcpu-2gb
              - s-1vcpu-3gb
              - s-2vcpu-2gb
              - s-3vcpu-1gb
              - s-2vcpu-4gb
              - s-4vcpu-8gb
              - s-6vcpu-16gb
              - s-8vcpu-32gb
              - s-12vcpu-48gb
              - s-16vcpu-64gb
              - s-20vcpu-96gb
              - s-24vcpu-128gb
              - s-32vcpu-192g
            slug: nyc3
          size:
            available: true
            disk: 25
            memory: 1024
            price_hourly: 0.00743999984115362
            price_monthly: 5
            regions:
              - ams2
              - ams3
              - blr1
              - fra1
              - lon1
              - nyc1
              - nyc2
              - nyc3
              - sfo1
              - sfo2
              - sfo3
              - sgp1
              - tor1
            slug: s-1vcpu-1gb
            transfer: 1
            vcpus: 1
          size_slug: s-1vcpu-1gb
          snapshot_ids:
            - 67512819
          status: active
          tags:
            - web
            - env:prod
          vcpus: 1
          volume_ids: []
          vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
    droplets_all:
      value:
        droplets:
          - backup_ids:
              - 53893572
            created_at: 2020-07-21T18:37:44Z
            disk: 25
            features:
              - backups
              - private_networking
              - ipv6
            id: 3164444
            image:
              created_at: 2020-05-15T05:47:50Z
              description: ""
              distribution: Ubuntu
              error_message: ""
              id: 63663980
              min_disk_size: 20
              name: 20.04 (LTS) x64
              public: true
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              size_gigabytes: 2.36
              slug: ubuntu-20-04-x64
              status: available
              tags: []
              type: snapshot
            kernel: null
            locked: false
            memory: 1024
            name: example.com
            networks:
              v4:
                - gateway: nil
                  ip_address: 10.128.192.124
                  netmask: 255.255.0.0
                  type: private
                - gateway: 192.241.165.1
                  ip_address: 192.241.165.154
                  netmask: 255.255.255.0
                  type: public
              v6:
                - gateway: 2604:a880:0:1010::1
                  ip_address: 2604:a880:0:1010::18a:a001
                  netmask: 64
                  type: public
            next_backup_window:
              end: 2020-07-30T23:00:00Z
              start: 2020-07-30T00:00:00Z
            region:
              available: true
              features:
                - private_networking
                - backups
                - ipv6
                - metadata
                - install_agent
                - storage
                - image_transfer
              name: New York 3
              sizes:
                - s-1vcpu-1gb
                - s-1vcpu-2gb
                - s-1vcpu-3gb
                - s-2vcpu-2gb
                - s-3vcpu-1gb
                - s-2vcpu-4gb
                - s-4vcpu-8gb
                - s-6vcpu-16gb
                - s-8vcpu-32gb
                - s-12vcpu-48gb
                - s-16vcpu-64gb
                - s-20vcpu-96gb
                - s-24vcpu-128gb
                - s-32vcpu-192g
              slug: nyc3
            size:
              available: true
              disk: 25
              memory: 1024
              price_hourly: 0.00743999984115362
              price_monthly: 5
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              slug: s-1vcpu-1gb
              transfer: 1
              vcpus: 1
            size_slug: s-1vcpu-1gb
            snapshot_ids:
              - 67512819
            status: active
            tags:
              - web
              - env:prod
            vcpus: 1
            volume_ids: []
            vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
          - backup_ids: []
            created_at: 2020-07-21T18:42:27Z
            disk: 25
            features:
              - private_networking
            id: 3164459
            image:
              created_at: 2020-05-15T05:47:50Z
              description: ""
              distribution: Ubuntu
              error_message: ""
              id: 63663980
              min_disk_size: 20
              name: 20.04 (LTS) x64
              public: true
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              size_gigabytes: 2.36
              slug: ubuntu-20-04-x64
              status: available
              tags: []
              type: snapshot
            kernel: null
            locked: false
            memory: 1024
            name: assets.example.com
            networks:
              v4:
                - gateway: nil
                  ip_address: 10.128.192.138
                  netmask: 255.255.0.0
                  type: private
                - gateway: 162.243.0.1
                  ip_address: 162.243.0.4
                  netmask: 255.255.255.0
                  type: public
              v6: []
            next_backup_window:
              end: 2020-07-30T23:00:00Z
              start: 2020-07-30T00:00:00Z
            region:
              available: true
              features:
                - private_networking
                - backups
                - ipv6
                - metadata
                - install_agent
                - storage
                - image_transfer
              name: New York 3
              sizes:
                - s-1vcpu-1gb
                - s-1vcpu-2gb
                - s-1vcpu-3gb
                - s-2vcpu-2gb
                - s-3vcpu-1gb
                - s-2vcpu-4gb
                - s-4vcpu-8gb
                - s-6vcpu-16gb
                - s-8vcpu-32gb
                - s-12vcpu-48gb
                - s-16vcpu-64gb
                - s-20vcpu-96gb
                - s-24vcpu-128gb
                - s-32vcpu-192g
              slug: nyc3
            size:
              available: true
              disk: 25
              memory: 1024
              price_hourly: 0.00743999984115362
              price_monthly: 5
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              slug: s-1vcpu-1gb
              transfer: 1
              vcpus: 1
            size_slug: s-1vcpu-1gb
            snapshot_ids: []
            status: active
            tags:
              - storage
              - env:prod
            vcpus: 1
            volume_ids:
              - 506f78a4-e098-11e5-ad9f-000f53306ae1
            vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
          - backup_ids: []
            created_at: 2020-07-21T18:32:55Z
            disk: 25
            features:
              - private_networking
            id: 3164412
            image:
              created_at: 2020-05-15T05:47:50Z
              description: ""
              distribution: Ubuntu
              error_message: ""
              id: 63663980
              min_disk_size: 20
              name: 20.04 (LTS) x64
              public: true
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              size_gigabytes: 2.36
              slug: ubuntu-20-04-x64
              status: available
              tags: []
              type: snapshot
            kernel: null
            locked: false
            memory: 1024
            name: stage.example.com
            networks:
              v4:
                - gateway: nil
                  ip_address: 10.128.192.125
                  netmask: 255.255.0.0
                  type: private
                - gateway: 192.241.247.1
                  ip_address: 192.241.247.248
                  netmask: 255.255.255.0
                  type: public
              v6: []
            next_backup_window:
              end: 2020-07-30T23:00:00Z
              start: 2020-07-30T00:00:00Z
            region:
              available: true
              features:
                - private_networking
                - backups
                - ipv6
                - metadata
                - install_agent
                - storage
                - image_transfer
              name: New York 3
              sizes:
                - s-1vcpu-1gb
                - s-1vcpu-2gb
                - s-1vcpu-3gb
                - s-2vcpu-2gb
                - s-3vcpu-1gb
                - s-2vcpu-4gb
                - s-4vcpu-8gb
                - s-6vcpu-16gb
                - s-8vcpu-32gb
                - s-12vcpu-48gb
                - s-16vcpu-64gb
                - s-20vcpu-96gb
                - s-24vcpu-128gb
                - s-32vcpu-192g
              slug: nyc3
            size:
              available: true
              disk: 25
              memory: 1024
              price_hourly: 0.00743999984115362
              price_monthly: 5
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              slug: s-1vcpu-1gb
              transfer: 1
              vcpus: 1
            size_slug: s-1vcpu-1gb
            snapshot_ids: []
            status: active
            tags:
              - env:stage
            vcpus: 1
            volume_ids:
              - 7724db7c-e098-11e5-b522-000f53304e51
            vpc_uuid: 5a4981aa-9653-4bd1-bef5-d6bff52042e4
        links:
          pages: {}
        meta:
          total: 3
    droplets_tagged:
      value:
        droplets:
          - backup_ids:
              - 53893572
            created_at: 2020-07-21T18:37:44Z
            disk: 25
            features:
              - backups
              - private_networking
              - ipv6
            id: 3164444
            image:
              created_at: 2020-05-15T05:47:50Z
              description: ""
              distribution: Ubuntu
              error_message: ""
              id: 63663980
              min_disk_size: 20
              name: 20.04 (LTS) x64
              public: true
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              size_gigabytes: 2.36
              slug: ubuntu-20-04-x64
              status: available
              tags: []
              type: snapshot
            kernel: null
            locked: false
            memory: 1024
            name: example.com
            networks:
              v4:
                - gateway: nil
                  ip_address: 10.128.192.124
                  netmask: 255.255.0.0
                  type: private
                - gateway: 192.241.165.1
                  ip_address: 192.241.165.154
                  netmask: 255.255.255.0
                  type: public
              v6:
                - gateway: 2604:a880:0:1010::1
                  ip_address: 2604:a880:0:1010::18a:a001
                  netmask: 64
                  type: public
            next_backup_window:
              end: 2020-07-30T23:00:00Z
              start: 2020-07-30T00:00:00Z
            region:
              available: true
              features:
                - private_networking
                - backups
                - ipv6
                - metadata
                - install_agent
                - storage
                - image_transfer
              name: New York 3
              sizes:
                - s-1vcpu-1gb
                - s-1vcpu-2gb
                - s-1vcpu-3gb
                - s-2vcpu-2gb
                - s-3vcpu-1gb
                - s-2vcpu-4gb
                - s-4vcpu-8gb
                - s-6vcpu-16gb
                - s-8vcpu-32gb
                - s-12vcpu-48gb
                - s-16vcpu-64gb
                - s-20vcpu-96gb
                - s-24vcpu-128gb
                - s-32vcpu-192g
              slug: nyc3
            size:
              available: true
              disk: 25
              memory: 1024
              price_hourly: 0.00743999984115362
              price_monthly: 5
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              slug: s-1vcpu-1gb
              transfer: 1
              vcpus: 1
            size_slug: s-1vcpu-1gb
            snapshot_ids:
              - 67512819
            status: active
            tags:
              - web
              - env:prod
            vcpus: 1
            volume_ids: []
            vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
          - backup_ids: []
            created_at: 2020-07-21T18:42:27Z
            disk: 25
            features:
              - private_networking
            id: 3164459
            image:
              created_at: 2020-05-15T05:47:50Z
              description: ""
              distribution: Ubuntu
              error_message: ""
              id: 63663980
              min_disk_size: 20
              name: 20.04 (LTS) x64
              public: true
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              size_gigabytes: 2.36
              slug: ubuntu-20-04-x64
              status: available
              tags: []
              type: snapshot
            kernel: null
            locked: false
            memory: 1024
            name: assets.example.com
            networks:
              v4:
                - gateway: nil
                  ip_address: 10.128.192.138
                  netmask: 255.255.0.0
                  type: private
                - gateway: 162.243.0.1
                  ip_address: 162.243.0.4
                  netmask: 255.255.255.0
                  type: public
              v6: []
            next_backup_window:
              end: 2020-07-30T23:00:00Z
              start: 2020-07-30T00:00:00Z
            region:
              available: true
              features:
                - private_networking
                - backups
                - ipv6
                - metadata
                - install_agent
                - storage
                - image_transfer
              name: New York 3
              sizes:
                - s-1vcpu-1gb
                - s-1vcpu-2gb
                - s-1vcpu-3gb
                - s-2vcpu-2gb
                - s-3vcpu-1gb
                - s-2vcpu-4gb
                - s-4vcpu-8gb
                - s-6vcpu-16gb
                - s-8vcpu-32gb
                - s-12vcpu-48gb
                - s-16vcpu-64gb
                - s-20vcpu-96gb
                - s-24vcpu-128gb
                - s-32vcpu-192g
              slug: nyc3
            size:
              available: true
              disk: 25
              memory: 1024
              price_hourly: 0.00743999984115362
              price_monthly: 5
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              slug: s-1vcpu-1gb
              transfer: 1
              vcpus: 1
            size_slug: s-1vcpu-1gb
            snapshot_ids: []
            status: active
            tags:
              - storage
              - env:prod
            vcpus: 1
            volume_ids:
              - 506f78a4-e098-11e5-ad9f-000f53306ae1
            vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
        links:
          pages: {}
        meta:
          total: 2
    floating_ip_assigned:
      summary: Assigned to Droplet
      value:
        floating_ip:
          droplet:
            backup_ids:
              - 53893572
            created_at: 2020-07-21T18:37:44Z
            disk: 25
            features:
              - backups
              - private_networking
              - ipv6
            id: 3164444
            image:
              created_at: 2020-05-15T05:47:50Z
              description: ""
              distribution: Ubuntu
              error_message: ""
              id: 63663980
              min_disk_size: 20
              name: 20.04 (LTS) x64
              public: true
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              size_gigabytes: 2.36
              slug: ubuntu-20-04-x64
              status: available
              tags: []
              type: snapshot
            kernel: null
            locked: false
            memory: 1024
            name: example.com
            networks:
              v4:
                - gateway: nil
                  ip_address: 10.128.192.124
                  netmask: 255.255.0.0
                  type: private
                - gateway: 192.241.165.1
                  ip_address: 192.241.165.154
                  netmask: 255.255.255.0
                  type: public
              v6:
                - gateway: 2604:a880:0:1010::1
                  ip_address: 2604:a880:0:1010::18a:a001
                  netmask: 64
                  type: public
            next_backup_window:
              end: 2020-07-30T23:00:00Z
              start: 2020-07-30T00:00:00Z
            region:
              available: true
              features:
                - private_networking
                - backups
                - ipv6
                - metadata
                - install_agent
                - storage
                - image_transfer
              name: New York 3
              sizes:
                - s-1vcpu-1gb
                - s-1vcpu-2gb
                - s-1vcpu-3gb
                - s-2vcpu-2gb
                - s-3vcpu-1gb
                - s-2vcpu-4gb
                - s-4vcpu-8gb
                - s-6vcpu-16gb
                - s-8vcpu-32gb
                - s-12vcpu-48gb
                - s-16vcpu-64gb
                - s-20vcpu-96gb
                - s-24vcpu-128gb
                - s-32vcpu-192g
              slug: nyc3
            size:
              available: true
              disk: 25
              memory: 1024
              price_hourly: 0.00743999984115362
              price_monthly: 5
              regions:
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
              slug: s-1vcpu-1gb
              transfer: 1
              vcpus: 1
            size_slug: s-1vcpu-1gb
            snapshot_ids:
              - 67512819
            status: active
            tags:
              - web
              - env:prod
            vcpus: 1
            volume_ids: []
            vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
          ip: 45.55.96.47
          locked: false
          region:
            available: true
            features:
              - private_networking
              - backups
              - ipv6
              - metadata
              - install_agent
              - storage
              - image_transfer
            name: New York 3
            sizes:
              - s-1vcpu-1gb
              - s-1vcpu-2gb
              - s-1vcpu-3gb
              - s-2vcpu-2gb
              - s-3vcpu-1gb
              - s-2vcpu-4gb
              - s-4vcpu-8gb
              - s-6vcpu-16gb
              - s-8vcpu-32gb
              - s-12vcpu-48gb
              - s-16vcpu-64gb
              - s-20vcpu-96gb
              - s-24vcpu-128gb
              - s-32vcpu-192g
            slug: nyc3
    floating_ip_assigning:
      summary: Assigning to Droplet
      value:
        floating_ip:
          droplet: null
          ip: 45.55.96.47
          locked: true
          region:
            available: true
            features:
              - private_networking
              - backups
              - ipv6
              - metadata
              - install_agent
              - storage
              - image_transfer
            name: New York 3
            sizes:
              - s-1vcpu-1gb
              - s-1vcpu-2gb
              - s-1vcpu-3gb
              - s-2vcpu-2gb
              - s-3vcpu-1gb
              - s-2vcpu-4gb
              - s-4vcpu-8gb
              - s-6vcpu-16gb
              - s-8vcpu-32gb
              - s-12vcpu-48gb
              - s-16vcpu-64gb
              - s-20vcpu-96gb
              - s-24vcpu-128gb
              - s-32vcpu-192g
            slug: nyc3
        links:
          actions:
            - href: https://api.digitalocean.com/v2/actions/1088924622
              id: 1088924622
              rel: assign_ip
          droplets:
            - href: https://api.digitalocean.com/v2/droplets/213939433
              id: 213939433
              rel: droplet
    floating_ip_reserved:
      summary: Reserved to Region
      value:
        floating_ip:
          droplet: null
          ip: 45.55.96.47
          locked: false
          region:
            available: true
            features:
              - private_networking
              - backups
              - ipv6
              - metadata
              - install_agent
              - storage
              - image_transfer
            name: New York 3
            sizes:
              - s-1vcpu-1gb
              - s-1vcpu-2gb
              - s-1vcpu-3gb
              - s-2vcpu-2gb
              - s-3vcpu-1gb
              - s-2vcpu-4gb
              - s-4vcpu-8gb
              - s-6vcpu-16gb
              - s-8vcpu-32gb
              - s-12vcpu-48gb
              - s-16vcpu-64gb
              - s-20vcpu-96gb
              - s-24vcpu-128gb
              - s-32vcpu-192g
            slug: nyc3
    floating_ip_reserving:
      summary: Reserving to Region
      value:
        floating_ip:
          droplet: null
          ip: 45.55.96.47
          locked: false
          region:
            available: true
            features:
              - private_networking
              - backups
              - ipv6
              - metadata
              - install_agent
              - storage
              - image_transfer
            name: New York 3
            sizes:
              - s-1vcpu-1gb
              - s-1vcpu-2gb
              - s-1vcpu-3gb
              - s-2vcpu-2gb
              - s-3vcpu-1gb
              - s-2vcpu-4gb
              - s-4vcpu-8gb
              - s-6vcpu-16gb
              - s-8vcpu-32gb
              - s-12vcpu-48gb
              - s-16vcpu-64gb
              - s-20vcpu-96gb
              - s-24vcpu-128gb
              - s-32vcpu-192g
            slug: nyc3
        links: {}
    images_all:
      value:
        images:
          - created_at: 2014-11-04T22:23:02Z
            description: ""
            distribution: Ubuntu
            error_message: ""
            id: 7555620
            min_disk_size: 20
            name: Nifty New Snapshot
            public: false
            regions:
              - nyc2
              - nyc3
            size_gigabytes: 2.34
            slug: null
            status: available
            tags: []
            type: snapshot
          - created_at: 2014-11-04T22:23:02Z
            description: ""
            distribution: Ubuntu
            error_message: ""
            id: 7555621
            min_disk_size: 20
            name: Another Snapshot
            public: false
            regions:
              - nyc2
            size_gigabytes: 2.34
            slug: null
            status: available
            tags: []
            type: snapshot
          - created_at: 2020-05-15T05:47:50Z
            description: ""
            distribution: Ubuntu
            error_message: ""
            id: 63663980
            min_disk_size: 20
            name: 20.04 (LTS) x64
            public: true
            regions:
              - nyc2
              - nyc3
            size_gigabytes: 2.36
            slug: ubuntu-20-04-x64
            status: available
            tags: []
            type: snapshot
          - created_at: 2014-11-04T22:23:02Z
            description: ""
            distribution: Arch Linux
            error_message: ""
            id: 7555621
            min_disk_size: 20
            name: A custom image
            public: false
            regions:
              - nyc3
            size_gigabytes: 2.34
            slug: null
            status: available
            tags: []
            type: custom
          - created_at: 2014-11-04T22:23:02Z
            description: ""
            distribution: Fedora
            error_message: ""
            id: 7555621
            min_disk_size: 20
            name: An APP image
            public: false
            regions:
              - nyc2
              - nyc3
            size_gigabytes: 2.34
            slug: null
            status: available
            tags: []
            type: snapshot
          - created_at: 2014-11-04T22:23:02Z
            description: ""
            distribution: CentOS
            error_message: ""
            id: 7555621
            min_disk_size: 20
            name: A simple tagged image
            public: false
            regions:
              - nyc2
              - nyc3
            size_gigabytes: 2.34
            slug: null
            status: available
            tags:
              - simple-image
            type: snapshot
        links:
          pages: {}
        meta:
          total: 6
    images_application:
      description: >
        **Important:**  

        The `type` query parameter is not directly related to the `type` attribute.
      value:
        images:
          - created_at: 2014-11-04T22:23:02Z
            description: ""
            distribution: Fedora
            error_message: ""
            id: 7555621
            min_disk_size: 20
            name: An APP image
            public: false
            regions:
              - nyc2
              - nyc3
            size_gigabytes: 2.34
            slug: null
            status: available
            tags: []
            type: snapshot
        links:
          pages: {}
        meta:
          total: 1
    images_custom:
      value:
        images:
          - created_at: 2014-11-04T22:23:02Z
            description: ""
            distribution: Arch Linux
            error_message: ""
            id: 7555621
            min_disk_size: 20
            name: A custom image
            public: false
            regions:
              - nyc3
            size_gigabytes: 2.34
            slug: null
            status: available
            tags: []
            type: custom
        links:
          pages: {}
        meta:
          total: 1
    images_distribution:
      description: >
        **Important:**  

        The `type` query parameter is not directly related to the `type` attribute.

        The main thing to remember here is that DigitalOcean-produced distribution images will have `snapshot` as the type attribute. 
      value:
        images:
          - created_at: 2020-05-15T05:47:50Z
            description: ""
            distribution: Ubuntu
            error_message: ""
            id: 63663980
            min_disk_size: 20
            name: 20.04 (LTS) x64
            public: true
            regions:
              - nyc2
              - nyc3
            size_gigabytes: 2.36
            slug: ubuntu-20-04-x64
            status: available
            tags: []
            type: snapshot
        links:
          pages: {}
        meta:
          total: 1
    images_snapshots:
      value:
        images:
          - created_at: 2014-11-04T22:23:02Z
            description: ""
            distribution: Ubuntu
            error_message: ""
            id: 7555620
            min_disk_size: 20
            name: Nifty New Snapshot
            public: false
            regions:
              - nyc2
              - nyc3
            size_gigabytes: 2.34
            slug: null
            status: available
            tags: []
            type: snapshot
          - created_at: 2014-11-04T22:23:02Z
            description: ""
            distribution: Ubuntu
            error_message: ""
            id: 7555621
            min_disk_size: 20
            name: Another Snapshot
            public: false
            regions:
              - nyc2
            size_gigabytes: 2.34
            slug: null
            status: available
            tags: []
            type: snapshot
        links:
          pages: {}
        meta:
          total: 2
    images_tagged:
      value:
        images:
          - created_at: 2014-11-04T22:23:02Z
            description: ""
            distribution: CentOS
            error_message: ""
            id: 7555621
            min_disk_size: 20
            name: A simple tagged image
            public: false
            regions:
              - nyc2
              - nyc3
            size_gigabytes: 2.34
            slug: null
            status: available
            tags:
              - simple-image
            type: snapshot
        links:
          pages: {}
        meta:
          total: 1
    instance_size:
      value:
        instance_size:
          cpu_type: DEDICATED
          cpus: "1"
          memory_bytes: "234034"
          name: Basic XXS
          slug: basic-xxs
          tier_downgrade_to: starter-xx
          tier_slug: basic
          tier_upgrade_to: professional-xs
          usd_per_month: "5"
          usd_per_second: "0.00000123847324"
    instance_sizes:
      value:
        instance_sizes:
          - cpu_type: DEDICATED
            cpus: "1"
            memory_bytes: "234034"
            name: Basic XXS
            slug: basic-xxs
            tier_downgrade_to: starter-xx
            tier_slug: basic
            tier_upgrade_to: professional-xs
            usd_per_month: "5"
            usd_per_second: "0.00000123847324"
    kubernetes_clusters_all:
      value:
        kubernetes_clusters:
          - auto_upgrade: false
            cluster_subnet: 10.244.0.0/16
            created_at: 2018-11-15T16:00:11Z
            endpoint: https://bd5f5959-5e1e-4205-a714-a914373942af.k8s.ondigitalocean.com
            id: bd5f5959-5e1e-4205-a714-a914373942af
            ipv4: 68.183.121.157
            maintenance_policy:
              day: any
              duration: 4h0m0s
              start_time: 00:00
            name: prod-cluster-01
            node_pools:
              - auto_scale: false
                count: 3
                id: cdda885e-7663-40c8-bc74-3a036c66545d
                labels: null
                max_nodes: 0
                min_nodes: 0
                name: frontend-pool
                nodes:
                  - created_at: 2018-11-15T16:00:11Z
                    droplet_id: "205545370"
                    id: 478247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
                    name: adoring-newton-3niq
                    status:
                      state: provisioning
                    updated_at: 2018-11-15T16:00:11Z
                  - created_at: 2018-11-15T16:00:11Z
                    droplet_id: "205545371"
                    id: ad12e744-c2a9-473d-8aa9-be5680500eb1
                    name: adoring-newton-3nim
                    status:
                      state: provisioning
                    updated_at: 2018-11-15T16:00:11Z
                  - created_at: 2018-11-15T16:00:11Z
                    droplet_id: "205545372"
                    id: e46e8d07-f58f-4ff1-9737-97246364400e
                    name: adoring-newton-3ni7
                    status:
                      state: provisioning
                    updated_at: 2018-11-15T16:00:11Z
                size: s-1vcpu-2gb
                tags:
                  - production
                  - web-team
                  - k8s
                  - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                  - k8s:worker
                taints: []
              - auto_scale: true
                count: 2
                id: f49f4379-7e7f-4af5-aeb6-0354bd840778
                labels:
                  priority: high
                  service: backend
                max_nodes: 5
                min_nodes: 2
                name: backend-pool
                nodes:
                  - created_at: 2018-11-15T16:00:11Z
                    droplet_id: "205545373"
                    id: 3385619f-8ec3-42ba-bb23-8d21b8ba7518
                    name: affectionate-nightingale-3nif
                    status:
                      state: provisioning
                    updated_at: 2018-11-15T16:00:11Z
                  - created_at: 2018-11-15T16:00:11Z
                    droplet_id: "205545374"
                    id: 4b8f60ff-ba06-4523-a6a4-b8148244c7e6
                    name: affectionate-nightingale-3niy
                    status:
                      state: provisioning
                    updated_at: 2018-11-15T16:00:11Z
                size: g-4vcpu-16gb
                tags:
                  - production
                  - web-team
                  - k8s
                  - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                  - k8s:worker
                taints: []
            region: nyc1
            registry_enabled: false
            service_subnet: 10.245.0.0/16
            status:
              message: provisioning
              state: provisioning
            surge_upgrade: false
            tags:
              - production
              - web-team
              - k8s
              - k8s:bd5f5959-5e1e-4205-a714-a914373942af
            updated_at: 2018-11-15T16:00:11Z
            version: 1.18.6-do.0
            vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
        meta:
          total: 1
    kubernetes_clusters_basic_request:
      value:
        name: prod-cluster-01
        node_pools:
          - count: 3
            name: worker-pool
            size: s-1vcpu-2gb
        region: nyc1
        version: 1.18.6-do.0
    kubernetes_clusters_create_basic_response:
      value:
        kubernetes_cluster:
          auto_upgrade: false
          cluster_subnet: 10.244.0.0/16
          created_at: 2018-11-15T16:00:11Z
          endpoint: ""
          id: bd5f5959-5e1e-4205-a714-a914373942af
          ipv4: ""
          maintenance_policy:
            day: any
            duration: 4h0m0s
            start_time: 00:00
          name: prod-cluster-01
          node_pools:
            - auto_scale: false
              count: 3
              id: cdda885e-7663-40c8-bc74-3a036c66545d
              labels: null
              max_nodes: 0
              min_nodes: 0
              name: worker-pool
              nodes:
                - created_at: 2018-11-15T16:00:11Z
                  droplet_id: ""
                  id: 478247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
                  name: ""
                  status:
                    state: provisioning
                  updated_at: 2018-11-15T16:00:11Z
                - created_at: 2018-11-15T16:00:11Z
                  droplet_id: ""
                  id: ad12e744-c2a9-473d-8aa9-be5680500eb1
                  name: ""
                  status:
                    state: provisioning
                  updated_at: 2018-11-15T16:00:11Z
                - created_at: 2018-11-15T16:00:11Z
                  droplet_id: ""
                  id: e46e8d07-f58f-4ff1-9737-97246364400e
                  name: ""
                  status:
                    state: provisioning
                  updated_at: 2018-11-15T16:00:11Z
              size: s-1vcpu-2gb
              tags:
                - k8s
                - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                - k8s:worker
              taints: []
          region: nyc1
          registry_enabled: false
          service_subnet: 10.245.0.0/16
          status:
            message: provisioning
            state: provisioning
          surge_upgrade: false
          tags:
            - k8s
            - k8s:bd5f5959-5e1e-4205-a714-a914373942af
          updated_at: 2018-11-15T16:00:11Z
          version: 1.18.6-do.0
          vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
    kubernetes_clusters_multi_pool_request:
      description: >
        This example request creates a Kubernetes cluster with two node pools. It

        also demonstrates setting tags, labels, auto scaling, and a maintenance

        policy.
      value:
        maintenance_policy:
          day: any
          start_time: 12:00
        name: prod-cluster-01
        node_pools:
          - count: 3
            name: frontend-pool
            size: s-1vcpu-2gb
            tags:
              - frontend
          - auto_scale: true
            count: 2
            labels:
              priority: high
              service: backend
            max_nodes: 5
            min_nodes: 2
            name: backend-pool
            size: g-4vcpu-16gb
        region: nyc1
        tags:
          - production
          - web-team
        version: 1.18.6-do.0
    kubernetes_clusters_multi_pool_response:
      value:
        kubernetes_clusters:
          auto_upgrade: false
          cluster_subnet: 10.244.0.0/16
          created_at: 2018-11-15T16:00:11Z
          endpoint: ""
          id: bd5f5959-5e1e-4205-a714-a914373942af
          ipv4: ""
          maintenance_policy:
            day: any
            duration: 4h0m0s
            start_time: 12:00
          name: prod-cluster-01
          node_pools:
            - auto_scale: false
              count: 3
              id: cdda885e-7663-40c8-bc74-3a036c66545d
              labels: null
              max_nodes: 0
              min_nodes: 0
              name: frontend-pool
              nodes:
                - created_at: 2018-11-15T16:00:11Z
                  droplet_id: ""
                  id: 478247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
                  name: ""
                  status:
                    state: provisioning
                  updated_at: 2018-11-15T16:00:11Z
                - created_at: 2018-11-15T16:00:11Z
                  droplet_id: ""
                  id: ad12e744-c2a9-473d-8aa9-be5680500eb1
                  name: ""
                  status:
                    state: provisioning
                  updated_at: 2018-11-15T16:00:11Z
                - created_at: 2018-11-15T16:00:11Z
                  droplet_id: ""
                  id: e46e8d07-f58f-4ff1-9737-97246364400e
                  name: ""
                  status:
                    state: provisioning
                  updated_at: 2018-11-15T16:00:11Z
              size: s-1vcpu-2gb
              tags:
                - production
                - web-team
                - frontend
                - k8s
                - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                - k8s:worker
              taints: []
            - auto_scale: true
              count: 2
              id: f49f4379-7e7f-4af5-aeb6-0354bd840778
              labels:
                priority: high
                service: backend
              max_nodes: 5
              min_nodes: 2
              name: backend-pool
              nodes:
                - created_at: 2018-11-15T16:00:11Z
                  droplet_id: ""
                  id: 3385619f-8ec3-42ba-bb23-8d21b8ba7518
                  name: ""
                  status:
                    state: provisioning
                  updated_at: 2018-11-15T16:00:11Z
                - created_at: 2018-11-15T16:00:11Z
                  droplet_id: ""
                  id: 4b8f60ff-ba06-4523-a6a4-b8148244c7e6
                  name: ""
                  status:
                    state: provisioning
                  updated_at: 2018-11-15T16:00:11Z
              size: g-4vcpu-16gb
              tags:
                - production
                - web-team
                - k8s
                - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                - k8s:worker
              taints: []
          region: nyc1
          registry_enabled: false
          service_subnet: 10.245.0.0/16
          status:
            message: provisioning
            state: provisioning
          surge_upgrade: false
          tags:
            - production
            - web-team
            - k8s
            - k8s:bd5f5959-5e1e-4205-a714-a914373942af
          updated_at: 2018-11-15T16:00:11Z
          version: 1.18.6-do.0
          vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
    kubernetes_options:
      value:
        options:
          regions:
            - name: New York 1
              slug: nyc1
            - name: Singapore 1
              slug: sgp1
            - name: London 1
              slug: lon1
            - name: New York 3
              slug: nyc3
            - name: Amsterdam 3
              slug: ams3
            - name: Frankfurt 1
              slug: fra1
            - name: Toronto 1
              slug: tor1
            - name: San Francisco 2
              slug: sfo2
            - name: Bangalore 1
              slug: blr1
            - name: San Francisco 3
              slug: sfo3
          sizes:
            - name: s-1vcpu-2gb
              slug: s-1vcpu-2gb
            - name: s-2vcpu-2gb
              slug: s-2vcpu-2gb
            - name: s-1vcpu-3gb
              slug: s-1vcpu-3gb
            - name: s-2vcpu-4gb
              slug: s-2vcpu-4gb
            - name: s-4vcpu-8gb
              slug: s-4vcpu-8gb
            - name: c-2-4GiB
              slug: c-2
            - name: g-2vcpu-8gb
              slug: g-2vcpu-8gb
            - name: gd-2vcpu-8gb
              slug: gd-2vcpu-8gb
            - name: s-8vcpu-16gb
              slug: s-8vcpu-16gb
            - name: s-6vcpu-16gb
              slug: s-6vcpu-16gb
            - name: c-4-8GiB
              slug: c-4
            - name: m-2vcpu-16gb
              slug: m-2vcpu-16gb
            - name: m3-2vcpu-16gb
              slug: m3-2vcpu-16gb
            - name: g-4vcpu-16gb
              slug: g-4vcpu-16gb
            - name: gd-4vcpu-16gb
              slug: gd-4vcpu-16gb
            - name: m6-2vcpu-16gb
              slug: m6-2vcpu-16gb
            - name: s-8vcpu-32gb
              slug: s-8vcpu-32gb
            - name: c-8-16GiB
              slug: c-8
            - name: m-4vcpu-32gb
              slug: m-4vcpu-32gb
            - name: m3-4vcpu-32gb
              slug: m3-4vcpu-32gb
            - name: g-8vcpu-32gb
              slug: g-8vcpu-32gb
            - name: s-12vcpu-48gb
              slug: s-12vcpu-48gb
            - name: gd-8vcpu-32gb
              slug: gd-8vcpu-32gb
            - name: m6-4vcpu-32gb
              slug: m6-4vcpu-32gb
            - name: s-16vcpu-64gb
              slug: s-16vcpu-64gb
            - name: c-16
              slug: c-16
            - name: m-8vcpu-64gb
              slug: m-8vcpu-64gb
            - name: m3-8vcpu-64gb
              slug: m3-8vcpu-64gb
            - name: g-16vcpu-64gb
              slug: g-16vcpu-64gb
            - name: s-20vcpu-96gb
              slug: s-20vcpu-96gb
            - name: gd-16vcpu-64gb
              slug: gd-16vcpu-64gb
            - name: m6-8vcpu-64gb
              slug: m6-8vcpu-64gb
            - name: s-24vcpu-128gb
              slug: s-24vcpu-128gb
            - name: c-32-64GiB
              slug: c-32
            - name: m-16vcpu-128gb
              slug: m-16vcpu-128gb
            - name: m3-16vcpu-128gb
              slug: m3-16vcpu-128gb
            - name: g-32vcpu-128gb
              slug: g-32vcpu-128gb
            - name: s-32vcpu-192gb
              slug: s-32vcpu-192gb
            - name: gd-32vcpu-128gb
              slug: gd-32vcpu-128gb
            - name: m-24vcpu-192gb
              slug: m-24vcpu-192gb
            - name: m6-16vcpu-128gb
              slug: m6-16vcpu-128gb
            - name: g-40vcpu-160gb
              slug: g-40vcpu-160gb
            - name: gd-40vcpu-160gb
              slug: gd-40vcpu-160gb
            - name: m3-24vcpu-192gb
              slug: m3-24vcpu-192gb
            - name: m-32vcpu-256gb
              slug: m-32vcpu-256gb
            - name: m6-24vcpu-192gb
              slug: m6-24vcpu-192gb
            - name: m3-32vcpu-256gb
              slug: m3-32vcpu-256gb
            - name: m6-32vcpu-256gb
              slug: m6-32vcpu-256gb
          versions:
            - kubernetes_version: 1.18.8
              slug: 1.18.8-do.0
            - kubernetes_version: 1.17.11
              slug: 1.17.11-do.0
            - kubernetes_version: 1.16.14
              slug: 1.16.14-do.0
    kubernetes_single:
      value:
        kubernetes_cluster:
          auto_upgrade: false
          cluster_subnet: 10.244.0.0/16
          created_at: 2018-11-15T16:00:11Z
          endpoint: https://bd5f5959-5e1e-4205-a714-a914373942af.k8s.ondigitalocean.com
          id: bd5f5959-5e1e-4205-a714-a914373942af
          ipv4: 68.183.121.157
          maintenance_policy:
            day: any
            duration: 4h0m0s
            start_time: 00:00
          name: prod-cluster-01
          node_pools:
            - auto_scale: false
              count: 3
              id: cdda885e-7663-40c8-bc74-3a036c66545d
              labels: null
              max_nodes: 0
              min_nodes: 0
              name: frontend-pool
              nodes:
                - created_at: 2018-11-15T16:00:11Z
                  droplet_id: "205545370"
                  id: 478247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
                  name: adoring-newton-3niq
                  status:
                    state: running
                  updated_at: 2018-11-15T16:00:11Z
                - created_at: 2018-11-15T16:00:11Z
                  droplet_id: "205545371"
                  id: ad12e744-c2a9-473d-8aa9-be5680500eb1
                  name: adoring-newton-3nim
                  status:
                    state: running
                  updated_at: 2018-11-15T16:00:11Z
                - created_at: 2018-11-15T16:00:11Z
                  droplet_id: "205545372"
                  id: e46e8d07-f58f-4ff1-9737-97246364400e
                  name: adoring-newton-3ni7
                  status:
                    state: running
                  updated_at: 2018-11-15T16:00:11Z
              size: s-1vcpu-2gb
              tags:
                - production
                - web-team
                - k8s
                - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                - k8s:worker
              taints: []
            - auto_scale: true
              count: 2
              id: f49f4379-7e7f-4af5-aeb6-0354bd840778
              labels:
                priority: high
                service: backend
              max_nodes: 5
              min_nodes: 2
              name: backend-pool
              nodes:
                - created_at: 2018-11-15T16:00:11Z
                  droplet_id: "205545373"
                  id: 3385619f-8ec3-42ba-bb23-8d21b8ba7518
                  name: affectionate-nightingale-3nif
                  status:
                    state: running
                  updated_at: 2018-11-15T16:00:11Z
                - created_at: 2018-11-15T16:00:11Z
                  droplet_id: "205545374"
                  id: 4b8f60ff-ba06-4523-a6a4-b8148244c7e6
                  name: affectionate-nightingale-3niy
                  status:
                    state: running
                  updated_at: 2018-11-15T16:00:11Z
              size: g-4vcpu-16gb
              tags:
                - production
                - web-team
                - k8s
                - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                - k8s:worker
              taints: []
          region: nyc1
          registry_enabled: false
          service_subnet: 10.245.0.0/16
          status:
            state: running
          surge_upgrade: false
          tags:
            - production
            - web-team
            - k8s
            - k8s:bd5f5959-5e1e-4205-a714-a914373942af
          updated_at: 2018-11-15T16:00:11Z
          version: 1.18.6-do.0
          vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
    kubernetes_updated:
      value:
        kubernetes_cluster:
          auto_upgrade: true
          cluster_subnet: 10.244.0.0/16
          created_at: 2018-11-15T16:00:11Z
          endpoint: https://bd5f5959-5e1e-4205-a714-a914373942af.k8s.ondigitalocean.com
          id: bd5f5959-5e1e-4205-a714-a914373942af
          ipv4: 68.183.121.157
          maintenance_policy:
            day: any
            duration: 4h0m0s
            start_time: 00:00
          name: prod-cluster-01
          node_pools:
            - auto_scale: false
              count: 3
              id: cdda885e-7663-40c8-bc74-3a036c66545d
              labels: null
              max_nodes: 0
              min_nodes: 0
              name: frontend-pool
              nodes:
                - created_at: 2018-11-15T16:00:11Z
                  droplet_id: "205545370"
                  id: 478247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
                  name: adoring-newton-3niq
                  status:
                    state: running
                  updated_at: 2018-11-15T16:00:11Z
                - created_at: 2018-11-15T16:00:11Z
                  droplet_id: "205545371"
                  id: ad12e744-c2a9-473d-8aa9-be5680500eb1
                  name: adoring-newton-3nim
                  status:
                    state: running
                  updated_at: 2018-11-15T16:00:11Z
                - created_at: 2018-11-15T16:00:11Z
                  droplet_id: "205545372"
                  id: e46e8d07-f58f-4ff1-9737-97246364400e
                  name: adoring-newton-3ni7
                  status:
                    state: running
                  updated_at: 2018-11-15T16:00:11Z
              size: s-1vcpu-2gb
              tags:
                - production
                - web-team
                - k8s
                - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                - k8s:worker
              taints: []
            - auto_scale: true
              count: 2
              id: f49f4379-7e7f-4af5-aeb6-0354bd840778
              labels:
                priority: high
                service: backend
              max_nodes: 5
              min_nodes: 2
              name: backend-pool
              nodes:
                - created_at: 2018-11-15T16:00:11Z
                  droplet_id: "205545373"
                  id: 3385619f-8ec3-42ba-bb23-8d21b8ba7518
                  name: affectionate-nightingale-3nif
                  status:
                    state: running
                  updated_at: 2018-11-15T16:00:11Z
                - created_at: 2018-11-15T16:00:11Z
                  droplet_id: "205545374"
                  id: 4b8f60ff-ba06-4523-a6a4-b8148244c7e6
                  name: affectionate-nightingale-3niy
                  status:
                    state: running
                  updated_at: 2018-11-15T16:00:11Z
              size: g-4vcpu-16gb
              tags:
                - production
                - web-team
                - k8s
                - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                - k8s:worker
              taints: []
          region: nyc1
          registry_enabled: false
          service_subnet: 10.245.0.0/16
          status:
            state: running
          surge_upgrade: true
          tags:
            - production
            - web-team
            - k8s
            - k8s:bd5f5959-5e1e-4205-a714-a914373942af
          updated_at: 2018-11-15T16:00:11Z
          version: 1.18.6-do.0
          vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
    load_balancer_basic_create_request:
      description: Passing requests directly through to 80 and 443.
      value:
        droplet_ids:
          - 3164444
          - 3164445
        forwarding_rules:
          - entry_port: 80
            entry_protocol: http
            target_port: 80
            target_protocol: http
          - entry_port: 443
            entry_protocol: https
            target_port: 443
            target_protocol: https
            tls_passthrough: true
        name: example-lb-01
        region: nyc3
    load_balancer_basic_response:
      value:
        load_balancer:
          algorithm: round_robin
          created_at: 2017-02-01T22:22:58Z
          droplet_ids:
            - 3164444
            - 3164445
          enable_backend_keepalive: false
          enable_proxy_protocol: false
          forwarding_rules:
            - certificate_id: ""
              entry_port: 80
              entry_protocol: http
              target_port: 80
              target_protocol: http
              tls_passthrough: false
            - certificate_id: ""
              entry_port: 443
              entry_protocol: https
              target_port: 443
              target_protocol: https
              tls_passthrough: true
          health_check:
            check_interval_seconds: 10
            healthy_threshold: 5
            path: /
            port: 80
            protocol: http
            response_timeout_seconds: 5
            unhealthy_threshold: 3
          id: 4de7ac8b-495b-4884-9a69-1050c6793cd6
          ip: 104.131.186.241
          name: example-lb-01
          redirect_http_to_https: false
          region:
            available: true
            features:
              - private_networking
              - backups
              - ipv6
              - metadata
              - install_agent
            name: New York 3
            sizes:
              - s-1vcpu-1gb
              - s-1vcpu-2gb
              - s-1vcpu-3gb
              - s-2vcpu-2gb
              - s-3vcpu-1gb
              - s-2vcpu-4gb
              - s-4vcpu-8gb
              - s-6vcpu-16gb
              - s-8vcpu-32gb
              - s-12vcpu-48gb
              - s-16vcpu-64gb
              - s-20vcpu-96gb
              - s-24vcpu-128gb
              - s-32vcpu-192gb
            slug: nyc3
          size: lb-small
          status: new
          sticky_sessions:
            type: none
          tag: ""
          vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
    load_balancer_ssl_termination_create_request:
      description: Terminating SSL at the load balancer using a managed SSL certificate specifying Droplets using `droplet_ids`.
      value:
        droplet_ids:
          - 3164444
          - 3164445
        forwarding_rules:
          - certificate_id: 892071a0-bb95-49bc-8021-3afd67a210bf
            entry_port: 443
            entry_protocol: https
            target_port: 8080
            target_protocol: http
        name: example-lb-01
        region: nyc3
    load_balancer_ssl_termination_response:
      value:
        load_balancer:
          algorithm: round_robin
          created_at: 2017-02-01T22:22:58Z
          droplet_ids:
            - 3164444
            - 3164445
          enable_backend_keepalive: false
          enable_proxy_protocol: false
          forwarding_rules:
            - certificate_id: 892071a0-bb95-49bc-8021-3afd67a210bf
              entry_port: 443
              entry_protocol: https
              target_port: 8080
              target_protocol: http
          health_check:
            check_interval_seconds: 10
            healthy_threshold: 5
            path: /
            port: 80
            protocol: http
            response_timeout_seconds: 5
            unhealthy_threshold: 3
          id: 4de7ac8b-495b-4884-9a69-1050c6793cd6
          ip: 104.131.186.241
          name: example-lb-01
          redirect_http_to_https: false
          region:
            available: true
            features:
              - private_networking
              - backups
              - ipv6
              - metadata
              - install_agent
            name: New York 3
            sizes:
              - s-1vcpu-1gb
              - s-1vcpu-2gb
              - s-1vcpu-3gb
              - s-2vcpu-2gb
              - s-3vcpu-1gb
              - s-2vcpu-4gb
              - s-4vcpu-8gb
              - s-6vcpu-16gb
              - s-8vcpu-32gb
              - s-12vcpu-48gb
              - s-16vcpu-64gb
              - s-20vcpu-96gb
              - s-24vcpu-128gb
              - s-32vcpu-192gb
            slug: nyc3
          size: lb-small
          status: new
          sticky_sessions:
            type: none
          tag: ""
          vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
    load_balancer_sticky_sessions_and_health_check_create_request:
      description: Terminating SSL at the load balancer using a managed SSL certificate specifying Droplets using `tag`.
      value:
        forwarding_rules:
          - certificate_id: 892071a0-bb95-49bc-8021-3afd67a210bf
            entry_port: 443
            entry_protocol: https
            target_port: 8080
            target_protocol: http
        health_check:
          check_interval_seconds: 10
          healthy_threshold: 5
          path: /health
          port: 8080
          protocol: http
          response_timeout_seconds: 5
          unhealthy_threshold: 3
        name: example-lb-01
        region: nyc3
        sticky_sessions:
          cookie_name: LB_COOKIE
          cookie_ttl_seconds: 300
          type: cookies
        tag: prod:web
    load_balancer_sticky_sessions_and_health_check_response:
      value:
        load_balancer:
          algorithm: round_robin
          created_at: 2017-02-01T22:22:58Z
          droplet_ids:
            - 3164444
            - 3164445
          enable_backend_keepalive: false
          enable_proxy_protocol: false
          forwarding_rules:
            - certificate_id: 892071a0-bb95-49bc-8021-3afd67a210bf
              entry_port: 443
              entry_protocol: https
              target_port: 8080
              target_protocol: http
          health_check:
            check_interval_seconds: 10
            healthy_threshold: 5
            path: /health
            port: 8080
            protocol: http
            response_timeout_seconds: 5
            unhealthy_threshold: 3
          id: 4de7ac8b-495b-4884-9a69-1050c6793cd6
          ip: 104.131.186.241
          name: example-lb-01
          redirect_http_to_https: false
          region:
            available: true
            features:
              - private_networking
              - backups
              - ipv6
              - metadata
              - install_agent
            name: New York 3
            sizes:
              - s-1vcpu-1gb
              - s-1vcpu-2gb
              - s-1vcpu-3gb
              - s-2vcpu-2gb
              - s-3vcpu-1gb
              - s-2vcpu-4gb
              - s-4vcpu-8gb
              - s-6vcpu-16gb
              - s-8vcpu-32gb
              - s-12vcpu-48gb
              - s-16vcpu-64gb
              - s-20vcpu-96gb
              - s-24vcpu-128gb
              - s-32vcpu-192gb
            slug: nyc3
          size: lb-small
          status: new
          sticky_sessions:
            cookie_name: LB_COOKIE
            cookie_ttl_seconds: 300
            type: cookies
          tag: prod:web
          vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
    load_balancer_update_request:
      value:
        algorithm: round_robin
        droplet_ids:
          - 3164444
          - 3164445
        enable_backend_keepalive: true
        enable_proxy_protocol: true
        forwarding_rules:
          - certificate_id: ""
            entry_port: 80
            entry_protocol: http
            target_port: 80
            target_protocol: http
            tls_passthrough: false
          - certificate_id: ""
            entry_port: 443
            entry_protocol: https
            target_port: 443
            target_protocol: https
            tls_passthrough: true
        health_check:
          check_interval_seconds: 10
          healthy_threshold: 5
          path: /
          port: 80
          protocol: http
          response_timeout_seconds: 5
          unhealthy_threshold: 3
        name: updated-example-lb-01
        redirect_http_to_https: false
        region: nyc3
        sticky_sessions:
          type: none
        vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
    load_balancer_update_response:
      value:
        load_balancer:
          algorithm: round_robin
          created_at: 2017-02-01T22:22:58Z
          droplet_ids:
            - 3164444
            - 3164445
          enable_backend_keepalive: true
          enable_proxy_protocol: true
          forwarding_rules:
            - certificate_id: ""
              entry_port: 80
              entry_protocol: http
              target_port: 80
              target_protocol: http
              tls_passthrough: false
            - certificate_id: ""
              entry_port: 443
              entry_protocol: https
              target_port: 443
              target_protocol: https
              tls_passthrough: true
          health_check:
            check_interval_seconds: 10
            healthy_threshold: 5
            path: /
            port: 80
            protocol: http
            response_timeout_seconds: 5
            unhealthy_threshold: 3
          id: 4de7ac8b-495b-4884-9a69-1050c6793cd6
          ip: 104.131.186.241
          name: updated-example-lb-01
          redirect_http_to_https: false
          region:
            available: true
            features:
              - private_networking
              - backups
              - ipv6
              - metadata
              - install_agent
            name: New York 3
            sizes:
              - s-1vcpu-1gb
              - s-1vcpu-2gb
              - s-1vcpu-3gb
              - s-2vcpu-2gb
              - s-3vcpu-1gb
              - s-2vcpu-4gb
              - s-4vcpu-8gb
              - s-6vcpu-16gb
              - s-8vcpu-32gb
              - s-12vcpu-48gb
              - s-16vcpu-64gb
              - s-20vcpu-96gb
              - s-24vcpu-128gb
              - s-32vcpu-192gb
            slug: nyc3
          size: lb-small
          status: new
          sticky_sessions:
            type: none
          tag: ""
          vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
    load_balancer_using_tag_create_request:
      description: Terminating SSL at the load balancer using a managed SSL certificate specifying Droplets using `tag`.
      value:
        forwarding_rules:
          - certificate_id: 892071a0-bb95-49bc-8021-3afd67a210bf
            entry_port: 443
            entry_protocol: https
            target_port: 8080
            target_protocol: http
        name: example-lb-01
        region: nyc3
        tag: prod:web
    load_balancer_using_tag_response:
      value:
        load_balancer:
          algorithm: round_robin
          created_at: 2017-02-01T22:22:58Z
          droplet_ids:
            - 3164444
            - 3164445
          enable_backend_keepalive: false
          enable_proxy_protocol: false
          forwarding_rules:
            - certificate_id: 892071a0-bb95-49bc-8021-3afd67a210bf
              entry_port: 443
              entry_protocol: https
              target_port: 8080
              target_protocol: http
          health_check:
            check_interval_seconds: 10
            healthy_threshold: 5
            path: /
            port: 80
            protocol: http
            response_timeout_seconds: 5
            unhealthy_threshold: 3
          id: 4de7ac8b-495b-4884-9a69-1050c6793cd6
          ip: 104.131.186.241
          name: example-lb-01
          redirect_http_to_https: false
          region:
            available: true
            features:
              - private_networking
              - backups
              - ipv6
              - metadata
              - install_agent
            name: New York 3
            sizes:
              - s-1vcpu-1gb
              - s-1vcpu-2gb
              - s-1vcpu-3gb
              - s-2vcpu-2gb
              - s-3vcpu-1gb
              - s-2vcpu-4gb
              - s-4vcpu-8gb
              - s-6vcpu-16gb
              - s-8vcpu-32gb
              - s-12vcpu-48gb
              - s-16vcpu-64gb
              - s-20vcpu-96gb
              - s-24vcpu-128gb
              - s-32vcpu-192gb
            slug: nyc3
          size: lb-small
          status: new
          sticky_sessions:
            type: none
          tag: prod:web
          vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
    load_balancers_all:
      value:
        links: {}
        load_balancers:
          - algorithm: round_robin
            created_at: 2017-02-01T22:22:58Z
            droplet_ids:
              - 3164444
              - 3164445
            enable_backend_keepalive: false
            enable_proxy_protocol: false
            forwarding_rules:
              - certificate_id: ""
                entry_port: 80
                entry_protocol: http
                target_port: 80
                target_protocol: http
                tls_passthrough: false
              - certificate_id: ""
                entry_port: 443
                entry_protocol: https
                target_port: 443
                target_protocol: https
                tls_passthrough: true
            health_check:
              check_interval_seconds: 10
              healthy_threshold: 5
              path: /
              port: 80
              protocol: http
              response_timeout_seconds: 5
              unhealthy_threshold: 3
            id: 4de7ac8b-495b-4884-9a69-1050c6793cd6
            ip: 104.131.186.241
            name: example-lb-01
            redirect_http_to_https: false
            region:
              available: true
              features:
                - private_networking
                - backups
                - ipv6
                - metadata
                - install_agent
              name: New York 3
              sizes:
                - s-1vcpu-1gb
                - s-1vcpu-2gb
                - s-1vcpu-3gb
                - s-2vcpu-2gb
                - s-3vcpu-1gb
                - s-2vcpu-4gb
                - s-4vcpu-8gb
                - s-6vcpu-16gb
                - s-8vcpu-32gb
                - s-12vcpu-48gb
                - s-16vcpu-64gb
                - s-20vcpu-96gb
                - s-24vcpu-128gb
                - s-32vcpu-192gb
              slug: nyc3
            size: lb-small
            status: new
            sticky_sessions:
              type: none
            tag: ""
            vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
          - algorithm: round_robin
            created_at: 2020-09-08T18:58:04Z
            droplet_ids:
              - 55806512
              - 55806515
              - 55806524
            enable_backend_keepalive: false
            enable_proxy_protocol: false
            forwarding_rules:
              - certificate_id: 892071a0-bb95-49bc-8021-3afd67a210bf
                entry_port: 443
                entry_protocol: https
                target_port: 8080
                target_protocol: http
                tls_passthrough: false
            health_check:
              check_interval_seconds: 10
              healthy_threshold: 5
              path: /
              port: 443
              protocol: https
              response_timeout_seconds: 5
              unhealthy_threshold: 3
            id: 56775c3f-04ab-4fb3-a7ed-40ef9bc8eece
            ip: 45.55.125.24
            name: prod-web-lb-01
            redirect_http_to_https: true
            region:
              available: true
              features:
                - private_networking
                - backups
                - ipv6
                - metadata
                - install_agent
              name: New York 3
              sizes:
                - s-1vcpu-1gb
                - s-1vcpu-2gb
                - s-1vcpu-3gb
                - s-2vcpu-2gb
                - s-3vcpu-1gb
                - s-2vcpu-4gb
                - s-4vcpu-8gb
                - s-6vcpu-16gb
                - s-8vcpu-32gb
                - s-12vcpu-48gb
                - s-16vcpu-64gb
                - s-20vcpu-96gb
                - s-24vcpu-128gb
                - s-32vcpu-192gb
              slug: nyc3
            size: lb-small
            status: active
            sticky_sessions:
              cookie_name: DO-LB
              cookie_ttl_seconds: 300
              type: cookies
            tag: prod:web
            vpc_uuid: 587d698c-de84-11e8-80bc-3cfdfea9fcd1
        meta:
          total: 2
    logs:
      value:
        historic_logs:
          - https://logs-example/archive/build.log
        live_url: https://logs-example/build.log
    regions:
      value:
        regions:
          - continent: Europe
            data_centers:
              - ams3
            default: true
            flag: netherlands
            label: Amsterdam
            slug: ams
    snapshots_all:
      value:
        links: {}
        meta:
          total: 2
        snapshots:
          - created_at: 2020-07-28T16:47:44Z
            id: "6372321"
            min_disk_size: 25
            name: web-01-1595954862243
            regions:
              - nyc3
              - sfo3
            resource_id: "200776916"
            resource_type: droplet
            size_gigabytes: 2.34
            tags:
              - web
              - env:prod
          - created_at: 2019-09-28T23:14:30Z
            id: fbe805e8-866b-11e6-96bf-000f53315a41
            min_disk_size: 2
            name: pvc-01-1595954862243
            regions:
              - nyc1
            resource_id: 89bcc42f-85cf-11e6-a004-000f53315871
            resource_type: volume
            size_gigabytes: 0.1008
            tags:
              - k8s
    snapshots_droplets_only:
      value:
        links: {}
        meta:
          total: 1
        snapshots:
          - created_at: 2020-07-28T16:47:44Z
            id: "6372321"
            min_disk_size: 25
            name: web-01-1595954862243
            regions:
              - nyc3
              - sfo3
            resource_id: "200776916"
            resource_type: droplet
            size_gigabytes: 2.34
            tags:
              - web
              - env:prod
    snapshots_volumes_only:
      value:
        links: {}
        meta:
          total: 1
        snapshots:
          - created_at: 2019-09-28T23:14:30Z
            id: fbe805e8-866b-11e6-96bf-000f53315a41
            min_disk_size: 2
            name: pvc-01-1595954862243
            regions:
              - nyc1
            resource_id: 89bcc42f-85cf-11e6-a004-000f53315871
            resource_type: volume
            size_gigabytes: 0.1008
            tags:
              - k8s
    tier:
      value:
        tier:
          build_seconds: "233"
          egress_bandwidth_bytes: "1023"
          name: Test
          slug: test
          storage_bytes: "1000000"
    tiers:
      value:
        tiers:
          - build_seconds: "233"
            egress_bandwidth_bytes: "1023"
            name: Test
            slug: test
            storage_bytes: "1000000"
    volume_action_attach_response:
      value:
        action:
          completed_at: 2020-11-12T17:51:14Z
          id: 72531856
          region:
            available: true
            features:
              - private_networking
              - backups
              - ipv6
              - metadata
            name: New York 1
            sizes:
              - s-1vcpu-1gb
              - s-1vcpu-2gb
              - s-1vcpu-3gb
              - s-2vcpu-2gb
              - s-3vcpu-1gb
              - s-2vcpu-4gb
              - s-4vcpu-8gb
              - s-6vcpu-16gb
              - s-8vcpu-32gb
              - s-12vcpu-48gb
              - s-16vcpu-64gb
              - s-20vcpu-96gb
              - s-24vcpu-128gb
              - s-32vcpu-192gb
            slug: nyc1
          region_slug: nyc1
          resource_type: volume
          started_at: 2020-11-12T17:51:03Z
          status: completed
          type: attach_volume
    volume_action_detach_response:
      value:
        action:
          completed_at: null
          id: 68212773
          region:
            available: true
            features:
              - private_networking
              - backups
              - ipv6
              - metadata
            name: New York 1
            sizes:
              - s-1vcpu-1gb
              - s-1vcpu-2gb
              - s-1vcpu-3gb
              - s-2vcpu-2gb
              - s-3vcpu-1gb
              - s-2vcpu-4gb
              - s-4vcpu-8gb
              - s-6vcpu-16gb
              - s-8vcpu-32gb
              - s-12vcpu-48gb
              - s-16vcpu-64gb
              - s-20vcpu-96gb
              - s-24vcpu-128gb
              - s-32vcpu-192gb
            slug: nyc1
          region_slug: nyc1
          resource_id: null
          resource_type: backend
          started_at: 2015-10-15T17:46:15Z
          status: in-progress
          type: detach_volume
    volumes_all:
      value:
        links: {}
        meta:
          total: 2
        volumes:
          - created_at: 2016-03-02T17:00:49Z
            description: Block store for examples
            droplet_ids: []
            filesystem_label: example
            filesystem_type: ext4
            id: 506f78a4-e098-11e5-ad9f-000f53306ae1
            name: example
            region:
              available: true
              features:
                - private_networking
                - backups
                - ipv6
                - metadata
              name: New York 1
              sizes:
                - s-1vcpu-1gb
                - s-1vcpu-2gb
                - s-1vcpu-3gb
                - s-2vcpu-2gb
                - s-3vcpu-1gb
                - s-2vcpu-4gb
                - s-4vcpu-8gb
                - s-6vcpu-16gb
                - s-8vcpu-32gb
                - s-12vcpu-48gb
                - s-16vcpu-64gb
                - s-20vcpu-96gb
                - s-24vcpu-128gb
                - s-32vcpu-192gb
              slug: nyc1
            size_gigabytes: 10
            tags:
              - aninterestingtag
          - created_at: 2016-03-02T17:01:49Z
            description: Block store for examples
            droplet_ids: []
            filesystem_label: example
            filesystem_type: ext4
            id: 506f78a4-e098-11e5-ad9f-000f53305eb2
            name: example
            region:
              available: true
              features:
                - private_networking
                - backups
                - ipv6
                - metadata
              name: New York 3
              sizes:
                - s-1vcpu-1gb
                - s-1vcpu-2gb
                - s-1vcpu-3gb
                - s-2vcpu-2gb
                - s-3vcpu-1gb
                - s-2vcpu-4gb
                - s-4vcpu-8gb
                - s-6vcpu-16gb
                - s-8vcpu-32gb
                - s-12vcpu-48gb
                - s-16vcpu-64gb
                - s-20vcpu-96gb
                - s-24vcpu-128gb
                - s-32vcpu-192gb
              slug: nyc3
            size_gigabytes: 10
            tags:
              - aninterestingtag
    volumes_filtered_by_name:
      value:
        links: {}
        meta:
          total: 1
        volumes:
          - created_at: 2016-03-02T17:00:49Z
            description: Block store for examples
            droplet_ids: []
            filesystem_label: example
            filesystem_type: ext4
            id: 506f78a4-e098-11e5-ad9f-000f53306ae1
            name: example
            region:
              available: true
              features:
                - private_networking
                - backups
                - ipv6
                - metadata
              name: New York 1
              sizes:
                - s-1vcpu-1gb
                - s-1vcpu-2gb
                - s-1vcpu-3gb
                - s-2vcpu-2gb
                - s-3vcpu-1gb
                - s-2vcpu-4gb
                - s-4vcpu-8gb
                - s-6vcpu-16gb
                - s-8vcpu-32gb
                - s-12vcpu-48gb
                - s-16vcpu-64gb
                - s-20vcpu-96gb
                - s-24vcpu-128gb
                - s-32vcpu-192gb
              slug: nyc1
            size_gigabytes: 10
            tags:
              - aninterestingtag
    volumes_filtered_by_region:
      value:
        links: {}
        meta:
          total: 1
        volumes:
          - created_at: 2016-03-02T17:00:49Z
            description: Block store for examples
            droplet_ids: []
            filesystem_label: example
            filesystem_type: ext4
            id: 506f78a4-e098-11e5-ad9f-000f53306ae1
            name: example
            region:
              available: true
              features:
                - private_networking
                - backups
                - ipv6
                - metadata
              name: New York 1
              sizes:
                - s-1vcpu-1gb
                - s-1vcpu-2gb
                - s-1vcpu-3gb
                - s-2vcpu-2gb
                - s-3vcpu-1gb
                - s-2vcpu-4gb
                - s-4vcpu-8gb
                - s-6vcpu-16gb
                - s-8vcpu-32gb
                - s-12vcpu-48gb
                - s-16vcpu-64gb
                - s-20vcpu-96gb
                - s-24vcpu-128gb
                - s-32vcpu-192gb
              slug: nyc1
            size_gigabytes: 10
            tags:
              - aninterestingtag
  headers:
    content-disposition:
      description: Indicates if the content is expected to be displayed *inline* in the  browser, that is, as a Web page or as part of a Web page, or as an  *attachment*, that is downloaded and saved locally.
      example: attachment; filename="DigitalOcean Invoice 2020 Jul (6173678-418071234).csv"
      schema:
        type: string
    ratelimit-limit:
      description: The default limit on number of requests that can be made per hour and per minute. Current rate limits are 5000 requests per hour and 250 requests per minute.
      example: 5000
      schema:
        type: integer
    ratelimit-remaining:
      description: The number of requests in your hourly quota that remain before you hit your request limit. See https://developers.digitalocean.com/documentation/v2/#rate-limit for information about how requests expire.
      example: 4816
      schema:
        type: integer
    ratelimit-reset:
      description: The time when the oldest request will expire. The value is given in Unix epoch time. See https://developers.digitalocean.com/documentation/v2/#rate-limit for information about how requests expire.
      example: 1444931833
      schema:
        type: integer
    x-request-id:
      description: "Optionally, some endpoints may include a request ID that should be provided  when reporting bugs or opening support tickets to help identify the issue. "
      example: 515850a0-a812-50bf-aa3c-d0d21d287e40
      schema:
        format: uuid
        type: string
  links:
    delete_ssh_key_by_fingerprint:
      description: The `fingerprint` value returned in the response can be used as the  `ssh_key_identifier` parameter in `DELETE /v2/account/keys/{ssh_key_identifier}`.
      operationId: destroy_a_key
      parameters:
        ssh_key_identifier: $response.body#/ssh_key/fingerprint
    delete_ssh_key_by_id:
      description: The `id` value returned in the response can be used as the  `ssh_key_identifier` parameter in `DELETE /v2/account/keys/{ssh_key_identifier}`.
      operationId: destroy_a_key
      parameters:
        ssh_key_identifier: $response.body#/ssh_key/id
    get_ssh_key_by_fingerprint:
      description: The `fingerprint` value returned in the response can be used as the `ssh_key_identifier` parameter in `GET /v2/account/keys/{ssh_key_identifier}`.
      operationId: get_ssh_key_by_fingerprint
      parameters:
        ssh_key_identifier: $response.body#/ssh_key/fingerprint
    get_ssh_key_by_id:
      description: The `id` value returned in the response can be used as the `ssh_key_identifier` parameter in `GET /v2/account/keys/{ssh_key_identifier}`.
      operationId: get_ssh_key_by_id
      parameters:
        ssh_key_identifier: $response.body#/ssh_key/id
  parameters:
    1_click_type:
      description: Restrict results to a certain type of 1-Click.
      example: kubernetes
      in: query
      name: type
      required: false
      schema:
        enum:
          - droplet
          - kubernetes
        type: string
    action_id:
      description: A unique numeric ID that can be used to identify and reference an action.
      example: 36804636
      in: path
      name: action_id
      required: true
      schema:
        minimum: 1
        type: integer
    app_id:
      description: The app ID
      example: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
      in: path
      name: app_id
      required: true
      schema:
        type: string
    app_name:
      description: The name of the app to retrieve.
      example: myApp
      in: query
      name: name
      schema:
        type: string
    cdn_endpoint_id:
      description: A unique identifier for a CDN endpoint.
      example: 19f06b6a-3ace-4315-b086-499a0e521b76
      in: path
      name: cdn_id
      required: true
      schema:
        format: uuid
        minimum: 1
        type: string
    certificate_id:
      description: A unique identifier for a certificate.
      example: 4de7ac8b-495b-4884-9a69-1050c6793cd6
      in: path
      name: certificate_id
      required: true
      schema:
        format: uuid
        minimum: 1
        type: string
    clusterlint_run_id:
      description: Specifies the clusterlint run whose results will be retrieved.
      example: 50c2f44c-011d-493e-aee5-361a4a0d1844
      in: query
      name: run_id
      required: false
      schema:
        format: uuid
        type: string
    component:
      description: An optional component name. If set, logs will be limited to this component only.
      example: component
      in: path
      name: component_name
      required: true
      schema:
        type: string
    database_cluster_uuid:
      description: A unique identifier for a database cluster.
      example: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
      in: path
      name: database_cluster_uuid
      required: true
      schema:
        format: uuid
        type: string
    database_name:
      description: The name of the database.
      example: alpha
      in: path
      name: database_name
      required: true
      schema:
        type: string
    deployment_id:
      description: The deployment ID
      example: 3aa4d20e-5527-4c00-b496-601fbd22520a
      in: path
      name: deployment_id
      required: true
      schema:
        type: string
    domain_name:
      description: The name of the domain itself.
      example: example.com
      in: path
      name: domain_name
      required: true
      schema:
        type: string
    domain_name_query:
      description: A fully qualified record name. For example, to only include records matching sub.example.com, send a GET request to `/v2/domains/$DOMAIN_NAME/records?name=sub.example.com`.
      example: sub.example.com
      in: query
      name: name
      schema:
        type: string
    domain_record_id:
      description: The unique identifier of the domain record.
      example: 3352896
      in: path
      name: domain_record_id
      required: true
      schema:
        type: integer
    domain_type_query:
      description: "The type of the DNS record. For example: A, CNAME, TXT, ..."
      example: A
      in: query
      name: type
      schema:
        enum:
          - A
          - AAAA
          - CAA
          - CNAME
          - MX
          - NS
          - SOA
          - SRV
          - TXT
        type: string
    droplet_delete_tag_name:
      description: Specifies Droplets to be deleted by tag.
      example: env:test
      in: query
      name: tag_name
      required: true
      schema:
        type: string
    droplet_id:
      description: A unique identifier for a Droplet instance.
      example: 3164444
      in: path
      name: droplet_id
      required: true
      schema:
        minimum: 1
        type: integer
    droplet_tag_name:
      description: Used to filter Droplets by a specific tag.
      example: env:prod
      in: query
      name: tag_name
      required: false
      schema:
        type: string
    firewall_id:
      description: A unique ID that can be used to identify and reference a firewall.
      example: bb4b2611-3d72-467b-8602-280330ecd65c
      in: path
      name: firewall_id
      required: true
      schema:
        format: uuid
        type: string
    floating_ip:
      description: A floating IP address.
      example: 45.55.96.47
      in: path
      name: floating_ip
      required: true
      schema:
        format: ipv4
        minimum: 1
        type: string
    garbage_collection_uuid:
      description: The UUID of a garbage collection run.
      example: eff0feee-49c7-4e8f-ba5c-a320c109c8a8
      in: path
      name: garbage_collection_uuid
      required: true
      schema:
        type: string
    id_app:
      description: The ID of the app
      example: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
      in: path
      name: id
      required: true
      schema:
        type: string
    image_id:
      description: A unique number that can be used to identify and reference a specific image.
      example: 62137902
      in: path
      name: image_id
      required: true
      schema:
        type: integer
    invoice_uuid:
      description: UUID of the invoice
      example: 22737513-0ea7-4206-8ceb-98a575af7681
      in: path
      name: invoice_uuid
      required: true
      schema:
        type: string
    kubernetes_cluster_id:
      description: A unique ID that can be used to reference a Kubernetes cluster.
      example: bd5f5959-5e1e-4205-a714-a914373942af
      in: path
      name: cluster_id
      required: true
      schema:
        format: uuid
        minimum: 1
        type: string
    kubernetes_expiry_seconds:
      description: The duration in seconds that the returned Kubernetes credentials will be valid. If not set or 0, the credentials will have a 7 day expiry.
      example: 300
      in: query
      name: expiry_seconds
      required: false
      schema:
        default: 0
        minimum: 0
        type: integer
    kubernetes_node_id:
      description: A unique ID that can be used to reference a node in a Kubernetes node pool.
      example: 478247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
      in: path
      name: node_id
      required: true
      schema:
        format: uuid
        minimum: 1
        type: string
    kubernetes_node_pool_id:
      description: A unique ID that can be used to reference a Kubernetes node pool.
      example: cdda885e-7663-40c8-bc74-3a036c66545d
      in: path
      name: node_pool_id
      required: true
      schema:
        format: uuid
        minimum: 1
        type: string
    kubernetes_node_replace:
      description: Specifies whether or not to replace a node after it has been deleted. Setting it to `1` causes the node to be replaced by a new one after deletion. Omitting the query parameter or setting its value to `0` deletes without replacement.
      example: 1
      in: query
      name: replace
      required: false
      schema:
        default: 0
        maximum: 1
        minimum: 0
        type: integer
    kubernetes_node_skip_drain:
      description: Specifies whether or not to drain workloads from a node before it is deleted. Setting it to `1` causes node draining to be skipped. Omitting the query parameter or setting its value to `0` carries out draining prior to deletion.
      example: 1
      in: query
      name: skip_drain
      required: false
      schema:
        default: 0
        maximum: 1
        minimum: 0
        type: integer
    live_updates:
      description: Whether the logs should follow live updates.
      example: true
      in: query
      name: follow
      schema:
        format: boolean
        type: boolean
    load_balancer_id:
      description: A unique identifier for a load balancer.
      example: 4de7ac8b-495b-4884-9a69-1050c6793cd6
      in: path
      name: lb_id
      required: true
      schema:
        minimum: 1
        type: string
    log_type:
      description: >-
        The type of logs to retrieve

        - BUILD: Build-time logs

        - DEPLOY: Deploy-time logs

        - RUN: Live run-time logs
      example: BUILD
      in: query
      name: type
      schema:
        default: UNSPECIFIED
        enum:
          - UNSPECIFIED
          - BUILD
          - DEPLOY
          - RUN
        type: string
    page:
      description: Which 'page' of paginated results to return.
      example: 1
      in: query
      name: page
      required: false
      schema:
        default: 1
        minimum: 1
        type: integer
    per_page:
      description: Number of items returned per page
      example: 2
      in: query
      name: per_page
      required: false
      schema:
        default: 20
        maximum: 200
        minimum: 1
        type: integer
    private:
      description: Used to filter only user images.
      example: true
      in: query
      name: private
      required: false
      schema:
        type: boolean
    project_id:
      description: A unique identifier for a project.
      example: 4de7ac8b-495b-4884-9a69-1050c6793cd6
      in: path
      name: project_id
      required: true
      schema:
        format: uuid
        minimum: 1
        type: string
    region:
      description: The slug identifier for the region where the resource is available.
      example: nyc3
      in: query
      name: region
      schema:
        $ref: "#/components/schemas/region_slug"
    registry_expiry_seconds:
      description: The duration in seconds that the returned registry credentials will be valid. If not set or 0, the credentials will not expire.
      example: 3600
      in: query
      name: expiry_seconds
      required: false
      schema:
        default: 0
        minimum: 0
        type: integer
    registry_manifest_digest:
      description: The manifest digest of a container registry repository tag.
      example: sha256:cb8a924afdf0229ef7515d9e5b3024e23b3eb03ddbba287f4a19c6ac90b8d221
      in: path
      name: manifest_digest
      required: true
      schema:
        type: string
    registry_name:
      description: The name of a container registry.
      example: example
      in: path
      name: registry_name
      required: true
      schema:
        type: string
    registry_read_write:
      description: By default, the registry credentials allow for read-only access. Set this query parameter to `true` to obtain read-write credentials.
      example: true
      in: query
      name: read_write
      required: false
      schema:
        default: false
        type: boolean
    registry_repository_name:
      description: The name of a container registry repository. If the name contains `/` characters, they must be URL-encoded, e.g. `%2F`.
      example: repo-1
      in: path
      name: repository_name
      required: true
      schema:
        type: string
    registry_repository_tag:
      description: The name of a container registry repository tag.
      example: 06a447a
      in: path
      name: repository_tag
      required: true
      schema:
        type: string
    replica_name:
      description: The name of the database replica.
      example: read-nyc3-01
      in: path
      name: replica_name
      required: true
      schema:
        type: string
    slug_size:
      description: The slug of the instance size
      example: s-1vcpu-1gb
      in: path
      name: slug
      required: true
      schema:
        type: string
    slug_tier:
      description: The slug of the tier
      example: s-1vcpu-1gb
      in: path
      name: slug
      required: true
      schema:
        type: string
    snapshot_id:
      description: Either the ID of an existing snapshot. This will be an integer for a Droplet snapshot or a string for a volume snapshot.
      example: 6372321
      in: path
      name: snapshot_id
      required: true
      schema:
        oneOf:
          - description: The ID of a Droplet snapshot.
            example: 6372321
            type: integer
          - description: The ID of a volume snapshot.
            example: fbe805e8-866b-11e6-96bf-000f53315a41
            type: string
    snapshot_resource_type:
      description: Used to filter snapshots by a resource type.
      example: droplet
      in: query
      name: resource_type
      required: false
      schema:
        enum:
          - droplet
          - volume
        type: string
    ssh_key_identifier:
      description: Either the ID or the fingerprint of an existing SSH key.
      example: 512189
      in: path
      name: ssh_key_identifier
      required: true
      schema:
        anyOf:
          - $ref: "#/components/schemas/ssh_key_id"
          - $ref: "#/components/schemas/ssh_key_fingerprint"
    tag:
      description: Used to filter images by a specific tag.
      example: base-image
      in: query
      name: tag_name
      required: false
      schema:
        type: string
    tag_id:
      description: The name of the tag. Tags may contain letters, numbers, colons, dashes,  and underscores. There is a limit of 255 characters per tag.
      example: awesome
      in: path
      name: tag_id
      required: true
      schema:
        maxLength: 255
        pattern: ^[a-zA-Z1-9_\-\:]+$
        type: string
    tag_name:
      description: Limits the results to database clusters with a specific tag.
      example: production
      in: query
      name: tag_name
      required: false
      schema:
        type: string
    time_wait:
      description: "An optional time duration to wait if the underlying component instance is not immediately available. Default: `3m`."
      example: 3m
      in: query
      name: pod_connection_timeout
      schema:
        type: string
    type:
      description: Filters results based on image type which can be either `application` or `distribution`.
      example: distribution
      in: query
      name: type
      required: false
      schema:
        enum:
          - application
          - distribution
        type: string
    username:
      description: The name of the database user.
      example: app-01
      in: path
      name: username
      required: true
      schema:
        type: string
    volume_id:
      description: The ID of the block storage volume.
      example: 7724db7c-e098-11e5-b522-000f53304e51
      in: path
      name: volume_id
      required: true
      schema:
        format: uuid
        type: string
    volume_name:
      description: The block storage volume's name.
      example: example
      in: query
      name: name
      schema:
        type: string
    vpc_id:
      description: A unique identifier for a VPC.
      example: 4de7ac8b-495b-4884-9a69-1050c6793cd6
      in: path
      name: vpc_id
      required: true
      schema:
        format: uuid
        minimum: 1
        type: string
    vpc_resource_type:
      description: Used to filter VPC members by a resource type.
      example: droplet
      in: query
      name: resource_type
      required: false
      schema:
        type: string
    x_dangerous:
      description: Acknowledge this action will destroy the Droplet and all associated resources and _can not_ be reversed.
      example: true
      in: header
      name: X-Dangerous
      required: true
      schema:
        type: boolean
  responses:
    1_click_create:
      content:
        application/json:
          examples:
            Install a 1-Click Application:
              value:
                message: Successfully kicked off addon job.
          schema:
            properties:
              message:
                description: A message about the result of the request.
                example: Successfully kicked off addon job.
                type: string
            type: object
      description: >
        The response will verify that a job has been successfully created to install a 1-Click. The

        post-installation lifecycle of a 1-Click application can not be managed via the DigitalOcean

        API. For additional details specific to the 1-Click, find and view its

        [DigitalOcean Marketplace](https://marketplace.digitalocean.com) page.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    accepted:
      description: The does not indicate the success or failure of any operation, just that the request has been accepted for processing.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    account:
      content:
        application/json:
          schema:
            properties:
              account:
                $ref: "#/components/schemas/account"
      description: A JSON object keyed on account with an excerpt of the current user account data.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_1_clicks:
      content:
        application/json:
          examples:
            All 1-Click Applications:
              value:
                1_clicks:
                  - slug: monitoring
                    type: kubernetes
                  - slug: wordpress-18-04
                    type: droplet
          schema:
            properties:
              1_clicks:
                items:
                  $ref: "#/components/schemas/1_click"
                type: array
      description: A JSON object with a key of `1_clicks`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_actions:
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  actions:
                    items:
                      $ref: "#/components/schemas/action"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
      description: The results will be returned as a JSON object with an actions key.  This will be set to an array filled with action objects containing the standard action attributes
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_cdn_endpoints:
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  endpoints:
                    items:
                      $ref: "#/components/schemas/cdn_endpoint"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
            example:
              endpoints:
                - certificate_id: 892071a0-bb95-49bc-8021-3afd67a210bf
                  created_at: 2018-07-19T15:04:16Z
                  custom_domain: static.example.com
                  endpoint: static-images.nyc3.cdn.digitaloceanspaces.com
                  id: 19f06b6a-3ace-4315-b086-499a0e521b76
                  origin: static-images.nyc3.digitaloceanspaces.com
                  ttl: 3600
              links: {}
              meta:
                total: 1
      description: The result will be a JSON object with an `endpoints` key. This will be set to an array of endpoint objects, each of which will contain the standard CDN endpoint attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_certificates:
      content:
        application/json:
          examples:
            AllCertificates:
              $ref: "#/components/examples/certificates_all"
          schema:
            allOf:
              - properties:
                  certificates:
                    items:
                      $ref: "#/components/schemas/certificate"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
      description: The result will be a JSON object with a `certificates` key. This will be set to an array of certificate objects, each of which will contain the standard certificate attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_clusters:
      content:
        application/json:
          examples:
            All Kubernetes Clusters:
              $ref: "#/components/examples/kubernetes_clusters_all"
          schema:
            allOf:
              - properties:
                  kubernetes_clusters:
                    items:
                      $ref: "#/components/schemas/cluster"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
      description: >
        The response will be a JSON object with a key called `kubernetes_clusters`.

        This will be set to an array of objects, each of which will contain the

        standard Kubernetes cluster attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_domain_records_response:
      content:
        application/json:
          examples:
            All Domain Records:
              $ref: "#/components/examples/domain_records_all"
          schema:
            allOf:
              - properties:
                  domain_records:
                    items:
                      $ref: "#/components/schemas/domain_record"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
      description: The response will be a JSON object with a key called `domain_records`. The value of this will be an array of domain record objects, each of which contains the standard domain record attributes. For attributes that are not used by a specific record type, a value of `null` will be returned. For instance, all records other than SRV will have `null` for the `weight` and `port` attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_domains_response:
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  domains:
                    description: Array of volumes.
                    items:
                      $ref: "#/components/schemas/domain"
                    type: array
                required:
                  - domains
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
            example:
              domains:
                - name: example.com
                  ttl: 1800
                  zone_file: >
                    $ORIGIN example.com.

                    $TTL 1800

                    example.com. IN SOA ns1.digitalocean.com. hostmaster.example.com. 1415982609 10800 3600 604800 1800

                    example.com. 1800 IN NS ns1.digitalocean.com.

                    example.com. 1800 IN NS ns2.digitalocean.com.

                    example.com. 1800 IN NS ns3.digitalocean.com.

                    example.com. 1800 IN A 1.2.3.4
              links: {}
              meta:
                total: 1
      description: The response will be a JSON object with a key called `domains`. The value of this will be an array of Domain objects, each of which contain the standard domain attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_droplet_actions:
      content:
        application/json:
          example:
            actions:
              - completed_at: 2020-07-20T19:37:45.000Z
                id: 982864273
                region:
                  available: true
                  features:
                    - private_networking
                    - backups
                    - ipv6
                    - metadata
                    - install_agent
                    - image_transfer
                  name: New York 3
                  sizes:
                    - s-1vcpu-1gb
                    - s-1vcpu-2gb
                    - s-3vcpu-1gb
                    - s-2vcpu-2gb
                    - s-1vcpu-3gb
                    - s-2vcpu-4gb
                    - s-4vcpu-8gb
                    - m-1vcpu-8gb
                    - s-6vcpu-16gb
                    - s-8vcpu-32gb
                    - s-12vcpu-48gb
                  slug: nyc3
                region_slug: nyc3
                resource_id: 3164444
                resource_type: droplet
                started_at: 2020-07-20T19:37:30.000Z
                status: completed
                type: create
            links: {}
            meta:
              total: 1
          schema:
            allOf:
              - properties:
                  actions:
                    items:
                      $ref: "#/components/schemas/action"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
      description: A JSON object with an `actions` key.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_droplet_backups:
      content:
        application/json:
          example:
            backups:
              - created_at: 2020-07-29T01:44:35Z
                distribution: Ubuntu
                id: 67539192
                min_disk_size: 50
                name: web-01- 2020-07-29
                public: false
                regions:
                  - nyc3
                size_gigabytes: 2.34
                slug: null
                type: backup
            links: {}
            meta:
              total: 1
          schema:
            allOf:
              - properties:
                  backups:
                    items:
                      $ref: "#/components/schemas/droplet_snapshot"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
      description: A JSON object with an `backups` key.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_droplet_snapshots:
      content:
        application/json:
          example:
            links: {}
            meta:
              total: 1
            snapshots:
              - created_at: 2020-07-28T16:47:44Z
                id: 6372321
                min_disk_size: 25
                name: web-01-1595954862243
                regions:
                  - nyc3
                  - sfo3
                size_gigabytes: 2.34
                type: snapshot
          schema:
            allOf:
              - properties:
                  snapshots:
                    items:
                      $ref: "#/components/schemas/droplet_snapshot"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
      description: A JSON object with an `snapshots` key.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_droplets:
      content:
        application/json:
          examples:
            All Droplets:
              $ref: "#/components/examples/droplets_all"
            Droplets Filtered By Tag:
              $ref: "#/components/examples/droplets_tagged"
          schema:
            allOf:
              - properties:
                  droplets:
                    items:
                      $ref: "#/components/schemas/droplet"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
      description: A JSON object with a key of `droplets`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_firewalls:
      content:
        application/json:
          example:
            firewalls:
              - created_at: 2020-05-23T21:24:00.000Z
                droplet_ids:
                  - 89989
                  - 33322
                id: bb4b2611-3d72-467b-8602-280330ecd65c
                inbound_rules:
                  - ports: 8000-9000
                    protocol: udp
                    sources:
                      addresses:
                        - 1.2.3.4
                        - 18.0.0.0/8
                      droplet_ids:
                        - 8282823
                        - 3930392
                      load_balancer_uids:
                        - 4de7ac8b-495b-4884-9a69-1050c6793cd6
                      tags:
                        - base-image
                        - dev
                name: firewall
                outbound_rules:
                  - destinations:
                      addresses:
                        - 1.2.3.4
                        - 18.0.0.0/8
                      droplet_ids:
                        - 3827493
                        - 213213
                      load_balancer_uids:
                        - 4de7ac8b-495b-4884-9a69-1050c6793cd6
                      tags:
                        - base-image
                        - prod
                    ports: 7000-9000
                    protocol: tcp
                pending_changes:
                  - droplet_id: 8043964
                    removing: true
                    status: waiting
                status: succeeded
                tags:
                  - base-image
                  - prod
            links:
              pages: {}
            meta:
              total: 1
          schema:
            allOf:
              - properties:
                  firewalls:
                    items:
                      $ref: "#/components/schemas/firewall"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
      description: A JSON object that has a key called `firewalls`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_images:
      content:
        application/json:
          examples:
            All:
              $ref: "#/components/examples/images_all"
            Application:
              $ref: "#/components/examples/images_application"
            Custom:
              $ref: "#/components/examples/images_custom"
            Distribution:
              $ref: "#/components/examples/images_distribution"
            Snapshots:
              $ref: "#/components/examples/images_snapshots"
            Tagged:
              $ref: "#/components/examples/images_tagged"
          schema:
            allOf:
              - properties:
                  images:
                    items:
                      $ref: "#/components/schemas/image"
                    type: array
                required:
                  - images
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
      description: The response will be a JSON object with a key called `images`.  This will be set to an array of image objects, each of which will contain the standard image attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_kernels:
      content:
        application/json:
          example:
            kernels:
              - id: 7515
                name: DigitalOcean GrubLoader v0.2 (20160714)
                version: 2016.07.13-DigitalOcean_loader_Ubuntu
            links:
              pages:
                last: https://api.digitalocean.com/v2/droplets/3164444/kernels?page=171&per_page=1
                next: https://api.digitalocean.com/v2/droplets/3164444/kernels?page=2&per_page=1
            meta:
              total: 171
          schema:
            allOf:
              - properties:
                  kernels:
                    items:
                      $ref: "#/components/schemas/kernel"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
      description: A JSON object that has a key called `kernels`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_keys:
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  ssh_keys:
                    items:
                      $ref: "#/components/schemas/ssh_key"
                    type: array
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
            example:
              links: {}
              meta:
                total: 1
              ssh_keys:
                - fingerprint: 3b:16:e4:bf:8b:00:8b:b8:59:8c:a9:d3:f0:19:fa:45
                  id: 289794
                  name: Other Public Key
                  public_key: ssh-rsa ANOTHEREXAMPLEaC1yc2EAAAADAQABAAAAQQDDHr/jh2Jy4yALcK4JyWbVkPRaWmhck3IgCoeOO3z1e2dBowLh64QAM+Qb72pxekALga2oi4GvT+TlWNhzPH4V anotherexample
      description: A JSON object with the key set to `ssh_keys`. The value is an array of `ssh_key` objects, each of which contains the standard `ssh_key` attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_load_balancers:
      content:
        application/json:
          examples:
            All Load Balancers:
              $ref: "#/components/examples/load_balancers_all"
          schema:
            allOf:
              - properties:
                  load_balancers:
                    items:
                      $ref: "#/components/schemas/load_balancer"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
      description: A JSON object with a key of `load_balancers`. This will be set to an array of objects, each of which will contain the standard load balancer attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_node_pools:
      content:
        application/json:
          example:
            node_pools:
              - auto_scale: false
                count: 3
                id: cdda885e-7663-40c8-bc74-3a036c66545d
                labels: null
                max_nodes: 0
                min_nodes: 0
                name: frontend-pool
                nodes:
                  - created_at: 2018-11-15T16:00:11Z
                    droplet_id: "205545370"
                    id: 478247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
                    name: adoring-newton-3niq
                    status:
                      state: running
                    updated_at: 2018-11-15T16:00:11Z
                  - created_at: 2018-11-15T16:00:11Z
                    droplet_id: "205545371"
                    id: ad12e744-c2a9-473d-8aa9-be5680500eb1
                    name: adoring-newton-3nim
                    status:
                      state: running
                    updated_at: 2018-11-15T16:00:11Z
                  - created_at: 2018-11-15T16:00:11Z
                    droplet_id: "205545372"
                    id: e46e8d07-f58f-4ff1-9737-97246364400e
                    name: adoring-newton-3ni7
                    status:
                      state: running
                    updated_at: 2018-11-15T16:00:11Z
                size: s-1vcpu-2gb
                tags:
                  - production
                  - web-team
                  - k8s
                  - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                  - k8s:worker
              - auto_scale: true
                count: 2
                id: f49f4379-7e7f-4af5-aeb6-0354bd840778
                labels:
                  priority: high
                  service: backend
                max_nodes: 5
                min_nodes: 2
                name: backend-pool
                nodes:
                  - created_at: 2018-11-15T16:00:11Z
                    droplet_id: "205545373"
                    id: 3385619f-8ec3-42ba-bb23-8d21b8ba7518
                    name: affectionate-nightingale-3nif
                    status:
                      state: running
                    updated_at: 2018-11-15T16:00:11Z
                  - created_at: 2018-11-15T16:00:11Z
                    droplet_id: "205545374"
                    id: 4b8f60ff-ba06-4523-a6a4-b8148244c7e6
                    name: affectionate-nightingale-3niy
                    status:
                      state: running
                    updated_at: 2018-11-15T16:00:11Z
                size: g-4vcpu-16gb
                tags:
                  - production
                  - web-team
                  - k8s
                  - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                  - k8s:worker
          schema:
            properties:
              node_pools:
                items:
                  $ref: "#/components/schemas/kubernetes_node_pool"
                type: array
      description: >
        The response will be a JSON object with a key called `node_pools`. This will

        be set to an array of objects, each of which will contain the standard node

        pool attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_options:
      content:
        application/json:
          examples:
            All Kubernetes Options:
              $ref: "#/components/examples/kubernetes_options"
          schema:
            $ref: "#/components/schemas/kubernetes_options"
      description: >
        The response will be a JSON object with a key called `options` which contains

        `regions`, `versions`, and `sizes` objects listing the available options and

        the matching slugs for use when creating a new cluster.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_regions:
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  regions:
                    items:
                      $ref: "#/components/schemas/region"
                    type: array
                required:
                  - regions
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
            example:
              links:
                pages:
                  last: https://api.digitalocean.com/v2/regions?page=13&per_page=1
                  next: https://api.digitalocean.com/v2/regions?page=2&per_page=1
              meta:
                total: 13
              regions:
                - available: true
                  features:
                    - private_networking
                    - backups
                    - ipv6
                    - metadata
                    - install_agent
                    - storage
                    - image_transfer
                  name: New York 3
                  sizes:
                    - s-1vcpu-1gb
                    - s-1vcpu-2gb
                    - s-1vcpu-3gb
                    - s-2vcpu-2gb
                    - s-3vcpu-1gb
                    - s-2vcpu-4gb
                    - s-4vcpu-8gb
                    - s-6vcpu-16gb
                    - s-8vcpu-32gb
                    - s-12vcpu-48gb
                    - s-16vcpu-64gb
                    - s-20vcpu-96gb
                    - s-24vcpu-128gb
                    - s-32vcpu-192g
                  slug: nyc3
      description: A JSON object with a key set to `regions`. The value is an array of `region` objects, each of which contain the standard `region` attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_repositories:
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  repositories:
                    items:
                      $ref: "#/components/schemas/repository"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
            example:
              meta:
                total: 1
              repositories:
                - latest_tag:
                    compressed_size_bytes: 2803255
                    manifest_digest: sha256:cb8a924afdf0229ef7515d9e5b3024e23b3eb03ddbba287f4a19c6ac90b8d221
                    registry_name: example
                    repository: repo-1
                    size_bytes: 5861888
                    tag: latest
                    updated_at: 2020-04-09T23:54:25Z
                  name: repo-1
                  registry_name: example
                  tag_count: 1
      description: The response body will be a JSON object with a key of `repositories`. This will be set to an array containing objects each representing a repository.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_sizes:
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  sizes:
                    items:
                      $ref: "#/components/schemas/size"
                    type: array
                required:
                  - sizes
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
            example:
              links:
                pages:
                  last: https://api.digitalocean.com/v2/sizes?page=64&per_page=1
                  next: https://api.digitalocean.com/v2/sizes?page=2&per_page=1
              meta:
                total: 64
              sizes:
                - available: true
                  disk: 25
                  memory: 1024
                  price_hourly: 0.00743999984115362
                  price_monthly: 5
                  regions:
                    - ams2
                    - ams3
                    - blr1
                    - fra1
                    - lon1
                    - nyc1
                    - nyc2
                    - nyc3
                    - sfo1
                    - sfo2
                    - sfo3
                    - sgp1
                    - tor1
                  slug: s-1vcpu-1gb
                  transfer: 1
                  vcpus: 1
      description: A JSON object with a key called `sizes`. The value of this will be an array of `size` objects each of which contain the standard size attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_snapshots:
      content:
        application/json:
          examples:
            All Snapshots:
              $ref: "#/components/examples/snapshots_all"
            Droplets Snapshots:
              $ref: "#/components/examples/snapshots_droplets_only"
            Volume Snapshots:
              $ref: "#/components/examples/snapshots_volumes_only"
          schema:
            allOf:
              - properties:
                  snapshots:
                    items:
                      $ref: "#/components/schemas/snapshot"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
      description: A JSON object with a key of `snapshots`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_tags:
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  tags:
                    items:
                      $ref: "#/components/schemas/tag"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
            example:
              links: {}
              meta:
                total: 1
              tags:
                - name: extra-awesome
                  resources:
                    count: 5
                    databases:
                      count: 1
                      last_tagged_uri: https://api.digitalocean.com/v2/databases/b92438f6-ba03-416c-b642-e9236db91976
                    droplets:
                      count: 1
                      last_tagged_uri: https://api.digitalocean.com/v2/droplets/3164444
                    images:
                      count: 1
                      last_tagged_uri: https://api.digitalocean.com/v2/images/7555620
                    last_tagged_uri: https://api.digitalocean.com/v2/images/7555620
                    volume_snapshots:
                      count: 1
                      last_tagged_uri: https://api.digitalocean.com/v2/snapshots/1f6f46e8-6b60-11e9-be4e-0a58ac144519
                    volumes:
                      count: 1
                      last_tagged_uri: https://api.digitalocean.com/v2/volumes/3d80cb72-342b-4aaa-b92e-4e4abb24a933
      description: To list all of your tags, you can send a `GET` request to `/v2/tags`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_tiers:
      content:
        application/json:
          examples:
            tiers:
              $ref: "#/components/examples/tiers"
          schema:
            $ref: "#/components/schemas/apps_list_tiers_response"
      description: A JSON object with a `tiers` key. This will be a list of all app tiers
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_volume_actions:
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  actions:
                    items:
                      $ref: "#/components/schemas/volume_action"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
            example:
              actions:
                - completed_at: 2020-11-21T21:51:09Z
                  id: 72531856
                  region:
                    available: true
                    features:
                      - private_networking
                      - backups
                      - ipv6
                      - metadata
                    name: New York 1
                    sizes:
                      - s-1vcpu-1gb
                      - s-1vcpu-2gb
                      - s-1vcpu-3gb
                      - s-2vcpu-2gb
                      - s-3vcpu-1gb
                      - s-2vcpu-4gb
                      - s-4vcpu-8gb
                      - s-6vcpu-16gb
                      - s-8vcpu-32gb
                      - s-12vcpu-48gb
                      - s-16vcpu-64gb
                      - s-20vcpu-96gb
                      - s-24vcpu-128gb
                      - s-32vcpu-192gb
                    slug: nyc1
                  region_slug: nyc1
                  resource_type: volume
                  started_at: 2020-11-21T21:51:09Z
                  status: completed
                  type: attach_volume
              links: {}
              meta:
                total: 1
      description: The response will be an object with a key called `action`. The value of this will be an object that contains the standard volume action attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_volumes:
      content:
        application/json:
          examples:
            All Volumes:
              $ref: "#/components/examples/volumes_all"
            Filtered by Name:
              $ref: "#/components/examples/volumes_filtered_by_name"
            Filtered by Region:
              $ref: "#/components/examples/volumes_filtered_by_region"
          schema:
            allOf:
              - properties:
                  volumes:
                    description: Array of volumes.
                    items:
                      $ref: "#/components/schemas/volume_full"
                    type: array
                required:
                  - volumes
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
      description: The response will be a JSON object with a key called `volumes`. This will be set to an array of volume objects, each of which will contain the standard volume attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    all_vpcs:
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  vpcs:
                    items:
                      $ref: "#/components/schemas/vpc"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
            example:
              links: {}
              meta:
                total: 3
              vpcs:
                - created_at: 2020-03-13T19:20:47.442049222Z
                  default: false
                  description: VPC for production environment
                  id: 5a4981aa-9653-4bd1-bef5-d6bff52042e4
                  ip_range: 10.10.10.0/24
                  name: env.prod-vpc
                  region: nyc1
                  urn: do:vpc:5a4981aa-9653-4bd1-bef5-d6bff52042e4
                - created_at: 2020-03-13T19:29:20Z
                  default: true
                  description: ""
                  id: e0fe0f4d-596a-465e-a902-571ce57b79fa
                  ip_range: 10.102.0.0/20
                  name: default-nyc1
                  region: nyc1
                  urn: do:vpc:e0fe0f4d-596a-465e-a902-571ce57b79fa
                - created_at: 2019-11-19T22:19:35Z
                  default: true
                  description: ""
                  id: d455e75d-4858-4eec-8c95-da2f0a5f93a7
                  ip_range: 10.100.0.0/20
                  name: default-nyc3
                  region: nyc3
                  urn: do:vpc:d455e75d-4858-4eec-8c95-da2f0a5f93a7
      description: The response will be a JSON object with a key called `vpcs`. This will be set to an array of objects, each of which will contain the standard attributes associated with a VPC
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    associated_resources_list:
      content:
        application/json:
          example:
            snapshots:
              - cost: "0.05"
                id: "61486916"
                name: ubuntu-s-1vcpu-1gb-nyc1-01-1585758823330
            volume_snapshots:
              - cost: "0.04"
                id: edb0478d-7436-11ea-86e6-0a58ac144b91
                name: volume-nyc1-01-1585758983629
            volumes:
              - cost: "10.00"
                id: ba49449a-7435-11ea-b89e-0a58ac14480f
                name: volume-nyc1-01
          schema:
            allOf:
              - properties:
                  snapshots:
                    items:
                      $ref: "#/components/schemas/associated_resource"
                    type: array
                  volume_snapshots:
                    items:
                      $ref: "#/components/schemas/associated_resource"
                    type: array
                  volumes:
                    items:
                      $ref: "#/components/schemas/associated_resource"
                    type: array
                type: object
      description: A JSON object containing `snapshots`, `volumes`, and `volume_snapshots` keys.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    associated_resources_status:
      content:
        application/json:
          example:
            completed_at: 2020-04-01T18:11:49Z
            droplet:
              destroyed_at: 2020-04-01T18:11:49Z
              id: "187000742"
              name: ubuntu-s-1vcpu-1gb-nyc1-01
            failures: 0
            resources:
              snapshots:
                - destroyed_at: 2020-04-01T18:11:44Z
                  id: "61486916"
                  name: ubuntu-s-1vcpu-1gb-nyc1-01-1585758823330
              volume_snapshots:
                - destroyed_at: 2020-04-01T18:11:44Z
                  id: edb0478d-7436-11ea-86e6-0a58ac144b91
                  name: volume-nyc1-01-1585758983629
              volumes: []
          schema:
            $ref: "#/components/schemas/associated_resource_status"
      description: A JSON object containing containing the status of a request to destroy a Droplet and its associated resources.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    available_upgrades:
      content:
        application/json:
          schema:
            properties:
              available_upgrade_versions:
                items:
                  $ref: "#/components/schemas/kubernetes_version"
                nullable: true
                type: array
            type: object
      description: >
        The response will be a JSON object with a key called

        `available_upgrade_versions`. The value of this will be an array of objects,

        representing the upgrade versions currently available for this cluster.


        If the cluster is up-to-date (i.e. there are no upgrades currently available)

        `available_upgrade_versions` will be `null`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    bad_request:
      content:
        application/json:
          example:
            id: bad_request
            message: error parsing request body
            request_id: 4851a473-1621-42ea-b2f9-5071c0ea8414
          schema:
            $ref: "#/components/schemas/error"
      description: Bad Request
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    balance:
      content:
        application/json:
          example:
            account_balance: "12.23"
            generated_at: 2019-07-09T15:01:12Z
            month_to_date_balance: "23.44"
            month_to_date_usage: "11.21"
          schema:
            $ref: "#/components/schemas/balance"
      description: The response will be a JSON object that contains the following attributes
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    billing_history:
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  billing_history:
                    items:
                      $ref: "#/components/schemas/billing_history"
                    type: array
                required:
                  - billing_history
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
            example:
              billing_history:
                - amount: "12.34"
                  date: 2018-06-01T08:44:38Z
                  description: Invoice for May 2018
                  invoice_id: "123"
                  invoice_uuid: example-uuid
                  type: Invoice
                - amount: "-12.34"
                  date: 2018-06-02T08:44:38Z
                  description: Payment (MC 2018)
                  type: Payment
              links:
                pages:
                  last: https://api.digitalocean.com/v2/customers/my/billing_history?page=3&per_page=2
                  next: https://api.digitalocean.com/v2/customers/my/billing_history?page=2&per_page=2
              meta:
                total: 5
      description: The response will be a JSON object that contains the following attributes
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    cancel_deployment:
      content:
        application/json:
          examples:
            deployment:
              $ref: "#/components/examples/deployment"
          schema:
            $ref: "#/components/schemas/apps_deployment_response"
      description: A JSON the `deployment` that was just cancelled.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    cluster_create:
      content:
        application/json:
          examples:
            Kubernetes Cluster Response:
              $ref: "#/components/examples/kubernetes_clusters_create_basic_response"
            Kubernetes Cluster with Multiple Node Pools Response:
              $ref: "#/components/examples/kubernetes_clusters_multi_pool_response"
          schema:
            properties:
              kubernetes_cluster:
                $ref: "#/components/schemas/cluster"
      description: >
        The response will be a JSON object with a key called `kubernetes_cluster`. The

        value of this will be an object containing the standard attributes of a

        Kubernetes cluster.


        The IP address and cluster API server endpoint will not be available until the

        cluster has finished provisioning. The initial value of the cluster's

        `status.state` attribute will be `provisioning`. When the cluster is ready,

        this will transition to `running`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    cluster_user:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/user"
      description: >
        The response will be a JSON object with a key called `kubernetes_cluster_user`

        containing the username and in-cluster groups that it belongs to.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    clusterlint_results:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/clusterlint_results"
      description: >
        The response is a JSON object which contains the diagnostics on Kubernetes

        objects in the cluster. Each diagnostic will contain some metadata information

        about the object and feedback for users to act upon.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    clusterlint_run:
      content:
        application/json:
          schema:
            properties:
              run_id:
                description: ID of the clusterlint run that can be used later to fetch the diagnostics.
                example: 50c2f44c-011d-493e-aee5-361a4a0d1844
                type: string
      description: The response is a JSON object with a key called `run_id` that you can later use to fetch the run results.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    conflict:
      content:
        application/json:
          example:
            id: conflict
            message: The request could not be completed due to a conflict.
          schema:
            $ref: "#/components/schemas/error"
      description: Conflict
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    create_domain_response:
      content:
        application/json:
          schema:
            example:
              domain:
                name: example.com
                ttl: 1800
                zone_file: null
            properties:
              domain:
                $ref: "#/components/schemas/domain"
      description: The response will be a JSON object with a key called `domain`. The value of this will be an object that contains the standard attributes associated with a domain.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    create_firewall_response:
      content:
        application/json:
          example:
            firewall:
              created_at: 2017-05-23T21:24:00Z
              droplet_ids:
                - 8043964
              id: bb4b2611-3d72-467b-8602-280330ecd65c
              inbound_rules:
                - ports: "80"
                  protocol: tcp
                  sources:
                    load_balancer_uids:
                      - 4de7ac8b-495b-4884-9a69-1050c6793cd6
                - ports: "22"
                  protocol: tcp
                  sources:
                    addresses:
                      - 18.0.0.0/8
                    tags:
                      - gateway
              name: firewall
              outbound_rules:
                - destinations:
                    addresses:
                      - 0.0.0.0/0
                      - ::/0
                  ports: "80"
                  protocol: tcp
              pending_changes:
                - droplet_id: 8043964
                  removing: false
                  status: waiting
              status: waiting
              tags: []
          schema:
            properties:
              firewall:
                $ref: "#/components/schemas/firewall"
      description: The response will be a JSON object with a firewall key. This will be set to an object containing the standard firewall attributes
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    created_domain_record:
      content:
        application/json:
          schema:
            example:
              domain_record:
                data: 162.10.66.0
                flags: null
                id: 28448433
                name: www
                port: null
                priority: null
                tag: null
                ttl: 1800
                type: A
                weight: null
            properties:
              domain_record:
                $ref: "#/components/schemas/domain_record"
      description: The response body will be a JSON object with a key called `domain_record`. The value of this will be an object representing the new record. Attributes that are not applicable for the record type will be set to `null`. An `id` attribute is generated for each record as part of the object.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    credentials:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/credentials"
      description: A JSON object containing credentials for a cluster.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    database:
      content:
        application/json:
          example:
            db:
              name: alpha
          schema:
            properties:
              db:
                $ref: "#/components/schemas/database"
            required:
              - db
            type: object
      description: A JSON object with a key of `db`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    database_backups:
      content:
        application/json:
          example:
            backups:
              - created_at: 2019-01-11T18:42:27Z
                size_gigabytes: 0.03357696
              - created_at: 2019-01-12T18:42:29Z
                size_gigabytes: 0.03364864
          schema:
            properties:
              backups:
                items:
                  $ref: "#/components/schemas/backup"
                type: array
            required:
              - backups
            type: object
      description: A JSON object with a key of `database_backups`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    database_cluster:
      content:
        application/json:
          example:
            database:
              connection:
                database: ""
                host: backend-do-user-19081923-0.db.ondigitalocean.com
                password: wv78n3zpz42xezdk
                port: 25060
                ssl: true
                uri: postgres://doadmin:wv78n3zpz42xezdk@backend-do-user-19081923-0.db.ondigitalocean.com:25060/defaultdb?sslmode=require
                user: doadmin
              created_at: 2019-01-11T18:37:36Z
              db_names:
                - defaultdb
              engine: pg
              id: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
              maintenance_window:
                day: saturday
                description:
                  - Update TimescaleDB to version 1.2.1
                  - Upgrade to PostgreSQL 11.2 and 10.7 bugfix releases
                hour: 08:45:12
                pending: true
              name: backend
              num_nodes: 2
              private_connection:
                database: ""
                host: private-backend-do-user-19081923-0.db.ondigitalocean.com
                password: wv78n3zpz42xezdk
                port: 25060
                ssl: true
                uri: postgres://doadmin:wv78n3zpz42xezdk@private-backend-do-user-19081923-0.db.ondigitalocean.com:25060/defaultdb?sslmode=require
                user: doadmin
              private_network_uuid: d455e75d-4858-4eec-8c95-da2f0a5f93a7
              region: nyc3
              size: db-s-2vcpu-4gb
              status: creating
              tags:
                - production
              users:
                - name: doadmin
                  password: wv78n3zpz42xezdk
                  role: primary
              version: "10"
          schema:
            properties:
              database:
                $ref: "#/components/schemas/database_cluster"
            required:
              - database
            type: object
      description: A JSON object with a key of `database`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    database_clusters:
      content:
        application/json:
          example:
            databases:
              - connection:
                  database: ""
                  host: backend-do-user-19081923-0.db.ondigitalocean.com
                  password: wv78n3zpz42xezdk
                  port: 25060
                  ssl: true
                  uri: postgres://doadmin:wv78n3zpz42xezdk@backend-do-user-19081923-0.db.ondigitalocean.com:25060/defaultdb?sslmode=require
                  user: doadmin
                created_at: 2019-01-11T18:37:36Z
                db_names:
                  - defaultdb
                engine: pg
                id: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                maintenance_window:
                  day: saturday
                  description:
                    - Update TimescaleDB to version 1.2.1
                    - Upgrade to PostgreSQL 11.2 and 10.7 bugfix releases
                  hour: 08:45:12
                  pending: true
                name: backend
                num_nodes: 1
                private_connection:
                  database: ""
                  host: private-backend-do-user-19081923-0.db.ondigitalocean.com
                  password: wv78n3zpz42xezdk
                  port: 25060
                  ssl: true
                  uri: postgres://doadmin:wv78n3zpz42xezdk@private-backend-do-user-19081923-0.db.ondigitalocean.com:25060/defaultdb?sslmode=require
                  user: doadmin
                private_network_uuid: d455e75d-4858-4eec-8c95-da2f0a5f93a7
                region: nyc3
                size: db-s-2vcpu-4gb
                status: online
                tags:
                  - production
                users:
                  - name: doadmin
                    password: wv78n3zpz42xezdk
                    role: primary
                version: "10"
          schema:
            properties:
              databases:
                items:
                  $ref: "#/components/schemas/database_cluster"
                type: array
      description: A JSON object with a key of `databases`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    database_replica:
      content:
        application/json:
          example:
            replica:
              connection:
                database: defaultdb
                host: read-nyc3-01-do-user-19081923-0.db.ondigitalocean.com
                password: wv78n3zpz42xezdk
                port: 25060
                ssl: true
                uri: ""
                user: doadmin
              created_at: 2019-01-11T18:37:36Z
              name: read-nyc3-01
              private_connection:
                database: ""
                host: private-read-nyc3-01-do-user-19081923-0.db.ondigitalocean.com
                password: wv78n3zpz42xezdk
                port: 25060
                ssl: true
                uri: postgres://doadmin:wv78n3zpz42xezdk@private-read-nyc3-01-do-user-19081923-0.db.ondigitalocean.com:25060/defaultdb?sslmode=require
                user: doadmin
              region: nyc3
              status: online
          schema:
            properties:
              replica:
                $ref: "#/components/schemas/database_replica"
            type: object
      description: A JSON object with a key of `replica`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    database_replicas:
      content:
        application/json:
          example:
            replicas:
              - connection:
                  database: defaultdb
                  host: read-nyc3-01-do-user-19081923-0.db.ondigitalocean.com
                  password: wv78n3zpz42xezdk
                  port: 25060
                  ssl: true
                  uri: ""
                  user: doadmin
                created_at: 2019-01-11T18:37:36Z
                name: read-nyc3-01
                private_connection:
                  database: ""
                  host: private-read-nyc3-01-do-user-19081923-0.db.ondigitalocean.com
                  password: wv78n3zpz42xezdk
                  port: 25060
                  ssl: true
                  uri: postgres://doadmin:wv78n3zpz42xezdk@private-read-nyc3-01-do-user-19081923-0.db.ondigitalocean.com:25060/defaultdb?sslmode=require
                  user: doadmin
                region: nyc3
                status: online
          schema:
            properties:
              replicas:
                items:
                  $ref: "#/components/schemas/database_replica"
                type: array
      description: A JSON object with a key of `replicas`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    databases:
      content:
        application/json:
          example:
            dbs:
              - name: alpha
              - name: defaultdb
          schema:
            properties:
              dbs:
                items:
                  $ref: "#/components/schemas/database"
                type: array
      description: A JSON object with a key of `databases`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    default_project:
      content:
        application/json:
          schema:
            example:
              project:
                created_at: 2017-10-19T21:44:20Z
                description: Default project
                environment: Development
                id: addb4547-6bab-419a-8542-76263a033cf6
                is_default: true
                name: Default
                owner_id: 258992
                owner_uuid: 99525febec065ca37b2ffe4f852fd2b2581895e7
                purpose: Just trying out DigitalOcean
                updated_at: 2019-11-05T18:50:03Z
            properties:
              project:
                $ref: "#/components/schemas/project"
      description: The response will be a JSON object with a key called `project`. The value of this will be an object with the standard project attributes
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    delete_app:
      content:
        application/json:
          example:
            id: b7d64052-3706-4cb7-b21a-c5a2f44e63b3
          schema:
            $ref: "#/components/schemas/apps_delete_app_response"
      description: the ID of the app deleted.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    detect:
      content:
        application/json:
          examples:
            components:
              $ref: "#/components/examples/components"
          schema:
            $ref: "#/components/schemas/apps_detect_response"
      description: A JSON with supported apps and templates.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    docker_credentials:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/docker_credentials"
      description: A Docker `config.json` file for the container registry.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    domain_record:
      content:
        application/json:
          schema:
            example:
              domain_record:
                data: 162.10.66.0
                flags: null
                id: 3352896
                name: blog
                port: null
                priority: null
                tag: null
                ttl: 1800
                type: A
                weight: null
            properties:
              domain_record:
                $ref: "#/components/schemas/domain_record"
      description: The response will be a JSON object with a key called `domain_record`. The value of this will be a domain record object which contains the standard domain record attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    droplet_action:
      content:
        application/json:
          schema:
            properties:
              action:
                $ref: "#/components/schemas/action"
      description: The response will be a JSON object with a key called `action`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    droplet_actions:
      content:
        application/json:
          schema:
            properties:
              actions:
                items:
                  $ref: "#/components/schemas/action"
                type: array
      description: The response will be a JSON object with a key called `actions`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    droplet_create:
      content:
        application/json:
          examples:
            Multiple Droplet Create Response:
              $ref: "#/components/examples/droplet_multi_create_response"
            Single Droplet Create Response:
              $ref: "#/components/examples/droplet_create_response"
          schema:
            oneOf:
              - properties:
                  droplet:
                    $ref: "#/components/schemas/droplet"
                  links:
                    properties:
                      actions:
                        items:
                          $ref: "#/components/schemas/action_link"
                        type: array
                    type: object
                required:
                  - droplet
                  - links
                title: Single Droplet Response
              - properties:
                  droplets:
                    items:
                      $ref: "#/components/schemas/droplet"
                    type: array
                  links:
                    properties:
                      actions:
                        items:
                          $ref: "#/components/schemas/action_link"
                        type: array
                    type: object
                required:
                  - droplets
                  - links
                title: Multiple Droplet Response
      description: Accepted
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    droplet_neighbors_ids:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/neighbor_ids"
      description: A JSON object with an `neighbor_ids` key.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    eviction_policy:
      content:
        application/json:
          example:
            eviction_policy: noeviction
          schema:
            $ref: "#/components/schemas/eviction_policy"
      description: A JSON string with a key of `eviction_policy`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    existing_action:
      content:
        application/json:
          schema:
            properties:
              action:
                $ref: "#/components/schemas/action"
      description: The result will be a JSON object with an action key.  This will be set to an action object containing the standard action attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    existing_certificate:
      content:
        application/json:
          examples:
            Custom Certificate:
              $ref: "#/components/examples/certificates_custom"
            Let's Encrypt Certificate:
              $ref: "#/components/examples/certificates_lets_encrypt"
          schema:
            properties:
              certificate:
                $ref: "#/components/schemas/certificate"
            type: object
      description: The response will be a JSON object with a `certificate` key. This will be set to an object containing the standard certificate attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    existing_cluster:
      content:
        application/json:
          examples:
            Single Kubernetes Cluster:
              $ref: "#/components/examples/kubernetes_single"
          schema:
            properties:
              kubernetes_cluster:
                $ref: "#/components/schemas/cluster"
      description: >
        The response will be a JSON object with a key called `kubernetes_cluster`. The

        value of this will be an object containing the standard attributes of a

        Kubernetes cluster.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    existing_deployments:
      content:
        application/json:
          examples:
            deployments:
              $ref: "#/components/examples/deployments"
          schema:
            $ref: "#/components/schemas/apps_deployments_response"
      description: A JSON object with a `deployments` key. This will be a list of all app deployments
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    existing_domain:
      content:
        application/json:
          schema:
            example:
              domain:
                name: example.com
                ttl: 1800
                zone_file: >
                  $ORIGIN example.com.

                  $TTL 1800

                  example.com. IN SOA ns1.digitalocean.com. hostmaster.example.com. 1415982611 10800 3600 604800 1800

                  example.com. 1800 IN NS ns1.digitalocean.com.

                  example.com. 1800 IN NS ns2.digitalocean.com.

                  example.com. 1800 IN NS ns3.digitalocean.com.

                  example.com. 1800 IN A 1.2.3.4
            properties:
              domain:
                $ref: "#/components/schemas/domain"
      description: The response will be a JSON object with a key called `domain`. The value of this will be an object that contains the standard attributes defined for a domain.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    existing_droplet:
      content:
        application/json:
          examples:
            Single Droplet:
              $ref: "#/components/examples/droplet_single"
          schema:
            properties:
              droplet:
                $ref: "#/components/schemas/droplet"
      description: >
        The response will be a JSON object with a key called `droplet`. This will be

        set to a JSON object that contains the standard Droplet attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    existing_endpoint:
      content:
        application/json:
          examples:
            CDN Endpoint:
              value:
                endpoint:
                  created_at: 2018-07-19T15:04:16Z
                  endpoint: static-images.nyc3.cdn.digitaloceanspaces.com
                  id: 19f06b6a-3ace-4315-b086-499a0e521b76
                  origin: static-images.nyc3.digitaloceanspaces.com
                  ttl: 3600
            CDN Endpoint With Custom Domain:
              value:
                endpoint:
                  certificate_id: 892071a0-bb95-49bc-8021-3afd67a210bf
                  created_at: 2018-07-19T15:04:16Z
                  custom_domain: static.example.com
                  endpoint: static-images.nyc3.cdn.digitaloceanspaces.com
                  id: 19f06b6a-3ace-4315-b086-499a0e521b76
                  origin: static-images.nyc3.digitaloceanspaces.com
                  ttl: 3600
          schema:
            properties:
              endpoint:
                $ref: "#/components/schemas/cdn_endpoint"
      description: The response will be a JSON object with an `endpoint` key. This will be set to an object containing the standard CDN endpoint attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    existing_image:
      content:
        application/json:
          example:
            image:
              created_at: 2014-10-17T20:24:33Z
              description: ""
              distribution: Ubuntu
              error_message: ""
              id: 6918990
              min_disk_size: 20
              name: 14.04 x64
              public: true
              regions:
                - nyc1
                - ams1
                - sfo1
                - nyc2
                - ams2
                - sgp1
                - lon1
                - nyc3
                - ams3
                - nyc3
              size_gigabytes: 2.34
              slug: ubuntu-16-04-x64
              status: available
              tags: []
          schema:
            properties:
              image:
                $ref: "#/components/schemas/image"
            required:
              - image
            type: object
      description: The response will be a JSON object with a key called `image`.  The value of this will be an image object containing the standard image attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    existing_key:
      content:
        application/json:
          schema:
            properties:
              ssh_key:
                $ref: "#/components/schemas/ssh_key"
      description: A JSON object with the key set to `ssh_key`. The value is an `ssh_key` object containing the standard `ssh_key` attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
      links:
        delete_ssh_key_by_fingerprint:
          $ref: "#/components/links/delete_ssh_key_by_fingerprint"
        delete_ssh_key_by_id:
          $ref: "#/components/links/delete_ssh_key_by_id"
        get_ssh_key_by_fingerprint:
          $ref: "#/components/links/get_ssh_key_by_fingerprint"
        get_ssh_key_by_id:
          $ref: "#/components/links/get_ssh_key_by_id"
    existing_load_balancer:
      content:
        application/json:
          examples:
            load_balancer_basic_response:
              $ref: "#/components/examples/load_balancer_basic_response"
          schema:
            properties:
              load_balancer:
                $ref: "#/components/schemas/load_balancer"
      description: >
        The response will be a JSON object with a key called `load_balancer`. The

        value of this will be an object that contains the standard attributes

        associated with a load balancer
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    existing_node_pool:
      content:
        application/json:
          schema:
            example:
              node_pool:
                auto_scale: false
                count: 3
                id: cdda885e-7663-40c8-bc74-3a036c66545d
                labels:
                  priority: high
                  service: backend
                max_nodes: 0
                min_nodes: 0
                name: frontend-pool
                nodes:
                  - created_at: 2018-11-15T16:00:11Z
                    droplet_id: "205545370"
                    id: 478247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
                    name: adoring-newton-3niq
                    status:
                      state: running
                    updated_at: 2018-11-15T16:00:11Z
                  - created_at: 2018-11-15T16:00:11Z
                    droplet_id: "205545371"
                    id: ad12e744-c2a9-473d-8aa9-be5680500eb1
                    name: adoring-newton-3nim
                    status:
                      state: running
                    updated_at: 2018-11-15T16:00:11Z
                  - created_at: 2018-11-15T16:00:11Z
                    droplet_id: "205545372"
                    id: e46e8d07-f58f-4ff1-9737-97246364400e
                    name: adoring-newton-3ni7
                    status:
                      state: running
                    updated_at: 2018-11-15T16:00:11Z
                size: s-1vcpu-2gb
                tags:
                  - production
                  - web-team
                  - k8s
                  - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                  - k8s:worker
                taints:
                  - effect: NoSchedule
                    key: priority
                    value: high
            properties:
              node_pool:
                $ref: "#/components/schemas/kubernetes_node_pool"
      description: >
        The response will be a JSON object with a key called `node_pool`. The value

        of this will be an object containing the standard attributes of a node pool.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    existing_project:
      content:
        application/json:
          schema:
            properties:
              project:
                $ref: "#/components/schemas/project"
            required:
              - name
              - purpose
      description: The response will be a JSON object with a key called `project`. The value of this will be an object with the standard project attributes
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    existing_snapshot:
      content:
        application/json:
          schema:
            properties:
              snapshot:
                $ref: "#/components/schemas/snapshot"
      description: >
        A JSON object with a key called `snapshot`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    existing_tag:
      content:
        application/json:
          schema:
            example:
              tag:
                tag:
                  name: extra-awesome
                  resources:
                    count: 5
                    databases:
                      count: 1
                      last_tagged_uri: https://api.digitalocean.com/v2/databases/b92438f6-ba03-416c-b642-e9236db91976
                    droplets:
                      count: 1
                      last_tagged_uri: https://api.digitalocean.com/v2/droplets/3164444
                    images:
                      count: 1
                      last_tagged_uri: https://api.digitalocean.com/v2/images/7555620
                    last_tagged_uri: https://api.digitalocean.com/v2/images/7555620
                    volume_snapshots:
                      count: 1
                      last_tagged_uri: https://api.digitalocean.com/v2/snapshots/1f6f46e8-6b60-11e9-be4e-0a58ac144519
                    volumes:
                      count: 1
                      last_tagged_uri: https://api.digitalocean.com/v2/volumes/3d80cb72-342b-4aaa-b92e-4e4abb24a933
            properties:
              tag:
                $ref: "#/components/schemas/tag"
            type: object
      description: The response will be a JSON object with a key called `tag`.  The value of this will be a tag object containing the standard tag attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    existing_vpc:
      content:
        application/json:
          schema:
            properties:
              vpc:
                $ref: "#/components/schemas/vpc"
            type: object
      description: The response will be a JSON object with a key called `vpc`. The value of this will be an object that contains the standard attributes associated with a VPC.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    firewall_rules:
      content:
        application/json:
          example:
            rules:
              - cluster_uuid: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                created_at: 2019-11-14T20:30:28Z
                type: k8s
                uuid: 79f26d28-ea8a-41f2-8ad8-8cfcdd020095
                value: ff2a6c52-5a44-4b63-b99c-0e98e7a63d61
              - cluster_uuid: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                created_at: 2019-11-14T20:30:28Z
                type: ip_addr
                uuid: adfe81a8-0fa1-4e2d-973f-06aa5af19b44
                value: 192.168.1.1
              - cluster_uuid: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                created_at: 2019-11-14T20:30:28Z
                type: droplet
                uuid: b9b42276-8295-4313-b40f-74173a7f46e6
                value: "163973392"
              - cluster_uuid: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                created_at: 2019-11-14T20:30:28Z
                type: tag
                uuid: 718d23e0-13d7-4129-8a00-47fb72ee0deb
                value: backend
          schema:
            properties:
              rules:
                items:
                  $ref: "#/components/schemas/firewall_rule"
                type: array
      description: A JSON object with a key of `rules`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    floating_ip:
      content:
        application/json:
          examples:
            floating_ip_assigned:
              $ref: "#/components/examples/floating_ip_assigned"
            floating_ip_reserved:
              $ref: "#/components/examples/floating_ip_reserved"
          schema:
            properties:
              floating_ip:
                $ref: "#/components/schemas/floating_ip"
            type: object
      description: The response will be a JSON object with a key called `floating_ip`. The value of this will be an object that contains the standard attributes associated with a floating IP.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    floating_ip_action:
      content:
        application/json:
          schema:
            example:
              action:
                completed_at: 2015-11-12T17:51:14Z
                id: 72531856
                region:
                  available: true
                  features:
                    - private_networking
                    - backups
                    - ipv6
                    - metadata
                  name: New York 3
                  sizes:
                    - s-1vcpu-1gb
                    - s-1vcpu-2gb
                    - s-1vcpu-3gb
                    - s-2vcpu-2gb
                    - s-3vcpu-1gb
                    - s-2vcpu-4gb
                    - s-4vcpu-8gb
                    - s-6vcpu-16gb
                    - s-8vcpu-32gb
                    - s-12vcpu-48gb
                    - s-16vcpu-64gb
                    - s-20vcpu-96gb
                    - s-24vcpu-128gb
                    - s-32vcpu-192gb
                  slug: nyc3
                region_slug: nyc3
                resource_id: 758604968
                resource_type: floating_ip
                started_at: 2015-11-12T17:51:03Z
                status: completed
                type: assign_ip
            properties:
              action:
                $ref: "#/components/schemas/action"
      description: The response will be an object with a key called `action`. The value of this will be an object that contains the standard floating IP action attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    floating_ip_actions:
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  actions:
                    items:
                      $ref: "#/components/schemas/action"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
            example:
              actions:
                - completed_at: 2015-11-21T21:51:09Z
                  id: 72531856
                  region:
                    available: true
                    features:
                      - private_networking
                      - backups
                      - ipv6
                      - metadata
                    name: New York 3
                    sizes:
                      - s-1vcpu-1gb
                      - s-1vcpu-2gb
                      - s-1vcpu-3gb
                      - s-2vcpu-2gb
                      - s-3vcpu-1gb
                      - s-2vcpu-4gb
                      - s-4vcpu-8gb
                      - s-6vcpu-16gb
                      - s-8vcpu-32gb
                      - s-12vcpu-48gb
                      - s-16vcpu-64gb
                      - s-20vcpu-96gb
                      - s-24vcpu-128gb
                      - s-32vcpu-192gb
                    slug: nyc3
                  region_slug: nyc3
                  resource_id: 758604197
                  resource_type: floating_ip
                  started_at: 2015-11-21T21:51:09Z
                  status: completed
                  type: reserve_ip
              links: {}
              meta:
                total: 1
      description: The results will be returned as a JSON object with an `actions` key. This will be set to an array filled with action objects containing the standard floating IP action attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    floating_ip_created:
      content:
        application/json:
          examples:
            floating_ip_assigning:
              $ref: "#/components/examples/floating_ip_assigning"
            floating_ip_reserving:
              $ref: "#/components/examples/floating_ip_reserving"
          schema:
            properties:
              floating_ip:
                $ref: "#/components/schemas/floating_ip"
              links:
                properties:
                  actions:
                    items:
                      $ref: "#/components/schemas/action_link"
                    type: array
                  droplets:
                    items:
                      $ref: "#/components/schemas/action_link"
                    type: array
                type: object
            type: object
      description: >-
        The response will be a JSON object with a key called `floating_ip`. The value of this will be an object that contains the standard attributes associated with a floating IP.

        When assigning a floating IP to a Droplet at same time as it created, the response's `links` object will contain links to both the Droplet and the assignment action. The latter can be used to check the status of the action.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    floating_ip_list:
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  floating_ips:
                    items:
                      $ref: "#/components/schemas/floating_ip"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
            example:
              floating_ips:
                - droplet: null
                  ip: 45.55.96.47
                  locked: false
                  region:
                    available: true
                    features:
                      - private_networking
                      - backups
                      - ipv6
                      - metadata
                      - install_agent
                      - storage
                      - image_transfer
                    name: New York 3
                    sizes:
                      - s-1vcpu-1gb
                      - s-1vcpu-2gb
                      - s-1vcpu-3gb
                      - s-2vcpu-2gb
                      - s-3vcpu-1gb
                      - s-2vcpu-4gb
                      - s-4vcpu-8gb
                      - s-6vcpu-16gb
                      - s-8vcpu-32gb
                      - s-12vcpu-48gb
                      - s-16vcpu-64gb
                      - s-20vcpu-96gb
                      - s-24vcpu-128gb
                      - s-32vcpu-192g
                    slug: nyc3
              links: {}
              meta:
                total: 1
      description: The response will be a JSON object with a key called `floating_ips`. This will be set to an array of floating IP objects, each of which will contain the standard floating IP attributes
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    garbage_collection:
      content:
        application/json:
          schema:
            properties:
              garbage_collection:
                $ref: "#/components/schemas/garbage_collection"
            type: object
      description: The response will be a JSON object with a key of `garbage_collection`. This will be a json object with attributes representing the currently-active garbage collection.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    garbage_collections:
      content:
        application/json:
          example:
            garbage_collections:
              - blobs_deleted: 42
                created_at: 2020-10-30T21:03:24.000Z
                freed_bytes: 667
                registry_name: example
                status: requested
                updated_at: 2020-10-30T21:03:44.000Z
                uuid: eff0feee-49c7-4e8f-ba5c-a320c109c8a8
            meta:
              total: 1
          schema:
            properties:
              garbage_collections:
                items:
                  $ref: "#/components/schemas/garbage_collection"
                type: array
            type: object
      description: The response will be a JSON object with a key of `garbage_collections`. This will be set to an array containing objects representing each past garbage collection. Each will contain the standard Garbage Collection attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    get_app:
      content:
        application/json:
          examples:
            app:
              $ref: "#/components/examples/app"
          schema:
            $ref: "#/components/schemas/app_response"
      description: A JSON with key `app`
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    get_firewall_response:
      content:
        application/json:
          example:
            firewall:
              created_at: 2017-05-23T21:24:00Z
              droplet_ids:
                - 8043964
              id: bb4b2611-3d72-467b-8602-280330ecd65c
              inbound_rules:
                - ports: "80"
                  protocol: tcp
                  sources:
                    load_balancer_uids:
                      - 4de7ac8b-495b-4884-9a69-1050c6793cd6
                - ports: "22"
                  protocol: tcp
                  sources:
                    addresses:
                      - 18.0.0.0/8
                    tags:
                      - gateway
              name: firewall
              outbound_rules:
                - destinations:
                    addresses:
                      - 0.0.0.0/0
                      - ::/0
                  ports: "80"
                  protocol: tcp
              pending_changes: []
              status: succeeded
              tags: []
          schema:
            properties:
              firewall:
                $ref: "#/components/schemas/firewall"
      description: The response will be a JSON object with a firewall key. This will be set to an object containing the standard firewall attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    get_image_action_response:
      content:
        application/json:
          example:
            action:
              completed_at: null
              id: 36805527
              region:
                available: true
                features:
                  - private_networking
                  - backups
                  - ipv6
                  - metadata
                  - server_id
                  - install_agent
                  - storage
                  - image_transfer
                name: New York 3
                sizes:
                  - s-1vcpu-3gb
                  - m-1vcpu-8gb
                  - s-3vcpu-1gb
                  - s-1vcpu-2gb
                  - s-2vcpu-2gb
                  - s-2vcpu-4gb
                  - s-4vcpu-8gb
                  - s-6vcpu-16gb
                  - s-8vcpu-32gb
                  - s-12vcpu-48gb
                  - s-16vcpu-64gb
                  - s-20vcpu-96gb
                  - s-1vcpu-1gb
                  - c-1vcpu-2gb
                  - s-24vcpu-128gb
                slug: nyc3
              region_slug: nyc3
              resource_id: 7938269
              resource_type: image
              started_at: 2014-11-14T16:42:45Z
              status: in-progress
              type: transfer
          schema:
            $ref: "#/components/schemas/action"
      description: The response will be an object with a key called `action`. The value of this will be an object that contains the standard image action attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    get_image_actions_response:
      content:
        application/json:
          example:
            actions:
              - completed_at: 2014-07-25T15:10:20Z
                id: 29410565
                region:
                  available: true
                  features:
                    - private_networking
                    - backups
                    - ipv6
                    - metadata
                    - server_id
                    - install_agent
                    - storage
                    - image_transfer
                  name: New York 2
                  sizes:
                    - s-1vcpu-3gb
                    - m-1vcpu-8gb
                    - s-3vcpu-1gb
                    - s-1vcpu-2gb
                    - s-2vcpu-2gb
                    - s-2vcpu-4gb
                    - s-4vcpu-8gb
                    - s-6vcpu-16gb
                    - s-8vcpu-32gb
                    - s-12vcpu-48gb
                    - s-16vcpu-64gb
                    - s-20vcpu-96gb
                    - s-1vcpu-1gb
                    - c-1vcpu-2gb
                    - s-24vcpu-128gb
                  slug: nyc2
                region_slug: nyc2
                resource_id: 7555620
                resource_type: image
                started_at: 2014-07-25T15:04:21Z
                status: completed
                type: transfer
            links:
              pages:
                last: https://api.digitalocean.com/v2/images/7555620/actions?page=5&per_page=1
                next: https://api.digitalocean.com/v2/images/7555620/actions?page=2&per_page=1
            meta:
              total: 5
          schema:
            allOf:
              - properties:
                  actions:
                    items:
                      $ref: "#/components/schemas/action"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
      description: The results will be returned as a JSON object with an `actions` key. This will be set to an array filled with action objects containing the standard action attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    get_instance:
      content:
        application/json:
          examples:
            instance_size:
              $ref: "#/components/examples/instance_size"
          schema:
            $ref: "#/components/schemas/apps_get_instance_size_response"
      description: A JSON with key `instance_size`
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    get_tier:
      content:
        application/json:
          examples:
            tier:
              $ref: "#/components/examples/tier"
          schema:
            $ref: "#/components/schemas/apps_get_tier_response"
      description: A JSON with the key `tier`
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    invoice:
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  invoice_items:
                    items:
                      $ref: "#/components/schemas/invoice_item"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
            example:
              invoice_items:
                - amount: "12.34"
                  description: a56e086a317d8410c8b4cfd1f4dc9f82
                  duration: "744"
                  duration_unit: Hours
                  end_time: 2020-02-01T00:00:00Z
                  group_description: my-doks-cluster
                  product: Kubernetes Clusters
                  resource_uuid: 711157cb-37c8-4817-b371-44fa3504a39c
                  start_time: 2020-01-01T00:00:00Z
                - amount: "34.45"
                  description: Spaces ($5/mo 250GB storage & 1TB bandwidth)
                  duration: "744"
                  duration_unit: Hours
                  end_time: 2020-02-01T00:00:00Z
                  product: Spaces Subscription
                  start_time: 2020-01-01T00:00:00Z
              links:
                pages:
                  last: https://api.digitalocean.com/v2/customers/my/invoices/22737513-0ea7-4206-8ceb-98a575af7681?page=3&per_page=2
                  next: https://api.digitalocean.com/v2/customers/my/invoices/22737513-0ea7-4206-8ceb-98a575af7681?page=2&per_page=2
              meta:
                total: 6
      description: The response will be a JSON object with a key called `invoice_items`. This will be set to an array of invoice item objects.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    invoice_csv:
      content:
        text/csv:
          example: >
            product,group_description,description,hours,start,end,USD,project_name,category

            Floating IPs,,Unused Floating IP - 1.1.1.1,100,2020-07-01 00:00:00 +0000,2020-07-22 18:14:39 +0000,$3.11,,iaas

            Taxes,,STATE SALES TAX (6.25%),,2020-07-01 00:00:00 +0000,2020-07-31 23:59:59 +0000,$0.16,,iaas
          schema:
            type: string
      description: The response will be a CSV file.
      headers:
        content-disposition:
          $ref: "#/components/headers/content-disposition"
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    invoice_pdf:
      content:
        application/pdf:
          schema:
            format: binary
            type: string
      description: The response will be a PDF file.
      headers:
        content-disposition:
          $ref: "#/components/headers/content-disposition"
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    invoice_summary:
      content:
        application/json:
          example:
            amount: "27.13"
            billing_period: 2020-01
            credits_and_adjustments:
              amount: "6.78"
              name: Credits & adjustments
            invoice_uuid: 22737513-0ea7-4206-8ceb-98a575af7681
            overages:
              amount: "3.45"
              name: Overages
            product_charges:
              amount: "12.34"
              items:
                - amount: "10.00"
                  count: "1"
                  name: Spaces Subscription
                - amount: "2.34"
                  count: "1"
                  name: Database Clusters
              name: Product usage charges
            taxes:
              amount: "4.56"
              name: Taxes
            user_billing_address:
              address_line1: 101 Shark Row
              city: Atlantis
              country_iso2_code: US
              created_at: 2019-09-03T16:34:46.000+00:00
              postal_code: "12345"
              region: OC
              updated_at: 2019-09-03T16:34:46.000+00:00
            user_company: DigitalOcean
            user_email: sammy@digitalocean.com
            user_name: Sammy Shark
          schema:
            $ref: "#/components/schemas/invoice_summary"
      description: To retrieve a summary for an invoice, send a GET request to  `/v2/customers/my/invoices/$INVOICE_UUID/summary`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    invoices:
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  invoice_preview:
                    $ref: "#/components/schemas/invoice_preview"
                  invoices:
                    items:
                      $ref: "#/components/schemas/invoice_preview"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
            example:
              invoice_preview:
                amount: "34.56"
                invoice_period: 2020-02
                invoice_uuid: 1afe95e6-0958-4eb0-8d9a-9c5060d3ef03
                updated_at: 2020-02-23T06:31:50Z
              invoices:
                - amount: "12.34"
                  invoice_period: 2019-12
                  invoice_uuid: 22737513-0ea7-4206-8ceb-98a575af7681
                - amount: "23.45"
                  invoice_period: 2019-11
                  invoice_uuid: fdabb512-6faf-443c-ba2e-665452332a9e
              links:
                pages:
                  last: https://api.digitalocean.com/v2/customers/my/invoices?page=35&per_page=2
                  next: https://api.digitalocean.com/v2/customers/my/invoices?page=2&per_page=2
              meta:
                total: 70
      description: >-
        The response will be a JSON object contains that contains a list of invoices under the `invoices` key, and the invoice preview under the `invoice_preview` key.

        Each element contains the invoice summary attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    key_created:
      content:
        application/json:
          schema:
            properties:
              ssh_key:
                $ref: "#/components/schemas/ssh_key"
      description: The response body will be a JSON object with a key set to `ssh_key`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
      links:
        delete_ssh_key_by_fingerprint:
          $ref: "#/components/links/delete_ssh_key_by_fingerprint"
        delete_ssh_key_by_id:
          $ref: "#/components/links/delete_ssh_key_by_id"
        get_ssh_key_by_fingerprint:
          $ref: "#/components/links/get_ssh_key_by_fingerprint"
        get_ssh_key_by_id:
          $ref: "#/components/links/get_ssh_key_by_id"
    kubeconfig:
      content:
        application/yaml:
          example: >
            apiVersion: v1

            clusters:

            - cluster:
                certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUxCUUF3TXpFVk1CTUdBMVVFQ2ftTVJHbG4KYVhSaGJFOWpaV0Z1TVJvd0dUSREERXhGck9ITmhZWE1nUTJ4MWMzUmxjaUJEUVRBZUZ3MHhPREV4TVRVeApOakF3TWpCYUZ3MHpPREV4TVRVeE5qQXdNakJhTURNeEZUQVRCZ05WQkFvVERFUnBaMmwwWVd4UFkyVmhiakVhCk1CZ0dBMVVFQXhNUmF6aHpZV0Z6SUVOc2RYTjBaWElnUTBFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFDK2Z0L05Nd3pNaUxFZlFvTFU2bDgrY0hMbWttZFVKdjl4SmlhZUpIU0dZOGhPZFVEZQpGd1Zoc0pDTnVFWkpJUFh5Y0orcGpkU3pYc1lFSE03WVNKWk9xNkdaYThPMnZHUlJjN2ZQaUFJaFBRK0ZpUmYzCmRhMHNIUkZlM2hCTmU5ZE5SeTliQ2VCSTRSUlQrSEwzRFR3L2I5KytmRkdZQkRoVTEvTTZUWWRhUHR3WU0rdWgKb1pKcWJZVGJZZTFhb3R1ekdnYUpXaXRhdFdHdnNJYU8xYWthdkh0WEIOOHFxa2lPemdrSDdvd3RVY3JYM05iawozdmlVeFU4TW40MmlJaGFyeHNvTnlwdGhHOWZLMi9OdVdKTXJJS2R0Mzhwc0tkdDBFbng0MWg5K0dsMjUzMzhWCk1mdjBDVDF6SG1JanYwblIrakNkcFd0eFVLRyt0YjYzZFhNbkFnTUJBQUdqUlRCRE1BNEdBMVVkRHdFQi93UUUKQXdJQmhqQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQjBHQTFVZERnUVdCQlNQMmJrOXJiUGJpQnZOd1Z1NQpUL0dwTFdvOTdEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFEVjFMSGZyc1JiYVdONHE5SnBFVDMxMlluRDZ6Cm5rM3BpU1ZSYVEvM09qWG8wdHJ6Z2N4KzlVTUQxeDRHODI1RnYxc0ROWUExZEhFc2dHUmNyRkVmdGZJQWUrUVYKTitOR3NMRnQrOGZrWHdnUlpoNEU4ZUJsSVlrdEprOWptMzFMT25vaDJYZno0aGs3VmZwYkdvVVlsbmVoak1JZApiL3ZMUk05Y2EwVTJlYTB5OTNveE5pdU9PcXdrZGFjU1orczJtb3JNdGZxc3VRSzRKZDA3SENIbUFIeWpXT2k4ClVOQVUyTnZnSnBKY2RiZ3VzN2I5S3ppR1ZERklFUk04cEo4U1Nob1ZvVFFJd3d5Y2xVTU9EUUJreFFHOHNVRk8KRDE3ZjRod1dNbW5qVHY2MEJBM0dxaTZRcjdsWVFSL3drSEtQcnZjMjhoNXB0NndPWEY1b1M4OUZkUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
                server: https://bd5f5959-5e1e-4205-a714-a914373942af.k8s.ondigitalocean.com
              name: do-nyc1-prod-cluster-01
            contexts:

            - context:
                cluster: do-nyc1-prod-cluster-01
                user: do-nyc1-prod-cluster-01-admin
              name: do-nyc1-prod-cluster-01
            current-context: do-nyc1-prod-cluster-01

            kind: Config

            preferences: {}

            users:

            - name: do-nyc1-prod-cluster-01-admin
              user:
                token: 403d085aaa80102277d8da97ffd2db2b6a4f129d0e2146098fdfb0cec624babc
          schema:
            type: string
      description: A kubeconfig file for the cluster in YAML format.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    list_apps:
      content:
        application/json:
          examples:
            apps:
              $ref: "#/components/examples/apps"
          schema:
            $ref: "#/components/schemas/apps_response"
      description: A JSON object with a `apps` key. This is list of object `apps`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    list_deployment:
      content:
        application/json:
          examples:
            deployment:
              $ref: "#/components/examples/deployment"
          schema:
            $ref: "#/components/schemas/apps_deployment_response"
      description: A JSON of the requested deployment
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    list_firewalls_response:
      content:
        application/json:
          example:
            firewalls:
              - created_at: 2017-05-23T21:23:59Z
                droplet_ids:
                  - 8043964
                id: fb6045f1-cf1d-4ca3-bfac-18832663025b
                inbound_rules:
                  - ports: "80"
                    protocol: tcp
                    sources:
                      load_balancer_uids:
                        - 4de7ac8b-495b-4884-9a69-1050c6793cd6
                  - ports: "22"
                    protocol: tcp
                    sources:
                      addresses:
                        - 18.0.0.0/8
                      tags:
                        - gateway
                name: firewall
                outbound_rules:
                  - destinations:
                      addresses:
                        - 0.0.0.0/0
                        - ::/0
                    ports: "80"
                    protocol: tcp
                pending_changes: []
                status: succeeded
                tags: []
            links: {}
            meta:
              total: 1
          schema:
            allOf:
              - properties:
                  firewalls:
                    items:
                      $ref: "#/components/schemas/firewall"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
      description: To list all of the firewalls available on your account, send a GET request to `/v2/firewalls`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    list_instance:
      content:
        application/json:
          examples:
            instance_sizes:
              $ref: "#/components/examples/instance_sizes"
          schema:
            $ref: "#/components/schemas/apps_list_instance_sizes_response"
      description: A JSON with key `instance_sizes`
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    list_logs:
      content:
        application/json:
          examples:
            logs:
              $ref: "#/components/examples/logs"
          schema:
            $ref: "#/components/schemas/apps_get_logs_response"
      description: A JSON object with urls that point to archived logs
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    list_logs_aggregate:
      content:
        application/json:
          examples:
            logs:
              $ref: "#/components/examples/logs"
          schema:
            $ref: "#/components/schemas/apps_get_logs_response"
      description: A JSON object with urls that point to archived logs
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    list_regions:
      content:
        application/json:
          examples:
            regions:
              $ref: "#/components/examples/regions"
          schema:
            $ref: "#/components/schemas/apps_list_regions_response"
      description: A JSON object with key `regions`
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    load_balancer_create:
      content:
        application/json:
          examples:
            Basic Create Response:
              $ref: "#/components/examples/load_balancer_basic_response"
            Create Response Using Droplet Tag:
              $ref: "#/components/examples/load_balancer_using_tag_response"
            SSL Termination Create Response:
              $ref: "#/components/examples/load_balancer_ssl_termination_response"
            Sticky Sessions and Custom Health Check:
              $ref: "#/components/examples/load_balancer_sticky_sessions_and_health_check_response"
          schema:
            properties:
              load_balancer:
                $ref: "#/components/schemas/load_balancer"
      description: Accepted
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    neighbor_droplets:
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  droplets:
                    items:
                      $ref: "#/components/schemas/droplet"
                    type: array
                type: object
      description: A JSON object with an `droplets` key.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    new_app:
      content:
        application/json:
          example:
            spec:
              name: sample-golang
              region: ams
              services:
                - environment_slug: go
                  github:
                    branch: branch
                    repo: digitalocean/sample-golang
                  instance_count: 2
                  instance_size_slug: basic-xxs
                  name: web
                  routes:
                    - path: /
                  run_command: bin/sample-golang
          schema:
            $ref: "#/components/schemas/app_response"
      description: A JSON of a `spec` object.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    new_app_deployment:
      content:
        application/json:
          examples:
            deployment:
              $ref: "#/components/examples/deployment"
          schema:
            $ref: "#/components/schemas/apps_deployment_response"
      description: A JSON object with a `deployment` key.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    new_certificate:
      content:
        application/json:
          examples:
            Custom Certificate:
              $ref: "#/components/examples/certificates_custom"
            Let's Encrypt Certificate:
              $ref: "#/components/examples/certificates_lets_encrypt_pending"
          schema:
            properties:
              certificate:
                $ref: "#/components/schemas/certificate"
            type: object
      description: >-
        The response will be a JSON object with a key called `certificate`. The value of this will be an object that contains the standard attributes associated with a certificate.

        When using Let's Encrypt, the initial value of the certificate's `state` attribute will be `pending`. When the certificate has been successfully issued by Let's Encrypt, this will transition to `verified` and be ready for use.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    new_custom_image:
      content:
        application/json:
          example:
            image:
              created_at: 2018-09-20T19:28:00Z
              description: Cloud-optimized image w/ small footprint
              distribution: Ubuntu
              error_message: ""
              id: 38413969
              name: ubuntu-18.04-minimal
              regions: []
              status: NEW
              tags:
                - base-image
                - prod
              type: custom
          schema:
            properties:
              image:
                $ref: "#/components/schemas/image"
      description: The response will be a JSON object with a key set to `image`.  The value of this will be an image object containing a subset of the standard  image attributes as listed below, including the image's `id` and `status`.  After initial creation, the `status` will be `NEW`. Using the image's id, you  may query the image's status by sending a `GET` request to the  `/v2/images/$IMAGE_ID` endpoint.  When the `status` changes to `available`, the image will be ready for use.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    new_tag:
      content:
        application/json:
          schema:
            example:
              tag:
                name: extra-awesome
                resources:
                  count: 0
                  databases:
                    count: 0
                  droplets:
                    count: 0
                  images:
                    count: 0
                  volume_snapshots:
                    count: 0
                  volumes:
                    count: 0
            properties:
              tag:
                $ref: "#/components/schemas/tag"
      description: The response will be a JSON object with a key called tag.  The value of this will be a tag object containing the standard tag attributes
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    no_content:
      description: The action was successful and the response body is empty.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    node_pool_create:
      content:
        application/json:
          schema:
            example:
              node_pool:
                auto_scale: true
                count: 3
                id: cdda885e-7663-40c8-bc74-3a036c66545d
                labels: null
                max_nodes: 6
                min_nodes: 3
                name: new-pool
                nodes:
                  - created_at: 2018-11-15T16:00:11Z
                    droplet_id: " "
                    id: 478247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
                    name: " "
                    status:
                      state: provisioning
                    updated_at: 2018-11-15T16:00:11Z
                  - created_at: 2018-11-15T16:00:11Z
                    droplet_id: " "
                    id: ad12e744-c2a9-473d-8aa9-be5680500eb1
                    name: " "
                    status:
                      state: provisioning
                    updated_at: 2018-11-15T16:00:11Z
                  - created_at: 2018-11-15T16:00:11Z
                    droplet_id: " "
                    id: e46e8d07-f58f-4ff1-9737-97246364400e
                    name: " "
                    status:
                      state: provisioning
                    updated_at: 2018-11-15T16:00:11Z
                size: s-1vcpu-2gb
                tags:
                  - production
                  - web-team
                  - front-end
                  - k8s
                  - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                  - k8s:worker
                taints: []
            properties:
              node_pool:
                $ref: "#/components/schemas/kubernetes_node_pool"
      description: >
        The response will be a JSON object with a key called `node_pool`. The value of

        this will be an object containing the standard attributes of a node pool.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    node_pool_update:
      content:
        application/json:
          schema:
            example:
              node_pool:
                auto_scale: true
                count: 3
                id: cdda885e-7663-40c8-bc74-3a036c66545d
                labels: null
                max_nodes: 6
                min_nodes: 3
                name: renamed-pool
                nodes:
                  - created_at: 2018-11-15T16:00:11Z
                    droplet_id: "205545370"
                    id: 478247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
                    name: adoring-newton-3niq
                    status:
                      state: running
                    updated_at: 2018-11-15T16:00:11Z
                  - created_at: 2018-11-15T16:00:11Z
                    droplet_id: "205545371"
                    id: ad12e744-c2a9-473d-8aa9-be5680500eb1
                    name: adoring-newton-3nim
                    status:
                      state: running
                    updated_at: 2018-11-15T16:00:11Z
                  - created_at: 2018-11-15T16:00:11Z
                    droplet_id: "205545372"
                    id: e46e8d07-f58f-4ff1-9737-97246364400e
                    name: adoring-newton-3ni7
                    status:
                      state: running
                    updated_at: 2018-11-15T16:00:11Z
                size: s-1vcpu-2gb
                tags:
                  - production
                  - web-team
                  - front-end
                  - new-tag
                  - k8s
                  - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                  - k8s:worker
                taints: []
            properties:
              node_pool:
                $ref: "#/components/schemas/kubernetes_node_pool"
      description: >
        The response will be a JSON object with a key called `node_pool`. The value of

        this will be an object containing the standard attributes of a node pool.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    not_found:
      content:
        application/json:
          example:
            id: not_found
            message: The resource you requested could not be found.
          schema:
            $ref: "#/components/schemas/error"
      description: The resource was not found.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    post_image_action_response:
      content:
        application/json:
          example:
            action:
              completed_at: null
              id: 36805527
              region:
                available: true
                features:
                  - private_networking
                  - backups
                  - ipv6
                  - metadata
                  - server_id
                  - install_agent
                  - storage
                  - image_transfer
                name: New York 3
                sizes:
                  - s-1vcpu-3gb
                  - m-1vcpu-8gb
                  - s-3vcpu-1gb
                  - s-1vcpu-2gb
                  - s-2vcpu-2gb
                  - s-2vcpu-4gb
                  - s-4vcpu-8gb
                  - s-6vcpu-16gb
                  - s-8vcpu-32gb
                  - s-12vcpu-48gb
                  - s-16vcpu-64gb
                  - s-20vcpu-96gb
                  - s-1vcpu-1gb
                  - c-1vcpu-2gb
                  - s-24vcpu-128gb
                slug: nyc3
              region_slug: nyc3
              resource_id: 7938269
              resource_type: image
              started_at: 2014-11-14T16:42:45Z
              status: in-progress
              type: transfer
          schema:
            $ref: "#/components/schemas/action"
      description: The response will be a JSON object with a key called `action`. The value of this will be an object containing the standard image action attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    precondition_failed:
      content:
        application/json:
          example:
            id: precondition_failed
            message: cannot delete a project with resources. move or remove the resources first
          schema:
            $ref: "#/components/schemas/error"
      description: Only an empty project can be deleted.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    projects_list:
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  projects:
                    items:
                      $ref: "#/components/schemas/project"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
            example:
              links:
                pages:
                  first: https://api.digitalocean.com/v2/projects?page=1
                  last: https://api.digitalocean.com/v2/projects?page=1
              meta:
                total: 2
              projects:
                - created_at: 2018-09-27T20:10:35Z
                  description: My website API
                  environment: Production
                  id: 4e1bfbc3-dc3e-41f2-a18f-1b4d7ba71679
                  is_default: false
                  name: my-web-api
                  owner_id: 258992
                  owner_uuid: 99525febec065ca37b2ffe4f852fd2b2581895e7
                  purpose: Service or API
                  updated_at: 2018-09-27T20:10:35Z
                - created_at: 2017-10-19T21:44:20Z
                  description: Default project
                  environment: Development
                  id: addb4547-6bab-419a-8542-76263a033cf6
                  is_default: true
                  name: Default
                  owner_id: 258992
                  owner_uuid: 99525febec065ca37b2ffe4f852fd2b2581895e7
                  purpose: Just trying out DigitalOcean
                  updated_at: 2019-11-05T18:50:03Z
      description: The response will be a JSON object with a key called `projects`. The value of this will be an object with the standard project attributes
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    put_firewall_response:
      content:
        application/json:
          example:
            firewall:
              created_at: 2020-05-23T21:24:00Z
              droplet_ids:
                - 8043964
              id: bb4b2611-3d72-467b-8602-280330ecd65c
              inbound_rules:
                - ports: "80"
                  protocol: tcp
                  sources:
                    load_balancer_uids:
                      - 4de7ac8b-495b-4884-9a69-1050c6793cd6
                - ports: "22"
                  protocol: tcp
                  sources:
                    addresses:
                      - 18.0.0.0/8
                    tags:
                      - gateway
              name: frontend-firewall
              outbound_rules:
                - destinations:
                    addresses:
                      - 0.0.0.0/0
                      - ::/0
                  ports: "80"
                  protocol: tcp
              pending_changes:
                - droplet_id: 8043964
                  removing: false
                  status: waiting
              status: waiting
              tags:
                - frontend
          schema:
            properties:
              firewall:
                $ref: "#/components/schemas/firewall"
      description: The response will be a JSON object with a `firewall` key. This will be set to an object containing the standard firewall attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    registry_info:
      content:
        application/json:
          schema:
            properties:
              registry:
                $ref: "#/components/schemas/registry"
      description: The response will be a JSON object with the key `registry` containing information about your registry.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    registry_options_response:
      content:
        application/json:
          example:
            options:
              subscription_tiers:
                - allow_storage_overage: false
                  eligibility_reasons:
                    - OverRepositoryLimit
                  eligible: false
                  included_bandwidth_bytes: 524288000
                  included_repositories: 1
                  included_storage_bytes: 524288000
                  monthly_price_in_cents: 0
                  name: Starter
                  slug: starter
                - allow_storage_overage: true
                  eligible: true
                  included_bandwidth_bytes: 5368709120
                  included_repositories: 5
                  included_storage_bytes: 5368709120
                  monthly_price_in_cents: 500
                  name: Basic
                  slug: basic
                - allow_storage_overage: true
                  eligible: true
                  included_bandwidth_bytes: 107374182400
                  included_repositories: 0
                  included_storage_bytes: 107374182400
                  monthly_price_in_cents: 2000
                  name: Professional
                  slug: professional
          schema:
            properties:
              options:
                properties:
                  subscription_tiers:
                    items:
                      allOf:
                        - $ref: "#/components/schemas/subscription_tier_base"
                        - $ref: "#/components/schemas/subscription_tier_extended"
                    type: array
                type: object
            type: object
      description: The response will be a JSON object with a key called `options` which contains a key called `subscription_tiers` listing the available tiers.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    repository_tags:
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  tags:
                    items:
                      $ref: "#/components/schemas/repository_tag"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
            example:
              meta:
                total: 1
              tags:
                - compressed_size_bytes: 2803255
                  manifest_digest: sha256:cb8a924afdf0229ef7515d9e5b3024e23b3eb03ddbba287f4a19c6ac90b8d221
                  registry_name: example
                  repository: repo-1
                  size_bytes: 5861888
                  tag: latest
                  updated_at: 2020-04-09T23:54:25Z
      description: The response body will be a JSON object with a key of `tags`. This will be set to an array containing objects each representing a tag.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    resources_list:
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  resources:
                    items:
                      $ref: "#/components/schemas/resource"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
            example:
              links:
                pages:
                  first: https://api.digitalocean.com/v2/projects/4e1bfbc3-dc3e-41f2-a18f-1b4d7ba71679/resources?page=1
                  last: https://api.digitalocean.com/v2/projects/4e1bfbc3-dc3e-41f2-a18f-1b4d7ba71679/resources?page=1
              meta:
                total: 2
              resources:
                - assigned_at: 2018-09-28T19:26:37Z
                  links:
                    self: https://api.digitalocean.com/v2/droplets/13457723
                  status: ok
                  urn: do:droplet:13457723
                - assigned_at: 2019-03-31T16:24:14Z
                  links:
                    self: https://api.digitalocean.com/v2/domains/example.com
                  status: ok
                  urn: do:domain:example.com
      description: The response will be a JSON object with a key called `resources`. The value of this will be an object with the standard resource attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    server_error:
      content:
        application/json:
          example:
            id: server_error
            message: Unexpected server-side error
          schema:
            $ref: "#/components/schemas/error"
      description: Server error.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    sql_mode:
      content:
        application/json:
          example:
            sql_mode: ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,STRICT_ALL_TABLES
          schema:
            $ref: "#/components/schemas/sql_mode"
      description: A JSON string with a key of `sql_mode`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    subscription_response:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/subscription"
      description: The response will be a JSON object with a key called `subscription` containing information about your subscription.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    tag_bad_request:
      content:
        application/json:
          examples:
            InvalidCharacters:
              value:
                error: 'Error validating resource tag: \"tag-name \\\"здорово\\\" contains invalid characters\"'
                messages: null
                root_causes:
                  - 'rpc error: code = InvalidArgument desc = Error validating resource tag: \"tag-name \\\"здорово\\\" contains invalid characters\"'
          schema:
            $ref: "#/components/schemas/error_with_root_causes"
      description: Bad Request
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
        x-request-id:
          $ref: "#/components/headers/x-request-id"
    unauthorized:
      content:
        application/json:
          example:
            id: unauthorized
            message: Unable to authenticate you.
          schema:
            $ref: "#/components/schemas/error"
      description: Unauthorized
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    unexpected_error:
      content:
        application/json:
          example:
            id: im_a_teapot
            message: how do you do?
          schema:
            $ref: "#/components/schemas/error"
      description: Unexpected error
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    update_app:
      content:
        application/json:
          examples:
            app:
              $ref: "#/components/examples/app"
          schema:
            $ref: "#/components/schemas/app_response"
      description: A JSON object of the updated `app`
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    updated_cluster:
      content:
        application/json:
          examples:
            Updated Kubernetes Cluster:
              $ref: "#/components/examples/kubernetes_updated"
          schema:
            properties:
              kubernetes_cluster:
                $ref: "#/components/schemas/cluster"
      description: >
        The response will be a JSON object with a key called `kubernetes_cluster`. The

        value of this will be an object containing the standard attributes of a

        Kubernetes cluster.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    updated_image:
      content:
        application/json:
          example:
            image:
              created_at: 2014-11-14T16:44:03Z
              description: ""
              distribution: Ubuntu
              error_message: ""
              id: 7938391
              min_disk_size: 20
              name: new-image-name
              public: false
              regions:
                - nyc3
                - nyc3
              size_gigabytes: 2.34
              slug: null
              status: available
              tags: []
          schema:
            properties:
              image:
                $ref: "#/components/schemas/image"
            required:
              - image
            type: object
      description: The response will be a JSON object with a key set to `image`.  The value of this will be an image object containing the standard image attributes.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    updated_load_balancer:
      content:
        application/json:
          examples:
            load_balancer_update_response:
              $ref: "#/components/examples/load_balancer_update_response"
          schema:
            properties:
              load_balancer:
                $ref: "#/components/schemas/load_balancer"
      description: >
        The response will be a JSON object with a key called `load_balancer`. The

        value of this will be an object containing the standard attributes of a

        load balancer.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    user:
      content:
        application/json:
          examples:
            New User:
              value:
                user:
                  name: app-01
                  password: jge5lfxtzhx42iff
                  role: normal
            New User with MySQL Auth Plugin:
              value:
                user:
                  mysql_settings:
                    auth_plugin: mysql_native_password
                  name: app-02
                  password: wv78n3zpz42xezdk
                  role: normal
          schema:
            properties:
              user:
                $ref: "#/components/schemas/database_user"
            required:
              - user
            type: object
      description: A JSON object with a key of `user`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    users:
      content:
        application/json:
          example:
            users:
              - name: app-01
                password: jge5lfxtzhx42iff
                role: normal
              - name: doadmin
                password: wv78n3zpz42xezd
                role: primary
          schema:
            properties:
              users:
                items:
                  $ref: "#/components/schemas/database_user"
                type: array
      description: A JSON object with a key of `users`.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    volume:
      content:
        application/json:
          schema:
            example:
              volume:
                created_at: 2020-03-02T17:00:49Z
                description: Block store for examples
                droplet_ids: []
                filesystem_label: example
                filesystem_type: ext4
                id: 506f78a4-e098-11e5-ad9f-000f53306ae1
                name: example
                region:
                  available: true
                  features:
                    - private_networking
                    - backups
                    - ipv6
                    - metadata
                  name: New York 1
                  sizes:
                    - s-1vcpu-1gb
                    - s-1vcpu-2gb
                    - s-1vcpu-3gb
                    - s-2vcpu-2gb
                    - s-3vcpu-1gb
                    - s-2vcpu-4gb
                    - s-4vcpu-8gb
                    - s-6vcpu-16gb
                    - s-8vcpu-32gb
                    - s-12vcpu-48gb
                    - s-16vcpu-64gb
                    - s-20vcpu-96gb
                    - s-24vcpu-128gb
                    - s-32vcpu-192gb
                  slug: nyc1
                size_gigabytes: 10
            properties:
              volume:
                $ref: "#/components/schemas/volume_full"
      description: The response will be a JSON object with a key called `volume`. The value will be an object containing the standard attributes associated with a volume.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    volume_action:
      content:
        application/json:
          examples:
            VolumeActionDetatchResponse:
              $ref: "#/components/examples/volume_action_detach_response"
            volume_action_attach_response:
              $ref: "#/components/examples/volume_action_attach_response"
          schema:
            properties:
              action:
                $ref: "#/components/schemas/volume_action"
      description: The response will be an object with a key called `action`. The value of this will be an object that contains the standard volume action attributes
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    volume_snapshot:
      content:
        application/json:
          schema:
            example:
              snapshot:
                created_at: 2020-09-30T18:56:14Z
                id: 8fa70202-873f-11e6-8b68-000f533176b1
                min_disk_size: 10
                name: big-data-snapshot1475261774
                regions:
                  - nyc1
                resource_id: 82a48a18-873f-11e6-96bf-000f53315a41
                resource_type: volume
                size_gigabytes: 10
                tags:
                  - aninterestingtag
            properties:
              snapshot:
                $ref: "#/components/schemas/snapshot"
      description: You will get back a JSON object that has a `snapshot` key. This will contain the standard snapshot attributes
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    volume_snapshots:
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  snapshots:
                    items:
                      $ref: "#/components/schemas/snapshot"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
            example:
              links: {}
              meta:
                total: 1
              snapshots:
                - created_at: 2020-09-30T18:56:12Z
                  id: 8eb4d51a-873f-11e6-96bf-000f53315a41
                  min_disk_size: 10
                  name: big-data-snapshot1475261752
                  regions:
                    - nyc1
                  resource_id: 82a48a18-873f-11e6-96bf-000f53315a41
                  resource_type: volume
                  size_gigabytes: 0
                  tags: null
      description: You will get back a JSON object that has a `snapshots` key. This will be set to an array of snapshot objects, each of which contain the standard snapshot attributes
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
    vpc_members:
      content:
        application/json:
          schema:
            allOf:
              - properties:
                  members:
                    items:
                      $ref: "#/components/schemas/vpc_member"
                    type: array
                type: object
              - $ref: "#/components/schemas/pagination"
              - $ref: "#/components/schemas/meta"
            example:
              links: {}
              members:
                - created_at: 2020-03-13T19:30:48Z
                  name: nyc1-load-balancer-01
                  urn: do:loadbalancer:fb294d78-d193-4cb2-8737-ea620993591b
                - created_at: 2020-03-13T19:30:18Z
                  name: db-postgresql-nyc1-55986
                  urn: do:dbaas:13f7a2f6-43df-4c4a-8129-8733267ddeea
                - created_at: 2020-03-13T19:30:16Z
                  name: k8s-nyc1-1584127772221
                  urn: do:kubernetes:da39d893-96e1-4e4d-971d-1fdda33a46b1
                - created_at: 2020-03-13T19:29:20Z
                  name: ubuntu-s-1vcpu-1gb-nyc1-01
                  urn: do:droplet:86e29982-03a7-4946-8a07-a0114dff8754
              meta:
                total: 4
      description: The response will be a JSON object with a key called members. This will be set to an array of objects, each of which will contain the standard attributes associated with a VPC member.
      headers:
        ratelimit-limit:
          $ref: "#/components/headers/ratelimit-limit"
        ratelimit-remaining:
          $ref: "#/components/headers/ratelimit-remaining"
        ratelimit-reset:
          $ref: "#/components/headers/ratelimit-reset"
  schemas:
    1_click:
      properties:
        slug:
          description: The slug identifier for the 1-Click application.
          example: monitoring
          title: slug
          type: string
        type:
          description: The type of the 1-Click application.
          example: kubernetes
          title: type
          type: string
      required:
        - slug
        - type
      type: object
    1_click_create:
      properties:
        addon_slugs:
          default: []
          description: An array of 1-Click Application slugs to be installed to the Kubernetes cluster.
          example:
            - kube-state-metrics
            - loki
          items:
            type: string
          title: addon_slugs
          type: array
        cluster_uuid:
          description: A unique ID for the Kubernetes cluster to which the 1-Click Applications will be installed.
          example: 50a994b6-c303-438f-9495-7e896cfe6b08
          title: cluster_uuid
          type: string
      required:
        - addon_slugs
        - cluster_uuid
      type: object
    account:
      properties:
        droplet_limit:
          description: The total number of Droplets current user or team may have active at one time.
          example: 25
          type: integer
        email:
          description: The email address used by the current user to register for DigitalOcean.
          example: sammy@digitalocean.com
          type: string
        email_verified:
          default: false
          description: If true, the user has verified their account via email. False otherwise.
          example: true
          type: boolean
        floating_ip_limit:
          description: The total number of Floating IPs the current user or team may have.
          example: 5
          type: integer
        status:
          default: active
          description: This value is one of "active", "warning" or "locked".
          enum:
            - active
            - warning
            - locked
          example: active
          type: string
        status_message:
          description: A human-readable message giving more details about the status of the account.
          example: " "
          type: string
        uuid:
          description: The unique universal identifier for the current user.
          example: b6fr89dbf6d9156cace5f3c78dc9851d957381ef
          type: string
      required:
        - droplet_limit
        - floating_ip_limit
        - email
        - uuid
        - email_verified
        - status
        - status_message
      type: object
    action:
      properties:
        completed_at:
          description: A time value given in ISO8601 combined date and time format that represents when the action was completed.
          example: 2020-11-14T16:30:06.000Z
          format: date-time
          nullable: true
          type: string
        id:
          description: A unique numeric ID that can be used to identify and reference an action.
          example: 36804636
          type: integer
        region:
          $ref: "#/components/schemas/region"
        region_slug:
          allOf:
            - $ref: "#/components/schemas/slug"
            - nullable: true
              type: string
        resource_id:
          description: A unique identifier for the resource that the action is associated with.
          example: 3164444
          nullable: true
          type: integer
        resource_type:
          description: The type of resource that the action is associated with.
          example: droplet
          type: string
        started_at:
          description: A time value given in ISO8601 combined date and time format that represents when the action was initiated.
          example: 2020-11-14T16:29:21.000Z
          format: date-time
          type: string
        status:
          default: in-progress
          description: The current status of the action. This can be "in-progress", "completed", or "errored".
          enum:
            - in-progress
            - completed
            - errored
          example: completed
          type: string
        type:
          description: This is the type of action that the object represents. For example, this could be "transfer" to represent the state of an image transfer action.
          example: create
          type: string
      type: object
    action_link:
      description: The linked actions can be used to check the status of a Droplet's create event.
      properties:
        href:
          description: A URL that can be used to access the action.
          example: https://api.digitalocean.com/v2/actions/7515
          format: uri
          type: string
        id:
          description: A unique numeric ID that can be used to identify and reference an action.
          example: 7515
          type: integer
        rel:
          description: A string specifying the type of the related action.
          example: create
          type: string
      type: object
    app:
      description: An application's configuration and status.
      properties:
        active_deployment:
          $ref: "#/components/schemas/apps_deployment"
        created_at:
          example: 2020-11-19T20:27:18.000Z
          format: date-time
          readOnly: true
          title: The creation time of the app
          type: string
        default_ingress:
          example: digitalocean.com
          readOnly: true
          title: The default hostname on which the app is accessible
          type: string
        domains:
          items:
            $ref: "#/components/schemas/apps_domain"
          readOnly: true
          title: Contains all domains for the app
          type: array
        id:
          example: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
          readOnly: true
          title: The ID of the application
          type: string
        in_progress_deployment:
          $ref: "#/components/schemas/apps_deployment"
        last_deployment_created_at:
          example: 2020-11-19T20:27:18.000Z
          format: date-time
          readOnly: true
          title: The creation time of the last deployment
          type: string
        live_domain:
          example: live_domain
          readOnly: true
          title: The live domain of the app
          type: string
        live_url:
          example: google.com
          readOnly: true
          title: The live URL of the app
          type: string
        live_url_base:
          example: digitalocean.com
          readOnly: true
          title: The live URL base of the app, the URL excluding the path
          type: string
        owner_uuid:
          example: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
          readOnly: true
          title: The ID of the account to which the application belongs
          type: string
        region:
          $ref: "#/components/schemas/apps_region"
        spec:
          $ref: "#/components/schemas/app_spec"
        tier_slug:
          example: basic
          readOnly: true
          title: The current pricing tier slug of the app
          type: string
        updated_at:
          example: 2020-12-01T00:42:16.000Z
          format: date-time
          readOnly: true
          title: Time of the app's last configuration update
          type: string
      required:
        - spec
      type: object
    app_component_base:
      properties:
        build_command:
          description: An optional build command to run while building this component from source.
          example: npm run build
          type: string
        dockerfile_path:
          description: The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks.
          example: path/to/Dockerfile
          type: string
        environment_slug:
          description: An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/).
          example: node-js
          type: string
        envs:
          description: A list of environment variables made available to the component.
          items:
            $ref: "#/components/schemas/app_variable_definition"
          type: array
        git:
          $ref: "#/components/schemas/apps_git_source_spec"
        github:
          $ref: "#/components/schemas/apps_github_source_spec"
        gitlab:
          $ref: "#/components/schemas/apps_gitlab_source_spec"
        image:
          $ref: "#/components/schemas/apps_image_source_spec"
        name:
          description: The name. Must be unique across all components within the same app.
          example: api
          maxLength: 32
          minLength: 2
          pattern: ^[a-z][a-z0-9-]{0,30}[a-z0-9]$
          type: string
        run_command:
          description: An optional run command to override the component's default.
          example: bin/api
          type: string
        source_dir:
          description: An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
          example: path/to/dir
          type: string
      type: object
    app_component_instance_base:
      properties:
        instance_count:
          default: 1
          description: "The amount of instances that this component should be scaled to. Default: 1"
          example: 2
          format: int64
          minimum: 1
          type: integer
        instance_size_slug:
          default: basic-xxs
          description: "The instance size to use for this component. Default: `basic-xxs`"
          enum:
            - basic-xxs
            - basic-xs
            - basic-s
            - basic-m
            - professional-xs
            - professional-s
            - professional-m
            - professional-1l
            - professional-l
            - professional-xl
          example: basic-xxs
          type: string
      type: object
    app_database_spec:
      properties:
        cluster_name:
          description: The name of the underlying DigitalOcean DBaaS cluster. This is required for production databases. For dev databases, if cluster_name is not set, a new cluster will be provisioned.
          example: cluster_name
          type: string
        db_name:
          description: The name of the MySQL or PostgreSQL database to configure.
          example: my_db
          type: string
        db_user:
          description: The name of the MySQL or PostgreSQL user to configure.
          example: superuser
          type: string
        engine:
          default: UNSET
          description: >-
            - MYSQL: MySQL

            - PG: PostgreSQL

            - REDIS: Redis
          enum:
            - UNSET
            - MYSQL
            - PG
            - REDIS
          example: PG
          type: string
        name:
          description: The name. Must be unique across all components within the same app.
          example: prod-db
          maxLength: 32
          minLength: 2
          pattern: ^[a-z][a-z0-9-]{0,30}[a-z0-9]$
          type: string
        production:
          description: Whether this is a production or dev database.
          example: true
          format: boolean
          type: boolean
        version:
          description: The version of the database engine
          example: "12"
          type: string
      required:
        - name
      type: object
    app_domain_spec:
      properties:
        domain:
          description: The hostname for the domain
          example: app.example.com
          format: hostname
          maxLength: 253
          minLength: 4
          pattern: ^((xn--)?[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}\.?$
          type: string
        type:
          default: UNSPECIFIED
          description: >-
            - DEFAULT: The default `.ondigitalocean.app` domain assigned to this app

            - PRIMARY: The primary domain for this app that is displayed as the default in the control panel, used in bindable environment variables, and any other places that reference an app's live URL. Only one domain may be set as primary.

            - ALIAS: A non-primary domain
          enum:
            - UNSPECIFIED
            - DEFAULT
            - PRIMARY
            - ALIAS
          example: DEFAULT
          type: string
        wildcard:
          description: Indicates whether the domain includes all sub-domains, in addition to the given domain
          example: true
          type: boolean
        zone:
          description: >-
            Optional. If the domain uses DigitalOcean DNS and you would like App

            Platform to automatically manage it for you, set this to the name of the

            domain on your account.


            For example, If the domain you are adding is `app.domain.com`, the zone

            could be `domain.com`.
          example: example.com
          format: hostname
          type: string
      required:
        - domain
      type: object
    app_job_spec:
      allOf:
        - $ref: "#/components/schemas/app_component_base"
        - $ref: "#/components/schemas/app_component_instance_base"
        - properties:
            kind:
              default: UNSPECIFIED
              description: >-
                - UNSPECIFIED: Default job type, will auto-complete to POST_DEPLOY kind.

                - PRE_DEPLOY: Indicates a job that runs before an app deployment.

                - POST_DEPLOY: Indicates a job that runs after an app deployment.

                - FAILED_DEPLOY: Indicates a job that runs after a component fails to deploy.
              enum:
                - UNSPECIFIED
                - PRE_DEPLOY
                - POST_DEPLOY
                - FAILED_DEPLOY
              example: PRE_DEPLOY
              type: string
          required:
            - name
          type: object
    app_response:
      properties:
        app:
          $ref: "#/components/schemas/app"
      type: object
    app_route_spec:
      properties:
        path:
          description: An HTTP path prefix. Paths must start with / and must be unique across all components within an app.
          example: /api
          type: string
      title: A criterion for routing HTTP traffic to a component.
      type: object
    app_service_spec:
      allOf:
        - $ref: "#/components/schemas/app_component_base"
        - $ref: "#/components/schemas/app_component_instance_base"
        - properties:
            cors:
              $ref: "#/components/schemas/apps_cors_policy"
            health_check:
              $ref: "#/components/schemas/app_service_spec_health_check"
            http_port:
              description: >-
                The internal port on which this service's run command will listen. Default: 8080

                If there is not an environment variable with the name `PORT`, one will be automatically added with its value set to the value of this field.
              example: 3000
              format: int64
              maximum: 65535
              minimum: 1
              type: integer
            internal_ports:
              description: The ports on which this service will listen for internal traffic.
              example:
                - 80
                - 443
              items:
                format: int64
                type: integer
              type: array
            routes:
              description: A list of HTTP routes that should be routed to this component.
              items:
                $ref: "#/components/schemas/app_route_spec"
              type: array
          required:
            - name
          type: object
    app_service_spec_health_check:
      properties:
        failure_threshold:
          description: The number of failed health checks before considered unhealthy.
          example: 2
          format: int32
          type: integer
        http_path:
          description: The route path used for the HTTP health check ping. If not set, the HTTP health check will be disabled and a TCP health check used instead.
          example: /health
          type: string
        initial_delay_seconds:
          description: The number of seconds to wait before beginning health checks.
          example: 30
          format: int32
          type: integer
        period_seconds:
          description: The number of seconds to wait between health checks.
          example: 60
          format: int32
          type: integer
        success_threshold:
          description: The number of successful health checks before considered healthy.
          example: 3
          format: int32
          type: integer
        timeout_seconds:
          description: The number of seconds after which the check times out.
          example: 45
          format: int32
          type: integer
      type: object
    app_spec:
      description: The desired configuration of an application.
      properties:
        databases:
          description: >-
            Database instances which can provide persistence to workloads within the

            application.
          items:
            $ref: "#/components/schemas/app_database_spec"
          type: array
        domains:
          description: A set of hostnames where the application will be available.
          items:
            $ref: "#/components/schemas/app_domain_spec"
          type: array
        jobs:
          description: Pre and post deployment workloads which do not expose publicly-accessible HTTP routes.
          items:
            $ref: "#/components/schemas/app_job_spec"
          type: array
        name:
          description: The name of the app. Must be unique across all apps in the same account.
          example: web-app-01
          maxLength: 32
          minLength: 2
          pattern: ^[a-z][a-z0-9-]{0,30}[a-z0-9]$
          type: string
        region:
          description: "The slug form of the geographical origin of the app. Default: `nearest available`"
          enum:
            - ams
            - nyc
            - fra
          example: nyc
          type: string
        services:
          description: Workloads which expose publicy-accessible HTTP services.
          items:
            $ref: "#/components/schemas/app_service_spec"
          type: array
        static_sites:
          description: Content which can be rendered to static web assets.
          items:
            $ref: "#/components/schemas/app_static_site_spec"
          type: array
        workers:
          description: Workloads which do not expose publicly-accessible HTTP services.
          items:
            $ref: "#/components/schemas/app_worker_spec"
          type: array
      required:
        - name
      title: AppSpec
      type: object
    app_static_site_spec:
      allOf:
        - $ref: "#/components/schemas/app_component_base"
        - properties:
            catchall_document:
              description: The name of the document to use as the fallback for any requests to documents that are not found when serving this static site. Only 1 of `catchall_document` or `error_document` can be set.
              example: index.html
              type: string
            cors:
              $ref: "#/components/schemas/apps_cors_policy"
            error_document:
              default: 404.html
              description: "The name of the error document to use when serving this static site. Default: 404.html. If no such file exists within the built assets, App Platform will supply one."
              example: error.html
              type: string
            index_document:
              default: index.html
              description: "The name of the index document to use when serving this static site. Default: index.html"
              example: main.html
              type: string
            output_dir:
              description: "An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: `_static`, `dist`, `public`, `build`."
              example: dist/
              type: string
            routes:
              description: A list of HTTP routes that should be routed to this component.
              items:
                $ref: "#/components/schemas/app_route_spec"
              type: array
          type: object
      required:
        - name
    app_variable_definition:
      properties:
        key:
          description: The variable name
          example: BASE_URL
          pattern: ^[_A-Za-z][_A-Za-z0-9]*$
          type: string
        scope:
          default: RUN_AND_BUILD_TIME
          description: >-
            - RUN_TIME: Made available only at run-time

            - BUILD_TIME: Made available only at build-time

            - RUN_AND_BUILD_TIME: Made available at both build and run-time
          enum:
            - UNSET
            - RUN_TIME
            - BUILD_TIME
            - RUN_AND_BUILD_TIME
          example: BUILD_TIME
          type: string
        type:
          default: GENERAL
          description: >-
            - GENERAL: A plain-text environment variable

            - SECRET: A secret encrypted environment variable
          enum:
            - GENERAL
            - SECRET
          example: GENERAL
          type: string
        value:
          description: The value. If the type is `SECRET`, the value will be encrypted on first submission. On following submissions, the encrypted value should be used.
          example: http://example.com
          type: string
      required:
        - key
      type: object
    app_worker_spec:
      allOf:
        - $ref: "#/components/schemas/app_component_base"
        - $ref: "#/components/schemas/app_component_instance_base"
      required:
        - name
    apps_cors_policy:
      properties:
        allow_origins:
          description: The set of allowed CORS origins.
          example:
            - exact: https://www.example.com
            - regex: ^.*example.com
          items:
            $ref: "#/components/schemas/apps_string_match"
          type: array
      type: object
    apps_create_app_request:
      properties:
        spec:
          $ref: "#/components/schemas/app_spec"
      required:
        - spec
      type: object
    apps_create_deployment_request:
      properties:
        app_id:
          example: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
          title: The app ID
          type: string
        force_build:
          example: true
          format: boolean
          title: Indicates whether to force a build of app from source even if an existing cached build is suitable for re-use
          type: boolean
      required:
        - app_id
      type: object
    apps_delete_app_response:
      properties:
        id:
          example: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
          title: The ID of the app that was deleted
          type: string
      type: object
    apps_deploy_template:
      properties:
        spec:
          $ref: "#/components/schemas/app_spec"
      type: object
    apps_deployment:
      properties:
        cause:
          example: commit 9a4df0b pushed to github/digitalocean/sample-golang
          title: What caused this deployment to be created
          type: string
        cloned_from:
          example: 3aa4d20e-5527-4c00-b496-601fbd22520a
          title: The ID of a previous deployment that this deployment was cloned from
          type: string
        created_at:
          example: 2020-07-28T18:00:00.000Z
          format: date-time
          title: The creation time of the deployment
          type: string
        id:
          example: b6bdf840-2854-4f87-a36c-5f231c617c84
          title: The ID of the deployment
          type: string
        jobs:
          items:
            $ref: "#/components/schemas/apps_deployment_job"
          title: Job components that are part of this deployment
          type: array
        phase:
          $ref: "#/components/schemas/apps_deployment_phase"
        phase_last_updated_at:
          example: 1901-01-01T00:00:00.000Z
          format: date-time
          title: When the deployment phase was last updated
          type: string
        progress:
          $ref: "#/components/schemas/apps_deployment_progress"
        services:
          items:
            $ref: "#/components/schemas/apps_deployment_service"
          title: Service components that are part of this deployment
          type: array
        spec:
          $ref: "#/components/schemas/app_spec"
        static_sites:
          items:
            $ref: "#/components/schemas/apps_deployment_static_site"
          title: Static Site components that are part of this deployment
          type: array
        tier_slug:
          example: basic
          readOnly: true
          title: The current pricing tier slug of the deployment
          type: string
        updated_at:
          example: 2020-07-28T18:00:00.000Z
          format: date-time
          title: When the deployment was last updated
          type: string
        workers:
          items:
            $ref: "#/components/schemas/apps_deployment_worker"
          title: Worker components that are part of this deployment
          type: array
      title: An app deployment
      type: object
    apps_deployment_job:
      properties:
        image:
          example: Ubuntu
          title: The image that this job uses
          type: string
        name:
          example: Clean Old Droplets
          title: The name of this job
          type: string
        source_commit_hash:
          example: 54d4a727f457231062439895000d45437c7bb405
          title: The commit hash of the repository that was used to build this job
          type: string
      type: object
    apps_deployment_phase:
      default: UNKNOWN
      enum:
        - UNKNOWN
        - PENDING_BUILD
        - BUILDING
        - PENDING_DEPLOY
        - DEPLOYING
        - ACTIVE
        - SUPERSEDED
        - ERROR
        - CANCELED
      example: ACTIVE
      type: string
    apps_deployment_progress:
      properties:
        error_steps:
          example: 3
          format: int32
          title: Number of unsuccessful steps
          type: integer
        pending_steps:
          example: 2
          format: int32
          title: Number of pending steps
          type: integer
        running_steps:
          example: 2
          format: int32
          title: Number of currently running steps
          type: integer
        steps:
          items:
            $ref: "#/components/schemas/apps_deployment_progress_step"
          title: The deployment's steps
          type: array
        success_steps:
          example: 4
          format: int32
          title: Number of successful steps
          type: integer
        summary_steps:
          items:
            $ref: "#/components/schemas/apps_deployment_progress_step"
          title: A flattened summary of the steps
          type: array
        total_steps:
          example: 5
          format: int32
          title: Total number of steps
          type: integer
      type: object
    apps_deployment_progress_step:
      properties:
        component_name:
          example: component
          title: The component name that this step is associated with
          type: string
        ended_at:
          example: 2020-11-19T20:27:18.000Z
          format: date-time
          title: The end time of this step
          type: string
        message_base:
          description: >-
            The base of a human-readable description of the step intended to be combined with the component name for presentation. For example:


            `message_base` = "Building service"

            `component_name` = "api"
          example: Building service
          type: string
        name:
          example: example_step
          title: The name of this step
          type: string
        reason:
          $ref: "#/components/schemas/apps_deployment_progress_step_reason"
        started_at:
          example: 2020-11-19T20:27:18.000Z
          format: date-time
          title: The start time of this step
          type: string
        status:
          $ref: "#/components/schemas/apps_deployment_progress_step_status"
        steps:
          items:
            type: object
          title: Child steps of this step
          type: array
      title: A step that is run as part of the deployment's lifecycle
      type: object
    apps_deployment_progress_step_reason:
      properties:
        code:
          example: Title of Error
          title: The error code
          type: string
        message:
          example: This is an error
          title: The error message
          type: string
      type: object
    apps_deployment_progress_step_status:
      default: UNKNOWN
      enum:
        - UNKNOWN
        - PENDING
        - RUNNING
        - ERROR
        - SUCCESS
      example: SUCCESS
      type: string
    apps_deployment_response:
      properties:
        deployment:
          $ref: "#/components/schemas/apps_deployment"
      type: object
    apps_deployment_service:
      properties:
        image:
          example: Ubuntu
          title: The image that this service uses
          type: string
        name:
          example: Service Name
          title: The name of this service
          type: string
        source_commit_hash:
          example: 54d4a727f457231062439895000d45437c7bb405
          title: The commit hash of the repository that was used to build this service
          type: string
      type: object
    apps_deployment_static_site:
      properties:
        name:
          example: static site
          title: The name of this static site
          type: string
        source_commit_hash:
          example: 54d4a727f457231062439895000d45437c7bb405
          title: The commit hash of the repository that was used to build this static site
          type: string
      type: object
    apps_deployment_worker:
      properties:
        image:
          example: Ubuntu
          title: The image that this worker uses
          type: string
        name:
          example: worker
          title: The name of this worker
          type: string
        source_commit_hash:
          example: 54d4a727f457231062439895000d45437c7bb405
          title: The commit hash of the repository that was used to build this worker
          type: string
      type: object
    apps_deployments_response:
      properties:
        deployments:
          items:
            $ref: "#/components/schemas/apps_deployment"
          title: A list of deployments
          type: array
        links:
          $ref: "#/components/schemas/page_links"
        meta:
          $ref: "#/components/schemas/meta_meta"
      type: object
    apps_detect_request:
      properties:
        commit_sha:
          example: 54d4a727f457231062439895000d45437c7bb405
          title: An optional commit hash to use instead of the branch specified in the source spec
          type: string
        component_type:
          description: "An optional component type to target while running detection. Can be one of: `service`, `static_site`, `worker`, `job`."
          example: service
          type: string
        git:
          $ref: "#/components/schemas/apps_git_source_spec"
        github:
          $ref: "#/components/schemas/apps_github_source_spec"
        gitlab:
          $ref: "#/components/schemas/apps_gitlab_source_spec"
        source_url:
          description: Deprecated. Use either `git` or `github`.
          example: git
          type: string
      type: object
    apps_detect_response:
      properties:
        components:
          items:
            $ref: "#/components/schemas/detect_response_component"
          title: A list of detected app components
          type: array
        template:
          $ref: "#/components/schemas/apps_deploy_template"
        template_error:
          example: Error
          title: The error that is causing the template to be invalid
          type: string
        template_found:
          example: true
          format: boolean
          title: Whether or not a deploy template was found
          type: boolean
        template_valid:
          example: true
          format: boolean
          title: Whether or not the deploy template is valid
          type: boolean
      type: object
    apps_detect_response_type:
      default: UNSPECIFIED
      enum:
        - UNSPECIFIED
        - DOCKERFILE
        - BUILDPACK
        - HTML
      example: BUILDPACK
      type: string
    apps_domain:
      properties:
        id:
          example: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
          title: The ID of the domain
          type: string
        phase:
          $ref: "#/components/schemas/apps_domain_phase"
        progress:
          $ref: "#/components/schemas/apps_domain_progress"
        spec:
          $ref: "#/components/schemas/app_domain_spec"
      type: object
    apps_domain_phase:
      default: UNKNOWN
      enum:
        - UNKNOWN
        - PENDING
        - CONFIGURING
        - ACTIVE
        - ERROR
      example: ACTIVE
      type: string
    apps_domain_progress:
      properties:
        steps:
          items:
            type: object
          title: The steps of the domain's progress
          type: array
      type: object
    apps_get_instance_size_response:
      properties:
        instance_size:
          $ref: "#/components/schemas/apps_instance_size"
      type: object
    apps_get_logs_response:
      properties:
        historic_urls:
          items:
            example: digitalocean.com
            type: string
          title: A list of URLs to archived log files
          type: array
        live_url:
          description: A URL of the real-time live logs. This URL may use either the `https://` or `wss://` protocols and will keep pushing live logs as they become available.
          example: hello.com
          type: string
        url:
          example: digitalocean.com
          type: string
      type: object
    apps_get_tier_response:
      properties:
        tier:
          $ref: "#/components/schemas/apps_tier"
      type: object
    apps_git_source_spec:
      properties:
        branch:
          description: The name of the branch to use
          example: main
          type: string
        repo_clone_url:
          description: "The clone URL of the repo. Example: `https://github.com/digitalocean/sample-golang.git`"
          example: https://github.com/digitalocean/sample-golang.git
          type: string
      type: object
    apps_github_source_spec:
      properties:
        branch:
          description: The name of the branch to use
          example: main
          type: string
        deploy_on_push:
          description: Whether to automatically deploy new commits made to the repo
          example: true
          type: boolean
        repo:
          description: "The name of the repo in the format owner/repo. Example: `digitalocean/sample-golang`"
          example: digitalocean/sample-golang
          type: string
      type: object
    apps_gitlab_source_spec:
      properties:
        branch:
          description: The name of the branch to use
          example: main
          type: string
        deploy_on_push:
          description: Whether to automatically deploy new commits made to the repo
          example: true
          type: boolean
        repo:
          description: "The name of the repo in the format owner/repo. Example: `digitalocean/sample-golang`"
          example: digitalocean/sample-golang
          type: string
      type: object
    apps_image_source_spec:
      properties:
        registry:
          description: The registry name. Must be left empty for the `DOCR` registry type.
          example: registry.hub.docker.com
          type: string
        registry_type:
          description: >-
            - DOCKER_HUB: The DockerHub container registry type.

            - DOCR: The DigitalOcean container registry type.
          enum:
            - DOCKER_HUB
            - DOCR
          example: DOCR
          type: string
        repository:
          description: The repository name.
          example: origin/master
          type: string
        tag:
          default: latest
          description: The repository tag. Defaults to `latest` if not provided.
          example: latest
          type: string
      type: object
    apps_instance_size:
      properties:
        cpu_type:
          $ref: "#/components/schemas/instance_size_cpu_type"
        cpus:
          example: "3"
          format: int64
          title: The number of allotted vCPU cores
          type: string
        memory_bytes:
          example: "1048"
          format: int64
          title: The allotted memory in bytes
          type: string
        name:
          example: name
          title: A human-readable name of the instance size
          type: string
        slug:
          example: basic
          title: The slug of the instance size
          type: string
        tier_downgrade_to:
          example: basic
          title: The slug of the corresponding downgradable instance size on the lower tier
          type: string
        tier_slug:
          example: basic
          title: The slug of the tier to which this instance size belongs
          type: string
        tier_upgrade_to:
          example: basic
          title: The slug of the corresponding upgradable instance size on the higher tier
          type: string
        usd_per_month:
          example: "23"
          title: The cost of this instance size in USD per month
          type: string
        usd_per_second:
          example: "0.00000001232"
          title: The cost of this instance size in USD per second
          type: string
      type: object
    apps_list_instance_sizes_response:
      properties:
        discount_percent:
          example: 2.32
          format: float
          type: number
        instance_sizes:
          items:
            $ref: "#/components/schemas/apps_instance_size"
          type: array
      type: object
    apps_list_regions_response:
      properties:
        regions:
          items:
            $ref: "#/components/schemas/apps_region"
          type: array
      type: object
    apps_list_tiers_response:
      properties:
        tiers:
          items:
            $ref: "#/components/schemas/apps_tier"
          type: array
      type: object
    apps_region:
      properties:
        continent:
          example: europe
          readOnly: true
          title: The continent that this region is in
          type: string
        data_centers:
          example:
            - ams
          items:
            example: ams
            type: string
          readOnly: true
          title: Data centers that are in this region
          type: array
        default:
          description: Whether or not the region is presented as the default.
          example: true
          format: boolean
          readOnly: true
          type: boolean
        disabled:
          example: true
          format: boolean
          readOnly: true
          title: Whether or not the region is open for new apps
          type: boolean
        flag:
          example: ams
          readOnly: true
          title: The flag of this region
          type: string
        label:
          example: ams
          readOnly: true
          title: A human-readable name of the region
          type: string
        reason:
          example: to crowded
          readOnly: true
          title: Reason that this region is not available
          type: string
        slug:
          example: basic
          readOnly: true
          title: The slug form of the region name
          type: string
      title: Geographical information about an app origin
      type: object
    apps_response:
      properties:
        apps:
          items:
            $ref: "#/components/schemas/app"
          title: A list of apps
          type: array
        links:
          $ref: "#/components/schemas/page_links"
        meta:
          $ref: "#/components/schemas/meta_meta"
      type: object
    apps_string_match:
      properties:
        exact:
          description: Exact string match. Only 1 of `exact`, `prefix`, or `regex` must be set.
          example: https://www.example.com
          maxLength: 256
          minLength: 1
          type: string
        prefix:
          description: Prefix-based match. Only 1 of `exact`, `prefix`, or `regex` must be set.
          example: https://www.example.com
          maxLength: 256
          minLength: 1
          type: string
        regex:
          description: "RE2 style regex-based match. Only 1 of `exact`, `prefix`, or `regex` must be set. For more information about RE2 syntax, see: https://github.com/google/re2/wiki/Syntax"
          example: ^.*example.com
          maxLength: 256
          minLength: 1
          type: string
      type: object
    apps_tier:
      properties:
        build_seconds:
          example: "233"
          format: int64
          title: The amount of included build time in seconds
          type: string
        egress_bandwidth_bytes:
          example: "123"
          format: int64
          title: The amount of included outbound bandwidth in bytes
          type: string
        name:
          example: test
          title: A human-readable name of the tier
          type: string
        slug:
          example: test
          title: The slug of the tier
          type: string
        storage_bytes:
          example: "10000000"
          format: int64
          title: The allotted disk space in bytes
          type: string
      type: object
    apps_update_app_request:
      properties:
        id:
          example: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
          title: The ID of the app
          type: string
        spec:
          $ref: "#/components/schemas/app_spec"
      required:
        - id
        - spec
      type: object
    associated_resource:
      description: An objects containing information about a resource associated with a Droplet.
      properties:
        cost:
          description: The cost of the resource in USD per month if the resource is retained after the Droplet is destroyed.
          example: "0.05"
          type: string
        id:
          description: The unique identifier for the resource associated with the Droplet.
          example: "61486916"
          type: string
        name:
          description: The name of the resource associated with the Droplet.
          example: ubuntu-s-1vcpu-1gb-nyc1-01-1585758823330
          type: string
      type: object
    associated_resource_status:
      description: An objects containing information about a resources scheduled for deletion.
      properties:
        completed_at:
          description: A time value given in ISO8601 combined date and time format indicating when the requested action was completed.
          example: 2020-04-01T18:11:49.000Z
          format: date-time
          type: string
        droplet:
          $ref: "#/components/schemas/destroyed_associated_resource"
        failures:
          description: A count of the associated resources that failed to be destroyed, if any.
          example: 0
          type: integer
        resources:
          description: An object containing additional information about resource related to a Droplet requested to be destroyed.
          properties:
            snapshots:
              items:
                $ref: "#/components/schemas/destroyed_associated_resource"
              type: array
            volume_snapshots:
              items:
                $ref: "#/components/schemas/destroyed_associated_resource"
              type: array
            volumes:
              items:
                $ref: "#/components/schemas/destroyed_associated_resource"
              type: array
          type: object
      type: object
    backup:
      properties:
        created_at:
          description: A time value given in ISO8601 combined date and time format at which the backup was created.
          example: 2019-01-31T19:25:22.000Z
          format: date-time
          type: string
        size_gigabytes:
          description: The size of the database backup in GBs.
          example: 0.03364864
          type: number
      required:
        - created_at
        - size_gigabytes
      type: object
    backward_links:
      allOf:
        - $ref: "#/components/schemas/link_to_first_page"
        - $ref: "#/components/schemas/link_to_prev_page"
    balance:
      properties:
        account_balance:
          description: Current balance of the customer's most recent billing activity.  Does not reflect `month_to_date_usage`.
          example: "12.23"
          type: string
        generated_at:
          description: The time at which balances were most recently generated.
          example: 2019-07-09T15:01:12.000Z
          format: date-time
          type: string
        month_to_date_balance:
          description: Balance as of the `generated_at` time.  This value includes the `account_balance` and `month_to_date_usage`.
          example: "23.44"
          type: string
        month_to_date_usage:
          description: Amount used in the current billing period as of the `generated_at` time.
          example: "11.21"
          type: string
      type: object
    billing_address:
      properties:
        address_line1:
          description: Street address line 1
          example: 101 Shark Row
          type: string
        address_line2:
          description: Street address line 2
          example: " "
          type: string
        city:
          description: City
          example: Atlantis
          type: string
        country_iso2_code:
          description: Country (ISO2) code
          example: US
          type: string
        created_at:
          description: Timestamp billing address was created
          example: 2019-09-03T16:34:46.000Z
          type: string
        postal_code:
          description: Postal code
          example: "12345"
          type: string
        region:
          description: Region
          example: OC
          type: string
        updated_at:
          description: Timestamp billing address was updated
          example: 2019-09-03T16:34:46.000Z
          type: string
      type: object
    billing_history:
      properties:
        amount:
          description: Amount of the billing history entry.
          example: "12.34"
          type: string
        date:
          description: Time the billing history entry occured.
          example: 2018-06-01T08:44:38.000Z
          format: date-time
          type: string
        description:
          description: Description of the billing history entry.
          example: Invoice for May 2018
          type: string
        invoice_id:
          description: ID of the invoice associated with the billing history entry, if  applicable.
          example: "123"
          type: string
        invoice_uuid:
          description: UUID of the invoice associated with the billing history entry, if  applicable.
          example: example-uuid
          type: string
        type:
          description: Type of billing history entry.
          enum:
            - ACHFailure
            - Adjustment
            - AttemptFailed
            - Chargeback
            - Credit
            - CreditExpiration
            - Invoice
            - Payment
            - Refund
            - Reversal
          example: Invoice
          type: string
      type: object
    cdn_endpoint:
      properties:
        certificate_id:
          description: The ID of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided.
          example: 892071a0-bb95-49bc-8021-3afd67a210bf
          format: uuid
          type: string
        created_at:
          description: A time value given in ISO8601 combined date and time format that represents when the CDN endpoint was created.
          example: 2018-03-21T16:02:37Z
          format: date-time
          readOnly: true
          type: string
        custom_domain:
          description: The fully qualified domain name (FQDN) of the custom subdomain used with the CDN endpoint.
          example: static.example.com
          format: hostname
          type: string
        endpoint:
          description: The fully qualified domain name (FQDN) from which the CDN-backed content is served.
          example: static-images.nyc3.cdn.digitaloceanspaces.com
          format: hostname
          readOnly: true
          type: string
        id:
          description: A unique ID that can be used to identify and reference a CDN endpoint.
          example: 892071a0-bb95-49bc-8021-3afd67a210bf
          format: uuid
          readOnly: true
          type: string
        origin:
          description: The fully qualified domain name (FQDN) for the origin server which provides the content for the CDN. This is currently restricted to a Space.
          example: static-images.nyc3.digitaloceanspaces.com
          format: hostname
          type: string
        ttl:
          description: The amount of time the content is cached by the CDN's edge servers in seconds.
          example: 3600
          type: integer
      required:
        - origin
      type: object
    certificate:
      properties:
        created_at:
          description: A time value given in ISO8601 combined date and time format that represents when the certificate was created.
          example: 2017-02-08T16:02:37.000Z
          format: date-time
          readOnly: true
          type: string
        dns_names:
          description: An array of fully qualified domain names (FQDNs) for which the certificate was issued.
          example:
            - www.example.com
            - example.com
          items:
            type: string
          type: array
        id:
          description: A unique ID that can be used to identify and reference a certificate.
          example: 892071a0-bb95-49bc-8021-3afd67a210bf
          format: uuid
          readOnly: true
          type: string
        name:
          description: A unique human-readable name referring to a certificate.
          example: web-cert-01
          type: string
        not_after:
          description: A time value given in ISO8601 combined date and time format that represents the certificate's expiration date.
          example: 2017-02-22T00:23:00.000Z
          format: date-time
          readOnly: true
          type: string
        sha1_fingerprint:
          description: A unique identifier generated from the SHA-1 fingerprint of the certificate.
          example: dfcc9f57d86bf58e321c2c6c31c7a971be244ac7
          readOnly: true
          type: string
        state:
          description: A string representing the current state of the certificate. It may be `pending`, `verified`, or `error`.
          enum:
            - pending
            - verified
            - error
          example: verified
          readOnly: true
          type: string
        type:
          description: A string representing the type of the certificate. The value will be `custom` for a user-uploaded certificate or `lets_encrypt` for one automatically generated with Let's Encrypt.
          enum:
            - custom
            - lets_encrypt
          example: lets_encrypt
          type: string
      type: object
    certificate_create_base:
      properties:
        name:
          description: A unique human-readable name referring to a certificate.
          example: web-cert-01
          type: string
        type:
          description: A string representing the type of the certificate. The value will be `custom` for a user-uploaded certificate or `lets_encrypt` for one automatically generated with Let's Encrypt.
          enum:
            - custom
            - lets_encrypt
          example: lets_encrypt
          type: string
      required:
        - name
      type: object
    certificate_request_custom:
      allOf:
        - $ref: "#/components/schemas/certificate_create_base"
        - properties:
            certificate_chain:
              description: The full PEM-formatted trust chain between the certificate authority's certificate and your domain's SSL certificate.
              example: >-
                -----BEGIN CERTIFICATE-----

                MIIFFjCCA/6gAwIBAgISA0AznUJmXhu08/89ZuSPC/kRMA0GCSqGSIb3DQEBCwUA

                MEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD

                ExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xNjExMjQwMDIzMDBaFw0x

                NzAyMjIwMDIzMDBaMCQxIjAgBgNVBAMTGWNsb3VkLmFuZHJld3NvbWV0aGluZy5j

                b20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDBIZMz7tnK6V52SVf+

                CYssOfCQHAx5f0Ou5rYbq3xNh8VHAIYJCQ1QxQIxKSP6+uODSYrb2KWyurP1DwGb

                8OYm0J3syEDtCUQik1cpCzpeNlAZ2f8FzXyYQAqPopxdRpsFz8DtZnVvu86XwrE4

                oFPl9MReICmZfBNWylpV5qgFPoXyJ70ZAsTm3cEe3n+LBXEnY4YrVDRWxA3wZ2mz

                Z03HZ1hHrxK9CMnS829U+8sK+UneZpCO7yLRPuxwhmps0wpK/YuZZfRAKF1FZRna

                k/SIQ28rnWufmdg16YqqHgl5JOgnb3aslKRvL4dI2Gwnkd2IHtpZnTR0gxFXfqqb

                QwuRAgMBAAGjggIaMIICFjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYB

                BQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYEFLsAFcxAhFX1

                MbCnzr9hEO5rL4jqMB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZFZe/zqOyhMHAG

                CCsGAQUFBwEBBGQwYjAvBggrBgEFBQcwAYYjaHR0cDovL29jc3AuaW50LXgzLmxl

                dHNlbmNyeXB0Lm9yZy8wLwYIKwYBBQUHMAKGI2h0dHA6Ly9jZXJ0LmludC14My5s

                ZXRzZW5jcnlwdC5vcmcvMCQGA1UdEQQdMBuCGWNsb3VkLmFuZHJld3NvbWV0aGlu

                Zy5jb20wgf4GA1UdIASB9jCB8zAIBgZngQwBAgEwgeWECysGAQQBgt8TAQEBMIHW

                MCYGCCsGAQUFBwIBFhpodHRwOi8vY3BzLmxldHNlbmNyeXB0Lm9yZzCBqwYIKwYB

                BQUHAgIwgZ4MgZtUaGlzIENlcnRpZmljYXRlIG1heSBvbmx5IGJlIHJlbGllZCB1

                cG9uIGJ5IFJlbHlpbmcgUGFydGllcyBhbmQgb25seSQ2ziBhY2NvcmRhbmNlIHdp

                dGggdGhlIENlcnRpZmljYXRlIFBvbGljeSBmb3VuZCBhdCBsdHRwczovL2xldHNl

                bmNyeXB0Lm9yZy9yZXBvc2l0b3J5LzANBgkqhkiG9w0BAQsFAAOCAQEAOZVQvrjM

                PKXLARTjB5XsgfyDN3/qwLl7SmwGkPe+B+9FJpfScYG1JzVuCj/SoaPaK34G4x/e

                iXwlwOXtMOtqjQYzNu2Pr2C+I+rVmaxIrCUXFmC205IMuUBEeWXG9Y/HvXQLPabD

                D3Gdl5+Feink9SDRP7G0HaAwq13hI7ARxkL3o+UIY39X0dV3WOboW2Re8nrkFXJ7

                q9Z6shK5QgpBfsLjtjNsQzaGV3ve1gOg25aTJGearBWOvEjJNA1wGMoKVXOtYwm/

                WyWoVdCQ8HmconcbJB6xc0UZ1EjvzRr5ZIvSa5uHZD0L3m7/kpPWlAlFJ7hHASPu

                UlF1zblDmg2Iaw==

                -----END CERTIFICATE-----

                -----BEGIN CERTIFICATE-----

                MIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA/

                MSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT

                DkRTVCBSb290IENBIFgzMB4XDTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0Nlow

                SjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxIzAhBgNVBAMT

                GkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkqhkiG9w0BAQEFAAOC

                AQ8AMIIBCgKCAQEAnNMM8FrlLsd3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4S0EF

                q6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan/PQeGdxyGkOlZHP/uaZ6WA8

                SMx+yk13EiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0

                Z8h/pZq4UmEUEz9l6YKHy9v6Dlb2honzhT+Xhq+w3Brvaw2VFn3EK6BlspkENnWA

                a6xK8xuQSXgvopZPKiAlKQTGdMDQMc2PMTiVFrqoM7hD8bEfwzB/onkxEz0tNvjj

                /PIzark5McWvxI0NHWQWM6r6hCm21AvA2H3DkwIPOIUo4IBfTCCAXkwEgYDVR0T

                AQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG

                CCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNv

                bTA7BggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9k

                c3Ryb290Y2F4My5wN2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf/EFWCFiRAw

                VAYDVR0gBE0wSzAIBgZngQwBAgEwPwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcC

                ARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNyeXB0Lm9yZzA8BgNVHR8ENTAz

                MDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9PVENBWDNDUkwu

                Y3JsMB0GA1UdDgQWBBSoSmpjBH3duubRObemRWXv86jsoTANBgkqhkiG9w0BAQsF

                AAOCAQEA3TPXEfNjWDjdGBX7CVW+dla5cEilaUcne8IkCJLxWh9KEik3JHRRHGJo

                uM2VcGfl96S8TihRzZvoroed6ti6WqEBmtzw3Wodatg+VyOeph4EYpr/1wXKtx8/

                wApIvJSwtmVi4MFU5aMqrSDE6ea73Mj2tcMyo5jMd6jmeWUHK8so/joWUoHOUgwu

                X4Po1QYz+3dszkDqMp4fklxBwXRsW10KXzPMTZ+sOPAveyxindmjkW8lGy+QsRlG

                PfZ+G6Z6h7mjem0Y+iWlkYcV4PIWL1iwBi8saCbGS5jN2p8M+X+Q7UNKEkROb3N6

                KOqkqm57TH2H3eDJAkSnh6/DNFu0Qg==

                -----END CERTIFICATE-----
              type: string
            leaf_certificate:
              description: The contents of a PEM-formatted public SSL certificate.
              example: >-
                -----BEGIN CERTIFICATE-----

                MIIFFjCCA/6gAwIBAgISA0AznUJmXhu08/89ZuSPC/kRMA0GCSqGSIb3DQEBCwUA

                MEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD

                ExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xNjExMjQwMDIzMDBaFw0x

                NzAyMjIwMDIzMDBaMCQxIjAgBgNVBAMTGWNsb3VkLmFuZHJld3NvbWV0aGluZy5j

                b20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDBIZMz8pnK6V52SVf+

                CYssOfCQHAx5f0Ou5rYbq3xNh8VWHIYJCQ1QxQIxKSP6+uODSYrb2KWyurP1DwGb

                8OYm0J3syEDtCUQik1cpCzpeNlAZ2f8FzXyYQAqPopxdRpsFz8DtZnVvu86XwrE4

                oFPl9MReICmZfBNWylpV5qgFPoXyJ70ZAsTm3cEe3n+LBXEnY4YrVDRWxA3wZ2mz

                Z03HZ1hHrxK9CMnS829U+8sK+UneZpCO7yLRPuxwhmps0wpK/YuZZfRAKF1FZRna

                k/SIQ28rnWufmdg16YqqHgl5JOgnb3aslKRvL4dI2Gwnkd2IHtpZnTR0gxFXfqqb

                QwuRAgMBAAGjggIaMIICFjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYB

                BQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYEFLsAFcxAhFX1

                MbCnzr9hEO5rL4jqMB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZFZe/zqOyhMHAG

                CCsGAQUFBwEBBGQwYjAvBggrBgEFBQcwAYYjaHR0cDovL29jc3AuaW50LXgzLmxl

                dHNlbmNyeXB0Lm9yZy8wLwYIKwYBBQUHMAKGI2h0dHA6Ly9jZXJ0LmludC14My5s

                ZXRzZW5jcnlwdC5vcmcvMCQGA1UdEQQdMBuCGWNsb3VkLmFuZHJld3NvbWV0aGlu

                Zy5jb20wgf4GA1UdIASB9jCB8zAIBgZngQwBAgWrgeYGCysGAQQBgt8TAQEBMIHW

                MCYGCCsGAQUFBwIBFhpodHRwOi8vY3BzLmxldHNlbmNyeXB0Lm9yZzCBqwYIKwYB

                BQUHAgIwgZ4MgZtUaGlzIENlcnRpZmljYXRlIG1heSBvbmx5IGJlIHJlbGllZCB1

                cG9uIGJ5IFJlbHlpbmcgUGFydGllcyBhbmQgb25seSQ2ziBhY2NvcmRhbmNlIHdp

                dGggdGhlIENlcnRpZmljYXRlIFBvbGljeSBmb3VuZCBhdCBodHRwczovL2xldHNl

                bmNyeXB0Lm9yZy9yZXBvc2l0b3J5LzANBgkqhkiG9w0BAQsFAAOCAQEAOZVQvrjM

                PKXLARTjB5XsgfyDN3/qwLl7SmwGkPe+B+9FJpfScYG1JzVuCj/SoaPaK34G4x/e

                iXwlwOXtMOtqjQYzNu2Pr2C+I+rVmaxIrCUXFmC205IMuUBEeWXG9Y/HvXQLPabD

                D3Gdl5+Feink9SDRP7G0HaAwq13hI7ARxkL9p+UIY39X0dV3WOboW2Re8nrkFXJ7

                q9Z6shK5QgpBfsLjtjNsQzaGV3ve1gOg25aTJGearBWOvEjJNA1wGMoKVXOtYwm/

                WyWoVdCQ8HmconcbJB6xc0UZ1EjvzRr5ZIvSa5uHZD0L3m7/kpPWlAlFJ7hHASPu

                UlF1zblDmg2Iaw==

                -----END CERTIFICATE-----
              type: string
            private_key:
              description: The contents of a PEM-formatted private-key corresponding to the SSL certificate.
              example: >-
                -----BEGIN PRIVATE KEY-----

                MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDBIZMz8pnK6V52

                SVf+CYssOfCQHAx5f0Ou5rYbq3xNh8VHAIYJCQ1QxQIxKSP6+uODSYrb2KWyurP1

                DwGb8OYm0J3syEDtCUQik1cpCzpeNlAZ2f8FzXyYQAqPopxdRpsFz8DtZnVvu86X

                wrE4oFPl9MReICmZfBNWylpV5qgFPoXyJ70ZAsTm3cEe3n+LBXEnY4YrVDRWxA3w

                Z2mzZ03HZ1hHrxK9CMnS829U+8sK+UneZpCO7yLRPuxwhmps0wpK/YuZZfRAKF1F

                ZRnak/SIQ28rnWufmdg16YqqHgl5JOgnb3aslKRvL4dI2Gwnkd2IHtpZnTR0gxFX

                fqqbQwuRAgMBAAECggEBAILLmkW0JzOkmLTDNzR0giyRkLoIROqDpfLtjKdwm95l

                9NUBJcU4vCvXQITKt/NhtnNTexcowg8pInb0ksJpg3UGE+4oMNBXVi2UW5MQZ5cm

                cVkQqgXkBF2YAY8FMaB6EML+0En2+dGR/3gIAr221xsFiXe1kHbB8Nb2c/d5HpFt

                eRpLVJnK+TxSr78PcZA8DDGlSgwvgimdAaFUNO2OqB9/0E9UPyKk2ycdff/Z6ldF

                0hkCLtdYTTl8Kf/OwjcuTgmA2O3Y8/CoQX/L+oP9Rvt9pWCEfuebiOmHJVPO6Y6x

                gtQVEXwmF1pDHH4Qtz/e6UZTdYeMl9G4aNO2CawwcaYECgYEA57imgSOG4XsJLRh

                GGncV9R/xhy4AbDWLtAMzQRX4ktvKCaHWyQV2XK2we/cu29NLv2Y89WmerTNPOU+

                P8+pB31uty2ELySVn15QhKpQClVEAlxCnnNjXYrii5LOM80+lVmxvQwxVd8Yz8nj

                IntyioXNBEnYS7V2RxxFGgFun1cCgYEA1V3W+Uyamhq8JS5EY0FhyGcXdHd70K49

                W1ou7McIpncf9tM9acLS1hkI98rd2T69Zo8mKoV1V2hjFaKUYfNys6tTkYWeZCcJ

                3rW44j9DTD+FmmjcX6b8DzfybGLehfNbCw6n67/r45DXIV/fk6XZfkx6IEGO4ODt

                Nfnvx4TuI1cCgYBACDiKqwSUvmkUuweOo4IuCxyb5Ee8v98P5JIE/VRDxlCbKbpx

                pxEam6aBBQVcDi+n8o0H3WjjlKc6UqbW/01YMoMrvzotxNBLz8Y0QtQHZvR6KoCG

                RKCKstxTcWflzKuknbqN4RapAhNbKBDJ8PMSWfyDWNyaXzSmBdvaidbF1QKBgDI0

                o4oD0Xkjg1QIYAUu9FBQmb9JAjRnW36saNBEQS/SZg4RRKknM683MtoDvVIKJk0E

                sAlfX+4SXQZRPDMUMtA+Jyrd0xhj6zmhbwClvDMr20crF3fWdgcqtft1BEFmsuyW

                JUMe5OWmRkjPI2+9ncDPRAllA7a8lnSV/Crph5N/AoGBAIK249temKrGe9pmsmAo

                QbNuYSmwpnMoAqdHTrl70HEmK7ob6SIVmsR8QFAkH7xkYZc4Bxbx4h1bdpozGB+/

                AangbiaYJcAOD1QyfiFbflvI1RFeHgrk7VIafeSeQv6qu0LLMi2zUbpgVzxt78Wg

                eTuK2xNR0PIM8OI7pRpgyj1I

                -----END PRIVATE KEY-----
              type: string
          required:
            - private_key
            - leaf_certificate
          type: object
      title: Custom Certificate Request
    certificate_request_lets_encrypt:
      allOf:
        - $ref: "#/components/schemas/certificate_create_base"
        - properties:
            dns_names:
              description: An array of fully qualified domain names (FQDNs) for which the certificate was issued.
              example:
                - www.example.com
                - example.com
              items:
                type: string
              type: array
          required:
            - dns_names
          type: object
      title: Let's Encrypt Certificate Request
    cluster:
      properties:
        auto_upgrade:
          default: false
          description: A boolean value indicating whether the cluster will be automatically upgraded to new patch releases during its maintenance window.
          example: true
          type: boolean
        cluster_subnet:
          description: The range of IP addresses in the overlay network of the Kubernetes cluster in CIDR notation.
          example: 10.244.0.0/16
          format: cidr
          readOnly: true
          type: string
        created_at:
          description: A time value given in ISO8601 combined date and time format that represents when the Kubernetes cluster was created.
          example: 2018-11-15T16:00:11Z
          format: date-time
          readOnly: true
          type: string
        endpoint:
          description: The base URL of the API server on the Kubernetes master node.
          example: https://bd5f5959-5e1e-4205-a714-a914373942af.k8s.ondigitalocean.com
          readOnly: true
          type: string
        id:
          description: A unique ID that can be used to identify and reference a Kubernetes cluster.
          example: bd5f5959-5e1e-4205-a714-a914373942af
          format: uuid
          readOnly: true
          type: string
        ipv4:
          description: The public IPv4 address of the Kubernetes master node.
          example: 68.183.121.157
          readOnly: true
          type: string
        maintenance_policy:
          $ref: "#/components/schemas/maintenance_policy"
        name:
          description: A human-readable name for a Kubernetes cluster.
          example: prod-cluster-01
          type: string
        node_pools:
          description: An object specifying the details of the worker nodes available to the Kubernetes cluster.
          items:
            $ref: "#/components/schemas/kubernetes_node_pool"
          type: array
        region:
          description: The slug identifier for the region where the Kubernetes cluster is located.
          example: nyc1
          type: string
        registry_enabled:
          description: A read-only boolean value indicating if a container registry is integrated with the cluster.
          example: true
          readOnly: true
          type: boolean
        service_subnet:
          description: The range of assignable IP addresses for services running in the Kubernetes cluster in CIDR notation.
          example: 10.245.0.0/16
          readOnly: true
          type: string
        status:
          description: An object containing a `state` attribute whose value is set to a string indicating the current status of the cluster.
          properties:
            message:
              description: An optional message providing additional information about the current cluster state.
              example: provisioning
              type: string
            state:
              description: A string indicating the current status of the cluster.
              enum:
                - running
                - provisioning
                - degraded
                - error
                - deleted
                - upgrading
                - deleting
              example: provisioning
              type: string
          readOnly: true
          type: object
        surge_upgrade:
          default: false
          description: A boolean value indicating whether surge upgrade is enabled/disabled for the cluster. Surge upgrade makes cluster upgrades fast and reliable by bringing up new nodes before destroying the outdated nodes.
          example: true
          type: boolean
        tags:
          description: An array of tags applied to the Kubernetes cluster. All clusters are automatically tagged `k8s` and `k8s:$K8S_CLUSTER_ID`.
          example:
            - k8s
            - k8s:bd5f5959-5e1e-4205-a714-a914373942af
            - production
            - web-team
          items:
            type: string
          type: array
        updated_at:
          description: A time value given in ISO8601 combined date and time format that represents when the Kubernetes cluster was last updated.
          example: 2018-11-15T16:00:11Z
          format: date-time
          readOnly: true
          type: string
        version:
          description: The slug identifier for the version of Kubernetes used for the cluster. If set to a minor version (e.g. "1.14"), the latest version within it will be used (e.g. "1.14.6-do.1"); if set to "latest", the latest published version will be used. See the `/v2/kubernetes/options` endpoint to find all currently available versions.
          example: 1.18.6-do.0
          type: string
        vpc_uuid:
          description: A string specifying the UUID of the VPC to which the Kubernetes cluster is assigned.
          example: c33931f2-a26a-4e61-b85c-4e95a2ec431b
          format: uuid
          type: string
      required:
        - name
        - region
        - version
        - node_pools
      type: object
    cluster_registries:
      properties:
        cluster_uuids:
          description: An array containing the UUIDs of Kubernetes clusters.
          example:
            - bd5f5959-5e1e-4205-a714-a914373942af
            - 50c2f44c-011d-493e-aee5-361a4a0d1844
          items:
            type: string
          type: array
      type: object
    cluster_update:
      properties:
        auto_upgrade:
          default: false
          description: A boolean value indicating whether the cluster will be automatically upgraded to new patch releases during its maintenance window.
          example: true
          type: boolean
        maintenance_policy:
          $ref: "#/components/schemas/maintenance_policy"
        name:
          description: A human-readable name for a Kubernetes cluster.
          example: prod-cluster-01
          type: string
        surge_upgrade:
          default: false
          description: A boolean value indicating whether surge upgrade is enabled/disabled for the cluster. Surge upgrade makes cluster upgrades fast and reliable by bringing up new nodes before destroying the outdated nodes.
          example: true
          type: boolean
        tags:
          description: An array of tags applied to the Kubernetes cluster. All clusters are automatically tagged `k8s` and `k8s:$K8S_CLUSTER_ID`.
          example:
            - k8s
            - k8s:bd5f5959-5e1e-4205-a714-a914373942af
            - production
            - web-team
          items:
            type: string
          type: array
      required:
        - name
      type: object
    clusterlint_request:
      properties:
        exclude_checks:
          description: An array of checks that will be run when clusterlint executes checks.
          example:
            - default-namespace
          items:
            type: string
          type: array
        exclude_groups:
          description: An array of check groups that will be omitted when clusterlint executes checks.
          example:
            - workload-health
          items:
            type: string
          type: array
        include_checks:
          description: An array of checks that will be run when clusterlint executes checks.
          example:
            - bare-pods
            - resource-requirements
          items:
            type: string
          type: array
        include_groups:
          description: An array of check groups that will be run when clusterlint executes checks.
          example:
            - basic
            - doks
            - security
          items:
            type: string
          type: array
      type: object
    clusterlint_results:
      properties:
        completed_at:
          description: A time value given in ISO8601 combined date and time format that represents when the schedule clusterlint run request was completed.
          example: 2019-10-30T05:34:11Z
          format: date-time
          type: string
        diagnostics:
          description: An array of diagnostics reporting potential problems for the given cluster.
          items:
            properties:
              check_name:
                description: The clusterlint check that resulted in the diagnostic.
                example: unused-config-map
                type: string
              message:
                description: Feedback about the object for users to fix.
                example: Unused config map
                type: string
              object:
                description: Metadata about the Kubernetes API object the diagnostic is reported on.
                properties:
                  kind:
                    description: The kind of Kubernetes API object
                    example: config map
                    type: string
                  name:
                    description: Name of the object
                    example: foo
                    type: string
                  namespace:
                    description: The namespace the object resides in the cluster.
                    example: kube-system
                    type: string
                type: object
              severity:
                description: Can be one of error, warning or suggestion.
                example: warning
                type: string
            type: object
          type: array
        requested_at:
          description: A time value given in ISO8601 combined date and time format that represents when the schedule clusterlint run request was made.
          example: 2019-10-30T05:34:07Z
          format: date-time
          type: string
        run_id:
          description: Id of the clusterlint run that can be used later to fetch the diagnostics.
          example: 50c2f44c-011d-493e-aee5-361a4a0d1844
          type: string
      type: object
    credentials:
      properties:
        certificate_authority_data:
          description: A base64 encoding of bytes representing the certificate authority data for accessing the cluster.
          example: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lDQm5Vd0RRWUpLb1pJaHZjTkFRRUxCUUF3TXpFVk1CTUdBMVVFQ2hNTVJHbG4KYVhSaGJFOWpaV0Z1TVJvd0dBWURWUVFERXhGck9ITmhZWE1nUTJ4MWMzUmxjaUJEUVRBZUZ3MHlNREE0TURNeApOVEkxTWpoYUZ3MDBNREE0TURNeE5USTFNamhhTURNeEZUQVRCZ05WQkFvVERFUnBaMmwwWVd4UFkyVmhiakVhCk1CZ0dBMVVFQXhNUmF6aHpZV0Z6SUVOc2RYTjBaWElnUTBFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFDc21oa2JrSEpUcGhZQlN0R05VVE1ORVZTd2N3bmRtajArelQvcUZaNGsrOVNxUnYrSgpBd0lCaGpBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1CMEdBMVVkRGdRV0JCUlRzazhhZ1hCUnFyZXdlTXJxClhwa3E1NXg5dVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXB6V2F6bXNqYWxXTEx3ZjVpbWdDblNINDlKcGkKYWkvbzFMdEJvVEpleGdqZzE1ZVppaG5BMUJMc0lWNE9BZGM3UEFsL040L0hlbENrTDVxandjamRnNVdaYnMzYwozcFVUQ0g5bVVwMFg1SVdhT1VKV292Q1hGUlM1R2VKYXlkSDVPUXhqTURzR2N2UlNvZGQrVnQ2MXE3aWdFZ2I1CjBOZ1l5RnRnc2p0MHpJN3hURzZFNnlsOVYvUmFoS3lIQks2eExlM1RnUGU4SXhWa2RwT3QzR0FhSDRaK0pLR3gKYisyMVZia1NnRE1QQTlyR0VKNVZwVXlBV0FEVXZDRVFHV0hmNGpQN2ZGZlc3T050S0JWY3h3YWFjcVBVdUhzWApwRG5DZVR3V1NuUVp6L05xNmQxWUtsMFdtbkwzTEowemJzRVFGbEQ4MkkwL09MY2dZSDVxMklOZHhBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          format: byte
          type: string
        client_certificate_data:
          deprecated: true
          description: >
            A base64 encoding of bytes representing the x509 client

            certificate data for access the cluster. This is only returned for clusters

            without support for token-based authentication.


            Newly created Kubernetes clusters do not return credentials using

            certificate-based authentication. For additional information,

            [see here](https://www.digitalocean.com/docs/kubernetes/how-to/connect-to-cluster/#authenticate).
          example: null
          format: byte
          nullable: true
          type: string
        client_key_data:
          deprecated: true
          description: >
            A base64 encoding of bytes representing the x509 client key

            data for access the cluster. This is only returned for clusters without

            support for token-based authentication.


            Newly created Kubernetes clusters do not return credentials using

            certificate-based authentication. For additional information,

            [see here](https://www.digitalocean.com/docs/kubernetes/how-to/connect-to-cluster/#authenticate).
          example: null
          format: byte
          nullable: true
          type: string
        expires_at:
          description: A time value given in ISO8601 combined date and time format that represents when the access token expires.
          example: 2019-11-09T11:50:28.889Z
          format: date-time
          type: string
        server:
          description: The URL used to access the cluster API server.
          example: https://bd5f5959-5e1e-4205-a714-a914373942af.k8s.ondigitalocean.com
          format: uri
          type: string
        token:
          description: An access token used to authenticate with the cluster. This is only returned for clusters with support for token-based authentication.
          example: b7d03a6947b217efb6f3ec3bd3504582
          type: string
      type: object
    database:
      properties:
        name:
          description: The name of the database.
          example: alpha
          type: string
      required:
        - name
      type: object
    database_backup:
      properties:
        backup_created_at:
          description: The timestamp of an existing database cluster backup in ISO8601 combined date and time format. The most recent backup will be used if excluded.
          example: 2019-01-31T19:25:22.000Z
          format: date-time
          type: string
        database_name:
          description: The name of an existing database cluster from which the backup will be restored.
          example: backend
          type: string
      required:
        - database_name
      type: object
    database_cluster:
      properties:
        connection:
          allOf:
            - $ref: "#/components/schemas/database_connection"
            - readOnly: true
        created_at:
          description: A time value given in ISO8601 combined date and time format that represents when the database cluster was created.
          example: 2019-01-11T18:37:36.000Z
          format: date-time
          readOnly: true
          type: string
        db_names:
          description: An array of strings containing the names of databases created in the database cluster.
          example:
            - doadmin
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        engine:
          description: 'A slug representing the database engine used for the cluster. The possible values are: "pg" for PostgreSQL, "mysql" for MySQL, and "redis" for Redis.'
          enum:
            - pg
            - mysql
            - redis
          example: pg
          type: string
        id:
          description: A unique ID that can be used to identify and reference a database cluster.
          example: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
          format: uuid
          readOnly: true
          type: string
        maintenance_window:
          allOf:
            - $ref: "#/components/schemas/database_maintenance_window"
            - readOnly: true
        name:
          description: A unique, human-readable name referring to a database cluster.
          example: backend
          type: string
        num_nodes:
          description: The number of nodes in the database cluster.
          example: 2
          type: integer
        private_connection:
          allOf:
            - $ref: "#/components/schemas/database_connection"
            - readOnly: true
        private_network_uuid:
          description: A string specifying the UUID of the VPC to which the database cluster will be assigned. If excluded, the cluster when creating a new database cluster, it will be assigned to your account's default VPC for the region.
          example: d455e75d-4858-4eec-8c95-da2f0a5f93a7
          format: uuid
          type: string
        region:
          description: The slug identifier for the region where the database cluster is located.
          example: nyc3
          type: string
        size:
          description: The slug identifier representing the size of the nodes in the database cluster.
          example: db-s-2vcpu-4gb
          type: string
        status:
          description: A string representing the current status of the database cluster.
          enum:
            - creating
            - online
            - resizing
            - migrating
          example: creating
          readOnly: true
          type: string
        tags:
          description: An array of tags that have been applied to the database cluster.
          example:
            - production
          items:
            type: string
          nullable: true
          type: array
        users:
          items:
            $ref: "#/components/schemas/database_user"
          nullable: true
          readOnly: true
          type: array
        version:
          description: A string representing the version of the database engine in use for the cluster.
          example: "10"
          type: string
      required:
        - name
        - engine
        - num_nodes
        - size
        - region
      type: object
    database_connection:
      properties:
        database:
          description: The name of the default database.
          example: defaultdb
          readOnly: true
          type: string
        host:
          description: The FQDN pointing to the database cluster's current primary node.
          example: backend-do-user-19081923-0.db.ondigitalocean.com
          readOnly: true
          type: string
        password:
          description: The randomly generated password for the default user.
          example: wv78n3zpz42xezdk
          readOnly: true
          type: string
        port:
          description: The port on which the database cluster is listening.
          example: 25060
          readOnly: true
          type: integer
        ssl:
          description: A boolean value indicating if the connection should be made over SSL.
          example: true
          readOnly: true
          type: boolean
        uri:
          description: A connection string in the format accepted by the `psql` command. This is provided as a convenience and should be able to be constructed by the other attributes.
          example: postgres://doadmin:wv78n3zpz42xezdk@backend-do-user-19081923-0.db.ondigitalocean.com:25060/defaultdb?sslmode=require
          readOnly: true
          type: string
        user:
          description: The default user for the database.
          example: doadmin
          readOnly: true
          type: string
      type: object
    database_maintenance_window:
      nullable: true
      properties:
        day:
          description: The day of the week on which to apply maintenance updates.
          example: tuesday
          type: string
        description:
          description: A list of strings, each containing information about a pending maintenance update.
          example:
            - Update TimescaleDB to version 1.2.1
            - Upgrade to PostgreSQL 11.2 and 10.7 bugfix releases
          items:
            type: string
          readOnly: true
          type: array
        hour:
          description: The hour in UTC at which maintenance updates will be applied in 24 hour format.
          example: 14:00
          type: string
        pending:
          description: A boolean value indicating whether any maintenance is scheduled to be performed in the next window.
          example: true
          readOnly: true
          type: boolean
      required:
        - day
        - hour
      type: object
    database_replica:
      properties:
        connection:
          allOf:
            - readOnly: true
            - $ref: "#/components/schemas/database_connection"
        created_at:
          description: A time value given in ISO8601 combined date and time format that represents when the database cluster was created.
          example: 2019-01-11T18:37:36.000Z
          format: date-time
          readOnly: true
          type: string
        name:
          description: The name to give the read-only replicating
          example: read-nyc3-01
          type: string
        private_connection:
          allOf:
            - readOnly: true
            - $ref: "#/components/schemas/database_connection"
        private_network_uuid:
          description: A string specifying the UUID of the VPC to which the read-only replica will be assigned. If excluded, the replica will be assigned to your account's default VPC for the region.
          example: 9423cbad-9211-442f-820b-ef6915e99b5f
          type: string
        region:
          description: A slug identifier for the region where the read-only replica will be located. If excluded, the replica will be placed in the same region as the cluster.
          example: nyc3
          type: string
        size:
          description: A slug identifier representing the size of the node for the read-only replica. The size of the replica must be at least as large as the node size for the database cluster from which it is replicating.
          example: db-s-2vcpu-4gb
          type: string
          writeOnly: true
        status:
          description: A string representing the current status of the database cluster.
          enum:
            - creating
            - online
            - resizing
            - migrating
          example: creating
          readOnly: true
          type: string
        tags:
          description: A flat array of tag names as strings to apply to the read-only replica after it is created. Tag names can either be existing or new tags.
          example:
            - production
          items:
            type: string
          type: array
      required:
        - name
      type: object
    database_user:
      properties:
        mysql_settings:
          $ref: "#/components/schemas/mysql_settings"
        name:
          description: The name of a database user.
          example: app-01
          type: string
        password:
          description: A randomly generated password for the database user.
          example: jge5lfxtzhx42iff
          readOnly: true
          type: string
        role:
          description: >
            A string representing the database user's role. The value will be either

            "primary" or "normal".
          enum:
            - primary
            - normal
          example: normal
          readOnly: true
          type: string
      required:
        - name
      type: object
    destroyed_associated_resource:
      description: An object containing information about a resource scheduled for deletion.
      properties:
        destroyed_at:
          description: A time value given in ISO8601 combined date and time format indicating when the resource was destroyed if the request was successful.
          example: 2020-04-01T18:11:49.000Z
          format: date-time
          type: string
        error_message:
          description: A string indicating that the resource was not successfully destroyed and providing additional information.
          example: " "
          type: string
        id:
          description: The unique identifier for the resource scheduled for deletion.
          example: "61486916"
          type: string
        name:
          description: The name of the resource scheduled for deletion.
          example: ubuntu-s-1vcpu-1gb-nyc1-01-1585758823330
          type: string
      type: object
    detect_response_component:
      properties:
        build_command:
          example: cat hello.txt
          title: The detected build command
          type: string
        dockerfiles:
          description: A list of Dockerfiles that were found for this component. The recommendation is to use the first Dockerfile.
          example:
            - path/to/docker
          items:
            example: path/to/docker
            type: string
          type: array
        env_vars:
          items:
            $ref: "#/components/schemas/app_variable_definition"
          title: A list of suggested environment variables
          type: array
        environment_slug:
          example: basic
          title: The detected environment
          type: string
        http_ports:
          description: A list of HTTP ports that this component may listen on. The recommendation is to use the last port in the list.
          items:
            example: 929
            format: int64
            type: integer
          type: array
        run_command:
          example: cat hello.txt
          title: The detected run command
          type: string
        strategy:
          $ref: "#/components/schemas/apps_detect_response_type"
        types:
          example:
            - types
          items:
            example: type
            type: string
          title: A list of supported App Platform component types
          type: array
      title: Component
      type: object
    distribution:
      description: The name of a custom image's distribution. Currently, the valid values are  "Arch Linux", "CentOS", "CoreOS", "Debian", "Fedora", "Fedora Atomic",  "FreeBSD", "Gentoo", "openSUSE", "RancherOS", "Ubuntu", and "Unknown".  Any other value will be accepted but ignored, and "Unknown" will be used in its place.
      enum:
        - Arch Linux
        - CentOS
        - CoreOS
        - Debian
        - Fedora
        - Fedora Atomic
        - FreeBSD
        - Gentoo
        - openSUSE
        - RancherOS
        - Ubuntu
        - Unknown
      example: Ubuntu
      type: string
    docker_credentials:
      properties:
        auths:
          properties:
            registry.digitalocean.com:
              properties:
                auth:
                  description: A base64 encoded string containing credentials for the container registry.
                  example: YjdkMDNhNjk0N2IyMTdlZmI2ZjNlYzNiZDM1MDQ1ODI6YjdkMDNhNjk0N2IyMTdlZmI2ZjNlYzNiZDM1MDQ1ODIK
                  type: string
              type: object
          type: object
      type: object
    domain:
      properties:
        name:
          description: The name of the domain itself. This should follow the standard domain format of domain.TLD. For instance, `example.com` is a valid domain name.
          example: example.com
          type: string
        ttl:
          description: This value is the time to live for the records on this domain, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested.
          example: 1800
          type: integer
        zone_file:
          description: This attribute contains the complete contents of the zone file for the selected domain. Individual domain record resources should be used to get more granular control over records. However, this attribute can also be used to get information about the SOA record, which is created automatically and is not accessible as an individual record resource.
          example: >
            $ORIGIN example.com.

            $TTL 1800

            example.com. IN SOA ns1.digitalocean.com. hostmaster.example.com. 1415982609 10800 3600 604800 1800

            example.com. 1800 IN NS ns1.digitalocean.com.

            example.com. 1800 IN NS ns2.digitalocean.com.

            example.com. 1800 IN NS ns3.digitalocean.com.

            example.com. 1800 IN A 1.2.3.4
          nullable: true
          readOnly: true
          type: string
      type: object
    domain_record:
      properties:
        data:
          description: Variable data depending on record type. For example, the "data" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates.
          example: ns1.digitalocean.com
          type: string
        flags:
          description: An unsigned integer between 0-255 used for CAA records.
          example: null
          nullable: true
          type: integer
        id:
          description: A unique identifier for each domain record.
          example: 28448429
          readOnly: true
          type: integer
        name:
          description: The host name, alias, or service being defined by the record.
          example: "@"
          type: string
        port:
          description: The port for SRV records.
          example: null
          nullable: true
          type: integer
        priority:
          description: The priority for SRV and MX records.
          example: null
          nullable: true
          type: integer
        tag:
          description: The parameter tag for CAA records. Valid values are "issue", "issuewild", or "iodef"
          example: null
          nullable: true
          type: string
        ttl:
          description: This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested.
          example: 1800
          type: integer
        type:
          description: "The type of the DNS record. For example: A, CNAME, TXT, ..."
          example: NS
          type: string
        weight:
          description: The weight for SRV records.
          example: null
          nullable: true
          type: integer
      type: object
    domain_record_a:
      allOf:
        - $ref: "#/components/schemas/domain_record"
        - required:
            - type
            - name
            - data
    domain_record_aaaa:
      allOf:
        - $ref: "#/components/schemas/domain_record"
        - required:
            - type
            - name
            - data
    domain_record_caa:
      allOf:
        - $ref: "#/components/schemas/domain_record"
        - required:
            - type
            - name
            - data
            - flags
            - tag
    domain_record_cname:
      allOf:
        - $ref: "#/components/schemas/domain_record"
        - required:
            - type
            - name
            - data
    domain_record_mx:
      allOf:
        - $ref: "#/components/schemas/domain_record"
        - required:
            - type
            - data
            - priority
    domain_record_ns:
      allOf:
        - $ref: "#/components/schemas/domain_record"
        - required:
            - type
            - name
            - data
            - flags
            - tag
    domain_record_soa:
      allOf:
        - $ref: "#/components/schemas/domain_record"
        - required:
            - type
            - ttl
    domain_record_srv:
      allOf:
        - $ref: "#/components/schemas/domain_record"
        - required:
            - type
            - name
            - data
            - priority
            - port
            - flags
            - tag
    domain_record_txt:
      allOf:
        - $ref: "#/components/schemas/domain_record"
        - required:
            - type
            - name
            - data
            - flags
            - tag
    droplet:
      properties:
        backup_ids:
          description: An array of backup IDs of any backups that have been taken of the Droplet instance.  Droplet backups are enabled at the time of the instance creation.
          example:
            - 53893572
          items:
            type: integer
          type: array
        created_at:
          description: A time value given in ISO8601 combined date and time format that represents when the Droplet was created.
          example: 2020-07-21T18:37:44Z
          format: date-time
          type: string
        disk:
          description: The size of the Droplet's disk in gigabytes.
          example: 25
          type: integer
        features:
          description: An array of features enabled on this Droplet.
          example:
            - backups
            - private_networking
            - ipv6
          items:
            type: string
          type: array
        id:
          description: A unique identifier for each Droplet instance. This is automatically generated upon Droplet creation.
          example: 3164444
          type: integer
        image:
          $ref: "#/components/schemas/image"
        kernel:
          $ref: "#/components/schemas/kernel"
        locked:
          description: A boolean value indicating whether the Droplet has been locked, preventing actions by users.
          example: false
          type: boolean
        memory:
          description: Memory of the Droplet in megabytes.
          example: 1024
          multipleOf: 8
          type: integer
        name:
          description: The human-readable name set for the Droplet instance.
          example: example.com
          type: string
        networks:
          description: The details of the network that are configured for the Droplet instance.  This is an object that contains keys for IPv4 and IPv6.  The value of each of these is an array that contains objects describing an individual IP resource allocated to the Droplet.  These will define attributes like the IP address, netmask, and gateway of the specific network depending on the type of network it is.
          properties:
            v4:
              items:
                $ref: "#/components/schemas/network_v4"
              type: array
            v6:
              items:
                $ref: "#/components/schemas/network_v6"
              type: array
          type: object
        next_backup_window:
          description: The details of the Droplet's backups feature, if backups are configured for the Droplet. This object contains keys for the start and end times of the window during which the backup will start.
          nullable: true
          properties:
            end:
              description: A time value given in ISO8601 combined date and time format specifying the end of the Droplet's backup window.
              example: 2019-12-04T23:00:00Z
              format: date-time
              type: string
            start:
              description: A time value given in ISO8601 combined date and time format specifying the start of the Droplet's backup window.
              example: 2019-12-04T00:00:00Z
              format: date-time
              type: string
          type: object
        region:
          $ref: "#/components/schemas/region"
        size:
          $ref: "#/components/schemas/size"
        size_slug:
          description: The unique slug identifier for the size of this Droplet.
          example: s-1vcpu-1gb
          type: string
        snapshot_ids:
          description: An array of snapshot IDs of any snapshots created from the Droplet instance.
          example:
            - 67512819
          items:
            type: integer
          type: array
        status:
          description: A status string indicating the state of the Droplet instance. This may be "new", "active", "off", or "archive".
          enum:
            - new
            - active
            - off
            - archive
          example: active
          type: string
        tags:
          description: An array of Tags the Droplet has been tagged with.
          example:
            - web
            - env:prod
          items:
            type: string
          type: array
        vcpus:
          description: The number of virtual CPUs.
          example: 1
          type: integer
        volume_ids:
          description: A flat array including the unique identifier for each Block Storage volume attached to the Droplet.
          example:
            - 506f78a4-e098-11e5-ad9f-000f53306ae1
          items:
            type: string
          type: array
        vpc_uuid:
          description: A string specifying the UUID of the VPC to which the Droplet is assigned.
          example: 760e09ef-dc84-11e8-981e-3cfdfeaae000
          type: string
      required:
        - id
        - name
        - memory
        - vcpus
        - disk
        - locked
        - status
        - kernel
        - created_at
        - features
        - backup_ids
        - next_backup_window
        - snapshot_ids
        - image
        - volume_ids
        - size
        - size_slug
        - networks
        - region
        - tags
      type: object
    droplet_action_change_kernel:
      allOf:
        - $ref: "#/components/schemas/droplet_action_type"
        - properties:
            kernel:
              description: A unique number used to identify and reference a specific kernel.
              example: 12389723
              type: integer
          type: object
    droplet_action_rebuild:
      allOf:
        - $ref: "#/components/schemas/droplet_action_type"
        - properties:
            image:
              description: The image ID of a public or private image or the slug identifier for a public image. The Droplet will be rebuilt using this image as its base.
              example: ubuntu-20-04-x64
              oneOf:
                - type: string
                - type: integer
          type: object
    droplet_action_rename:
      allOf:
        - $ref: "#/components/schemas/droplet_action_type"
        - properties:
            name:
              description: The new name for the Droplet.
              example: nifty-new-name
              type: string
          type: object
    droplet_action_resize:
      allOf:
        - $ref: "#/components/schemas/droplet_action_type"
        - properties:
            disk:
              description: When `true`, the Droplet's disk will be resized in addition to its RAM and CPU. This is a permanent change and cannot be reversed as a Droplet's disk size cannot be decreased.
              example: true
              type: boolean
            size:
              description: The slug identifier for the size to which you wish to resize the Droplet.
              example: s-2vcpu-2gb
              type: string
          type: object
    droplet_action_restore:
      allOf:
        - $ref: "#/components/schemas/droplet_action_type"
        - properties:
            image:
              description: The ID of a backup of the current Droplet instance to restore from.
              example: 12389723
              type: integer
          type: object
    droplet_action_snapshot:
      allOf:
        - $ref: "#/components/schemas/droplet_action_type"
        - properties:
            name:
              description: The name to give the new snapshot of the Droplet.
              example: Nifty New Snapshot
              type: string
          type: object
    droplet_action_type:
      description: Specifies the action that will be taken on the Droplet.
      properties:
        type:
          description: The type of action to initiate for the Droplet.
          enum:
            - enable_backups
            - disable_backups
            - reboot
            - power_cycle
            - shutdown
            - power_off
            - power_on
            - restore
            - password_reset
            - resize
            - rebuild
            - rename
            - change_kernel
            - enable_ipv6
            - snapshot
          example: reboot
          type: string
      type: object
    droplet_create:
      properties:
        backups:
          default: false
          description: A boolean indicating whether automated backups should be enabled for the Droplet.
          example: true
          type: boolean
        image:
          description: The image ID of a public or private image or the slug identifier for a public image. This image will be the base image for your Droplet.
          example: ubuntu-20-04-x64
          oneOf:
            - type: string
            - type: integer
        ipv6:
          default: false
          description: A boolean indicating whether to enable IPv6 on the Droplet.
          example: true
          type: boolean
        monitoring:
          default: false
          description: A boolean indicating whether to install the DigitalOcean agent for monitoring.
          example: true
          type: boolean
        private_networking:
          default: false
          deprecated: true
          description: This parameter has been deprecated. Use `vpc_uuid` instead to specify a VPC network for the Droplet. If no `vpc_uuid` is provided, the Droplet will be placed in your account's default VPC for the region.
          example: true
          type: boolean
        region:
          description: The slug identifier for the region that you wish to deploy the Droplet in.
          example: nyc3
          type: string
        size:
          description: The slug identifier for the size that you wish to select for this Droplet.
          example: s-1vcpu-1gb
          type: string
        ssh_keys:
          default: []
          description: An array containing the IDs or fingerprints of the SSH keys that you wish to embed in the Droplet's root account upon creation.
          example:
            - 289794
            - 3b:16:e4:bf:8b:00:8b:b8:59:8c:a9:d3:f0:19:fa:45
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
        tags:
          default: []
          description: A flat array of tag names as strings to apply to the Droplet after it is created. Tag names can either be existing or new tags.
          example:
            - env:prod
            - web
          items:
            type: string
          type: array
        user_data:
          description: A string containing 'user data' which may be used to configure the Droplet on first boot, often a 'cloud-config' file or Bash script. It must be plain text and may not exceed 64 KiB in size.
          example: >
            #cloud-config

            runcmd:
              - touch /test.txt
          type: string
        vpc_uuid:
          description: A string specifying the UUID of the VPC to which the Droplet will be assigned. If excluded, the Droplet will be assigned to your account's default VPC for the region.
          example: 760e09ef-dc84-11e8-981e-3cfdfeaae000
          type: string
      required:
        - region
        - size
        - image
      type: object
    droplet_multi_create:
      allOf:
        - properties:
            names:
              description: An array of human human-readable strings you wish to use when displaying the Droplet name. Each name, if set to a domain name managed in the DigitalOcean DNS management system, will configure a PTR record for the Droplet. Each name set during creation will also determine the hostname for the Droplet in its internal configuration.
              example:
                - sub-01.example.com
                - sub-02.example.com
              items:
                type: string
              type: array
          required:
            - names
          type: object
        - $ref: "#/components/schemas/droplet_create"
      title: Multiple Droplet Request
    droplet_single_create:
      allOf:
        - properties:
            name:
              description: The human-readable string you wish to use when displaying the Droplet name. The name, if set to a domain name managed in the DigitalOcean DNS management system, will configure a PTR record for the Droplet. The name set during creation will also determine the hostname for the Droplet in its internal configuration.
              example: example.com
              type: string
          required:
            - name
          type: object
        - $ref: "#/components/schemas/droplet_create"
      title: Single Droplet Request
    droplet_snapshot:
      allOf:
        - properties:
            id:
              description: The unique identifier for the snapshot or backup.
              example: 6372321
              type: integer
          required:
            - id
          type: object
        - $ref: "#/components/schemas/snapshot_base"
        - properties:
            type:
              description: Describes the kind of image. It may be one of `snapshot` or `backup`. This specifies whether an image is a user-generated Droplet snapshot or automatically created Droplet backup.
              enum:
                - snapshot
                - backup
              example: snapshot
              type: string
          required:
            - type
          type: object
    error:
      properties:
        id:
          description: A short identifier corresponding to the HTTP status code returned. For  example, the ID for a response returning a 404 status code would be "not_found."
          example: not_found
          type: string
        message:
          description: A message providing additional information about the error, including  details to help resolve it when possible.
          example: The resource you were accessing could not be found.
          type: string
        request_id:
          description: Optionally, some endpoints may include a request ID that should be  provided when reporting bugs or opening support tickets to help  identify the issue.
          example: 4d9d8375-3c56-4925-a3e7-eb137fed17e9
          type: string
      required:
        - id
        - message
      type: object
    error_with_root_causes:
      properties:
        error:
          description: A message providing information about the error.
          example: not_found
          type: string
        messages:
          description: A list of legacy error messages.
          example: null
          items:
            type: string
          nullable: true
          type: array
        root_causes:
          description: A list of underlying causes for the error, including details to help  resolve it when possible.
          example: []
          items:
            type: string
          type: array
      required:
        - error
        - root_causes
      type: object
    eviction_policy:
      properties:
        eviction_policy:
          description: A string specifying the desired eviction policy for the Redis cluster.
          enum:
            - noeviction
            - allkeys_lru
            - allkeys_random
            - volatile_lru
            - volatile_random
            - volatile_ttl
          example: noeviction
          type: string
      required:
        - eviction_policy
      type: object
    firewall:
      allOf:
        - properties:
            created_at:
              description: A time value given in ISO8601 combined date and time format that represents when the firewall was created.
              example: 2020-05-23T21:24:00Z
              format: datetime
              readOnly: true
              type: string
            droplet_ids:
              description: An array containing the IDs of the Droplets assigned to the firewall.
              example:
                - 8043964
              items:
                type: integer
              type: array
            id:
              description: A unique ID that can be used to identify and reference a firewall.
              example: bb4b2611-3d72-467b-8602-280330ecd65c
              readOnly: true
              type: string
            name:
              description: A human-readable name for a firewall. The name must begin with an alphanumeric character. Subsequent characters must either be alphanumeric characters, a period (.), or a dash (-).
              example: firewall
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9\.-]+$
              type: string
            pending_changes:
              description: An array of objects each containing the fields "droplet_id", "removing", and "status". It is provided to detail exactly which Droplets are having their security policies updated. When empty, all changes have been successfully applied.
              example:
                - droplet_id: 8043964
                  removing: false
                  status: waiting
              items:
                properties:
                  droplet_id:
                    example: 8043964
                    type: integer
                  removing:
                    example: false
                    type: boolean
                  status:
                    example: waiting
                    type: string
                type: object
              readOnly: true
              type: array
            status:
              description: A status string indicating the current state of the firewall. This can be "waiting", "succeeded", or "failed".
              enum:
                - waiting
                - succeeded
                - failed
              example: waiting
              readOnly: true
              type: string
            tags:
              allOf:
                - $ref: "#/components/schemas/tags_array"
                - description: An array containing the names of the Tags assigned to the firewall.
                  example: gateway
        - $ref: "#/components/schemas/firewall_rules"
      type: object
    firewall_rule:
      properties:
        cluster_uuid:
          description: A unique ID for the database cluster to which the rule is applied.
          example: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
          format: uuid
          type: string
        created_at:
          description: A time value given in ISO8601 combined date and time format that represents when the firewall rule was created.
          example: 2019-01-11T18:37:36.000Z
          format: date-time
          readOnly: true
          type: string
        type:
          description: The type of resource that the firewall rule allows to access the database cluster.
          enum:
            - droplet
            - k8s
            - ip_addr
            - tag
          example: droplet
          type: string
        uuid:
          description: A unique ID for the firewall rule itself.
          example: 79f26d28-ea8a-41f2-8ad8-8cfcdd020095
          format: uuid
          type: string
        value:
          description: The ID of the specific resource, the name of a tag applied to a group of resources, or the IP address that the firewall rule allows to access the database cluster.
          example: ff2a6c52-5a44-4b63-b99c-0e98e7a63d61
          type: string
      required:
        - type
        - value
      type: object
    firewall_rule_base:
      properties:
        ports:
          description: The ports on which traffic will be allowed specified as a string containing a single port, a range (e.g. "8000-9000"), or "0" when all ports are open for a protocol. For ICMP rules this parameter will always return "0".
          example: "8000"
          type: string
        protocol:
          description: The type of traffic to be allowed. This may be one of `tcp`, `udp`, or `icmp`.
          enum:
            - tcp
            - udp
            - icmp
          example: tcp
          type: string
      required:
        - protocol
        - ports
      type: object
    firewall_rule_target:
      properties:
        addresses:
          description: An array of strings containing the IPv4 addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs to which the firewall will allow traffic.
          example:
            - 1.2.3.4
            - 18.0.0.0/8
          items:
            type: string
          type: array
        droplet_ids:
          description: An array containing the IDs of the Droplets to which the firewall will allow traffic.
          example:
            - 8043964
          items:
            type: integer
          type: array
        load_balancer_uids:
          description: An array containing the IDs of the load balancers to which the firewall will allow traffic.
          example:
            - 4de7ac8b-495b-4884-9a69-1050c6793cd6
          items:
            type: string
          type: array
        tags:
          allOf:
            - $ref: "#/components/schemas/tags_array"
            - description: An array containing the names of Tags corresponding to groups of Droplets to which the firewall will allow traffic.
              example:
                - frontend
      type: object
    firewall_rules:
      properties:
        inbound_rules:
          items:
            allOf:
              - $ref: "#/components/schemas/firewall_rule_base"
              - properties:
                  sources:
                    allOf:
                      - $ref: "#/components/schemas/firewall_rule_target"
                      - description: An object specifying locations from which inbound traffic will be accepted.
                required:
                  - sources
          type: array
        outbound_rules:
          items:
            allOf:
              - $ref: "#/components/schemas/firewall_rule_base"
              - properties:
                  destinations:
                    allOf:
                      - $ref: "#/components/schemas/firewall_rule_target"
                      - description: An object specifying locations to which outbound traffic that will be allowed.
                required:
                  - destinations
          type: array
      type: object
    floating_ip:
      properties:
        droplet:
          anyOf:
            - description: If the floating IP is not assigned to a Droplet, the value will be null.
              nullable: true
              title: "null"
            - $ref: "#/components/schemas/droplet"
          description: The Droplet that the floating IP has been assigned to. When you query a floating IP, if it is assigned to a Droplet, the entire Droplet object will be returned. If it is not assigned, the value will be null.
          example: null
        ip:
          description: The public IP address of the floating IP. It also serves as its identifier.
          example: 45.55.96.47
          format: ipv4
          type: string
        locked:
          description: A boolean value indicating whether or not the floating IP has pending actions preventing new ones from being submitted.
          example: true
          type: boolean
        region:
          allOf:
            - $ref: "#/components/schemas/region"
            - description: The region that the floating IP is reserved to. When you query a floating IP, the entire region object will be returned.
              type: object
      type: object
    floating_ip_action_assign:
      properties:
        droplet_id:
          description: The ID of the Droplet that the floating IP will be assigned to.
          example: 758604968
          type: integer
        type:
          $ref: "#/components/schemas/floating_ip_action_type"
      required:
        - type
        - droplet_id
      type: object
    floating_ip_action_type:
      description: The type of action to initiate for the floating IP.
      enum:
        - assign
        - unassign
      example: assign
      type: string
    floating_ip_action_unassign:
      additionalProperties: false
      properties:
        type:
          $ref: "#/components/schemas/floating_ip_action_type"
      required:
        - type
      type: object
    floating_ip_create:
      oneOf:
        - properties:
            droplet_id:
              description: The ID of the Droplet that the floating IP will be assigned to.
              example: 2457247
              type: integer
          required:
            - droplet_id
          title: Assign to Droplet
          type: object
        - properties:
            region:
              description: The slug identifier for the region the floating IP will be reserved to.
              example: nyc3
              type: string
          required:
            - region
          title: Reserve to Region
          type: object
    forward_links:
      allOf:
        - $ref: "#/components/schemas/link_to_last_page"
        - $ref: "#/components/schemas/link_to_next_page"
    forwarding_rule:
      description: An object specifying a forwarding rule for a load balancer.
      properties:
        certificate_id:
          description: The ID of the TLS certificate used for SSL termination if enabled.
          example: 892071a0-bb95-49bc-8021-3afd67a210bf
          type: string
        entry_port:
          description: An integer representing the port on which the load balancer instance will listen.
          example: 443
          type: integer
        entry_protocol:
          description: >
            The protocol used for traffic to the load balancer. The possible values are: `http`, `https`, `http2`, or `tcp`.
          enum:
            - http
            - https
            - http2
            - tcp
          example: https
          type: string
        target_port:
          description: An integer representing the port on the backend Droplets to which the load balancer will send traffic.
          example: 80
          type: integer
        target_protocol:
          description: >
            The protocol used for traffic from the load balancer to the backend Droplets. The possible values are: `http`, `https`, `http2`, or `tcp`.
          enum:
            - http
            - https
            - http2
            - tcp
          example: http
          type: string
        tls_passthrough:
          description: A boolean value indicating whether SSL encrypted traffic will be passed through to the backend Droplets.
          example: false
          type: boolean
      required:
        - entry_protocol
        - entry_port
        - target_protocol
        - target_port
      type: object
    garbage_collection:
      properties:
        blobs_deleted:
          description: The number of blobs deleted as a result of this garbage collection.
          example: 42
          type: integer
        created_at:
          description: The time the garbage collection was created.
          example: 2020-10-30T21:03:24.000Z
          format: date-time
          type: string
        freed_bytes:
          description: The number of bytes freed as a result of this garbage collection.
          example: 667
          type: integer
        registry_name:
          description: The name of the container registry.
          example: example
          type: string
        status:
          description: The current status of this garbage collection.
          enum:
            - requested
            - waiting for write JWTs to expire
            - scanning manifests
            - deleting unreferenced blobs
            - cancelling
            - failed
            - succeeded
            - cancelled
          example: requested
          type: string
        updated_at:
          description: The time the garbage collection was last updated.
          example: 2020-10-30T21:03:44.000Z
          format: date-time
          type: string
        uuid:
          description: A string specifying the UUID of the garbage collection.
          example: eff0feee-49c7-4e8f-ba5c-a320c109c8a8
          type: string
      type: object
    health_check:
      description: An object specifying health check settings for the load balancer.
      properties:
        check_interval_seconds:
          default: 10
          description: The number of seconds between between two consecutive health checks.
          example: 10
          type: integer
        healthy_threshold:
          default: 3
          description: The number of times a health check must pass for a backend Droplet to be marked "healthy" and be re-added to the pool.
          example: 3
          type: integer
        path:
          default: /
          description: The path on the backend Droplets to which the load balancer instance will send a request.
          example: /
          type: string
        port:
          default: 80
          description: An integer representing the port on the backend Droplets on which the health check will attempt a connection.
          example: 80
          type: integer
        protocol:
          default: http
          description: The protocol used for health checks sent to the backend Droplets. The possible values are `http`, `https`, or `tcp`.
          enum:
            - http
            - https
            - tcp
          example: http
          type: string
        response_timeout_seconds:
          default: 5
          description: The number of seconds the load balancer instance will wait for a response until marking a health check as failed.
          example: 5
          type: integer
        unhealthy_threshold:
          default: 5
          description: The number of times a health check must fail for a backend Droplet to be marked "unhealthy" and be removed from the pool.
          example: 5
          type: integer
      type: object
    image:
      properties:
        created_at:
          description: A time value given in ISO8601 combined date and time format that represents when the image was created.
          example: 2020-05-04T22:23:02.000Z
          format: date-time
          type: string
        description:
          $ref: "#/components/schemas/image_description"
        distribution:
          $ref: "#/components/schemas/distribution"
        error_message:
          description: >-
            A string containing information about errors that may occur when importing
             a custom image.
          example: " "
          type: string
        id:
          description: A unique number that can be used to identify and reference a specific image.
          example: 7555620
          readOnly: true
          type: integer
        min_disk_size:
          description: The minimum disk size in GB required for a Droplet to use this image.
          example: 20
          minimum: 0
          type: integer
        name:
          $ref: "#/components/schemas/image_name"
        public:
          description: This is a boolean value that indicates whether the image in question is public or not. An image that is public is available to all accounts. A non-public image is only accessible from your account.
          example: true
          type: boolean
        regions:
          $ref: "#/components/schemas/regions_array"
        size_gigabytes:
          description: The size of the image in gigabytes.
          example: 2.34
          format: float
          type: number
        slug:
          description: A uniquely identifying string that is associated with each of the DigitalOcean-provided public images. These can be used to reference a public image as an alternative to the numeric id.
          example: nifty1
          nullable: true
          type: string
        status:
          description: >-
            A status string indicating the state of a custom image. This may be `NEW`,
             `available`, `pending`, `deleted`, or `retired`.
          enum:
            - NEW
            - available
            - pending
            - deleted
            - retired
          example: NEW
          type: string
        tags:
          $ref: "#/components/schemas/tags_array"
        type:
          description: Describes the kind of image. It may be one of "snapshot", "backup", or "custom". This specifies whether an image is a user-generated Droplet snapshot, automatically created Droplet backup, or a user-provided virtual machine image.
          enum:
            - base
            - snapshot
            - backup
            - custom
          example: snapshot
          type: string
      type: object
    image_action_base:
      properties:
        type:
          description: The action to be taken on the image. Can be either `convert` or `transfer`.
          enum:
            - convert
            - transfer
          example: convert
          type: string
      required:
        - type
      type: object
    image_action_transfer:
      allOf:
        - $ref: "#/components/schemas/image_action_base"
        - properties:
            region:
              $ref: "#/components/schemas/region_slug"
          type: object
      required:
        - region
        - type
    image_description:
      description: An optional free-form text field to describe an image.
      example: " "
      type: string
    image_name:
      description: The display name that has been given to an image.  This is what is shown in the control panel and is generally a descriptive title for the image in question.
      example: Nifty New Snapshot
      type: string
    image_new_custom:
      allOf:
        - $ref: "#/components/schemas/image_update"
        - properties:
            region:
              $ref: "#/components/schemas/region_slug"
            tags:
              $ref: "#/components/schemas/tags_array"
            url:
              description: A URL from which the custom Linux virtual machine image may be retrieved.  The image it points to must be in the raw, qcow2, vhdx, vdi, or vmdk format.  It may be compressed using gzip or bzip2 and must be smaller than 100 GB after being decompressed.
              example: http://cloud-images.ubuntu.com/minimal/releases/bionic/release/ubuntu-18.04-minimal-cloudimg-amd64.img
              type: string
      example:
        description: Cloud-optimized image w/ small footprint
        distribution: Ubuntu
        name: ubuntu-18.04-minimal
        region: nyc3
        tags:
          - base-image
          - prod
        url: http://cloud-images.ubuntu.com/minimal/releases/bionic/release/ubuntu-18.04-minimal-cloudimg-amd64.img
      required:
        - name
        - url
        - region
      type: object
    image_update:
      properties:
        description:
          $ref: "#/components/schemas/image_description"
        distribution:
          $ref: "#/components/schemas/distribution"
        name:
          $ref: "#/components/schemas/image_name"
      type: object
    instance_size_cpu_type:
      default: UNSPECIFIED
      enum:
        - UNSPECIFIED
        - SHARED
        - DEDICATED
      example: SHARED
      title: >-
        - SHARED: Shared vCPU cores
         - DEDICATED: Dedicated vCPU cores
      type: string
    invoice_item:
      properties:
        amount:
          description: Billed amount of this invoice item. Billed in USD.
          example: "12.34"
          type: string
        description:
          description: Description of the invoice item.
          example: a56e086a317d8410c8b4cfd1f4dc9f82
          type: string
        duration:
          description: Duration of time this invoice item was used and subsequently billed.
          example: "744"
          type: string
        duration_unit:
          description: Unit of time for duration.
          example: Hours
          type: string
        end_time:
          description: Time the invoice item stoped being billed for usage.
          example: 2020-02-01T00:00:00.000Z
          type: string
        group_description:
          description: Description of the invoice item when it is a grouped set of usage, such  as DOKS or databases.
          example: my-doks-cluster
          type: string
        product:
          description: Name of the product being billed in the invoice item.
          example: Kubernetes Clusters
          type: string
        project_name:
          description: Name of the DigitalOcean Project this resource belongs to.
          example: web
          type: string
        resource_id:
          description: ID of the resource billing in the invoice item if available.
          example: "2353624"
          type: string
        resource_uuid:
          description: UUID of the resource billing in the invoice item if available.
          example: 711157cb-37c8-4817-b371-44fa3504a39c
          type: string
        start_time:
          description: Time the invoice item began to be billed for usage.
          example: 2020-01-01T00:00:00.000Z
          type: string
      type: object
    invoice_preview:
      description: The invoice preview.
      properties:
        amount:
          description: Total amount of the invoice, in USD.  This will reflect month-to-date usage in the invoice preview.
          example: "23.45"
          type: string
        invoice_period:
          description: Billing period of usage for which the invoice is issued, in `YYYY-MM`  format.
          example: 2020-01
          type: string
        invoice_uuid:
          description: The UUID of the invoice. The canonical reference for the invoice.
          example: fdabb512-6faf-443c-ba2e-665452332a9e
          type: string
        updated_at:
          description: Time the invoice was last updated.  This is only included with the invoice preview.
          example: 2020-01-23T06:31:50.000Z
          type: string
      type: object
    invoice_summary:
      properties:
        amount:
          description: Total amount of the invoice, in USD.  This will reflect month-to-date usage in the invoice preview.
          example: "27.13"
          type: string
        billing_period:
          description: Billing period of usage for which the invoice is issued, in `YYYY-MM`  format.
          example: 2020-01
          type: string
        credits_and_adjustments:
          allOf:
            - description: A summary of the credits and adjustments contributing to the invoice.
            - $ref: "#/components/schemas/simple_charge"
        invoice_uuid:
          description: UUID of the invoice
          example: 22737513-0ea7-4206-8ceb-98a575af7681
          type: string
        overages:
          allOf:
            - description: A summary of the overages contributing to the invoice.
            - $ref: "#/components/schemas/simple_charge"
        product_charges:
          allOf:
            - description: A summary of the product usage charges contributing to the invoice.  This will include an amount, and grouped aggregates by resource type  under the `items` key.
            - $ref: "#/components/schemas/product_usage_charges"
        taxes:
          allOf:
            - description: A summary of the taxes contributing to the invoice.
            - $ref: "#/components/schemas/simple_charge"
        user_billing_address:
          allOf:
            - description: The billing address of the customer being invoiced.
            - $ref: "#/components/schemas/billing_address"
        user_company:
          description: Company of the DigitalOcean customer being invoiced, if set.
          example: DigitalOcean
          type: string
        user_email:
          description: Email of the DigitalOcean customer being invoiced.
          example: sammy@digitalocean.com
          type: string
        user_name:
          description: Name of the DigitalOcean customer being invoiced.
          example: Sammy Shark
          type: string
      type: object
    kernel:
      deprecated: true
      description: >
        **Note**: All Droplets created after March 2017 use internal kernels by default.

        These Droplets will have this attribute set to `null`.


        The current [kernel](https://www.digitalocean.com/docs/droplets/how-to/kernel/)

        for Droplets with externally managed kernels. This will initially be set to

        the kernel of the base image when the Droplet is created.
      nullable: true
      properties:
        id:
          description: A unique number used to identify and reference a specific kernel.
          example: 7515
          type: integer
        name:
          description: The display name of the kernel. This is shown in the web UI and is generally a descriptive title for the kernel in question.
          example: DigitalOcean GrubLoader v0.2 (20160714)
          type: string
        version:
          description: A standard kernel version string representing the version, patch, and release information.
          example: 2016.07.13-DigitalOcean_loader_Ubuntu
          type: string
      type: object
    kubernetes_node_pool:
      allOf:
        - $ref: "#/components/schemas/kubernetes_node_pool_size"
        - $ref: "#/components/schemas/kubernetes_node_pool_base"
      required:
        - name
        - size
        - count
      type: object
    kubernetes_node_pool_base:
      properties:
        auto_scale:
          description: A boolean value indicating whether auto-scaling is enabled for this node pool.
          example: true
          type: boolean
        count:
          description: The number of Droplet instances in the node pool.
          example: 3
          type: integer
        id:
          description: A unique ID that can be used to identify and reference a specific node pool.
          example: cdda885e-7663-40c8-bc74-3a036c66545d
          format: uuid
          readOnly: true
          type: string
        labels:
          description: An object containing a set of Kubernetes labels. The keys and are values are both user-defined.
          example: null
          nullable: true
          type: object
        max_nodes:
          description: The maximum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`.
          example: 6
          type: integer
        min_nodes:
          description: The minimum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`.
          example: 3
          type: integer
        name:
          description: A human-readable name for the node pool.
          example: frontend-pool
          type: string
        nodes:
          description: An object specifying the details of a specific worker node in a node pool.
          items:
            $ref: "#/components/schemas/node"
          readOnly: true
          type: array
        tags:
          description: An array containing the tags applied to the node pool. All node pools are automatically tagged `k8s`, `k8s-worker`, and `k8s:$K8S_CLUSTER_ID`.
          example:
            - k8s
            - k8s:bd5f5959-5e1e-4205-a714-a914373942af
            - k8s-worker
            - production
            - web-team
          items:
            type: string
          type: array
        taints:
          description: An array of taints to apply to all nodes in a pool. Taints will automatically be applied to all existing nodes and any subsequent nodes added to the pool. When a taint is removed, it is removed from all nodes in the pool.
          items:
            $ref: "#/components/schemas/kubernetes_node_pool_taint"
          type: array
      type: object
    kubernetes_node_pool_size:
      properties:
        size:
          description: The slug identifier for the type of Droplet used as workers in the node pool.
          example: s-1vcpu-2gb
          type: string
      type: object
    kubernetes_node_pool_taint:
      properties:
        effect:
          description: How the node reacts to pods that it won't tolerate. Available effect values are `NoSchedule`, `PreferNoSchedule`, and `NoExecute`.
          enum:
            - NoSchedule
            - PreferNoSchedule
            - NoExecute
          example: NoSchedule
          type: string
        key:
          description: An arbitrary string. The `key` and `value` fields of the `taint` object form a key-value pair. For example, if the value of the `key` field is "special" and the value of the `value` field is "gpu", the key value pair would be `special=gpu`.
          example: priority
          type: string
        value:
          description: An arbitrary string. The `key` and `value` fields of the `taint` object form a key-value pair. For example, if the value of the `key` field is "special" and the value of the `value` field is "gpu", the key value pair would be `special=gpu`.
          example: high
          type: string
      type: object
    kubernetes_node_pool_update:
      allOf:
        - $ref: "#/components/schemas/kubernetes_node_pool_base"
      required:
        - name
        - count
      type: object
    kubernetes_options:
      properties:
        options:
          properties:
            regions:
              items:
                $ref: "#/components/schemas/kubernetes_region"
              type: array
            sizes:
              items:
                $ref: "#/components/schemas/kubernetes_size"
              type: array
            versions:
              items:
                $ref: "#/components/schemas/kubernetes_version"
              type: array
      type: object
    kubernetes_region:
      properties:
        name:
          description: A DigitalOcean region where Kubernetes is available.
          example: New York 3
          type: string
        slug:
          description: The identifier for a region for use when creating a new cluster.
          example: nyc3
          type: string
      type: object
    kubernetes_size:
      properties:
        name:
          description: A Droplet size available for use in a Kubernetes node pool.
          example: s-1vcpu-2gb
          type: string
        slug:
          description: The identifier for a size for use when creating a new cluster.
          example: s-1vcpu-2gb
          type: string
      type: object
    kubernetes_version:
      properties:
        kubernetes_version:
          description: The upstream version string for the version of Kubernetes provided by a given slug.
          example: 1.16.13
          type: string
        slug:
          description: The slug identifier for an available version of Kubernetes for use when creating or updating a cluster. The string contains both the upstream version of Kubernetes as well as the DigitalOcean revision.
          example: 1.16.13-do.0
          type: string
      type: object
    link_to_first_page:
      properties:
        first:
          description: URI of the first page of the results.
          example: https://api.digitalocean.com/v2/images?page=1
          type: string
      type: object
    link_to_last_page:
      properties:
        last:
          description: URI of the last page of the results.
          example: https://api.digitalocean.com/v2/images?page=2
          type: string
      type: object
    link_to_next_page:
      properties:
        next:
          description: URI of the next page of the results.
          example: https://api.digitalocean.com/v2/images?page=2
          type: string
      type: object
    link_to_prev_page:
      properties:
        prev:
          description: URI of the previous page of the results.
          example: https://api.digitalocean.com/v2/images?page=1
          type: string
      type: object
    load_balancer:
      allOf:
        - $ref: "#/components/schemas/load_balancer_base"
        - properties:
            region:
              allOf:
                - description: The region where the load balancer instance is located. When setting a region, the value should be the slug identifier for the region. When you query a load balancer, an entire region object will be returned.
                - $ref: "#/components/schemas/region"
              type: object
          type: object
        - properties:
            droplet_ids:
              description: An array containing the IDs of the Droplets assigned to the load balancer.
              example:
                - 3164444
                - 3164445
              items:
                type: integer
              type: array
          type: object
        - properties:
            tag:
              description: The name of a Droplet tag corresponding to Droplets assigned to the load balancer.
              example: prod:web
              type: string
          type: object
    load_balancer_base:
      properties:
        algorithm:
          default: round_robin
          description: The load balancing algorithm used to determine which backend Droplet will be selected by a client. It must be either `round_robin` or `least_connections`.
          enum:
            - round_robin
            - least_connections
          example: round_robin
          type: string
        created_at:
          description: A time value given in ISO8601 combined date and time format that represents when the load balancer was created.
          example: 2017-02-01T22:22:58Z
          format: date-time
          readOnly: true
          type: string
        enable_backend_keepalive:
          default: false
          description: A boolean value indicating whether HTTP keepalive connections are maintained to target Droplets.
          example: true
          type: boolean
        enable_proxy_protocol:
          default: false
          description: A boolean value indicating whether PROXY Protocol is in use.
          example: true
          type: boolean
        forwarding_rules:
          description: An array of objects specifying the forwarding rules for a load balancer.
          items:
            $ref: "#/components/schemas/forwarding_rule"
          minimum: 1
          type: array
        health_check:
          $ref: "#/components/schemas/health_check"
        id:
          description: A unique ID that can be used to identify and reference a load balancer.
          example: 4de7ac8b-495b-4884-9a69-1050c6793cd6
          format: uuid
          readOnly: true
          type: string
        ip:
          description: An attribute containing the public-facing IP address of the load balancer.
          example: 104.131.186.241
          format: ipv4
          readOnly: true
          type: string
        name:
          description: A human-readable name for a load balancer instance.
          example: example-lb-01
          type: string
        redirect_http_to_https:
          default: false
          description: A boolean value indicating whether HTTP requests to the load balancer on port 80 will be redirected to HTTPS on port 443.
          example: true
          type: boolean
        size:
          default: lb-small
          description: The size of the load balancer. The available sizes are `lb-small`, `lb-medium`, or `lb-large`. Once you have created a load balancer, you can't change its size.
          enum:
            - lb-small
            - lb-medium
            - lb-large
          example: lb-small
          type: string
        status:
          description: A status string indicating the current state of the load balancer. This can be `new`, `active`, or `errored`.
          enum:
            - new
            - active
            - errored
          example: new
          readOnly: true
          type: string
        sticky_sessions:
          $ref: "#/components/schemas/sticky_sessions"
        vpc_uuid:
          description: A string specifying the UUID of the VPC to which the load balancer is assigned.
          example: c33931f2-a26a-4e61-b85c-4e95a2ec431b
          format: uuid
          type: string
      required:
        - forwarding_rules
      type: object
    load_balancer_create:
      oneOf:
        - allOf:
            - properties:
                droplet_ids:
                  description: An array containing the IDs of the Droplets assigned to the load balancer.
                  example:
                    - 3164444
                    - 3164445
                  items:
                    type: integer
                  type: array
              type: object
            - properties:
                region:
                  $ref: "#/components/schemas/region_slug"
              type: object
            - $ref: "#/components/schemas/load_balancer_base"
          required:
            - droplet_ids
            - region
          title: Assign Droplets by ID
        - allOf:
            - properties:
                tag:
                  description: The name of a Droplet tag corresponding to Droplets assigned to the load balancer.
                  example: prod:web
                  type: string
              type: object
            - properties:
                region:
                  $ref: "#/components/schemas/region_slug"
              type: object
            - $ref: "#/components/schemas/load_balancer_base"
          required:
            - tag
            - region
          title: Assign Droplets by Tag
    maintenance_policy:
      description: An object specifying the maintenance window policy for the Kubernetes cluster.
      properties:
        day:
          description: The day of the maintenance window policy. May be one of `monday` through `sunday`, or `any` to indicate an arbitrary week day.
          enum:
            - any
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
          example: any
          type: string
        duration:
          description: The duration of the maintenance window policy in human-readable format.
          example: 4h0m0s
          readOnly: true
          type: string
        start_time:
          description: The start time in UTC of the maintenance window policy in 24-hour clock format / HH:MM notation (e.g., `15:00`).
          example: 12:00
          type: string
      type: object
    meta:
      properties:
        meta:
          description: Information about the response itself.
          properties:
            total:
              description: Number of objects returned by the request.
              example: 1
              type: integer
          required:
            - total
          type: object
      required:
        - meta
      type: object
    meta_meta:
      description: Information about the response itself.
      properties:
        total:
          description: Number of objects returned by the request.
          example: 1
          type: integer
      required:
        - total
      type: object
    mysql_settings:
      properties:
        auth_plugin:
          description: >
            A string specifying the authentication method to be used for connections

            to the MySQL user account. The valid values are `mysql_native_password`

            or `caching_sha2_password`. If excluded when creating a new user, the

            default for the version of MySQL in use will be used. As of MySQL 8.0, the

            default is `caching_sha2_password`.
          enum:
            - mysql_native_password
            - caching_sha2_password
          example: mysql_native_password
          type: string
      required:
        - auth_plugin
      type: object
    neighbor_ids:
      properties:
        neighbor_ids:
          description: An array of arrays. Each array will contain a set of Droplet IDs for Droplets that share a physical server.
          example:
            - - 168671828
              - 168663509
              - 168671815
            - - 168671883
              - 168671750
          items:
            items:
              type: integer
            type: array
          type: array
      type: object
    network_v4:
      properties:
        gateway:
          description: >
            The gateway of the specified IPv4 network interface.


            For private interfaces, a gateway is not provided. This is denoted by

            returning `nil` as its value.
          example: 104.236.0.1
          type: string
        ip_address:
          description: The IP address of the IPv4 network interface.
          example: 104.236.32.182
          format: ipv4
          type: string
        netmask:
          description: The netmask of the IPv4 network interface.
          example: 255.255.192.0
          format: ipv4
          type: string
        type:
          description: The type of the IPv4 network interface.
          enum:
            - public
            - private
          example: public
          type: string
      type: object
    network_v6:
      properties:
        gateway:
          description: The gateway of the specified IPv6 network interface.
          example: 2604:a880:0:1010::1
          format: ipv6
          type: string
        ip_address:
          description: The IP address of the IPv6 network interface.
          example: 2604:a880:0:1010::18a:a001
          format: ipv6
          type: string
        netmask:
          description: The netmask of the IPv6 network interface.
          example: 64
          type: integer
        type:
          description: >
            The type of the IPv6 network interface.


            **Note**: IPv6 private  networking is not currently supported.
          enum:
            - public
          example: public
          type: string
      type: object
    new_volume_ext4:
      allOf:
        - $ref: "#/components/schemas/volume_base"
        - properties:
            filesystem_label:
              allOf:
                - $ref: "#/components/schemas/volume_write_file_system_label"
                - maxLength: 16
            filesystem_type:
              $ref: "#/components/schemas/volume_write_file_system_type"
            region:
              $ref: "#/components/schemas/region_slug"
      type: object
    new_volume_xfs:
      allOf:
        - $ref: "#/components/schemas/volume_base"
        - properties:
            filesystem_label:
              allOf:
                - $ref: "#/components/schemas/volume_write_file_system_label"
                - maxLength: 12
            filesystem_type:
              $ref: "#/components/schemas/volume_write_file_system_type"
            region:
              $ref: "#/components/schemas/region_slug"
      type: object
    node:
      properties:
        created_at:
          description: A time value given in ISO8601 combined date and time format that represents when the node was created.
          example: 2018-11-15T16:00:11Z
          format: date-time
          type: string
        droplet_id:
          description: The ID of the Droplet used for the worker node.
          example: "205545370"
          type: string
        id:
          description: A unique ID that can be used to identify and reference the node.
          example: e78247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
          format: uuid
          type: string
        name:
          description: An automatically generated, human-readable name for the node.
          example: adoring-newton-3niq
          type: string
        status:
          description: An object containing a `state` attribute whose value is set to a string indicating the current status of the node.
          properties:
            state:
              description: A string indicating the current status of the node.
              enum:
                - provisioning
                - running
                - draining
                - deleting
              example: provisioning
              type: string
          type: object
        updated_at:
          description: A time value given in ISO8601 combined date and time format that represents when the node was last updated.
          example: 2018-11-15T16:00:11Z
          format: date-time
          type: string
      type: object
    page_links:
      properties:
        pages:
          anyOf:
            - $ref: "#/components/schemas/forward_links"
            - $ref: "#/components/schemas/backward_links"
            - {}
          example:
            pages:
              first: https://api.digitalocean.com/v2/account/keys?page=1
              prev: https://api.digitalocean.com/v2/account/keys?page=2
      type: object
    pagination:
      properties:
        links:
          $ref: "#/components/schemas/page_links"
      type: object
    product_charge_item:
      properties:
        amount:
          description: Amount of the charge
          example: "10.00"
          type: string
        count:
          description: Number of times the charge was applied
          example: "1"
          type: string
        name:
          description: Description of the charge
          example: Spaces Subscription
          type: string
      type: object
    product_usage_charges:
      properties:
        amount:
          description: Total amount charged
          example: "12.34"
          type: string
        items:
          description: List of amount, and grouped aggregates by resource type.
          example:
            - amount: "10.00"
              count: "1"
              name: Spaces Subscription
            - amount: "2.34"
              count: "1"
              name: Database Clusters
          items:
            $ref: "#/components/schemas/product_charge_item"
          type: array
        name:
          description: Description of usage charges
          example: Product usage charges
          type: string
      type: object
    project:
      allOf:
        - $ref: "#/components/schemas/project_base"
        - properties:
            is_default:
              description: If true, all resources will be added to this project if no project is specified.
              example: false
              type: boolean
          type: object
    project_assignment:
      properties:
        resources:
          description: A list of uniform resource names (URNs) to be added to a project.
          example:
            - do:droplet:13457723
          items:
            $ref: "#/components/schemas/urn"
          type: array
      type: object
    project_base:
      properties:
        created_at:
          description: A time value given in ISO8601 combined date and time format that represents when the project was created.
          example: 2018-09-27T20:10:35Z
          format: date-time
          readOnly: true
          type: string
        description:
          description: The description of the project. The maximum length is 255 characters.
          example: My website API
          maxLength: 255
          type: string
        environment:
          description: The environment of the project's resources.
          enum:
            - Development
            - Staging
            - Production
          example: Production
          type: string
        id:
          description: The unique universal identifier of this project.
          example: 4e1bfbc3-dc3e-41f2-a18f-1b4d7ba71679
          format: uuid
          readOnly: true
          type: string
        name:
          description: The human-readable name for the project. The maximum length is 175 characters and the name must be unique.
          example: my-web-api
          maxLength: 175
          type: string
        owner_id:
          description: The integer id of the project owner.
          example: 258992
          readOnly: true
          type: integer
        owner_uuid:
          description: The unique universal identifier of the project owner.
          example: 99525febec065ca37b2ffe4f852fd2b2581895e7
          readOnly: true
          type: string
        purpose:
          description: >
            The purpose of the project. The maximum length is 255 characters. It can

            have one of the following values:


            - Just trying out DigitalOcean

            - Class project / Educational purposes

            - Website or blog

            - Web Application

            - Service or API

            - Mobile Application

            - Machine learning / AI / Data processing

            - IoT

            - Operational / Developer tooling


            If another value for purpose is specified, for example, "your custom purpose",

            your purpose will be stored as `Other: your custom purpose`.
          example: Service or API
          maxLength: 255
          type: string
        updated_at:
          description: A time value given in ISO8601 combined date and time format that represents when the project was updated.
          example: 2018-09-27T20:10:35Z
          format: date-time
          readOnly: true
          type: string
      type: object
    purge_cache:
      properties:
        files:
          description: An array of strings containing the path to the content to be purged from the CDN cache.
          example:
            - path/to/image.png
            - path/to/css/*
          items:
            type: string
          type: array
      required:
        - files
      type: object
    region:
      properties:
        available:
          description: This is a boolean value that represents whether new Droplets can be created in this region.
          example: true
          type: boolean
        features:
          description: This attribute is set to an array which contains features available in this region
          example:
            - private_networking
            - backups
            - ipv6
            - metadata
            - install_agent
            - storage
            - image_transfer
          items:
            type: string
        name:
          description: The display name of the region.  This will be a full name that is used in the control panel and other interfaces.
          example: New York 3
          type: string
        sizes:
          description: This attribute is set to an array which contains the identifying slugs for the sizes available in this region.
          example:
            - s-1vcpu-1gb
            - s-1vcpu-2gb
            - s-1vcpu-3gb
            - s-2vcpu-2gb
            - s-3vcpu-1gb
            - s-2vcpu-4gb
            - s-4vcpu-8gb
            - s-6vcpu-16gb
            - s-8vcpu-32gb
            - s-12vcpu-48gb
            - s-16vcpu-64gb
            - s-20vcpu-96gb
            - s-24vcpu-128gb
            - s-32vcpu-192g
          items:
            type: string
        slug:
          description: A human-readable string that is used as a unique identifier for each region.
          example: nyc3
          type: string
      required:
        - available
        - features
        - name
        - sizes
        - slug
      type: object
    region_slug:
      description: The slug identifier for the region where the resource will initially be  available.
      enum:
        - ams1
        - ams2
        - ams3
        - blr1
        - fra1
        - lon1
        - nyc1
        - nyc2
        - nyc3
        - sfo1
        - sfo2
        - sfo3
        - sgp1
        - tor1
      example: nyc3
      type: string
    regions_array:
      description: This attribute is an array of the regions that the image is available in. The regions are represented by their identifying slug values.
      example:
        - nyc1
        - nyc2
      items:
        $ref: "#/components/schemas/region_slug"
      type: array
    registry:
      properties:
        created_at:
          description: A time value given in ISO8601 combined date and time format that represents when the registry was created.
          example: 2020-03-21T16:02:37Z
          format: date-time
          readOnly: true
          type: string
        name:
          description: A globally unique name for the container registry. Must be lowercase and be composed only of numbers, letters and `-`, up to a limit of 63 characters.
          example: example
          maxLength: 63
          pattern: ^[a-z0-9-]{1,63}$
          type: string
        storage_usage_bytes:
          description: The amount of storage used in the registry in bytes.
          example: 29393920
          readOnly: true
          type: integer
        storage_usage_bytes_updated_at:
          description: The time at which the storage usage was updated. Storage usage is calculated asynchronously, and may not immediately reflect pushes to the registry.
          example: 2020-11-04T21:39:49.530562231Z
          format: date-time
          readOnly: true
          type: string
        subscription:
          allOf:
            - readOnly: true
            - $ref: "#/components/schemas/subscription"
        subscription_tier_slug:
          description: The slug of the subscription tier to sign up for. Valid values can be retrieved using the options endpoint.
          enum:
            - starter
            - basic
            - professional
          example: basic
          type: string
          writeOnly: true
      required:
        - name
        - subscription_tier_slug
      type: object
    repository:
      properties:
        latest_tag:
          $ref: "#/components/schemas/repository_tag"
        name:
          description: The name of the repository.
          example: repo-1
          type: string
        registry_name:
          description: The name of the container registry.
          example: example
          type: string
        tag_count:
          description: The number of tags in the repository.
          example: 1
          type: integer
      type: object
    repository_tag:
      properties:
        compressed_size_bytes:
          description: The compressed size of the tag in bytes.
          example: 2803255
          type: integer
        manifest_digest:
          description: The digest of the manifest associated with the tag.
          example: sha256:cb8a924afdf0229ef7515d9e5b3024e23b3eb03ddbba287f4a19c6ac90b8d221
          type: string
        registry_name:
          description: The name of the container registry.
          example: example
          type: string
        repository_name:
          description: The name of the repository.
          example: repo-1
          type: string
        size_bytes:
          description: The uncompressed size of the tag in bytes (this size is calculated asynchronously so it may not be immediately available).
          example: 5861888
          type: integer
        tag:
          description: The name of the tag.
          example: latest
          type: string
        updated_at:
          description: The time the tag was last updated.
          example: 2020-04-09T23:54:25Z
          format: date-time
          type: string
      type: object
    resource:
      properties:
        assigned_at:
          description: A time value given in ISO8601 combined date and time format that represents when the project was created.
          example: 2018-09-28T19:26:37Z
          format: date-time
          type: string
        links:
          description: The links object contains the `self` object, which contains the resource relationship.
          properties:
            self:
              description: A URI that can be used to retrieve the resource.
              example: https://api.digitalocean.com/v2/droplets/13457723
              format: uri
              type: string
          type: object
        status:
          description: The status of assigning and fetching the resources.
          enum:
            - ok
            - not_found
            - assigned
            - already_assigned
            - service_down
          example: ok
          type: string
        urn:
          $ref: "#/components/schemas/urn"
      type: object
    simple_charge:
      properties:
        amount:
          description: Total amount charged in USD
          example: "3.45"
          type: string
        name:
          description: Name of the charge
          example: Overages
          type: string
      type: object
    size:
      properties:
        available:
          default: true
          description: This is a boolean value that represents whether new Droplets can be created with this size.
          example: true
          title: available
          type: boolean
        disk:
          description: The amount of disk space set aside for Droplets of this size. The value is represented in gigabytes.
          example: 25
          title: disk
          type: integer
        memory:
          description: The amount of RAM allocated to Droplets created of this size. The value is represented in megabytes.
          example: 1024
          minimum: 8
          multipleOf: 8
          title: memory
          type: integer
        price_hourly:
          description: This describes the price of the Droplet size as measured hourly. The value is measured in US dollars.
          example: 0.00743999984115362
          format: float
          title: price_hourly
          type: number
        price_monthly:
          description: This attribute describes the monthly cost of this Droplet size if the Droplet is kept for an entire month. The value is measured in US dollars.
          example: 5
          format: float
          title: price_monthly
          type: number
        regions:
          description: An array containing the region slugs where this size is available for Droplet creates.
          example:
            - ams2
            - ams3
            - blr1
            - fra1
            - lon1
            - nyc1
            - nyc2
            - nyc3
            - sfo1
            - sfo2
            - sfo3
            - sgp1
            - tor1
          items:
            type: string
          title: regions
          type: array
        slug:
          description: A human-readable string that is used to uniquely identify each size.
          example: s-1vcpu-1gb
          title: slug
          type: string
        transfer:
          description: The amount of transfer bandwidth that is available for Droplets created in this size. This only counts traffic on the public interface. The value is given in terabytes.
          example: 1
          format: float
          title: transfer
          type: number
        vcpus:
          description: The integer of number CPUs allocated to Droplets of this size.
          example: 1
          title: vcpus
          type: integer
      required:
        - available
        - disk
        - memory
        - price_hourly
        - price_monthly
        - regions
        - slug
        - transfer
        - vcpus
      type: object
    slug:
      description: A human-readable string that is used as a unique identifier for each region.
      example: nyc3
      type: string
    snapshot:
      allOf:
        - properties:
            id:
              description: The unique identifier for the snapshot.
              example: "6372321"
              type: string
          required:
            - id
          type: object
        - $ref: "#/components/schemas/snapshot_base"
        - properties:
            resource_id:
              description: The unique identifier for the resource that the snapshot originated from.
              example: "200776916"
              type: string
            resource_type:
              description: The type of resource that the snapshot originated from.
              enum:
                - droplet
                - volume
              example: droplet
              type: string
            tags:
              description: An array of Tags the snapshot has been tagged with.
              example:
                - web
                - env:prod
              items:
                type: string
              nullable: true
              type: array
          required:
            - resource_id
            - resource_type
            - tags
          type: object
    snapshot_base:
      properties:
        created_at:
          description: A time value given in ISO8601 combined date and time format that represents when the snapshot was created.
          example: 2020-07-28T16:47:44Z
          format: date-time
          type: string
        min_disk_size:
          description: The minimum size in GB required for a volume or Droplet to use this snapshot.
          example: 25
          type: integer
        name:
          description: A human-readable name for the snapshot.
          example: web-01-1595954862243
          type: string
        regions:
          description: An array of the regions that the snapshot is available in. The regions are represented by their identifying slug values.
          example:
            - nyc3
            - sfo3
          items:
            type: string
          type: array
        size_gigabytes:
          description: The billable size of the snapshot in gigabytes.
          example: 2.34
          format: float
          type: number
      required:
        - name
        - created_at
        - regions
        - min_disk_size
        - size_gigabytes
      type: object
    sql_mode:
      properties:
        sql_mode:
          description: A string specifying the configured SQL modes for the MySQL cluster.
          example: ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,STRICT_ALL_TABLES
          type: string
      required:
        - sql_mode
      type: object
    ssh_key:
      properties:
        fingerprint:
          $ref: "#/components/schemas/ssh_key_fingerprint"
        id:
          $ref: "#/components/schemas/ssh_key_id"
        name:
          $ref: "#/components/schemas/ssh_key_name"
        public_key:
          description: The entire public key string that was uploaded. Embedded into the root user's `authorized_keys` file if you include this key during Droplet creation.
          example: ssh-rsa AEXAMPLEaC1yc2EAAAADAQABAAAAQQDDHr/jh2Jy4yALcK4JyWbVkPRaWmhck3IgCoeOO3z1e2dBowLh64QAM+Qb72pxekALga2oi4GvT+TlWNhzPH4V example
          type: string
      required:
        - public_key
        - name
      type: object
    ssh_key_fingerprint:
      description: A unique identifier that differentiates this key from other keys using  a format that SSH recognizes. The fingerprint is created when the key is added to your account.
      example: 3b:16:bf:e4:8b:00:8b:b8:59:8c:a9:d3:f0:19:45:fa
      readOnly: true
      type: string
    ssh_key_id:
      description: A unique identification number for this key. Can be used to embed a  specific SSH key into a Droplet.
      example: 512189
      readOnly: true
      type: integer
    ssh_key_name:
      description: A human-readable display name for this key, used to easily identify the SSH keys when they are displayed.
      example: My SSH Public Key
      type: string
    sticky_sessions:
      description: An object specifying sticky sessions settings for the load balancer.
      properties:
        cookie_name:
          description: The name of the cookie sent to the client. This attribute is only returned when using `cookies` for the sticky sessions type.
          example: DO-LB
          type: string
        cookie_ttl_seconds:
          description: The number of seconds until the cookie set by the load balancer expires. This attribute is only returned when using `cookies` for the sticky sessions type.
          example: 300
          type: integer
        type:
          default: none
          description: An attribute indicating how and if requests from a client will be persistently served by the same backend Droplet. The possible values are `cookies` or `none`.
          enum:
            - cookies
            - none
          example: cookies
          type: string
      type: object
    subscription:
      properties:
        created_at:
          description: The time at which the subscription was created.
          example: 2020-01-23T21:19:12Z
          format: date-time
          readOnly: true
          type: string
        tier:
          $ref: "#/components/schemas/subscription_tier_base"
        updated_at:
          description: The time at which the subscription was last updated.
          example: 2020-11-05T15:53:24Z
          format: date-time
          readOnly: true
          type: string
      type: object
    subscription_tier_base:
      properties:
        allow_storage_overage:
          description: A boolean indicating whether the subscription tier supports additional storage above what is included in the base plan at an additional cost per GiB used.
          example: true
          type: boolean
        included_bandwidth_bytes:
          description: The amount of outbound data transfer included in the subscription tier in bytes.
          example: 5368709120
          type: integer
        included_repositories:
          description: The number of repositories included in the subscription tier. `0` indicates that the subscription tier includes unlimited repositories.
          example: 5
          type: integer
        included_storage_bytes:
          description: The amount of storage included in the subscription tier in bytes.
          example: 5368709120
          type: integer
        monthly_price_in_cents:
          description: The monthly cost of the subscription tier in cents.
          example: 500
          type: integer
        name:
          description: The name of the subscription tier.
          example: Basic
          type: string
        slug:
          description: The slug identifier of the subscription tier.
          example: basic
          type: string
      type: object
    subscription_tier_extended:
      properties:
        eligibility_reasons:
          description: If your account is not eligible to use a certain subscription tier, this will include a list of reasons that prevent you from using the tier.
          example:
            - OverRepositoryLimit
          items:
            enum:
              - OverRepositoryLimit
              - OverStorageLimit
            type: string
          type: array
        eligible:
          description: A boolean indicating whether your account it eligible to use a certain subscription tier.
          example: true
          type: boolean
      type: object
    tag:
      description: >-
        A tag is a label that can be applied to a resource (currently Droplets, Images, Volumes, Volume Snapshots, and Database clusters)  in order to better organize or facilitate the lookups and actions on it.

        Tags have two attributes: a user defined `name` attribute and an embedded `resources` attribute with information about resources that have been tagged.
      properties:
        name:
          description: >
            The name of the tag. Tags may contain letters, numbers, colons, dashes, and underscores. 

            There is a limit of 255 characters per tag.  


            **Note:** Tag names are case stable, which means the capitalization you use when you first create a tag is canonical.


            When working with tags in the API, you must use the tag's canonical capitalization. For example, if you create a tag named "PROD", the URL to add that tag to a resource would be `https://api.digitalocean.com/v2/tags/PROD/resources` (not `/v2/tags/prod/resources`).


            Tagged resources in the control panel will always display the canonical capitalization. For example, if you create a tag named "PROD", you can tag resources in the control panel by entering "prod". The tag will still display with its canonical capitalization, "PROD".
          example: extra-awesome
          pattern: ^[\w-:]+$
          type: string
        resources:
          allOf:
            - $ref: "#/components/schemas/tag_metadata"
            - properties:
                databases:
                  $ref: "#/components/schemas/tag_metadata"
                droplets:
                  $ref: "#/components/schemas/tag_metadata"
                imgages:
                  $ref: "#/components/schemas/tag_metadata"
                volume_snapshots:
                  $ref: "#/components/schemas/tag_metadata"
                volumes:
                  $ref: "#/components/schemas/tag_metadata"
          description: An embedded object containing key value pairs of resource type and resource statistics.  It also includes a count of the total number of resources tagged with the current tag as well as a `last_tagged_uri` attribute set to the last resource tagged with the current tag.
          example:
            count: 5
            databases:
              count: 1
              last_tagged_uri: https://api.digitalocean.com/v2/databases/b92438f6-ba03-416c-b642-e9236db91976
            droplets:
              count: 1
              last_tagged_uri: https://api.digitalocean.com/v2/droplets/3164444
            images:
              count: 1
              last_tagged_uri: https://api.digitalocean.com/v2/images/7555620
            last_tagged_uri: https://api.digitalocean.com/v2/images/7555620
            volume_snapshots:
              count: 1
              last_tagged_uri: https://api.digitalocean.com/v2/snapshots/1f6f46e8-6b60-11e9-be4e-0a58ac144519
            volumes:
              count: 1
              last_tagged_uri: https://api.digitalocean.com/v2/volumes/3d80cb72-342b-4aaa-b92e-4e4abb24a933
          readOnly: true
          type: object
      type: object
    tag_metadata:
      description: Tagged Resource Statistics include metadata regarding the resource type that has been tagged.
      properties:
        count:
          description: The number of tagged objects for this type of resource.
          example: 5
          minimum: 0
          type: integer
        last_tagged_uri:
          description: The URI for the last tagged object for this type of resource.
          example: https://api.digitalocean.com/v2/images/7555620
          type: string
      type: object
    tag_resource:
      properties:
        resources:
          description: An array of objects containing resource_id and resource_type  attributes.
          example:
            - resource_id: "9569411"
              resource_type: droplet
            - resource_id: "7555620"
              resource_type: image
            - resource_id: 3d80cb72-342b-4aaa-b92e-4e4abb24a933
              resource_type: volume
          items:
            properties:
              resource_id:
                description: The identifier of a resource.
                example: 3d80cb72-342b-4aaa-b92e-4e4abb24a933
                type: string
              resource_type:
                description: The type of the resource.
                enum:
                  - droplet
                  - image
                  - volume
                  - volume_snapshot
                example: volume
                type: string
          type: array
      required:
        - resources
      type: object
    tags_array:
      description: A flat array of tag names as strings to be applied to the resource. Tag names may be for either existing or new tags.
      example:
        - base-image
        - prod
      items:
        type: string
      type: array
    update_registry:
      properties:
        cancel:
          description: A boolean value indicating that the garbage collection should be cancelled.
          example: true
          type: boolean
      type: object
    urn:
      description: The uniform resource name (URN) for the resource in the format do:resource_type:resource_id.
      example: do:droplet:13457723
      pattern: ^do:(dbaas|domain|droplet|floatingip|loadbalancer|space|volume|kubernetes|vpc):.*
      type: string
    user:
      properties:
        kubernetes_cluster_user:
          properties:
            groups:
              description: A list of in-cluster groups that the user belongs to.
              example:
                - k8saas:authenticated
              items:
                type: string
              type: array
            username:
              description: The username for the cluster admin user.
              example: sammy@digitalocean.com
              format: email
              type: string
          type: object
      type: object
    volume_action:
      allOf:
        - properties:
            resource_id:
              example: null
              nullable: true
              type: integer
            type:
              description: This is the type of action that the object represents. For example, this could be "attach_volume" to represent the state of a volume attach action.
              example: attach_volume
              type: string
        - $ref: "#/components/schemas/action"
      type: object
    volume_action_droplet_id:
      description: The unique identifier for the Droplet the volume will be attached or detached from.
      example: 11612190
      type: integer
    volume_action_post_attach:
      allOf:
        - $ref: "#/components/schemas/volume_action_post_base"
        - properties:
            droplet_id:
              $ref: "#/components/schemas/volume_action_droplet_id"
            tags:
              $ref: "#/components/schemas/tags_array"
          required:
            - droplet_id
      type: object
    volume_action_post_base:
      properties:
        region:
          $ref: "#/components/schemas/region_slug"
        type:
          description: The volume action to initiate.
          enum:
            - attach
            - detach
            - resize
          example: attach
          type: string
      required:
        - type
      type: object
    volume_action_post_detach:
      allOf:
        - $ref: "#/components/schemas/volume_action_post_base"
        - properties:
            droplet_id:
              $ref: "#/components/schemas/volume_action_droplet_id"
          required:
            - droplet_id
      type: object
    volume_action_post_resize:
      allOf:
        - $ref: "#/components/schemas/volume_action_post_base"
        - properties:
            size_gigabytes:
              description: The new size of the block storage volume in GiB (1024^3).
              maximum: 16384
              type: integer
          required:
            - size_gigabytes
      type: object
    volume_base:
      properties:
        created_at:
          description: A time value given in ISO8601 combined date and time format that represents when the block storage volume was created.
          example: 2020-03-02T17:00:49.000Z
          readOnly: true
          type: string
        description:
          description: An optional free-form text field to describe a block storage volume.
          example: Block store for examples
          type: string
        droplet_ids:
          description: An array containing the IDs of the Droplets the volume is attached to. Note that at this time, a volume can only be attached to a single Droplet.
          example: []
          items:
            type: integer
          readOnly: true
          type: array
        id:
          description: The unique identifier for the block storage volume.
          example: 506f78a4-e098-11e5-ad9f-000f53306ae1
          readOnly: true
          type: string
        name:
          description: A human-readable name for the block storage volume. Must be lowercase and be composed only of numbers, letters and "-", up to a limit of 64 characters. The name must begin with a letter.
          example: example
          type: string
        size_gigabytes:
          description: The size of the block storage volume in GiB (1024^3).
          example: 10
          type: integer
        tags:
          $ref: "#/components/schemas/tags_array"
      type: object
    volume_full:
      allOf:
        - $ref: "#/components/schemas/volume_base"
        - properties:
            filesystem_label:
              description: The label currently applied to the filesystem.
              example: example
              type: string
            filesystem_type:
              description: The type of filesystem currently in-use on the volume.
              example: ext4
              type: string
            region:
              allOf:
                - description: The region that the block storage volume is located in. When setting a region, the value should be the slug identifier for the region. When you query a block storage volume, the entire region object will be returned.
                - $ref: "#/components/schemas/region"
              example:
                available: true
                features:
                  - private_networking
                  - backups
                  - ipv6
                  - metadata
                name: New York 1
                sizes:
                  - s-1vcpu-1gb
                  - s-1vcpu-2gb
                  - s-1vcpu-3gb
                  - s-2vcpu-2gb
                  - s-3vcpu-1gb
                  - s-2vcpu-4gb
                  - s-4vcpu-8gb
                  - s-6vcpu-16gb
                  - s-8vcpu-32gb
                  - s-12vcpu-48gb
                  - s-16vcpu-64gb
                  - s-20vcpu-96gb
                  - s-24vcpu-128gb
                  - s-32vcpu-192gb
                slug: nyc1
              readOnly: true
      type: object
    volume_write_file_system_label:
      description: The label applied to the filesystem. Labels for ext4 type filesystems may contain 16 characters while lables for xfs type filesystems are limited to 12 characters. May only be used in conjunction with filesystem_type.
      example: example
      type: string
    volume_write_file_system_type:
      description: The name of the filesystem type to be used on the volume. When provided, the volume will automatically be formatted to the specified filesystem type. Currently, the available options are `ext4` and `xfs`. Pre-formatted volumes are automatically mounted when attached to Ubuntu, Debian, Fedora, Fedora Atomic, and CentOS Droplets created on or after April 26, 2018. Attaching pre-formatted volumes to other Droplets is not recommended.
      enum:
        - ext4
        - xfs
      example: ext4
      type: string
    vpc:
      allOf:
        - $ref: "#/components/schemas/vpc_updatable"
        - $ref: "#/components/schemas/vpc_create"
        - $ref: "#/components/schemas/vpc_default"
        - $ref: "#/components/schemas/vpc_base"
      type: object
    vpc_base:
      properties:
        created_at:
          description: A time value given in ISO8601 combined date and time format.
          example: 2020-03-13T19:20:47.442049222Z
          format: date-time
          readOnly: true
          type: string
        id:
          description: A unique ID that can be used to identify and reference the VPC.
          example: 5a4981aa-9653-4bd1-bef5-d6bff52042e4
          format: uuid
          readOnly: true
          type: string
        urn:
          $ref: "#/components/schemas/urn"
      type: object
    vpc_create:
      properties:
        ip_range:
          description: The range of IP addresses in the VPC in CIDR notation. Network ranges cannot overlap with other networks in the same account and must be in range of private addresses as defined in RFC1918. It may not be smaller than `/24` nor larger than `/16`. If no IP range is specified, a `/20` network range is generated that won't conflict with other VPC networks in your account.
          example: 10.10.10.0/24
          type: string
        region:
          description: The slug identifier for the region where the VPC will be created.
          example: nyc1
          type: string
      type: object
    vpc_default:
      properties:
        default:
          description: A boolean value indicating whether or not the VPC is the default network for the region. All applicable resources are placed into the default VPC network unless otherwise specified during their creation. The `default` field cannot be unset from `true`. If you want to set a new default VPC network, update the `default` field of another VPC network in the same region. The previous network's `default` field will be set to `false` when a new default VPC has been defined.
          example: true
          type: boolean
      type: object
    vpc_member:
      properties:
        created_at:
          description: A time value given in ISO8601 combined date and time format that represents when the resource was created.
          example: 2020-03-13T19:30:48Z
          type: string
        name:
          description: The name of the resource.
          example: nyc1-load-balancer-01
          type: string
        urn:
          $ref: "#/components/schemas/urn"
      type: object
    vpc_updatable:
      properties:
        description:
          description: A free-form text field for describing the VPC's purpose. It may be a maximum of 255 characters.
          example: VPC for production environment
          maxLength: 255
          type: string
        name:
          description: The name of the VPC. Must be unique and may only contain alphanumeric characters, dashes, and periods.
          example: env.prod-vpc
          pattern: ^[a-zA-Z1-9\-\.]+$
          type: string
      type: object
  securitySchemes:
    bearer_auth:
      scheme: bearer
      type: http
