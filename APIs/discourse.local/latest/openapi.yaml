openapi: 3.0.3
servers:
  - url: https://discourse.example.com
x-hasEquivalentPaths: true
info:
  description: >
    This page contains the documentation on how to use Discourse through API calls.


    > Note: This documentation is not complete, so for missing parts you may have to

    [reverse engineer the Discourse API](https://meta.discourse.org/t/how-to-reverse-engineer-the-discourse-api/20576) to figure out how to use an API endpoint.


    ### Request Content-Type


    The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`,

    `multipart/form-data`, or `application/json`.


    ### Endpoint Names and Response Content-Type


    Most API endpoints provide the same content as their HTML counterparts. For example

    the URL `/categories` serves a list of categories, the `/categories.json` API provides the

    same information in JSON format.


    Instead of sending API requests to `/categories.json` you may also send them to `/categories`

    and add an `Accept: application/json` header to the request to get the JSON response.

    Sending requests with the `Accept` header is necessary if you want to use URLs

    for related endpoints returned by the API, such as pagination URLs.

    These URLs are returned without the `.json` prefix so you need to add the header in

    order to get the correct response format.


    ### Authentication


    Some endpoints do not require any authentication, pretty much anything else will

    require you to be authenticated.


    To become authenticated you will need to create an API Key from the admin panel.


    Once you have your API Key you can pass it in along with your API Username

    as an HTTP header like this:


    ```

    curl -X GET "http://127.0.0.1:3000/admin/users/list/active.json" \

    -H "Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19" \

    -H "Api-Username: system"

    ```


    and this is how POST requests will look:


    ```

    curl -X POST "http://127.0.0.1:3000/categories" \

    -H "Content-Type: multipart/form-data;" \

    -H "Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19" \

    -H "Api-Username: system" \

    -F "name=89853c20-4409-e91a-a8ea-f6cdff96aaaa" \

    -F "color=49d9e9" \

    -F "text_color=f0fcfd"

    ```


    ### Boolean values


    If an endpoint accepts a boolean be sure to specify it as a lowercase

    `true` or `false` value unless noted otherwise.
  title: Discourse API Documentation
  version: latest
  x-apisguru-categories:
    - social
  x-logo:
    url: https://discourse-meta.s3-us-west-1.amazonaws.com/optimized/3X/9/d/9d543e92b15b06924249654667a81441a55867eb_1_690x184.png
  x-origin:
    - format: openapi
      url: http://docs.discourse.org/openapi.json
      version: "3.0"
  x-providerName: discourse.local
paths:
  /about.json:
    get:
      description: fetch about page data
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  about:
                    properties:
                      admins:
                        items:
                          properties:
                            avatar_template:
                              type: string
                            id:
                              type: integer
                            name:
                              type: string
                            title:
                              type: string
                            username:
                              type: string
                          type: object
                        type: array
                      description:
                        type: string
                      https:
                        type: boolean
                      locale:
                        type: string
                      moderators:
                        items:
                          properties:
                            avatar_template:
                              type: string
                            id:
                              type: integer
                            name:
                              type: string
                            title:
                              type: string
                            username:
                              type: string
                          type: object
                        type: array
                      stats:
                        type: object
                      title:
                        type: string
                      version:
                        type: string
                    type: object
                type: object
          description: about page data response
      tags:
        - About
  /admin/api/keys:
    post:
      description: Generate an api_key for a user
      requestBody:
        content:
          application/json:
            schema:
              properties:
                key:
                  properties:
                    description:
                      type: string
                    username:
                      type: string
                  required:
                    - username
                  type: object
              required:
                - key
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  api_key:
                    properties:
                      id:
                        type: number
                      key:
                        minLength: 1
                        type: string
                      user:
                        properties:
                          avatar_template:
                            minLength: 1
                            type: string
                          id:
                            type: number
                          username:
                            minLength: 1
                            type: string
                        required:
                          - id
                          - username
                          - avatar_template
                        type: object
                    required:
                      - id
                      - key
                      - user
                    type: object
                type: object
          description: generate api key response
      tags:
        - Admin
  /admin/api/web_hooks:
    post:
      description: create a web hook
      requestBody:
        content:
          application/json:
            schema:
              properties:
                active:
                  type: boolean
                category_ids:
                  items: {}
                  type: array
                content_type:
                  type: integer
                group_ids:
                  items: {}
                  type: array
                payload_url:
                  type: string
                secret:
                  type: string
                verify_certificate:
                  type: boolean
                web_hook_event_type_ids:
                  items: {}
                  type: array
                wildcard_web_hook:
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  web_hook:
                    properties:
                      active:
                        type: boolean
                      category_ids:
                        items: {}
                        type: array
                      content_type:
                        type: integer
                      group_ids:
                        items: {}
                        type: array
                      id:
                        type: integer
                      last_delivery_status:
                        type: integer
                      payload_url:
                        type: string
                      secret:
                        type: string
                      verify_certificate:
                        type: string
                      web_hook_event_types:
                        items:
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                          type: object
                        type: array
                      wildcard_web_hook:
                        type: boolean
                    type: object
                type: object
          description: create a web hook response
      tags:
        - Web Hooks
  /admin/backups.json:
    get:
      description: get a list of backups
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    filename:
                      type: string
                    link:
                      type: string
                    size:
                      type: integer
                  type: object
                type: array
          description: '"List of backups response. NOTE: Backups link urls cannot be called directly." "Please create a PUT request to download a backup."'
      tags:
        - Backups
    post:
      description: create a backup
      requestBody:
        content:
          application/json:
            schema:
              properties:
                with_uploads:
                  example: true
                  type: boolean
              required:
                - with_uploads
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    example: OK
                    type: string
                type: object
          description: create a backup response
      tags:
        - Backups
  /admin/backups/readonly:
    put:
      description: update readonly mode
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable:
                  example: false
                  type: boolean
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Backups
  "/admin/backups/{filename}":
    put:
      description: Download a backup. Sends an email to the account specified by your api_username with a link and token to download the backup.
      parameters:
        - example: discourse-2018-02-22-075414-v20180127005644.tar.gz
          in: path
          name: filename
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Send an email to download backup response
      tags:
        - Backups
  /admin/badges.json:
    get:
      description: get a list of badges
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  admin_badges:
                    properties:
                      protected_system_fields:
                        items:
                          type: string
                        type: array
                    type: object
                  badge_grouping_ids:
                    items:
                      type: number
                    type: array
                  badge_groupings:
                    items:
                      properties:
                        description:
                          type: string
                        id:
                          type: number
                        name:
                          type: number
                        position:
                          type: number
                        system:
                          type: boolean
                    type: array
                  badge_ids:
                    items:
                      type: number
                    type: array
                  badge_type_ids:
                    items:
                      type: number
                    type: array
                  badge_types:
                    items:
                      properties:
                        id:
                          type: number
                        name:
                          type: string
                        sort_order:
                          type: number
                    type: array
                  badges:
                    items:
                      properties:
                        allow_title:
                          type: boolean
                        auto_revoke:
                          type: boolean
                        badge_grouping_id:
                          type: number
                        badge_type_id:
                          type: number
                        description:
                          type: string
                        enabled:
                          type: boolean
                        grant_count:
                          type: number
                        icon:
                          type: string
                        id:
                          type: number
                        image:
                          type: string
                        listable:
                          type: boolean
                        long_description:
                          type: string
                        multiple_grant:
                          type: boolean
                        name:
                          type: string
                        query:
                          type: string
                        show_posts:
                          type: boolean
                        slug:
                          type: string
                        system:
                          type: boolean
                        target_posts:
                          type: boolean
                        trigger:
                          type: number
                    type: array
                  triggers:
                    properties:
                      none:
                        type: number
                      post_action:
                        type: number
                      post_processed:
                        type: number
                      post_revision:
                        type: number
                      trust_level_change:
                        type: number
                      user_change:
                        type: number
                    type: object
                type: object
          description: list of badges response
      tags:
        - Badges
    post:
      description: create a badge
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow_title:
                  type: boolean
                auto_revoke:
                  type: boolean
                badge_grouping_id:
                  type: integer
                badge_type_id:
                  type: integer
                description:
                  type: string
                enabled:
                  type: boolean
                icon:
                  type: string
                image:
                  type: string
                listable:
                  type: boolean
                long_description:
                  type: string
                multiple_grant:
                  type: boolean
                name:
                  type: string
                show_posts:
                  type: boolean
                target_posts:
                  type: boolean
              type: object
      responses:
        "200":
          description: create a badge response
      tags:
        - Badges
  /admin/customize/email_templates.json:
    get:
      description: Show list of email templates
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  email_templates:
                    items:
                      properties:
                        body:
                          type: string
                        can_revert:
                          type: boolean
                        id:
                          type: string
                        subject:
                          type: string
                        title:
                          type: string
                      type: object
                    type: array
                type: object
          description: show email templates response
      tags:
        - Admin Emails
  /admin/customize/user_fields.json:
    get:
      description: list user fields
      responses:
        "200":
          description: list user fields response
      tags:
        - User Fields
    post:
      description: create a user fields
      requestBody:
        content:
          application/json:
            schema:
              properties:
                "user_field[description]":
                  type: string
                "user_field[field_type]":
                  type: string
                "user_field[name]":
                  type: string
                "user_field[required]":
                  type: boolean
              type: object
      responses:
        "200":
          description: create a user_fields response
      tags:
        - User Fields
  "/admin/customize/user_fields/{id}":
    delete:
      description: delete a user field
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    example: OK
                    type: string
                type: object
          description: delete a user field response
      tags:
        - User Fields
  /admin/email.json:
    get:
      description: Show email settings
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  delivery_method:
                    example: smtp
                    type: string
                  settings:
                    items:
                      properties:
                        name:
                          example: address
                          type: string
                        value:
                          example: localhost
                          type: string
                      type: object
                    type: array
                type: object
          description: email settings response
      tags:
        - Admin Emails
  "/admin/emails/{action}.json":
    get:
      description: get a list of emails
      parameters:
        - example: sent
          in: path
          name: action
          required: true
          schema:
            enum:
              - sent
              - skipped
              - bounced
              - received
              - rejected
            type: string
        - example: 0
          in: query
          name: offset
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    bounced:
                      example: false
                      type: boolean
                    created_at:
                      type: string
                    email_type:
                      type: string
                    id:
                      type: integer
                    reply_key:
                      type: string
                    skipped:
                      example: false
                      type: boolean
                    to_address:
                      type: string
                    user:
                      type: object
                    user_id:
                      type: integer
                  type: object
                type: array
          description: list of emails response
      tags:
        - Emails
  "/admin/flags/{type}.json":
    get:
      description: get a list of flags
      parameters:
        - example: active
          in: path
          name: type
          required: true
          schema:
            enum:
              - active
              - old
        - example: 0
          in: query
          name: offset
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  posts:
                    items: {}
                    type: array
                  topics:
                    items: {}
                    type: array
                  users:
                    items: {}
                    type: array
                type: object
          description: list of flags response
      tags:
        - Flags
  /admin/groups:
    post:
      description: Create a group
      requestBody:
        content:
          application/json:
            schema:
              properties:
                "group[name]":
                  type: string
              required:
                - group[name]
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  basic_group:
                    properties:
                      alias_level:
                        type: number
                      automatic:
                        type: boolean
                      automatic_membership_email_domains:
                        type: object
                      automatic_membership_retroactive:
                        type: boolean
                      flair_bg_color:
                        type: object
                      flair_color:
                        type: object
                      flair_url:
                        type: object
                      grant_trust_level:
                        type: object
                      has_messages:
                        type: boolean
                      id:
                        type: number
                      incoming_email:
                        type: object
                      is_member:
                        type: boolean
                      mentionable:
                        type: boolean
                      name:
                        minLength: 1
                        type: string
                      notification_level:
                        type: object
                      primary_group:
                        type: boolean
                      title:
                        type: object
                      user_count:
                        type: number
                      visible:
                        type: boolean
                    required:
                      - id
                      - automatic
                      - name
                      - user_count
                      - alias_level
                      - visible
                      - automatic_membership_retroactive
                      - primary_group
                      - has_messages
                      - is_member
                      - mentionable
                    type: object
                type: object
          description: create group response
      tags:
        - Admin
        - Groups
  "/admin/groups/{group_id}.json":
    delete:
      description: Delete a group
      parameters:
        - in: path
          name: group_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: string
                type: object
          description: delete group response
      tags:
        - Admin
        - Groups
  /admin/logs/staff_action_logs.json:
    get:
      description: get staff action logs
      parameters:
        - in: query
          name: action_name
          required: false
          schema:
            type: string
        - in: query
          name: action_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  staff_action_logs:
                    properties:
                      acting_user:
                        properties:
                          avatar_template:
                            type: string
                          id:
                            type: integer
                          username:
                            type: string
                        type: object
                      action:
                        type: integer
                      action_name:
                        type: string
                      category_id:
                        type: integer
                      context:
                        type: string
                      created_at:
                        type: string
                      custom_type:
                        type: string
                      details:
                        type: string
                      email:
                        type: string
                      id:
                        type: integer
                      ip_address:
                        type: string
                      new_value:
                        type: string
                      post_id:
                        type: integer
                      previous_value:
                        type: string
                      subject:
                        type: string
                      topic_id:
                        type: integer
                    type: object
                  user_history_actions:
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                    type: object
                type: object
          description: staff action logs response
      tags:
        - Logs
  /admin/plugins:
    get:
      description: get a list of installed plugins
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  plugins:
                    items:
                      properties:
                        enabled:
                          type: boolean
                        enabled_setting:
                          type: string
                        id:
                          type: string
                        name:
                          type: string
                        url:
                          type: string
                        version:
                          type: string
                      type: object
                    type: array
                type: object
          description: plugin list response
      tags:
        - Plugins
  /admin/site_settings.json:
    get:
      description: Show site settings
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  diags:
                    properties:
                      last_message_processed:
                        type: object
                    type: object
                  site_settings:
                    items:
                      properties:
                        category:
                          minLength: 1
                          type: string
                        choices:
                          items:
                            type: object
                          type: array
                        default:
                          minLength: 1
                          type: string
                        description:
                          minLength: 1
                          type: string
                        preview:
                          minLength: 1
                          type: string
                        setting:
                          minLength: 1
                          type: string
                        translate_names:
                          type: boolean
                        type:
                          minLength: 1
                          type: string
                        valid_values:
                          items:
                            properties:
                              name:
                                minLength: 1
                                type: string
                              value:
                                minLength: 1
                                type: string
                            required:
                              - name
                              - value
                          minItems: 1
                          type: array
                          uniqueItems: true
                        value:
                          minLength: 1
                          type: string
                      required:
                        - setting
                        - description
                        - default
                        - type
                        - value
                        - category
                        - preview
                        - translate_names
                    minItems: 1
                    type: array
                    uniqueItems: true
                type: object
          description: show site settings response
      tags:
        - Admin
  /admin/site_settings/active_user_rate_limit_secs:
    put:
      description: active user rate limit secs
      requestBody:
        content:
          application/json:
            schema:
              properties:
                active_user_rate_limit_secs:
                  description: "\"How frequently we update the 'last_seen_at' field, in seconds\""
                  example: 60
                  type: integer
              required:
                - active_user_rate_limit_secs
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Developer
  /admin/site_settings/add_rel_nofollow_to_user_content:
    put:
      description: add rel nofollow to user content
      requestBody:
        content:
          application/json:
            schema:
              properties:
                add_rel_nofollow_to_user_content:
                  description: "'Add rel nofollow to all submitted user content, except for internal links (including parent domains). If you change this, you must rebake all posts with: \"rake posts:rebake\"'"
                  example: true
                  type: boolean
              required:
                - add_rel_nofollow_to_user_content
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/alert_admins_if_errors_per_hour:
    put:
      description: alert admins if errors per hour
      requestBody:
        content:
          application/json:
            schema:
              properties:
                alert_admins_if_errors_per_hour:
                  description: '"Number of errors per hour in order to trigger an admin alert. A value of 0 disables this feature. NOTE: requires restart."'
                  example: 0
                  type: integer
              required:
                - alert_admins_if_errors_per_hour
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Rate Limits
  /admin/site_settings/alert_admins_if_errors_per_minute:
    put:
      description: alert admins if errors per minute
      requestBody:
        content:
          application/json:
            schema:
              properties:
                alert_admins_if_errors_per_minute:
                  description: '"Number of errors per minute in order to trigger an admin alert. A value of 0 disables this feature. NOTE: requires restart."'
                  example: 0
                  type: integer
              required:
                - alert_admins_if_errors_per_minute
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Rate Limits
  /admin/site_settings/allow_all_attachments_for_group_messages:
    put:
      description: allow all attachments for group messages
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow_all_attachments_for_group_messages:
                  description: '"Allow all email attachments for group messages."'
                  example: false
                  type: boolean
              required:
                - allow_all_attachments_for_group_messages
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/allow_animated_avatars:
    put:
      description: allow animated avatars
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow_animated_avatars:
                  description: '"Allow users to use animated gif profile pictures. WARNING: run the avatars:refresh rake task after changing this setting."'
                  example: false
                  type: boolean
              required:
                - allow_animated_avatars
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/allow_animated_thumbnails:
    put:
      description: allow animated thumbnails
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow_animated_thumbnails:
                  description: '"Generate animated thumbnails of animated gifs."'
                  example: true
                  type: boolean
              required:
                - allow_animated_thumbnails
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/allow_anonymous_posting:
    put:
      description: allow anonymous posting
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow_anonymous_posting:
                  type: boolean
              required:
                - allow_anonymous_posting
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/allow_duplicate_topic_titles:
    put:
      description: allow duplicate topic titles
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow_duplicate_topic_titles:
                  type: boolean
              required:
                - allow_duplicate_topic_titles
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/allow_html_tables:
    put:
      description: allow html tables
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow_html_tables:
                  type: boolean
              required:
                - allow_html_tables
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/allow_index_in_robots_txt:
    put:
      description: allow index in robots txt
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow_index_in_robots_txt:
                  description: '"Specify in robots.txt that this site is allowed to be indexed by web search engines."'
                  example: true
                  type: boolean
              required:
                - allow_index_in_robots_txt
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Security
  /admin/site_settings/allow_moderators_to_create_categories:
    put:
      description: allow moderators to create categories
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow_moderators_to_create_categories:
                  description: '"Allow moderators to create new categories"'
                  example: false
                  type: boolean
              required:
                - allow_moderators_to_create_categories
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Security
  /admin/site_settings/allow_new_registrations:
    put:
      description: Update allow new registrations
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow_new_registrations:
                  type: boolean
              required:
                - allow_new_registrations
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/allow_profile_backgrounds:
    put:
      description: allow profile backgrounds
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow_profile_backgrounds:
                  description: '"Allow users to upload profile backgrounds."'
                  example: true
                  type: boolean
              required:
                - allow_profile_backgrounds
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/allow_restore:
    put:
      description: allow_restore
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow_restore:
                  description: '"Allow restore, which can replace ALL site data! Leave false unless you plan to restore a backup"'
                  example: false
                  type: boolean
              required:
                - allow_restore
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Backups
  /admin/site_settings/allow_uncategorized_topics:
    put:
      description: allow uncategorized topics
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow_uncategorized_topics:
                  type: boolean
              required:
                - allow_uncategorized_topics
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/allow_uploaded_avatars:
    put:
      description: allow uploaded avatars
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow_uploaded_avatars:
                  description: '"Allow users to upload custom profile pictures."'
                  example: true
                  type: boolean
              required:
                - allow_uploaded_avatars
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/allow_uppercase_posts:
    put:
      description: allow_uppercase_posts
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow_uppercase_posts:
                  type: boolean
              required:
                - allow_uppercase_posts
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/allow_user_api_key_scopes:
    put:
      description: '"allow user api key scopes"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow_user_api_key_scopes:
                  description: '"List of scopes allowed for user API keys"'
                  example: read|write|message_bus|push|notifications|session_info
                  type: string
              required:
                - allow_user_api_key_scopes
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User API
  /admin/site_settings/allow_user_api_keys:
    put:
      description: '"allow user api keys"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow_user_api_keys:
                  description: '"Allow generation of user API keys"'
                  example: true
                  type: boolean
              required:
                - allow_user_api_keys
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User API
  /admin/site_settings/allow_user_locale:
    put:
      description: Update allow user locale
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow_user_locale:
                  type: boolean
              required:
                - allow_user_locale
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/allowed_href_schemes:
    put:
      description: allowed href schemes
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allowed_href_schemes:
                  type: string
              required:
                - allowed_href_schemes
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/allowed_user_api_auth_redirects:
    put:
      description: '"allowed user api auth redirects"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allowed_user_api_auth_redirects:
                  description: '"Allowed URL for authentication redirect for user API keys"'
                  example: https://api.discourse.org/api/auth_redirect|discourse://auth_redirect
                  type: string
              required:
                - allowed_user_api_auth_redirects
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User API
  /admin/site_settings/allowed_user_api_push_urls:
    put:
      description: '"allowed user api push urls"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allowed_user_api_push_urls:
                  description: '"Allowed URLs for server push to user API"'
                  example: ""
                  type: string
              required:
                - allowed_user_api_push_urls
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User API
  /admin/site_settings/alternative_reply_by_email_addresses:
    put:
      description: alternative reply by email addresses
      requestBody:
        content:
          application/json:
            schema:
              properties:
                alternative_reply_by_email_addresses:
                  description: List of alternative templates for reply by email incoming email addresses.
                  example: "%{reply_key}@reply.example.com|replies+%{reply_key}@example.com"
                  type: string
              required:
                - alternative_reply_by_email_addresses
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/always_show_trimmed_content:
    put:
      description: always show trimmed content
      requestBody:
        content:
          application/json:
            schema:
              properties:
                always_show_trimmed_content:
                  description: "Always show trimmed part of incoming emails. WARNING: might reveal email addresses."
                  example: false
                  type: boolean
              required:
                - always_show_trimmed_content
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/anon_polling_interval:
    put:
      description: anon polling interval
      requestBody:
        content:
          application/json:
            schema:
              properties:
                anon_polling_interval:
                  description: '"How often should anonymous clients poll in milliseconds"'
                  example: 15000
                  type: integer
              required:
                - anon_polling_interval
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Developer
  /admin/site_settings/anonymous_account_duration_minutes:
    put:
      description: anonymous account duration minutes
      requestBody:
        content:
          application/json:
            schema:
              properties:
                anonymous_account_duration_minutes:
                  type: integer
              required:
                - anonymous_account_duration_minutes
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/anonymous_posting_min_trust_level:
    put:
      description: anonymous posting min trust level
      requestBody:
        content:
          application/json:
            schema:
              properties:
                anonymous_posting_min_trust_level:
                  type: integer
              required:
                - anonymous_posting_min_trust_level
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/apple_touch_icon_url:
    put:
      description: Update the apple touch icon url
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apple_touch_icon_url:
                  type: string
              required:
                - apple_touch_icon_url
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Required
  /admin/site_settings/approve_new_topics_unless_trust_level:
    put:
      description: approve new topics unless trust level
      requestBody:
        content:
          application/json:
            schema:
              properties:
                approve_new_topics_unless_trust_level:
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                  type: integer
              required:
                - approve_new_topics_unless_trust_level
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/approve_post_count:
    put:
      description: approve post count
      requestBody:
        content:
          application/json:
            schema:
              properties:
                approve_post_count:
                  type: integer
              required:
                - approve_post_count
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/approve_unless_trust_level:
    put:
      description: approve unless trust level
      requestBody:
        content:
          application/json:
            schema:
              properties:
                approve_unless_trust_level:
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                  type: integer
              required:
                - approve_unless_trust_level
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/attachment_content_type_blacklist:
    put:
      description: attachment content type blacklist
      requestBody:
        content:
          application/json:
            schema:
              properties:
                attachment_content_type_blacklist:
                  description: Pipe delimited list of keywords used to blacklist attachments based on the content type.
                  example: pkcs7|x-vcard
                  type: string
              required:
                - attachment_content_type_blacklist
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/attachment_filename_blacklist:
    put:
      description: attachment filename blacklist
      requestBody:
        content:
          application/json:
            schema:
              properties:
                attachment_filename_blacklist:
                  description: Pipe delimited list of keywords used to blacklist attachments based on the filename.
                  example: smime.p7s|signature.asc
                  type: string
              required:
                - attachment_filename_blacklist
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/authorized_extensions:
    put:
      description: authorized extensions
      requestBody:
        content:
          application/json:
            schema:
              properties:
                authorized_extensions:
                  description: A pipe delimited list of file extensions allowed for upload (use "*" to enable all file types)
                  example: jpg|jpeg|png|gif
                  type: string
              required:
                - authorized_extensions
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/auto_block_fast_typers_max_trust_level:
    put:
      description: auto block fast typers max trust level
      requestBody:
        content:
          application/json:
            schema:
              properties:
                auto_block_fast_typers_max_trust_level:
                  description: '"Maximum trust level to auto block fast typers"'
                  example: 0
                  type: integer
              required:
                - auto_block_fast_typers_max_trust_level
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/auto_block_fast_typers_on_first_post:
    put:
      description: auto block fast typers on first post
      requestBody:
        content:
          application/json:
            schema:
              properties:
                auto_block_fast_typers_on_first_post:
                  description: '"Automatically block users that do not meet min_first_post_typing_time"'
                  example: true
                  type: boolean
              required:
                - auto_block_fast_typers_on_first_post
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/auto_block_first_post_regex:
    put:
      description: auto block first post regex
      requestBody:
        content:
          application/json:
            schema:
              properties:
                auto_block_first_post_regex:
                  description: '"Case insensitive regex that if passed will cause first post by user to be blocked and sent to approval queue. Example: raging|a[bc]a , will cause all posts containing raging or aba or aca to be blocked on first. Only applies to first post."'
                  example: ""
                  type: string
              required:
                - auto_block_first_post_regex
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/auto_close_messages_post_count:
    put:
      description: auto close messages post count
      requestBody:
        content:
          application/json:
            schema:
              properties:
                auto_close_messages_post_count:
                  type: integer
              required:
                - auto_close_messages_post_count
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/auto_close_topics_post_count:
    put:
      description: auto close topics post count
      requestBody:
        content:
          application/json:
            schema:
              properties:
                auto_close_topics_post_count:
                  type: integer
              required:
                - auto_close_topics_post_count
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/auto_generated_whitelist:
    put:
      description: auto generated whitelist
      requestBody:
        content:
          application/json:
            schema:
              properties:
                auto_generated_whitelist:
                  description: List of email addresses that won't be checked for auto-generated content.
                  example: foo@bar.com|discourse@bar.com
                  type: string
              required:
                - auto_generated_whitelist
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/auto_respond_to_flag_actions:
    put:
      description: auto respond to flag actions
      requestBody:
        content:
          application/json:
            schema:
              properties:
                auto_respond_to_flag_actions:
                  description: '"Enable automatic reply when disposing a flag."'
                  example: true
                  type: boolean
              required:
                - auto_respond_to_flag_actions
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/autohighlight_all_code:
    put:
      description: autohighlight all code
      requestBody:
        content:
          application/json:
            schema:
              properties:
                autohighlight_all_code:
                  type: boolean
              required:
                - autohighlight_all_code
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/automatic_backups_enabled:
    put:
      description: automatic backups enabled
      requestBody:
        content:
          application/json:
            schema:
              properties:
                automatic_backups_enabled:
                  description: '"Run automatic backups as defined in backup frequency"'
                  example: true
                  type: boolean
              required:
                - automatic_backups_enabled
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Backups
  /admin/site_settings/automatically_download_gravatars:
    put:
      description: automatically download gravatars
      requestBody:
        content:
          application/json:
            schema:
              properties:
                automatically_download_gravatars:
                  description: '"Download Gravatars for users upon account creation or email change."'
                  example: true
                  type: boolean
              required:
                - automatically_download_gravatars
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/automatically_unpin_topics:
    put:
      description: automatically unpin topics
      requestBody:
        content:
          application/json:
            schema:
              properties:
                automatically_unpin_topics:
                  description: '"Automatically unpin topics when the user reaches the bottom."'
                  example: true
                  type: boolean
              required:
                - automatically_unpin_topics
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/avatar_sizes:
    put:
      description: avatar sizes
      requestBody:
        content:
          application/json:
            schema:
              properties:
                avatar_sizes:
                  description: '"List of automatically generated avatar sizes."'
                  example: 20|25|32|45|60|120
                  type: string
              required:
                - avatar_sizes
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/background_polling_interval:
    put:
      description: background polling interval
      requestBody:
        content:
          application/json:
            schema:
              properties:
                background_polling_interval:
                  description: '"How often should the clients poll in milliseconds (when the window is in the background)"'
                  example: 60000
                  type: integer
              required:
                - background_polling_interval
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Developer
  /admin/site_settings/backup_frequency:
    put:
      description: backup frequency
      requestBody:
        content:
          application/json:
            schema:
              properties:
                backup_frequency:
                  description: '"How frequently we create a site backup, in days."'
                  example: 7
                  type: integer
              required:
                - backup_frequency
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Backups
  /admin/site_settings/backup_time_of_day:
    put:
      description: backup time of day
      requestBody:
        content:
          application/json:
            schema:
              properties:
                backup_time_of_day:
                  description: '"Time of day UTC when the backup should occur."'
                  example: 3:30
                  type: string
              required:
                - backup_time_of_day
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Backups
  /admin/site_settings/backup_with_uploads:
    put:
      description: backup with uploads
      requestBody:
        content:
          application/json:
            schema:
              properties:
                backup_with_uploads:
                  description: '"Include uploads in scheduled backups. Disabling this will only backup the database."'
                  example: true
                  type: boolean
              required:
                - backup_with_uploads
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Backups
  /admin/site_settings/block_auto_generated_emails:
    put:
      description: block auto generated emails
      requestBody:
        content:
          application/json:
            schema:
              properties:
                block_auto_generated_emails:
                  description: Block incoming emails identified as being auto generated.
                  example: true
                  type: boolean
              required:
                - block_auto_generated_emails
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/block_common_passwords:
    put:
      description: block common passwords
      requestBody:
        content:
          application/json:
            schema:
              properties:
                block_common_passwords:
                  type: boolean
              required:
                - block_common_passwords
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/body_min_entropy:
    put:
      description: body min entropy
      requestBody:
        content:
          application/json:
            schema:
              properties:
                body_min_entropy:
                  type: integer
              required:
                - body_min_entropy
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/bootstrap_mode_min_users:
    put:
      description: bootstrap mode min users
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bootstrap_mode_min_users:
                  description: '"Minimum number of users required to disable bootstrap mode (set to 0 to disable)"'
                  example: 50
                  type: integer
              required:
                - bootstrap_mode_min_users
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/bounce_score_threshold:
    put:
      description: bounce score threshold
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bounce_score_threshold:
                  description: Max bounce score before we will stop emailing a user.
                  example: 4
                  type: integer
              required:
                - bounce_score_threshold
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/bounce_score_threshold_deactivate:
    put:
      description: bounce score threshold deactive
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bounce_score_threshold_deactivate:
                  description: Max bounce score before we will deactivate a user.
                  example: 30
                  type: integer
              required:
                - bounce_score_threshold_deactivate
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/categories_topics:
    put:
      description: Update the number of topics to show
      requestBody:
        content:
          application/json:
            schema:
              properties:
                categories_topics:
                  type: integer
              required:
                - categories_topics
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/category_colors:
    put:
      description: Update a list of hexadecimal color values
      requestBody:
        content:
          application/json:
            schema:
              properties:
                category_colors:
                  description: pipe delimited
                  example: BF1E2E|F1592A|F7941D
                  type: string
              required:
                - category_colors
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/category_style:
    put:
      description: Update the category style
      requestBody:
        content:
          application/json:
            schema:
              properties:
                category_style:
                  enum:
                    - bar
                    - box
                    - bullet
                  type: string
              required:
                - category_style
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/censored_pattern:
    put:
      description: censored pattern
      requestBody:
        content:
          application/json:
            schema:
              properties:
                censored_pattern:
                  type: string
              required:
                - censored_pattern
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/censored_words:
    put:
      description: censored words
      requestBody:
        content:
          application/json:
            schema:
              properties:
                censored_words:
                  type: string
              required:
                - censored_words
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/clean_orphan_uploads_grace_period_hours:
    put:
      description: clean orphan uploads grace period hours
      requestBody:
        content:
          application/json:
            schema:
              properties:
                clean_orphan_uploads_grace_period_hours:
                  description: '"Grace period (in hours) before an orphan upload is removed."'
                  example: 48
                  type: integer
              required:
                - clean_orphan_uploads_grace_period_hours
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/clean_up_uploads:
    put:
      description: clean up uploads
      requestBody:
        content:
          application/json:
            schema:
              properties:
                clean_up_uploads:
                  description: '"Remove orphan unreferenced uploads to prevent illegal hosting. WARNING: you may want to back up of your /uploads directory before enabling this setting."'
                  example: true
                  type: boolean
              required:
                - clean_up_uploads
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/code_formatting_style:
    put:
      description: code formatting style
      requestBody:
        content:
          application/json:
            schema:
              properties:
                code_formatting_style:
                  enum:
                    - 4-spaces-indent
                    - code-fences
                  type: string
              required:
                - code_formatting_style
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/cold_age_days_high:
    put:
      description: cold age days high
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cold_age_days_high:
                  description: '"After this many days of conversation, the last activity date is strongly dimmed."'
                  example: 180
                  type: integer
              required:
                - cold_age_days_high
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/cold_age_days_low:
    put:
      description: cold age days low
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cold_age_days_low:
                  description: '"After this many days of conversation, the last activity date is slightly dimmed."'
                  example: 14
                  type: integer
              required:
                - cold_age_days_low
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/cold_age_days_medium:
    put:
      description: cold age days medium
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cold_age_days_medium:
                  description: '"After this many days of conversation, the last activity date is moderately dimmed."'
                  example: 90
                  type: integer
              required:
                - cold_age_days_medium
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/company_domain:
    put:
      description: Update the company domain
      requestBody:
        content:
          application/json:
            schema:
              properties:
                company_domain:
                  type: string
              required:
                - company_domain
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Required
  /admin/site_settings/company_full_name:
    put:
      description: Update the company full name
      requestBody:
        content:
          application/json:
            schema:
              properties:
                company_full_name:
                  type: string
              required:
                - company_full_name
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Required
  /admin/site_settings/company_short_name:
    put:
      description: Update the company short name
      requestBody:
        content:
          application/json:
            schema:
              properties:
                company_short_name:
                  type: string
              required:
                - company_short_name
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Required
  /admin/site_settings/contact_email:
    put:
      description: Update the contact email
      requestBody:
        content:
          application/json:
            schema:
              properties:
                contact_email:
                  type: string
              required:
                - contact_email
              type: object
      responses:
        "200":
          description: empty response body
        "422":
          content:
            application/json:
              schema:
                properties:
                  errors:
                    items:
                      type: string
                    type: array
                type: object
          description: Invalid email address
      tags:
        - Site Settings Required
  /admin/site_settings/contact_url:
    put:
      description: Update the contact url
      requestBody:
        content:
          application/json:
            schema:
              properties:
                contact_url:
                  type: string
              required:
                - contact_url
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Required
  /admin/site_settings/convert_pasted_images_quality:
    put:
      description: convert pasted images quality
      requestBody:
        content:
          application/json:
            schema:
              properties:
                convert_pasted_images_quality:
                  description: '"Quality of the converted JPG file (1 is lowest quality, 100 is best quality)."'
                  example: 95
                  type: integer
              required:
                - convert_pasted_images_quality
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/convert_pasted_images_to_hq_jpg:
    put:
      description: convert pasted images to hq jpg
      requestBody:
        content:
          application/json:
            schema:
              properties:
                convert_pasted_images_to_hq_jpg:
                  description: '"Convert pasted images to high-quality JPG files."'
                  example: true
                  type: boolean
              required:
                - convert_pasted_images_to_hq_jpg
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/cooldown_minutes_after_hiding_posts:
    put:
      description: cooldown minutes after hiding posts
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cooldown_minutes_after_hiding_posts:
                  description: '"Number of minutes a user must wait before they can edit a post hidden via community flagging"'
                  example: 10
                  type: integer
              required:
                - cooldown_minutes_after_hiding_posts
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/cors_origins:
    put:
      description: cors origins
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cors_origins:
                  description: '"Allowed origins for cross-origin requests (CORS). Each origin must include http:// or https://. The DISCOURSE_ENABLE_CORS env variable must be set to true to enable CORS."'
                  example: ""
                  type: string
              required:
                - cors_origins
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Security
  /admin/site_settings/crawl_images:
    put:
      description: crawl images
      requestBody:
        content:
          application/json:
            schema:
              properties:
                crawl_images:
                  description: Retrieve images from remote URLs to insert the correct width and height dimensions.
                  example: true
                  type: boolean
              required:
                - crawl_images
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/create_thumbnails:
    put:
      description: create thumbnails
      requestBody:
        content:
          application/json:
            schema:
              properties:
                create_thumbnails:
                  description: '"Create thumbnails and lightbox images that are too large to fit in a post"'
                  example: true
                  type: boolean
              required:
                - create_thumbnails
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/daily_performance_report:
    put:
      description: '"daily performance report"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                daily_performance_report:
                  description: '"Analyze NGINX logs daily and post a Staff Only topic with details"'
                  example: false
                  type: boolean
              required:
                - daily_performance_report
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Plugins
  /admin/site_settings/default_avatars:
    put:
      description: default avatars
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_avatars:
                  description: '"URLs to avatars that will be used by default for new users until they change them."'
                  example: ""
                  type: string
              required:
                - default_avatars
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/default_categories_muted:
    put:
      description: '"default categories muted"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_categories_muted:
                  description: "\"Pipe delimited category id's. List of categories that are muted by default.\""
                  example: ""
                  type: string
              required:
                - default_categories_muted
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_categories_tracking:
    put:
      description: '"default categories tracking"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_categories_tracking:
                  description: "\"Pipe delimited category id's. List of categories that are tracked by default.\""
                  example: ""
                  type: string
              required:
                - default_categories_tracking
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_categories_watching:
    put:
      description: '"default categories watching"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_categories_watching:
                  description: "\"Pipe delimited category id's. List of categories that are watched by default.\""
                  example: 4|1
                  type: string
              required:
                - default_categories_watching
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_categories_watching_first_post:
    put:
      description: '"default categories watching first post"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_categories_watching_first_post:
                  description: "\"Pipe delimited category id's. List of categories in which first post in each new topic will be watched by default.\""
                  example: ""
                  type: string
              required:
                - default_categories_watching_first_post
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_code_lang:
    put:
      description: default code lang
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_code_lang:
                  type: string
              required:
                - default_code_lang
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/default_email_always:
    put:
      description: '"default email always"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_email_always:
                  description: '"Send an email notification even when the user is active by default."'
                  example: false
                  type: boolean
              required:
                - default_email_always
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_email_digest_frequency:
    put:
      description: '"default email digest frequency"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_email_digest_frequency:
                  description: '"How often users receive summary emails by default."'
                  example: 0
                  type: integer
              required:
                - default_email_digest_frequency
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_email_direct:
    put:
      description: '"default email direct"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_email_direct:
                  description: '"Send an email when someone quotes/replies to/mentions or invites the user by default."'
                  example: true
                  type: boolean
              required:
                - default_email_direct
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_email_in_reply_to:
    put:
      description: '"default email in reply to"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_email_in_reply_to:
                  description: '"Include excerpt of replied to post in emails by default."'
                  example: true
                  type: boolean
              required:
                - default_email_in_reply_to
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_email_mailing_list_mode:
    put:
      description: '"default email mailing list mode"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_email_mailing_list_mode:
                  description: '"Send an email for every new post by default."'
                  example: false
                  type: boolean
              required:
                - default_email_mailing_list_mode
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_email_mailing_list_mode_frequency:
    put:
      description: '"default email mailing list mode frequency"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_email_mailing_list_mode_frequency:
                  description: '"Users who enable mailing list mode will receive emails this often by default."'
                  enum:
                    - 0
                    - 1
                    - 2
                  example: 0
                  type: integer
              required:
                - default_email_mailing_list_mode_frequency
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_email_previous_replies:
    put:
      description: '"default email previous replies"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_email_previous_replies:
                  description: '"Include previous replies in emails by default."'
                  example: 2
                  type: integer
              required:
                - default_email_previous_replies
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_email_private_messages:
    put:
      description: '"default email private messages"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_email_private_messages:
                  description: '"Send an email when someone messages the user by default."'
                  example: true
                  type: boolean
              required:
                - default_email_private_messages
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_include_tl0_in_digests:
    put:
      description: '"default include tl0 in digests"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_include_tl0_in_digests:
                  description: '"Include posts from new users in summary emails by default. Users can change this in their preferences."'
                  example: false
                  type: boolean
              required:
                - default_include_tl0_in_digests
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_invitee_trust_level:
    put:
      description: default invitee trust level
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_invitee_trust_level:
                  description: '"Default trust level (0-4) for invited users."'
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                  example: 1
                  type: integer
              required:
                - default_invitee_trust_level
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/default_locale:
    put:
      description: Update the default locale
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_locale:
                  type: string
              required:
                - default_locale
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/default_opengraph_image_url:
    put:
      description: Update the default opengraph image url
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_opengraph_image_url:
                  type: string
              required:
                - default_opengraph_image_url
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Required
  /admin/site_settings/default_other_auto_track_topic_after_msecs:
    put:
      description: '"default other auto track topics after msecs"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_other_auto_track_topic_after_msecs:
                  description: '"Global default time before a topic is automatically tracked."'
                  example: 240000
                  type: integer
              required:
                - default_other_auto_track_topic_after_msecs
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_other_disable_jump_reply:
    put:
      description: '"default other disable jump reply"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_other_disable_jump_reply:
                  description: "\"Don't jump to user's post after they reply by default.\""
                  example: false
                  type: boolean
              required:
                - default_other_disable_jump_reply
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_other_dynamic_favicon:
    put:
      description: default other dynamic favicon
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_other_dynamic_favicon:
                  description: '"Show new/updated topic count on browser icon by default."'
                  example: false
                  type: boolean
              required:
                - default_other_dynamic_favicon
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_other_enable_quoting:
    put:
      description: '"default other enable quoting"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_other_enable_quoting:
                  description: '"Enable quote reply for highlighted text by default."'
                  example: true
                  type: boolean
              required:
                - default_other_enable_quoting
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_other_external_links_in_new_tab:
    put:
      description: '"default other external links in new tab"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_other_external_links_in_new_tab:
                  description: '"Open external links in a new tab by default."'
                  example: false
                  type: boolean
              required:
                - default_other_external_links_in_new_tab
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_other_like_notification_frequency:
    put:
      description: '"default other like notification frequency"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_other_like_notification_frequency:
                  description: '"Notify users on likes by default"'
                  example: 1
                  type: integer
              required:
                - default_other_like_notification_frequency
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_other_new_topic_duration_minutes:
    put:
      description: '"default other new topic duration minutes"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_other_new_topic_duration_minutes:
                  description: '"Global default condition for which a topic is considered new."'
                  example: 2880
                  type: integer
              required:
                - default_other_new_topic_duration_minutes
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_other_notification_level_when_replying:
    put:
      description: '"default other notification level when replying"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_other_notification_level_when_replying:
                  description: '"Global default notification level when the user replies to a topic."'
                  example: 2
                  type: integer
              required:
                - default_other_notification_level_when_replying
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_topics_automatic_unpin:
    put:
      description: '"default topics automatic unpin"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_topics_automatic_unpin:
                  description: '"Automatically unpin topics when the user reaches the bottom by default."'
                  example: true
                  type: boolean
              required:
                - default_topics_automatic_unpin
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/default_trust_level:
    put:
      description: default trust level
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default_trust_level:
                  description: '"Default trust level (0-4) for all new users. WARNING! Changing this will put you at serious risk for spam."'
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                  example: 0
                  type: integer
              required:
                - default_trust_level
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/delete_all_posts_max:
    put:
      description: delete all posts max
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete_all_posts_max:
                  type: integer
              required:
                - delete_all_posts_max
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/delete_digest_email_after_days:
    put:
      description: delete digest email after days
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete_digest_email_after_days:
                  example: 365
                  type: integer
              required:
                - delete_digest_email_after_days
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/delete_drafts_older_than_n_days:
    put:
      description: delete drafts older than n days
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete_drafts_older_than_n_days:
                  description: '"Delete drafts older than (n) days."'
                  example: 180
                  type: integer
              required:
                - delete_drafts_older_than_n_days
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/delete_email_logs_after_days:
    put:
      description: delete email logs after days
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete_email_logs_after_days:
                  description: Delete email logs after (N) days. 0 to keep indefinitely
                  example: 365
                  type: integer
              required:
                - delete_email_logs_after_days
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/delete_old_hidden_posts:
    put:
      description: delete old hidden posts
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete_old_hidden_posts:
                  type: boolean
              required:
                - delete_old_hidden_posts
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/delete_removed_posts_after:
    put:
      description: delete removed posts after
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete_removed_posts_after:
                  type: integer
              required:
                - delete_removed_posts_after
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/delete_user_max_post_age:
    put:
      description: delete user max post age
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete_user_max_post_age:
                  type: integer
              required:
                - delete_user_max_post_age
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/desktop_category_page_style:
    put:
      description: Update the visual style for the /categories page
      requestBody:
        content:
          application/json:
            schema:
              properties:
                desktop_category_page_style:
                  enum:
                    - categories_only
                    - categories_with_featured_topics
                    - categories_and_latest_topics
                  type: string
              required:
                - desktop_category_page_style
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/details_enabled:
    put:
      description: '"details enabled"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                details_enabled:
                  description: "'Enable the details plugin. If you change this, you must rebake all posts with: \"rake posts:rebake\".'"
                  example: true
                  type: boolean
              required:
                - details_enabled
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Plugins
  /admin/site_settings/digest_logo_url:
    put:
      description: Update the digest logo url
      requestBody:
        content:
          application/json:
            schema:
              properties:
                digest_logo_url:
                  type: string
              required:
                - digest_logo_url
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Required
  /admin/site_settings/digest_min_excerpt_length:
    put:
      description: digest min excerpt length
      requestBody:
        content:
          application/json:
            schema:
              properties:
                digest_min_excerpt_length:
                  type: integer
              required:
                - digest_min_excerpt_length
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/digest_other_topics:
    put:
      description: digest other topics
      requestBody:
        content:
          application/json:
            schema:
              properties:
                digest_other_topics:
                  example: 5
                  type: integer
              required:
                - digest_other_topics
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/digest_posts:
    put:
      description: digest posts
      requestBody:
        content:
          application/json:
            schema:
              properties:
                digest_posts:
                  example: 3
                  type: integer
              required:
                - digest_posts
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/digest_suppress_categories:
    put:
      description: digest suppress categories
      requestBody:
        content:
          application/json:
            schema:
              properties:
                digest_suppress_categories:
                  description: pipe delimited category_id's
                  example: 3|1
                  type: string
              required:
                - digest_suppress_categories
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/digest_topics:
    put:
      description: digest topics
      requestBody:
        content:
          application/json:
            schema:
              properties:
                digest_topics:
                  example: 5
                  type: integer
              required:
                - digest_topics
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/disable_avatar_education_message:
    put:
      description: disable avatar education message
      requestBody:
        content:
          application/json:
            schema:
              properties:
                disable_avatar_education_message:
                  description: '"Disable education message for changing avatar."'
                  example: false
                  type: boolean
              required:
                - disable_avatar_education_message
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/disable_digest_emails:
    put:
      description: disable digest emails
      requestBody:
        content:
          application/json:
            schema:
              properties:
                digest_digest_emails:
                  example: false
                  type: boolean
              required:
                - disable_digest_emails
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/disable_discourse_narrative_bot_welcome_post:
    put:
      description: disable discourse narrative bot welcome post
      requestBody:
        content:
          application/json:
            schema:
              properties:
                disable_discourse_narrative_bot_welcome_post:
                  description: disable discourse narrative bot welcome post
                  example: false
                  type: boolean
              required:
                - disable_discourse_narrative_bot_welcome_post
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Narrative Bot
  /admin/site_settings/disable_edit_notifications:
    put:
      description: disable edit notifications
      requestBody:
        content:
          application/json:
            schema:
              properties:
                disable_edit_notifications:
                  description: "\"Disables edit notifications by the system user when 'download_remote_images_to_local' is active.\""
                  example: false
                  type: boolean
              required:
                - disable_edit_notifications
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/disable_emails:
    put:
      description: disable emails
      requestBody:
        content:
          application/json:
            schema:
              properties:
                disable_emails:
                  description: Prevent Discourse from sending any kind of emails
                  enum:
                    - yes
                    - no
                    - non-staff
                  example: yes
                  type: string
              required:
                - disable_emails
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/disable_mailing_list_mode:
    put:
      description: '"disable mailing list mode"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                disable_mailing_list_mode:
                  description: '"Disallow users from enabling mailing list mode."'
                  example: false
                  type: boolean
              required:
                - disable_mailing_list_mode
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/disabled_image_download_domains:
    put:
      description: disabled image download domains
      requestBody:
        content:
          application/json:
            schema:
              properties:
                disabled_image_download_domains:
                  description: Remote images will never be downloaded from these domains. Pipe-delimited list.
                  example: ""
                  type: string
              required:
                - disabled_image_download_domains
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/discourse_narrative_bot_disable_public_replies:
    put:
      description: discourse narrative bot disable public replies
      requestBody:
        content:
          application/json:
            schema:
              properties:
                discourse_narrative_bot_disable_public_replies:
                  description: Disable public replies by Discourse Narrative Bot
                  example: false
                  type: boolean
              required:
                - discourse_narrative_bot_disable_public_replies
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Narrative Bot
  /admin/site_settings/discourse_narrative_bot_enabled:
    put:
      description: enable discourse narrative bot
      requestBody:
        content:
          application/json:
            schema:
              properties:
                discourse_narrative_bot_enabled:
                  description: Enable Discourse Narrative Bot
                  example: true
                  type: boolean
              required:
                - discourse_narrative_bot_enabled
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Narrative Bot
  /admin/site_settings/discourse_narrative_bot_ignored_usernames:
    put:
      description: discourse narrative bot ignored usernames
      requestBody:
        content:
          application/json:
            schema:
              properties:
                discourse_narrative_bot_ignored_usernames:
                  description: Usernames that the Discourse Narrative Bot should ignore. Pipe delimited.
                  example: discourse|steve
                  type: boolean
              required:
                - discourse_narrative_bot_ignored_usernames
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Narrative Bot
  /admin/site_settings/discourse_narrative_bot_welcome_post_delay:
    put:
      description: discourse narrative bot welcome post delay
      requestBody:
        content:
          application/json:
            schema:
              properties:
                discourse_narrative_bot_welcome_post_delay:
                  description: Wait (n) seconds before sending the Discourse Narrative Bot welcome post.
                  example: 0
                  type: integer
              required:
                - discourse_narrative_bot_welcome_post_delay
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Narrative Bot
  /admin/site_settings/discourse_narrative_bot_welcome_post_type:
    put:
      description: discourse narrative bot welcome post type
      requestBody:
        content:
          application/json:
            schema:
              properties:
                discourse_narrative_bot_welcome_post_delay:
                  description: Type of welcome post that the Discourse Narrative Bot should send out
                  enum:
                    - new_user_track
                    - welcome_message
                  example: new_user_track
                  type: string
              required:
                - discourse_narrative_bot_welcome_post_type
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Narrative Bot
  /admin/site_settings/display_name_on_email_from:
    put:
      description: display name on email from
      requestBody:
        content:
          application/json:
            schema:
              properties:
                display_name_on_email_from:
                  description: Display full names on email from fields
                  example: true
                  type: boolean
              required:
                - display_name_on_email_from
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/display_name_on_posts:
    put:
      description: display name on posts
      requestBody:
        content:
          application/json:
            schema:
              properties:
                display_name_on_posts:
                  type: boolean
              required:
                - display_name_on_posts
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/dominating_topic_minimum_percent:
    put:
      description: dominating topic minimum percent
      requestBody:
        content:
          application/json:
            schema:
              properties:
                dominating_topic_minimum_percent:
                  description: '"What percentage of posts a user has to make in a topic before being reminded about overly dominating a topic."'
                  example: 20
                  type: integer
              required:
                - dominating_topic_minimum_percent
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/download_remote_images_max_days_old:
    put:
      description: download remote images max days old
      requestBody:
        content:
          application/json:
            schema:
              properties:
                download_remote_images_max_days_old:
                  description: Don't download remote images for posts that are more than n days old.
                  example: 30
                  type: integer
              required:
                - download_remote_images_max_days_old
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/download_remote_images_threshold:
    put:
      description: download remote images threshold
      requestBody:
        content:
          application/json:
            schema:
              properties:
                download_remote_images_threshold:
                  description: Minimum disk space necessary to download remote images locally (in percent)
                  example: 10
                  type: integer
              required:
                - download_remote_images_threshold
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/download_remote_images_to_local:
    put:
      description: download remote images to local
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_image_width:
                  description: Convert remote images to local images by downloading them; this prevents broken images.
                  example: true
                  type: boolean
              required:
                - download_remote_images_to_local
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/edit_history_visible_to_public:
    put:
      description: edit history visible to public
      requestBody:
        content:
          application/json:
            schema:
              properties:
                edit_history_visible_to_public:
                  type: boolean
              required:
                - edit_history_visible_to_public
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/editing_grace_period:
    put:
      description: editing grace period
      requestBody:
        content:
          application/json:
            schema:
              properties:
                editing_grace_period:
                  type: integer
              required:
                - editing_grace_period
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/educate_until_posts:
    put:
      description: educate until posts
      requestBody:
        content:
          application/json:
            schema:
              properties:
                educate_until_posts:
                  description: '"When the user starts typing their first (n) new posts, show the pop-up new user education panel in the composer."'
                  example: 2
                  type: integer
              required:
                - educate_until_posts
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/email_accent_bg_color:
    put:
      description: email accent bg color
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email_accent_bg_color:
                  description: Enter a color name ('red') or hex value ('#FF000').
                  example: "#2F70AD"
                  type: string
              required:
                - email_accent_bg_color
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/email_accent_fg_color:
    put:
      description: email accent fg color
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email_accent_fg_color:
                  description: Enter a color name ('white') or hex value ('#FFFFFF').
                  example: "#FFFFFF"
                  type: string
              required:
                - email_accent_fg_color
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/email_custom_headers:
    put:
      description: email custom headers
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email_custom_headers:
                  description: A pipe-delimited list of custom email headers
                  example: "Auto-Submitted: auto-generated"
                  type: string
              required:
                - email_custom_headers
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/email_domains_blacklist:
    put:
      description: email domains blacklist
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email_domains_blacklist:
                  description: pipe delimited
                  type: string
              required:
                - email_domains_blacklist
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/email_domains_whitelist:
    put:
      description: email domains whitelist
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email_domains_whitelist:
                  description: pipe delimited
                  type: string
              required:
                - email_domains_whitelist
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/email_editable:
    put:
      description: email editable
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email_editable:
                  type: boolean
              required:
                - email_editable
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/email_in:
    put:
      description: email in
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email_in:
                  description: "'Allow users to post new topics via email (requires pop3 polling). Configure the addresses in the \"Settings\" tab of each category.'"
                  type: boolean
              required:
                - email_in
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/email_in_min_trust:
    put:
      description: email in min trust
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email_in_min_trust:
                  description: The minimum trust level a user needs to have to be allowed to post new topics via email.
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                  example: 2
                  type: integer
              required:
                - email_in_min_trust
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/email_link_color:
    put:
      description: email link color
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email_link_color:
                  description: Enter a color name ('blue') or hex value ('#0000FF').
                  example: "#006699"
                  type: string
              required:
                - email_link_color
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/email_prefix:
    put:
      description: email prefix
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email_prefix:
                  description: "\"The [label] used in the subject of emails. It will default to 'title' if not set.\""
                  type: string
              required:
                - email_prefix
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/email_site_title:
    put:
      description: email site title
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email_site_title:
                  description: The title of the site used as the sender of emails from the site. Default to 'title' if not set. If your 'title' contains characters that are not allowed in email sender strings, use this setting.
                  type: string
              required:
                - email_site_title
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/email_subject:
    put:
      description: email subject
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email_subject:
                  description: Customizable subject format for standard emails.
                  example: "[%{site_name}] %{optional_pm}%{optional_cat}%{topic_title}"
                  type: string
              required:
                - email_subject
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/email_time_window_mins:
    put:
      description: email time window mins
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email_time_window_mins:
                  type: integer
              required:
                - email_time_window_mins
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/email_token_valid_hours:
    put:
      description: email token valid hours
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email_token_valid_hours:
                  type: integer
              required:
                - email_token_valid_hours
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/embed_truncate:
    put:
      description: embed truncate
      requestBody:
        content:
          application/json:
            schema:
              properties:
                embed_truncate:
                  type: boolean
              required:
                - embed_truncate
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/emoji_set:
    put:
      description: emoji set
      requestBody:
        content:
          application/json:
            schema:
              properties:
                emoji_set:
                  enum:
                    - apple
                    - google
                    - twitter
                    - emoji_one
                    - win10
                  type: string
              required:
                - emoji_set
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/enable_badges:
    put:
      description: Update enable the badge system
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_badges:
                  type: boolean
              required:
                - enable_badges
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/enable_emoji:
    put:
      description: enable emoji
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_emoji:
                  type: boolean
              required:
                - enable_emoji
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/enable_escaped_fragments:
    put:
      description: enable escaped fragments
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_escaped_fragments:
                  description: "\"Fall back to Google's Ajax-Crawling API if no webcrawler is detected. See https://developers.google.com/webmasters/ajax-crawling/docs/learn-more\""
                  example: true
                  type: boolean
              required:
                - enable_escaped_fragments
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Security
  /admin/site_settings/enable_facebook_logins:
    put:
      description: enable facebook logins
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_facebook_logins:
                  type: boolean
              required:
                - enable_facebook_logins
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/enable_flash_video_onebox:
    put:
      description: enable flash video onebox
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_flash_video_onebox:
                  description: '"Enable embedding of swf and flv (Adobe Flash) links in oneboxes. WARNING: may introduce security risks."'
                  example: false
                  type: boolean
              required:
                - enable_flash_video_onebox
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Onebox
  /admin/site_settings/enable_forwarded_emails:
    put:
      description: enable forwarded emails
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_forwarded_emails:
                  description: "[BETA] Allow users to create a topic by forwarding an email in."
                  example: false
                  type: boolean
              required:
                - enable_forwarded_emails
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/enable_github_logins:
    put:
      description: enable github logins
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_github_logins:
                  type: boolean
              required:
                - enable_github_logins
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/enable_google_oauth2_logins:
    put:
      description: Update enable Google Oauth2 authentication
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_google_oath2_logins:
                  type: boolean
              required:
                - enable_google_oath2_logins
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/enable_instagram_logins:
    put:
      description: enable instagram logins
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_instagram_logins:
                  type: boolean
              required:
                - enable_instagram_logins
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/enable_local_logins:
    put:
      description: Update enable_local_logins
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_local_logins:
                  type: boolean
              required:
                - enable_local_logins
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/enable_long_polling:
    put:
      description: enable long polling
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_long_polling:
                  description: '"Message bus used for notification can use long polling"'
                  example: true
                  type: boolean
              required:
                - enable_long_polling
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Developer
  /admin/site_settings/enable_mobile_theme:
    put:
      description: Update enable mobile theme
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_mobile_theme:
                  type: boolean
              required:
                - enable_mobile_theme
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/enable_names:
    put:
      description: enable names
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_names:
                  type: boolean
              required:
                - enable_names
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/enable_noscript_support:
    put:
      description: enable noscript support
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_noscript_support:
                  description: '"Enable standard webcrawler search engine support via the noscript tag"'
                  example: true
                  type: boolean
              required:
                - enable_noscript_support
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Security
  /admin/site_settings/enable_private_messages:
    put:
      description: enable private messages
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_private_messages:
                  type: boolean
              required:
                - enable_private_messages
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/enable_s3_backups:
    put:
      description: enable s3 backups
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_s3_backups:
                  description: '"Upload backups to S3 when complete. IMPORTANT: requires valid S3 credentials entered in Files settings."'
                  example: false
                  type: boolean
              required:
                - enable_s3_backups
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Backups
  /admin/site_settings/enable_s3_uploads:
    put:
      description: enable s3 uploads
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_s3_uploads:
                  description: '"Place uploads on Amazon S3 storage. IMPORTANT: requires valid S3 credentials (both access key id & secret access key)."'
                  example: false
                  type: boolean
              required:
                - enable_s3_uploads
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/enable_signup_cta:
    put:
      description: Update enable signup cta
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_signup_cta:
                  type: boolean
              required:
                - enable_signup_cta
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/enable_sso:
    put:
      description: enable sso
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_sso:
                  type: boolean
              required:
                - enable_sso
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/enable_sso_provider:
    put:
      description: enable sso provider
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_sso_provider:
                  type: boolean
              required:
                - enable_sso_provider
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/enable_staged_users:
    put:
      description: enable staged users
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_staged_users:
                  description: Automatically create staged users when processing incoming emails.
                  example: true
                  type: boolean
              required:
                - enable_staged_users
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/enable_twitter_logins:
    put:
      description: Enable twitter logins
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_twitter_logins:
                  type: boolean
              required:
                - enable_twitter_logins
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/enable_user_directory:
    put:
      description: enable user directory
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_user_directory:
                  type: boolean
              required:
                - enable_user_directory
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/enable_whispers:
    put:
      description: Update enable whispers
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_whispers:
                  type: boolean
              required:
                - enable_whispers
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/enable_yahoo_logins:
    put:
      description: Update enable yahoo logins
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable_yahoo_logins:
                  type: boolean
              required:
                - enable_yahoo_logins
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/enforce_square_emoji:
    put:
      description: enforce square emoji
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enforce_square_emoji:
                  type: boolean
              required:
                - enforce_square_emoji
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/exclude_rel_nofollow_domains:
    put:
      description: Update the exclude rel nofollow domains
      requestBody:
        content:
          application/json:
            schema:
              properties:
                exclude_rel_nofollow_domains:
                  description: pipe delimited
                  type: string
              required:
                - exclude_rel_nofollow_domains
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Required
  /admin/site_settings/external_system_avatars_enabled:
    put:
      description: external system avatars enabled
      requestBody:
        content:
          application/json:
            schema:
              properties:
                external_system_avatars_enabled:
                  description: '"Use external system avatars service."'
                  example: true
                  type: boolean
              required:
                - external_system_avatars_enabled
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/external_system_avatars_url:
    put:
      description: external system avatars url
      requestBody:
        content:
          application/json:
            schema:
              properties:
                external_system_avatars_url:
                  description: '"URL of the external system avatars service. Allowed substitutions are {username} {first_letter} {color} {size}"'
                  example: /letter_avatar_proxy/v2/letter/{first_letter}/{color}/{size}.png
                  type: string
              required:
                - external_system_avatars_url
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/facebook_app_id:
    put:
      description: facebook app id
      requestBody:
        content:
          application/json:
            schema:
              properties:
                facebook_app_id:
                  type: string
              required:
                - facebook_app_id
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/facebook_app_secret:
    put:
      description: facebook app secret
      requestBody:
        content:
          application/json:
            schema:
              properties:
                facebook_app_secret:
                  type: string
              required:
                - facebook_app_secret
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/facebook_request_extra_profile_details:
    put:
      description: facebook request extra profile details
      requestBody:
        content:
          application/json:
            schema:
              properties:
                facebook_request_extra_profile_details:
                  type: boolean
              required:
                - facebook_request_extra_profile_details
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/fag_url:
    put:
      description: faq url
      requestBody:
        content:
          application/json:
            schema:
              properties:
                faq_url:
                  description: '"If you have a FAQ hosted elsewhere that you want to use, provide the full URL here."'
                  example: ""
                  type: string
              required:
                - faq_url
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Legal
  /admin/site_settings/favicon_url:
    put:
      description: Update the favicon url
      requestBody:
        content:
          application/json:
            schema:
              properties:
                favicon_url:
                  type: string
              required:
                - favicon_url
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Required
  /admin/site_settings/fixed_category_positions:
    put:
      description: Update fixed category positions
      requestBody:
        content:
          application/json:
            schema:
              properties:
                fixed_category_positions:
                  type: boolean
              required:
                - fixed_category_positions
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/fixed_category_positions_on_create:
    put:
      description: Update fixed category positions on create
      requestBody:
        content:
          application/json:
            schema:
              properties:
                fixed_category_positions_on_create:
                  type: boolean
              required:
                - fixed_category_positions_on_create
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/flag_sockpuppets:
    put:
      description: flag sockpuppets
      requestBody:
        content:
          application/json:
            schema:
              properties:
                flag_sockpuppets:
                  description: '"If a new user replies to a topic from the same IP address as the new user who started the topic, flag both of their posts as potential spam."'
                  example: false
                  type: boolean
              required:
                - flag_sockpuppets
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/flags_required_to_hide_post:
    put:
      description: flags required to hide post
      requestBody:
        content:
          application/json:
            schema:
              properties:
                flags_required_to_hide_post:
                  description: '"Number of flags that cause a post to be automatically hidden and message sent to the user (0 for never)"'
                  example: 3
                  type: integer
              required:
                - flags_required_to_hide_post
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/flush_timings_secs:
    put:
      description: flush timings secs
      requestBody:
        content:
          application/json:
            schema:
              properties:
                flush_timings_secs:
                  description: '"How frequently we flush timing data to the server, in seconds."'
                  example: 20
                  type: integer
              required:
                - flush_timings_secs
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Developer
  /admin/site_settings/force_hostname:
    put:
      description: force hostname
      requestBody:
        content:
          application/json:
            schema:
              properties:
                force_hostname:
                  description: '"DEVELOPER ONLY! WARNING! Specify a hostname in the URL. Leave blank for default."'
                  example: ""
                  type: string
              required:
                - force_hostname
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Developer
  /admin/site_settings/force_https:
    put:
      description: force https
      requestBody:
        content:
          application/json:
            schema:
              properties:
                force_https:
                  description: '"Force your site to use HTTPS only. WARNING: do NOT enable this until you verify HTTPS is fully set up and working absolutely everywhere! Did you check your CDN, all social logins, and any external logos / dependencies to make sure they are all HTTPS compatible, too?"'
                  example: false
                  type: boolean
              required:
                - force_https
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Security
  /admin/site_settings/forgot_password_strict:
    put:
      description: forgot password strict
      requestBody:
        content:
          application/json:
            schema:
              properties:
                forgot_password_strict:
                  type: boolean
              required:
                - forgot_password_strict
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/full_name_required:
    put:
      description: full name required
      requestBody:
        content:
          application/json:
            schema:
              properties:
                full_name_required:
                  type: boolean
              required:
                - full_name_required
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/ga_domain_name:
    put:
      description: Update the OBSOLETE ga domain name
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ga_domain_name:
                  type: string
              required:
                - ga_domain_name
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/ga_tracking_code:
    put:
      description: Update the OBSOLETE ga tracking code
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ga_tracking_code:
                  type: string
              required:
                - ga_tracking_code
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/ga_universal_domain_name:
    put:
      description: Update Google Universal Analytics domain name
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ga_universal_domain_name:
                  type: string
              required:
                - ga_universal_domain_name
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/ga_universal_tracking_code:
    put:
      description: Update Google Universal Analytics tracking code
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ga_universal_tracking_code:
                  type: string
              required:
                - ga_universal_tracking_code
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/github_client_id:
    put:
      description: github client id
      requestBody:
        content:
          application/json:
            schema:
              properties:
                github_client_id:
                  type: string
              required:
                - github_client_id
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/github_client_secret:
    put:
      description: github client secret
      requestBody:
        content:
          application/json:
            schema:
              properties:
                github_client_secret:
                  type: string
              required:
                - github_client_secret
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/global_notice:
    put:
      description: global notice
      requestBody:
        content:
          application/json:
            schema:
              properties:
                global_notice:
                  description: '"Display an URGENT, EMERGENCY global banner notice to all visitors, change to blank to hide it (HTML allowed)."'
                  example: ""
                  type: string
              required:
                - global_notice
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/google_oath2_client_id:
    put:
      description: Update google oauth2 client id
      requestBody:
        content:
          application/json:
            schema:
              properties:
                google_oath2_client_id:
                  type: string
              required:
                - google_oath2_client_id
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/google_oath2_client_secret:
    put:
      description: Update google oauth2 client secret
      requestBody:
        content:
          application/json:
            schema:
              properties:
                google_oath2_client_secret:
                  type: string
              required:
                - google_oath2_client_secret
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/gtm_container_id:
    put:
      description: Update Google Tag Manager container id
      requestBody:
        content:
          application/json:
            schema:
              properties:
                gtm_container_id:
                  type: string
              required:
                - gtm_container_id
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/hard_bounce_score:
    put:
      description: hard bounce score
      requestBody:
        content:
          application/json:
            schema:
              properties:
                hard_bounce_score:
                  description: Bounce score added to the user when a permanent bounce happens.
                  example: 2
                  type: integer
              required:
                - hard_bounce_score
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/hide_user_profiles_from_public:
    put:
      description: hide user profiles from public
      requestBody:
        content:
          application/json:
            schema:
              properties:
                hide_user_profiles_from_public:
                  type: boolean
              required:
                - hide_user_profiles_from_public
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/highlighted_languages:
    put:
      description: highlighted languages
      requestBody:
        content:
          application/json:
            schema:
              properties:
                highlighted_languages:
                  type: string
              required:
                - highlighted_languages
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/history_hours_high:
    put:
      description: history hours high
      requestBody:
        content:
          application/json:
            schema:
              properties:
                history_hours_high:
                  description: '"A post edited within this many hours has the edit indicator strongly highlighted."'
                  example: 48
                  type: integer
              required:
                - history_hours_high
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/history_hours_low:
    put:
      description: history hours low
      requestBody:
        content:
          application/json:
            schema:
              properties:
                history_hours_low:
                  description: '"A post edited within this many hours has the edit indicator slightly highlighted"'
                  example: 12
                  type: integer
              required:
                - history_hours_low
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/history_hours_medium:
    put:
      description: history hours medium
      requestBody:
        content:
          application/json:
            schema:
              properties:
                history_hours_medium:
                  description: '"A post edited within this many hours has the edit indicator moderately highlighted."'
                  example: 24
                  type: integer
              required:
                - history_hours_medium
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/ignore_by_title:
    put:
      description: ignore by title
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ignore_by_title:
                  description: pipe delimited list
                  example: ""
                  type: string
              required:
                - ignore_by_title
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/incoming_email_prefer_html:
    put:
      description: incoming email prefer html
      requestBody:
        content:
          application/json:
            schema:
              properties:
                incoming_email_prefer_html:
                  description: Use the HTML instead of the text for incoming email. May cause unexpected formatting issues!
                  type: boolean
              required:
                - incoming_email_prefer_html
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/instagram_consumer_key:
    put:
      description: instagram consumer key
      requestBody:
        content:
          application/json:
            schema:
              properties:
                instagram_consumer_key:
                  type: string
              required:
                - instagram_consumer_key
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/instagram_consumer_secret:
    put:
      description: instagram consumer secret
      requestBody:
        content:
          application/json:
            schema:
              properties:
                instagram_consumer_secret:
                  type: string
              required:
                - instagram_consumer_secret
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/invite_expiry_days:
    put:
      description: invite expiry days
      requestBody:
        content:
          application/json:
            schema:
              properties:
                invite_expiry_days:
                  type: integer
              required:
                - invite_expiry_days
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/invite_only:
    put:
      description: Update invite only
      requestBody:
        content:
          application/json:
            schema:
              properties:
                invite_only:
                  type: boolean
              required:
                - invite_only
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/invite_passthrough_hours:
    put:
      description: invite passthrough hours
      requestBody:
        content:
          application/json:
            schema:
              properties:
                invite_passthrough_hours:
                  type: integer
              required:
                - invite_passthrough_hours
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/invites_per_page:
    put:
      description: invites per page
      requestBody:
        content:
          application/json:
            schema:
              properties:
                invites_per_page:
                  type: integer
              required:
                - invites_per_page
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/levenshtein_distance_spammer_emails:
    put:
      description: levenshtein distance spammer emails
      requestBody:
        content:
          application/json:
            schema:
              properties:
                levenshtein_distance_spammer_emails:
                  description: '"When matching spammer emails, number of characters difference that will still allow a fuzzy match."'
                  example: 2
                  type: integer
              required:
                - levenshtein_distance_spammer_emails
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/limit_suggested_to_category:
    put:
      description: Update show topics from the current category
      requestBody:
        content:
          application/json:
            schema:
              properties:
                limit_suggested_to_category:
                  type: boolean
              required:
                - limit_suggested_to_category
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/log_mail_processing_failures:
    put:
      description: log mail processing failures
      requestBody:
        content:
          application/json:
            schema:
              properties:
                log_mail_processing_failures:
                  description: Log all email processing failures to http://yoursite.com/logs
                  type: boolean
              required:
                - log_mail_processing_failures
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/log_out_strict:
    put:
      description: log out strict
      requestBody:
        content:
          application/json:
            schema:
              properties:
                log_out_strict:
                  type: boolean
              required:
                - log_out_strict
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/login_required:
    put:
      description: Update login required
      requestBody:
        content:
          application/json:
            schema:
              properties:
                login_required:
                  type: boolean
              required:
                - login_required
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/logo_small_url:
    put:
      description: Update the small logo url
      requestBody:
        content:
          application/json:
            schema:
              properties:
                logo_small_url:
                  type: string
              required:
                - logo_small_url
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Required
  /admin/site_settings/logo_url:
    put:
      description: Update logo url
      requestBody:
        content:
          application/json:
            schema:
              properties:
                logo_url:
                  type: string
              required:
                - logo_url
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Required
  /admin/site_settings/logout_redirect:
    put:
      description: logout redirect
      requestBody:
        content:
          application/json:
            schema:
              properties:
                logout_redirect:
                  type: string
              required:
                - logout_redirect
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/long_polling_base_url:
    put:
      description: long polling base url
      requestBody:
        content:
          application/json:
            schema:
              properties:
                long_polling_base_url:
                  description: '"Base URL used for long polling (when a CDN is serving dynamic content, be sure to set this to origin pull) eg: http://origin.site.com"'
                  example: /
                  type: string
              required:
                - long_polling_base_url
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Developer
  /admin/site_settings/long_polling_interval:
    put:
      description: long polling interval
      requestBody:
        content:
          application/json:
            schema:
              properties:
                long_polling_interval:
                  description: '"Amount of time the server should wait before responding to clients when there is no data to send (logged on users only)"'
                  example: 25000
                  type: integer
              required:
                - long_polling_interval
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Developer
  /admin/site_settings/mailgun_api_key:
    put:
      description: mailgun api key
      requestBody:
        content:
          application/json:
            schema:
              properties:
                mailgun_api_key:
                  description: Mailgun Secret API key used to verify webhook messages.
                  example: ""
                  type: string
              required:
                - mailgun_api_key
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/manual_polling_enabled:
    put:
      description: manual polling enabled
      requestBody:
        content:
          application/json:
            schema:
              properties:
                manual_polling_enabled:
                  example: false
                  type: boolean
              required:
                - manual_polling_enabled
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/max_age_unmatched_emails:
    put:
      description: max age unmatched emails
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_age_unmatched_emails:
                  description: '"Delete unmatched screened email entries after (N) days."'
                  example: 365
                  type: integer
              required:
                - max_age_unmatched_emails
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/max_age_unmatched_ips:
    put:
      description: max age unmatched ips
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_age_unmatched_ips:
                  description: '"Delete unmatched screened IP entries after (N) days."'
                  example: 365
                  type: integer
              required:
                - max_age_unmatched_ips
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/max_api_keys_per_user:
    put:
      description: '"max api keys per user"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_api_keys_per_user:
                  description: '"Maximum number of user API keys per user"'
                  example: 10
                  type: integer
              required:
                - max_api_keys_per_user
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User Preferences
  /admin/site_settings/max_attachment_size_kb:
    put:
      description: max attachment size kb
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_image_size_kb:
                  description: The maximum attachment upload size in kB. This must be configured in nginx {client_max_body_size} / apache or proxy as well.
                  example: 3072
                  type: integer
              required:
                - max_attachment_size_kb
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/max_bookmarks_per_day:
    put:
      description: max bookmarks per day
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_bookmarks_per_day:
                  description: '"Maximum number of bookmarks per user per day."'
                  example: 20
                  type: integer
              required:
                - max_bookmarks_per_day
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Rate Limits
  /admin/site_settings/max_edits_per_day:
    put:
      description: max edits per day
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_edits_per_day:
                  description: '"Maximum number of edits per user per day."'
                  example: 30
                  type: integer
              required:
                - max_edits_per_day
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Rate Limits
  /admin/site_settings/max_emails_per_day_per_user:
    put:
      description: max emails per day per user
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_emails_per_day_per_user:
                  description: Maximum number of emails to send users per day. 0 to disable the limit
                  example: 100
                  type: integer
              required:
                - max_emails_per_day_per_user
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/max_flags_per_day:
    put:
      description: max flags per day
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_flags_per_day:
                  description: '"Maximum number of flags per user per day."'
                  example: 20
                  type: integer
              required:
                - max_flags_per_day
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Rate Limits
  /admin/site_settings/max_image_height:
    put:
      description: max image height
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_image_height:
                  description: Maximum thumbnail height of images in a post
                  example: 500
                  type: integer
              required:
                - max_image_height
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/max_image_megapixels:
    put:
      description: max image megapixels
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_image_megapixels:
                  description: Maximum number of megapixels allowed for an image
                  example: 40
                  type: integer
              required:
                - max_image_megapixels
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/max_image_size_kb:
    put:
      description: max image size kb
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_image_size_kb:
                  description: The maximum image upload size in kB. This must be configured in nginx {client_max_body_size} / apache or proxy as well.
                  example: 3072
                  type: integer
              required:
                - max_image_size_kb
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/max_image_width:
    put:
      description: max image width
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_image_width:
                  description: Maximum thumbnail width of images in a post
                  example: 690
                  type: integer
              required:
                - max_image_width
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/max_invites_per_day:
    put:
      description: max invites per day
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_invites_per_day:
                  description: '"Maximum number of invites a user can send per day."'
                  example: 10
                  type: integer
              required:
                - max_invites_per_day
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Rate Limits
  /admin/site_settings/max_likes_per_day:
    put:
      description: max likes per day
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_likes_per_day:
                  description: '"Maximum number of likes per user per day."'
                  example: 50
                  type: integer
              required:
                - max_likes_per_day
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Rate Limits
  /admin/site_settings/max_mentions_per_post:
    put:
      description: max mentions per post
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_mentions_per_post:
                  type: integer
              required:
                - max_mentions_per_post
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/max_new_accounts_per_registration_ip:
    put:
      description: max new accounts per registration ip
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_new_accounts_per_registration_ip:
                  description: '"If there are already (n) trust level 0 accounts from this IP (and none is a staff member or at TL2 or higher), stop accepting new signups from that IP."'
                  example: 3
                  type: integer
              required:
                - max_new_accounts_per_registration_ip
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/max_oneboxes_per_post:
    put:
      description: max oneboxes per post
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_oneboxes_per_post:
                  description: '"Enable embedding of swf and flv (Adobe Flash) links in oneboxes. WARNING: may introduce security risks."'
                  example: 50
                  type: integer
              required:
                - max_oneboxes_per_post
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Onebox
  /admin/site_settings/max_post_length:
    put:
      description: max post length
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_post_length:
                  type: integer
              required:
                - max_post_length
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/max_prints_per_hour_per_user:
    put:
      description: max prints per hour per user
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_prints_per_hour_per_user:
                  description: '"Maximum number of /print page impressions (set to 0 to disable)"'
                  example: 5
                  type: integer
              required:
                - max_prints_per_hour_per_user
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Rate Limits
  /admin/site_settings/max_private_messages_per_day:
    put:
      description: max private messages per day
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_private_messages_per_day:
                  description: '"Maximum number of messages users can create per day."'
                  example: 20
                  type: integer
              required:
                - max_private_messages_per_day
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Rate Limits
  /admin/site_settings/max_replies_in_first_day:
    put:
      description: max replies in first day
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_replies_in_first_day:
                  description: '"The maximum number of replies a user is allowed to create in the 24 hour period after creating their first post"'
                  example: 10
                  type: integer
              required:
                - max_replies_in_first_day
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Rate Limits
  /admin/site_settings/max_reply_history:
    put:
      description: max reply history
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_reply_history:
                  type: integer
              required:
                - max_reply_history
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/max_similar_results:
    put:
      description: max similar results
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_similar_results:
                  description: '"How many similar topics to show above the editor when composing a new topic. Comparison is based on title and body."'
                  example: 5
                  type: integer
              required:
                - max_similar_results
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/max_tag_length:
    put:
      description: '"max tag length"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_tag_length:
                  description: '"The maximum amount of characters that can be used in a tag."'
                  example: 20
                  type: integer
              required:
                - max_tag_length
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Tags
  /admin/site_settings/max_tag_search_results:
    put:
      description: '"max_tag_search_results"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_tag_search_results:
                  description: '"When searching for tags, the maximum number of results to show."'
                  example: 5
                  type: integer
              required:
                - max_tag_search_results
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Tags
  /admin/site_settings/max_tags_in_filter_list:
    put:
      description: '"max tags in filter list"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_tags_in_filter_list:
                  description: '"Maximum number of tags to show in the filter dropdown. The most used tags will be shown."'
                  example: 30
                  type: integer
              required:
                - max_tags_in_filter_list
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Tags
  /admin/site_settings/max_tags_per_topic:
    put:
      description: '"max tags per topic"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_tags_per_topic:
                  description: '"The maximum tags that can be applied to a topic."'
                  example: 5
                  type: integer
              required:
                - max_tags_per_topic
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Tags
  /admin/site_settings/max_topic_invitations_per_day:
    put:
      description: max topic invitations per day
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_topic_invitations_per_day:
                  description: '"Maximum number of topic invitations a user can send per day."'
                  example: 30
                  type: integer
              required:
                - max_topic_invitations_per_day
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Rate Limits
  /admin/site_settings/max_topic_title_length:
    put:
      description: max topic title length
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_topic_title_length:
                  type: integer
              required:
                - max_topic_title_length
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/max_topics_in_first_day:
    put:
      description: max topics in first day
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_topics_in_first_day:
                  description: '"The maximum number of topics a user is allowed to create in the 24 hour period after creating their first post"'
                  example: 3
                  type: integer
              required:
                - max_topics_in_first_day
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Rate Limits
  /admin/site_settings/max_topics_per_day:
    put:
      description: max topics per day
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_topics_per_day:
                  description: '"Maximum number of topics a user can create per day."'
                  example: 20
                  type: integer
              required:
                - max_topics_per_day
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Rate Limits
  /admin/site_settings/max_user_api_reqs_per_day:
    put:
      description: '"max user api reqs per day"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_user_api_reqs_per_day:
                  description: '"Maximum number of user API requests per key per day"'
                  example: 2880
                  type: integer
              required:
                - max_user_api_reqs_per_day
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User API
  /admin/site_settings/max_user_api_reqs_per_minute:
    put:
      description: '"max user api reqs per minute"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_user_api_reqs_per_minute:
                  description: '"Maximum number of user API requests per key per minute"'
                  example: 20
                  type: integer
              required:
                - max_user_api_reqs_per_minute
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User API
  /admin/site_settings/max_username_length:
    put:
      description: max username length
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_username_length:
                  type: integer
              required:
                - max_username_length
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/max_users_notified_per_group_mention:
    put:
      description: max users notified per group mention
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_users_notified_per_group_mention:
                  type: integer
              required:
                - max_users_notified_per_group_mention
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/maximum_backups:
    put:
      description: maximum backups
      requestBody:
        content:
          application/json:
            schema:
              properties:
                maximum_backups:
                  description: '"The maximum amount of backups to keep on disk. Older backups are automatically deleted"'
                  example: 5
                  type: integer
              required:
                - maximum_backups
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Backups
  /admin/site_settings/maximum_session_age:
    put:
      description: maximum session age
      requestBody:
        content:
          application/json:
            schema:
              properties:
                maximum_session_age:
                  type: integer
              required:
                - maximum_session_age
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/maximum_staged_users_per_email:
    put:
      description: maximum staged users per email
      requestBody:
        content:
          application/json:
            schema:
              properties:
                maximum_staged_users_per_email:
                  description: Maximum number of staged users created when processing an incoming email.
                  example: 10
                  type: integer
              required:
                - maximum_staged_users_per_email
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/min_admin_password_length:
    put:
      description: min admin password length
      requestBody:
        content:
          application/json:
            schema:
              properties:
                min_admin_password_length:
                  type: integer
              required:
                - min_admin_password_length
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/min_ban_entries_for_roll_up:
    put:
      description: min ban entries for roll up
      requestBody:
        content:
          application/json:
            schema:
              properties:
                min_ban_entries_for_roll_up:
                  description: '"When clicking the Roll up button, will create a new subnet ban entry if there are at least (N) entries."'
                  example: 5
                  type: integer
              required:
                - min_ban_entries_for_roll_up
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/min_body_title_length:
    put:
      description: min body title length
      requestBody:
        content:
          application/json:
            schema:
              properties:
                min_body_title_length:
                  type: integer
              required:
                - min_body_title_length
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/min_first_post_length:
    put:
      description: min first post length
      requestBody:
        content:
          application/json:
            schema:
              properties:
                min_first_post_length:
                  type: integer
              required:
                - min_first_post_length
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/min_first_post_typing_time:
    put:
      description: min first post typing time
      requestBody:
        content:
          application/json:
            schema:
              properties:
                min_first_post_typing_time:
                  description: '"Minimum amount of time in milliseconds a user must type during first post, if threshold is not met post will automatically enter the needs approval queue. Set to 0 to disable (not recommended)"'
                  example: 3000
                  type: integer
              required:
                - min_first_post_typing_time
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/min_password_length:
    put:
      description: min password length
      requestBody:
        content:
          application/json:
            schema:
              properties:
                min_password_length:
                  type: integer
              required:
                - min_password_length
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/min_post_length:
    put:
      description: min post length
      requestBody:
        content:
          application/json:
            schema:
              properties:
                min_post_length:
                  type: integer
              required:
                - min_post_length
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/min_private_message_post_length:
    put:
      description: min private message post length
      requestBody:
        content:
          application/json:
            schema:
              properties:
                min_private_message_post_length:
                  type: integer
              required:
                - min_private_message_post_length
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/min_private_message_title_length:
    put:
      description: min private message title length
      requestBody:
        content:
          application/json:
            schema:
              properties:
                min_private_message_title_length:
                  type: integer
              required:
                - min_private_message_title_length
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/min_search_term_length:
    put:
      description: min search term length
      requestBody:
        content:
          application/json:
            schema:
              properties:
                min_search_term_length:
                  description: '"Minimum valid search term length in characters"'
                  example: 3
                  type: integer
              required:
                - min_search_term_length
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Search
  /admin/site_settings/min_title_similar_length:
    put:
      description: min_title_similar_length
      requestBody:
        content:
          application/json:
            schema:
              properties:
                min_title_similar_length:
                  type: integer
              required:
                - min_title_similar_length
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/min_topic_title_length:
    put:
      description: min topic title length
      requestBody:
        content:
          application/json:
            schema:
              properties:
                min_topic_title_length:
                  type: integer
              required:
                - min_topic_title_length
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/min_trust_level_for_user_api_key:
    put:
      description: '"min trust level for user api key"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                min_trust_level_for_user_api_key:
                  description: '"Trust level required for generation of user API keys"'
                  example: 1
                  type: integer
              required:
                - min_trust_level_for_user_api_key
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings User API
  /admin/site_settings/min_trust_level_to_tag_topics:
    put:
      description: '"min trust level to tag topics"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                min_trust_level_to_tag_topics:
                  description: '"Minimum trust level required to tag topics"'
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                  example: 0
                  type: integer
              required:
                - min_trust_level_to_tag_topics
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Tags
  /admin/site_settings/min_trust_to_allow_self_wiki:
    put:
      description: min trust to allow self wiki
      requestBody:
        content:
          application/json:
            schema:
              properties:
                min_trust_to_allow_self_wiki:
                  description: "\"The minimum trust level required to make user's own post wiki.\""
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                  example: 3
                  type: integer
              required:
                - min_trust_to_allow_self_wiki
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/min_trust_to_create_tag:
    put:
      description: '"min trust to create tag"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tagging_enabled:
                  description: '"The minimum trust level required to create a tag."'
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                  example: 3
                  type: integer
              required:
                - min_trust_to_create_tag
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Tags
  /admin/site_settings/min_trust_to_create_topic:
    put:
      description: min trust to create topic
      requestBody:
        content:
          application/json:
            schema:
              properties:
                min_trust_to_create_topic:
                  description: '"The minimum trust level required to create a new topic"'
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                  example: 0
                  type: integer
              required:
                - min_trust_to_create_topic
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/min_trust_to_edit_post:
    put:
      description: min trust to edit post
      requestBody:
        content:
          application/json:
            schema:
              properties:
                min_trust_to_edit_post:
                  description: '"The minimum trust level required to edit posts."'
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                  example: 0
                  type: integer
              required:
                - min_trust_to_edit_post
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/min_trust_to_edit_wiki_post:
    put:
      description: min trust to edit wiki post
      requestBody:
        content:
          application/json:
            schema:
              properties:
                min_trust_to_edit_wiki_post:
                  description: '"The minimum trust level required to edit post marked as wiki."'
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                  example: 1
                  type: integer
              required:
                - min_trust_to_edit_wiki_post
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/min_trust_to_send_messages:
    put:
      description: min trust to send messages
      requestBody:
        content:
          application/json:
            schema:
              properties:
                min_trust_to_send_messages:
                  description: '"The minimum trust level required to create new private messages."'
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                  example: 0
                  type: integer
              required:
                - min_trust_to_send_messages
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/min_username_length:
    put:
      description: min username length
      requestBody:
        content:
          application/json:
            schema:
              properties:
                min_username_length:
                  type: integer
              required:
                - min_username_length
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/minimum_topics_similar:
    put:
      description: minimum topics similar
      requestBody:
        content:
          application/json:
            schema:
              properties:
                minimum_topics_similar:
                  description: '"How many topics need to exist before similar topics are presented when composing new topics."'
                  example: 50
                  type: integer
              required:
                - minimum_topics_similar
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/mobile_logo_url:
    put:
      description: Update the mobile logo url
      requestBody:
        content:
          application/json:
            schema:
              properties:
                mobile_logo_url:
                  type: string
              required:
                - mobile_logo_url
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Required
  /admin/site_settings/must_approve_users:
    put:
      description: Update must approve users
      requestBody:
        content:
          application/json:
            schema:
              properties:
                must_approve_users:
                  type: boolean
              required:
                - must_approve_users
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/native_app_install_banner:
    put:
      description: '"native app install banner"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                native_app_install_banner:
                  description: '"Asks recurring visitors to install Discourse native app."'
                  example: false
                  type: boolean
              required:
                - native_app_install_banner
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/new_version_emails:
    put:
      description: new version emails
      requestBody:
        content:
          application/json:
            schema:
              properties:
                new_version_emails:
                  description: '"Send an email to the contact_email address when a new version of Discourse is available."'
                  example: true
                  type: boolean
              required:
                - new_version_emails
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/newuser_max_attachments:
    put:
      description: newuser max attachments
      requestBody:
        content:
          application/json:
            schema:
              properties:
                newuser_max_attachments:
                  type: integer
              required:
                - newuser_max_attachments
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/newuser_max_images:
    put:
      description: newuser max images
      requestBody:
        content:
          application/json:
            schema:
              properties:
                newuser_max_images:
                  type: integer
              required:
                - newuser_max_images
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/newuser_max_links:
    put:
      description: newuser max links
      requestBody:
        content:
          application/json:
            schema:
              properties:
                newuser_max_links:
                  type: integer
              required:
                - newuser_max_links
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/newuser_max_mentions_per_post:
    put:
      description: newuser max mentions per post
      requestBody:
        content:
          application/json:
            schema:
              properties:
                newuser_max_mentions_per_post:
                  type: integer
              required:
                - newuser_max_mentions_per_post
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/newuser_max_replies_per_topic:
    put:
      description: newuser max replies per topic
      requestBody:
        content:
          application/json:
            schema:
              properties:
                newuser_max_replies_per_topic:
                  type: integer
              required:
                - newuser_max_replies_per_topic
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/newuser_spam_host_threshold:
    put:
      description: newuser spam host threshold
      requestBody:
        content:
          application/json:
            schema:
              properties:
                newuser_spam_host_threshold:
                  description: '"How many times a new user can post a link to the same host within their `newuser_spam_host_threshold` posts before being considered spam."'
                  example: 3
                  type: integer
              required:
                - newuser_spam_host_threshold
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/notification_email:
    put:
      description: Update the notification email
      requestBody:
        content:
          application/json:
            schema:
              properties:
                notification_email:
                  type: string
              required:
                - notification_email
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Required
  /admin/site_settings/notify_about_flags_after:
    put:
      description: notify about flags after
      requestBody:
        content:
          application/json:
            schema:
              properties:
                notify_about_flags_after:
                  description: "\"If there are flags that haven't been handled after this many hours, send an email to the contact_email. Set to 0 to disable.\""
                  example: 48
                  type: integer
              required:
                - notify_about_flags_after
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/notify_about_queued_posts_after:
    put:
      description: notify about queued posts after
      requestBody:
        content:
          application/json:
            schema:
              properties:
                notify_about_queued_posts_after:
                  type: integer
              required:
                - notify_about_queued_posts_after
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/notify_mods_when_user_blocked:
    put:
      description: notify mods when user blocked
      requestBody:
        content:
          application/json:
            schema:
              properties:
                notify_mods_when_user_blocked:
                  description: '"If a user is automatically blocked, send a message to all moderators."'
                  example: false
                  type: boolean
              required:
                - notify_mods_when_user_blocked
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/num_flaggers_to_close_topic:
    put:
      description: num flaggers to close topic
      requestBody:
        content:
          application/json:
            schema:
              properties:
                num_flaggers_to_close_topic:
                  description: '"Minimum number of unique flaggers that is required to automatically pause a topic for intervention"'
                  example: 5
                  type: integer
              required:
                - num_flaggers_to_close_topic
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/num_flags_to_close_topic:
    put:
      description: num flags to close topic
      requestBody:
        content:
          application/json:
            schema:
              properties:
                num_flags_to_close_topic:
                  description: '"Minimum number of active flags that is required to automatically pause a topic for intervention"'
                  example: 12
                  type: integer
              required:
                - num_flags_to_close_topic
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/num_spam_flags_to_block_new_user:
    put:
      description: num spam flags to block new user
      requestBody:
        content:
          application/json:
            schema:
              properties:
                num_spam_flags_to_block_new_user:
                  description: "\"If a new user's posts get this many spam flags from num_users_to_block_new_user different users, hide all their posts and prevent future posting. 0 to disable.\""
                  example: 3
                  type: integer
              required:
                - num_spam_flags_to_block_new_user
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/num_tl3_flags_to_block_new_user:
    put:
      description: num tl3 flags to block new user
      requestBody:
        content:
          application/json:
            schema:
              properties:
                num_tl3_flags_to_block_new_user:
                  description: "\"If a new user's posts get this many flags from num_tl3_users_to_block_new_user different trust level 3 users, hide all their posts and prevent future posting. 0 to disable.\""
                  example: 4
                  type: integer
              required:
                - num_tl3_flags_to_block_new_user
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/num_tl3_users_to_block_new_user:
    put:
      description: num tl3 users to block new user
      requestBody:
        content:
          application/json:
            schema:
              properties:
                num_tl3_users_to_block_new_user:
                  description: "\"If a new user's posts get num_tl3_flags_to_block_new_user flags from this many different trust level 3 users, hide all their posts and prevent future posting. 0 to disable.\""
                  example: 2
                  type: integer
              required:
                - num_tl3_users_to_block_new_user
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/num_users_to_block_new_user:
    put:
      description: num users to block new user
      requestBody:
        content:
          application/json:
            schema:
              properties:
                num_users_to_block_new_user:
                  description: "\"If a new user's posts get num_spam_flags_to_block_new_user spam flags from this many different users, hide all their posts and prevent future posting. 0 to disable.\""
                  example: 3
                  type: integer
              required:
                - num_users_to_block_new_user
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  /admin/site_settings/onebox_domains_blacklist:
    put:
      description: onebox domains blacklist
      requestBody:
        content:
          application/json:
            schema:
              properties:
                onebox_domains_blacklist:
                  description: '"A list of domains that will never be oneboxed."'
                  example: ""
                  type: string
              required:
                - onebox_domains_blacklist
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Onebox
  /admin/site_settings/pending_users_reminder_delay:
    put:
      description: pending users reminder delay
      requestBody:
        content:
          application/json:
            schema:
              properties:
                pending_users_reminder_delay:
                  type: integer
              required:
                - pending_users_reminder_delay
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/permalink_normalizations:
    put:
      description: permalink normalizations
      requestBody:
        content:
          application/json:
            schema:
              properties:
                permalink_normalizations:
                  description: '"Apply the following regex before matching permalinks, for example: /(topic.*)\?.*/\1 will strip query strings from topic routes. Format is regex+string use \1 etc. to access captures"'
                  example: ""
                  type: string
              required:
                - permalink_normalizations
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/poll_edit_window_mins:
    put:
      description: poll edit window mins
      requestBody:
        content:
          application/json:
            schema:
              properties:
                poll_edit_window_mins:
                  description: Number of minutes after post creation during which polls can be edited.
                  example: 5
                  type: integer
              required:
                - poll_edit_window_mins
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Plugins
  /admin/site_settings/poll_enabled:
    put:
      description: '"poll enabled"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                poll_enabled:
                  description: '"Allow users to create polls?"'
                  example: true
                  type: boolean
              required:
                - poll_enabled
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Plugins
  /admin/site_settings/poll_maximum_options:
    put:
      description: '"poll maximum options"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                poll_maximum_options:
                  description: '"Maximum number of options allowed in a poll."'
                  example: 20
                  type: integer
              required:
                - poll_maximum_options
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Plugins
  /admin/site_settings/polling_interval:
    put:
      description: polling interval
      requestBody:
        content:
          application/json:
            schema:
              properties:
                polling_interval:
                  description: '"When not long polling, how often should logged on clients poll in milliseconds"'
                  example: 3000
                  type: integer
              required:
                - polling_interval
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Developer
  /admin/site_settings/pop3_polling_enabled:
    put:
      description: pop3 polling enabled
      requestBody:
        content:
          application/json:
            schema:
              properties:
                pop3_polling_enabled:
                  description: You must set a 'pop3 polling host' before enabling POP3 polling
                  example: false
                  type: boolean
              required:
                - pop3_polling_enabled
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/pop3_polling_host:
    put:
      description: pop3 polling host
      requestBody:
        content:
          application/json:
            schema:
              properties:
                pop3_polling_host:
                  description: The host to poll for email via POP3
                  type: string
              required:
                - pop3_polling_host
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/pop3_polling_openssl_verify:
    put:
      description: pop3 polling openssl verify
      requestBody:
        content:
          application/json:
            schema:
              properties:
                pop3_polling_openssl_verify:
                  description: Verify TLS server certificate
                  example: true
                  type: boolean
              required:
                - pop3_polling_openssl_verify
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/pop3_polling_password:
    put:
      description: pop3 polling password
      requestBody:
        content:
          application/json:
            schema:
              properties:
                pop3_polling_password:
                  description: The password for the POP3 account to poll for email.
                  type: string
              required:
                - pop3_polling_password
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/pop3_polling_period_mins:
    put:
      description: pop3 polling period mins
      requestBody:
        content:
          application/json:
            schema:
              properties:
                pop3_polling_period_mins:
                  description: '"The period in minutes between checking the POP3 account for email. NOTE: requires restart."'
                  example: 5
                  type: integer
              required:
                - pop3_polling_period_mins
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/pop3_polling_port:
    put:
      description: pop3 polling port
      requestBody:
        content:
          application/json:
            schema:
              properties:
                pop3_polling_port:
                  description: The port to poll a POP3 account on
                  example: 995
                  type: integer
              required:
                - pop3_polling_port
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/pop3_polling_ssl:
    put:
      description: pop3 polling ssl
      requestBody:
        content:
          application/json:
            schema:
              properties:
                pop3_polling_ssl:
                  description: Use SSL while connecting to the POP3 server
                  example: true
                  type: boolean
              required:
                - pop3_polling_ssl
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/pop3_polling_username:
    put:
      description: pop3 polling username
      requestBody:
        content:
          application/json:
            schema:
              properties:
                pop3_polling_username:
                  description: The username for the POP3 account to poll for email.
                  type: string
              required:
                - pop3_polling_username
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/port:
    put:
      description: port
      requestBody:
        content:
          application/json:
            schema:
              properties:
                port:
                  description: '"DEVELOPER ONLY! WARNING! Use this HTTP port rather than the default of port 80. Leave blank for default of 80."'
                  example: 3000
                  type: integer
              required:
                - port
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Developer
  /admin/site_settings/post_edit_time_limit:
    put:
      description: post edit time limit
      requestBody:
        content:
          application/json:
            schema:
              properties:
                post_edit_time_limit:
                  type: integer
              required:
                - post_edit_time_limit
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/post_excerpt_maxlength:
    put:
      description: post excerpt maxlength
      requestBody:
        content:
          application/json:
            schema:
              properties:
                post_excerpt_maxlength:
                  type: integer
              required:
                - post_excerpt_maxlength
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/post_menu:
    put:
      description: Update the post menu items
      requestBody:
        content:
          application/json:
            schema:
              properties:
                post_menu:
                  description: pipe delimited
                  enum:
                    - like-count
                    - like
                    - share
                    - flag
                    - edit
                    - bookmark
                    - delete
                    - admin
                    - reply
                  example: like|edit|flag|delete|share|bookmark|reply
                  type: string
              required:
                - post_menu
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/post_menu_hidden_items:
    put:
      description: Update the post menu hidden items
      requestBody:
        content:
          application/json:
            schema:
              properties:
                post_menu_hidden_items:
                  description: pipe delimited
                  enum:
                    - like
                    - share
                    - flag
                    - edit
                    - bookmark
                    - delete
                    - admin
                    - reply
                  example: like|edit|flag|delete|share|bookmark|reply
                  type: string
              required:
                - post_menu_hidden_items
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/post_onebox_maxlength:
    put:
      description: post onebox maxlength
      requestBody:
        content:
          application/json:
            schema:
              properties:
                post_onebox_maxlength:
                  description: '"Maximum length of a oneboxed Discourse post in characters."'
                  example: 500
                  type: integer
              required:
                - post_onebox_maxlength
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Onebox
  /admin/site_settings/post_undo_action_window_mins:
    put:
      description: post undo action window mins
      requestBody:
        content:
          application/json:
            schema:
              properties:
                post_undo_action_window_mins:
                  type: integer
              required:
                - post_undo_action_window_mins
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/prevent_anons_from_downloading_files:
    put:
      description: prevent anons from downloading files
      requestBody:
        content:
          application/json:
            schema:
              properties:
                prevent_anons_from_downloading_files:
                  description: '"Prevent anonymous users from downloading attachments. WARNING: this will prevent any non-image site assets posted as attachments from working."'
                  example: false
                  type: boolean
              required:
                - prevent_anons_from_downloading_files
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/previous_visit_timeout_hours:
    put:
      description: previous visit timeout hours
      requestBody:
        content:
          application/json:
            schema:
              properties:
                previous_visit_timeout_hours:
                  description: "\"How long a visit lasts before we consider it the 'previous' visit, in hours\""
                  example: 1
                  type: integer
              required:
                - previous_visit_timeout_hours
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/prioritize_username_in_ux:
    put:
      description: prioritize username in ux
      requestBody:
        content:
          application/json:
            schema:
              properties:
                prioritize_username_in_ux:
                  type: boolean
              required:
                - prioritize_username_in_ux
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/privacy_policy_url:
    put:
      description: privacy policy url
      requestBody:
        content:
          application/json:
            schema:
              properties:
                privacy_policy_url:
                  description: '"If you have a Privacy Policy document hosted elsewhere that you want to use, provide the full URL here."'
                  example: ""
                  type: string
              required:
                - privacy_policy_url
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Legal
  /admin/site_settings/private_email_time_window_seconds:
    put:
      description: private email time window seconds
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email_posts_context:
                  type: integer
              required:
                - email_posts_context
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/public_user_custom_fields:
    put:
      description: public user custom fields
      requestBody:
        content:
          application/json:
            schema:
              properties:
                public_user_custom_fields:
                  type: string
              required:
                - public_user_custom_fields
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/purge_deleted_uploads_grace_period_days:
    put:
      description: purge deleted uploads grace period days
      requestBody:
        content:
          application/json:
            schema:
              properties:
                purge_deleted_uploads_grace_period_days:
                  description: '"Grace period (in days) before a deleted upload is erased."'
                  example: 30
                  type: integer
              required:
                - purge_deleted_uploads_grace_period_days
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/purge_unactivated_users_grace_period_days:
    put:
      description: purge unactivated users grace period days
      requestBody:
        content:
          application/json:
            schema:
              properties:
                purge_unactivated_users_grace_period_days:
                  type: integer
              required:
                - purge_unactivated_users_grace_period_days
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/queue_jobs:
    put:
      description: queue jobs
      requestBody:
        content:
          application/json:
            schema:
              properties:
                port:
                  description: '"DEVELOPER ONLY! WARNING! By default, queue jobs in sidekiq. If disabled, your site will be broken."'
                  example: true
                  type: boolean
              required:
                - queue jobs
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Developer
  /admin/site_settings/rate_limit_create_post:
    put:
      description: rate limit create post
      requestBody:
        content:
          application/json:
            schema:
              properties:
                rate_limit_create_post:
                  description: '"After posting, users must wait (n) seconds before creating another post."'
                  example: 5
                  type: integer
              required:
                - rate_limit_create_post
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Rate Limits
  /admin/site_settings/rate_limit_create_topic:
    put:
      description: rate limit create topic
      requestBody:
        content:
          application/json:
            schema:
              properties:
                rate_limit_create_topic:
                  description: '"After creating a topic, users must wait (n) seconds before creating another topic."'
                  example: 16
                  type: integer
              required:
                - rate_limit_create_topic
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Rate Limits
  /admin/site_settings/rate_limit_new_user_create_post:
    put:
      description: rate limit new user create post
      requestBody:
        content:
          application/json:
            schema:
              properties:
                rate_limit_new_user_create_post:
                  description: '"After posting, new users must wait (n) seconds before creating another post."'
                  example: 30
                  type: integer
              required:
                - rate_limit_new_user_create_post
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Rate Limits
  /admin/site_settings/rate_limit_new_user_create_topic:
    put:
      description: rate limit new user create topic
      requestBody:
        content:
          application/json:
            schema:
              properties:
                rate_limit_new_user_create_topic:
                  description: '"After creating a topic, new users must wait (n) seconds before creating another topic."'
                  example: 120
                  type: integer
              required:
                - rate_limit_new_user_create_topic
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Rate Limits
  /admin/site_settings/read_time_word_count:
    put:
      description: read time word count
      requestBody:
        content:
          application/json:
            schema:
              properties:
                read_time_word_count:
                  description: '"Word count per minute for calculating estimated reading time."'
                  example: 500
                  type: integer
              required:
                - read_time_word_count
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/readonly_mode_during_backup:
    put:
      description: readonly_mode_during_backup
      requestBody:
        content:
          application/json:
            schema:
              properties:
                readonly_mode_during_backup:
                  description: '"Enable read only mode while taking a backup"'
                  example: true
                  type: boolean
              required:
                - readonly_mode_during_backup
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Backups
  /admin/site_settings/rebake_old_posts_count:
    put:
      description: rebake old posts count
      requestBody:
        content:
          application/json:
            schema:
              properties:
                rebake_old_posts_count:
                  description: '"Number of old posts to be rebaked every 15 minutes."'
                  example: 250
                  type: integer
              required:
                - rebake_old_posts_count
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Developer
  /admin/site_settings/redirect_users_to_top_page:
    put:
      description: redirect users to top page
      requestBody:
        content:
          application/json:
            schema:
              properties:
                redirect_users_to_top_page:
                  type: boolean
              required:
                - redirect_users_to_top_page
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/relative_date_duration:
    put:
      description: Update relative date duration
      requestBody:
        content:
          application/json:
            schema:
              properties:
                relative_date_duration:
                  type: integer
              required:
                - relative_date_duration
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/remove_muted_tags_from_latest:
    put:
      description: '"remove muted tags from latest"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                remove_muted_tags_from_latest:
                  description: "\"Don't show topics tagged with muted tags in the latest topic list.\""
                  example: false
                  type: boolean
              required:
                - remove_muted_tags_from_latest
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Tags
  /admin/site_settings/reply_by_email_address:
    put:
      description: reply by email address
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reply_by_email_address:
                  description: Template for reply by email incoming email address.
                  example: "%{reply_key}@reply.example.com or replies+%{reply_key}@example.com"
                  type: string
              required:
                - reply_by_email_address
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/reply_by_email_enabled:
    put:
      description: reply by email enabled
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reply_by_email_enabled:
                  description: "`reply_by_email_address` needs to be set first"
                  example: false
                  type: boolean
              required:
                - reply_by_email_enabled
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/reserved_usernames:
    put:
      description: reserved usernames
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reserved_usernames:
                  description: pipe delimited
                  type: string
              required:
                - reserved_usernames
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/reset_bounce_score_after_days:
    put:
      description: reset bounce score after days
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reset_bounce_score_after_days:
                  description: Automatically reset bounce score after X days.
                  example: 31
                  type: integer
              required:
                - reset_bounce_score_after_days
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/s3_access_key_id:
    put:
      description: s3 access key id
      requestBody:
        content:
          application/json:
            schema:
              properties:
                s3_access_key_id:
                  description: '"The Amazon S3 access key id that will be used to upload images."'
                  example: ""
                  type: string
              required:
                - s3_access_key_id
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/s3_backup_bucket:
    put:
      description: s3 backup bucket
      requestBody:
        content:
          application/json:
            schema:
              properties:
                s3_backup_bucket:
                  description: '"The remote bucket to hold backups. WARNING: Make sure it is a private bucket."'
                  example: ""
                  type: string
              required:
                - s3_backup_bucket
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Backups
  /admin/site_settings/s3_cdn_url:
    put:
      description: s3 cdn url
      requestBody:
        content:
          application/json:
            schema:
              properties:
                s3_cdn_url:
                  description: '"The CDN URL to use for all s3 assets (for example: https://cdn.somewhere.com). WARNING: after changing this setting you must rebake all old posts."'
                  example: ""
                  type: string
              required:
                - s3_cdn_url
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/s3_disable_cleanup:
    put:
      description: s3 disable cleanup
      requestBody:
        content:
          application/json:
            schema:
              properties:
                s3_disable_cleanup:
                  description: '"Disable the removal of backups from S3 when removed locally."'
                  example: false
                  type: boolean
              required:
                - s3_disable_cleanup
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Backups
  /admin/site_settings/s3_region:
    put:
      description: s3 region
      requestBody:
        content:
          application/json:
            schema:
              properties:
                s3_region:
                  description: '"The Amazon S3 region name that will be used to upload images."'
                  enum:
                    - ap-northeast-1
                    - ap-northeast-2
                    - ap-south-1
                    - ap-southeast-1
                    - ap-southeast-2
                    - cn-north-1
                    - eu-central-1
                    - eu-west-1
                    - sa-east-1
                    - us-east-1
                    - us-gov-west-1
                    - us-west-1
                    - us-west-2
                  example: us-west-2
                  type: string
              required:
                - s3_region
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/s3_secret_access_key:
    put:
      description: s3 secret access key
      requestBody:
        content:
          application/json:
            schema:
              properties:
                s3_secret_access_key:
                  description: '"The Amazon S3 secret access key that will be used to upload images."'
                  example: ""
                  type: string
              required:
                - s3_secret_access_key
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/s3_upload_bucket:
    put:
      description: s3 upload bucket
      requestBody:
        content:
          application/json:
            schema:
              properties:
                s3_upload_bucket:
                  description: '"The Amazon S3 bucket name that files will be uploaded into. WARNING: must be lowercase, no periods, no underscores."'
                  example: ""
                  type: string
              required:
                - s3_upload_bucket
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/s3_use_iam_profile:
    put:
      description: s3 use iam profile
      requestBody:
        content:
          application/json:
            schema:
              properties:
                s3_use_iam_profile:
                  description: "'Use AWS EC2 IAM role to retrieve keys. NOTE: enabling will override \"s3 access key id\" and \"s3 secret access key\" settings.'"
                  example: false
                  type: boolean
              required:
                - s3_use_iam_profile
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Files
  /admin/site_settings/search_prefer_recent_posts:
    put:
      description: search prefer recent posts
      requestBody:
        content:
          application/json:
            schema:
              properties:
                search_prefer_recent_posts:
                  description: '"If searching your large forum is slow, this option tries an index of more recent posts first"'
                  example: false
                  type: boolean
              required:
                - search_prefer_recent_posts
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Search
  /admin/site_settings/search_recent_posts_size:
    put:
      description: search recent posts size
      requestBody:
        content:
          application/json:
            schema:
              properties:
                search_recent_posts_size:
                  description: '"How many recent posts to keep in the index"'
                  example: 100000
                  type: integer
              required:
                - search_recent_posts_size
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Search
  /admin/site_settings/search_tokenize_chinese_japanese_korean:
    put:
      description: search tokenize chinese japanese korean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                search_tokenize_chinese_japanese_korean:
                  description: '"Force search to tokenize Chinese/Japanese/Korean even on non CJK sites"'
                  example: false
                  type: boolean
              required:
                - search_tokenize_chinese_japanese_korean
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Search
  /admin/site_settings/send_welcome_message:
    put:
      description: send welcome message
      requestBody:
        content:
          application/json:
            schema:
              properties:
                send_welcome_message:
                  description: '"Send all new users a welcome message with a quick start guide."'
                  example: true
                  type: boolean
              required:
                - send_welcome_message
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/sequential_replies_threshold:
    put:
      description: sequential replies threshold
      requestBody:
        content:
          application/json:
            schema:
              properties:
                sequential_replies_threshold:
                  description: '"Number of posts a user has to make in a row in a topic before being reminded about too many sequential replies."'
                  example: 2
                  type: integer
              required:
                - sequential_replies_threshold
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/set_locale_from_accept_language_header:
    put:
      description: Update set locale from accept language header
      requestBody:
        content:
          application/json:
            schema:
              properties:
                set_locale_from_accept_language_header:
                  type: boolean
              required:
                - set_locale_from_accept_language_header
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/short_email_length:
    put:
      description: short email length
      requestBody:
        content:
          application/json:
            schema:
              properties:
                short_email_length:
                  description: Short email length in Bytes
                  example: 2800
                  type: integer
              required:
                - short_email_length
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/short_progress_text_threshold:
    put:
      description: short progress text threshold
      requestBody:
        content:
          application/json:
            schema:
              properties:
                short_progress_text_threshold:
                  type: integer
              required:
                - short_progress_text_threshold
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/show_create_topics_notice:
    put:
      description: show create topics notice
      requestBody:
        content:
          application/json:
            schema:
              properties:
                show_create_topics_notice:
                  description: '"If the site has fewer than 5 public topics, show a notice asking admins to create some topics."'
                  example: true
                  type: boolean
              required:
                - show_create_topics_notice
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/show_email_on_profile:
    put:
      description: show email on profile
      requestBody:
        content:
          application/json:
            schema:
              properties:
                show_email_on_profile:
                  type: boolean
              required:
                - show_email_on_profile
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/show_filter_by_tag:
    put:
      description: '"show filter by tag"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                show_filter_by_tag:
                  description: '"Show a dropdown to filter a topic list by tag."'
                  example: false
                  type: boolean
              required:
                - show_filter_by_tag
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Tags
  /admin/site_settings/show_pinned_excerpt_desktop:
    put:
      description: show pinned excerpt desktop
      requestBody:
        content:
          application/json:
            schema:
              properties:
                show_pinned_excerpt_desktop:
                  type: boolean
              required:
                - show_pinned_excerpt_desktop
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/show_pinned_excerpt_mobile:
    put:
      description: show pinned excerpt mobile
      requestBody:
        content:
          application/json:
            schema:
              properties:
                show_pinned_excerpt_mobile:
                  type: boolean
              required:
                - show_pinned_excerpt_mobile
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/show_subcategory_list:
    put:
      description: Update show subcategory list
      requestBody:
        content:
          application/json:
            schema:
              properties:
                show_subcategory_list:
                  type: boolean
              required:
                - show_subcategory_list
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/show_time_gap_days:
    put:
      description: show time gap days
      requestBody:
        content:
          application/json:
            schema:
              properties:
                show_time_gap_days:
                  type: integer
              required:
                - show_time_gap_days
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/show_topic_featured_link_in_digest:
    put:
      description: show topic featured link in digest
      requestBody:
        content:
          application/json:
            schema:
              properties:
                show_topic_featured_link_in_digest:
                  example: false
                  type: boolean
              required:
                - show_topic_featured_link_in_digest
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/site_contact_username:
    put:
      description: Update the site contact username
      requestBody:
        content:
          application/json:
            schema:
              properties:
                site_contact_username:
                  type: string
              required:
                - site_contact_username
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Required
  /admin/site_settings/site_description:
    put:
      description: Update the site description
      requestBody:
        content:
          application/json:
            schema:
              properties:
                site_description:
                  type: string
              required:
                - site_description
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Required
  /admin/site_settings/slug_generation_method:
    put:
      description: slug generation method
      requestBody:
        content:
          application/json:
            schema:
              properties:
                slug_generation_method:
                  description: "\"Choose a slug generation method. 'encoded' will generate percent encoding string. 'none' will disable slug at all.\""
                  enum:
                    - ascii
                    - enocded
                    - none
                  example: ascii
                  type: string
              required:
                - slug_generation_method
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/soft_bounce_score:
    put:
      description: soft bounce score
      requestBody:
        content:
          application/json:
            schema:
              properties:
                soft_bounce_score:
                  description: Bounce score added to the user when a temporary bounce happens.
                  example: 1
                  type: integer
              required:
                - soft_bounce_score
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/sso_allows_all_return_paths:
    put:
      description: sso allows all return paths
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ss_allows_all_return_paths:
                  type: boolean
              required:
                - sso_allows_all_return_paths
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/sso_not_approved_url:
    put:
      description: sso not approved url
      requestBody:
        content:
          application/json:
            schema:
              properties:
                sso_not_approved_url:
                  type: string
              required:
                - sso_not_approved_url
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/sso_overrides_avatar:
    put:
      description: sso overrides avatar
      requestBody:
        content:
          application/json:
            schema:
              properties:
                sso_overrides_avatar:
                  type: boolean
              required:
                - sso_overrides_avatar
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/sso_overrides_bio:
    put:
      description: sso overrides bio
      requestBody:
        content:
          application/json:
            schema:
              properties:
                sso_overrides_bio:
                  type: boolean
              required:
                - sso_overrides_bio
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/sso_overrides_email:
    put:
      description: sso overrides email
      requestBody:
        content:
          application/json:
            schema:
              properties:
                sso_overrides_email:
                  type: boolean
              required:
                - sso_overrides_email
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/sso_overrides_name:
    put:
      description: sso overrides name
      requestBody:
        content:
          application/json:
            schema:
              properties:
                sso_overrides_name:
                  type: boolean
              required:
                - sso_overrides_name
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/sso_overrides_username:
    put:
      description: sso overrides username
      requestBody:
        content:
          application/json:
            schema:
              properties:
                sso_overrides_username:
                  type: boolean
              required:
                - sso_overrides_username
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/sso_secret:
    put:
      description: sso secret
      requestBody:
        content:
          application/json:
            schema:
              properties:
                sso_secret:
                  type: string
              required:
                - sso_secret
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/sso_url:
    put:
      description: sso url
      requestBody:
        content:
          application/json:
            schema:
              properties:
                sso_url:
                  type: string
              required:
                - sso_url
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/staff_like_weight:
    put:
      description: staff like weight
      requestBody:
        content:
          application/json:
            schema:
              properties:
                staff_like_weight:
                  description: '"How much extra weighting factor to give staff likes."'
                  example: 3
                  type: integer
              required:
                - staff_like_weight
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/staff_tags:
    put:
      description: '"staff tags"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                staff_tags:
                  description: '"A list of tags that can only be applied by staff members"'
                  example: ""
                  type: string
              required:
                - staff_tags
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Tags
  /admin/site_settings/staff_users_custom_fields:
    put:
      description: staff user custom fields
      requestBody:
        content:
          application/json:
            schema:
              properties:
                staff_users_custom_fields:
                  type: string
              required:
                - staff_users_custom_fields
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/strip_images_from_short_emails:
    put:
      description: strip images from short emails
      requestBody:
        content:
          application/json:
            schema:
              properties:
                strip_images_from_short_emails:
                  description: Strip images from emails having size less than 2800 Bytes
                  example: true
                  type: boolean
              required:
                - strip_images_from_short_emails
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/suggested_topics:
    put:
      description: Update the number of suggested topics
      requestBody:
        content:
          application/json:
            schema:
              properties:
                suggested_topics:
                  type: integer
              required:
                - suggested_topics
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/suggested_topics_max_days_old:
    put:
      description: Update suggested topics max days old
      requestBody:
        content:
          application/json:
            schema:
              properties:
                suggested_topics_max_days_old:
                  type: integer
              required:
                - suggested_topics_max_days_old
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/summary_likes_required:
    put:
      description: summary likes required
      requestBody:
        content:
          application/json:
            schema:
              properties:
                summary_likes_required:
                  description: "\"Minimum likes in a topic before 'Summarize This Topic' is enabled\""
                  example: 1
                  type: integer
              required:
                - summary_likes_required
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/summary_max_results:
    put:
      description: summary max results
      requestBody:
        content:
          application/json:
            schema:
              properties:
                summary_max_results:
                  description: "\"Maximum posts returned by 'Summary This Topic'\""
                  example: 100
                  type: integer
              required:
                - summary_max_results
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/summary_percent_filter:
    put:
      description: summary percent filter
      requestBody:
        content:
          application/json:
            schema:
              properties:
                summary_percent_filter:
                  description: "\"When a user clicks 'Summarize This Topic', show the top % of posts\""
                  example: 20
                  type: integer
              required:
                - summary_percent_filter
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/summary_posts_required:
    put:
      description: summary posts required
      requestBody:
        content:
          application/json:
            schema:
              properties:
                summary_posts_required:
                  description: "\"Minimum posts in a topic before 'Summarize This Topic' is enabled\""
                  example: 50
                  type: integer
              required:
                - summary_posts_required
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/summary_score_threshold:
    put:
      description: summary score threshold
      requestBody:
        content:
          application/json:
            schema:
              properties:
                summary_score_threshold:
                  description: "\"The minimum score required for a post to be included in 'Summarize This Topic'\""
                  example: 15
                  type: integer
              required:
                - summary_score_threshold
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/suppress_overlapping_tags_in_list:
    put:
      description: '"suppress overlapping tags in list"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                suppress_overlapping_tags_in_list:
                  description: "\"If tags match exact words in topic titles, don't show the tag\""
                  example: false
                  type: boolean
              required:
                - suppress_overlapping_tags_in_list
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Tags
  /admin/site_settings/suppress_reply_directly_above:
    put:
      description: suppress reply directly above
      requestBody:
        content:
          application/json:
            schema:
              properties:
                suppress_reply_directly_above:
                  type: boolean
              required:
                - suppress_reply_directly_above
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/suppress_reply_directly_below:
    put:
      description: suppress reply directly below
      requestBody:
        content:
          application/json:
            schema:
              properties:
                suppress_reply_directly_below:
                  type: boolean
              required:
                - suppress_reply_directly_below
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/suppress_reply_when_quoting:
    put:
      description: suppress reply when quoting
      requestBody:
        content:
          application/json:
            schema:
              properties:
                suppress_reply_when_quoting:
                  type: boolean
              required:
                - suppress_reply_when_quoting
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/suppress_uncategorized_badge:
    put:
      description: suppress uncategorized badge
      requestBody:
        content:
          application/json:
            schema:
              properties:
                suppress_uncategorized_badge:
                  description: "\"Don't show the badge for uncategorized topics in topic lists.\""
                  example: true
                  type: boolean
              required:
                - suppress_uncategorized_badge
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/tag_style:
    put:
      description: '"tag style"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tag_style:
                  description: '"Visual style for tag badges."'
                  enum:
                    - simple
                    - bullet
                    - box
                  example: simple
                  type: string
              required:
                - tag_style
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Tags
  /admin/site_settings/tagging_enabled:
    put:
      description: '"tagging enabled"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tagging_enabled:
                  description: '"Enable tags on topics?"'
                  example: false
                  type: boolean
              required:
                - tagging_enabled
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Tags
  /admin/site_settings/tags_sort_alphabetically:
    put:
      description: '"tags sort alphabetically"'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tags_sort_alphabetically:
                  description: '"Show tags in alphabetical order. Default is to show in order of popularity."'
                  example: false
                  type: boolean
              required:
                - tags_sort_alphabetically
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Tags
  /admin/site_settings/title:
    put:
      description: Update the site title
      requestBody:
        content:
          application/json:
            schema:
              properties:
                title:
                  type: string
              required:
                - title
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Required
  /admin/site_settings/title_fancy_entities:
    put:
      description: title fancy entities
      requestBody:
        content:
          application/json:
            schema:
              properties:
                title_fancy_entities:
                  type: boolean
              required:
                - title_fancy_entities
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/title_max_word_length:
    put:
      description: title max word length
      requestBody:
        content:
          application/json:
            schema:
              properties:
                title_max_word_length:
                  type: integer
              required:
                - title_max_word_length
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/title_min_entropy:
    put:
      description: title min entropy
      requestBody:
        content:
          application/json:
            schema:
              properties:
                title_min_entropy:
                  type: integer
              required:
                - title_min_entropy
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/title_prettify:
    put:
      description: title_prettify
      requestBody:
        content:
          application/json:
            schema:
              properties:
                title_prettify:
                  type: boolean
              required:
                - title_prettify
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/tl1_requires_read_posts:
    put:
      description: tl1 requires read posts
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl1_requires_read_posts:
                  description: '"How many posts a new user must read before promotion to trust level 1."'
                  example: 30
                  type: integer
              required:
                - tl1_requires_read_posts
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl1_requires_time_spent_mins:
    put:
      description: tl1 requires time spent mins
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl1_requires_time_spent_mins:
                  description: '"How many minutes a new user must read posts before promotion to trust level 1."'
                  example: 10
                  type: integer
              required:
                - tl1_requires_time_spent_mins
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl1_requires_topics_entered:
    put:
      description: tl1 requires topics entered
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl1_requires_topics_entered:
                  description: '"How many topics a new user must enter before promotion to trust level 1."'
                  example: 5
                  type: integer
              required:
                - tl1_requires_topics_entered
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl2_additional_likes_per_day_multiplier:
    put:
      description: tl2 additional likes per day multiplier
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl2_additional_likes_per_day_multiplier:
                  description: '"Increase limit of likes per day for tl2 (member) by multiplying with this number"'
                  example: 1.5
                  type: number
              required:
                - tl2_additional_likes_per_day_multiplier
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Rate Limits
  /admin/site_settings/tl2_requires_days_visited:
    put:
      description: tl2 requires days visited
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl2_requires_days_visited:
                  description: '"How many days a user must visit the site before promotion to trust level 2."'
                  example: 15
                  type: integer
              required:
                - tl2_requires_days_visited
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl2_requires_likes_given:
    put:
      description: tl2 requires likes given
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl2_requires_likes_given:
                  description: '"How many likes a user must cast before promotion to trust level 2."'
                  example: 1
                  type: integer
              required:
                - tl2_requires_likes_given
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl2_requires_likes_received:
    put:
      description: tl2 requires likes received
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl2_requires_likes_received:
                  description: '"How many likes a user must receive before promotion to trust level 2."'
                  example: 1
                  type: integer
              required:
                - tl2_requires_likes_received
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl2_requires_read_posts:
    put:
      description: tl2 requires read posts
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl2_requires_read_posts:
                  description: '"How many posts a user must read before promotion to trust level 2."'
                  example: 100
                  type: integer
              required:
                - tl2_requires_read_posts
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl2_requires_time_spent_mins:
    put:
      description: tl2 requires time spent mins
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl2_requires_time_spent_mins:
                  description: '"How many minutes a user must read posts before promotion to trust level 2."'
                  example: 60
                  type: integer
              required:
                - tl2_requires_time_spent_mins
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl2_requires_topic_reply_count:
    put:
      description: tl2 requires topic reply count
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl2_requires_topic_reply_count:
                  description: '"How many topics user must reply to before promotion to trust level 2."'
                  example: 3
                  type: integer
              required:
                - tl2_requires_topic_reply_count
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl2_requires_topics_entered:
    put:
      description: tl2 requires topics entered
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl2_requires_topics_entered:
                  description: '"How many topics a user must enter before promotion to trust level 2."'
                  example: 20
                  type: integer
              required:
                - tl2_requires_topics_entered
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl3_additional_likes_per_day_multiplier:
    put:
      description: tl3 additional likes per day multiplier
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl3_additional_likes_per_day_multiplier:
                  description: '"Increase limit of likes per day for tl3 (regular) by multiplying with this number"'
                  example: 2
                  type: number
              required:
                - tl3_additional_likes_per_day_multiplier
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Rate Limits
  /admin/site_settings/tl3_links_no_follow:
    put:
      description: tl3 links no follow
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl3_links_no_follow:
                  description: '"Do not remove rel=nofollow from links posted by trust level 3 users."'
                  example: false
                  type: boolean
              required:
                - tl3_links_no_follow
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl3_promotion_min_duration:
    put:
      description: tl3 promotion min duration
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl3_promotion_min_duration:
                  description: '"The minimum number of days that a promotion to trust level 3 lasts before a user can be demoted back to trust level 2."'
                  example: 14
                  type: integer
              required:
                - tl3_promotion_min_duration
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl3_requires_days_visited:
    put:
      description: tl3 requires days visited
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl3_requires_days_visited:
                  description: '"Minimum number of days that a user needs to have visited the site in the last (tl3 time period) days to qualify for promotion to trust level 3. Set higher than tl3 time period to disable promotions to tl3. (0 or higher)"'
                  example: 50
                  type: integer
              required:
                - tl3_requires_days_visited
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl3_requires_likes_given:
    put:
      description: tl3 requires likes given
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl3_requires_likes_given:
                  description: '"The minimum number of likes that must be given in the last (tl3 time period) days to qualify for promotion to trust level 3."'
                  example: 30
                  type: integer
              required:
                - tl3_requires_likes_given
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl3_requires_likes_received:
    put:
      description: tl3 requires likes received
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl3_requires_likes_received:
                  description: '"The minimum number of likes that must be received in the last (tl3 time period) days to qualify for promotion to trust level 3."'
                  example: 20
                  type: integer
              required:
                - tl3_requires_likes_received
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl3_requires_max_flagged:
    put:
      description: tl3 requires max flagged
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl3_requires_max_flagged:
                  description: "\"User must not have had more than x posts flagged by x different users in the last (tl3 time period) days to qualify for promotion to trust level 3, where x is this setting's value. (0 or higher)\""
                  example: 5
                  type: integer
              required:
                - tl3_requires_max_flagged
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl3_requires_posts_read:
    put:
      description: tl3 requires posts read
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl3_requires_posts_read:
                  description: '"The percentage of posts created in the last (tl3 time period) days that a user needs to have viewed to qualify for promotion to trust level 3. (0 to 100)"'
                  example: 25
                  type: integer
              required:
                - tl3_requires_posts_read
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl3_requires_posts_read_all_time:
    put:
      description: tl3 requires posts read all time
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl3_requires_posts_read_all_time:
                  description: '"The minimum total number of posts a user must have read to qualify for trust level 3."'
                  example: 500
                  type: integer
              required:
                - tl3_requires_posts_read_all_time
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl3_requires_posts_read_cap:
    put:
      description: tl3 requires posts read cap
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl3_requires_posts_read_cap:
                  description: '"The maximum required number of posts read in the last (tl3 time period) days."'
                  example: 20000
                  type: integer
              required:
                - tl3_requires_posts_read_cap
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl3_requires_topics_replied_to:
    put:
      description: tl3 requires topics replied to
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl3_requires_topics_replied_to:
                  description: '"Minimum number of topics a user needs to have replied to in the last (tl3 time period) days to qualify for promotion to trust level 3. (0 or higher)"'
                  example: 10
                  type: integer
              required:
                - tl3_requires_topics_replied_to
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl3_requires_topics_viewed:
    put:
      description: tl3 requires topics viewed
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl3_requires_topics_viewed:
                  description: '"The percentage of topics created in the last (tl3 time period) days that a user needs to have viewed to qualify for promotion to trust level 3. (0 to 100)"'
                  example: 25
                  type: integer
              required:
                - tl3_requires_topics_viewed
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl3_requires_topics_viewed_all_time:
    put:
      description: tl3 requires topics viewed all time
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl3_requires_viewed_all_time:
                  description: '"The minimum total number of topics a user must have viewed to qualify for trust level 3."'
                  example: 200
                  type: integer
              required:
                - tl3_requires_viewed_all_time
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl3_requires_topics_viewed_cap:
    put:
      description: tl3 requires topics viewed cap
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl3_requires_topics_viewed_cap:
                  description: '"The maximum required number of topics viewed in the last (tl3 time period) days."'
                  example: 500
                  type: integer
              required:
                - tl3_requires_topics_viewed_cap
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl3_time_period:
    put:
      description: tl2 time period
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl3_time_period:
                  description: '"Trust Level 3 requirements time period (in days)"'
                  example: 100
                  type: integer
              required:
                - tl3_time_period
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Trust Levels
  /admin/site_settings/tl4_additional_likes_per_day_multiplier:
    put:
      description: tl4 additional likes per day multiplier
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tl4_additional_likes_per_day_multiplier:
                  description: '"Increase limit of likes per day for tl4 (leader) by multiplying with this number"'
                  example: 3
                  type: number
              required:
                - tl4_additional_likes_per_day_multiplier
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Rate Limits
  /admin/site_settings/top_menu:
    put:
      description: Update the homepage navigation
      requestBody:
        content:
          application/json:
            schema:
              properties:
                top_menu:
                  description: pipe delimited
                  enum:
                    - latest
                    - new
                    - unread
                    - top
                    - categories
                    - read
                    - posted
                    - bookmarks
                  example: latest|new|unread|top|categories|read
                  type: string
              required:
                - top_menu
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/top_topics_formula_first_post_likes_multiplier:
    put:
      description: top topics formula first post likes multiplier
      requestBody:
        content:
          application/json:
            schema:
              properties:
                top_topics_formula_first_post_likes_multiplier:
                  description: '"value of first post likes multiplier (n) in top topics formula: `log(views_count) * 2 + op_likes_count * (n) + LEAST(likes_count / posts_count, 3) + 10 + log(posts_count)`"'
                  example: 0.5
                  type: number
              required:
                - top_topics_formula_first_post_likes_multiplier
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Developer
  /admin/site_settings/top_topics_formula_least_likes_per_post_multiplier:
    put:
      description: top topics formula least likes per post multiplier
      requestBody:
        content:
          application/json:
            schema:
              properties:
                top_topics_formula_least_likes_per_post_multiplier:
                  description: '"value of least likes per post multiplier (n) in top topics formula: `log(views_count) * 2 + op_likes_count * 0.5 + LEAST(likes_count / posts_count, (n)) + 10 + log(posts_count)`"'
                  example: 3
                  type: number
              required:
                - top_topics_formula_least_likes_per_post_multiplier
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Developer
  /admin/site_settings/top_topics_formula_log_views_multiplier:
    put:
      description: top topics formula log views multiplier
      requestBody:
        content:
          application/json:
            schema:
              properties:
                top_topics_formula_log_views_multiplier:
                  description: '"value of log views multiplier (n) in top topics formula: `log(views_count) * (n) + op_likes_count * 0.5 + LEAST(likes_count / posts_count, 3) + 10 + log(posts_count)`"'
                  example: 2
                  type: number
              required:
                - top_topics_formula_log_views_multiplier
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Developer
  /admin/site_settings/topic_featured_link_enabled:
    put:
      description: topic featured link enabled
      requestBody:
        content:
          application/json:
            schema:
              properties:
                topic_featured_link_enabled:
                  type: boolean
              required:
                - topic_featured_link_enabled
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/topic_page_title_includes_category:
    put:
      description: topic page title includes category
      requestBody:
        content:
          application/json:
            schema:
              properties:
                topic_page_title_includes_category:
                  description: '"Topic page title includes the category name."'
                  example: true
                  type: boolean
              required:
                - topic_page_title_includes_category
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/topic_post_like_heat_high:
    put:
      description: topic post like heat high
      requestBody:
        content:
          application/json:
            schema:
              properties:
                topic_post_like_heat_high:
                  description: '"After the likes:post ratio exceeds this ratio, the post count field is strongly highlighted."'
                  example: 2
                  type: number
              required:
                - topic_post_like_heat_high
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/topic_post_like_heat_low:
    put:
      description: topic post like heat low
      requestBody:
        content:
          application/json:
            schema:
              properties:
                topic_post_like_heat_low:
                  description: '"After the likes:post ratio exceeds this ratio, the post count field is slightly highlighted."'
                  example: 0.5
                  type: number
              required:
                - topic_post_like_heat_low
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/topic_post_like_heat_medium:
    put:
      description: topic post like heat medium
      requestBody:
        content:
          application/json:
            schema:
              properties:
                topic_post_like_heat_medium:
                  description: '"After the likes:post ratio exceeds this ratio, the post count field is moderately highlighted."'
                  example: 1
                  type: number
              required:
                - topic_post_like_heat_medium
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/topic_view_duration_hours:
    put:
      description: topic view duration hours
      requestBody:
        content:
          application/json:
            schema:
              properties:
                topic_view_duration_hours:
                  description: '"Count a new topic view once per IP/User every N hours"'
                  example: 8
                  type: integer
              required:
                - topic_view_duration_hours
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/topic_views_heat_high:
    put:
      description: topic views heat high
      requestBody:
        content:
          application/json:
            schema:
              properties:
                topic_views_heat_high:
                  description: '"After this many views, the views field is strongly highlighted."'
                  example: 5000
                  type: integer
              required:
                - topic_views_heat_high
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/topic_views_heat_low:
    put:
      description: topic views heat low
      requestBody:
        content:
          application/json:
            schema:
              properties:
                topic_view_heat_low:
                  description: '"After this many views, the views field is slightly highlighted."'
                  example: 1000
                  type: integer
              required:
                - topic_view_heat_low
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/topic_views_heat_medium:
    put:
      description: topic views heat medium
      requestBody:
        content:
          application/json:
            schema:
              properties:
                topic_views_heat_medium:
                  description: '"After this many views, the views field is moderately highlighted."'
                  example: 2000
                  type: integer
              required:
                - topic_views_heat_medium
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/tos_url:
    put:
      description: tos url
      requestBody:
        content:
          application/json:
            schema:
              properties:
                tos_url:
                  description: '"If you have a Terms of Service document hosted elsewhere that you want to use, provide the full URL here."'
                  example: ""
                  type: string
              required:
                - tos_url
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Legal
  /admin/site_settings/track_external_right_clicks:
    put:
      description: Update track external right clicks
      requestBody:
        content:
          application/json:
            schema:
              properties:
                track_external_right_clicks:
                  type: boolean
              required:
                - track_external_right_clicks
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Basic Setup
  /admin/site_settings/traditional_markdown_linebreaks:
    put:
      description: traditional markdown linebreaks
      requestBody:
        content:
          application/json:
            schema:
              properties:
                traditional_markdown_linebreaks:
                  type: boolean
              required:
                - traditional_markdown_linebreaks
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/twitter_consumer_key:
    put:
      description: twitter consumer key
      requestBody:
        content:
          application/json:
            schema:
              properties:
                twitter_consumer_key:
                  type: string
              required:
                - twitter_consumer_key
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/twitter_consumer_secret:
    put:
      description: twitter consumer secret
      requestBody:
        content:
          application/json:
            schema:
              properties:
                twitter_consumer_secret:
                  type: string
              required:
                - twitter_consumer_secret
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/twitter_summary_large_image_url:
    put:
      description: Update the twitter summary large image url
      requestBody:
        content:
          application/json:
            schema:
              properties:
                twitter_summary_large_image_url:
                  type: string
              required:
                - twitter_summary_large_image_url
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Required
  /admin/site_settings/unique_posts_min:
    put:
      description: unique posts mins
      requestBody:
        content:
          application/json:
            schema:
              properties:
                unique_posts_min:
                  description: '"How many minutes before a user can make a post with the same content again"'
                  example: 5
                  type: integer
              required:
                - unique_posts_min
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Rate Limits
  /admin/site_settings/unsubscribe_via_email:
    put:
      description: unsubscribe via email
      requestBody:
        content:
          application/json:
            schema:
              properties:
                unsubscribe_via_email:
                  description: Allow users to unsubscribe from emails by sending an email with 'unsubscribe' in the subject or body
                  example: true
                  type: boolean
              required:
                - unsubscribe_via_email
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/unsubscribe_via_email_footer:
    put:
      description: unsubscribe via email footer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                unsubscribe_via_email_footer:
                  description: "Attach an unsubcribe via email mailto: link to the footer of sent email"
                  example: false
                  type: boolean
              required:
                - unsubscribe_via_email_footer
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Email
  /admin/site_settings/use_admin_ip_whitelist:
    put:
      description: use admin ip whitelist
      requestBody:
        content:
          application/json:
            schema:
              properties:
                use_admin_ip_whitelist:
                  description: '"Admins can only log in if they are at an IP address defined in the Screened IPs list (Admin > Logs > Screened Ips)."'
                  example: false
                  type: boolean
              required:
                - use_admin_ip_whitelist
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Security
  /admin/site_settings/user_profile_view_duration_hours:
    put:
      description: user profile view duration hours
      requestBody:
        content:
          application/json:
            schema:
              properties:
                user_profile_view_duration_hours:
                  description: '"Count a new user profile view once per IP/User every N hours"'
                  example: 8
                  type: integer
              required:
                - user_profile_view_duration_hours
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/username_change_period:
    put:
      description: username change period
      requestBody:
        content:
          application/json:
            schema:
              properties:
                username_change_period:
                  type: integer
              required:
                - username_change_period
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Users
  /admin/site_settings/vacuum_db_days:
    put:
      description: vacuum db days
      requestBody:
        content:
          application/json:
            schema:
              properties:
                vacuum_db_days:
                  description: '"Run VACUUM ANALYZE to reclaim DB space after migrations (set to 0 to disable)"'
                  example: 90
                  type: integer
              required:
                - vacuum_db_days
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/verbose_localization:
    put:
      description: verbose localization
      requestBody:
        content:
          application/json:
            schema:
              properties:
                verbose_localization:
                  description: '"Show extended localization tips in the UI"'
                  example: false
                  type: boolean
              required:
                - verbose_localization
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Developer
  /admin/site_settings/verbose_sso_logging:
    put:
      description: verbose sso logging
      requestBody:
        content:
          application/json:
            schema:
              properties:
                verbose_sso_logging:
                  type: boolean
              required:
                - verbose_sso_logging
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Login
  /admin/site_settings/version_checks:
    put:
      description: version checks
      requestBody:
        content:
          application/json:
            schema:
              properties:
                version_checks:
                  description: '"Ping the Discourse Hub for version updates and show new version messages on the /admin dashboard"'
                  example: true
                  type: boolean
              required:
                - version_checks
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Other
  /admin/site_settings/warn_reviving_old_topic_age:
    put:
      description: warn reviving old topic age
      requestBody:
        content:
          application/json:
            schema:
              properties:
                warn_reviving_old_topic_age:
                  type: integer
              required:
                - warn_reviving_old_topic_age
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Posting
  /admin/site_settings/white_listed_spam_host_domains:
    put:
      description: white listed spam host domains
      requestBody:
        content:
          application/json:
            schema:
              properties:
                white_listed_spam_host_domains:
                  description: '"A list of domains excluded from spam host testing. New users will never be restricted from creating posts with links to these domains."'
                  example: ""
                  type: string
              required:
                - white_listed_spam_host_domains
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Site Settings Spam
  "/admin/users/list/{flag}.json":
    get:
      description: Returns a list of users
      parameters:
        - in: path
          name: flag
          required: true
          schema:
            enum:
              - active
              - new
              - staff
              - suspended
              - blocked
              - suspect
            type: string
        - in: query
          name: order
          required: false
          schema:
            enum:
              - created
              - last_emailed
              - seen
              - username
              - email
              - trust_level
              - days_visited
              - posts_read
              - topics_viewed
              - posts
              - read_time
            type: string
        - in: query
          name: ascending
          required: false
          schema:
            description: optional. defaults to descending.
            type: boolean
        - in: query
          name: page
          required: false
          schema:
            type: string
        - in: query
          name: show_emails
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                items:
                  properties:
                    active:
                      type: boolean
                    admin:
                      type: boolean
                    avatar_template:
                      minLength: 1
                      type: string
                    blocked:
                      type: boolean
                    created_at:
                      minLength: 1
                      type: string
                    created_at_age:
                      minLength: 1
                      type: string
                    days_visited:
                      type: integer
                    email:
                      minLength: 1
                      type: string
                    flag_level:
                      type: integer
                    id:
                      type: integer
                    last_emailed_age:
                      minLength: 1
                      type: string
                    last_emailed_at:
                      minLength: 1
                      type: string
                    last_seen_age:
                      minLength: 1
                      type: string
                    last_seen_at:
                      minLength: 1
                      type: string
                    moderator:
                      type: boolean
                    post_count:
                      type: integer
                    posts_read_count:
                      type: integer
                    staged:
                      type: boolean
                    suspended:
                      type: object
                    suspended_at:
                      type: object
                    suspended_till:
                      type: object
                    time_read:
                      minLength: 1
                      type: string
                    title:
                      type: string
                    topics_entered:
                      type: integer
                    trust_level:
                      type: integer
                    trust_level_locked:
                      type: boolean
                    username:
                      minLength: 1
                      type: string
                    username_lower:
                      minLength: 1
                      type: string
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
          description: list of users response
      tags:
        - Users
  "/admin/users/{id}.json":
    delete:
      description: Delete a user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                block_email:
                  example: false
                  type: boolean
                block_ip:
                  example: false
                  type: boolean
                block_urls:
                  example: false
                  type: boolean
                delete_posts:
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  deleted:
                    example: true
                    type: boolean
                type: object
          description: Successful delete response
        "403":
          content:
            application/json:
              schema:
                properties:
                  deleted:
                    example: false
                    type: boolean
                  message:
                    example: You either don't have permission to delete this user or they have existing posts
                    type: string
                type: object
          description: Could not delete user response
      tags:
        - Users
    get:
      description: Get a specific user by id. Returns more info than the public user route.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  active:
                    type: boolean
                  admin:
                    type: boolean
                  approved_by:
                    type: object
                  avatar_template:
                    minLength: 1
                    type: string
                  badge_count:
                    type: number
                  bounce_score:
                    type: number
                  can_activate:
                    type: boolean
                  can_be_anonymized:
                    type: boolean
                  can_be_deleted:
                    type: boolean
                  can_deactivate:
                    type: boolean
                  can_delete_all_posts:
                    type: boolean
                  can_disable_second_factor:
                    type: boolean
                  can_grant_admin:
                    type: boolean
                  can_grant_moderation:
                    type: boolean
                  can_impersonate:
                    type: boolean
                  can_revoke_admin:
                    type: boolean
                  can_revoke_moderation:
                    type: boolean
                  can_send_activation_email:
                    type: boolean
                  can_view_action_logs:
                    type: boolean
                  created_at:
                    minLength: 1
                    type: string
                  created_at_age:
                    type: number
                  days_visited:
                    type: number
                  flag_level:
                    type: number
                  flags_given_count:
                    type: number
                  flags_received_count:
                    type: number
                  full_suspend_reason:
                    minLength: 1
                    type: string
                  groups:
                    items:
                      properties:
                        allow_membership_requests:
                          type: boolean
                        automatic:
                          type: boolean
                        automatic_membership_email_domains:
                          type: object
                        automatic_membership_retroactive:
                          type: boolean
                        bio_cooked:
                          type: object
                        bio_raw:
                          type: object
                        default_notification_level:
                          type: number
                        display_name:
                          minLength: 1
                          type: string
                        flair_bg_color:
                          type: object
                        flair_color:
                          type: object
                        flair_url:
                          type: object
                        full_name:
                          type: object
                        grant_trust_level:
                          type: object
                        has_messages:
                          type: boolean
                        id:
                          type: number
                        incoming_email:
                          type: object
                        membership_request_template:
                          type: object
                        mentionable_level:
                          type: number
                        messageable_level:
                          type: number
                        name:
                          minLength: 1
                          type: string
                        primary_group:
                          type: boolean
                        public_admission:
                          type: boolean
                        public_exit:
                          type: boolean
                        title:
                          type: object
                        user_count:
                          type: number
                        visibility_level:
                          type: number
                      required:
                        - id
                        - automatic
                        - name
                        - display_name
                        - user_count
                        - mentionable_level
                        - messageable_level
                        - visibility_level
                        - automatic_membership_retroactive
                        - primary_group
                        - has_messages
                        - public_admission
                        - public_exit
                        - allow_membership_requests
                        - default_notification_level
                    minItems: 1
                    type: array
                    uniqueItems: true
                  id:
                    type: number
                  ip_address:
                    minLength: 1
                    type: string
                  last_emailed_age:
                    type: number
                  last_emailed_at:
                    minLength: 1
                    type: string
                  last_seen_age:
                    type: number
                  last_seen_at:
                    minLength: 1
                    type: string
                  like_count:
                    type: number
                  like_given_count:
                    type: number
                  manual_locked_trust_level:
                    type: object
                  moderator:
                    type: boolean
                  name:
                    minLength: 1
                    type: string
                  post_count:
                    type: number
                  posts_read_count:
                    type: number
                  primary_group_id:
                    type: object
                  private_topics_count:
                    type: number
                  registration_ip_address:
                    minLength: 1
                    type: string
                  reset_bounce_score_after:
                    type: object
                  silence_reason:
                    type: object
                  silenced_by:
                    type: object
                  single_sign_on_record:
                    type: object
                  staged:
                    type: boolean
                  suspended:
                    type: boolean
                  suspended_at:
                    minLength: 1
                    type: string
                  suspended_by:
                    properties:
                      avatar_template:
                        minLength: 1
                        type: string
                      id:
                        type: number
                      username:
                        minLength: 1
                        type: string
                    required:
                      - id
                      - username
                      - avatar_template
                    type: object
                  suspended_till:
                    minLength: 1
                    type: string
                  time_read:
                    type: number
                  title:
                    type: object
                  topic_count:
                    type: number
                  topics_entered:
                    type: number
                  trust_level:
                    type: number
                  user_fields:
                    properties:
                      "1":
                        type: object
                    type: object
                  username:
                    minLength: 1
                    type: string
                  username_lower:
                    minLength: 1
                    type: string
                  warnings_received_count:
                    type: number
                type: object
          description: Successful get response
      tags:
        - Admin
        - Users
  "/admin/users/{id}/activate":
    put:
      description: Activate a user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: string
                type: object
          description: activate user response
      tags:
        - Admin
  "/admin/users/{id}/anonymize":
    put:
      description: Anonymize a user's account by changing their username and email address to random values. This is non-reversable
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: string
                  username:
                    type: string
                type: object
          description: succesfully anonymized user
      tags:
        - Admin
  "/admin/users/{id}/groups":
    post:
      description: Assign a group to a user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                group_id:
                  type: integer
              required:
                - group_id
              type: object
      responses:
        "200":
          description: success response
      tags:
        - Admin
  "/admin/users/{id}/groups/{group_id}":
    delete:
      description: Remove a group assigned to a user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: group_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: empty response body
      tags:
        - Admin
  "/admin/users/{id}/log_out":
    post:
      description: Log a user out
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    example: OK
                    type: string
                type: object
          description: log a user out response
      tags:
        - Users
  "/admin/users/{id}/silence":
    put:
      description: Silence a user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                message:
                  type: string
                post_action:
                  example: delete
                  type: string
                reason:
                  type: string
                silenced_till:
                  example: 2018-06-22
                  type: string
              required:
                - silenced_till
                - reason
                - post_action
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  silence:
                    properties:
                      silenced:
                        type: boolean
                      silenced_at:
                        type: string
                      silenced_by:
                        properties:
                          avatar_template:
                            type: string
                          id:
                            type: integer
                          username:
                            type: string
                        type: object
                      silenced_reason:
                        type: string
                      silenced_till:
                        type: string
                    type: object
                type: object
          description: Silence a user response
      tags:
        - Admin
  "/admin/users/{id}/suspend":
    put:
      description: Suspend a user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reason:
                  type: string
                suspend_until:
                  example: 2018-06-22
                  type: string
              required:
                - suspend_until
                - reason
              type: object
      responses:
        "200":
          description: empty response body
      tags:
        - Admin
  "/admin/users/{id}/unsilence":
    put:
      description: Unsilence a user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  unsilence:
                    properties:
                      silenced:
                        type: boolean
                      silenced_at:
                        type: string
                      silenced_reason:
                        type: string
                      silenced_till:
                        type: string
                    type: object
                type: object
          description: Unsilence a user response
      tags:
        - Admin
  "/admin/users/{id}/unsuspend":
    put:
      description: Unsuspend a user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: empty response body
      tags:
        - Admin
  "/c/{id}.json":
    get:
      description: Get a list of topics in the specified category
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  topic_list:
                    properties:
                      can_create_topic:
                        type: boolean
                      draft:
                        type: boolean
                      draft_key:
                        type: string
                      draft_sequence:
                        type: integer
                      per_page:
                        type: integer
                      topics:
                        items:
                          properties:
                            archetype:
                              type: string
                            archived:
                              type: boolean
                            bookmarked:
                              type: object
                            bumped:
                              type: boolean
                            bumped_at:
                              type: string
                            category_id:
                              type: integer
                            closed:
                              type: boolean
                            created_at:
                              type: string
                            excerpt:
                              type: string
                            fancy_title:
                              type: string
                            has_summary:
                              type: boolean
                            highest_post_number:
                              type: integer
                            id:
                              type: integer
                            image_url:
                              type: string
                            last_posted_at:
                              type: string
                            last_poster_username:
                              type: string
                            like_count:
                              type: integer
                            liked:
                              type: object
                            pinned:
                              type: boolean
                            pinned_globally:
                              type: boolean
                            posters:
                              items:
                                properties:
                                  description:
                                    type: string
                                  extras:
                                    type: string
                                  user_id:
                                    type: integer
                                type: object
                              type: array
                            posts_count:
                              type: integer
                            reply_count:
                              type: integer
                            slug:
                              type: string
                            title:
                              type: string
                            unpinned:
                              type: boolean
                            unseen:
                              type: boolean
                            views:
                              type: integer
                            visible:
                              type: boolean
                          type: object
                        type: array
                    type: object
                  users:
                    items:
                      properties:
                        avatar_template:
                          type: string
                        id:
                          type: integer
                        username:
                          type: string
                      type: object
                    type: array
                type: object
          description: Category response
      tags:
        - Categories
  /categories.json:
    get:
      description: The Categories endpoint returns a list of all the categories for your discourse site that you have access to.
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  category_list:
                    properties:
                      can_create_category:
                        type: boolean
                      can_create_topic:
                        type: boolean
                      categories:
                        items:
                          properties:
                            background_url:
                              type: string
                            can_edit:
                              type: boolean
                            color:
                              type: string
                            description:
                              type: string
                            description_excerpt:
                              type: string
                            description_text:
                              type: string
                            has_children:
                              type: boolean
                            id:
                              type: integer
                            logo_url:
                              type: string
                            name:
                              type: string
                            notification_level:
                              type: string
                            permission:
                              type: integer
                            position:
                              type: integer
                            post_count:
                              type: integer
                            read_restricted:
                              type: boolean
                            slug:
                              type: string
                            text_color:
                              type: string
                            topic_count:
                              type: integer
                            topic_template:
                              type: string
                            topic_url:
                              type: string
                            topics_all_time:
                              type: integer
                            topics_day:
                              type: integer
                            topics_month:
                              type: integer
                            topics_week:
                              type: integer
                            topics_year:
                              type: integer
                          type: object
                        type: array
                      draft:
                        type: boolean
                      draft_key:
                        type: string
                      draft_sequence:
                        type: integer
                    type: object
                type: object
          description: A category_list object that contains an array of categories
      summary: Get a list of categories
      tags:
        - Categories
    post:
      description: Create a new category
      requestBody:
        content:
          application/json:
            schema:
              properties:
                color:
                  type: string
                name:
                  type: string
                text_color:
                  type: string
              required:
                - name
                - color
                - text_color
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  category:
                    properties:
                      allow_badges:
                        type: boolean
                      auto_close_based_on_last_post:
                        type: boolean
                      auto_close_hours:
                        type: integer
                      available_groups:
                        items: {}
                        type: array
                      background_url:
                        type: string
                      can_delete:
                        type: boolean
                      can_edit:
                        type: boolean
                      cannot_delete_reason:
                        type: string
                      color:
                        type: string
                      custom_fields:
                        type: object
                      description:
                        type: string
                      description_text:
                        type: string
                      email_in:
                        type: boolean
                      email_in_allow_strangers:
                        type: boolean
                      group_permissions:
                        items: {}
                        type: array
                      has_children:
                        type: boolean
                      id:
                        description: The id for the category
                        type: integer
                      logo_url:
                        type: string
                      name:
                        type: string
                      notification_level:
                        type: string
                      permission:
                        type: string
                      position:
                        type: integer
                      post_count:
                        type: integer
                      read_restricted:
                        type: boolean
                      slug:
                        type: string
                      suppress_from_homepage:
                        type: boolean
                      text_color:
                        type: string
                      topic_count:
                        type: integer
                      topic_template:
                        type: string
                      topic_url:
                        type: string
                    type: object
                type: object
          description: category response
      tags:
        - Categories
  "/categories/{id}":
    put:
      description: Update a single category
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                color:
                  type: string
                name:
                  type: string
                text_color:
                  type: string
              required:
                - name
                - color
                - text_color
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  category:
                    properties:
                      allow_badges:
                        type: boolean
                      auto_close_based_on_last_post:
                        type: boolean
                      auto_close_hours:
                        type: object
                      available_groups:
                        items:
                          type: object
                        type: array
                      background_url:
                        type: string
                      can_delete:
                        type: boolean
                      can_edit:
                        type: boolean
                      cannot_delete_reason:
                        type: object
                      color:
                        minLength: 1
                        type: string
                      custom_fields:
                        type: object
                      description:
                        type: object
                      description_text:
                        type: object
                      email_in:
                        type: object
                      email_in_allow_strangers:
                        type: boolean
                      group_permissions:
                        items:
                          properties:
                            group_name:
                              minLength: 1
                              type: string
                            permission_type:
                              type: number
                          required:
                            - permission_type
                            - group_name
                        minItems: 1
                        type: array
                        uniqueItems: true
                      has_children:
                        type: object
                      id:
                        type: number
                      logo_url:
                        type: string
                      name:
                        minLength: 1
                        type: string
                      notification_level:
                        type: object
                      permission:
                        type: object
                      position:
                        type: number
                      post_count:
                        type: number
                      read_restricted:
                        type: boolean
                      slug:
                        minLength: 1
                        type: string
                      suppress_from_homepage:
                        type: boolean
                      text_color:
                        minLength: 1
                        type: string
                      topic_count:
                        type: number
                      topic_template:
                        type: string
                      topic_url:
                        minLength: 1
                        type: string
                    type: object
                  success:
                    minLength: 1
                    type: string
                type: object
          description: Update category response
      tags:
        - Categories
  "/directory_items.json?period={period}&order={order}":
    get:
      description: Get a public list of users
      parameters:
        - in: query
          name: period
          required: true
          schema:
            enum:
              - daily
              - weekly
              - monthly
              - quarterly
              - yearly
              - all
            type: string
        - in: query
          name: order
          required: true
          schema:
            enum:
              - likes_received
              - likes_given
              - topic_count
              - post_count
              - topics_entered
              - posts_read
              - days_visited
            type: string
        - in: query
          name: asc
          required: false
          schema:
            enum:
              - true
            type: boolean
        - in: query
          name: page
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  directory_items:
                    items:
                      properties:
                        days_visited:
                          type: number
                        id:
                          type: number
                        likes_given:
                          type: number
                        likes_received:
                          type: number
                        post_count:
                          type: number
                        posts_read:
                          type: number
                        topic_count:
                          type: number
                        topics_entered:
                          type: number
                        user:
                          properties:
                            avatar_template:
                              minLength: 1
                              type: string
                            id:
                              type: number
                            name:
                              minLength: 1
                              type: string
                            title:
                              type: object
                            username:
                              minLength: 1
                              type: string
                          required:
                            - id
                            - username
                            - avatar_template
                            - name
                          type: object
                      required:
                        - id
                        - likes_received
                        - likes_given
                        - topics_entered
                        - topic_count
                        - post_count
                        - posts_read
                        - days_visited
                    minItems: 1
                    type: array
                    uniqueItems: true
                  load_more_directory_items:
                    minLength: 1
                    type: string
                  total_rows_directory_items:
                    type: number
                type: object
          description: public list of users response
      tags:
        - Users
  /export_csv/export_entity.json:
    post:
      description: Start export of a report
      requestBody:
        content:
          application/json:
            schema:
              properties:
                "args[end_date]":
                  example: YYYY-mm-dd
                  type: string
                "args[group_id]":
                  type: integer
                "args[name]":
                  example: page_view_total_reqs
                  type: string
                "args[start_date]":
                  example: YYYY-mm-dd
                  type: string
                entity:
                  example: report
                  type: string
              required:
                - entity
                - args[name]
                - args[start_date]
                - args[end_date]
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    example: OK
                    type: string
                type: object
          description: Export report response
      tags:
        - Reports
  /groups.json:
    get:
      description: Get some groups
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                items:
                  properties:
                    allow_membership_requests:
                      type: boolean
                    automatic:
                      type: boolean
                    automatic_membership_email_domains:
                      type: object
                    automatic_membership_retroactive:
                      type: boolean
                    bio_cooked:
                      type: object
                    bio_raw:
                      type: object
                    default_notification_level:
                      type: number
                    display_name:
                      type: string
                    flair_bg_color:
                      type: object
                    flair_color:
                      type: object
                    flair_url:
                      type: object
                    full_name:
                      type: string
                    grant_trust_level:
                      type: object
                    has_messages:
                      type: boolean
                    id:
                      type: number
                    incoming_email:
                      type: object
                    is_group_user:
                      type: boolean
                    membership_request_template:
                      type: object
                    mentionable_level:
                      type: number
                    messageable_level:
                      type: number
                    name:
                      minLength: 1
                      type: string
                    primary_group:
                      type: boolean
                    public_admission:
                      type: boolean
                    public_exit:
                      type: boolean
                    title:
                      type: object
                    user_count:
                      type: number
                    visibility_level:
                      type: number
                  required:
                    - id
                    - automatic
                    - name
                    - user_count
                    - automatic_membership_retroactive
                    - primary_group
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
          description: groups response
      tags:
        - Groups
  "/groups/{group_id}/members.json":
    delete:
      description: You may use one of the following request body params to specify the user(s) to remove.
      parameters:
        - in: path
          name: group_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                user_email:
                  example: user1@example.com
                  type: string
                user_emails:
                  example: user1@example.com,user2@example.com
                  type: string
                user_id:
                  type: integer
                user_ids:
                  example: 1,2,3
                  type: string
                username:
                  example: username1
                  type: string
                usernames:
                  example: username1,username2
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: string
                type: object
          description: delete user from group response
      summary: Remove user(s) from a group
      tags:
        - Admin
        - Groups
    put:
      description: Add user(s) to a group (comma separated)
      parameters:
        - in: path
          name: group_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                usernames:
                  example: username1,username2
                  type: string
              required:
                - usernames
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    example: OK
                    type: string
                  usernames:
                    items: {}
                    type: array
                type: object
          description: add user to group response
      summary: Add user(s) to a group
      tags:
        - Admin
        - Groups
  "/groups/{group_name}/members.json":
    get:
      description: Get some group members
      parameters:
        - in: path
          name: group_name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  members:
                    items:
                      properties:
                        avatar_template:
                          minLength: 1
                          type: string
                        id:
                          type: number
                        username:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - username
                        - avatar_template
                        - last_seen_at
                    minItems: 1
                    type: array
                    uniqueItems: true
                  meta:
                    properties:
                      limit:
                        type: number
                      offset:
                        type: number
                      total:
                        type: number
                    required:
                      - total
                      - limit
                      - offset
                    type: object
                  owners:
                    items:
                      type: object
                    type: array
                type: object
          description: group members response
      tags:
        - Admin
        - Groups
  "/groups/{id}.json":
    put:
      description: Update a group
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                "group[name]":
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    example: OK
                    type: string
                type: object
          description: update group response
      tags:
        - Groups
  "/groups/{name}.json":
    get:
      description: Get a specific group
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  extras:
                    properties:
                      visible_group_names:
                        items:
                          type: string
                        type: array
                    type: object
                  group:
                    properties:
                      allow_membership_requests:
                        type: boolean
                      automatic:
                        type: boolean
                      automatic_membership_email_domains:
                        type: object
                      automatic_membership_retroactive:
                        type: boolean
                      bio_cooked:
                        type: object
                      bio_raw:
                        type: object
                      default_notification_level:
                        type: number
                      flair_bg_color:
                        type: object
                      flair_color:
                        type: object
                      flair_url:
                        type: object
                      full_name:
                        type: string
                      grant_trust_level:
                        type: object
                      has_messages:
                        type: boolean
                      id:
                        type: number
                      incoming_email:
                        type: object
                      is_group_owner:
                        type: boolean
                      is_group_user:
                        type: boolean
                      membership_request_template:
                        type: object
                      mentionable:
                        type: boolean
                      mentionable_level:
                        type: number
                      messageable:
                        type: boolean
                      messageable_level:
                        type: number
                      name:
                        minLength: 1
                        type: string
                      primary_group:
                        type: boolean
                      public_admission:
                        type: boolean
                      public_exit:
                        type: boolean
                      title:
                        type: object
                      user_count:
                        type: number
                      visibility_level:
                        type: number
                    required:
                      - id
                      - automatic
                      - name
                      - user_count
                      - automatic_membership_retroactive
                      - primary_group
                    type: object
                type: object
          description: group response
      tags:
        - Groups
  /invites:
    post:
      description: Invite a user by email to join your forum
      requestBody:
        content:
          application/json:
            schema:
              properties:
                custom_message:
                  type: string
                email:
                  type: string
                group_names:
                  type: string
              required:
                - email
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: string
                type: object
          description: response
      tags:
        - Invites
  /invites/link:
    post:
      description: Generate an invite link but don't send an email
      requestBody:
        content:
          application/json:
            schema:
              properties:
                custom_message:
                  type: string
                email:
                  type: string
                group_names:
                  type: string
              required:
                - email
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                example: http://discourse.example.com/invites/token_value
                type: string
          description: response
      tags:
        - Invites
  /latest.json:
    get:
      description: Get the latest topics
      parameters:
        - in: query
          name: order
          required: false
          schema:
            enum:
              - default
              - created
              - activity
              - views
              - posts
              - category
              - likes
              - op_likes
              - posters
            type: string
        - description: defaults to desc, add `ascending=true` to sort asc
          in: query
          name: ascending
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  topic_list:
                    properties:
                      can_create_topic:
                        type: boolean
                      draft:
                        type: object
                      draft_key:
                        minLength: 1
                        type: string
                      draft_sequence:
                        type: object
                      per_page:
                        type: integer
                      topics:
                        items:
                          properties:
                            archetype:
                              minLength: 1
                              type: string
                            archived:
                              type: boolean
                            bookmarked:
                              type: object
                            bumped:
                              type: boolean
                            bumped_at:
                              minLength: 1
                              type: string
                            category_id:
                              type: integer
                            closed:
                              type: boolean
                            created_at:
                              minLength: 1
                              type: string
                            excerpt:
                              minLength: 1
                              type: string
                            fancy_title:
                              minLength: 1
                              type: string
                            has_summary:
                              type: boolean
                            highest_post_number:
                              type: integer
                            id:
                              type: integer
                            image_url:
                              type: object
                            last_posted_at:
                              minLength: 1
                              type: string
                            last_poster_username:
                              minLength: 1
                              type: string
                            like_count:
                              type: integer
                            liked:
                              type: object
                            pinned:
                              type: boolean
                            pinned_globally:
                              type: boolean
                            posters:
                              items:
                                properties:
                                  description:
                                    minLength: 1
                                    type: string
                                  extras:
                                    minLength: 1
                                    type: string
                                  user_id:
                                    type: integer
                                required:
                                  - extras
                                  - description
                                  - user_id
                                type: object
                              minItems: 1
                              type: array
                              uniqueItems: true
                            posts_count:
                              type: integer
                            reply_count:
                              type: integer
                            slug:
                              minLength: 1
                              type: string
                            title:
                              minLength: 1
                              type: string
                            unpinned:
                              type: object
                            unseen:
                              type: boolean
                            views:
                              type: integer
                            visible:
                              type: boolean
                          required:
                            - id
                            - title
                            - fancy_title
                            - slug
                            - posts_count
                            - reply_count
                            - highest_post_number
                            - created_at
                            - last_posted_at
                            - bumped
                            - bumped_at
                            - unseen
                            - pinned
                            - excerpt
                            - visible
                            - closed
                            - archived
                            - views
                            - like_count
                            - has_summary
                            - archetype
                            - last_poster_username
                            - category_id
                            - pinned_globally
                          type: object
                        minItems: 1
                        type: array
                        uniqueItems: true
                    required:
                      - can_create_topic
                      - draft_key
                      - per_page
                      - topics
                    type: object
                  users:
                    items:
                      properties:
                        avatar_template:
                          type: string
                        id:
                          type: integer
                        username:
                          type: string
                      type: object
                    type: array
                type: object
          description: latest topics response
      tags:
        - Topics
  /notifications.json:
    get:
      description: Get notifications for the specified user
      parameters:
        - in: query
          name: username
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  load_more_notifications:
                    minLength: 1
                    type: string
                  notifications:
                    items:
                      properties:
                        created_at:
                          minLength: 1
                          type: string
                        data:
                          properties:
                            display_username:
                              minLength: 1
                              type: string
                            original_post_id:
                              type: number
                            original_post_type:
                              type: number
                            original_username:
                              minLength: 1
                              type: string
                            revision_number:
                              type: object
                            topic_title:
                              minLength: 1
                              type: string
                          required:
                            - topic_title
                            - original_post_id
                            - original_post_type
                            - original_username
                            - display_username
                          type: object
                        fancy_title:
                          minLength: 1
                          type: string
                        id:
                          type: number
                        notification_type:
                          type: number
                        post_number:
                          type: number
                        read:
                          type: boolean
                        slug:
                          minLength: 1
                          type: string
                        topic_id:
                          type: number
                      required:
                        - id
                        - notification_type
                        - read
                        - created_at
                        - post_number
                        - topic_id
                        - fancy_title
                        - slug
                    minItems: 1
                    type: array
                    uniqueItems: true
                  seen_notification_id:
                    type: number
                  total_rows_notifications:
                    type: number
                type: object
          description: notifications response
      tags:
        - Notifications
  /notifications/mark-read.json:
    put:
      description: Mark notifications as read
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  description: (optional) Leave off to mark all notifications as read
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    example: OK
                    type: string
                type: object
          description: successful mark-read response
      tags:
        - Notifications
  /page_view_total_reqs:
    get:
      description: return pageview stats, defaults to one month
      parameters:
        - in: query
          name: start_date
          required: false
          schema:
            type: string
        - in: query
          name: end_date
          required: false
          schema:
            type: string
        - in: query
          name: category_id
          required: false
          schema:
            type: string
        - in: query
          name: group_id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  report:
                    properties:
                      category_id:
                        type: integer
                      data:
                        items:
                          properties:
                            x:
                              type: string
                            y:
                              type: integer
                          type: object
                        type: array
                      end_date:
                        type: string
                      group_id:
                        type: integer
                      prev30Days:
                        type: integer
                      start_date:
                        type: string
                      title:
                        type: string
                      total:
                        type: integer
                      type:
                        type: string
                      xaxis:
                        type: string
                      yaxis:
                        type: string
                    type: object
                type: object
          description: pageviews response
      tags:
        - Reports
  /polls/vote:
    put:
      description: vote on a poll
      requestBody:
        content:
          application/json:
            schema:
              properties:
                "options[]":
                  type: string
                poll_name:
                  type: string
                post_id:
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  poll:
                    properties:
                      name:
                        example: poll
                        type: string
                      options:
                        properties:
                          html:
                            type: string
                          id:
                            type: string
                          votes:
                            type: integer
                        type: object
                      status:
                        example: open
                        type: string
                      type:
                        example: regular
                        type: string
                      voters:
                        type: integer
                    type: object
                  vote:
                    items:
                      type: string
                    type: array
                type: object
          description: vote on a poll response
      tags:
        - Poll Plugin
  /post_actions:
    post:
      description: Like a post and other actions
      requestBody:
        content:
          application/json:
            schema:
              properties:
                flag_topic:
                  type: boolean
                id:
                  type: integer
                post_action_type_id:
                  type: integer
              required:
                - id
                - post_action_type_id
              type: object
      responses:
        "200":
          description: success response
      tags:
        - Posts
  "/post_actions/{id}":
    delete:
      description: Un-like a post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                post_action_type_id:
                  type: integer
              required:
                - post_action_type_id
              type: object
      responses:
        "200":
          description: success response
      tags:
        - Posts
  /posts.json:
    get:
      description: Get a list of the latest posts across topics
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  latest_posts:
                    items:
                      properties:
                        actions_summary:
                          items:
                            properties:
                              can_act:
                                type: boolean
                              hidden:
                                type: boolean
                              id:
                                type: number
                            required:
                              - id
                              - hidden
                              - can_act
                          minItems: 1
                          type: array
                          uniqueItems: true
                        admin:
                          type: boolean
                        avatar_template:
                          minLength: 1
                          type: string
                        avg_time:
                          type: object
                        can_delete:
                          type: boolean
                        can_edit:
                          type: boolean
                        can_recover:
                          type: object
                        can_view_edit_history:
                          type: boolean
                        can_wiki:
                          type: boolean
                        category_id:
                          type: number
                        cooked:
                          minLength: 1
                          type: string
                        created_at:
                          minLength: 1
                          type: string
                        deleted_at:
                          type: object
                        display_username:
                          minLength: 1
                          type: string
                        edit_reason:
                          type: object
                        hidden:
                          type: boolean
                        id:
                          type: number
                        incoming_link_count:
                          type: number
                        moderator:
                          type: boolean
                        name:
                          minLength: 1
                          type: string
                        post_number:
                          type: number
                        post_type:
                          type: number
                        primary_group_flair_bg_color:
                          type: object
                        primary_group_flair_color:
                          type: object
                        primary_group_flair_url:
                          type: object
                        primary_group_name:
                          type: object
                        quote_count:
                          type: number
                        raw:
                          minLength: 1
                          type: string
                        reads:
                          type: number
                        reply_count:
                          type: number
                        reply_to_post_number:
                          type: object
                        score:
                          type: number
                        staff:
                          type: boolean
                        static_doc:
                          type: boolean
                        topic_html_title:
                          minLength: 1
                          type: string
                        topic_id:
                          type: number
                        topic_slug:
                          minLength: 1
                          type: string
                        topic_title:
                          minLength: 1
                          type: string
                        trust_level:
                          type: number
                        updated_at:
                          minLength: 1
                          type: string
                        user_deleted:
                          type: boolean
                        user_id:
                          type: number
                        user_title:
                          type: object
                        username:
                          minLength: 1
                          type: string
                        version:
                          type: number
                        wiki:
                          type: boolean
                        yours:
                          type: boolean
                    minItems: 1
                    type: array
                    uniqueItems: true
                type: object
          description: Latest posts response
      tags:
        - Posts
    post:
      description: Create a new topic, a new post, or a private message
      requestBody:
        content:
          application/json:
            schema:
              properties:
                archetype:
                  description: required for private message
                  enum:
                    - private_message
                  example: private_message
                  type: string
                category:
                  description: optional if creating a new topic, ignored if creating a new post
                  type: integer
                created_at:
                  description: pick a date other than the default current time
                  example: 2017-01-31
                  type: string
                raw:
                  type: string
                target_recipients:
                  description: required for private message, comma separated
                  example: discourse1,discourse2
                  type: string
                title:
                  description: required if creating a new topic or new private message
                  type: string
                topic_id:
                  description: required if creating a new post
                  type: integer
              required:
                - raw
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  actions_summary:
                    items:
                      properties:
                        can_act:
                          type: boolean
                        hidden:
                          type: boolean
                        id:
                          type: number
                      required:
                        - id
                        - hidden
                        - can_act
                    minItems: 1
                    type: array
                    uniqueItems: true
                  admin:
                    type: boolean
                  avatar_template:
                    minLength: 1
                    type: string
                  avg_time:
                    nullable: true
                  can_delete:
                    type: boolean
                  can_edit:
                    type: boolean
                  can_recover:
                    type: boolean
                  can_view_edit_history:
                    type: boolean
                  can_wiki:
                    type: boolean
                  cooked:
                    minLength: 1
                    type: string
                  created_at:
                    minLength: 1
                    type: string
                  deleted_at:
                    nullable: true
                  display_username:
                    type: string
                  draft_sequence:
                    type: number
                  edit_reason:
                    nullable: true
                  hidden:
                    type: boolean
                  hidden_reason_id:
                    nullable: true
                  id:
                    type: number
                  incoming_link_count:
                    type: number
                  moderator:
                    type: boolean
                  name:
                    type: string
                  post_number:
                    type: number
                  post_type:
                    type: number
                  primary_group_flair_bg_color:
                    nullable: true
                  primary_group_flair_color:
                    nullable: true
                  primary_group_flair_url:
                    nullable: true
                  primary_group_name:
                    nullable: true
                  quote_count:
                    type: number
                  reads:
                    type: number
                  reply_count:
                    type: number
                  reply_to_post_number:
                    nullable: true
                  score:
                    type: number
                  staff:
                    type: boolean
                  topic_id:
                    type: number
                  topic_slug:
                    minLength: 1
                    type: string
                  trust_level:
                    type: number
                  updated_at:
                    minLength: 1
                    type: string
                  user_deleted:
                    type: boolean
                  user_id:
                    type: number
                  user_title:
                    nullable: true
                  username:
                    minLength: 1
                    type: string
                  version:
                    type: number
                  wiki:
                    type: boolean
                  yours:
                    type: boolean
                type: object
          description: new topic response
      tags:
        - Posts
        - Topics
  "/posts/{id}.json":
    get:
      description: Get a single post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  actions_summary:
                    items:
                      type: object
                    type: array
                  admin:
                    type: boolean
                  avatar_template:
                    minLength: 1
                    type: string
                  avg_time:
                    type: object
                  can_delete:
                    type: boolean
                  can_edit:
                    type: boolean
                  can_recover:
                    type: boolean
                  can_view_edit_history:
                    type: boolean
                  can_wiki:
                    type: boolean
                  cooked:
                    minLength: 1
                    type: string
                  created_at:
                    minLength: 1
                    type: string
                  deleted_at:
                    type: object
                  display_username:
                    type: string
                  edit_reason:
                    type: object
                  hidden:
                    type: boolean
                  hidden_reason_id:
                    type: object
                  id:
                    type: number
                  incoming_link_count:
                    type: number
                  moderator:
                    type: boolean
                  name:
                    type: string
                  post_number:
                    type: number
                  post_type:
                    type: number
                  primary_group_flair_bg_color:
                    type: object
                  primary_group_flair_color:
                    type: object
                  primary_group_flair_url:
                    type: object
                  primary_group_name:
                    type: object
                  quote_count:
                    type: number
                  raw:
                    minLength: 1
                    type: string
                  reads:
                    type: number
                  reply_count:
                    type: number
                  reply_to_post_number:
                    type: object
                  score:
                    type: number
                  staff:
                    type: boolean
                  topic_id:
                    type: number
                  topic_slug:
                    minLength: 1
                    type: string
                  trust_level:
                    type: number
                  updated_at:
                    minLength: 1
                    type: string
                  user_deleted:
                    type: boolean
                  user_id:
                    type: number
                  user_title:
                    type: object
                  username:
                    minLength: 1
                    type: string
                  version:
                    type: number
                  wiki:
                    type: boolean
                  yours:
                    type: boolean
                type: object
          description: post response
      tags:
        - Posts
    put:
      description: Update a single post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                "post[cooked]":
                  type: string
                "post[edit_reason]":
                  type: string
                "post[raw]":
                  type: string
                "post[raw_old]":
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  post:
                    properties:
                      actions_summary:
                        items:
                          properties:
                            can_act:
                              type: boolean
                            hidden:
                              type: boolean
                            id:
                              type: number
                          required:
                            - id
                            - hidden
                            - can_act
                        minItems: 1
                        type: array
                        uniqueItems: true
                      admin:
                        type: boolean
                      avatar_template:
                        minLength: 1
                        type: string
                      avg_time:
                        type: object
                      can_delete:
                        type: boolean
                      can_edit:
                        type: boolean
                      can_recover:
                        type: boolean
                      can_view_edit_history:
                        type: boolean
                      can_wiki:
                        type: boolean
                      cooked:
                        minLength: 1
                        type: string
                      created_at:
                        minLength: 1
                        type: string
                      deleted_at:
                        type: object
                      display_username:
                        type: string
                      draft_sequence:
                        type: number
                      edit_reason:
                        type: object
                      hidden:
                        type: boolean
                      hidden_reason_id:
                        type: object
                      id:
                        type: number
                      incoming_link_count:
                        type: number
                      moderator:
                        type: boolean
                      name:
                        type: string
                      post_number:
                        type: number
                      post_type:
                        type: number
                      primary_group_flair_bg_color:
                        type: object
                      primary_group_flair_color:
                        type: object
                      primary_group_flair_url:
                        type: object
                      primary_group_name:
                        type: object
                      quote_count:
                        type: number
                      reads:
                        type: number
                      reply_count:
                        type: number
                      reply_to_post_number:
                        type: object
                      score:
                        type: number
                      staff:
                        type: boolean
                      topic_id:
                        type: number
                      topic_slug:
                        minLength: 1
                        type: string
                      trust_level:
                        type: number
                      updated_at:
                        minLength: 1
                        type: string
                      user_deleted:
                        type: boolean
                      user_id:
                        type: number
                      user_title:
                        type: object
                      username:
                        minLength: 1
                        type: string
                      version:
                        type: number
                      wiki:
                        type: boolean
                      yours:
                        type: boolean
                    required:
                      - id
                      - name
                      - username
                      - avatar_template
                      - created_at
                      - cooked
                      - post_number
                      - post_type
                      - updated_at
                      - reply_count
                      - quote_count
                      - incoming_link_count
                      - reads
                      - score
                      - yours
                      - topic_id
                      - topic_slug
                      - display_username
                      - version
                      - can_edit
                      - can_delete
                      - can_recover
                      - can_wiki
                      - actions_summary
                      - moderator
                      - admin
                      - staff
                      - user_id
                      - draft_sequence
                      - hidden
                      - trust_level
                      - user_deleted
                      - can_view_edit_history
                      - wiki
                    type: object
                type: object
          description: update post response
      tags:
        - Posts
  "/posts/{id}/locked":
    put:
      description: Lock a post from being edited
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                locked:
                  description: True or False
                  example: true
                  type: boolean
              required:
                - locked
              type: object
      responses:
        "200":
          description: success response
      tags:
        - Posts
  /search/query:
    get:
      description: Search for something
      parameters:
        - in: query
          name: term
          required: true
          schema:
            type: string
        - in: query
          name: include_blurbs
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  categories:
                    items:
                      type: object
                    type: array
                  grouped_search_result:
                    properties:
                      category_ids:
                        items:
                          type: object
                        type: array
                      more_categories:
                        type: object
                      more_posts:
                        type: object
                      more_users:
                        type: object
                      post_ids:
                        items:
                          type: object
                        type: array
                      user_ids:
                        items:
                          type: object
                        type: array
                    required:
                      - post_ids
                      - user_ids
                      - category_ids
                    type: object
                  posts:
                    items:
                      properties:
                        avatar_template:
                          minLength: 1
                          type: string
                        blurb:
                          minLength: 1
                          type: string
                        cooked:
                          minLength: 1
                          type: string
                        created_at:
                          minLength: 1
                          type: string
                        id:
                          type: number
                        like_count:
                          type: number
                        name:
                          type: object
                        post_number:
                          type: number
                        topic_id:
                          type: number
                        username:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - username
                        - avatar_template
                        - created_at
                        - cooked
                        - like_count
                        - blurb
                        - post_number
                        - topic_id
                      type: object
                    minItems: 1
                    type: array
                    uniqueItems: true
                  topics:
                    items:
                      properties:
                        archetype:
                          minLength: 1
                          type: string
                        archived:
                          type: boolean
                        bookmarked:
                          type: object
                        bumped:
                          type: boolean
                        bumped_at:
                          minLength: 1
                          type: string
                        category_id:
                          type: number
                        closed:
                          type: boolean
                        created_at:
                          minLength: 1
                          type: string
                        fancy_title:
                          minLength: 1
                          type: string
                        has_summary:
                          type: boolean
                        highest_post_number:
                          type: number
                        id:
                          type: number
                        image_url:
                          type: object
                        last_posted_at:
                          minLength: 1
                          type: string
                        last_poster_username:
                          type: object
                        like_count:
                          type: number
                        liked:
                          type: object
                        pinned:
                          type: boolean
                        pinned_globally:
                          type: boolean
                        posters:
                          items:
                            type: object
                          type: array
                        posts_count:
                          type: number
                        reply_count:
                          type: number
                        slug:
                          minLength: 1
                          type: string
                        title:
                          minLength: 1
                          type: string
                        unpinned:
                          type: object
                        unseen:
                          type: boolean
                        views:
                          type: number
                        visible:
                          type: boolean
                      required:
                        - id
                        - title
                        - fancy_title
                        - slug
                        - posts_count
                        - reply_count
                        - highest_post_number
                        - created_at
                        - last_posted_at
                        - bumped
                        - bumped_at
                        - unseen
                        - pinned
                        - visible
                        - closed
                        - archived
                        - views
                        - like_count
                        - has_summary
                        - archetype
                        - category_id
                        - pinned_globally
                      type: object
                    minItems: 1
                    type: array
                    uniqueItems: true
                  users:
                    items:
                      type: object
                    type: array
                type: object
          description: search response
      tags:
        - Search
  /session/forgot_password:
    post:
      description: Send password reset email
      requestBody:
        content:
          application/json:
            schema:
              properties:
                login:
                  type: string
              required:
                - login
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  result:
                    type: string
                  user_found:
                    type: boolean
                type: object
          description: send password reset email response
      tags:
        - Password Reset
  "/t/{id}.json":
    delete:
      description: Remove a single topic
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: delete topic response is empty, just a status code
      tags:
        - Topics
    get:
      description: Get a single topic
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - description: Will return up to 1000 posts in a topic
          example: true
          in: query
          name: print
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  actions_summary:
                    items:
                      properties:
                        can_act:
                          type: boolean
                        count:
                          type: number
                        hidden:
                          type: boolean
                        id:
                          type: number
                      required:
                        - id
                        - count
                        - hidden
                        - can_act
                    minItems: 1
                    type: array
                    uniqueItems: true
                  archetype:
                    minLength: 1
                    type: string
                  archived:
                    type: boolean
                  bookmarked:
                    type: object
                  category_id:
                    type: number
                  chunk_size:
                    type: number
                  closed:
                    type: boolean
                  created_at:
                    minLength: 1
                    type: string
                  deleted_at:
                    type: object
                  deleted_by:
                    type: object
                  details:
                    properties:
                      auto_close_at:
                        type: object
                      auto_close_based_on_last_post:
                        type: boolean
                      auto_close_hours:
                        type: object
                      can_flag_topic:
                        type: boolean
                      created_by:
                        properties:
                          avatar_template:
                            minLength: 1
                            type: string
                          id:
                            type: number
                          username:
                            minLength: 1
                            type: string
                        required:
                          - id
                          - username
                          - avatar_template
                        type: object
                      last_poster:
                        properties:
                          avatar_template:
                            minLength: 1
                            type: string
                          id:
                            type: number
                          username:
                            minLength: 1
                            type: string
                        required:
                          - id
                          - username
                          - avatar_template
                        type: object
                      notification_level:
                        type: number
                      participants:
                        items:
                          properties:
                            avatar_template:
                              minLength: 1
                              type: string
                            id:
                              type: number
                            post_count:
                              type: number
                            username:
                              minLength: 1
                              type: string
                          required:
                            - id
                            - username
                            - avatar_template
                            - post_count
                        minItems: 1
                        type: array
                        uniqueItems: true
                      suggested_topics:
                        items:
                          properties:
                            archetype:
                              minLength: 1
                              type: string
                            archived:
                              type: boolean
                            bookmarked:
                              type: object
                            bumped:
                              type: boolean
                            bumped_at:
                              minLength: 1
                              type: string
                            category_id:
                              type: number
                            closed:
                              type: boolean
                            created_at:
                              minLength: 1
                              type: string
                            excerpt:
                              minLength: 1
                              type: string
                            fancy_title:
                              minLength: 1
                              type: string
                            highest_post_number:
                              type: number
                            id:
                              type: number
                            image_url:
                              minLength: 1
                              type: string
                            last_posted_at:
                              minLength: 1
                              type: string
                            like_count:
                              type: number
                            liked:
                              type: object
                            pinned:
                              type: boolean
                            posters:
                              items:
                                properties:
                                  description:
                                    minLength: 1
                                    type: string
                                  extras:
                                    minLength: 1
                                    type: string
                                  user:
                                    properties:
                                      avatar_template:
                                        minLength: 1
                                        type: string
                                      id:
                                        type: number
                                      username:
                                        minLength: 1
                                        type: string
                                    required:
                                      - id
                                      - username
                                      - avatar_template
                                    type: object
                                required:
                                  - extras
                                  - description
                              minItems: 1
                              type: array
                              uniqueItems: true
                            posts_count:
                              type: number
                            reply_count:
                              type: number
                            slug:
                              minLength: 1
                              type: string
                            title:
                              minLength: 1
                              type: string
                            unpinned:
                              type: object
                            unseen:
                              type: boolean
                            views:
                              type: number
                            visible:
                              type: boolean
                          required:
                            - id
                            - title
                            - fancy_title
                            - slug
                            - posts_count
                            - reply_count
                            - highest_post_number
                            - image_url
                            - created_at
                            - last_posted_at
                            - bumped
                            - bumped_at
                            - unseen
                            - pinned
                            - excerpt
                            - visible
                            - closed
                            - archived
                            - archetype
                            - like_count
                            - views
                            - category_id
                        minItems: 1
                        type: array
                        uniqueItems: true
                    required:
                      - auto_close_based_on_last_post
                      - created_by
                      - last_poster
                      - participants
                      - suggested_topics
                      - notification_level
                      - can_flag_topic
                    type: object
                  draft:
                    type: object
                  draft_key:
                    minLength: 1
                    type: string
                  draft_sequence:
                    type: object
                  fancy_title:
                    minLength: 1
                    type: string
                  has_summary:
                    type: boolean
                  highest_post_number:
                    type: number
                  id:
                    type: number
                  last_posted_at:
                    type: object
                  like_count:
                    type: number
                  participant_count:
                    type: number
                  pinned:
                    type: boolean
                  pinned_at:
                    minLength: 1
                    type: string
                  pinned_globally:
                    type: boolean
                  pinned_until:
                    type: object
                  post_stream:
                    properties:
                      posts:
                        items:
                          properties:
                            actions_summary:
                              items:
                                type: object
                              type: array
                            admin:
                              type: boolean
                            avatar_template:
                              minLength: 1
                              type: string
                            avg_time:
                              type: object
                            can_delete:
                              type: boolean
                            can_edit:
                              type: boolean
                            can_recover:
                              type: boolean
                            can_view_edit_history:
                              type: boolean
                            can_wiki:
                              type: boolean
                            cooked:
                              minLength: 1
                              type: string
                            created_at:
                              minLength: 1
                              type: string
                            deleted_at:
                              type: object
                            display_username:
                              type: string
                            edit_reason:
                              type: object
                            hidden:
                              type: boolean
                            hidden_reason_id:
                              type: object
                            id:
                              type: number
                            incoming_link_count:
                              type: number
                            moderator:
                              type: boolean
                            name:
                              type: string
                            polls:
                              properties:
                                poll:
                                  properties:
                                    name:
                                      type: string
                                    options:
                                      items:
                                        properties:
                                          html:
                                            type: string
                                          id:
                                            type: string
                                          votes:
                                            type: integer
                                        type: object
                                      type: array
                                    status:
                                      type: string
                                    type:
                                      type: string
                                    voters:
                                      type: integer
                                  type: object
                              type: object
                            polls_votes:
                              properties:
                                poll:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            post_number:
                              type: number
                            post_type:
                              type: number
                            primary_group_flair_bg_color:
                              type: object
                            primary_group_flair_color:
                              type: object
                            primary_group_flair_url:
                              type: object
                            primary_group_name:
                              type: object
                            quote_count:
                              type: number
                            read:
                              type: boolean
                            reads:
                              type: number
                            reply_count:
                              type: number
                            reply_to_post_number:
                              type: object
                            score:
                              type: number
                            staff:
                              type: boolean
                            topic_id:
                              type: number
                            topic_slug:
                              minLength: 1
                              type: string
                            trust_level:
                              type: number
                            updated_at:
                              minLength: 1
                              type: string
                            user_deleted:
                              type: boolean
                            user_id:
                              type: number
                            user_title:
                              type: object
                            username:
                              minLength: 1
                              type: string
                            version:
                              type: number
                            wiki:
                              type: boolean
                            yours:
                              type: boolean
                          type: object
                        type: array
                      stream:
                        items:
                          type: object
                        type: array
                    required:
                      - posts
                      - stream
                    type: object
                  posts_count:
                    type: number
                  reply_count:
                    type: number
                  slug:
                    minLength: 1
                    type: string
                  timeline_lookup:
                    items:
                      properties:
                        "0":
                          items:
                            type: object
                          type: array
                          uniqueItems: true
                    type: array
                  title:
                    minLength: 1
                    type: string
                  unpinned:
                    type: object
                  user_id:
                    type: number
                  views:
                    type: number
                  visible:
                    type: boolean
                  word_count:
                    type: object
                type: object
          description: topic response
      tags:
        - Topics
  "/t/{id}/bookmark":
    put:
      description: Bookmark a topic
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: empty response body
      tags:
        - Topics
  "/t/{id}/change-timestamp":
    put:
      description: Update a topics timestamp
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                timestamp:
                  example: 1491199200
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    example: OK
                    type: string
                type: object
          description: update timestamp response
      tags:
        - Topics
  "/t/{id}/invite":
    post:
      description: Invite user to topic
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                username:
                  type: string
              required:
                - username
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  user:
                    properties:
                      avatar_template:
                        minLength: 1
                        type: string
                      id:
                        type: number
                      username:
                        minLength: 1
                        type: string
                    required:
                      - id
                      - username
                      - avatar_template
                    type: object
                type: object
          description: invite response
      tags:
        - Invites
        - Topics
  "/t/{id}/notifications":
    post:
      description: set notification level
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                notification_level:
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                  example: 0
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    example: OK
                    type: string
                type: object
          description: set notification level response
      tags:
        - Topics
  "/t/{id}/posts.json":
    get:
      description: Get specific posts in a topic. Used for infinite scrolling or pagination.
      parameters:
        - description: post_ids can be found in the post_stream
          example: ?posts_ids[]=12&post_ids[]=13&post_ids[]=14
          in: query
          name: post_ids[]
          required: false
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                  post_stream:
                    properties:
                      posts:
                        items: {}
                        type: array
                    type: object
                type: object
          description: posts in a topic response
      tags:
        - Topics
  "/t/{id}/status":
    put:
      description: Update a topic's status
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enabled:
                  description: This would be true or false
                  example: true
                  type: boolean
                status:
                  description: A lowercase string. Valid values shown above.
                  enum:
                    - closed
                    - pinned
                    - pinned_globally
                    - archived
                    - visible
                  example: pinned
                  type: string
                until:
                  description: Only required for pinned and pinned_globally.
                  example: 2018-12-31
                  type: string
              required:
                - status
                - enabled
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    example: OK
                    type: string
                  topic_status_update:
                    type: object
                type: object
          description: Update a Topics Status
      tags:
        - Topics
  "/t/{id}/timer":
    post:
      description: Create a timed topic
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                based_on_last_post:
                  example: false
                  type: boolean
                category_id:
                  type: integer
                status_type:
                  example: publish_to_category
                  type: string
                time:
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  based_on_last_post:
                    example: false
                    type: boolean
                  category_id:
                    type: integer
                  closed:
                    example: false
                    type: boolean
                  duration:
                    type: string
                  execute_at:
                    type: string
                  success:
                    example: OK
                    type: string
                type: object
          description: create a timed topic response
      tags:
        - Topics
  "/t/{slug}/{id}.json":
    put:
      description: Update a single topic
      parameters:
        - description: "ProTip: You can just use a `-` instead of the actual slug and the topic will be found by the id."
          example: "-"
          in: path
          name: slug
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                category_id:
                  type: integer
                title:
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  basic_topic:
                    properties:
                      fancy_title:
                        minLength: 1
                        type: string
                      id:
                        type: number
                      posts_count:
                        type: number
                      slug:
                        minLength: 1
                        type: string
                      title:
                        minLength: 1
                        type: string
                    required:
                      - id
                      - title
                      - fancy_title
                      - slug
                      - posts_count
                    type: object
                type: object
          description: update topic response
      tags:
        - Topics
  "/tag/{tag}":
    get:
      description: Get a specific tag
      parameters:
        - in: path
          name: tag
          required: true
          schema:
            type: string
      responses:
        "200":
          description: tag response
      tags:
        - Tags
  /tag_groups.json:
    get:
      description: Get a list of tag groups
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  tag_groups:
                    items:
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        one_per_topic:
                          type: boolean
                        parent_tag_name:
                          type: string
                        tag_names:
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                type: object
          description: List of tag groups response
      tags:
        - Tags
    post:
      description: Create a new tag group
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                tag_names:
                  items:
                    type: string
                  type: array
              required:
                - name
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  tag_group:
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      one_per_topic:
                        type: boolean
                      parent_tag_name:
                        items:
                          properties:
                            tag_name:
                              type: string
                        type: array
                      tag_names:
                        items:
                          type: string
                        type: array
                    required:
                      - id
                      - name
                      - tag_names
                      - parent_tag_name
                      - one_per_topic
                    type: object
                type: object
          description: Create tab group response
      tags:
        - Tags
  "/tag_groups/{id}.json":
    get:
      description: Get a single tag group
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  tag_group:
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      one_per_topic:
                        type: boolean
                      parent_tag_name:
                        items:
                          properties:
                            tag_name:
                              type: string
                        type: array
                      tag_names:
                        items:
                          type: string
                        type: array
                    type: object
                type: object
          description: Tag group response
      tags:
        - Tags
    put:
      description: Update an existing tag group
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                tag_names:
                  items:
                    type: string
                  type: array
              required:
                - name
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    example: OK
                    type: string
                  tag_group:
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      one_per_topic:
                        type: boolean
                      parent_tag_name:
                        items:
                          properties:
                            tag_name:
                              type: string
                        type: array
                      tag_names:
                        items:
                          type: string
                        type: array
                    type: object
                type: object
          description: Create tab group response
      tags:
        - Tags
  /tags:
    get:
      description: Get a list of tags
      responses:
        "200":
          description: tag list response
      tags:
        - Tags
  /top.json:
    get:
      description: Get the top topics
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  topic_list:
                    properties:
                      can_create_topic:
                        type: boolean
                      draft:
                        type: object
                      draft_key:
                        minLength: 1
                        type: string
                      draft_sequence:
                        type: number
                      for_period:
                        minLength: 1
                        type: string
                      per_page:
                        type: number
                      topics:
                        items:
                          properties:
                            archetype:
                              minLength: 1
                              type: string
                            archived:
                              type: boolean
                            bookmarked:
                              type: boolean
                            bumped:
                              type: boolean
                            bumped_at:
                              minLength: 1
                              type: string
                            category_id:
                              type: number
                            closed:
                              type: boolean
                            created_at:
                              minLength: 1
                              type: string
                            fancy_title:
                              minLength: 1
                              type: string
                            has_summary:
                              type: boolean
                            highest_post_number:
                              type: number
                            id:
                              type: number
                            image_url:
                              type: object
                            last_posted_at:
                              minLength: 1
                              type: string
                            last_poster_username:
                              minLength: 1
                              type: string
                            last_read_post_number:
                              type: number
                            like_count:
                              type: number
                            liked:
                              type: boolean
                            new_posts:
                              type: number
                            notification_level:
                              type: number
                            pinned:
                              type: boolean
                            pinned_globally:
                              type: boolean
                            posters:
                              items:
                                properties:
                                  description:
                                    minLength: 1
                                    type: string
                                  extras:
                                    minLength: 1
                                    type: string
                                  user_id:
                                    type: number
                                required:
                                  - extras
                                  - description
                                  - user_id
                              minItems: 1
                              type: array
                              uniqueItems: true
                            posts_count:
                              type: number
                            reply_count:
                              type: number
                            slug:
                              minLength: 1
                              type: string
                            title:
                              minLength: 1
                              type: string
                            unpinned:
                              type: object
                            unread:
                              type: number
                            unseen:
                              type: boolean
                            views:
                              type: number
                            visible:
                              type: boolean
                          required:
                            - id
                            - title
                            - fancy_title
                            - slug
                            - posts_count
                            - reply_count
                            - highest_post_number
                            - created_at
                            - last_posted_at
                            - bumped
                            - bumped_at
                            - unseen
                            - last_read_post_number
                            - unread
                            - new_posts
                            - pinned
                            - visible
                            - closed
                            - archived
                            - notification_level
                            - bookmarked
                            - liked
                            - views
                            - like_count
                            - has_summary
                            - archetype
                            - last_poster_username
                            - category_id
                            - pinned_globally
                        minItems: 1
                        type: array
                        uniqueItems: true
                    required:
                      - can_create_topic
                      - draft_key
                      - draft_sequence
                      - for_period
                      - per_page
                      - topics
                    type: object
                  users:
                    items:
                      properties:
                        avatar_template:
                          minLength: 1
                          type: string
                        id:
                          type: number
                        username:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - username
                        - avatar_template
                    minItems: 1
                    type: array
                    uniqueItems: true
                type: object
          description: top topics response
      tags:
        - Topics
  "/top/{flag}.json":
    get:
      description: Get the top topics filtered by specified flag
      parameters:
        - in: path
          name: flag
          required: true
          schema:
            enum:
              - all
              - yearly
              - quarterly
              - monthly
              - weekly
              - daily
            type: string
      responses:
        "200":
          description: success response
      tags:
        - Topics
  "/topics/private-messages-sent/{username}.json":
    get:
      description: Get a list of private messages sent
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  topic_list:
                    properties:
                      can_create_topic:
                        type: boolean
                      draft:
                        type: object
                      draft_key:
                        minLength: 1
                        type: string
                      draft_sequence:
                        type: number
                      per_page:
                        type: number
                      topics:
                        items:
                          properties:
                            archetype:
                              minLength: 1
                              type: string
                            archived:
                              type: boolean
                            bookmarked:
                              type: boolean
                            bumped:
                              type: boolean
                            bumped_at:
                              minLength: 1
                              type: string
                            category_id:
                              type: object
                            closed:
                              type: boolean
                            created_at:
                              minLength: 1
                              type: string
                            fancy_title:
                              minLength: 1
                              type: string
                            has_summary:
                              type: boolean
                            highest_post_number:
                              type: number
                            id:
                              type: number
                            image_url:
                              type: object
                            last_posted_at:
                              minLength: 1
                              type: string
                            last_poster_username:
                              minLength: 1
                              type: string
                            last_read_post_number:
                              type: number
                            like_count:
                              type: number
                            liked:
                              type: boolean
                            new_posts:
                              type: number
                            notification_level:
                              type: number
                            participants:
                              items:
                                properties:
                                  description:
                                    type: object
                                  extras:
                                    type: object
                                  user_id:
                                    type: number
                                required:
                                  - user_id
                              minItems: 1
                              type: array
                              uniqueItems: true
                            pinned:
                              type: boolean
                            pinned_globally:
                              type: boolean
                            posters:
                              items:
                                properties:
                                  description:
                                    minLength: 1
                                    type: string
                                  extras:
                                    minLength: 1
                                    type: string
                                  user_id:
                                    type: number
                                required:
                                  - extras
                                  - description
                                  - user_id
                              minItems: 1
                              type: array
                              uniqueItems: true
                            posts_count:
                              type: number
                            reply_count:
                              type: number
                            slug:
                              minLength: 1
                              type: string
                            title:
                              minLength: 1
                              type: string
                            unpinned:
                              type: object
                            unread:
                              type: number
                            unseen:
                              type: boolean
                            views:
                              type: number
                            visible:
                              type: boolean
                          required:
                            - id
                            - title
                            - fancy_title
                            - slug
                            - posts_count
                            - reply_count
                            - highest_post_number
                            - created_at
                            - last_posted_at
                            - bumped
                            - bumped_at
                            - unseen
                            - last_read_post_number
                            - unread
                            - new_posts
                            - pinned
                            - visible
                            - closed
                            - archived
                            - notification_level
                            - bookmarked
                            - liked
                            - views
                            - like_count
                            - has_summary
                            - archetype
                            - last_poster_username
                            - pinned_globally
                        minItems: 1
                        type: array
                        uniqueItems: true
                    required:
                      - can_create_topic
                      - draft_key
                      - draft_sequence
                      - per_page
                      - topics
                    type: object
                  users:
                    items:
                      properties:
                        avatar_template:
                          minLength: 1
                          type: string
                        id:
                          type: number
                        username:
                          minLength: 1
                          type: string
                      required:
                        - id
                        - username
                        - avatar_template
                    minItems: 1
                    type: array
                    uniqueItems: true
                type: object
          description: private messages sent response
      tags:
        - Private Messages
  "/topics/private-messages/{username}.json":
    get:
      description: Get a list of private messages for a user
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  topic_list:
                    properties:
                      can_create_topic:
                        type: boolean
                      draft:
                        nullable: true
                      draft_key:
                        minLength: 1
                        type: string
                      draft_sequence:
                        type: number
                      per_page:
                        type: number
                      topics:
                        items:
                          properties:
                            archetype:
                              minLength: 1
                              type: string
                            archived:
                              type: boolean
                            bookmarked:
                              type: boolean
                            bumped:
                              type: boolean
                            bumped_at:
                              minLength: 1
                              type: string
                            category_id:
                              type: object
                            closed:
                              type: boolean
                            created_at:
                              minLength: 1
                              type: string
                            fancy_title:
                              minLength: 1
                              type: string
                            has_summary:
                              type: boolean
                            highest_post_number:
                              type: number
                            id:
                              type: number
                            image_url:
                              type: object
                            last_posted_at:
                              minLength: 1
                              type: string
                            last_poster_username:
                              minLength: 1
                              type: string
                            last_read_post_number:
                              type: number
                            like_count:
                              type: number
                            liked:
                              type: boolean
                            new_posts:
                              type: number
                            notification_level:
                              type: number
                            participants:
                              items:
                                properties:
                                  description:
                                    type: object
                                  extras:
                                    type: object
                                  user_id:
                                    type: number
                                required:
                                  - user_id
                              minItems: 1
                              type: array
                              uniqueItems: true
                            pinned:
                              type: boolean
                            pinned_globally:
                              type: boolean
                            posters:
                              items:
                                properties:
                                  description:
                                    minLength: 1
                                    type: string
                                  extras:
                                    minLength: 1
                                    type: string
                                  user_id:
                                    type: number
                                required:
                                  - extras
                                  - description
                                  - user_id
                              minItems: 1
                              type: array
                              uniqueItems: true
                            posts_count:
                              type: number
                            reply_count:
                              type: number
                            slug:
                              minLength: 1
                              type: string
                            title:
                              minLength: 1
                              type: string
                            unpinned:
                              type: object
                            unread:
                              type: number
                            unseen:
                              type: boolean
                            views:
                              type: number
                            visible:
                              type: boolean
                          required:
                            - id
                            - title
                            - fancy_title
                            - slug
                            - posts_count
                            - reply_count
                            - highest_post_number
                            - created_at
                            - last_posted_at
                            - bumped
                            - bumped_at
                            - unseen
                            - last_read_post_number
                            - unread
                            - new_posts
                            - pinned
                            - visible
                            - closed
                            - archived
                            - notification_level
                            - bookmarked
                            - liked
                            - views
                            - like_count
                            - has_summary
                            - archetype
                            - last_poster_username
                            - pinned_globally
                        minItems: 1
                        type: array
                        uniqueItems: true
                    required:
                      - can_create_topic
                      - draft_key
                      - draft_sequence
                      - per_page
                      - topics
                    type: object
                type: object
          description: list of private messages response
      tags:
        - Private Messages
  "/u/by-external/{external_id}.json":
    get:
      description: Get user by 'Discourse SSO' external ID
      parameters:
        - in: path
          name: external_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  user:
                    properties:
                      admin:
                        type: boolean
                      avatar_template:
                        minLength: 1
                        type: string
                      badge_count:
                        type: number
                      can_edit:
                        type: boolean
                      can_edit_email:
                        type: boolean
                      can_edit_name:
                        type: boolean
                      can_edit_username:
                        type: boolean
                      can_send_private_message_to_user:
                        type: boolean
                      can_send_private_messages:
                        type: boolean
                      card_badge:
                        type: object
                      created_at:
                        minLength: 1
                        type: string
                      custom_fields:
                        type: object
                      featured_user_badge_ids:
                        items:
                          type: object
                        type: array
                      groups:
                        items:
                          properties:
                            alias_level:
                              type: number
                            automatic:
                              type: boolean
                            automatic_membership_email_domains:
                              type: object
                            automatic_membership_retroactive:
                              type: boolean
                            flair_bg_color:
                              type: object
                            flair_color:
                              type: object
                            flair_url:
                              type: object
                            grant_trust_level:
                              type: object
                            has_messages:
                              type: boolean
                            id:
                              type: number
                            is_member:
                              type: boolean
                            mentionable:
                              type: boolean
                            name:
                              minLength: 1
                              type: string
                            notification_level:
                              type: object
                            primary_group:
                              type: boolean
                            title:
                              type: object
                            user_count:
                              type: number
                            visible:
                              type: boolean
                          required:
                            - id
                            - automatic
                            - name
                            - user_count
                            - alias_level
                            - visible
                            - automatic_membership_retroactive
                            - primary_group
                            - has_messages
                            - is_member
                            - mentionable
                        minItems: 1
                        type: array
                        uniqueItems: true
                      id:
                        type: number
                      invited_by:
                        type: object
                      last_posted_at:
                        minLength: 1
                        type: string
                      last_seen_at:
                        minLength: 1
                        type: string
                      moderator:
                        type: boolean
                      name:
                        type: object
                      pending_count:
                        type: number
                      primary_group_flair_bg_color:
                        type: object
                      primary_group_flair_color:
                        type: object
                      primary_group_flair_url:
                        type: object
                      primary_group_name:
                        type: object
                      profile_view_count:
                        type: number
                      title:
                        type: object
                      trust_level:
                        type: number
                      uploaded_avatar_id:
                        type: object
                      username:
                        minLength: 1
                        type: string
                      website_name:
                        type: object
                    required:
                      - id
                      - username
                      - avatar_template
                      - last_posted_at
                      - last_seen_at
                      - created_at
                      - can_edit
                      - can_edit_username
                      - can_edit_email
                      - can_edit_name
                      - can_send_private_messages
                      - can_send_private_message_to_user
                      - trust_level
                      - moderator
                      - admin
                      - badge_count
                      - custom_fields
                      - pending_count
                      - profile_view_count
                      - groups
                      - featured_user_badge_ids
                    type: object
                  user_badges:
                    items:
                      type: object
                    type: array
                type: object
          description: get user response
      tags:
        - Users
  "/u/by-external/{provider}/{external_id}.json":
    get:
      description: Get user by identity provider external ID
      parameters:
        - description: "Authentication provider name. Can be found in the provider's callback URL: `/auth/{provider}/callback`"
          in: path
          name: provider
          required: true
          schema:
            type: string
        - in: path
          name: external_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  user:
                    properties:
                      admin:
                        type: boolean
                      avatar_template:
                        minLength: 1
                        type: string
                      badge_count:
                        type: number
                      can_edit:
                        type: boolean
                      can_edit_email:
                        type: boolean
                      can_edit_name:
                        type: boolean
                      can_edit_username:
                        type: boolean
                      can_send_private_message_to_user:
                        type: boolean
                      can_send_private_messages:
                        type: boolean
                      card_badge:
                        type: object
                      created_at:
                        minLength: 1
                        type: string
                      custom_fields:
                        type: object
                      featured_user_badge_ids:
                        items:
                          type: object
                        type: array
                      groups:
                        items:
                          properties:
                            alias_level:
                              type: number
                            automatic:
                              type: boolean
                            automatic_membership_email_domains:
                              type: object
                            automatic_membership_retroactive:
                              type: boolean
                            flair_bg_color:
                              type: object
                            flair_color:
                              type: object
                            flair_url:
                              type: object
                            grant_trust_level:
                              type: object
                            has_messages:
                              type: boolean
                            id:
                              type: number
                            is_member:
                              type: boolean
                            mentionable:
                              type: boolean
                            name:
                              minLength: 1
                              type: string
                            notification_level:
                              type: object
                            primary_group:
                              type: boolean
                            title:
                              type: object
                            user_count:
                              type: number
                            visible:
                              type: boolean
                          required:
                            - id
                            - automatic
                            - name
                            - user_count
                            - alias_level
                            - visible
                            - automatic_membership_retroactive
                            - primary_group
                            - has_messages
                            - is_member
                            - mentionable
                        minItems: 1
                        type: array
                        uniqueItems: true
                      id:
                        type: number
                      invited_by:
                        type: object
                      last_posted_at:
                        minLength: 1
                        type: string
                      last_seen_at:
                        minLength: 1
                        type: string
                      moderator:
                        type: boolean
                      name:
                        type: object
                      pending_count:
                        type: number
                      primary_group_flair_bg_color:
                        type: object
                      primary_group_flair_color:
                        type: object
                      primary_group_flair_url:
                        type: object
                      primary_group_name:
                        type: object
                      profile_view_count:
                        type: number
                      title:
                        type: object
                      trust_level:
                        type: number
                      uploaded_avatar_id:
                        type: object
                      username:
                        minLength: 1
                        type: string
                      website_name:
                        type: object
                    required:
                      - id
                      - username
                      - avatar_template
                      - last_posted_at
                      - last_seen_at
                      - created_at
                      - can_edit
                      - can_edit_username
                      - can_edit_email
                      - can_edit_name
                      - can_send_private_messages
                      - can_send_private_message_to_user
                      - trust_level
                      - moderator
                      - admin
                      - badge_count
                      - custom_fields
                      - pending_count
                      - profile_view_count
                      - groups
                      - featured_user_badge_ids
                    type: object
                  user_badges:
                    items:
                      type: object
                    type: array
                type: object
          description: get user response
      tags:
        - Users
  /uploads.json:
    post:
      description: Upload a file like an image or an avatar
      requestBody:
        content:
          application/json:
            schema:
              properties:
                file:
                  format: binary
                  type: string
                synchronous:
                  description: use this flag to return an id and url
                  example: true
                  type: boolean
                type:
                  description: a lowercase string with numbers but no spaces. Set to 'avatar' if uploading an avatar
                  enum:
                    - avatar
                    - profile_background
                    - card_background
                    - custom_emoji
                    - composer
                  example: composer
                  type: string
                user_id:
                  description: required if uploading an avatar
                  example: 1
                  type: integer
              required:
                - type
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  created_at:
                    type: string
                  filesize:
                    type: integer
                  height:
                    type: integer
                  id:
                    type: integer
                  origin:
                    nullable: true
                  original_filename:
                    type: string
                  retain_hours:
                    nullable: true
                  sha1:
                    type: string
                  updated_at:
                    type: string
                  url:
                    type: string
                  user_id:
                    type: integer
                  width:
                    type: integer
                type: object
          description: "if async will return '{success: true}'"
      tags:
        - Upload
  "/user-badges/{username}.json":
    get:
      description: get a list of badges assigned to a user
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  badge_types:
                    items: {}
                    type: array
                  badges:
                    items: {}
                    type: array
                  granted_bies:
                    items: {}
                    type: array
                  topics:
                    items: {}
                    type: array
                  user_badges:
                    items: {}
                    type: array
                  users:
                    items: {}
                    type: array
                type: object
          description: list of badges assigned to a user response
      tags:
        - Badges
  /user_actions.json:
    get:
      description: Get a list of user actions
      parameters:
        - in: query
          name: offset
          required: true
          schema:
            type: string
        - in: query
          name: username
          required: true
          schema:
            type: string
        - in: query
          name: filter
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  user_actions:
                    items:
                      properties:
                        acting_avatar_template:
                          type: string
                        acting_name:
                          type: string
                        acting_user_id:
                          type: integer
                        acting_username:
                          type: string
                        action_code:
                          type: object
                        action_type:
                          type: integer
                        archived:
                          type: boolean
                        avatar_template:
                          type: string
                        category_id:
                          type: integer
                        closed:
                          type: boolean
                        created_at:
                          type: string
                        delete:
                          type: boolean
                        exerpt:
                          type: string
                        hidden:
                          type: boolean
                        name:
                          type: string
                        post_id:
                          type: integer
                        slug:
                          type: string
                        target_name:
                          type: string
                        target_user_id:
                          type: string
                        target_username:
                          type: string
                        title:
                          type: string
                        topic_id:
                          type: integer
                        user_id:
                          type: integer
                        username:
                          type: string
                      type: object
                    type: array
                type: object
          description: list of user actions response
      tags:
        - Users
  "/user_avatar/{username}/refresh_gravatar.json":
    post:
      description: Refresh a users gravatar
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  gravatar_avatar_template:
                    type: string
                  gravatar_upload_id:
                    type: integer
                type: object
          description: Refresh a users gravatar response
      tags:
        - Users
  /user_badges.json:
    post:
      description: assign a badge to a user
      requestBody:
        content:
          application/json:
            schema:
              properties:
                badge_id:
                  type: integer
                reason:
                  type: string
                username:
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  badge_types:
                    items: {}
                    type: array
                  badges:
                    items: {}
                    type: array
                  granted_bies:
                    items: {}
                    type: array
                  topics:
                    items: {}
                    type: array
                  user_badges:
                    items: {}
                    type: array
                  users:
                    items: {}
                    type: array
                type: object
          description: assign a badge to a user response
      tags:
        - Badges
  "/user_badges/{id}":
    delete:
      description: revoke a badge assigned to a user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    example: OK
                    type: string
                type: object
          description: revoke a badge response
      tags:
        - Badges
  /users:
    post:
      description: Creates a new user
      requestBody:
        content:
          application/json:
            schema:
              properties:
                active:
                  type: boolean
                approved:
                  type: boolean
                email:
                  type: string
                name:
                  type: string
                password:
                  type: string
                "user_fields[1]":
                  type: string
                username:
                  type: string
              required:
                - name
                - email
                - password
                - username
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  active:
                    type: boolean
                  message:
                    minLength: 1
                    type: string
                  success:
                    type: boolean
                  user_id:
                    type: number
                type: object
          description: new user response
      tags:
        - Users
  "/users/password-reset/{token}":
    put:
      description: Create a new password
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                password:
                  type: string
                username:
                  type: string
              required:
                - username
                - password
              type: object
      responses:
        "200":
          description: password has been reset response
      tags:
        - Password Reset
  "/users/{username}.json":
    get:
      description: Get a single user by username
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                properties:
                  user:
                    properties:
                      admin:
                        type: boolean
                      avatar_template:
                        minLength: 1
                        type: string
                      badge_count:
                        type: number
                      can_edit:
                        type: boolean
                      can_edit_email:
                        type: boolean
                      can_edit_name:
                        type: boolean
                      can_edit_username:
                        type: boolean
                      can_send_private_message_to_user:
                        type: boolean
                      can_send_private_messages:
                        type: boolean
                      card_badge:
                        type: object
                      created_at:
                        minLength: 1
                        type: string
                      custom_fields:
                        type: object
                      featured_user_badge_ids:
                        items:
                          type: object
                        type: array
                      groups:
                        items:
                          properties:
                            alias_level:
                              type: number
                            automatic:
                              type: boolean
                            automatic_membership_email_domains:
                              type: object
                            automatic_membership_retroactive:
                              type: boolean
                            flair_bg_color:
                              type: object
                            flair_color:
                              type: object
                            flair_url:
                              type: object
                            grant_trust_level:
                              type: object
                            has_messages:
                              type: boolean
                            id:
                              type: number
                            is_member:
                              type: boolean
                            mentionable:
                              type: boolean
                            name:
                              minLength: 1
                              type: string
                            notification_level:
                              type: object
                            primary_group:
                              type: boolean
                            title:
                              type: object
                            user_count:
                              type: number
                            visible:
                              type: boolean
                          required:
                            - id
                            - automatic
                            - name
                            - user_count
                            - alias_level
                            - visible
                            - automatic_membership_retroactive
                            - primary_group
                            - has_messages
                            - is_member
                            - mentionable
                        minItems: 1
                        type: array
                        uniqueItems: true
                      id:
                        type: number
                      invited_by:
                        type: object
                      last_posted_at:
                        minLength: 1
                        type: string
                      last_seen_at:
                        minLength: 1
                        type: string
                      moderator:
                        type: boolean
                      name:
                        type: object
                      pending_count:
                        type: number
                      primary_group_flair_bg_color:
                        type: object
                      primary_group_flair_color:
                        type: object
                      primary_group_flair_url:
                        type: object
                      primary_group_name:
                        type: object
                      profile_view_count:
                        type: number
                      title:
                        type: object
                      trust_level:
                        type: number
                      uploaded_avatar_id:
                        type: object
                      username:
                        minLength: 1
                        type: string
                      website_name:
                        type: object
                    required:
                      - id
                      - username
                      - avatar_template
                      - last_posted_at
                      - last_seen_at
                      - created_at
                      - can_edit
                      - can_edit_username
                      - can_edit_email
                      - can_edit_name
                      - can_send_private_messages
                      - can_send_private_message_to_user
                      - trust_level
                      - moderator
                      - admin
                      - badge_count
                      - custom_fields
                      - pending_count
                      - profile_view_count
                      - groups
                      - featured_user_badge_ids
                    type: object
                  user_badges:
                    items:
                      type: object
                    type: array
                type: object
          description: get user response
      tags:
        - Users
  "/users/{username}/preferences/avatar/pick":
    put:
      description: Update avatar
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                type:
                  example: uploaded
                  type: string
                upload_id:
                  example: 4
                  type: integer
              required:
                - upload_id
                - type
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    example: OK
                    type: string
                type: object
          description: update avatar response
      tags:
        - Users
  "/users/{username}/preferences/email":
    put:
      description: Update email
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  example: discourse1@example.com
                  type: string
              required:
                - email
              type: object
      responses:
        "200":
          description: update email response
      tags:
        - Users
