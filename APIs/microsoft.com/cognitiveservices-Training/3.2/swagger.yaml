swagger: "2.0"
schemes:
  - https
host: southcentralus.api.cognitive.microsoft.com
basePath: /customvision/v3.2/training
info:
  contact:
    x-twitter: microsoft
  title: Custom Vision Training Client
  version: "3.2"
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://twitter.com/microsoft/profile_image?size=original
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/cognitiveservices/data-plane/CustomVision/Training/stable/v3.2/Training.json
      version: "2.0"
  x-preferred: false
  x-providerName: microsoft.com
  x-serviceName: cognitiveservices-Training
  x-tags:
    - Microsoft
securityDefinitions:
  apim_key:
    in: header
    name: Training-Key
    type: apiKey
security:
  - apim_key: []
parameters:
  Endpoint:
    description: Supported Cognitive Services endpoints.
    in: path
    name: Endpoint
    required: true
    type: string
    x-ms-parameter-location: client
    x-ms-skip-url-encoding: true
paths:
  /domains:
    get:
      consumes: []
      operationId: GetDomains
      parameters: []
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/Domain"
            type: array
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Get a list of the available domains.
      tags:
        - DomainsApi
      x-ms-examples:
        Successful GetDomains request:
          $ref: ./examples/GetDomains.json
  "/domains/{domainId}":
    get:
      consumes: []
      operationId: GetDomain
      parameters:
        - description: The id of the domain to get information about.
          format: uuid
          in: path
          name: domainId
          required: true
          type: string
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Domain"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Get information about a specific domain.
      tags:
        - DomainsApi
      x-ms-examples:
        Successful GetDomain request:
          $ref: ./examples/GetDomain.json
  /projects:
    get:
      consumes: []
      operationId: GetProjects
      parameters: []
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/Project"
            type: array
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Get your projects.
      tags:
        - ProjectApi
      x-ms-examples:
        Successful GetProjects request:
          $ref: ./examples/GetProjects.json
    post:
      consumes: []
      operationId: CreateProject
      parameters:
        - description: Name of the project.
          in: query
          name: name
          required: true
          type: string
        - description: The description of the project.
          in: query
          name: description
          required: false
          type: string
        - description: The id of the domain to use for this project. Defaults to General.
          format: uuid
          in: query
          name: domainId
          required: false
          type: string
        - description: The type of classifier to create for this project.
          enum:
            - Multiclass
            - Multilabel
          in: query
          name: classificationType
          required: false
          type: string
        - collectionFormat: csv
          description: List of platforms the trained model is intending exporting to.
          in: query
          items:
            enum:
              - CoreML
              - TensorFlow
              - DockerFile
              - ONNX
              - VAIDK
            type: string
          name: targetExportPlatforms
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Project"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Create a project.
      tags:
        - ProjectApi
      x-ms-examples:
        Successful CreateProject request:
          $ref: ./examples/CreateProject.json
  /projects/import:
    post:
      consumes: []
      operationId: ImportProject
      parameters:
        - description: Token generated from the export project call.
          in: query
          name: token
          required: true
          type: string
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Project"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Imports a project.
      tags:
        - ProjectApi
      x-ms-examples:
        Successful ImportProject request:
          $ref: ./examples/ImportProject.json
  "/projects/{projectId}":
    delete:
      consumes: []
      operationId: DeleteProject
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
      produces: []
      responses:
        "204":
          description: No Content
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Delete a specific project.
      tags:
        - ProjectApi
      x-ms-examples:
        Successful DeleteProject request:
          $ref: ./examples/DeleteProject.json
    get:
      consumes: []
      operationId: GetProject
      parameters:
        - description: The id of the project to get.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Project"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Get a specific project.
      tags:
        - ProjectApi
      x-ms-examples:
        Successful GetProject request:
          $ref: ./examples/GetProject.json
    patch:
      consumes:
        - application/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      operationId: UpdateProject
      parameters:
        - description: The id of the project to update.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: The updated project model.
          in: body
          name: updatedProject
          required: true
          schema:
            $ref: "#/definitions/Project"
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Project"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Update a specific project.
      tags:
        - ProjectApi
      x-ms-examples:
        Successful UpdateProject request:
          $ref: ./examples/UpdateProject.json
  "/projects/{projectId}/export":
    get:
      consumes: []
      operationId: ExportProject
      parameters:
        - description: The project id of the project to export.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ProjectExport"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Exports a project.
      tags:
        - ProjectApi
      x-ms-examples:
        Successful ExportProject request:
          $ref: ./examples/ExportProject.json
  "/projects/{projectId}/images":
    delete:
      consumes: []
      operationId: DeleteImages
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - collectionFormat: csv
          description: Ids of the images to be deleted. Limited to 256 images per batch.
          in: query
          items:
            format: uuid
            type: string
            x-nullable: false
          maxItems: 256
          minItems: 0
          name: imageIds
          required: false
          type: array
        - description: Flag to specify delete all images, specify this flag or a list of
            images. Using this flag will return a 202 response to indicate the
            images are being deleted.
          in: query
          name: allImages
          required: false
          type: boolean
        - description: Removes these images from all iterations, not just the current
            workspace. Using this flag will return a 202 response to indicate
            the images are being deleted.
          in: query
          name: allIterations
          required: false
          type: boolean
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "202":
          description: Accepted
        "204":
          description: No Content
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Delete images from the set of training images.
      tags:
        - ImageApi
      x-ms-examples:
        Successful DeleteImages request:
          $ref: ./examples/DeleteImages.json
    post:
      consumes:
        - multipart/form-data
        - application/octet-stream
      description: "This API accepts body content as multipart/form-data and
        application/octet-stream. When using multipart\r

        multiple image files can be sent at once, with a maximum of 64
        files"
      operationId: CreateImagesFromData
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - collectionFormat: csv
          description: The tags ids with which to tag each image. Limited to 20.
          in: query
          items:
            format: uuid
            type: string
            x-nullable: false
          maxItems: 20
          minItems: 0
          name: tagIds
          required: false
          type: array
        - description: Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports images up to 6MB.
          in: formData
          name: imageData
          required: true
          type: file
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ImageCreateSummary"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Add the provided images to the set of training images.
      tags:
        - ImageApi
      x-ms-examples:
        Successful CreateImagesFromData request:
          $ref: ./examples/CreateImagesFromData.json
  "/projects/{projectId}/images/files":
    post:
      consumes:
        - application/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      description: This API accepts a batch of files, and optionally tags, to create
        images. There is a limit of 64 images and 20 tags.
      operationId: CreateImagesFromFiles
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: The batch of image files to add. Limited to 64 images and 20 tags
            per batch.
          in: body
          name: batch
          required: true
          schema:
            $ref: "#/definitions/ImageFileCreateBatch"
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ImageCreateSummary"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Add the provided batch of images to the set of training images.
      tags:
        - ImageApi
      x-ms-examples:
        Successful CreateImagesFromFiles request:
          $ref: ./examples/CreateImagesFromFiles.json
  "/projects/{projectId}/images/id":
    get:
      consumes: []
      description: "This API will return a set of Images for the specified tags and
        optionally iteration. If no iteration is specified the\r

        current workspace is used."
      operationId: GetImagesByIds
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - collectionFormat: csv
          description: The list of image ids to retrieve. Limited to 256.
          in: query
          items:
            format: uuid
            type: string
            x-nullable: false
          maxItems: 256
          minItems: 0
          name: imageIds
          required: false
          type: array
        - description: The iteration id. Defaults to workspace.
          format: uuid
          in: query
          name: iterationId
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/Image"
            type: array
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Get images by id for a given project iteration.
      tags:
        - ImageApi
      x-ms-examples:
        Successful GetImagesByIds request:
          $ref: ./examples/GetImagesByIds.json
  "/projects/{projectId}/images/predictions":
    post:
      consumes:
        - application/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      description: This API creates a batch of images from predicted images specified.
        There is a limit of 64 images and 20 tags.
      operationId: CreateImagesFromPredictions
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: Image and tag ids. Limited to 64 images and 20 tags per batch.
          in: body
          name: batch
          required: true
          schema:
            $ref: "#/definitions/ImageIdCreateBatch"
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ImageCreateSummary"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Add the specified predicted images to the set of training images.
      tags:
        - ImageApi
      x-ms-examples:
        Successful CreateImagesFromPredictions request:
          $ref: ./examples/CreateImagesFromPredictions.json
  "/projects/{projectId}/images/regions":
    delete:
      consumes: []
      operationId: DeleteImageRegions
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - collectionFormat: csv
          description: Regions to delete. Limited to 64.
          in: query
          items:
            format: uuid
            type: string
            x-nullable: false
          maxItems: 64
          minItems: 0
          name: regionIds
          required: true
          type: array
      produces: []
      responses:
        "204":
          description: No Content
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Delete a set of image regions.
      tags:
        - ImageApi
      x-ms-examples:
        Successful DeleteImageRegions request:
          $ref: ./examples/DeleteImageRegions.json
    post:
      consumes:
        - application/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      description: "This API accepts a batch of image regions, and optionally tags, to
        update existing images with region information.\r

        There is a limit of 64 entries in the batch."
      operationId: CreateImageRegions
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: Batch of image regions which include a tag and bounding box.
            Limited to 64.
          in: body
          name: batch
          required: true
          schema:
            $ref: "#/definitions/ImageRegionCreateBatch"
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ImageRegionCreateSummary"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Create a set of image regions.
      tags:
        - ImageApi
      x-ms-examples:
        Successful CreateImageRegions request:
          $ref: ./examples/CreateImageRegions.json
  "/projects/{projectId}/images/suggested":
    post:
      consumes:
        - application/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      description: This API will fetch untagged images filtered by suggested tags Ids.
        It returns an empty array if no images are found.
      operationId: QuerySuggestedImages
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: IterationId to use for the suggested tags and regions.
          format: uuid
          in: query
          name: iterationId
          required: true
          type: string
          x-nullable: false
        - description: Contains properties we need to query suggested images.
          in: body
          name: query
          required: true
          schema:
            $ref: "#/definitions/SuggestedTagAndRegionQueryToken"
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SuggestedTagAndRegionQuery"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Get untagged images whose suggested tags match given tags. Returns
        empty array if no images are found.
      tags:
        - ImageApi
      x-ms-examples:
        Successful QuerySuggestedImages request:
          $ref: ./examples/QuerySuggestedImages.json
  "/projects/{projectId}/images/suggested/count":
    post:
      consumes:
        - application/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      description: This API takes in tagIds to get count of untagged images per
        suggested tags for a given threshold.
      operationId: QuerySuggestedImageCount
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: IterationId to use for the suggested tags and regions.
          format: uuid
          in: query
          name: iterationId
          required: true
          type: string
          x-nullable: false
        - description: Model that contains tagIds, threshold and projectType to query by.
          in: body
          name: query
          required: true
          schema:
            $ref: "#/definitions/TagFilter"
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              format: int32
              type: integer
            type: object
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Get count of images whose suggested tags match given tags and their
        probabilities are greater than or equal to the given threshold. Returns
        count as 0 if none found.
      tags:
        - ImageApi
      x-ms-examples:
        Successful QuerySuggestedImageCount request:
          $ref: ./examples/QuerySuggestedImageCount.json
  "/projects/{projectId}/images/tagged":
    get:
      consumes: []
      description: "This API supports batching and range selection. By default it will
        only return first 50 images matching images.\r

        Use the {take} and {skip} parameters to control how many images
        to return in a given batch.\r

        The filtering is on an and/or relationship. For example, if the
        provided tag ids are for the \"Dog\" and\r

        \"Cat\" tags, then only images tagged with Dog and/or Cat will
        be returned"
      operationId: GetTaggedImages
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace.
          format: uuid
          in: query
          name: iterationId
          required: false
          type: string
        - collectionFormat: csv
          description: A list of tags ids to filter the images. Defaults to all tagged
            images when null. Limited to 20.
          in: query
          items:
            format: uuid
            type: string
            x-nullable: false
          maxItems: 20
          minItems: 0
          name: tagIds
          required: false
          type: array
        - description: The ordering. Defaults to newest.
          enum:
            - Newest
            - Oldest
          in: query
          name: orderBy
          required: false
          type: string
        - default: 50
          description: Maximum number of images to return. Defaults to 50, limited to 256.
          format: int32
          in: query
          maximum: 256
          minimum: 0
          name: take
          required: false
          type: integer
        - default: 0
          description: Number of images to skip before beginning the image batch. Defaults
            to 0.
          format: int32
          in: query
          name: skip
          required: false
          type: integer
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/Image"
            type: array
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Get tagged images for a given project iteration.
      tags:
        - ImageApi
      x-ms-examples:
        Successful GetTaggedImages request:
          $ref: ./examples/GetTaggedImages.json
  "/projects/{projectId}/images/tagged/count":
    get:
      consumes: []
      description: "The filtering is on an and/or relationship. For example, if the
        provided tag ids are for the \"Dog\" and\r

        \"Cat\" tags, then only images tagged with Dog and/or Cat will
        be returned"
      operationId: GetTaggedImageCount
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace.
          format: uuid
          in: query
          name: iterationId
          required: false
          type: string
        - collectionFormat: csv
          description: A list of tags ids to filter the images to count. Defaults to all
            tags when null.
          in: query
          items:
            format: uuid
            type: string
            x-nullable: false
          name: tagIds
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            format: int32
            type: integer
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Gets the number of images tagged with the provided {tagIds}.
      tags:
        - ImageApi
      x-ms-examples:
        Successful GetTaggedImageCount request:
          $ref: ./examples/GetTaggedImageCount.json
  "/projects/{projectId}/images/tags":
    delete:
      consumes: []
      operationId: DeleteImageTags
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - collectionFormat: csv
          description: Image ids. Limited to 64 images.
          in: query
          items:
            format: uuid
            type: string
            x-nullable: false
          maxItems: 64
          minItems: 0
          name: imageIds
          required: true
          type: array
        - collectionFormat: csv
          description: Tags to be deleted from the specified images. Limited to 20 tags.
          in: query
          items:
            format: uuid
            type: string
            x-nullable: false
          maxItems: 20
          minItems: 0
          name: tagIds
          required: true
          type: array
      produces: []
      responses:
        "204":
          description: No Content
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Remove a set of tags from a set of images.
      tags:
        - ImageApi
      x-ms-examples:
        Successful DeleteImageTags request:
          $ref: ./examples/DeleteImageTags.json
    post:
      consumes:
        - application/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      operationId: CreateImageTags
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: Batch of image tags. Limited to 128 tags per batch.
          in: body
          name: batch
          required: true
          schema:
            $ref: "#/definitions/ImageTagCreateBatch"
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ImageTagCreateSummary"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Associate a set of images with a set of tags.
      tags:
        - ImageApi
      x-ms-examples:
        Successful CreateImageTags request:
          $ref: ./examples/CreateImageTags.json
  "/projects/{projectId}/images/untagged":
    get:
      consumes: []
      description: "This API supports batching and range selection. By default it will
        only return first 50 images matching images.\r

        Use the {take} and {skip} parameters to control how many images
        to return in a given batch."
      operationId: GetUntaggedImages
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace.
          format: uuid
          in: query
          name: iterationId
          required: false
          type: string
        - description: The ordering. Defaults to newest.
          enum:
            - Newest
            - Oldest
          in: query
          name: orderBy
          required: false
          type: string
        - default: 50
          description: Maximum number of images to return. Defaults to 50, limited to 256.
          format: int32
          in: query
          maximum: 256
          minimum: 0
          name: take
          required: false
          type: integer
        - default: 0
          description: Number of images to skip before beginning the image batch. Defaults
            to 0.
          format: int32
          in: query
          name: skip
          required: false
          type: integer
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/Image"
            type: array
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Get untagged images for a given project iteration.
      tags:
        - ImageApi
      x-ms-examples:
        Successful GetUntaggedImages request:
          $ref: ./examples/GetUntaggedImages.json
  "/projects/{projectId}/images/untagged/count":
    get:
      consumes: []
      description: "This API returns the images which have no tags for a given project
        and optionally an iteration. If no iteration is specified the\r

        current workspace is used."
      operationId: GetUntaggedImageCount
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace.
          format: uuid
          in: query
          name: iterationId
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            format: int32
            type: integer
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Gets the number of untagged images.
      tags:
        - ImageApi
      x-ms-examples:
        Successful GetUntaggedImageCount request:
          $ref: ./examples/GetUntaggedImageCount.json
  "/projects/{projectId}/images/urls":
    post:
      consumes:
        - application/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      description: This API accepts a batch of urls, and optionally tags, to create
        images. There is a limit of 64 images and 20 tags.
      operationId: CreateImagesFromUrls
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: Image urls and tag ids. Limited to 64 images and 20 tags per batch.
          in: body
          name: batch
          required: true
          schema:
            $ref: "#/definitions/ImageUrlCreateBatch"
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ImageCreateSummary"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Add the provided images urls to the set of training images.
      tags:
        - ImageApi
      x-ms-examples:
        Successful CreateImagesFromUrls request:
          $ref: ./examples/CreateImagesFromUrls.json
  "/projects/{projectId}/images/{imageId}/regionproposals":
    post:
      consumes: []
      description: This API will get region proposals for an image along with
        confidences for the region. It returns an empty array if no proposals
        are found.
      operationId: GetImageRegionProposals
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: The image id.
          format: uuid
          in: path
          name: imageId
          required: true
          type: string
          x-nullable: false
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ImageRegionProposal"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Get region proposals for an image. Returns empty array if no proposals
        are found.
      tags:
        - ImageRegionProposalApi
      x-ms-examples:
        Successful GetImageRegionProposals request:
          $ref: ./examples/GetImageRegionProposals.json
  "/projects/{projectId}/iterations":
    get:
      consumes: []
      operationId: GetIterations
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/Iteration"
            type: array
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Get iterations for the project.
      tags:
        - ProjectApi
      x-ms-examples:
        Successful GetIterations request:
          $ref: ./examples/GetIterations.json
  "/projects/{projectId}/iterations/{iterationId}":
    delete:
      consumes: []
      operationId: DeleteIteration
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: The iteration id.
          format: uuid
          in: path
          name: iterationId
          required: true
          type: string
          x-nullable: false
      produces: []
      responses:
        "204":
          description: No Content
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Delete a specific iteration of a project.
      tags:
        - ProjectApi
      x-ms-examples:
        Successful DeleteIteration request:
          $ref: ./examples/DeleteIteration.json
    get:
      consumes: []
      operationId: GetIteration
      parameters:
        - description: The id of the project the iteration belongs to.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: The id of the iteration to get.
          format: uuid
          in: path
          name: iterationId
          required: true
          type: string
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Iteration"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Get a specific iteration.
      tags:
        - ProjectApi
      x-ms-examples:
        Successful GetIteration request:
          $ref: ./examples/GetIteration.json
    patch:
      consumes:
        - application/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      operationId: UpdateIteration
      parameters:
        - description: Project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: Iteration id.
          format: uuid
          in: path
          name: iterationId
          required: true
          type: string
          x-nullable: false
        - description: The updated iteration model.
          in: body
          name: updatedIteration
          required: true
          schema:
            $ref: "#/definitions/Iteration"
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Iteration"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Update a specific iteration.
      tags:
        - ProjectApi
      x-ms-examples:
        Successful UpdateIteration request:
          $ref: ./examples/UpdateIteration.json
  "/projects/{projectId}/iterations/{iterationId}/export":
    get:
      consumes: []
      operationId: GetExports
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: The iteration id.
          format: uuid
          in: path
          name: iterationId
          required: true
          type: string
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/Export"
            type: array
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Get the list of exports for a specific iteration.
      tags:
        - ProjectApi
      x-ms-examples:
        Successful GetExports request:
          $ref: ./examples/GetExports.json
    post:
      consumes: []
      operationId: ExportIteration
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: The iteration id.
          format: uuid
          in: path
          name: iterationId
          required: true
          type: string
          x-nullable: false
        - description: The target platform.
          enum:
            - CoreML
            - TensorFlow
            - DockerFile
            - ONNX
            - VAIDK
          in: query
          name: platform
          required: true
          type: string
        - description: The flavor of the target platform.
          enum:
            - Linux
            - Windows
            - ONNX10
            - ONNX12
            - ARM
            - TensorFlowNormal
            - TensorFlowLite
          in: query
          name: flavor
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Export"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Export a trained iteration.
      tags:
        - ProjectApi
      x-ms-examples:
        Successful ExportIteration request:
          $ref: ./examples/ExportIteration.json
  "/projects/{projectId}/iterations/{iterationId}/performance":
    get:
      consumes: []
      operationId: GetIterationPerformance
      parameters:
        - description: The id of the project the iteration belongs to.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: The id of the iteration to get.
          format: uuid
          in: path
          name: iterationId
          required: true
          type: string
          x-nullable: false
        - description: The threshold used to determine true predictions.
          format: float
          in: query
          name: threshold
          required: false
          type: number
        - description: If applicable, the bounding box overlap threshold used to determine
            true predictions.
          format: float
          in: query
          name: overlapThreshold
          required: false
          type: number
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/IterationPerformance"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Get detailed performance information about an iteration.
      tags:
        - ProjectApi
      x-ms-examples:
        Successful GetIterationPerformance request:
          $ref: ./examples/GetIterationPerformance.json
  "/projects/{projectId}/iterations/{iterationId}/performance/images":
    get:
      consumes: []
      description: "This API supports batching and range selection. By default it will
        only return first 50 images matching images.\r

        Use the {take} and {skip} parameters to control how many images
        to return in a given batch.\r

        The filtering is on an and/or relationship. For example, if the
        provided tag ids are for the \"Dog\" and\r

        \"Cat\" tags, then only images tagged with Dog and/or Cat will
        be returned"
      operationId: GetImagePerformances
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace.
          format: uuid
          in: path
          name: iterationId
          required: true
          type: string
          x-nullable: false
        - collectionFormat: csv
          description: A list of tags ids to filter the images. Defaults to all tagged
            images when null. Limited to 20.
          in: query
          items:
            format: uuid
            type: string
            x-nullable: false
          maxItems: 20
          minItems: 0
          name: tagIds
          required: false
          type: array
        - description: The ordering. Defaults to newest.
          enum:
            - Newest
            - Oldest
          in: query
          name: orderBy
          required: false
          type: string
        - default: 50
          description: Maximum number of images to return. Defaults to 50, limited to 256.
          format: int32
          in: query
          maximum: 256
          minimum: 0
          name: take
          required: false
          type: integer
        - default: 0
          description: Number of images to skip before beginning the image batch. Defaults
            to 0.
          format: int32
          in: query
          name: skip
          required: false
          type: integer
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/ImagePerformance"
            type: array
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Get image with its prediction for a given project iteration.
      tags:
        - ProjectApi
      x-ms-examples:
        Successful GetImagePerformances request:
          $ref: ./examples/GetImagePerformances.json
  "/projects/{projectId}/iterations/{iterationId}/performance/images/count":
    get:
      consumes: []
      description: "The filtering is on an and/or relationship. For example, if the
        provided tag ids are for the \"Dog\" and\r

        \"Cat\" tags, then only images tagged with Dog and/or Cat will
        be returned"
      operationId: GetImagePerformanceCount
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace.
          format: uuid
          in: path
          name: iterationId
          required: true
          type: string
          x-nullable: false
        - collectionFormat: csv
          description: A list of tags ids to filter the images to count. Defaults to all
            tags when null.
          in: query
          items:
            format: uuid
            type: string
            x-nullable: false
          name: tagIds
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            format: int32
            type: integer
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: "Gets the number of images tagged with the provided {tagIds} that have
        prediction results from\r

        training for the provided iteration {iterationId}."
      tags:
        - ProjectApi
      x-ms-examples:
        Successful GetImagePerformanceCount request:
          $ref: ./examples/GetImagePerformanceCount.json
  "/projects/{projectId}/iterations/{iterationId}/publish":
    delete:
      consumes: []
      operationId: UnpublishIteration
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: The iteration id.
          format: uuid
          in: path
          name: iterationId
          required: true
          type: string
          x-nullable: false
      produces: []
      responses:
        "204":
          description: No Content
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Unpublish a specific iteration.
      tags:
        - ProjectApi
      x-ms-examples:
        Successful UnpublishIteration request:
          $ref: ./examples/UnpublishIteration.json
    post:
      consumes: []
      operationId: PublishIteration
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: The iteration id.
          format: uuid
          in: path
          name: iterationId
          required: true
          type: string
          x-nullable: false
        - description: The name to give the published iteration.
          in: query
          name: publishName
          required: true
          type: string
        - description: The id of the prediction resource to publish to.
          in: query
          name: predictionId
          required: true
          type: string
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Publish a specific iteration.
      tags:
        - ProjectApi
      x-ms-examples:
        Successful PublishIteration request:
          $ref: ./examples/PublishIteration.json
  "/projects/{projectId}/predictions":
    delete:
      consumes: []
      operationId: DeletePrediction
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - collectionFormat: csv
          description: The prediction ids. Limited to 64.
          in: query
          items:
            format: uuid
            type: string
            x-nullable: false
          maxItems: 64
          minItems: 0
          name: ids
          required: true
          type: array
      produces: []
      responses:
        "204":
          description: No Content
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Delete a set of predicted images and their associated prediction results.
      tags:
        - PredictionsApi
      x-ms-examples:
        Successful DeletePrediction request:
          $ref: ./examples/DeletePrediction.json
  "/projects/{projectId}/predictions/query":
    post:
      consumes:
        - application/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      operationId: QueryPredictions
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: Parameters used to query the predictions. Limited to combining 2
            tags.
          in: body
          name: query
          required: true
          schema:
            $ref: "#/definitions/PredictionQueryToken"
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/PredictionQueryResult"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Get images that were sent to your prediction endpoint.
      tags:
        - PredictionsApi
      x-ms-examples:
        Successful QueryPredictions request:
          $ref: ./examples/QueryPredictions.json
  "/projects/{projectId}/quicktest/image":
    post:
      consumes:
        - multipart/form-data
        - application/octet-stream
      operationId: QuickTestImage
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: "Optional. Specifies the id of a particular iteration to evaluate
            against.\r

            \            The default iteration for the project will
            be used when not specified."
          format: uuid
          in: query
          name: iterationId
          required: false
          type: string
        - default: true
          description: Optional. Specifies whether or not to store the result of this
            prediction. The default is true, to store.
          in: query
          name: store
          required: false
          type: boolean
        - description: Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports images up to 6MB.
          in: formData
          name: imageData
          required: true
          type: file
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ImagePrediction"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Quick test an image.
      tags:
        - PredictionsApi
      x-ms-examples:
        Successful QuickTestImage request:
          $ref: ./examples/QuickTestImage.json
  "/projects/{projectId}/quicktest/url":
    post:
      consumes:
        - application/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      operationId: QuickTestImageUrl
      parameters:
        - description: The project to evaluate against.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: An ImageUrl that contains the url of the image to be evaluated.
          in: body
          name: imageUrl
          required: true
          schema:
            $ref: "#/definitions/ImageUrl"
        - description: "Optional. Specifies the id of a particular iteration to evaluate
            against.\r

            \            The default iteration for the project will
            be used when not specified."
          format: uuid
          in: query
          name: iterationId
          required: false
          type: string
        - default: true
          description: Optional. Specifies whether or not to store the result of this
            prediction. The default is true, to store.
          in: query
          name: store
          required: false
          type: boolean
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ImagePrediction"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Quick test an image url.
      tags:
        - PredictionsApi
      x-ms-examples:
        Successful QuickTestImageUrl request:
          $ref: ./examples/QuickTestImageUrl.json
  "/projects/{projectId}/tags":
    get:
      consumes: []
      operationId: GetTags
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace.
          format: uuid
          in: query
          name: iterationId
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/Tag"
            type: array
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Get the tags for a given project and iteration.
      tags:
        - TagsApi
      x-ms-examples:
        Successful GetTags request:
          $ref: ./examples/GetTags.json
    post:
      consumes: []
      operationId: CreateTag
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: The tag name.
          in: query
          name: name
          required: true
          type: string
        - description: Optional description for the tag.
          in: query
          name: description
          required: false
          type: string
        - description: Optional type for the tag.
          enum:
            - Regular
            - Negative
          in: query
          name: type
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Tag"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Create a tag for the project.
      tags:
        - TagsApi
      x-ms-examples:
        Successful CreateTag request:
          $ref: ./examples/CreateTag.json
  "/projects/{projectId}/tags/{tagId}":
    delete:
      consumes: []
      operationId: DeleteTag
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: Id of the tag to be deleted.
          format: uuid
          in: path
          name: tagId
          required: true
          type: string
          x-nullable: false
      produces: []
      responses:
        "204":
          description: No Content
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Delete a tag from the project.
      tags:
        - TagsApi
      x-ms-examples:
        Successful DeleteTag request:
          $ref: ./examples/DeleteTag.json
    get:
      consumes: []
      operationId: GetTag
      parameters:
        - description: The project this tag belongs to.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: The tag id.
          format: uuid
          in: path
          name: tagId
          required: true
          type: string
          x-nullable: false
        - description: The iteration to retrieve this tag from. Optional, defaults to
            current training set.
          format: uuid
          in: query
          name: iterationId
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Tag"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Get information about a specific tag.
      tags:
        - TagsApi
      x-ms-examples:
        Successful GetTag request:
          $ref: ./examples/GetTag.json
    patch:
      consumes:
        - application/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      operationId: UpdateTag
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: The id of the target tag.
          format: uuid
          in: path
          name: tagId
          required: true
          type: string
          x-nullable: false
        - description: The updated tag model.
          in: body
          name: updatedTag
          required: true
          schema:
            $ref: "#/definitions/Tag"
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Tag"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Update a tag.
      tags:
        - TagsApi
      x-ms-examples:
        Successful UpdateTag request:
          $ref: ./examples/UpdateTag.json
  "/projects/{projectId}/tagsandregions/suggestions":
    post:
      consumes: []
      description: "This API will get suggested tags and regions for an array/batch of
        untagged images along with confidences for the tags. It returns an empty
        array if no tags are found.\r

        There is a limit of 64 images in the batch."
      operationId: SuggestTagsAndRegions
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: IterationId to use for tag and region suggestion.
          format: uuid
          in: query
          name: iterationId
          required: true
          type: string
          x-nullable: false
        - collectionFormat: csv
          description: Array of image ids tag suggestion are needed for. Use
            GetUntaggedImages API to get imageIds.
          in: query
          items:
            format: uuid
            type: string
            x-nullable: false
          maxItems: 64
          minItems: 0
          name: imageIds
          required: true
          type: array
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/SuggestedTagAndRegion"
            type: array
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Suggest tags and regions for an array/batch of untagged images. Returns
        empty array if no tags are found.
      tags:
        - SuggestTagsAndRegionsApi
      x-ms-examples:
        Successful SuggestTagsAndRegions request:
          $ref: ./examples/SuggestTagsAndRegions.json
  "/projects/{projectId}/train":
    post:
      consumes:
        - application/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      operationId: TrainProject
      parameters:
        - description: The project id.
          format: uuid
          in: path
          name: projectId
          required: true
          type: string
          x-nullable: false
        - description: "The type of training to use to train the project (default:
            Regular)."
          enum:
            - Regular
            - Advanced
          in: query
          name: trainingType
          required: false
          type: string
        - default: 0
          description: The number of hours reserved as budget for training (if applicable).
          format: int32
          in: query
          name: reservedBudgetInHours
          required: false
          type: integer
        - default: false
          description: "Whether to force train even if dataset and configuration does not
            change (default: false)."
          in: query
          name: forceTrain
          required: false
          type: boolean
        - description: "The email address to send notification to when training finishes
            (default: null)."
          in: query
          name: notificationEmailAddress
          required: false
          type: string
        - description: Additional training parameters passed in to control how the project
            is trained.
          in: body
          name: trainingParameters
          required: false
          schema:
            $ref: "#/definitions/TrainingParameters"
          x-nullable: true
      produces:
        - application/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Iteration"
        default:
          description: Error response
          schema:
            $ref: "#/definitions/CustomVisionError"
      summary: Queues project for training.
      tags:
        - ProjectApi
      x-ms-examples:
        Successful TrainProject request:
          $ref: ./examples/TrainProject.json
definitions:
  BoundingBox:
    description: Bounding box that defines a region of an image.
    properties:
      height:
        description: Height.
        format: float
        readOnly: false
        type: number
        x-nullable: false
      left:
        description: Coordinate of the left boundary.
        format: float
        readOnly: false
        type: number
        x-nullable: false
      top:
        description: Coordinate of the top boundary.
        format: float
        readOnly: false
        type: number
        x-nullable: false
      width:
        description: Width.
        format: float
        readOnly: false
        type: number
        x-nullable: false
    required:
      - left
      - top
      - width
      - height
    type: object
  CustomVisionError:
    properties:
      code:
        description: The error code.
        enum:
          - NoError
          - BadRequest
          - BadRequestExceededBatchSize
          - BadRequestNotSupported
          - BadRequestInvalidIds
          - BadRequestProjectName
          - BadRequestProjectNameNotUnique
          - BadRequestProjectDescription
          - BadRequestProjectUnknownDomain
          - BadRequestProjectUnknownClassification
          - BadRequestProjectUnsupportedDomainTypeChange
          - BadRequestProjectUnsupportedExportPlatform
          - BadRequestProjectImagePreprocessingSettings
          - BadRequestProjectDuplicated
          - BadRequestIterationName
          - BadRequestIterationNameNotUnique
          - BadRequestIterationDescription
          - BadRequestIterationIsNotTrained
          - BadRequestIterationValidationFailed
          - BadRequestWorkspaceCannotBeModified
          - BadRequestWorkspaceNotDeletable
          - BadRequestTagName
          - BadRequestTagNameNotUnique
          - BadRequestTagDescription
          - BadRequestTagType
          - BadRequestMultipleNegativeTag
          - BadRequestImageTags
          - BadRequestImageRegions
          - BadRequestNegativeAndRegularTagOnSameImage
          - BadRequestRequiredParamIsNull
          - BadRequestIterationIsPublished
          - BadRequestInvalidPublishName
          - BadRequestInvalidPublishTarget
          - BadRequestUnpublishFailed
          - BadRequestIterationNotPublished
          - BadRequestSubscriptionApi
          - BadRequestExceedProjectLimit
          - BadRequestExceedIterationPerProjectLimit
          - BadRequestExceedTagPerProjectLimit
          - BadRequestExceedTagPerImageLimit
          - BadRequestExceededQuota
          - BadRequestCannotMigrateProjectWithName
          - BadRequestNotLimitedTrial
          - BadRequestImageBatch
          - BadRequestImageStream
          - BadRequestImageUrl
          - BadRequestImageFormat
          - BadRequestImageSizeBytes
          - BadRequestImageExceededCount
          - BadRequestTrainingNotNeeded
          - BadRequestTrainingNotNeededButTrainingPipelineUpdated
          - BadRequestTrainingValidationFailed
          - BadRequestClassificationTrainingValidationFailed
          - BadRequestMultiClassClassificationTrainingValidationFailed
          - BadRequestMultiLabelClassificationTrainingValidationFailed
          - BadRequestDetectionTrainingValidationFailed
          - BadRequestTrainingAlreadyInProgress
          - BadRequestDetectionTrainingNotAllowNegativeTag
          - BadRequestInvalidEmailAddress
          - BadRequestDomainNotSupportedForAdvancedTraining
          - BadRequestExportPlatformNotSupportedForAdvancedTraining
          - BadRequestReservedBudgetInHoursNotEnoughForAdvancedTraining
          - BadRequestExportValidationFailed
          - BadRequestExportAlreadyInProgress
          - BadRequestPredictionIdsMissing
          - BadRequestPredictionIdsExceededCount
          - BadRequestPredictionTagsExceededCount
          - BadRequestPredictionResultsExceededCount
          - BadRequestPredictionInvalidApplicationName
          - BadRequestPredictionInvalidQueryParameters
          - BadRequestInvalidImportToken
          - BadRequestExportWhileTraining
          - BadRequestInvalid
          - UnsupportedMediaType
          - Forbidden
          - ForbiddenUser
          - ForbiddenUserResource
          - ForbiddenUserSignupDisabled
          - ForbiddenUserSignupAllowanceExceeded
          - ForbiddenUserDoesNotExist
          - ForbiddenUserDisabled
          - ForbiddenUserInsufficientCapability
          - ForbiddenDRModeEnabled
          - ForbiddenInvalid
          - NotFound
          - NotFoundProject
          - NotFoundProjectDefaultIteration
          - NotFoundIteration
          - NotFoundIterationPerformance
          - NotFoundTag
          - NotFoundImage
          - NotFoundDomain
          - NotFoundApimSubscription
          - NotFoundInvalid
          - Conflict
          - ConflictInvalid
          - ErrorUnknown
          - ErrorIterationCopyFailed
          - ErrorPreparePerformanceMigrationFailed
          - ErrorProjectInvalidWorkspace
          - ErrorProjectInvalidPipelineConfiguration
          - ErrorProjectInvalidDomain
          - ErrorProjectTrainingRequestFailed
          - ErrorProjectImportRequestFailed
          - ErrorProjectExportRequestFailed
          - ErrorFeaturizationServiceUnavailable
          - ErrorFeaturizationQueueTimeout
          - ErrorFeaturizationInvalidFeaturizer
          - ErrorFeaturizationAugmentationUnavailable
          - ErrorFeaturizationUnrecognizedJob
          - ErrorFeaturizationAugmentationError
          - ErrorExporterInvalidPlatform
          - ErrorExporterInvalidFeaturizer
          - ErrorExporterInvalidClassifier
          - ErrorPredictionServiceUnavailable
          - ErrorPredictionModelNotFound
          - ErrorPredictionModelNotCached
          - ErrorPrediction
          - ErrorPredictionStorage
          - ErrorRegionProposal
          - ErrorInvalid
        type: string
        x-ms-enum:
          modelAsString: true
          name: CustomVisionErrorCodes
      message:
        description: A message explaining the error reported by the service.
        type: string
    required:
      - code
      - message
    type: object
  Domain:
    properties:
      enabled:
        readOnly: true
        type: boolean
        x-nullable: false
      exportable:
        readOnly: true
        type: boolean
        x-nullable: false
      id:
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      name:
        readOnly: true
        type: string
        x-nullable: false
      type:
        enum:
          - Classification
          - ObjectDetection
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: true
          name: DomainType
        x-nullable: false
    type: object
  Export:
    properties:
      downloadUri:
        description: URI used to download the model.
        readOnly: true
        type: string
      flavor:
        description: "Flavor of the export. These are specializations of the export
          platform.\r

          Docker platform has valid flavors: Linux, Windows, ARM.\r

          Tensorflow platform has valid flavors: TensorFlowNormal,
          TensorFlowLite.\r

          ONNX platform has valid flavors: ONNX10, ONNX12."
        enum:
          - Linux
          - Windows
          - ONNX10
          - ONNX12
          - ARM
          - TensorFlowNormal
          - TensorFlowLite
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: true
          name: ExportFlavor
        x-nullable: true
      newerVersionAvailable:
        description: Indicates an updated version of the export package is available and
          should be re-exported for the latest changes.
        readOnly: true
        type: boolean
        x-nullable: false
      platform:
        description: Platform of the export.
        enum:
          - CoreML
          - TensorFlow
          - DockerFile
          - ONNX
          - VAIDK
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: true
          name: ExportPlatform
        x-nullable: false
      status:
        description: Status of the export.
        enum:
          - Exporting
          - Failed
          - Done
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: true
          name: ExportStatus
        x-nullable: false
    type: object
  Image:
    description: Image model to be sent as JSON.
    properties:
      created:
        description: Date the image was created.
        format: date-time
        readOnly: true
        type: string
        x-nullable: false
      height:
        description: Height of the image.
        format: int32
        readOnly: true
        type: integer
        x-nullable: false
      id:
        description: Id of the image.
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      originalImageUri:
        description: The URI to the original uploaded image.
        readOnly: true
        type: string
      regions:
        description: Regions associated with this image.
        items:
          $ref: "#/definitions/ImageRegion"
        readOnly: true
        type: array
        x-nullable: true
      resizedImageUri:
        description: The URI to the (resized) image used for training.
        readOnly: true
        type: string
      tags:
        description: Tags associated with this image.
        items:
          $ref: "#/definitions/ImageTag"
        readOnly: true
        type: array
        x-nullable: true
      thumbnailUri:
        description: The URI to the thumbnail of the original image.
        readOnly: true
        type: string
      width:
        description: Width of the image.
        format: int32
        readOnly: true
        type: integer
        x-nullable: false
    type: object
  ImageCreateResult:
    properties:
      image:
        $ref: "#/definitions/Image"
        description: The image.
        readOnly: true
      sourceUrl:
        description: Source URL of the image.
        readOnly: true
        type: string
        x-nullable: false
      status:
        description: Status of the image creation.
        enum:
          - OK
          - OKDuplicate
          - ErrorSource
          - ErrorImageFormat
          - ErrorImageSize
          - ErrorStorage
          - ErrorLimitExceed
          - ErrorTagLimitExceed
          - ErrorRegionLimitExceed
          - ErrorUnknown
          - ErrorNegativeAndRegularTagOnSameImage
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: true
          name: ImageCreateStatus
        x-nullable: false
    type: object
  ImageCreateSummary:
    properties:
      images:
        description: List of the image creation results.
        items:
          $ref: "#/definitions/ImageCreateResult"
          x-nullable: false
        readOnly: true
        type: array
      isBatchSuccessful:
        description: True if all of the images in the batch were created successfully,
          otherwise false.
        readOnly: true
        type: boolean
        x-nullable: false
    type: object
  ImageFileCreateBatch:
    properties:
      images:
        items:
          $ref: "#/definitions/ImageFileCreateEntry"
          x-nullable: false
        readOnly: false
        type: array
      tagIds:
        items:
          format: uuid
          type: string
          x-nullable: false
        readOnly: false
        type: array
    type: object
  ImageFileCreateEntry:
    properties:
      contents:
        format: byte
        readOnly: false
        type: string
      name:
        readOnly: false
        type: string
        x-nullable: false
      regions:
        items:
          $ref: "#/definitions/Region"
          x-nullable: false
        readOnly: false
        type: array
      tagIds:
        items:
          format: uuid
          type: string
          x-nullable: false
        readOnly: false
        type: array
    type: object
  ImageIdCreateBatch:
    properties:
      images:
        items:
          $ref: "#/definitions/ImageIdCreateEntry"
          x-nullable: false
        readOnly: false
        type: array
      tagIds:
        items:
          format: uuid
          type: string
          x-nullable: false
        readOnly: false
        type: array
    type: object
  ImageIdCreateEntry:
    properties:
      id:
        description: Id of the image.
        format: uuid
        readOnly: false
        type: string
        x-nullable: false
      regions:
        items:
          $ref: "#/definitions/Region"
          x-nullable: false
        readOnly: false
        type: array
      tagIds:
        items:
          format: uuid
          type: string
          x-nullable: false
        readOnly: false
        type: array
    type: object
  ImagePerformance:
    description: Image performance model.
    properties:
      created:
        format: date-time
        readOnly: true
        type: string
        x-nullable: false
      height:
        format: int32
        readOnly: true
        type: integer
        x-nullable: false
      id:
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      imageUri:
        readOnly: true
        type: string
      predictions:
        items:
          $ref: "#/definitions/Prediction"
        readOnly: true
        type: array
        x-nullable: true
      regions:
        items:
          $ref: "#/definitions/ImageRegion"
        readOnly: true
        type: array
        x-nullable: true
      tags:
        items:
          $ref: "#/definitions/ImageTag"
        readOnly: true
        type: array
        x-nullable: true
      thumbnailUri:
        readOnly: true
        type: string
      width:
        format: int32
        readOnly: true
        type: integer
        x-nullable: false
    type: object
  ImagePrediction:
    description: Result of an image prediction request.
    properties:
      created:
        description: Date this prediction was created.
        format: date-time
        readOnly: true
        type: string
        x-nullable: false
      id:
        description: Prediction Id.
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      iteration:
        description: Iteration Id.
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      predictions:
        description: List of predictions.
        items:
          $ref: "#/definitions/Prediction"
          x-nullable: false
        readOnly: true
        type: array
      project:
        description: Project Id.
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
    type: object
  ImageProcessingSettings:
    description: Represents image preprocessing settings used by image augmentation.
    properties:
      augmentationMethods:
        additionalProperties:
          type: boolean
        description: "Gets or sets enabled image transforms. The key corresponds to the
          transform name. If value is set to true, then correspondent transform
          is enabled. Otherwise this transform will not be used.\r

          Augmentation will be uniformly distributed among enabled
          transforms."
        readOnly: false
        type: object
        x-nullable: true
    type: object
  ImageRegion:
    properties:
      created:
        format: date-time
        readOnly: true
        type: string
        x-nullable: false
      height:
        description: Height.
        format: float
        readOnly: false
        type: number
        x-nullable: false
      left:
        description: Coordinate of the left boundary.
        format: float
        readOnly: false
        type: number
        x-nullable: false
      regionId:
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      tagId:
        description: Id of the tag associated with this region.
        format: uuid
        readOnly: false
        type: string
        x-nullable: false
      tagName:
        readOnly: true
        type: string
        x-nullable: false
      top:
        description: Coordinate of the top boundary.
        format: float
        readOnly: false
        type: number
        x-nullable: false
      width:
        description: Width.
        format: float
        readOnly: false
        type: number
        x-nullable: false
    required:
      - tagId
      - left
      - top
      - width
      - height
    type: object
  ImageRegionCreateBatch:
    description: Batch of image region information to create.
    properties:
      regions:
        items:
          $ref: "#/definitions/ImageRegionCreateEntry"
          x-nullable: false
        readOnly: false
        type: array
    type: object
  ImageRegionCreateEntry:
    description: Entry associating a region to an image.
    properties:
      height:
        description: Height.
        format: float
        readOnly: false
        type: number
        x-nullable: false
      imageId:
        description: Id of the image.
        format: uuid
        readOnly: false
        type: string
        x-nullable: false
      left:
        description: Coordinate of the left boundary.
        format: float
        readOnly: false
        type: number
        x-nullable: false
      tagId:
        description: Id of the tag associated with this region.
        format: uuid
        readOnly: false
        type: string
        x-nullable: false
      top:
        description: Coordinate of the top boundary.
        format: float
        readOnly: false
        type: number
        x-nullable: false
      width:
        description: Width.
        format: float
        readOnly: false
        type: number
        x-nullable: false
    required:
      - imageId
      - tagId
      - left
      - top
      - width
      - height
    type: object
  ImageRegionCreateResult:
    properties:
      created:
        format: date-time
        readOnly: true
        type: string
        x-nullable: false
      height:
        description: Height.
        format: float
        readOnly: false
        type: number
        x-nullable: false
      imageId:
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      left:
        description: Coordinate of the left boundary.
        format: float
        readOnly: false
        type: number
        x-nullable: false
      regionId:
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      tagId:
        description: Id of the tag associated with this region.
        format: uuid
        readOnly: false
        type: string
        x-nullable: false
      tagName:
        readOnly: true
        type: string
        x-nullable: false
      top:
        description: Coordinate of the top boundary.
        format: float
        readOnly: false
        type: number
        x-nullable: false
      width:
        description: Width.
        format: float
        readOnly: false
        type: number
        x-nullable: false
    required:
      - tagId
      - left
      - top
      - width
      - height
    type: object
  ImageRegionCreateSummary:
    properties:
      created:
        items:
          $ref: "#/definitions/ImageRegionCreateResult"
        readOnly: false
        type: array
        x-nullable: true
      duplicated:
        items:
          $ref: "#/definitions/ImageRegionCreateEntry"
        readOnly: false
        type: array
        x-nullable: true
      exceeded:
        items:
          $ref: "#/definitions/ImageRegionCreateEntry"
        readOnly: false
        type: array
        x-nullable: true
    type: object
  ImageRegionProposal:
    properties:
      imageId:
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      projectId:
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      proposals:
        items:
          $ref: "#/definitions/RegionProposal"
          x-nullable: false
        readOnly: true
        type: array
    type: object
  ImageTag:
    properties:
      created:
        format: date-time
        readOnly: true
        type: string
        x-nullable: false
      tagId:
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      tagName:
        readOnly: true
        type: string
        x-nullable: false
    type: object
  ImageTagCreateBatch:
    description: Batch of image tags.
    properties:
      tags:
        description: Image Tag entries to include in this batch.
        items:
          $ref: "#/definitions/ImageTagCreateEntry"
          x-nullable: false
        readOnly: false
        type: array
    type: object
  ImageTagCreateEntry:
    description: Entry associating a tag to an image.
    properties:
      imageId:
        description: Id of the image.
        format: uuid
        readOnly: false
        type: string
        x-nullable: false
      tagId:
        description: Id of the tag.
        format: uuid
        readOnly: false
        type: string
        x-nullable: false
    type: object
  ImageTagCreateSummary:
    properties:
      created:
        items:
          $ref: "#/definitions/ImageTagCreateEntry"
        readOnly: false
        type: array
        x-nullable: true
      duplicated:
        items:
          $ref: "#/definitions/ImageTagCreateEntry"
        readOnly: false
        type: array
        x-nullable: true
      exceeded:
        items:
          $ref: "#/definitions/ImageTagCreateEntry"
        readOnly: false
        type: array
        x-nullable: true
    type: object
  ImageUrl:
    description: Image url.
    properties:
      url:
        description: Url of the image.
        readOnly: false
        type: string
        x-nullable: false
    required:
      - url
    type: object
  ImageUrlCreateBatch:
    properties:
      images:
        items:
          $ref: "#/definitions/ImageUrlCreateEntry"
          x-nullable: false
        readOnly: false
        type: array
      tagIds:
        items:
          format: uuid
          type: string
          x-nullable: false
        readOnly: false
        type: array
    type: object
  ImageUrlCreateEntry:
    properties:
      regions:
        items:
          $ref: "#/definitions/Region"
          x-nullable: false
        readOnly: false
        type: array
      tagIds:
        items:
          format: uuid
          type: string
          x-nullable: false
        readOnly: false
        type: array
      url:
        description: Url of the image.
        readOnly: false
        type: string
        x-nullable: false
    required:
      - url
    type: object
  Iteration:
    description: Iteration model to be sent over JSON.
    properties:
      classificationType:
        description: Gets the classification type of the project.
        enum:
          - Multiclass
          - Multilabel
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: true
          name: Classifier
        x-nullable: true
      created:
        description: Gets the time this iteration was completed.
        format: date-time
        readOnly: true
        type: string
        x-nullable: false
      domainId:
        description: Get or sets a guid of the domain the iteration has been trained on.
        format: uuid
        readOnly: true
        type: string
        x-nullable: true
      exportable:
        description: Whether the iteration can be exported to another format for download.
        readOnly: true
        type: boolean
        x-nullable: false
      exportableTo:
        description: A set of platforms this iteration can export to.
        items:
          enum:
            - CoreML
            - TensorFlow
            - DockerFile
            - ONNX
            - VAIDK
          type: string
          x-nullable: false
        readOnly: true
        type: array
      id:
        description: Gets the id of the iteration.
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      lastModified:
        description: Gets the time this iteration was last modified.
        format: date-time
        readOnly: true
        type: string
        x-nullable: false
      name:
        description: Gets or sets the name of the iteration.
        readOnly: false
        type: string
        x-nullable: false
      originalPublishResourceId:
        description: Resource Provider Id this iteration was originally published to.
        readOnly: true
        type: string
        x-nullable: false
      projectId:
        description: Gets the project id of the iteration.
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      publishName:
        description: Name of the published model.
        readOnly: true
        type: string
        x-nullable: false
      reservedBudgetInHours:
        description: Gets the reserved advanced training budget for the iteration.
        format: int32
        readOnly: true
        type: integer
        x-nullable: false
      status:
        description: Gets the current iteration status.
        readOnly: true
        type: string
        x-nullable: false
      trainedAt:
        description: Gets the time this iteration was last modified.
        format: date-time
        readOnly: true
        type: string
        x-nullable: true
      trainingTimeInMinutes:
        description: Gets the training time for the iteration.
        format: int32
        readOnly: true
        type: integer
        x-nullable: false
      trainingType:
        description: Gets the training type of the iteration.
        enum:
          - Regular
          - Advanced
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: true
          name: TrainingType
        x-nullable: false
    required:
      - name
    type: object
  IterationPerformance:
    description: Represents the detailed performance data for a trained iteration.
    properties:
      averagePrecision:
        description: Gets the average precision when applicable.
        format: float
        readOnly: true
        type: number
        x-nullable: true
      perTagPerformance:
        description: Gets the per-tag performance details for this iteration.
        items:
          $ref: "#/definitions/TagPerformance"
          x-nullable: false
        readOnly: true
        type: array
      precision:
        description: Gets the precision.
        format: float
        readOnly: true
        type: number
        x-nullable: false
      precisionStdDeviation:
        description: Gets the standard deviation for the precision.
        format: float
        readOnly: true
        type: number
        x-nullable: false
      recall:
        description: Gets the recall.
        format: float
        readOnly: true
        type: number
        x-nullable: false
      recallStdDeviation:
        description: Gets the standard deviation for the recall.
        format: float
        readOnly: true
        type: number
        x-nullable: false
    type: object
  Prediction:
    description: Prediction result.
    properties:
      boundingBox:
        $ref: "#/definitions/BoundingBox"
        description: Bounding box of the prediction.
        readOnly: true
        x-nullable: true
      probability:
        description: Probability of the tag.
        format: float
        readOnly: true
        type: number
        x-nullable: false
      tagId:
        description: Id of the predicted tag.
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      tagName:
        description: Name of the predicted tag.
        readOnly: true
        type: string
        x-nullable: true
    type: object
  PredictionQueryResult:
    description: Query result of the prediction images that were sent to your
      prediction endpoint.
    properties:
      results:
        description: Result of an prediction request.
        items:
          $ref: "#/definitions/StoredImagePrediction"
          x-nullable: false
        readOnly: true
        type: array
      token:
        $ref: "#/definitions/PredictionQueryToken"
        description: Prediction Query Token.
        readOnly: false
    type: object
  PredictionQueryTag:
    properties:
      id:
        format: uuid
        readOnly: false
        type: string
        x-nullable: false
      maxThreshold:
        format: float
        readOnly: false
        type: number
        x-nullable: false
      minThreshold:
        format: float
        readOnly: false
        type: number
        x-nullable: false
    type: object
  PredictionQueryToken:
    properties:
      application:
        readOnly: false
        type: string
        x-nullable: false
      continuation:
        readOnly: false
        type: string
        x-nullable: false
      endTime:
        format: date-time
        readOnly: false
        type: string
        x-nullable: true
      iterationId:
        format: uuid
        readOnly: false
        type: string
        x-nullable: true
      maxCount:
        format: int32
        readOnly: false
        type: integer
        x-nullable: false
      orderBy:
        enum:
          - Newest
          - Oldest
          - Suggested
        readOnly: false
        type: string
        x-ms-enum:
          modelAsString: true
          name: OrderBy
        x-nullable: false
      session:
        readOnly: false
        type: string
        x-nullable: false
      startTime:
        format: date-time
        readOnly: false
        type: string
        x-nullable: true
      tags:
        items:
          $ref: "#/definitions/PredictionQueryTag"
          x-nullable: false
        readOnly: false
        type: array
    type: object
  Project:
    description: Represents a project.
    properties:
      created:
        description: Gets the date this project was created.
        format: date-time
        readOnly: true
        type: string
        x-nullable: false
      description:
        description: Gets or sets the description of the project.
        readOnly: false
        type: string
        x-nullable: true
      drModeEnabled:
        description: Gets if the Disaster Recovery (DR) mode is on, indicating the
          project is temporarily read-only.
        readOnly: true
        type: boolean
        x-nullable: true
      id:
        description: Gets the project id.
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      lastModified:
        description: Gets the date this project was last modified.
        format: date-time
        readOnly: true
        type: string
        x-nullable: false
      name:
        description: Gets or sets the name of the project.
        readOnly: false
        type: string
        x-nullable: false
      settings:
        $ref: "#/definitions/ProjectSettings"
        description: Gets or sets the project settings.
        readOnly: false
      status:
        description: Gets the status of the project.
        enum:
          - Succeeded
          - Importing
          - Failed
        readOnly: false
        type: string
        x-ms-enum:
          modelAsString: true
          name: ProjectStatus
        x-nullable: false
      thumbnailUri:
        description: Gets the thumbnail url representing the image.
        readOnly: true
        type: string
    required:
      - name
      - description
      - settings
    type: object
  ProjectExport:
    description: Represents information about a project export.
    properties:
      estimatedImportTimeInMS:
        description: "Estimated time this project will take to import, can change based
          on network connectivity and load between\r

          source and destination regions."
        format: int32
        readOnly: true
        type: integer
        x-nullable: false
      imageCount:
        description: Count of images that will be exported.
        format: int32
        readOnly: true
        type: integer
        x-nullable: false
      iterationCount:
        description: Count of iterations that will be exported.
        format: int32
        readOnly: true
        type: integer
        x-nullable: false
      regionCount:
        description: Count of regions that will be exported.
        format: int32
        readOnly: true
        type: integer
        x-nullable: false
      tagCount:
        description: Count of tags that will be exported.
        format: int32
        readOnly: true
        type: integer
        x-nullable: false
      token:
        description: "Opaque token that should be passed to ImportProject to perform the
          import. This token grants access to import this\r

          project to all that have the token."
        readOnly: true
        type: string
        x-nullable: false
    type: object
  ProjectSettings:
    description: Represents settings associated with a project.
    properties:
      classificationType:
        description: Gets or sets the classification type of the project.
        enum:
          - Multiclass
          - Multilabel
        readOnly: false
        type: string
        x-ms-enum:
          modelAsString: true
          name: Classifier
        x-nullable: true
      detectionParameters:
        description: Detection parameters in use, if any.
        readOnly: true
        type: string
        x-nullable: false
      domainId:
        description: Gets or sets the id of the Domain to use with this project.
        format: uuid
        readOnly: false
        type: string
        x-nullable: false
      imageProcessingSettings:
        $ref: "#/definitions/ImageProcessingSettings"
        description: Gets or sets image preprocessing settings.
        readOnly: false
      targetExportPlatforms:
        description: A list of ExportPlatform that the trained model should be able to
          support.
        items:
          enum:
            - CoreML
            - TensorFlow
            - DockerFile
            - ONNX
            - VAIDK
          type: string
          x-nullable: false
        readOnly: false
        type: array
      useNegativeSet:
        description: Indicates if negative set is being used.
        readOnly: true
        type: boolean
        x-nullable: true
    type: object
  Region:
    properties:
      height:
        description: Height.
        format: float
        readOnly: false
        type: number
        x-nullable: false
      left:
        description: Coordinate of the left boundary.
        format: float
        readOnly: false
        type: number
        x-nullable: false
      tagId:
        description: Id of the tag associated with this region.
        format: uuid
        readOnly: false
        type: string
        x-nullable: false
      top:
        description: Coordinate of the top boundary.
        format: float
        readOnly: false
        type: number
        x-nullable: false
      width:
        description: Width.
        format: float
        readOnly: false
        type: number
        x-nullable: false
    required:
      - tagId
      - left
      - top
      - width
      - height
    type: object
  RegionProposal:
    properties:
      boundingBox:
        $ref: "#/definitions/BoundingBox"
        readOnly: true
      confidence:
        format: float
        readOnly: true
        type: number
        x-nullable: false
    type: object
  StoredImagePrediction:
    description: Result of an image prediction request.
    properties:
      created:
        description: Date this prediction was created.
        format: date-time
        readOnly: true
        type: string
        x-nullable: false
      domain:
        description: Domain used for the prediction.
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      id:
        description: Prediction Id.
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      iteration:
        description: Iteration Id.
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      originalImageUri:
        description: The URI to the original prediction image.
        readOnly: true
        type: string
      predictions:
        description: List of predictions.
        items:
          $ref: "#/definitions/Prediction"
          x-nullable: false
        readOnly: true
        type: array
      project:
        description: Project Id.
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      resizedImageUri:
        description: The URI to the (resized) prediction image.
        readOnly: true
        type: string
      thumbnailUri:
        description: The URI to the thumbnail of the original prediction image.
        readOnly: true
        type: string
    type: object
  StoredSuggestedTagAndRegion:
    description: Result of a suggested tags and regions request of the untagged image.
    properties:
      created:
        description: Date this prediction was created.
        format: date-time
        readOnly: true
        type: string
        x-nullable: false
      domain:
        description: Domain used for the prediction.
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      height:
        description: Height of the resized image.
        format: int32
        readOnly: true
        type: integer
        x-nullable: false
      id:
        description: Prediction Id.
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      iteration:
        description: Iteration Id.
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      originalImageUri:
        description: The URI to the original prediction image.
        readOnly: true
        type: string
      predictionUncertainty:
        description: Uncertainty (entropy) of suggested tags or regions per image.
        format: double
        readOnly: true
        type: number
        x-nullable: false
      predictions:
        description: List of predictions.
        items:
          $ref: "#/definitions/Prediction"
          x-nullable: false
        readOnly: true
        type: array
      project:
        description: Project Id.
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      resizedImageUri:
        description: The URI to the (resized) prediction image.
        readOnly: true
        type: string
      thumbnailUri:
        description: The URI to the thumbnail of the original prediction image.
        readOnly: true
        type: string
      width:
        description: Width of the resized image.
        format: int32
        readOnly: true
        type: integer
        x-nullable: false
    type: object
  SuggestedTagAndRegion:
    description: Result of a suggested tags and regions request.
    properties:
      created:
        description: Date this prediction was created.
        format: date-time
        readOnly: true
        type: string
        x-nullable: false
      id:
        description: Prediction Id.
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      iteration:
        description: Iteration Id.
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      predictionUncertainty:
        description: Uncertainty (entropy) of suggested tags or regions per image.
        format: double
        readOnly: true
        type: number
        x-nullable: false
      predictions:
        description: List of predictions.
        items:
          $ref: "#/definitions/Prediction"
          x-nullable: false
        readOnly: true
        type: array
      project:
        description: Project Id.
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
    type: object
  SuggestedTagAndRegionQuery:
    description: The array of result images and token containing session and
      continuation Ids for the next query.
    properties:
      results:
        description: Result of a suggested tags and regions request of the untagged image.
        items:
          $ref: "#/definitions/StoredSuggestedTagAndRegion"
          x-nullable: false
        readOnly: true
        type: array
      token:
        $ref: "#/definitions/SuggestedTagAndRegionQueryToken"
        description: Contains properties we need to fetch suggested tags for.
        readOnly: false
    type: object
  SuggestedTagAndRegionQueryToken:
    description: "Contains properties we need to fetch suggested tags for. For the
      first call, Session and continuation set to null.\r

      Then on subsequent calls, uses the session/continuation from the
      previous SuggestedTagAndRegionQuery result to fetch additional results."
    properties:
      continuation:
        description: Continuation Id for database pagination. Initially null but later
          used to paginate.
        readOnly: false
        type: string
        x-nullable: false
      maxCount:
        description: Maximum number of results you want to be returned in the response.
        format: int32
        readOnly: false
        type: integer
        x-nullable: false
      session:
        description: SessionId for database query. Initially set to null but later used
          to paginate.
        readOnly: false
        type: string
        x-nullable: false
      sortBy:
        description: OrderBy. Ordering mechanism for your results.
        enum:
          - UncertaintyAscending
          - UncertaintyDescending
        readOnly: false
        type: string
        x-ms-enum:
          modelAsString: true
          name: SortBy
        x-nullable: false
      tagIds:
        description: Existing TagIds in project to filter suggested tags on.
        items:
          format: uuid
          type: string
          x-nullable: false
        readOnly: false
        type: array
      threshold:
        description: Confidence threshold to filter suggested tags on.
        format: double
        readOnly: false
        type: number
        x-nullable: false
    type: object
  Tag:
    description: Represents a Tag.
    properties:
      description:
        description: Gets or sets the description of the tag.
        readOnly: false
        type: string
        x-nullable: true
      id:
        description: Gets the Tag ID.
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      imageCount:
        description: Gets the number of images with this tag.
        format: int32
        readOnly: true
        type: integer
        x-nullable: false
      name:
        description: Gets or sets the name of the tag.
        readOnly: false
        type: string
        x-nullable: false
      type:
        description: Gets or sets the type of the tag.
        enum:
          - Regular
          - Negative
        readOnly: false
        type: string
        x-ms-enum:
          modelAsString: true
          name: TagType
        x-nullable: false
    required:
      - name
      - description
      - type
    type: object
  TagFilter:
    description: Model that query for counting of images whose suggested tags match
      given tags and their probability are greater than or equal to the given
      threshold.
    properties:
      tagIds:
        description: Existing TagIds in project to get suggested tags count for.
        items:
          format: uuid
          type: string
          x-nullable: false
        readOnly: false
        type: array
      threshold:
        description: Confidence threshold to filter suggested tags on.
        format: double
        readOnly: false
        type: number
        x-nullable: false
    type: object
  TagPerformance:
    description: Represents performance data for a particular tag in a trained iteration.
    properties:
      averagePrecision:
        description: Gets the average precision when applicable.
        format: float
        readOnly: true
        type: number
        x-nullable: true
      id:
        format: uuid
        readOnly: true
        type: string
        x-nullable: false
      name:
        readOnly: true
        type: string
        x-nullable: false
      precision:
        description: Gets the precision.
        format: float
        readOnly: true
        type: number
        x-nullable: false
      precisionStdDeviation:
        description: Gets the standard deviation for the precision.
        format: float
        readOnly: true
        type: number
        x-nullable: false
      recall:
        description: Gets the recall.
        format: float
        readOnly: true
        type: number
        x-nullable: false
      recallStdDeviation:
        description: Gets the standard deviation for the recall.
        format: float
        readOnly: true
        type: number
        x-nullable: false
    type: object
  TrainingParameters:
    description: Parameters used for training.
    properties:
      selectedTags:
        description: List of tags selected for this training session, other tags in the
          project will be ignored.
        items:
          format: uuid
          type: string
          x-nullable: false
        readOnly: false
        type: array
    type: object
x-ms-parameterized-host:
  hostTemplate: "{Endpoint}"
  parameters:
    - $ref: "#/parameters/Endpoint"
  useSchemePrefix: false
