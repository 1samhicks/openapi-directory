openapi: 3.0.1
servers:
  - url: https://api.configcat.com
info:
  contact:
    email: support@configcat.com
    name: ConfigCat
    url: https://configcat.com
    x-twitter: configcat
  description: >
    **Base API URL**: https://api.configcat.com


    If you prefer the swagger documentation, you can find it here: [Swagger UI](https://api.configcat.com/swagger).


    The purpose of this API is to access the ConfigCat platform programmatically. 

    You can **Create**, **Read**, **Update** and **Delete** any entities like **Feature Flags, Configs, Environments** or **Products** within ConfigCat. 


    The API is based on HTTP REST, uses resource-oriented URLs, status codes and supports JSON 

    and JSON+HAL format. Do not use this API for accessing and evaluating feature flag values. Use the [SDKs instead](https://configcat.com/docs/sdk-reference/overview).



    # OpenAPI Specification


    The complete specification is publicly available here: [swagger.json](v1/swagger.json). 

    You can use it to generate client libraries in various languages with [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator) or

    [Swagger Codegen](https://swagger.io/tools/swagger-codegen/) to interact with this API.


    # Authentication

    This API uses the [Basic HTTP Authentication Scheme](https://en.wikipedia.org/wiki/Basic_access_authentication). 


    <!-- ReDoc-Inject: <security-definitions> -->


    # Throttling and rate limits

    All the rate limited API calls are returning information about the current rate limit period in the following HTTP headers:


    | Header | Description |

    | :- | :- |

    | X-Rate-Limit-Remaining | The maximum number of requests remaining in the current rate limit period. |

    | X-Rate-Limit-Reset     | The time	when the current rate limit period resets.						  |


    When the rate limit is exceeded by a request, the API returns with a `HTTP 429 - Too many requests` status along with a `Retry-After` HTTP header.
  termsOfService: https://configcat.com/termsofserviceagreement
  title: ConfigCat Public Management API
  version: v1
  x-apisguru-categories:
    - developer_tools
  x-logo:
    url: https://api.configcat.com/resources/configcat-logo-horiz.svg
  x-origin:
    - format: openapi
      url: https://api.configcat.com/docs/v1/swagger.json
      version: "3.0"
  x-providerName: configcat.com
security:
  - Basic: []
tags:
  - description: >-
      With these endpoints you can control how your existing Feature Flags and
      Settings should serve their values. 

      You can turn Feature Flags on or off, update Setting values and also add, remove or change the order of Percentage and Targeting Rules.


      These endpoints are determining the Environment and Config by the <a target="_blank" href="https://app.configcat.com/sdkkey">SDK key</a> passed in

      the `X-CONFIGCAT-SDKKEY` request header. To identify the desired Feature Flag or Setting to change, 

      you can use either its `settingId` or `key` attribute. You can get those attributes 

      from the [Feature Flag & Setting](#tag/Feature-Flags-and-Settings) endpoints.
    name: Feature Flag & Setting values using SDK Key
  - description: >-
      With these endpoints you can control how your existing Feature Flags and
      Settings should serve their values. 

      You can turn Feature Flags on or off, update Setting values and also add, remove or reorder Percentage and Targeting Rules.


      To determine which Feature Flag or Setting you want to work with you have to pass its `settingId`. It can be

      obtained from the [Feature Flag & Setting](#tag/Feature-Flags-and-Settings) endpoints.


      You also have to specify in which Environment you want to change the served value configuration by its

      `environmentId` which can be obtained from the [List Environments](#operation/get-environments) endpoint.
    name: Feature Flag & Setting values
  - description: >-
      With these endpoints you can manage your Feature Flags or Settings within
      a Config. 

      However you can't use them for manipulating the values of your Feature Flags and Settings,

      to do that please visit the [Feature Flag & Setting values using SDK Key](#tag/Feature-Flag-and-Setting-values-using-SDK-Key)

      and [Feature Flag & Setting values](#tag/Feature-Flag-and-Setting-values) sections of the API.


      For using these endpoints, first you have to select which Config you want to work with by its `configId` 

      which can be obtained from the [List Configs](#operation/get-configs) endpoint. 

      Then you can use it to create new Feature Flags or to get information about existing ones.


      Then you can obtain the `settingId` or `key` of your desired Feature Flag or Setting 

      to use them for further operations in this API. 


      <a href="https://configcat.com/docs/main-concepts/#setting" target="_blank">Here</a> you can read more about the concept of Settings.
    name: Feature Flags & Settings
  - description: >-
      With these endpoints you can get useful information about your Products.

      This also can be used to manage [Environments](#tag/Environments) and [Configs](#tag/Configs) through this API.


      <a href="https://configcat.com/docs/main-concepts/#product" target="_blank">Here</a> you can read more about the concept of Products.
    name: Products
  - description: >-
      With these endpoints you can get useful information about your Configs.

      This also can be used to manage [Feature Flags and Settings](#tag/Feature-Flags-and-Settings) and their 

      [served values](#tag/Feature-Flag-and-Setting-values) through this API.


      <a href="https://configcat.com/docs/main-concepts/#config" target="_blank">Here</a> you can read more about the concept of Configs.
    name: Configs
  - description: >-
      With these endpoints you can update existing Environments or add new ones
      into your selected [Product](#tag/Products). 


      <a href="https://configcat.com/docs/main-concepts/#environment" target="_blank">Here</a> you can read more about the concept of Environments.
    name: Environments
  - description: Access audit log entries.
    name: Audit logs
  - description: Information about the current user.
    name: Me
paths:
  "/v1/configs/{configId}/settings":
    get:
      description: >-
        This endpoint returns the list of the Feature Flags and Settings defined
        in a 

        specified Config, identified by the `configId` parameter.
      operationId: get-settings
      parameters:
        - description: The identifier of the Config.
          in: path
          name: configId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                items:
                  $ref: "#/components/schemas/SettingModel"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SettingModel"
                type: array
          description: ""
        "400":
          description: Bad request.
        "401":
          description: Unauthorized. In case of the Public Management API credentials are
            invalid.
        "404":
          description: Not found.
        "429":
          description: Too many requests. In case of the request rate exceeds the rate
            limits.
      summary: List Flags
      tags:
        - Feature Flags & Settings
    post:
      description: >-
        This endpoint creates a new Feature Flag or Setting in a specified
        Config

        identified by the `configId` parameter.


        **Important:** The `key` attribute must be unique within the given Config.
      operationId: create-setting
      parameters:
        - description: The identifier of the Config.
          in: path
          name: configId
          required: true
          schema:
            format: uuid
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/CreateSettingModel"
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSettingModel"
          text/json:
            schema:
              $ref: "#/components/schemas/CreateSettingModel"
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/SettingModel"
            application/json:
              schema:
                $ref: "#/components/schemas/SettingModel"
          description: When the creation was successful.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized. In case of the Public Management API credentials are
            invalid.
        "404":
          description: Not found.
        "429":
          description: Too many requests. In case of the request rate exceeds the rate
            limits.
      summary: Create Flag
      tags:
        - Feature Flags & Settings
  "/v1/environments/{environmentId}":
    put:
      description: This endpoint updates an Environment identified by the
        `environmentId` parameter.
      operationId: update-environment
      parameters:
        - description: The identifier of the Product.
          in: path
          name: environmentId
          required: true
          schema:
            format: uuid
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/UpdateEnvironmentModel"
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEnvironmentModel"
          text/json:
            schema:
              $ref: "#/components/schemas/UpdateEnvironmentModel"
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EnvironmentModel"
            application/json:
              schema:
                $ref: "#/components/schemas/EnvironmentModel"
          description: ""
        "400":
          description: Bad request.
        "401":
          description: Unauthorized. In case of the Public Management API credentials are
            invalid.
        "404":
          description: Not found.
        "429":
          description: Too many requests. In case of the request rate exceeds the rate
            limits.
      summary: Update Environment
      tags:
        - Environments
  "/v1/environments/{environmentId}/settings/{settingId}/integrationLinks/{integrationLinkType}/{key}":
    delete:
      description: ""
      operationId: delete-integration-link
      parameters:
        - description: The identifier of the Environment.
          in: path
          name: environmentId
          required: true
          schema:
            format: uuid
            type: string
        - description: The id of the Setting.
          in: path
          name: settingId
          required: true
          schema:
            format: int32
            type: integer
        - description: The integration's type.
          in: path
          name: integrationLinkType
          required: true
          schema:
            $ref: "#/components/schemas/IntegrationLinkType"
        - description: The key of the integration link.
          in: path
          name: key
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/DeleteIntegrationLinkModel"
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteIntegrationLinkModel"
          description: When everything is ok.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized. In case of the Public Management API credentials are
            invalid.
        "404":
          description: Not found.
        "429":
          description: Too many requests. In case of the request rate exceeds the rate
            limits.
      summary: Delete Integration link
      tags:
        - Integration links
    post:
      description: ""
      operationId: add-or-update-integration-link
      parameters:
        - description: The identifier of the Environment.
          in: path
          name: environmentId
          required: true
          schema:
            format: uuid
            type: string
        - description: The id of the Setting.
          in: path
          name: settingId
          required: true
          schema:
            format: int32
            type: integer
        - description: The integration link's type.
          in: path
          name: integrationLinkType
          required: true
          schema:
            $ref: "#/components/schemas/IntegrationLinkType"
        - description: The key of the integration link.
          in: path
          name: key
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/AddOrUpdateIntegrationLinkModel"
          application/json:
            schema:
              $ref: "#/components/schemas/AddOrUpdateIntegrationLinkModel"
          text/json:
            schema:
              $ref: "#/components/schemas/AddOrUpdateIntegrationLinkModel"
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/IntegrationLinkModel"
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationLinkModel"
          description: When everything is ok, the integration link data returned.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized. In case of the Public Management API credentials are
            invalid.
        "404":
          description: Not found.
        "429":
          description: Too many requests. In case of the request rate exceeds the rate
            limits.
      summary: Add or update Integration link
      tags:
        - Integration links
  "/v1/environments/{environmentId}/settings/{settingId}/value":
    get:
      description: >-
        This endpoint returns the value of a Feature Flag or Setting 

        in a specified Environment identified by the `environmentId` parameter.


        The most important attributes in the response are the `value`, `rolloutRules` and `percentageRules`.

        The `value` represents what the clients will get when the evaluation requests of our SDKs 

        are not matching to any of the defined Targeting or Percentage Rules, or when there are no additional rules to evaluate.


        The `rolloutRules` and `percentageRules` attributes are representing the current 

        Targeting and Percentage Rules configuration of the actual Feature Flag or Setting 

        in an **ordered** collection, which means the order of the returned rules is matching to the

        evaluation order. You can read more about these rules [here](https://configcat.com/docs/advanced/targeting/).
      operationId: get-setting-value
      parameters:
        - description: The identifier of the Environment.
          in: path
          name: environmentId
          required: true
          schema:
            format: uuid
            type: string
        - description: The id of the Setting.
          in: path
          name: settingId
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/SettingValueModel-haljson"
            application/json:
              schema:
                $ref: "#/components/schemas/SettingValueModel"
          description: When everything is ok, the setting value data returned.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized. In case of the Public Management API credentials are
            invalid.
        "404":
          description: Not found.
        "429":
          description: Too many requests. In case of the request rate exceeds the rate
            limits.
      summary: Get value
      tags:
        - Feature Flag & Setting values
    patch:
      description: >-
        This endpoint updates the value of a Feature Flag or Setting 

        with a collection of [JSON Patch](http://jsonpatch.com) operations in a specified Environment.


        Only the `value`, `rolloutRules` and `percentageRules` attributes are modifiable by this endpoint.


        The advantage of using JSON Patch is that you can describe individual update operations on a resource

        without touching attributes that you don't want to change. It supports collection reordering, so it also 

        can be used for reordering the targeting rules of a Feature Flag or Setting.


        For example: We have the following resource.

        ```

        {
        	"rolloutPercentageItems": [
        		{
        			"percentage": 30,
        			"value": true
        		},
        		{
        			"percentage": 70,
        			"value": false
        		}
        	],
        	"rolloutRules": [],
        	"value": false
        }

        ```

        If we send an update request body as below:

        ```

        [
        	{
        		"op": "replace",
        		"path": "/value",
        		"value": true
        	}
        ]

        ```

        Only the default value is going to be set to `true` and all the Percentage Rules are remaining unchanged.

        So we get a response like this:

        ```

        {
        	"rolloutPercentageItems": [
        		{
        			"percentage": 30,
        			"value": true
        		},
        		{
        			"percentage": 70,
        			"value": false
        		}
        	],
        	"rolloutRules": [],
        	"value": true
        }

        ```
      operationId: update-setting-value
      parameters:
        - description: The identifier of the Environment.
          in: path
          name: environmentId
          required: true
          schema:
            format: uuid
            type: string
        - description: The id of the Setting.
          in: path
          name: settingId
          required: true
          schema:
            format: int32
            type: integer
        - description: The reason note for the Audit Log if the Product's "Config changes
            require a reason" preference is turned on.
          in: query
          name: reason
          schema:
            nullable: true
            type: string
      requestBody:
        content:
          application/*+json:
            examples:
              add percentage rules:
                description: This example adds two items to the percentage evaluation rules.
                value:
                  - op: add
                    path: /rolloutPercentageItems/-
                    value:
                      percentage: 30
                      value: true
                  - op: add
                    path: /rolloutPercentageItems/-
                    value:
                      percentage: 70
                      value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation rules.
                value:
                  - op: add
                    path: /rolloutRules/-
                    value:
                      comparator: contains
                      comparisonAttribute: Identifier
                      comparisonValue: "@example.com"
                      value: true
                  - op: add
                    path: /rolloutRules/-
                    value:
                      comparator: isOneOf
                      comparisonAttribute: Identifier
                      comparisonValue: "@blacklist.com"
                      value: false
              reorder targeting rules:
                description: This example swaps the first and the second targeting evaluation
                  rule.
                value:
                  - from: /rolloutRules/0
                    op: move
                    path: /rolloutRules/1
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                  - op: replace
                    path: /value
                    value: true
            schema:
              items:
                $ref: "#/components/schemas/Operation"
              type: array
          application/json:
            examples:
              add percentage rules:
                description: This example adds two items to the percentage evaluation rules.
                value:
                  - op: add
                    path: /rolloutPercentageItems/-
                    value:
                      percentage: 30
                      value: true
                  - op: add
                    path: /rolloutPercentageItems/-
                    value:
                      percentage: 70
                      value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation rules.
                value:
                  - op: add
                    path: /rolloutRules/-
                    value:
                      comparator: contains
                      comparisonAttribute: Identifier
                      comparisonValue: "@example.com"
                      value: true
                  - op: add
                    path: /rolloutRules/-
                    value:
                      comparator: isOneOf
                      comparisonAttribute: Identifier
                      comparisonValue: "@blacklist.com"
                      value: false
              reorder targeting rules:
                description: This example swaps the first and the second targeting evaluation
                  rule.
                value:
                  - from: /rolloutRules/0
                    op: move
                    path: /rolloutRules/1
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                  - op: replace
                    path: /value
                    value: true
            schema:
              items:
                $ref: "#/components/schemas/Operation"
              type: array
          application/json-patch+json:
            examples:
              add percentage rules:
                description: This example adds two items to the percentage evaluation rules.
                value:
                  - op: add
                    path: /rolloutPercentageItems/-
                    value:
                      percentage: 30
                      value: true
                  - op: add
                    path: /rolloutPercentageItems/-
                    value:
                      percentage: 70
                      value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation rules.
                value:
                  - op: add
                    path: /rolloutRules/-
                    value:
                      comparator: contains
                      comparisonAttribute: Identifier
                      comparisonValue: "@example.com"
                      value: true
                  - op: add
                    path: /rolloutRules/-
                    value:
                      comparator: isOneOf
                      comparisonAttribute: Identifier
                      comparisonValue: "@blacklist.com"
                      value: false
              reorder targeting rules:
                description: This example swaps the first and the second targeting evaluation
                  rule.
                value:
                  - from: /rolloutRules/0
                    op: move
                    path: /rolloutRules/1
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                  - op: replace
                    path: /value
                    value: true
            schema:
              items:
                $ref: "#/components/schemas/Operation"
              type: array
          text/json:
            examples:
              add percentage rules:
                description: This example adds two items to the percentage evaluation rules.
                value:
                  - op: add
                    path: /rolloutPercentageItems/-
                    value:
                      percentage: 30
                      value: true
                  - op: add
                    path: /rolloutPercentageItems/-
                    value:
                      percentage: 70
                      value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation rules.
                value:
                  - op: add
                    path: /rolloutRules/-
                    value:
                      comparator: contains
                      comparisonAttribute: Identifier
                      comparisonValue: "@example.com"
                      value: true
                  - op: add
                    path: /rolloutRules/-
                    value:
                      comparator: isOneOf
                      comparisonAttribute: Identifier
                      comparisonValue: "@blacklist.com"
                      value: false
              reorder targeting rules:
                description: This example swaps the first and the second targeting evaluation
                  rule.
                value:
                  - from: /rolloutRules/0
                    op: move
                    path: /rolloutRules/1
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                  - op: replace
                    path: /value
                    value: true
            schema:
              items:
                $ref: "#/components/schemas/Operation"
              type: array
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/SettingValueModel-haljson"
            application/json:
              schema:
                $ref: "#/components/schemas/SettingValueModel"
          description: When the patch was successful.
        "204":
          description: When no change applied on the resource.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized. In case of the Public Management API credentials are
            invalid.
        "404":
          description: Not found.
        "429":
          description: Too many requests. In case of the request rate exceeds the rate
            limits.
      summary: Update value
      tags:
        - Feature Flag & Setting values
    put:
      description: >-
        This endpoint replaces the whole value of a Feature Flag or Setting in a
        specified Environment.


        Only the `value`, `rolloutRules` and `percentageRules` attributes are modifiable by this endpoint.


        **Important:** As this endpoint is doing a complete replace, it's important to set every other attribute that you don't 

        want to change in its original state. Not listing one means that it will reset.


        For example: We have the following resource.

        ```

        {
        	"rolloutPercentageItems": [
        		{
        			"percentage": 30,
        			"value": true
        		},
        		{
        			"percentage": 70,
        			"value": false
        		}
        	],
        	"rolloutRules": [],
        	"value": false
        }

        ```

        If we send a replace request body as below:

        ```

        {
        	"value": true
        }

        ```

        Then besides that the default value is set to `true`, all the Percentage Rules are deleted. 

        So we get a response like this:

        ```

        {
        	"rolloutPercentageItems": [],
        	"rolloutRules": [],
        	"value": true
        }

        ```
      operationId: replace-setting-value
      parameters:
        - description: The identifier of the Environment.
          in: path
          name: environmentId
          required: true
          schema:
            format: uuid
            type: string
        - description: The id of the Setting.
          in: path
          name: settingId
          required: true
          schema:
            format: int32
            type: integer
        - description: The reason note for the Audit Log if the Product's "Config changes
            require a reason" preference is turned on.
          in: query
          name: reason
          schema:
            nullable: true
            type: string
      requestBody:
        content:
          application/*+json:
            examples:
              advanced:
                description: This example turns on a feature flag and adds two items to its
                  percentage evaluation rules.
                value:
                  rolloutPercentageItems:
                    - percentage: 30
                      value: true
                    - percentage: 70
                      value: false
                  value: true
              simple:
                description: This example turns on a feature flag.
                value:
                  value: true
            schema:
              $ref: "#/components/schemas/UpdateSettingValueModel"
          application/json:
            examples:
              advanced:
                description: This example turns on a feature flag and adds two items to its
                  percentage evaluation rules.
                value:
                  rolloutPercentageItems:
                    - percentage: 30
                      value: true
                    - percentage: 70
                      value: false
                  value: true
              simple:
                description: This example turns on a feature flag.
                value:
                  value: true
            schema:
              $ref: "#/components/schemas/UpdateSettingValueModel"
          text/json:
            examples:
              advanced:
                description: This example turns on a feature flag and adds two items to its
                  percentage evaluation rules.
                value:
                  rolloutPercentageItems:
                    - percentage: 30
                      value: true
                    - percentage: 70
                      value: false
                  value: true
              simple:
                description: This example turns on a feature flag.
                value:
                  value: true
            schema:
              $ref: "#/components/schemas/UpdateSettingValueModel"
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/SettingValueModel-haljson"
            application/json:
              schema:
                $ref: "#/components/schemas/SettingValueModel"
          description: ""
        "400":
          description: Bad request.
        "401":
          description: Unauthorized. In case of the Public Management API credentials are
            invalid.
        "404":
          description: Not found.
        "429":
          description: Too many requests. In case of the request rate exceeds the rate
            limits.
      summary: Replace value
      tags:
        - Feature Flag & Setting values
  "/v1/integrationLink/{integrationLinkType}/{key}/details":
    get:
      description: ""
      operationId: get-integration-link-details
      parameters:
        - description: The integration link's type.
          in: path
          name: integrationLinkType
          required: true
          schema:
            $ref: "#/components/schemas/IntegrationLinkType"
        - description: The key of the integration link.
          in: path
          name: key
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/IntegrationLinkDetailsModel"
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationLinkDetailsModel"
          description: When everything is ok, the details for the integration link returned.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized. In case of the Public Management API credentials are
            invalid.
        "404":
          description: Not found.
        "429":
          description: Too many requests. In case of the request rate exceeds the rate
            limits.
      summary: Get Integration link
      tags:
        - Integration links
  /v1/me:
    get:
      description: ""
      operationId: get-me
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/MeModel"
            application/json:
              schema:
                $ref: "#/components/schemas/MeModel"
          description: ""
        "401":
          description: Unauthorized. In case of the Public Management API credentials are
            invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the rate
            limits.
      summary: Get authenticated user details
      tags:
        - Me
  /v1/products:
    get:
      description: This endpoint returns the list of the Products that belongs to the user.
      operationId: get-products
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                items:
                  $ref: "#/components/schemas/ProductModel-haljson"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProductModel"
                type: array
          description: ""
        "401":
          description: Unauthorized. In case of the Public Management API credentials are
            invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the rate
            limits.
      summary: List Products
      tags:
        - Products
  "/v1/products/{productId}/auditlogs":
    get:
      description: |-
        This endpoint returns the list of Audit logs for a given Product 
        and the result can be optionally filtered by Config and/or Environment.
      operationId: get-auditlogs
      parameters:
        - description: The identifier of the Product.
          in: path
          name: productId
          required: true
          schema:
            format: uuid
            type: string
        - description: The identifier of the Config.
          in: query
          name: configId
          schema:
            format: uuid
            nullable: true
            type: string
        - description: The identifier of the Environment.
          in: query
          name: environmentId
          schema:
            format: uuid
            nullable: true
            type: string
        - description: Filter Audit logs by Audit log type.
          in: query
          name: auditLogType
          schema:
            allOf:
              - $ref: "#/components/schemas/AuditLogType"
            nullable: true
        - description: Filter Audit logs by starting UTC date.
          in: query
          name: fromUtcDateTime
          schema:
            format: date-time
            nullable: true
            type: string
        - description: Filter Audit logs by ending UTC date.
          in: query
          name: toUtcDateTime
          schema:
            format: date-time
            nullable: true
            type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                items:
                  $ref: "#/components/schemas/AuditLogItemModel"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AuditLogItemModel"
                type: array
          description: ""
        "400":
          description: Bad request.
        "401":
          description: Unauthorized. In case of the Public Management API credentials are
            invalid.
        "404":
          description: Not found.
        "429":
          description: Too many requests. In case of the request rate exceeds the rate
            limits.
      summary: List Audit logs
      tags:
        - Audit logs
  "/v1/products/{productId}/configs":
    get:
      description: >-
        This endpoint returns the list of the Configs that belongs to the given
        Product identified by the

        `productId` parameter, which can be obtained from the [List Products](#operation/get-products) endpoint.
      operationId: get-configs
      parameters:
        - description: The identifier of the Product.
          in: path
          name: productId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                items:
                  $ref: "#/components/schemas/ConfigModel-haljson"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ConfigModel"
                type: array
          description: ""
        "400":
          description: Bad request.
        "401":
          description: Unauthorized. In case of the Public Management API credentials are
            invalid.
        "404":
          description: Not found.
        "429":
          description: Too many requests. In case of the request rate exceeds the rate
            limits.
      summary: List Configs
      tags:
        - Configs
  "/v1/products/{productId}/environments":
    get:
      description: >-
        This endpoint returns the list of the Environments that belongs to the
        given Product identified by the

        `productId` parameter, which can be obtained from the [List Products](#operation/get-products) endpoint.
      operationId: get-environments
      parameters:
        - description: The identifier of the Product.
          in: path
          name: productId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                items:
                  $ref: "#/components/schemas/EnvironmentModel"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/EnvironmentModel"
                type: array
          description: ""
        "400":
          description: Bad request.
        "401":
          description: Unauthorized. In case of the Public Management API credentials are
            invalid.
        "404":
          description: Not found.
        "429":
          description: Too many requests. In case of the request rate exceeds the rate
            limits.
      summary: List Environments
      tags:
        - Environments
    post:
      description: >-
        This endpoint creates a new Environment in a specified Product 

        identified by the `productId` parameter, which can be obtained from the [List Products](#operation/get-products) endpoint.
      operationId: create-environment
      parameters:
        - description: The identifier of the Product.
          in: path
          name: productId
          required: true
          schema:
            format: uuid
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/CreateEnvironmentModel"
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEnvironmentModel"
          text/json:
            schema:
              $ref: "#/components/schemas/CreateEnvironmentModel"
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EnvironmentModel"
            application/json:
              schema:
                $ref: "#/components/schemas/EnvironmentModel"
          description: ""
        "400":
          description: Bad request.
        "401":
          description: Unauthorized. In case of the Public Management API credentials are
            invalid.
        "404":
          description: Not found.
        "429":
          description: Too many requests. In case of the request rate exceeds the rate
            limits.
      summary: Create Environment
      tags:
        - Environments
  "/v1/settings/{settingId}":
    delete:
      description: >-
        This endpoint removes a Feature Flag or Setting from a specified
        Config, 

        identified by the `configId` parameter.
      operationId: delete-setting
      parameters:
        - description: The identifier of the Setting.
          in: path
          name: settingId
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "204":
          description: When the delete was successful.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized. In case of the Public Management API credentials are
            invalid.
        "404":
          description: Not found.
        "429":
          description: Too many requests. In case of the request rate exceeds the rate
            limits.
      summary: Delete Flag
      tags:
        - Feature Flags & Settings
    get:
      description: >-
        This endpoint returns the metadata attributes of a Feature Flag or
        Setting 

        identified by the `settingId` parameter.
      operationId: get-setting
      parameters:
        - description: The identifier of the Setting.
          in: path
          name: settingId
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/SettingModel"
            application/json:
              schema:
                $ref: "#/components/schemas/SettingModel"
          description: When everything is ok, the setting data returned.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized. In case of the Public Management API credentials are
            invalid.
        "404":
          description: Not found.
        "429":
          description: Too many requests. In case of the request rate exceeds the rate
            limits.
      summary: Get Flag
      tags:
        - Feature Flags & Settings
    patch:
      description: >-
        This endpoint updates the metadata of a Feature Flag or Setting 

        with a collection of [JSON Patch](http://jsonpatch.com) operations in a specified Config.


        Only the `name` and `hint` attributes are modifiable by this endpoint.


        The advantage of using JSON Patch is that you can describe individual update operations on a resource

        without touching attributes that you don't want to change.


        For example: We have the following resource.

        ```

        {
        	"settingId": 5345,
        	"key": "myAwesomeFeature",
        	"name": "Tihs is a naem with soem typos.",
        	"hint": "This Flag controls my awesome feature.",
        	"settingType": "boolean"
        }

        ```

        If we send an update request body as below:

        ```

        [
        	{
        		"op": "replace",
        		"path": "/name",
        		"value": "This is the name without typos."
        	}
        ]

        ```

        Only the name is going to be updated and all the other attributes are remaining unchanged.

        So we get a response like this:

        ```

        {
        	"settingId": 5345,
        	"key": "myAwesomeFeature",
        	"name": "This is the name without typos.",
        	"hint": "This Flag controls my awesome feature.",
        	"settingType": "boolean"
        }

        ```
      operationId: update-setting
      parameters:
        - description: The identifier of the Setting.
          in: path
          name: settingId
          required: true
          schema:
            format: int32
            type: integer
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: "#/components/schemas/Operation"
              type: array
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Operation"
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: "#/components/schemas/Operation"
              type: array
          text/json:
            schema:
              items:
                $ref: "#/components/schemas/Operation"
              type: array
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/SettingModel"
            application/json:
              schema:
                $ref: "#/components/schemas/SettingModel"
          description: When the update was successful.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized. In case of the Public Management API credentials are
            invalid.
        "404":
          description: Not found.
        "429":
          description: Too many requests. In case of the request rate exceeds the rate
            limits.
      summary: Update Flag
      tags:
        - Feature Flags & Settings
  "/v1/settings/{settingKeyOrId}/value":
    get:
      description: >-
        This endpoint returns the value of a Feature Flag or Setting 

        in a specified Environment identified by the <a target="_blank" href="https://app.configcat.com/sdkkey">SDK key</a> passed in the `X-CONFIGCAT-SDKKEY` header.


        The most important attributes in the response are the `value`, `rolloutRules` and `percentageRules`.

        The `value` represents what the clients will get when the evaluation requests of our SDKs 

        are not matching to any of the defined Targeting or Percentage Rules, or when there are no additional rules to evaluate.


        The `rolloutRules` and `percentageRules` attributes are representing the current 

        Targeting and Percentage Rules configuration of the actual Feature Flag or Setting 

        in an **ordered** collection, which means the order of the returned rules is matching to the

        evaluation order. You can read more about these rules [here](https://configcat.com/docs/advanced/targeting/).
      operationId: get-setting-value-by-sdkkey
      parameters:
        - description: The key or id of the Setting.
          in: path
          name: settingKeyOrId
          required: true
          schema:
            type: string
        - description: The ConfigCat SDK Key. (https://app.configcat.com/sdkkey)
          in: header
          name: X-CONFIGCAT-SDKKEY
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/SettingValueModel-haljson"
            application/json:
              schema:
                $ref: "#/components/schemas/SettingValueModel"
          description: ""
        "400":
          description: Bad request.
        "401":
          description: Unauthorized. In case of the Public Management API credentials are
            invalid.
        "404":
          description: Not found.
        "429":
          description: Too many requests. In case of the request rate exceeds the rate
            limits.
      summary: Get value
      tags:
        - Feature Flag & Setting values using SDK Key
    patch:
      description: >-
        This endpoint updates the value of a Feature Flag or Setting 

        with a collection of [JSON Patch](http://jsonpatch.com) operations in a specified Environment

        identified by the <a target="_blank" href="https://app.configcat.com/sdkkey">SDK key</a> passed in the `X-CONFIGCAT-SDKKEY` header.


        Only the `value`, `rolloutRules` and `percentageRules` attributes are modifiable by this endpoint.


        The advantage of using JSON Patch is that you can describe individual update operations on a resource

        without touching attributes that you don't want to change. It supports collection reordering, so it also 

        can be used for reordering the targeting rules of a Feature Flag or Setting.


        For example: We have the following resource.

        ```

        {
        	"rolloutPercentageItems": [
        		{
        			"percentage": 30,
        			"value": true
        		},
        		{
        			"percentage": 70,
        			"value": false
        		}
        	],
        	"rolloutRules": [],
        	"value": false
        }

        ```

        If we send an update request body as below:

        ```

        [
        	{
        		"op": "replace",
        		"path": "/value",
        		"value": true
        	}
        ]

        ```

        Only the default served value is going to be set to `true` and all the Percentage Rules are remaining unchanged.

        So we get a response like this:

        ```

        {
        	"rolloutPercentageItems": [
        		{
        			"percentage": 30,
        			"value": true
        		},
        		{
        			"percentage": 70,
        			"value": false
        		}
        	],
        	"rolloutRules": [],
        	"value": true
        }

        ```
      operationId: update-setting-value-by-sdkkey
      parameters:
        - description: The key or id of the Setting.
          in: path
          name: settingKeyOrId
          required: true
          schema:
            type: string
        - description: The reason note for the Audit Log if the Product's "Config changes
            require a reason" preference is turned on.
          in: query
          name: reason
          schema:
            nullable: true
            type: string
        - description: The ConfigCat SDK Key. (https://app.configcat.com/sdkkey)
          in: header
          name: X-CONFIGCAT-SDKKEY
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            examples:
              add percentage rules:
                description: This example adds two items to the percentage evaluation rules.
                value:
                  - op: add
                    path: /rolloutPercentageItems/-
                    value:
                      percentage: 30
                      value: true
                  - op: add
                    path: /rolloutPercentageItems/-
                    value:
                      percentage: 70
                      value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation rules.
                value:
                  - op: add
                    path: /rolloutRules/-
                    value:
                      comparator: contains
                      comparisonAttribute: Identifier
                      comparisonValue: "@example.com"
                      value: true
                  - op: add
                    path: /rolloutRules/-
                    value:
                      comparator: isOneOf
                      comparisonAttribute: Identifier
                      comparisonValue: "@blacklist.com"
                      value: false
              reorder targeting rules:
                description: This example swaps the first and the second targeting evaluation
                  rule.
                value:
                  - from: /rolloutRules/0
                    op: move
                    path: /rolloutRules/1
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                  - op: replace
                    path: /value
                    value: true
            schema:
              items:
                $ref: "#/components/schemas/Operation"
              type: array
          application/json:
            examples:
              add percentage rules:
                description: This example adds two items to the percentage evaluation rules.
                value:
                  - op: add
                    path: /rolloutPercentageItems/-
                    value:
                      percentage: 30
                      value: true
                  - op: add
                    path: /rolloutPercentageItems/-
                    value:
                      percentage: 70
                      value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation rules.
                value:
                  - op: add
                    path: /rolloutRules/-
                    value:
                      comparator: contains
                      comparisonAttribute: Identifier
                      comparisonValue: "@example.com"
                      value: true
                  - op: add
                    path: /rolloutRules/-
                    value:
                      comparator: isOneOf
                      comparisonAttribute: Identifier
                      comparisonValue: "@blacklist.com"
                      value: false
              reorder targeting rules:
                description: This example swaps the first and the second targeting evaluation
                  rule.
                value:
                  - from: /rolloutRules/0
                    op: move
                    path: /rolloutRules/1
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                  - op: replace
                    path: /value
                    value: true
            schema:
              items:
                $ref: "#/components/schemas/Operation"
              type: array
          application/json-patch+json:
            examples:
              add percentage rules:
                description: This example adds two items to the percentage evaluation rules.
                value:
                  - op: add
                    path: /rolloutPercentageItems/-
                    value:
                      percentage: 30
                      value: true
                  - op: add
                    path: /rolloutPercentageItems/-
                    value:
                      percentage: 70
                      value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation rules.
                value:
                  - op: add
                    path: /rolloutRules/-
                    value:
                      comparator: contains
                      comparisonAttribute: Identifier
                      comparisonValue: "@example.com"
                      value: true
                  - op: add
                    path: /rolloutRules/-
                    value:
                      comparator: isOneOf
                      comparisonAttribute: Identifier
                      comparisonValue: "@blacklist.com"
                      value: false
              reorder targeting rules:
                description: This example swaps the first and the second targeting evaluation
                  rule.
                value:
                  - from: /rolloutRules/0
                    op: move
                    path: /rolloutRules/1
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                  - op: replace
                    path: /value
                    value: true
            schema:
              items:
                $ref: "#/components/schemas/Operation"
              type: array
          text/json:
            examples:
              add percentage rules:
                description: This example adds two items to the percentage evaluation rules.
                value:
                  - op: add
                    path: /rolloutPercentageItems/-
                    value:
                      percentage: 30
                      value: true
                  - op: add
                    path: /rolloutPercentageItems/-
                    value:
                      percentage: 70
                      value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation rules.
                value:
                  - op: add
                    path: /rolloutRules/-
                    value:
                      comparator: contains
                      comparisonAttribute: Identifier
                      comparisonValue: "@example.com"
                      value: true
                  - op: add
                    path: /rolloutRules/-
                    value:
                      comparator: isOneOf
                      comparisonAttribute: Identifier
                      comparisonValue: "@blacklist.com"
                      value: false
              reorder targeting rules:
                description: This example swaps the first and the second targeting evaluation
                  rule.
                value:
                  - from: /rolloutRules/0
                    op: move
                    path: /rolloutRules/1
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                  - op: replace
                    path: /value
                    value: true
            schema:
              items:
                $ref: "#/components/schemas/Operation"
              type: array
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/SettingValueModel-haljson"
            application/json:
              schema:
                $ref: "#/components/schemas/SettingValueModel"
          description: ""
        "204":
          description: When no change applied on the resource.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized. In case of the Public Management API credentials are
            invalid.
        "404":
          description: Not found.
        "429":
          description: Too many requests. In case of the request rate exceeds the rate
            limits.
      summary: Update value
      tags:
        - Feature Flag & Setting values using SDK Key
    put:
      description: >-
        This endpoint replaces the value of a Feature Flag or Setting 

        in a specified Environment identified by the <a target="_blank" href="https://app.configcat.com/sdkkey">SDK key</a> passed in the `X-CONFIGCAT-SDKKEY` header.


        Only the `value`, `rolloutRules` and `percentageRules` attributes are modifiable by this endpoint.


        **Important:** As this endpoint is doing a complete replace, it's important to set every other attribute that you don't 

        want to change to its original state. Not listing one means that it will reset.


        For example: We have the following resource.

        ```

        {
        	"rolloutPercentageItems": [
        		{
        			"percentage": 30,
        			"value": true
        		},
        		{
        			"percentage": 70,
        			"value": false
        		}
        	],
        	"rolloutRules": [],
        	"value": false
        }

        ```

        If we send a replace request body as below:

        ```

        {
        	"value": true
        }

        ```

        Then besides that the default served value is set to `true`, all the Percentage Rules are deleted. 

        So we get a response like this:

        ```

        {
        	"rolloutPercentageItems": [],
        	"rolloutRules": [],
        	"value": true
        }

        ```
      operationId: replace-setting-value-by-sdkkey
      parameters:
        - description: The key or id of the Setting.
          in: path
          name: settingKeyOrId
          required: true
          schema:
            type: string
        - description: The reason note for the Audit Log if the Product's "Config changes
            require a reason" preference is turned on.
          in: query
          name: reason
          schema:
            nullable: true
            type: string
        - description: The ConfigCat SDK Key. (https://app.configcat.com/sdkkey)
          in: header
          name: X-CONFIGCAT-SDKKEY
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            examples:
              advanced:
                description: This example turns on a feature flag and adds two items to its
                  percentage evaluation rules.
                value:
                  rolloutPercentageItems:
                    - percentage: 30
                      value: true
                    - percentage: 70
                      value: false
                  value: true
              simple:
                description: This example turns on a feature flag.
                value:
                  value: true
            schema:
              $ref: "#/components/schemas/UpdateSettingValueModel"
          application/json:
            examples:
              advanced:
                description: This example turns on a feature flag and adds two items to its
                  percentage evaluation rules.
                value:
                  rolloutPercentageItems:
                    - percentage: 30
                      value: true
                    - percentage: 70
                      value: false
                  value: true
              simple:
                description: This example turns on a feature flag.
                value:
                  value: true
            schema:
              $ref: "#/components/schemas/UpdateSettingValueModel"
          text/json:
            examples:
              advanced:
                description: This example turns on a feature flag and adds two items to its
                  percentage evaluation rules.
                value:
                  rolloutPercentageItems:
                    - percentage: 30
                      value: true
                    - percentage: 70
                      value: false
                  value: true
              simple:
                description: This example turns on a feature flag.
                value:
                  value: true
            schema:
              $ref: "#/components/schemas/UpdateSettingValueModel"
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/SettingValueModel-haljson"
            application/json:
              schema:
                $ref: "#/components/schemas/SettingValueModel"
          description: ""
        "400":
          description: Bad request.
        "401":
          description: Unauthorized. In case of the Public Management API credentials are
            invalid.
        "404":
          description: Not found.
        "429":
          description: Too many requests. In case of the request rate exceeds the rate
            limits.
      summary: Replace value
      tags:
        - Feature Flag & Setting values using SDK Key
components:
  schemas:
    AddOrUpdateIntegrationLinkModel:
      additionalProperties: false
      properties:
        description:
          maxLength: 1000
          nullable: true
          type: string
        url:
          maxLength: 1000
          nullable: true
          type: string
      type: object
    AuditLogItemModel:
      additionalProperties: false
      properties:
        actionTarget:
          nullable: true
          type: string
        auditLogDateTime:
          format: date-time
          type: string
        auditLogId:
          format: int64
          type: integer
        auditLogType:
          nullable: true
          type: string
        details:
          nullable: true
          type: string
        userEmail:
          nullable: true
          type: string
        userName:
          nullable: true
          type: string
        where:
          nullable: true
          type: string
        why:
          nullable: true
          type: string
      type: object
    AuditLogType:
      enum:
        - productCreated
        - productChanged
        - productOwnershipTransferred
        - productDeleted
        - teamMemberInvited
        - teamMemberInvitationRevoked
        - teamMemberJoined
        - teamMemberPermissionGroupChanged
        - teamMemberRemoved
        - teamMemberLeft
        - teamMemberInvitationChanged
        - teamMemberInvitationResent
        - teamMemberInvitationRejected
        - configCreated
        - configChanged
        - configDeleted
        - environmentCreated
        - environmentChanged
        - environmentDeleted
        - settingCreated
        - settingChanged
        - settingDeleted
        - settingValueChanged
        - webHookCreated
        - webHookChanged
        - webHookDeleted
        - subscriptionChanged
        - memberGroupCreated
        - memberGroupChanged
        - memberGroupDeleted
        - apiKeyAdded
        - apiKeyRemoved
        - integrationAdded
        - integrationChanged
        - integrationRemoved
        - apiKeyConnected
        - integrationLinkAdded
        - integrationLinkRemoved
        - organizationAdded
        - organizationRemoved
        - organizationChanged
        - organizationSubscriptionTypeChanged
        - organizationAdminAdded
        - organizationAdminChanged
        - organizationAdminRemoved
        - organizationAdminLeft
        - tagAdded
        - tagChanged
        - tagRemoved
        - settingTagAdded
        - settingTagRemoved
        - publicApiAccessTokenAdded
        - publicApiAccessTokenRemoved
      type: string
    ConfigModel:
      additionalProperties: false
      properties:
        configId:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
      type: object
    ConfigModel-haljson:
      properties:
        _links:
          properties:
            settings:
              type: string
          type: object
        configId:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
      type: object
    CreateEnvironmentModel:
      additionalProperties: false
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
      required:
        - name
      type: object
    CreateSettingModel:
      additionalProperties: false
      properties:
        hint:
          description: A short description for the setting, shown on the Dashboard UI.
          maxLength: 1000
          minLength: 0
          nullable: true
          type: string
        key:
          description: The key of the setting.
          maxLength: 255
          minLength: 0
          pattern: ^[a-zA-Z]+[a-zA-Z0-9_]*
          type: string
        name:
          description: The name of the setting, shown on the Dashboard UI.
          maxLength: 255
          minLength: 0
          type: string
        settingType:
          $ref: "#/components/schemas/SettingType"
      required:
        - key
        - name
        - settingType
      type: object
    DeleteIntegrationLinkModel:
      additionalProperties: false
      properties:
        hasRemainingIntegrationLink:
          type: boolean
      type: object
    EnvironmentModel:
      additionalProperties: false
      properties:
        environmentId:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
      type: object
    IntegrationLinkDetail:
      additionalProperties: false
      properties:
        config:
          $ref: "#/components/schemas/ConfigModel"
        environment:
          $ref: "#/components/schemas/EnvironmentModel"
        product:
          $ref: "#/components/schemas/ProductModel"
        readOnly:
          type: boolean
        setting:
          $ref: "#/components/schemas/SettingDataModel"
        status:
          nullable: true
          type: string
      type: object
    IntegrationLinkDetailsModel:
      additionalProperties: false
      properties:
        allIntegrationLinkCount:
          format: int32
          type: integer
        details:
          items:
            $ref: "#/components/schemas/IntegrationLinkDetail"
          nullable: true
          readOnly: true
          type: array
      type: object
    IntegrationLinkModel:
      additionalProperties: false
      properties:
        description:
          nullable: true
          type: string
        integrationLinkType:
          $ref: "#/components/schemas/IntegrationLinkType"
        key:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
      type: object
    IntegrationLinkType:
      enum:
        - trello
        - jira
      type: string
    MeModel:
      additionalProperties: false
      properties:
        email:
          nullable: true
          readOnly: true
          type: string
        fullName:
          nullable: true
          readOnly: true
          type: string
      type: object
    Operation:
      additionalProperties: false
      properties:
        from:
          nullable: true
          type: string
        op:
          nullable: true
          type: string
        path:
          nullable: true
          type: string
        value:
          additionalProperties: false
          nullable: true
          type: object
      type: object
    OrganizationModel:
      additionalProperties: false
      properties:
        name:
          nullable: true
          type: string
        organizationId:
          format: uuid
          type: string
      type: object
    ProductModel:
      additionalProperties: false
      properties:
        name:
          nullable: true
          type: string
        organization:
          $ref: "#/components/schemas/OrganizationModel"
        productId:
          format: uuid
          type: string
      type: object
    ProductModel-haljson:
      properties:
        _embedded:
          properties:
            organization:
              additionalProperties: false
              properties:
                name:
                  nullable: true
                  type: string
                organizationId:
                  format: uuid
                  type: string
              type: object
          type: object
        _links:
          properties:
            configs:
              type: string
            environments:
              type: string
          type: object
        name:
          nullable: true
          type: string
        productId:
          format: uuid
          type: string
      type: object
    RolloutPercentageItemModel:
      additionalProperties: false
      properties:
        percentage:
          description: The percentage value for the rule.
          format: int64
          type: integer
        value:
          additionalProperties: false
          description: The value to serve when the user falls in the percentage rule. It
            must respect the setting type.
          type: object
      required:
        - percentage
        - value
      type: object
    RolloutRuleComparator:
      enum:
        - isOneOf
        - isNotOneOf
        - contains
        - doesNotContain
        - semVerIsOneOf
        - semVerIsNotOneOf
        - semVerLess
        - semVerLessOrEquals
        - semVerGreater
        - semVerGreaterOrEquals
        - numberEquals
        - numberDoesNotEqual
        - numberLess
        - numberLessOrEquals
        - numberGreater
        - numberGreaterOrEquals
        - sensitiveIsOneOf
        - sensitiveIsNotOneOf
      type: string
    RolloutRuleModel:
      additionalProperties: false
      properties:
        comparator:
          $ref: "#/components/schemas/RolloutRuleComparator"
        comparisonAttribute:
          description: The user attribute to compare.
          maxLength: 1000
          minLength: 0
          type: string
        comparisonValue:
          description: The value to compare against.
          maxLength: 65535
          minLength: 0
          type: string
        value:
          additionalProperties: false
          description: The value to serve when the comparison matches. It must respect the
            setting type.
          type: object
      required:
        - comparisonAttribute
        - comparisonValue
        - value
      type: object
    SettingDataModel:
      additionalProperties: false
      properties:
        hint:
          nullable: true
          readOnly: true
          type: string
        key:
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          readOnly: true
          type: string
        settingId:
          format: int32
          readOnly: true
          type: integer
        settingType:
          $ref: "#/components/schemas/SettingType"
      type: object
    SettingModel:
      additionalProperties: false
      properties:
        hint:
          nullable: true
          type: string
        key:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        settingId:
          format: int32
          type: integer
        settingType:
          $ref: "#/components/schemas/SettingType"
      type: object
    SettingTagModel:
      additionalProperties: false
      properties:
        color:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        settingTagId:
          format: int64
          type: integer
        tagId:
          format: int64
          type: integer
      type: object
    SettingType:
      enum:
        - boolean
        - string
        - int
        - double
      type: string
    SettingValueModel:
      additionalProperties: false
      properties:
        config:
          $ref: "#/components/schemas/ConfigModel"
        environment:
          $ref: "#/components/schemas/EnvironmentModel"
        integrationLinks:
          items:
            $ref: "#/components/schemas/IntegrationLinkModel"
          nullable: true
          type: array
        readOnly:
          type: boolean
        rolloutPercentageItems:
          description: The percentage rule collection.
          items:
            $ref: "#/components/schemas/RolloutPercentageItemModel"
          nullable: true
          type: array
        rolloutRules:
          description: The targeting rule collection.
          items:
            $ref: "#/components/schemas/RolloutRuleModel"
          nullable: true
          type: array
        setting:
          $ref: "#/components/schemas/SettingDataModel"
        settingTags:
          items:
            $ref: "#/components/schemas/SettingTagModel"
          nullable: true
          type: array
        value:
          additionalProperties: false
          description: The value to serve. It must respect the setting type.
          nullable: true
          type: object
      type: object
    SettingValueModel-haljson:
      properties:
        _embedded:
          properties:
            config:
              properties:
                _links:
                  properties:
                    settings:
                      type: string
                  type: object
                configId:
                  format: uuid
                  type: string
                name:
                  nullable: true
                  type: string
              type: object
            environment:
              additionalProperties: false
              properties:
                environmentId:
                  format: uuid
                  type: string
                name:
                  nullable: true
                  type: string
              type: object
            integrationLinks:
              items:
                additionalProperties: false
                properties:
                  description:
                    nullable: true
                    type: string
                  integrationLinkType:
                    $ref: "#/components/schemas/IntegrationLinkType"
                  key:
                    nullable: true
                    type: string
                  url:
                    nullable: true
                    type: string
                type: object
              type: array
            setting:
              additionalProperties: false
              properties:
                hint:
                  nullable: true
                  readOnly: true
                  type: string
                key:
                  nullable: true
                  readOnly: true
                  type: string
                name:
                  nullable: true
                  readOnly: true
                  type: string
                settingId:
                  format: int32
                  readOnly: true
                  type: integer
                settingType:
                  $ref: "#/components/schemas/SettingType"
              type: object
            settingTags:
              items:
                additionalProperties: false
                properties:
                  color:
                    nullable: true
                    type: string
                  name:
                    nullable: true
                    type: string
                  settingTagId:
                    format: int64
                    type: integer
                  tagId:
                    format: int64
                    type: integer
                type: object
              type: array
          type: object
        _links:
          properties:
            self:
              type: string
          type: object
        readOnly:
          type: boolean
        rolloutPercentageItems:
          description: The percentage rule collection.
          items:
            $ref: "#/components/schemas/RolloutPercentageItemModel"
          nullable: true
          type: array
        rolloutRules:
          description: The targeting rule collection.
          items:
            $ref: "#/components/schemas/RolloutRuleModel"
          nullable: true
          type: array
        value:
          additionalProperties: false
          description: The value to serve. It must respect the setting type.
          nullable: true
          type: object
      type: object
    UpdateEnvironmentModel:
      additionalProperties: false
      properties:
        name:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    UpdateSettingValueModel:
      additionalProperties: false
      properties:
        rolloutPercentageItems:
          description: The percentage rule collection.
          items:
            $ref: "#/components/schemas/RolloutPercentageItemModel"
          nullable: true
          type: array
        rolloutRules:
          description: The targeting rule collection.
          items:
            $ref: "#/components/schemas/RolloutRuleModel"
          nullable: true
          type: array
        value:
          additionalProperties: false
          description: The value to serve. It must respect the setting type.
          nullable: true
          type: object
      type: object
  securitySchemes:
    Basic:
      description: >-
        To authenticate with the API you have to fill the `Authorization` HTTP
        request header with your Public API credentials.


        You can create your credentials on the <a target="_blank" href="https://app.configcat.com/my-account/public-api-credentials">Public API credentials management page</a>.
      scheme: Basic
      type: http
x-tagGroups:
  - name: Feature Flag values
    tags:
      - Feature Flag & Setting values using SDK Key
      - Feature Flag & Setting values
  - name: Feature Flag metadata
    tags:
      - Feature Flags & Settings
  - name: General
    tags:
      - Products
      - Configs
      - Environments
  - name: Diagnostics
    tags:
      - Audit logs
      - Me
