openapi: 3.0.0
servers:
  - url: https://ws.api.video
info:
  description: api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
  title: api.video
  version: "1"
  x-apisguru-categories:
    - media
  x-logo:
    url: https://www.datocms-assets.com/26885/1588249863-favicon.png?w=57&h=57
  x-origin:
    - format: openapi
      url: https://docs.api.video/openapi/5f0d4679158b8d006ea6f068
      version: "3.0"
  x-providerName: api.video
  x-preferred: null
paths:
  /account:
    get:
      operationId: GET_account
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    environment: production
                    features:
                      - app.dynamic_metadata
                      - app.event_log
                      - player.white_label
                      - stats.player_events
                      - transcode.mp4_support
                    quota:
                      quotaRemaining: 54
                      quotaTotal: 60
                      quotaUsed: 6
              schema:
                properties:
                  environment:
                    type: string
                  features:
                    items:
                      type: string
                    type: array
                  quota:
                    properties:
                      quotaRemaining:
                        type: number
                      quotaTotal:
                        type: number
                      quotaUsed:
                        type: number
                    type: object
                type: object
          description: ""
        "404":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: ""
                    status: 404
                    title: The requested resource was not found.
                    type: https://docs.api.video/docs/resourcenot_found
              schema:
                $ref: "#/components/schemas/not-found"
          description: ""
      security:
        - bearerAuth: []
      summary: Show account
      tags:
        - Account
  "/analytics/live-streams/{liveStreamId}":
    get:
      operationId: GET_analytics-live-streams-liveStreamId
      parameters:
        - in: path
          name: liveStreamId
          required: true
          schema:
            type: string
        - description: >
            Period must have one of the following formats: 


            - For a day : 2018-01-01,

            - For a week: 2018-W01, 

            - For a month: 2018-01

            - For a year: 2018


            For a range period: 

            -  Date range: 2018-01-01/2018-01-15
          in: query
          name: period
          required: false
          schema:
            format: date
            type: string
        - description: Number of the page to display
          in: query
          name: currentPage
          required: false
          schema:
            default: 1
            minimum: 1
            type: integer
        - description: Expected number of items to display on the page. Might be lower on the last page
          in: query
          name: pageSize
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    data:
                      - client:
                          name: Firefox
                          type: browser
                          version: "61.0"
                        device:
                          model: unknown
                          type: desktop
                          vendor: unknown
                        location:
                          city: Paris
                          country: France
                        os:
                          name: unknown
                          shortname: unknown
                          version: unknown
                        referrer:
                          medium: unknown
                          searchTerm: unknown
                          source: unknown
                          url: unknown
                        session:
                          endedAt: 2018-09-11 14:47:22.186+00
                          loadedAt: 2018-09-11 13:04:37.89+00
                          sessionId: ps4zRWVOv2If2vzKJLMr3jQo
                    pagination:
                      currentPage: 1
                      currentPageItems: 1
                      itemsTotal: 1
                      links:
                        - rel: self
                          uri: /analytics/sessions/ps4zRWVOv2If2vzKJLMr3jQo?currentPage=1&pageSize=25
                        - rel: first
                          uri: /analytics/sessions/ps4zRWVOv2If2vzKJLMr3jQo?currentPage=1&pageSize=25
                        - rel: last
                          uri: /analytics/sessions/ps4zRWVOv2If2vzKJLMr3jQo?currentPage=1&pageSize=25
                      pageSize: 25
                      pagesTotal: 1
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/live-stream-session"
                    type: array
                  pagination:
                    $ref: "#/components/schemas/pagination"
                type: object
          description: ""
        "404":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: liveStreamId
                    status: 404
                    title: The requested resource was not found.
                    type: https://docs.api.video/docs/resourcenot_found
              schema:
                $ref: "#/components/schemas/not-found"
          description: ""
      security:
        - bearerAuth: []
      summary: List live stream player sessions
      tags:
        - Raw statistics
  "/analytics/sessions/{sessionId}/events":
    get:
      description: Useful to track and measure video's engagement.
      operationId: GET_analytics-sessions-sessionId-events
      parameters:
        - in: path
          name: sessionId
          required: true
          schema:
            type: string
        - description: Number of the page to display
          in: query
          name: currentPage
          required: false
          schema:
            default: 1
            minimum: 1
            type: integer
        - description: Expected number of items to display on the page. Might be lower on the last page
          in: query
          name: pageSize
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    data:
                      - at: 0
                        emittedAt: 2020-09-15T09:47:42+00:00
                        type: ready
                      - at: 0
                        emittedAt: 2020-09-15T21:35:57+00:00
                        type: play
                      - at: 7
                        emittedAt: 2020-09-15T21:36:05+00:00
                        type: pause
                      - at: 21
                        emittedAt: 2020-09-15T21:36:19+00:00
                        type: resume
                      - emittedAt: 2020-09-15T21:36:19+00:00
                        from: 7
                        to: 21
                        type: seek.forward
                      - at: 30
                        emittedAt: 2020-09-15T21:36:28+00:00
                        type: end
                      - at: 0
                        emittedAt: 2020-09-15T21:36:29+00:00
                        type: play
                      - emittedAt: 2020-09-15T21:36:29+00:00
                        from: 30
                        to: 0
                        type: seek.backward
                      - at: 21
                        emittedAt: 2020-09-15T21:36:29+00:00
                        type: pause
                      - at: 21
                        emittedAt: 2020-09-15T21:36:30+00:00
                        type: resume
                      - emittedAt: 2020-09-15T21:36:30+00:00
                        from: 0
                        to: 21
                        type: seek.forward
                      - at: 20
                        emittedAt: 2020-09-15T21:36:33+00:00
                        type: pause
                      - at: 20
                        emittedAt: 2020-09-15T21:36:33+00:00
                        type: resume
                      - emittedAt: 2020-09-15T21:36:33+00:00
                        from: 24
                        to: 20
                        type: seek.backward
                      - at: 17
                        emittedAt: 2020-09-15T21:36:39+00:00
                        type: pause
                      - at: 17
                        emittedAt: 2020-09-15T21:36:39+00:00
                        type: resume
                      - emittedAt: 2020-09-15T21:36:39+00:00
                        from: 17
                        to: 17
                        type: seek.forward
                      - at: 19
                        emittedAt: 2020-09-15T21:36:41+00:00
                        type: pause
                      - at: 0
                        emittedAt: 2020-09-17T09:20:47+00:00
                        type: ready
                      - at: 0
                        emittedAt: 2020-09-17T09:41:01+00:00
                        type: ready
                      - at: 0
                        emittedAt: 2020-09-17T09:41:08+00:00
                        type: ready
                      - at: 0
                        emittedAt: 2020-09-17T09:41:10+00:00
                        type: play
                      - at: 1
                        emittedAt: 2020-09-17T09:41:12+00:00
                        type: pause
                      - at: 1
                        emittedAt: 2020-09-17T09:41:13+00:00
                        type: resume
                      - at: 3
                        emittedAt: 2020-09-17T09:41:15+00:00
                        type: pause
                    pagination:
                      currentPage: 1
                      currentPageItems: 25
                      itemsTotal: 30
                      links:
                        - rel: self
                          uri: /analytics/sessions/ps5ltuhfsTOeh6bP03Tq5OWc/events?currentPage=1&pageSize=25
                        - rel: first
                          uri: /analytics/sessions/ps5ltuhfsTOeh6bP03Tq5OWc/events?currentPage=1&pageSize=25
                        - rel: next
                          uri: /analytics/sessions/ps5ltuhfsTOeh6bP03Tq5OWc/events?currentPage=2&pageSize=25
                        - rel: last
                          uri: /analytics/sessions/ps5ltuhfsTOeh6bP03Tq5OWc/events?currentPage=2&pageSize=25
                      pageSize: 25
                      pagesTotal: 2
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/player-session-event"
                    type: array
                  pagination:
                    $ref: "#/components/schemas/pagination"
                type: object
          description: ""
        "404":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: videoId
                    status: 404
                    title: The requested resource was not found.
                    type: https://docs.api.video/docs/resourcenot_found
              schema:
                $ref: "#/components/schemas/not-found"
          description: ""
      security:
        - bearerAuth: []
      summary: List player session events
      tags:
        - Raw statistics
  "/analytics/videos/{videoId}":
    get:
      operationId: GET_analytics-videos-videoId
      parameters:
        - in: path
          name: videoId
          required: true
          schema:
            type: string
        - description: >
            Period must have one of the following formats: 


            - For a day : 2018-01-01,

            - For a week: 2018-W01, 

            - For a month: 2018-01

            - For a year: 2018


            For a range period: 

            -  Date range: 2018-01-01/2018-01-15
          in: query
          name: period
          required: false
          schema:
            format: date
            type: string
        - description: Metadata and Dynamic Metadata filter.
          explode: true
          in: query
          name: metadata
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Number of the page to display
          in: query
          name: currentPage
          required: false
          schema:
            default: 1
            minimum: 1
            type: integer
        - description: Expected number of items to display on the page. Might be lower on the last page
          in: query
          name: pageSize
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    data:
                      - client:
                          name: Firefox
                          type: browser
                          version: "67.0"
                        device:
                          model: unknown
                          type: desktop
                          vendor: Dell
                        location:
                          city: Paris
                          country: France
                        os:
                          name: Microsoft Windows
                          shortname: W10
                          version: Windows10
                        referrer:
                          medium: organic
                          searchTerm: video encoding hosting and delivery
                          source: https://google.com
                          url: https://api.video
                        session:
                          endedAt: 2019-06-24T11:49:19.243+00
                          loadedAt: 2019-06-24T11:45:01.109+00
                          sessionId: psEmFwGQUAXR2lFHj5nDOpy
                    pagination:
                      currentPage: 1
                      currentPageItems: 1
                      itemsTotal: 1
                      links:
                        - rel: self
                          uri: /analytics/sessions/psEmFwGQUAXR2lFHj5nDOpy?currentPage=1&pageSize=25
                        - rel: first
                          uri: /analytics/sessions/psEmFwGQUAXR2lFHj5nDOpy?currentPage=1&pageSize=25
                        - rel: last
                          uri: /analytics/sessions/psEmFwGQUAXR2lFHj5nDOpy?currentPage=1&pageSize=25
                      pageSize: 25
                      pagesTotal: 1
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/video-session"
                    type: array
                  pagination:
                    $ref: "#/components/schemas/pagination"
                type: object
          description: ""
        "404":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: videoId
                    status: 404
                    title: The requested resource was not found.
                    type: https://docs.api.video/docs/resourcenot_found
              schema:
                $ref: "#/components/schemas/not-found"
          description: ""
      security:
        - bearerAuth: []
      summary: List video player sessions
      tags:
        - Raw statistics
  /auth/api-key:
    post:
      description: To get started, submit your API key in the body of your request. api.video returns an access token that is valid for one hour (3600 seconds). A refresh token is also returned. View a [tutorial](https://api.video/blog/tutorials/authentication-tutorial) on authentication.
      operationId: POST_auth-api-key
      requestBody:
        content:
          application/json:
            schema:
              example:
                apiKey: 9VxMaPgsaFg7EBqmuspSzF7
              properties:
                apiKey:
                  description: Your account API key. You can use your sandbox API key, or you can use your production API key.
                  type: string
              required:
                - apiKey
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    access_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjUyZWM4NWUyMjFkODZjOWI0NDQ5NzBhMjQwMzUyOWQ4MDQyNGQ3ZmJjYjFlYWM2MjVlM2VkMjI2YWRlNTcxMDY2NDUyZDc0NjdhN2E4NjI0In0.eyJhdWQiOiJsaWJjYXN0IiwianRpIjoiNTJlYzg1ZTIyMWQ4NmM5YjQ0NDk3MGEyNDAzNTI5ZDgwNDI0ZDdmYmNiMWVhYzYyNWUzZWQyMjZhZGU1NzEwNjY0NTJkNzQ2N2E3YTg2MjQiLCJpYXQiOjE1MjUyNzYxNDcsIm5iZiI6MTUyNTI3NjE0NywiZXhwIjoxNTI1Mjc5NzQ3LCJzdWIiOiJ1c01vbml0b3IiLCJzY29wZXMiOlsibW9uaXRvci5saWJjYXN0LmNvbSJdLCJjb250ZXh0Ijp7InVzZXIiOiJ1c01vbml0b3IiLCJwcm9qZWN0IjoicHJNb25pdG9yIiwibWVtYmVyIjoibWVNb25pdG9yIn19.rUvishDNyJLNlI4W5VmguNecm5KD2uZgPkKJQbaqw-cJbSrVxkSbiKYtk_E3cz3WT7-IS2yFTsYN3uIo5Rbit8_HftweyEp2bdBRI8yjR6oZZ1sNJJXswISN1i2kk4r-aaxu7Xxf_LtsjOMUj_YZsvcc2nqBXPKjHbJCJryx3DDJaIcymOqao7nhQaCCQyrQooAXNTYs4E9fWN1dC_x2O-zok5TuG-xhEW-umwxfSUMWNgSTkz38ACceQ0PCJSgB3jqjDH4MwC7B3ppEPZuK5E6JhKeyRlalswRyYq3UQPnVeMTam7YQHsuTgbehF6WySW8i44o7V_MCe9hjPdp-WA
                    expires_in: 3600
                    refresh_token: def50200a28d88fb9aaa921be78eeb5604b071101a334899a7d5fc7492cf8ea752962ddc8961fe5c126101d4ecacd980396eb2fd494995b812dffcb98256c4277f790d1f658fc2d2e34f350740544e5232d69d68d34c648271d706c5e7049adac0b1832d0fdf71809715cc7e97fa63f65966deadb501a55ff469b0fd23a637cb6acbe9d9b8594a17f09efc2efeed82984764a0065d5e29c950c7b081a61ba2aaa192be3085c400ee37eac50fa9320ce2cfe8916c8165418d23e9f91b6a5c8515e1d74ee193a5a1ca01954fbff27361c20184240be2359e0afbed0bf1c762cf872450b5e8b5d4704f4fd9583e4470adc98409dd42965709712806bd9019378a72eea0b4912ce684ffd833db5806ab84174f905db2a75380071d004615c944bb8f8c4045cce7234c2be9a2330522cf7f067b8e58f57cffb6edb4b7ef91313e12bcde47e5e76ceee7fa52990132288f345d33ed917ae4fd54b7284f8964d898e97e1ee3bc4157f75d7fee63976e4be66ac1ec32ef74afa533f0eb593523f226cbec57d196ac8962
                    token_type: Bearer
              schema:
                $ref: "#/components/schemas/access-token"
          description: Success
        "400":
          content:
            application/json:
              examples:
                response:
                  value:
                    name: ""
                    status: 400
                    title: The user credentials were incorrect.
                    type: https://docs.api.video/docs/authenticationinvalid_credentials
              schema:
                $ref: "#/components/schemas/bad-request"
          description: Bad Request
      summary: Authenticate
      tags:
        - Authentication
  /auth/refresh:
    post:
      description: >
        Use the refresh endpoint with the refresh token you received when you first authenticated using the api-key endpoint. Send the refresh token in the body of your request. The api.video API returns a new access token that is valid for one hour (3600 seconds) and a new refresh token. 
      operationId: POST_auth-refresh
      requestBody:
        content:
          application/json:
            schema:
              example:
                refreshToken: def502005346d9cc2bd79a7793ab5bdabfefcaabfbb8c253f14733f1262077e1a3f38c4751d6d20f590c3784e531a82adc11f05fc1949aa46d5575aaa99cb84b9334ba66ac773576b5d7a418937ae337de62811d086dd42ad1164b12f87d67be6ffea18f2d50be9b95697b21c4d3c4372849bdb2287259cb80541570e913691a08b2fa33c85885930de15cebea627fc09f0255562ab3d39d87d4ff8fc02b00e252afcd480421dec7de9d1411176bcf669c527762e22294b453bc9ea06e9fa8ba5b873feb2ee14ce0a6a6ddd4b78c580631e210e9b9387265dc2bec9478a66a09dcdce1c40d2f856689e9d81742c9628a0b87b359e0b218ea1f07427eef89f999e47af89792f598e05847bd008fddc32ee63f4a601ffb4cd2ad08977f1c854ec358238322c918f05aa5a41f8a171dee497218408abc8283473f6112aeed7310815416a0fa36c63667e0ed014fa40b8992891bf58bae400d901c01450101c88f4978938ad138adc19cfe5698d60fd82cb27c586f6a8f70f4393c7c9e579df8739d46d249fb76d7
              properties:
                refreshToken:
                  description: >
                    The refresh token is either the first refresh token you received when you authenticated with the auth/api-key endpoint, or it's the refresh token from the last time you used the auth/refresh endpoint. Place this in the body of your request to obtain a new access token (which is valid for an hour) and a new refresh token.
                  type: string
              required:
                - refreshToken
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    access_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjUyZWM4NWUyMjFkODZjOWI0NDQ5NzBhMjQwMzUyOWQ4MDQyNGQ3ZmJjYjFlYWM2MjVlM2VkMjI2YWRlNTcxMDY2NDUyZDc0NjdhN2E4NjI0In0.eyJhdWQiOiJsaWJjYXN0IiwianRpIjoiNTJlYzg1ZTIyMWQ4NmM5YjQ0NDk3MGEyNDAzNTI5ZDgwNDI0ZDdmYmNiMWVhYzYyNWUzZWQyMjZhZGU1NzEwNjY0NTJkNzQ2N2E3YTg2MjQiLCJpYXQiOjE1MjUyNzYxNDcsIm5iZiI6MTUyNTI3NjE0NywiZXhwIjoxNTI1Mjc5NzQ3LCJzdWIiOiJ1c01vbml0b3IiLCJzY29wZXMiOlsibW9uaXRvci5saWJjYXN0LmNvbSJdLCJjb250ZXh0Ijp7InVzZXIiOiJ1c01vbml0b3IiLCJwcm9qZWN0IjoicHJNb25pdG9yIiwibWVtYmVyIjoibWVNb25pdG9yIn19.rUvishDNyJLNlI4W5VmguNecm5KD2uZgPkKJQbaqw-cJbSrVxkSbiKYtk_E3cz3WT7-IS2yFTsYN3uIo5Rbit8_HftweyEp2bdBRI8yjR6oZZ1sNJJXswISN1i2kk4r-aaxu7Xxf_LtsjOMUj_YZsvcc2nqBXPKjHbJCJryx3DDJaIcymOqao7nhQaCCQyrQooAXNTYs4E9fWN1dC_x2O-zok5TuG-xhEW-umwxfSUMWNgSTkz38ACceQ0PCJSgB3jqjDH4MwC7B3ppEPZuK5E6JhKeyRlalswRyYq3UQPnVeMTam7YQHsuTgbehF6WySW8i44o7V_MCe9hjPdp-WA
                    expires_in: 3600
                    refresh_token: def50200a28d88fb9aaa921be78eeb5604b071101a334899a7d5fc7492cf8ea752962ddc8961fe5c126101d4ecacd980396eb2fd494995b812dffcb98256c4277f790d1f658fc2d2e34f350740544e5232d69d68d34c648271d706c5e7049adac0b1832d0fdf71809715cc7e97fa63f65966deadb501a55ff469b0fd23a637cb6acbe9d9b8594a17f09efc2efeed82984764a0065d5e29c950c7b081a61ba2aaa192be3085c400ee37eac50fa9320ce2cfe8916c8165418d23e9f91b6a5c8515e1d74ee193a5a1ca01954fbff27361c20184240be2359e0afbed0bf1c762cf872450b5e8b5d4704f4fd9583e4470adc98409dd42965709712806bd9019378a72eea0b4912ce684ffd833db5806ab84174f905db2a75380071d004615c944bb8f8c4045cce7234c2be9a2330522cf7f067b8e58f57cffb6edb4b7ef91313e12bcde47e5e76ceee7fa52990132288f345d33ed917ae4fd54b7284f8964d898e97e1ee3bc4157f75d7fee63976e4be66ac1ec32ef74afa533f0eb593523f226cbec57d196ac8962
                    token_type: Bearer
              schema:
                $ref: "#/components/schemas/access-token"
          description: Success
        "400":
          content:
            application/json:
              examples:
                response:
                  value:
                    name: ""
                    status: 400
                    title: The user credentials were incorrect.
                    type: https://docs.api.video/docs/authenticationinvalid_credentials
              schema:
                $ref: "#/components/schemas/bad-request"
          description: Bad Request
      summary: Refresh token
      tags:
        - Authentication
  /live-streams:
    get:
      description: With no parameters added to the url, this will return all Livestreams. Query by name or Key to limit the list.
      operationId: GET_live-streams
      parameters:
        - in: query
          name: streamKey
          required: false
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - description: "Allowed: createdAt, publishedAt, name"
          in: query
          name: sortBy
          required: false
          schema:
            type: string
        - description: "Allowed: asc, desc"
          in: query
          name: sortOrder
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
        - description: Number of the page to display
          in: query
          name: currentPage
          required: false
          schema:
            default: 1
            minimum: 1
            type: integer
        - description: Expected number of items to display on the page. Might be lower on the last page
          in: query
          name: pageSize
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    data:
                      - assets:
                          hls: https://live.api.video/li400mYKSgQ6xs7taUeSaEKr.m3u8
                          iframe: <iframe src="https://embed.api.video/live/li400mYKSgQ6xs7taUeSaEKr" width="100%" height="100%" frameborder="0" scrolling="no" allowfullscreen=""></iframe>
                          player: https://embed.api.video/live/li400mYKSgQ6xs7taUeSaEKr
                          thumbnail: https://cdn.api.video/live/li400mYKSgQ6xs7taUeSaEKr/thumbnail.jpg
                        broadcasting: false
                        createdAt: 2020-01-31T10:17:47+00:00
                        liveStreamId: li400mYKSgQ6xs7taUeSaEKr
                        name: Live Stream From the browser
                        record: true
                        streamKey: 30087931-229e-42cf-b5f9-e91bcc1f7332
                        updatedAt: 2020-03-09T13:19:43+00:00
                      - assets:
                          hls: https://live.api.video/li4pqNqGUkhKfWcBGpZVLRY5.m3u8
                          iframe: <iframe src="https://embed.api.video/live/li4pqNqGUkhKfWcBGpZVLRY5" width="100%" height="100%" frameborder="0" scrolling="no" allowfullscreen=""></iframe>
                          player: https://embed.api.video/live/li4pqNqGUkhKfWcBGpZVLRY5
                          thumbnail: https://cdn.api.video/live/li4pqNqGUkhKfWcBGpZVLRY5/thumbnail.jpg
                        broadcasting: false
                        createdAt: 2020-07-29T10:45:35+00:00
                        liveStreamId: li4pqNqGUkhKfWcBGpZVLRY5
                        name: Live From New York
                        record: true
                        streamKey: cc1b4df0-d1c5-4064-a8f9-9f0368385135
                        updatedAt: 2020-07-29T10:45:35+00:00
                    pagination:
                      currentPage: 1
                      currentPageItems: 19
                      itemsTotal: 19
                      links:
                        - rel: self
                          uri: /live-streams?currentPage=1&pageSize=25
                        - rel: first
                          uri: /live-streams?currentPage=1&pageSize=25
                        - rel: last
                          uri: /live-streams?currentPage=1&pageSize=25
                      pageSize: 25
                      pagesTotal: 1
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/live-stream"
                    type: array
                  pagination:
                    $ref: "#/components/schemas/pagination"
                required:
                  - data
                  - pagination
                type: object
          description: ""
      security:
        - bearerAuth: []
      summary: List all live streams
      tags:
        - Live
    post:
      description: >-
        A live stream will give you the 'connection point' to RTMP your video stream to api.video. It will also give you the details for viewers to watch the same livestream. 


        See our [Live Stream Tutorial](https://api.video/blog/tutorials/live-stream-tutorial) for a walkthrough of this API with OBS.
      operationId: POST_live-streams
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: Test live
                playerId: pl4f4ferf5erfr5zed4fsdd
                record: true
              properties:
                name:
                  type: string
                playerId:
                  type: string
                record:
                  default: false
                  type: boolean
              required:
                - name
              type: object
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    assets:
                      hls: https://live.api.video/li4pqNqGUkhKfWcBGpZVLRY5.m3u8
                      iframe: <iframe src="https://embed.api.video/live/li4pqNqGUkhKfWcBGpZVLRY5" width="100%" height="100%" frameborder="0" scrolling="no" allowfullscreen=""></iframe>
                      player: https://embed.api.video/live/li4pqNqGUkhKfWcBGpZVLRY5
                      thumbnail: https://cdn.api.video/live/li4pqNqGUkhKfWcBGpZVLRY5/thumbnail.jpg
                    broadcasting: false
                    createdAt: 2020-07-29T10:45:35+00:00
                    liveStreamId: li4pqNqGUkhKfWcBGpZVLRY5
                    name: Live From New York
                    record: true
                    streamKey: cc1b4df0-d1c5-4064-a8f9-9f0368385135
                    updatedAt: 2020-07-29T10:45:35+00:00
              schema:
                $ref: "#/components/schemas/live-stream"
          description: Success
        "400":
          content:
            application/vnd.api.video+json:
              schema:
                $ref: "#/components/schemas/bad-request"
          description: Bad Request
      security:
        - bearerAuth: []
      summary: Create live stream
      tags:
        - Live
  "/live-streams/{liveStreamId}":
    delete:
      operationId: DELETE_live-streams-liveStreamId
      parameters:
        - in: path
          name: liveStreamId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
      security:
        - bearerAuth: []
      summary: Delete a live stream
      tags:
        - Live
    get:
      description: Supply a LivestreamId, and you'll get all the details for streaming into, and watching the livestream.
      operationId: GET_live-streams-liveStreamId
      parameters:
        - in: path
          name: liveStreamId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    assets:
                      hls: https://live.api.video/li400mYKSgQ6xs7taUeSaEKr.m3u8
                      iframe: <iframe src="https://embed.api.video/live/li400mYKSgQ6xs7taUeSaEKr" width="100%" height="100%" frameborder="0" scrolling="no" allowfullscreen=""></iframe>
                      player: https://embed.api.video/live/li400mYKSgQ6xs7taUeSaEKr
                      thumbnail: https://cdn.api.video/live/li400mYKSgQ6xs7taUeSaEKr/thumbnail.jpg
                    broadcasting: false
                    createdAt: 2020-01-31T10:17:47+00:00
                    liveStreamId: li400mYKSgQ6xs7taUeSaEKr
                    name: Live Stream From the browser
                    record: true
                    streamKey: 30087931-229e-42cf-b5f9-e91bcc1f7332
                    updatedAt: 2020-03-09T13:19:43+00:00
              schema:
                $ref: "#/components/schemas/live-stream"
          description: Success
      security:
        - bearerAuth: []
      summary: Show live stream
      tags:
        - Live
    patch:
      description: "Use this endpoint to update the player, or to turn recording on/off (saving a copy of the livestream). NOTE: If the livestream is actively streaming, changing the recording status will only affect the NEXT stream."
      operationId: PATCH_live-streams-liveStreamId
      parameters:
        - in: path
          name: liveStreamId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                playerId:
                  type: string
                record:
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    assets:
                      hls: https://live.api.video/li400mYKSgQ6xs7taUeSaEKr.m3u8
                      iframe: <iframe src="https://embed.api.video/live/li400mYKSgQ6xs7taUeSaEKr" width="100%" height="100%" frameborder="0" scrolling="no" allowfullscreen=""></iframe>
                      player: https://embed.api.video/live/li400mYKSgQ6xs7taUeSaEKr
                      thumbnail: https://cdn.api.video/live/li400mYKSgQ6xs7taUeSaEKr/thumbnail.jpg
                    broadcasting: false
                    createdAt: 2020-01-31T10:17:47+00:00
                    liveStreamId: li400mYKSgQ6xs7taUeSaEKr
                    name: Live Stream From the browser
                    record: true
                    streamKey: 30087931-229e-42cf-b5f9-e91bcc1f7332
                    updatedAt: 2020-03-09T13:19:43+00:00
              schema:
                $ref: "#/components/schemas/live-stream"
          description: Success
        "400":
          content:
            application/vnd.api.video+json:
              schema:
                $ref: "#/components/schemas/bad-request"
          description: Bad Request
      security:
        - bearerAuth: []
      summary: Update a live stream
      tags:
        - Live
  "/live-streams/{liveStreamId}/thumbnail":
    delete:
      operationId: DELETE_live-streams-liveStreamId-thumbnail
      parameters:
        - in: path
          name: liveStreamId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              schema:
                $ref: "#/components/schemas/live-stream"
          description: ""
        "404":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: liveStreamId
                    status: 404
                    title: The requested resource was not found.
                    type: https://docs.api.video/docs/resourcenot_found
              schema:
                $ref: "#/components/schemas/not-found"
          description: ""
      security:
        - bearerAuth: []
      summary: Delete a thumbnail
      tags:
        - Live
    post:
      description: Upload an image to use as a backdrop for your livestream
      operationId: POST_live-streams-liveStreamId-thumbnail
      parameters:
        - in: path
          name: liveStreamId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/POST_videos-videoId-thumbnail"
      responses:
        "201":
          content:
            application/vnd.api.video+json:
              schema:
                $ref: "#/components/schemas/live-stream"
          description: ""
        "400":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: file
                    status: 400
                    title: Only [jpeg, jpg, JPG, JPEG] extensions are supported.
                    type: https://docs.api.video/docs/fileextension
              schema:
                $ref: "#/components/schemas/bad-request"
          description: ""
        "404":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: liveStreamId
                    status: 404
                    title: The requested resource was not found.
                    type: https://docs.api.video/docs/resourcenot_found
              schema:
                $ref: "#/components/schemas/not-found"
          description: ""
      security:
        - bearerAuth: []
      summary: Upload a thumbnail
      tags:
        - Live
  /players:
    get:
      operationId: GET_players
      parameters:
        - description: ""
          in: query
          name: sortBy
          required: false
          schema:
            enum:
              - createdAt
              - updatedAt
            type: string
        - description: "Allowed: asc, desc"
          in: query
          name: sortOrder
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
        - description: Number of the page to display
          in: query
          name: currentPage
          required: false
          schema:
            default: 1
            minimum: 1
            type: integer
        - description: Expected number of items to display on the page. Might be lower on the last page
          in: query
          name: pageSize
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    data:
                      - backgroundBottom: rgba(94, 95, 89, 1)
                        backgroundText: rgba(255, 255, 255, .95)
                        backgroundTop: rgba(72, 4, 45, 1)
                        createdAt: 2020-01-13T10:09:17+00:00
                        enableApi: false
                        enableControls: false
                        forceAutoplay: false
                        forceLoop: false
                        hideTitle: false
                        link: rgba(255, 0, 0, .95)
                        linkActive: rgba(255, 0, 0, .75)
                        linkHover: rgba(255, 255, 255, .75)
                        playerId: pl4fgtjy4tjyKDK545DRdfg
                        shapeAspect: flat
                        shapeBackgroundBottom: rgba(50, 50, 50, .8)
                        shapeBackgroundTop: rgba(50, 50, 50, .7)
                        shapeMargin: 10
                        shapeRadius: 3
                        text: rgba(255, 255, 255, .95)
                        trackBackground: rgba(0, 0, 0, 0)
                        trackPlayed: rgba(255, 255, 255, .95)
                        trackUnplayed: rgba(255, 255, 255, .1)
                        updatedAt: 2020-01-13T10:09:17+00:00
                      - backgroundBottom: rgba(94, 95, 89, 1)
                        backgroundText: rgba(255, 255, 255, .95)
                        backgroundTop: rgba(72, 4, 45, 1)
                        createdAt: 2020-01-13T10:09:17+00:00
                        enableApi: true
                        enableControls: true
                        forceAutoplay: true
                        forceLoop: false
                        hideTitle: false
                        link: rgba(255, 0, 0, .95)
                        linkActive: rgba(255, 0, 0, .75)
                        linkHover: rgba(255, 255, 255, .75)
                        playerId: pl54fgtjy4tjyKDK45DRdfg
                        shapeAspect: flat
                        shapeBackgroundBottom: rgba(50, 50, 50, .8)
                        shapeBackgroundTop: rgba(50, 50, 50, .7)
                        shapeMargin: 10
                        shapeRadius: 3
                        text: rgba(255, 255, 255, .95)
                        trackBackground: rgba(0, 0, 0, 0)
                        trackPlayed: rgba(255, 255, 255, .95)
                        trackUnplayed: rgba(255, 255, 255, .1)
                        updatedAt: 2020-01-13T10:09:17+00:00
                    pagination:
                      currentPage: 1
                      currentPageItems: 4
                      itemsTotal: 4
                      links:
                        - rel: self
                          uri: https://ws.api.video/players?currentPage=1
                        - rel: first
                          uri: https://ws.api.video/players?currentPage=1
                        - rel: last
                          uri: https://ws.api.video/players?currentPage=1
                      pageSize: 25
                      pagesTotal: 1
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/player"
                    type: array
                  pagination:
                    $ref: "#/components/schemas/pagination"
                type: object
          description: Success
        "400":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: page
                    problems:
                      - name: page
                        range:
                          min: 1
                        title: This parameter is out of the allowed range of values.
                      - name: pageSize
                        range:
                          max: 100
                          min: 10
                        title: This parameter is out of the allowed range of values.
                    range:
                      min: 1
                    status: 400
                    title: This parameter is out of the allowed range of values.
              schema:
                $ref: "#/components/schemas/bad-request"
          description: Bad Request
      security:
        - bearerAuth: []
      summary: List all players
      tags:
        - Players
    post:
      operationId: POST_players
      requestBody:
        $ref: "#/components/requestBodies/playerinput"
      responses:
        "201":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    backgroundBottom: rgba(94, 95, 89, 1)
                    backgroundText: rgba(255, 255, 255, .95)
                    backgroundTop: rgba(72, 4, 45, 1)
                    createdAt: 2020-01-13T10:09:17+00:00
                    enableApi: false
                    enableControls: false
                    forceAutoplay: false
                    forceLoop: false
                    hideTitle: false
                    link: rgba(255, 0, 0, .95)
                    linkActive: rgba(255, 0, 0, .75)
                    linkHover: rgba(255, 255, 255, .75)
                    playerId: pl45d5vFFGrfdsdsd156dGhh
                    shapeAspect: flat
                    shapeBackgroundBottom: rgba(50, 50, 50, .8)
                    shapeBackgroundTop: rgba(50, 50, 50, .7)
                    shapeRadius: 3
                    text: rgba(255, 255, 255, .95)
                    trackBackground: rgba(0, 0, 0, 0)
                    trackPlayed: rgba(255, 255, 255, .95)
                    trackUnplayed: rgba(255, 255, 255, .1)
                    updatedAt: 2020-01-13T10:09:17+00:00
              schema:
                $ref: "#/components/schemas/player"
          description: ""
      security:
        - bearerAuth: []
      summary: Create a player
      tags:
        - Players
  "/players/{playerId}":
    delete:
      operationId: DELETE_players-playerId
      parameters:
        - in: path
          name: playerId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: playerId
                    status: 404
                    title: The requested resource was not found.
                    type: https://docs.api.video/docs/resourcenot_found
              schema:
                $ref: "#/components/schemas/not-found"
          description: Not Found
      security:
        - bearerAuth: []
      summary: Delete a player
      tags:
        - Players
    get:
      operationId: GET_players-playerId
      parameters:
        - in: path
          name: playerId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    backgroundBottom: rgba(94, 95, 89, 1)
                    backgroundText: rgba(255, 255, 255, .95)
                    backgroundTop: rgba(72, 4, 45, 1)
                    createdAt: 2020-01-13T10:09:17+00:00
                    enableApi: false
                    enableControls: false
                    forceAutoplay: false
                    forceLoop: false
                    hideTitle: false
                    link: rgba(255, 0, 0, .95)
                    linkActive: rgba(255, 0, 0, .75)
                    linkHover: rgba(255, 255, 255, .75)
                    playerId: pl45d5vFFGrfdsdsd156dGhh
                    shapeAspect: flat
                    shapeBackgroundBottom: rgba(50, 50, 50, .8)
                    shapeBackgroundTop: rgba(50, 50, 50, .7)
                    shapeRadius: 3
                    text: rgba(255, 255, 255, .95)
                    trackBackground: rgba(0, 0, 0, 0)
                    trackPlayed: rgba(255, 255, 255, .95)
                    trackUnplayed: rgba(255, 255, 255, .1)
                    updatedAt: 2020-01-13T11:12:14+00:00
              schema:
                $ref: "#/components/schemas/player"
          description: ""
        "404":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: playerId
                    status: 404
                    title: The requested resource was not found.
                    type: https://docs.api.video/docs/resourcenot_found
              schema:
                $ref: "#/components/schemas/not-found"
          description: Not Found
      security:
        - bearerAuth: []
      summary: Show a player
      tags:
        - Players
    patch:
      description: It may take up to 10 min before the new player configuration is available from our CDN.
      operationId: PATCH_players-playerId
      parameters:
        - in: path
          name: playerId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/playerinput"
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    backgroundBottom: rgba(94, 95, 89, 1)
                    backgroundText: rgba(255, 255, 255, .95)
                    backgroundTop: rgba(72, 4, 45, 1)
                    createdAt: 2020-01-13T10:09:17+00:00
                    enableApi: false
                    enableControls: false
                    forceAutoplay: false
                    forceLoop: false
                    hideTitle: false
                    link: rgba(255, 0, 0, .95)
                    linkActive: rgba(255, 0, 0, .75)
                    linkHover: rgba(255, 255, 255, .75)
                    playerId: pl45d5vFFGrfdsdsd156dGhh
                    shapeAspect: flat
                    shapeBackgroundBottom: rgba(50, 50, 50, .8)
                    shapeBackgroundTop: rgba(50, 50, 50, .7)
                    shapeRadius: 3
                    text: rgba(255, 255, 255, .95)
                    trackBackground: rgba(0, 0, 0, 0)
                    trackPlayed: rgba(255, 255, 255, .95)
                    trackUnplayed: rgba(255, 255, 255, .1)
                    updatedAt: 2020-01-13T11:12:14+00:00
              schema:
                $ref: "#/components/schemas/player"
          description: Success
        "404":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: playerId
                    status: 404
                    title: The requested resource was not found.
                    type: https://docs.api.video/docs/resourcenot_found
              schema:
                $ref: "#/components/schemas/not-found"
          description: Not Found
      security:
        - bearerAuth: []
      summary: Update a player
      tags:
        - Players
  "/players/{playerId}/logo":
    delete:
      operationId: DELETE_players-playerId-logo
      parameters:
        - in: path
          name: playerId
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/vnd.api.video+json:
              schema:
                type: object
          description: ""
        "404":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: playerId
                    status: 404
                    title: The requested resource was not found.
                    type: https://docs.api.video/docs/resourcenot_found
              schema:
                $ref: "#/components/schemas/not-found"
          description: ""
      security:
        - bearerAuth: []
      summary: Delete logo
      tags:
        - Players
    post:
      description: >-
        The uploaded image maximum size should be 200x100 and its weight should be 200KB. 

        It will be scaled down to 30px height and converted to PNG to be displayed in the player.
      operationId: POST_players-playerId-logo
      parameters:
        - in: path
          name: playerId
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  format: binary
                  type: string
                link:
                  format: uri
                  type: string
              required:
                - file
                - link
              type: object
      responses:
        "201":
          content:
            application/vnd.api.video+json:
              schema:
                $ref: "#/components/schemas/player"
          description: Created
        "400":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: file
                    status: 400
                    title: Only ['jpg', 'JPG', 'jpeg', 'JPEG', 'png', 'PNG'] extensions are supported.
                    type: https://docs.api.video/docs/fileextension
              schema:
                $ref: "#/components/schemas/bad-request"
          description: Bad Request
        "404":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: playerId
                    status: 404
                    title: The requested resource was not found.
                    type: https://docs.api.video/docs/resourcenot_found
              schema:
                $ref: "#/components/schemas/not-found"
          description: Not Found
      security:
        - bearerAuth: []
      summary: Upload a logo
      tags:
        - Players
  /upload:
    post:
      description: >-
        When given a token, anyone can upload a file to the URI `https://ws.api.video/upload?token=<tokenId>`.


        Example with cURL:


        ```curl

        $ curl  --request POST --url 'https://ws.api.video/upload?token=toXXX'
         --header 'content-type: multipart/form-data'
         -F file=@video.mp4
        ```


        Or in an HTML form, with a little JavaScript to convert the form into JSON:

        ```html

        <!--form for user interaction-->

        <form name="videoUploadForm" >
          <label for=video>Video:</label>
          <input type=file name=source/><br/>
          <input value="Submit" type="submit">
        </form>

        <div></div>

        <!--JS takes the form data 
            uses FormData to turn the response into JSON.
            then uses POST to upload the video file.
            Update the token parameter in the url to your upload token.
            -->
        <script>
           var form = document.forms.namedItem("videoUploadForm");	
           form.addEventListener('submit', function(ev) {
        	 ev.preventDefault();
             var oOutput = document.querySelector("div"),
                 oData = new FormData(form);
             var oReq = new XMLHttpRequest();
        	 
             oReq.open("POST", "https://ws.api.video/upload?token=toXXX", true);
             oReq.send(oData);
        	 oReq.onload = function(oEvent) {
               if (oReq.status ==201) {
                 oOutput.innerHTML = "Your video is uploaded!<br/>"  + oReq.response;
               } else {
                 oOutput.innerHTML = "Error " + oReq.status + " occurred when trying to upload your file.<br \/>";
               }
             };
           }, false);	
        </script>

        ```



        ### Dealing with large files


        We have created a <a href='https://api.video/blog/tutorials/uploading-large-files-with-javascript'>tutorial</a> to walk through the steps required.
      operationId: POST_upload
      parameters:
        - in: query
          name: token
          required: false
          schema:
            type: string
        - in: header
          name: Content-Range
          required: false
          schema:
            pattern: ^bytes [0-9]*-[0-9]*\/[0-9]*$
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: The video you'd like to upload.
                  format: binary
                  type: string
                videoId:
                  description: The video id returned by the first call to this endpoint in a large video upload scenario.
                  type: string
              required:
                - file
              type: object
      responses:
        "201":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    assets:
                      hls: https://cdn.api.video/stream/831a9bd9-9f50-464c-a369-8e9d914371ae/hls/manifest.m3u8
                      iframe: <iframe src='//embed.api.video/vi4k0jvEUuaTdRAEjQ4Jfrgz?token=831a9bd9-9f50-464c-a369-8e9d914371ae' width='100%' height='100%' frameborder='0' scrolling='no' allowfullscreen=''></iframe>
                      player: https://embed.api.video/vi4k0jvEUuaTdRAEjQ4Jfrgz?token=831a9bd9-9f50-464c-a369-8e9d914371ae
                      thumbnail: https://cdn.api.video/stream/831a9bd9-9f50-464c-a369-8e9d914371ae/thumbnail.jpg
                    description: An amazing video explaining the string theory
                    metadata:
                      - key: Author
                        value: John Doe
                      - key: Format
                        value: Tutorial
                    panoramic: false
                    playerId: pl45KFKdlddgk654dspkze
                    public: false
                    publishedAt: 4665-07-14T23:36:18.598Z
                    source:
                      uri: /videos/vi4k0jvEUuaTdRAEjQ4Jfrgz/source
                    tags:
                      - maths
                      - string theory
                      - video
                    title: Maths video
                    videoId: vi4k0jvEUuaTdRAEjQ4Jfrgz
              schema:
                $ref: "#/components/schemas/video"
          description: Created
        "400":
          content:
            application/vnd.api.video+json:
              schema:
                $ref: "#/components/schemas/bad-request"
          description: ""
      summary: Upload with an upload token
      tags:
        - Videos - Delegated upload
  /upload-tokens:
    get:
      description: Returns a list of all currently active delegated tokens
      operationId: GET_upload-tokens
      parameters:
        - description: "Allowed: createdAt, ttl"
          in: query
          name: sortBy
          required: false
          schema:
            enum:
              - createdAt
              - ttl
            type: string
        - description: "Allowed: asc, desc"
          in: query
          name: sortOrder
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
        - description: Number of the page to display
          in: query
          name: currentPage
          required: false
          schema:
            default: 1
            minimum: 1
            type: integer
        - description: Expected number of items to display on the page. Might be lower on the last page
          in: query
          name: pageSize
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    data:
                      - createdAt: 2020-12-02T10:26:46+00:00
                        expiresAt: 2020-12-02T11:26:46+00:00
                        token: to37YfoPDRR2pcDKa6LsUE0M
                        ttl: 3600
                      - createdAt: 2020-12-02T10:26:28+00:00
                        expiresAt: null
                        token: to1W3ZS9PdUBZWzzTEZr1B79
                        ttl: 0
                    pagination:
                      currentPage: 1
                      currentPageItems: 2
                      itemsTotal: 2
                      links:
                        - rel: self
                          uri: /upload-tokens?currentPage=1&pageSize=25
                        - rel: first
                          uri: /upload-tokens?currentPage=1&pageSize=25
                        - rel: last
                          uri: /upload-tokens?currentPage=1&pageSize=25
                      pageSize: 25
                      pagesTotal: 1
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/upload-token"
                    type: array
                  pagination:
                    $ref: "#/components/schemas/pagination"
                required:
                  - data
                  - pagination
                type: object
          description: ""
      security:
        - bearerAuth: []
      summary: List all upload tokens
      tags:
        - Videos - Delegated upload
    post:
      operationId: POST_upload-tokens
      requestBody:
        content:
          application/json:
            schema:
              example:
                ttl: 3600
              properties:
                ttl:
                  default: 0
                  description: Time in seconds that the token will be active. A value of 0 means that the token has no exipration date. The default is to have no expiration.
                  maximum: 2147483647
                  minimum: 0
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    createdAt: 2020-12-02T10:13:19+00:00
                    expiresAt: 2020-12-02T11:13:19+00:00
                    token: to1tcmSFHeYY5KzyhOqVKMKb
                    ttl: 3600
              schema:
                $ref: "#/components/schemas/upload-token"
          description: ""
        "400":
          content:
            application/vnd.api.video+json:
              schema:
                $ref: "#/components/schemas/bad-request"
          description: ""
      security:
        - bearerAuth: []
      summary: Generate an upload token
      tags:
        - Videos - Delegated upload
  "/upload-tokens/{uploadToken}":
    delete:
      operationId: DELETE_upload-tokens-uploadToken
      parameters:
        - in: path
          name: uploadToken
          required: true
          schema:
            type: string
      responses:
        "204":
          description: ""
        "404":
          content:
            application/vnd.api.video+json:
              schema:
                $ref: "#/components/schemas/not-found"
          description: ""
      security:
        - bearerAuth: []
      summary: Delete an upload token
      tags:
        - Videos - Delegated upload
    get:
      operationId: GET_upload-tokens-uploadToken
      parameters:
        - in: path
          name: uploadToken
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    createdAt: 2020-12-02T10:13:19+00:00
                    expiresAt: null
                    token: to1tcmSFHeYY5KzyhOqVKMKb
                    ttl: 0
              schema:
                $ref: "#/components/schemas/upload-token"
          description: Success
        "404":
          content:
            application/vnd.api.video+json:
              schema:
                $ref: "#/components/schemas/not-found"
          description: Not Found
      security:
        - bearerAuth: []
      summary: Show upload token
      tags:
        - Videos - Delegated upload
  /videos:
    get:
      description: Requests to this endpoint return a list of your videos (with all their details). With no parameters added to this query, the API returns all videos. You can filter what videos the API returns using the parameters described below.
      operationId: LIST-videos
      parameters:
        - description: The title of a specific video you want to find. The search will match exactly to what term you provide and return any videos that contain the same term as part of their titles.
          example: My Video.mp4
          in: query
          name: title
          required: false
          schema:
            type: string
        - description: A tag is a category you create and apply to videos. You can search for videos with particular tags by listing one or more here. Only videos that have all the tags you list will be returned.
          example: '"tags": ["captions", "dialogue"]'
          in: query
          name: tags
          required: false
          schema:
            items:
              type: string
            type: string
        - description: Videos can be tagged with metadata tags in key:value pairs. You can search for videos with specific key value pairs using this parameter.
          example: '[{"key":"Author", "value":"John Doe"}, {"key":"Format", "value":"Tutorial"}]'
          explode: true
          in: query
          name: metadata
          required: false
          schema:
            items:
              type: string
            type: array
        - description: If you described a video with a term or sentence, you can add it here to return videos containing this string.
          example: New Zealand
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: If you know the ID for a live stream, you can retrieve the stream by adding the ID for it here.
          example: li400mYKSgQ6xs7taUeSaEKr
          in: query
          name: liveStreamId
          required: false
          schema:
            type: string
        - description: "Allowed: publishedAt, title. You can search by the time videos were published at, or by title."
          example: publishedAt
          in: query
          name: sortBy
          required: false
          schema:
            type: string
        - description: "Allowed: asc, desc. asc is ascending and sorts from A to Z. desc is descending and sorts from Z to A."
          example: asc
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: "Choose the number of search results to return per page. Minimum value: 1"
          example: 2
          in: query
          name: currentPage
          required: false
          schema:
            default: 1
            type: integer
        - description: Results per page. Allowed values 1-100, default is 25.
          example: 30
          in: query
          name: pageSize
          required: false
          schema:
            default: 25
            type: integer
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    data:
                      - assets:
                          hls: https://cdn.api.video/stream/831a9bd9-9f50-464c-a369-8e9d914371ae/hls/manifest.m3u8
                          iframe: <iframe src="//embed.api.video/c188ed58-3403-46a2-b91b-44603d10b2c9?token=831a9bd9-9f50-464c-a369-8e9d914371ae" width="100%" height="100%" frameborder="0" scrolling="no" allowfullscreen=""></iframe>
                          mp4: https://cdn.api.video/vod/vi4k0jvEUuaTdRAEjQ4Jfrgz/token/8fd70443-d9f0-45d2-b01c-12c8cfc707c9/mp4/720/source.mp4
                          player: https://embed.api.video/c188ed58-3403-46a2-b91b-44603d10b2c9?token=831a9bd9-9f50-464c-a369-8e9d914371ae
                          thumbnail: https://cdn.api.video/stream/831a9bd9-9f50-464c-a369-8e9d914371ae/thumbnail.jpg
                        description: An amazing video explaining the string theory
                        metadata:
                          - key: Author
                            value: John Doe
                          - key: Format
                            value: Tutorial
                        mp4Support: true
                        panoramic: false
                        playerId: pl45KFKdlddgk654dspkze
                        public: false
                        publishedAt: 2019-12-16T08:25:51+00:00
                        source:
                          uri: /videos/c188ed58-3403-46a2-b91b-44603d10b2c9/source
                        tags:
                          - maths
                          - string theory
                          - video
                        title: Maths video
                        updateddAt: 2019-12-16T08:48:49+00:00
                        videoId: c188ed58-3403-46a2-b91b-44603d10b2c9
                      - assets:
                          hls: https://cdn.api.video/stream/831a9bd9-9f50-464c-a369-8e9d914371ae/hls/manifest.m3u8
                          iframe: <iframe src="//embed.api.video/1b9d6ae8-8f57-4b6d-8552-d636926b4f5f?token=831a9bd9-9f50-464c-a369-8e9d914371ae" width="100%" height="100%" frameborder="0" scrolling="no" allowfullscreen=""></iframe>
                          player: https://embed.api.video/1b9d6ae8-8f57-4b6d-8552-d636926b4f5f?token=831a9bd9-9f50-464c-a369-8e9d914371ae
                          thumbnail: https://cdn.api.video/stream/831a9bd9-9f50-464c-a369-8e9d914371ae/thumbnail.jpg
                        description: A description for your video.
                        metadata:
                          - key: Author
                            value: John Doe
                          - key: Science Fiction
                            value: Cyberpunk
                          - key: Technology
                            value: Computers
                        mp4Support: true
                        panoramic: false
                        public: false
                        publishedAt: 2019-12-16T08:25:51+00:00
                        source:
                          uri: /videos/1b9d6ae8-8f57-4b6d-8552-d636926b4f5f/source
                        tags:
                          - books
                          - short stories
                        title: Video Title
                        updateddAt: 2019-12-16T08:48:49+00:00
                        videoId: vi4k0jvEUuaTdRAEjQ4Jfrgz
                      - assets:
                          hls: https://cdn.api.video/stream/831a9bd9-9f50-464c-a369-8e9d914371ae/hls/manifest.m3u8
                          iframe: <iframe src="//embed.api.video/73129412-e320-4b93-99f6-59a85e3cedcd?token=831a9bd9-9f50-464c-a369-8e9d914371ae" width="100%" height="100%" frameborder="0" scrolling="no" allowfullscreen=""></iframe>
                          player: https://embed.api.video/73129412-e320-4b93-99f6-59a85e3cedcd?token=831a9bd9-9f50-464c-a369-8e9d914371ae
                          thumbnail: https://cdn.api.video/stream/831a9bd9-9f50-464c-a369-8e9d914371ae/thumbnail.jpg
                        description: A brief description of the video.
                        metadata:
                          - key: Length
                            value: Short
                        mp4Support: true
                        panoramic: false
                        playerId: pl45KFKdlddgk654dspkze
                        public: false
                        publishedAt: 2019-12-16T08:25:51+00:00
                        source:
                          uri: /videos/73129412-e320-4b93-99f6-59a85e3cedcd/source
                        tags:
                          - General
                          - Videos
                        title: My Video Title
                        updateddAt: 2019-12-16T08:48:49+00:00
                        videoId: vi4k0jvEUuaTdRAEjQ4Jfrgz
                    pagination:
                      currentPage: 1
                      currentPageItems: 11
                      itemsTotal: 11
                      links:
                        - rel: self
                          uri: https://ws.api.video/videos?currentPage=1
                        - rel: first
                          uri: https://ws.api.video/videos?currentPage=1
                        - rel: last
                          uri: https://ws.api.video/videos?currentPage=1
                      pageSize: 25
                      pagesTotal: 1
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/video"
                    type: array
                  pagination:
                    $ref: "#/components/schemas/pagination"
                required:
                  - data
                  - pagination
                type: object
          description: Success
        "400":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: page
                    problems:
                      - name: page
                        range:
                          min: 1
                        title: This parameter is out of the allowed range of values.
                      - name: pageSize
                        range:
                          max: 100
                          min: 10
                        title: This parameter is out of the allowed range of values.
                    range:
                      min: 1
                    status: 400
                    title: This parameter is out of the allowed range of values.
              schema:
                $ref: "#/components/schemas/bad-request"
          description: Bad Request
      security:
        - bearerAuth: []
      summary: List all videos
      tags:
        - Videos
    post:
      description: >
        To create a video, you create its metadata first, before adding the video file (exception - when using an existing HTTP source).


        Videos are public by default. Mp4 encoded versions are created at the highest quality (max 1080p) by default.
         ```shell
        $ curl https://ws.api.video/videos \

        -H 'Authorization: Bearer {access_token} \

        -d '{"title":"My video", 
             "description":"so many details",
             "mp4Support":true
        }'

        ```


        ### Creating a hosted video 


        You can also create a video directly from one hosted on a third-party server by giving its URI in `source` parameter:


        ```shell

        $ curl https://ws.api.video/videos \

        -H 'Authorization: Bearer {access_token} \

        -d '{"source":"http://uri/to/video.mp4", "title":"My video"}'

        ```


        In this case, the service will respond `202 Accepted` and download the video asynchronously.

         We have tutorials on:
        * [Creating and uploading videos](https://api.video/blog/tutorials/video-upload-tutorial)

        * [Uploading large videos](https://api.video/blog/tutorials/video-upload-tutorial-large-videos)

        * [Using tags with videos](https://api.video/blog/tutorials/video-tagging-best-practices)

        * [Private videos](https://api.video/blog/tutorials/tutorial-private-videos)
      operationId: POST-video
      requestBody:
        content:
          application/json:
            schema:
              example:
                description: An amazing video explaining string theory.
                metadata:
                  - key: Author
                    value: John Doe
                  - key: Format
                    value: Tutorial
                mp4Support: true
                panoramic: false
                playerId: pl45KFKdlddgk654dspkze
                public: false
                tags:
                  - maths
                  - string theory
                  - video
                title: Maths video
              properties:
                description:
                  description: A brief description of your video.
                  example: A video about string theory.
                  type: string
                metadata:
                  description: A list of key value pairs that you use to provide metadata for your video. These pairs can be made dynamic, allowing you to segment your audience. You can also just use the pairs as another way to tag and categorize your videos.
                  example: '[{"key": "Author", "value": "John Doe"}]'
                  items:
                    properties:
                      key:
                        description: Part of a key value pair you can use to tag your videos.
                        example: Dogs
                        type: string
                      value:
                        description: Part of a key value pair you can use to tag your videos.
                        example: Chihuahhua
                        type: string
                    type: object
                  type: array
                mp4Support:
                  default: true
                  description: Enables mp4 version in addition to streamed version.
                  example: true
                  type: boolean
                panoramic:
                  default: false
                  description: Indicates if your video is a 360/immersive video.
                  example: false
                  type: boolean
                playerId:
                  description: The unique identification number for your video player.
                  example: pl45KFKdlddgk654dspkze
                  type: string
                public:
                  default: true
                  description: Whether your video can be viewed by everyone, or requires authentication to see it. A setting of false will require a unique token for each view.
                  example: true
                  type: boolean
                publishedAt:
                  description: The API uses ISO-8601 format for time, and includes 3 places for milliseconds.
                  example: 2020-07-14T23:36:18.598Z
                  format: date-time
                  type: string
                source:
                  description: If you add a video already on the web, this is where you enter the url for the video.
                  example: https://www.myvideo.url.com/video.mp4
                  type: string
                tags:
                  description: A list of tags you want to use to describe your video.
                  example: '["maths", "string theory", "video"]'
                  items:
                    type: string
                  type: array
                title:
                  description: The title of your new video.
                  example: Maths video
                  type: string
              required:
                - title
              type: object
      responses:
        "201":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    assets:
                      hls: https://cdn.api.video/stream/831a9bd9-9f50-464c-a369-8e9d914371ae/hls/manifest.m3u8
                      iframe: <iframe src="//embed.api.video/vi4k0jvEUuaTdRAEjQ4Jfrgz?token=831a9bd9-9f50-464c-a369-8e9d914371ae" width="100%" height="100%" frameborder="0" scrolling="no" allowfullscreen=""></iframe>
                      mp4: https://cdn.api.video/vod/vi4k0jvEUuaTdRAEjQ4Jfrgz/token/8fd70443-d9f0-45d2-b01c-12c8cfc707c9/mp4/720/source.mp4
                      player: https://embed.api.video/vi4k0jvEUuaTdRAEjQ4Jfrgz?token=831a9bd9-9f50-464c-a369-8e9d914371ae
                      thumbnail: https://cdn.api.video/stream/831a9bd9-9f50-464c-a369-8e9d914371ae/thumbnail.jpg
                    description: An amazing video explaining the string theory
                    metadata:
                      - key: Author
                        value: John Doe
                      - key: Format
                        value: Tutorial
                    mp4Support: true
                    panoramic: false
                    playerId: pl4k0jvEUuaTdRAEjQ4Jfrgz
                    public: false
                    publishedAt: 4665-07-14T23:36:18.598Z
                    source:
                      uri: /videos/vi4k0jvEUuaTdRAEjQ4Jfrgz/source
                    tags:
                      - maths
                      - string theory
                      - video
                    title: Maths video
                    videoId: vi4k0jvEUuaTdRAEjQ4Jfrgz
              schema:
                $ref: "#/components/schemas/video"
          description: Created
        "202":
          content:
            application/vnd.api.video+json:
              schema:
                $ref: "#/components/schemas/video"
          description: Accepted
        "400":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: title
                    problems:
                      - name: title
                        title: This attribute is required.
                        type: https://docs.api.video/docs/attributerequired
                      - name: scheduledAt
                        title: This attribute must be a ISO8601 date.
                        type: https://docs.api.video/docs/attributeinvalid
                      - name: tags
                        title: This attribute must be an array.
                        type: https://docs.api.video/docs/attributeinvalid
                      - name: metadata
                        title: This attribute must be an array.
                        type: https://docs.api.video/docs/attributeinvalid
                    status: 400
                    title: This attribute is required.
                    type: https://docs.api.video/docs/attributerequired
              schema:
                $ref: "#/components/schemas/bad-request"
          description: Bad Request
      security:
        - bearerAuth: []
      summary: Create a video
      tags:
        - Videos
  "/videos/{videoId}":
    delete:
      description: If you do not need a video any longer, you can send a request to delete it. All you need is the videoId.
      operationId: DELETE-video
      parameters:
        - description: The video ID for the video you want to delete.
          example: vi4k0jvEUuaTdRAEjQ4Jfrgz
          in: path
          name: videoId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: videoId
                    status: 404
                    title: The requested resource was not found.
                    type: https://docs.api.video/docs/resourcenot_found
              schema:
                $ref: "#/components/schemas/not-found"
          description: Not Found
      security:
        - bearerAuth: []
      summary: Delete a video
      tags:
        - Videos
    get:
      description: This call provides the same JSON information provided on video creation. For private videos, it will generate a unique token url.
      operationId: GET-video
      parameters:
        - in: path
          name: videoId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    assets:
                      hls: https://cdn.api.video/stream/831a9bd9-9f50-464c-a369-8e9d914371ae/hls/manifest.m3u8
                      iframe: <iframe src="//embed.api.video/vi4k0jvEUuaTdRAEjQ4Jfrgz?token=831a9bd9-9f50-464c-a369-8e9d914371ae" width="100%" height="100%" frameborder="0" scrolling="no" allowfullscreen=""></iframe>
                      mp4: https://cdn.api.video/vod/vi4k0jvEUuaTdRAEjQ4Jfrgz/token/8fd70443-d9f0-45d2-b01c-12c8cfc707c9/mp4/720/source.mp4
                      player: https://embed.api.video/vi4k0jvEUuaTdRAEjQ4Jfrgz?token=831a9bd9-9f50-464c-a369-8e9d914371ae
                      thumbnail: https://cdn.api.video/stream/831a9bd9-9f50-464c-a369-8e9d914371ae/thumbnail.jpg
                    description: An amazing video explaining string theory
                    metadata:
                      - key: Author
                        value: John Doe
                      - key: Format
                        value: Tutorial
                    mp4Support: true
                    panoramic: false
                    playerId: pl45KFKdlddgk654dspkze
                    public: false
                    publishedAt: 2019-12-16T08:25:51+00:00
                    source:
                      uri: /videos/vi4k0jvEUuaTdRAEjQ4Jfrgz/source
                    tags:
                      - maths
                      - string theory
                      - video
                    title: Maths video
                    updateddAt: 2019-12-16T08:48:49+00:00
                    videoId: vi4k0jvEUuaTdRAEjQ4Jfrgz
              schema:
                $ref: "#/components/schemas/video"
          description: Success
        "404":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: videoId
                    status: 404
                    title: The requested resource was not found.
                    type: https://docs.api.video/docs/resourcenot_found
              schema:
                $ref: "#/components/schemas/not-found"
          description: Not Found
      security:
        - bearerAuth: []
      summary: Show a video
      tags:
        - Videos
    patch:
      description: Use this endpoint to update the parameters associated with your video. The video you are updating is determined by the video ID you provide in the path. Everything else, provided in the request body, can be updated.
      operationId: PATCH-video
      parameters:
        - description: The video ID for the video you want to delete.
          example: vi4k0jvEUuaTdRAEjQ4Jfrgz
          in: path
          name: videoId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                description: An amazing video explaining the string theory
                metadata:
                  - key: Author
                    value: John Doe
                  - key: Format
                    value: Tutorial
                mp4Support: true
                panoramic: false
                playerId: pl45KFKdlddgk654dspkze
                public: false
                tags:
                  - maths
                  - string theory
                  - video
                title: String theory
              properties:
                description:
                  description: A brief description of the video.
                  example: A film about good books.
                  type: string
                metadata:
                  description: A list (array) of dictionaries where each dictionary contains a key value pair that describes the video.
                  items:
                    properties:
                      key:
                        description: The constant that defines the data set.
                        example: Color
                        type: string
                      value:
                        description: A variable which belongs to the data set.
                        example: Green
                        type: string
                    type: object
                  type: array
                mp4Support:
                  description: Whether the player supports the mp4 format.
                  example: true
                  type: boolean
                panoramic:
                  description: Whether the video is a 360 degree or immersive video.
                  example: false
                  type: boolean
                playerId:
                  description: The unique ID for the player you want to change details for.
                  example: pl4k0jvEUuaTdRAEjQ4Jfrgz
                  type: string
                public:
                  description: Whether the video is publicly available or not. False means it is set to private.
                  example: true
                  type: boolean
                tags:
                  description: A list of terms or words you want to tag the video with. Make sure the list includes all the tags you want as whatever you send in this list will overwrite the existing list for the video.
                  example: '["maths", "string theory", "video"]'
                  items:
                    type: string
                  type: array
                title:
                  description: The name of the video you want to alter details for.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    assets:
                      hls: https://cdn.api.video/stream/831a9bd9-9f50-464c-a369-8e9d914371ae/hls/manifest.m3u8
                      iframe: <iframe src="//embed.api.video/vi4k0jvEUuaTdRAEjQ4Jfrgz?token=831a9bd9-9f50-464c-a369-8e9d914371ae" width="100%" height="100%" frameborder="0" scrolling="no" allowfullscreen=""></iframe>
                      mp4: https://cdn.api.video/vod/vi4k0jvEUuaTdRAEjQ4Jfrgz/token/8fd70443-d9f0-45d2-b01c-12c8cfc707c9/mp4/720/source.mp4
                      player: https://embed.api.video/vi4k0jvEUuaTdRAEjQ4Jfrgz?token=831a9bd9-9f50-464c-a369-8e9d914371ae
                      thumbnail: https://cdn.api.video/stream/831a9bd9-9f50-464c-a369-8e9d914371ae/thumbnail.jpg
                    description: An amazing video explaining the string theory
                    metadata:
                      - key: Author
                        value: John Doe
                      - key: Format
                        value: Tutorial
                    mp4Support: true
                    panoramic: false
                    playerId: pl45KFKdlddgk654dspkze
                    public: false
                    publishedAt: 2019-12-16T08:25:51+00:00
                    source:
                      uri: /videos/vi4k0jvEUuaTdRAEjQ4Jfrgz/source
                    tags:
                      - maths
                      - string theory
                      - video
                    title: Maths video
                    updateddAt: 2019-12-16T08:48:49+00:00
                    videoId: vi4k0jvEUuaTdRAEjQ4Jfrgz
              schema:
                $ref: "#/components/schemas/video"
          description: Success
        "400":
          content:
            application/json:
              examples:
                response:
                  value:
                    name: scheduledAt
                    problems:
                      - name: scheduledAt
                        title: This attribute must be a ISO-8601 date.
                        type: https://docs.api.video/docs/attributeinvalid
                      - name: tags
                        title: This attribute must be an array.
                        type: https://docs.api.video/docs/attributeinvalid
                      - name: metadata
                        title: This attribute must be an array.
                        type: https://docs.api.video/docs/attributeinvalid
                    status: 400
                    title: This attribute must be a ISO-8601 date.
                    type: https://docs.api.video/docs/attributeinvalid
              schema:
                $ref: "#/components/schemas/bad-request"
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                response:
                  value:
                    name: videoId
                    status: 404
                    title: The requested resource was not found.
                    type: https://docs.api.video/docs/resourcenot_found
              schema:
                $ref: "#/components/schemas/not-found"
          description: Not Found
      security:
        - bearerAuth: []
      summary: Update a video
      tags:
        - Videos
  "/videos/{videoId}/captions":
    get:
      operationId: GET_videos-videoId-captions
      parameters:
        - in: path
          name: videoId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    data:
                      - default: false
                        src: https://cdn.api.video/vod/vi3N6cDinStg3oBbN79GklWS/captions/en.vtt
                        srclang: en
                        uri: /videos/vi3N6cDinStg3oBbN79GklWS/captions/en
                      - default: false
                        src: https://cdn.api.video/vod/vi3N6cDinStg3oBbN79GklWS/captions/fr.vtt
                        srclang: fr
                        uri: /videos/vi3N6cDinStg3oBbN79GklWS/captions/fr
                    pagination:
                      currentPage: 1
                      currentPageItems: 2
                      itemsTotal: 2
                      links:
                        - rel: self
                          uri: /videos/vi3N6cDinStg3oBbN79GklWS/captions?currentPage=1&pageSize=25
                        - rel: first
                          uri: /videos/vi3N6cDinStg3oBbN79GklWS/captions?currentPage=1&pageSize=25
                        - rel: last
                          uri: /videos/vi3N6cDinStg3oBbN79GklWS/captions?currentPage=1&pageSize=25
                      pageSize: 25
                      pagesTotal: 1
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/subtitle"
                    type: array
                  pagination:
                    $ref: "#/components/schemas/pagination"
                type: object
          description: Success
        "404":
          content:
            application/vnd.api.video+json:
              schema:
                $ref: "#/components/schemas/not-found"
          description: Not Found
      security:
        - bearerAuth: []
      summary: List video captions
      tags:
        - Captions
  "/videos/{videoId}/captions/{language}":
    delete:
      operationId: DELETE_videos-videoId-captions-language
      parameters:
        - in: path
          name: videoId
          required: true
          schema:
            type: string
        - description: A valid BCP 47 language representation
          in: path
          name: language
          required: true
          schema:
            type: string
      responses:
        "204":
          description: ""
        "404":
          content:
            application/vnd.api.video+json:
              schema:
                $ref: "#/components/schemas/not-found"
          description: ""
      security:
        - bearerAuth: []
      summary: Delete a caption
      tags:
        - Captions
    get:
      operationId: GET_videos-videoId-captions-language
      parameters:
        - in: path
          name: videoId
          required: true
          schema:
            type: string
        - description: A valid BCP 47 language representation
          in: path
          name: language
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    default: false
                    src: https://cdn.api.video/vod/vi3N6cDinStg3oBbN79GklWS/captions/en.vtt
                    srclang: en
                    uri: /videos/vi3N6cDinStg3oBbN79GklWS/captions/en
              schema:
                $ref: "#/components/schemas/subtitle"
          description: ""
        "404":
          content:
            application/vnd.api.video+json:
              schema:
                $ref: "#/components/schemas/not-found"
          description: ""
      security:
        - bearerAuth: []
      summary: Show a caption
      tags:
        - Captions
    patch:
      description: "To have the captions on automatically, use this PATCH to set default: true."
      operationId: PATCH_videos-videoId-captions-language
      parameters:
        - in: path
          name: videoId
          required: true
          schema:
            type: string
        - description: A valid BCP 47 language representation
          in: path
          name: language
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                default:
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    default: true
                    src: https://cdn.api.video/vod/vi3N6cDinStg3oBbN79GklWS/captions/en.vtt
                    srclang: en
                    uri: /videos/vi3N6cDinStg3oBbN79GklWS/captions/en
              schema:
                $ref: "#/components/schemas/subtitle"
          description: Success
        "400":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: string (required)
                    problems:
                      - null
                    status: integer (required)
                    title: string (required)
                    type: string (required)
              schema:
                $ref: "#/components/schemas/bad-request"
          description: ""
        "404":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: irure mollit aute
                    status: 85925135
                    title: sunt do fugiat tempor
                    type: Lorem sit culpa non
              schema:
                $ref: "#/components/schemas/not-found"
          description: ""
      security:
        - bearerAuth: []
      summary: Update caption
      tags:
        - Captions
    post:
      description: >-
        Upload a VTT file to add captions to your video.
         Read our [captioning tutorial](https://api.video/blog/tutorials/adding-captions) for more details.
      operationId: POST_videos-videoId-captions-language
      parameters:
        - in: path
          name: videoId
          required: true
          schema:
            type: string
        - description: A valid BCP 47 language representation
          in: path
          name: language
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: The VTT you'd like to upload.
                  format: binary
                  type: string
              required:
                - file
              type: object
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    default: false
                    src: https://cdn.api.video/vod/vi3N6cDinStg3oBbN79GklWS/captions/en.vtt
                    srclang: en
                    uri: /videos/vi3N6cDinStg3oBbN79GklWS/captions/en
              schema:
                $ref: "#/components/schemas/subtitle"
          description: ""
        "400":
          content:
            application/vnd.api.video+json:
              schema:
                $ref: "#/components/schemas/bad-request"
          description: ""
        "404":
          content:
            application/vnd.api.video+json:
              schema:
                $ref: "#/components/schemas/not-found"
          description: ""
      security:
        - bearerAuth: []
      summary: Upload a caption
      tags:
        - Captions
  "/videos/{videoId}/chapters":
    get:
      operationId: GET_videos-videoId-chapters
      parameters:
        - in: path
          name: videoId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    data:
                      - language: fr
                        src: https://cdn.api.video/vod/vi3N6cDinStg3oBbN79GklWS/chapters/fr.vtt
                        uri: /videos/vi3N6cDinStg3oBbN79GklWS/chapters/fr
                      - language: en
                        src: https://cdn.api.video/vod/vi3N6cDinStg3oBbN79GklWS/chapters/en.vtt
                        uri: /videos/vi3N6cDinStg3oBbN79GklWS/chapters/en
                    pagination:
                      currentPage: 1
                      currentPageItems: 2
                      itemsTotal: 2
                      links:
                        - rel: self
                          uri: /videos/vi3N6cDinStg3oBbN79GklWS/chapters?currentPage=1&pageSize=25
                        - rel: first
                          uri: /videos/vi3N6cDinStg3oBbN79GklWS/chapters?currentPage=1&pageSize=25
                        - rel: last
                          uri: /videos/vi3N6cDinStg3oBbN79GklWS/chapters?currentPage=1&pageSize=25
                      pageSize: 25
                      pagesTotal: 1
              schema:
                properties:
                  data:
                    items:
                      $ref: "#/components/schemas/chapter"
                    type: array
                  pagination:
                    $ref: "#/components/schemas/pagination"
                type: object
          description: ""
        "404":
          content:
            application/vnd.api.video+json:
              schema:
                $ref: "#/components/schemas/not-found"
          description: ""
      security:
        - bearerAuth: []
      summary: List video chapters
      tags:
        - Chapters
  "/videos/{videoId}/chapters/{language}":
    delete:
      operationId: DELETE_videos-videoId-chapters-language
      parameters:
        - in: path
          name: videoId
          required: true
          schema:
            type: string
        - description: A valid BCP 47 language representation
          in: path
          name: language
          required: true
          schema:
            type: string
      responses:
        "204":
          description: ""
        "404":
          content:
            application/vnd.api.video+json:
              schema:
                $ref: "#/components/schemas/not-found"
          description: ""
      security:
        - bearerAuth: []
      summary: Delete a chapter
      tags:
        - Chapters
    get:
      operationId: GET_videos-videoId-chapters-language
      parameters:
        - in: path
          name: videoId
          required: true
          schema:
            type: string
        - description: A valid BCP 47 language representation
          in: path
          name: language
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    language: fr
                    src: https://cdn.api.video/vod/vi3N6cDinStg3oBbN79GklWS/chapters/fr.vtt
                    uri: /videos/vi3N6cDinStg3oBbN79GklWS/chapters/fr
              schema:
                $ref: "#/components/schemas/chapter"
          description: ""
        "404":
          content:
            application/vnd.api.video+json:
              schema:
                $ref: "#/components/schemas/not-found"
          description: ""
      security:
        - bearerAuth: []
      summary: Show a chapter
      tags:
        - Chapters
    post:
      description: Chapters help break the video into sections. Read our [tutorial](https://api.video/blog/tutorials/adding-chapters-to-your-videos) for more details.
      operationId: POST_videos-videoId-chapters-language
      parameters:
        - in: path
          name: videoId
          required: true
          schema:
            type: string
        - description: A valid BCP 47 language representation
          in: path
          name: language
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: The VTT file describing the chapters you'd like to upload.
                  format: binary
                  type: string
              required:
                - file
              type: object
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    language: fr
                    src: https://cdn.api.video/vod/vi3N6cDinStg3oBbN79GklWS/chapters/fr.vtt
                    uri: /videos/vi3N6cDinStg3oBbN79GklWS/chapters/fr
              schema:
                $ref: "#/components/schemas/chapter"
          description: Success
        "400":
          content:
            application/vnd.api.video+json:
              schema:
                $ref: "#/components/schemas/bad-request"
          description: Bad Request
        "404":
          content:
            application/vnd.api.video+json:
              schema:
                $ref: "#/components/schemas/not-found"
          description: Not Found
      security:
        - bearerAuth: []
      summary: Upload a chapter
      tags:
        - Chapters
  "/videos/{videoId}/source":
    post:
      description: >-
        To upload a video to an existing videoId. Replace {videoId} with the id you'd like to use, {access_token} with your token, and /path/to/video.mp4 with the path to the video you'd like to upload.


        ```bash

        curl https://ws.api.video/videos/{videoId}/source \
          -H 'Authorization: Bearer {access_token}' \
          -F file=@/path/to/video.mp4
          ```
      operationId: POST_videos-videoId-source
      parameters:
        - description: Enter the existing videoId you want to use to upload your video. This will replace whatever was associated with the videoId already.
          example: vi4k0jvEUuaTdRAEjQ4Jfrgz
          in: path
          name: videoId
          required: true
          schema:
            type: string
        - description: Content-Range represents the range of bytes that will be returned as a result of the request. Byte ranges are inclusive, meaning that bytes 0-999 represents the first 1000 bytes in a file or object.
          example: "Content-Range: bytes 200-100/5000"
          in: header
          name: Content-Range
          required: false
          schema:
            pattern: ^bytes [0-9]*-[0-9]*\/[0-9]*$
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: The path to the video you would like to upload.
                  example: https://www.video.com/myvideo.mp4
                  format: binary
                  type: string
              required:
                - file
              type: object
      responses:
        "201":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    assets:
                      hls: https://cdn.api.video/stream/831a9bd9-9f50-464c-a369-8e9d914371ae/hls/manifest.m3u8
                      iframe: <iframe src="//embed.api.video/vi4k0jvEUuaTdRAEjQ4Jfrgz?token=831a9bd9-9f50-464c-a369-8e9d914371ae" width="100%" height="100%" frameborder="0" scrolling="no" allowfullscreen=""></iframe>
                      mp4: https://cdn.api.video/vod/vi4k0jvEUuaTdRAEjQ4Jfrgz/token/8fd70443-d9f0-45d2-b01c-12c8cfc707c9/mp4/720/source.mp4
                      player: https://embed.api.video/vi4k0jvEUuaTdRAEjQ4Jfrgz?token=831a9bd9-9f50-464c-a369-8e9d914371ae
                      thumbnail: https://cdn.api.video/stream/831a9bd9-9f50-464c-a369-8e9d914371ae/thumbnail.jpg
                    description: An amazing video explaining the string theory.
                    metadata:
                      - key: Author
                        value: John Doe
                      - key: Format
                        value: Tutorial
                    mp4Support: true
                    panoramic: false
                    playerId: pl45KFKdlddgk654dspkze
                    public: false
                    publishedAt: 4665-07-14T23:36:18.598Z
                    source:
                      uri: /videos/vi4k0jvEUuaTdRAEjQ4Jfrgz/source
                    tags:
                      - maths
                      - string theory
                      - video
                    title: Maths video
                    videoId: vi4k0jvEUuaTdRAEjQ4Jfrgz
              schema:
                $ref: "#/components/schemas/video"
          description: Created
        "400":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: file
                    problems:
                      - name: file
                        title: The source of the video is already uploaded.
                        type: https://docs.api.video/docs/filealreadyuploaded
                      - name: video
                        title: The video xxxx has already been uploaded.
                        type: https://docs.api.video/docs/filealreadyuploaded
                      - name: file
                        title: There is no uploaded file in the request.
                        type: https://docs.api.video/docs/filemissing
                      - name: file
                        title: There is more than one uploaded file in the request.
                        type: https://docs.api.video/docs/multiplefilesuploaded
                    status: 400
                    title: The source of the video is already uploaded.
                    type: https://docs.api.video/docs/filealreadyuploaded
              schema:
                $ref: "#/components/schemas/bad-request"
          description: Bad Request
        "404":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: videoId
                    status: 404
                    title: The requested resource was not found.
                    type: https://docs.api.video/docs/resourcenot_found
              schema:
                $ref: "#/components/schemas/not-found"
          description: Not Found
      security:
        - bearerAuth: []
      summary: Upload a video
      tags:
        - Videos
  "/videos/{videoId}/status":
    get:
      description: >-
        This API provides upload status & encoding status to determine when the video is uploaded or ready to playback.


        Once encoding is completed, the response also lists the available stream qualities.
      operationId: GET-video-status
      parameters:
        - description: The unique identifier for the video you want the status for.
          example: vi4k0jvEUuaTdRAEjQ4Jfrgz
          in: path
          name: videoId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    encoding:
                      metadata:
                        aspectRatio: 16/9
                        audioCodec: aac
                        bitrate: 411.218
                        duration: 4176
                        framerate: 24
                        height: 240
                        samplerate: 48000
                        videoCodec: h264
                        width: 424
                      playable: true
                      qualities:
                        - quality: 360p
                          status: encoded
                        - quality: 480p
                          status: encoded
                        - quality: 720p
                          status: encoded
                        - quality: 1080p
                          status: encoding
                        - quality: 2160p
                          status: waiting
                    ingest:
                      filesize: 273579401
                      receivedBytes:
                        - from: 0
                          to: 134217727
                          total: 273579401
                        - from: 134217728
                          to: 268435455
                          total: 273579401
                        - from: 268435456
                          to: 273579400
                          total: 273579401
                      status: uploaded
              schema:
                $ref: "#/components/schemas/videostatus"
          description: Success
        "404":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: videoId
                    status: 404
                    title: The requested resource was not found.
                    type: https://docs.api.video/docs/resourcenot_found
              schema:
                $ref: "#/components/schemas/not-found"
          description: Not Found
      security:
        - bearerAuth: []
      summary: Show video status
      tags:
        - Videos
  "/videos/{videoId}/thumbnail":
    patch:
      description: Pick a thumbnail from the given time code. If you'd like to upload an image for your thumbnail, use the [Upload a Thumbnail](https://docs.api.video/reference#post_videos-videoid-thumbnail) endpoint. There may be a short delay for the thumbnail to update.
      operationId: PATCH_videos-videoId-thumbnail
      parameters:
        - description: "Unique identifier of the chosen video "
          example: vi4k0jvEUuaTdRAEjQ4Jfrgz
          in: path
          name: videoId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                timecode: 00:00:00.000
              properties:
                timecode:
                  description: >-
                    Frame in video to be used as a placeholder before the video plays. 

                    Example: "00:01:00.000" for 1 minute into the video.

                    Valid Patterns : 

                    "hh:mm:ss.ms"

                    "hh:mm:ss:frameNumber"

                    "124" (integer value is reported as seconds) 

                    If selection is out of range, "00:00:00.00" will be chosen.
                  pattern: 00:00:00.00
                  type: string
              type: object
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    assets:
                      hls: https://cdn.api.video/stream/831a9bd9-9f50-464c-a369-8e9d914371ae/hls/manifest.m3u8
                      iframe: <iframe src="//embed.api.video/vi4k0jvEUuaTdRAEjQ4Jfrgz?token=831a9bd9-9f50-464c-a369-8e9d914371ae" width="100%" height="100%" frameborder="0" scrolling="no" allowfullscreen=""></iframe>
                      mp4: https://cdn.api.video/vod/vi4k0jvEUuaTdRAEjQ4Jfrgz/token/8fd70443-d9f0-45d2-b01c-12c8cfc707c9/mp4/720/source.mp4
                      player: https://embed.api.video/vi4k0jvEUuaTdRAEjQ4Jfrgz?token=831a9bd9-9f50-464c-a369-8e9d914371ae
                      thumbnail: https://cdn.api.video/stream/831a9bd9-9f50-464c-a369-8e9d914371ae/thumbnail.jpg
                    description: An amazing video explaining string theory
                    metadata:
                      - key: Author
                        value: John Doe
                      - key: Format
                        value: Tutorial
                    mp4Support: true
                    panoramic: false
                    playerId: pl45KFKdlddgk654dspkze
                    public: false
                    publishedAt: 4665-07-14T23:36:18.598Z
                    source:
                      uri: /videos/vi4k0jvEUuaTdRAEjQ4Jfrgz/source
                    tags:
                      - maths
                      - string theory
                      - video
                    title: Maths video
                    videoId: vi4k0jvEUuaTdRAEjQ4Jfrgz
              schema:
                $ref: "#/components/schemas/video"
          description: Success
        "404":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: videoId
                    status: 404
                    title: The requested resource was not found.
                    type: https://docs.api.video/docs/resourcenot_found
              schema:
                $ref: "#/components/schemas/not-found"
          description: Not Found
      security:
        - bearerAuth: []
      summary: Pick a thumbnail
      tags:
        - Videos
    post:
      description: In creating a thumbnail, you may either upload an image, or you can pick a time in the video to be used as thumbnail. This endpoint is to upload an image. Use [Pick a Thumbnail](https://docs.api.video/reference#patch_videos-videoid-thumbnail) to pick a time in the video. There may be a short delay before the new thumbnail is delivered to our CDN.
      operationId: POST_videos-videoId-thumbnail
      parameters:
        - description: "Unique identifier of the chosen video "
          in: path
          name: videoId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/POST_videos-videoId-thumbnail"
      responses:
        "200":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    assets:
                      hls: https://cdn.api.video/stream/831a9bd9-9f50-464c-a369-8e9d914371ae/hls/manifest.m3u8
                      iframe: <iframe src="//embed.api.video/vi4k0jvEUuaTdRAEjQ4Jfrgz?token=831a9bd9-9f50-464c-a369-8e9d914371ae" width="100%" height="100%" frameborder="0" scrolling="no" allowfullscreen=""></iframe>
                      mp4: https://cdn.api.video/vod/vi4k0jvEUuaTdRAEjQ4Jfrgz/token/8fd70443-d9f0-45d2-b01c-12c8cfc707c9/mp4/720/source.mp4
                      player: https://embed.api.video/vi4k0jvEUuaTdRAEjQ4Jfrgz?token=831a9bd9-9f50-464c-a369-8e9d914371ae
                      thumbnail: https://cdn.api.video/stream/831a9bd9-9f50-464c-a369-8e9d914371ae/thumbnail.jpg
                    description: An amazing video explaining the string theory
                    metadata:
                      - key: Author
                        value: John Doe
                      - key: Format
                        value: Tutorial
                    mp4Support: true
                    panoramic: false
                    playerId: pl45KFKdlddgk654dspkze
                    public: false
                    publishedAt: 2020-07-14T23:36:18.598Z
                    scheduledAt: 2020-03-03T12:52:03.085Z
                    source:
                      uri: /videos/vi4k0jvEUuaTdRAEjQ4Jfrgz/source
                    tags:
                      - maths
                      - string theory
                      - video
                    title: Maths video
                    videoId: vi4k0jvEUuaTdRAEjQ4Jfrgz
              schema:
                $ref: "#/components/schemas/video"
          description: Success
        "400":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: file
                    status: 400
                    title: Only [jpeg, jpg, JPG, JPEG] extensions are supported.
                    type: https://docs.api.video/docs/fileextension
              schema:
                $ref: "#/components/schemas/bad-request"
          description: Bad Request
        "404":
          content:
            application/vnd.api.video+json:
              examples:
                response:
                  value:
                    name: videoId
                    status: 404
                    title: The requested resource was not found.
                    type: https://docs.api.video/docs/resourcenot_found
              schema:
                $ref: "#/components/schemas/not-found"
          description: Not Found
      security:
        - bearerAuth: []
      summary: Upload a thumbnail
      tags:
        - Videos
components:
  parameters:
    trait_pageQueryTrait_currentPage:
      description: Number of the page to display
      in: query
      name: currentPage
      required: false
      schema:
        default: 1
        minimum: 1
        type: integer
    trait_pageQueryTrait_pageSize:
      description: Expected number of items to display on the page. Might be lower on the last page
      in: query
      name: pageSize
      required: false
      schema:
        default: 25
        maximum: 100
        minimum: 1
        type: integer
    trait_paginatedListLivesStats_currentPage:
      in: query
      name: currentPage
      required: false
      schema:
        type: integer
    trait_paginatedListLivesStats_pageSize:
      in: query
      name: pageSize
      required: false
      schema:
        type: integer
    trait_paginatedListLivesStats_sortBy:
      description: "Allowed: emitted_at, title"
      in: query
      name: sortBy
      required: false
      schema:
        type: string
    trait_paginatedListLivesStats_sortOrder:
      description: "Allowed: asc, desc"
      in: query
      name: sortOrder
      required: false
      schema:
        type: string
    trait_paginatedListSessionEventsStats_currentPage:
      in: query
      name: currentPage
      required: false
      schema:
        type: integer
    trait_paginatedListSessionEventsStats_metadata:
      description: Metadata and Dynamic Metadata filter.
      explode: true
      in: query
      name: metadata
      required: false
      schema:
        items:
          type: string
        type: array
    trait_paginatedListSessionEventsStats_pageSize:
      in: query
      name: pageSize
      required: false
      schema:
        type: integer
    trait_paginatedListSessionEventsStats_sortBy:
      description: "Allowed: emitted_at, title"
      in: query
      name: sortBy
      required: false
      schema:
        type: string
    trait_paginatedListSessionEventsStats_sortOrder:
      description: "Allowed: asc, desc"
      in: query
      name: sortOrder
      required: false
      schema:
        type: string
    trait_paginatedListSessionEventsStats_tags:
      explode: true
      in: query
      name: tags
      required: false
      schema:
        items:
          type: string
        type: array
    trait_paginatedListVideo_sortBy:
      description: "Allowed: publishedAt, title"
      in: query
      name: sortBy
      required: false
      schema:
        type: string
    trait_paginatedListVideo_sortOrder:
      description: "Allowed: asc, desc"
      in: query
      name: sortOrder
      required: false
      schema:
        type: string
    trait_paginatedListVideosStats_currentPage:
      in: query
      name: currentPage
      required: false
      schema:
        type: integer
    trait_paginatedListVideosStats_metadata:
      description: Metadata and Dynamic Metadata filter.
      explode: true
      in: query
      name: metadata
      required: false
      schema:
        items:
          type: string
        type: array
    trait_paginatedListVideosStats_pageSize:
      in: query
      name: pageSize
      required: false
      schema:
        type: integer
    trait_paginatedListVideosStats_sortBy:
      description: "Allowed: emitted_at, title"
      in: query
      name: sortBy
      required: false
      schema:
        type: string
    trait_paginatedListVideosStats_sortOrder:
      description: "Allowed: asc, desc"
      in: query
      name: sortOrder
      required: false
      schema:
        type: string
    trait_paginatedListVideosStats_tags:
      explode: true
      in: query
      name: tags
      required: false
      schema:
        items:
          type: string
        type: array
  requestBodies:
    POST_videos-videoId-thumbnail:
      content:
        multipart/form-data:
          schema:
            properties:
              file:
                description: The image to be added as a thumbnail.
                format: binary
                type: string
            required:
              - file
            type: object
    playerinput:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/playerinput"
  responses:
    trait_paginatedListLivesStats_200:
      content:
        application/vnd.api.video+json:
          schema:
            properties:
              data:
                items:
                  $ref: "#/components/schemas/live-stream-session"
                type: array
              pagination:
                $ref: "#/components/schemas/pagination"
              period:
                format: date
                type: string
            required:
              - data
              - pagination
            type: object
      description: ""
    trait_paginatedListPlayer_200:
      content:
        application/vnd.api.video+json:
          schema:
            properties:
              data:
                items:
                  properties: {}
                  type: object
                type: array
              pagination:
                $ref: "#/components/schemas/pagination"
            required:
              - data
              - pagination
            type: object
      description: ""
    trait_paginatedListSessionEventsStats_200:
      content:
        application/vnd.api.video+json:
          schema:
            properties:
              data:
                items:
                  $ref: "#/components/schemas/video-session"
                type: array
              pagination:
                $ref: "#/components/schemas/pagination"
              period:
                format: date
                type: string
            required:
              - data
              - pagination
            type: object
      description: ""
    trait_paginatedListVideo_200:
      content:
        application/vnd.api.video+json:
          schema:
            properties:
              data:
                items:
                  properties: {}
                  type: object
                type: array
              pagination:
                $ref: "#/components/schemas/pagination"
            required:
              - data
              - pagination
            type: object
      description: ""
    trait_paginatedListVideosStats_200:
      content:
        application/vnd.api.video+json:
          schema:
            properties:
              data:
                items:
                  $ref: "#/components/schemas/video-session"
                type: array
              pagination:
                $ref: "#/components/schemas/pagination"
              period:
                format: date
                type: string
            required:
              - data
              - pagination
            type: object
      description: ""
  schemas:
    access-token:
      example:
        access_token: est
        expires_in: 3600
        refresh_token: cillum
        token_type: qui nulla l
      properties:
        access_token:
          description: The access token containing security credentials allowing you to acccess the API. The token lasts for one hour.
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjUyZWM4NWUyMjFkODZjOWI0NDQ5NzBhMjQwMzUyOWQ4MDQyNGQ3ZmJjYjFlYWM2MjVlM2VkMjI2YWRlNTcxMDY2NDUyZDc0NjdhN2E4NjI0In0.eyJhdWQiOiJsaWJjYXN0IiwianRpIjoiNTJlYzg1ZTIyMWQ4NmM5YjQ0NDk3MGEyNDAzNTI5ZDgwNDI0ZDdmYmNiMWVhYzYyNWUzZWQyMjZhZGU1NzEwNjY0NTJkNzQ2N2E3YTg2MjQiLCJpYXQiOjE1MjUyNzYxNDcsIm5iZiI6MTUyNTI3NjE0NywiZXhwIjoxNTI1Mjc5NzQ3LCJzdWIiOiJ1c01vbml0b3IiLCJzY29wZXMiOlsibW9uaXRvci5saWJjYXN0LmNvbSJdLCJjb250ZXh0Ijp7InVzZXIiOiJ1c01vbml0b3IiLCJwcm9qZWN0IjoicHJNb25pdG9yIiwibWVtYmVyIjoibWVNb25pdG9yIn19.rUvishDNyJLNlI4W5VmguNecm5KD2uZgPkKJQbaqw-cJbSrVxkSbiKYtk_E3cz3WT7-IS2yFTsYN3uIo5Rbit8_HftweyEp2bdBRI8yjR6oZZ1sNJJXswISN1i2kk4r-aaxu7Xxf_LtsjOMUj_YZsvcc2nqBXPKjHbJCJryx3DDJaIcymOqao7nhQaCCQyrQooAXNTYs4E9fWN1dC_x2O-zok5TuG-xhEW-umwxfSUMWNgSTkz38ACceQ0PCJSgB3jqjDH4MwC7B3ppEPZuK5E6JhKeyRlalswRyYq3UQPnVeMTam7YQHsuTgbehF6WySW8i44o7V_MCe9hjPdp-WA
          type: string
        expires_in:
          description: Lists the time in seconds when your access token expires. It lasts for one hour.
          type: integer
        refresh_token:
          description: A token you can use to get the next access token when your current access token expires.
          example: def50200a28d88fb9aaa921be78eeb5604b071101a334899a7d5fc7492cf8ea752962ddc8961fe5c126101d4ecacd980396eb2fd494995b812dffcb98256c4277f790d1f658fc2d2e34f350740544e5232d69d68d34c648271d706c5e7049adac0b1832d0fdf71809715cc7e97fa63f65966deadb501a55ff469b0fd23a637cb6acbe9d9b8594a17f09efc2efeed82984764a0065d5e29c950c7b081a61ba2aaa192be3085c400ee37eac50fa9320ce2cfe8916c8165418d23e9f91b6a5c8515e1d74ee193a5a1ca01954fbff27361c20184240be2359e0afbed0bf1c762cf872450b5e8b5d4704f4fd9583e4470adc98409dd42965709712806bd9019378a72eea0b4912ce684ffd833db5806ab84174f905db2a75380071d004615c944bb8f8c4045cce7234c2be9a2330522cf7f067b8e58f57cffb6edb4b7ef91313e12bcde47e5e76ceee7fa52990132288f345d33ed917ae4fd54b7284f8964d898e97e1ee3bc4157f75d7fee63976e4be66ac1ec32ef74afa533f0eb593523f226cbec57d196ac8962
          type: string
        token_type:
          default: bearer
          description: The type of token you have.
          type: string
      title: AccessToken
      type: object
    bad-request:
      properties:
        name:
          type: string
        problems:
          items:
            $ref: "#/components/schemas/bad-request"
          type: array
          uniqueItems: true
        status:
          type: integer
        title:
          type: string
        type:
          type: string
      title: BadRequest
      type: object
    bytes_range:
      properties:
        from:
          type: integer
        to:
          type: integer
        total:
          type: integer
      title: bytes_range
      type: object
    chapter:
      properties:
        language:
          type: string
        src:
          type: string
        uri:
          type: string
      title: Chapter
      type: object
    live-stream:
      properties:
        assets:
          properties:
            hls:
              format: uri
              type: string
            iframe:
              type: string
            player:
              format: uri
              type: string
            thumbnail:
              format: uri
              type: string
          type: object
        broadcasting:
          type: boolean
        liveStreamId:
          type: string
        name:
          type: string
        playerId:
          type: string
        record:
          type: boolean
        streamKey:
          type: string
      title: LiveStream
      type: object
    live-stream-session:
      properties:
        client:
          properties:
            name:
              type: string
            version:
              type: string
          type: object
        device:
          properties:
            model:
              type: string
            type:
              type: string
            vendor:
              type: string
          type: object
        location:
          properties:
            city:
              type: string
            country:
              type: string
          type: object
        os:
          properties:
            name:
              type: string
            shortname:
              type: string
            version:
              type: string
          type: object
        referrer:
          properties:
            medium:
              type: string
            searchTerm:
              type: string
            source:
              type: string
            url:
              type: string
          type: object
        session:
          properties:
            endedAt:
              format: date-time
              type: string
            loadedAt:
              format: date-time
              type: string
            sessionId:
              type: string
          type: object
      title: Live Stream Session
      type: object
    not-found:
      properties:
        name:
          type: string
        status:
          type: integer
        title:
          type: string
        type:
          type: string
      title: NotFound
      type: object
    pagination:
      example:
        currentPage: 3
        currentPageItems: 20
        itemsTotal: 123
        links:
          first:
            rel: first
            uri: /videos/search?currentPage=1&pageSize=20
          last:
            rel: last
            uri: /videos/search?currentPage=6&pageSize=20
          next:
            rel: next
            uri: /videos/search?currentPage=4&pageSize=20
          previous:
            rel: previous
            uri: /videos/search?currentPage=2&pageSize=20
        pageSize: 20
        pagesTotal: 7
      properties:
        currentPage:
          description: The current page index.
          readOnly: true
          type: integer
        currentPageItems:
          description: The number of items on the current page.
          readOnly: true
          type: integer
        itemsTotal:
          description: Total number of items that exist.
          readOnly: true
          type: integer
        links:
          items:
            properties:
              "":
                properties:
                  rel:
                    pattern: ^self$
                    type: string
                  uri:
                    format: uri
                    type: string
                type: object
            type: object
          type: array
        pageSize:
          description: Maximum number of item per page.
          readOnly: true
          type: integer
        pagesTotal:
          description: Number of items listed in the current page.
          readOnly: true
          type: integer
      required:
        - links
      title: Pagination
      type: object
    player:
      properties:
        assets:
          properties:
            link:
              description: url
              type: string
            logo:
              description: filename of image used for logo
              type: string
          type: object
        backgroundBottom:
          description: "RGBA color: bottom 50% of background. Default: rgba(0, 0, 0, .7)"
          type: string
        backgroundText:
          description: "RGBA color for title text. Default: rgba(255, 255, 255, 1)"
          type: string
        backgroundTop:
          description: "RGBA color: top 50% of background. Default: rgba(0, 0, 0, .7)"
          type: string
        createdAt:
          description: Creation date
          format: date-time
          type: string
        enableApi:
          description: "enable/disable player SDK access. Default: true"
          type: boolean
        enableControls:
          description: "enable/disable player controls. Default: true"
          type: boolean
        forceAutoplay:
          description: "enable/disable player autoplay. Default: false"
          type: boolean
        forceLoop:
          default: false
          description: "enable/disable looping. Default: false"
          type: boolean
        hideTitle:
          description: "enable/disable title. Default: false"
          type: boolean
        link:
          description: "RGBA color for all controls. Default: rgba(255, 255, 255, 1)"
          type: string
        linkActive:
          description: Deprecated
          type: string
        linkHover:
          description: "RGBA color for all controls when hovered. Default: rgba(255, 255, 255, 1)"
          type: string
        playerId:
          example: pl45KFKdlddgk654dspkze
          type: string
        shapeAspect:
          description: Deprecated
          type: string
        shapeBackgroundBottom:
          description: Deprecated
          type: string
        shapeBackgroundTop:
          description: Deprecated
          type: string
        shapeMargin:
          description: Deprecated
          type: integer
        shapeRadius:
          description: Deprecated
          type: integer
        text:
          description: "RGBA color for timer text. Default: rgba(255, 255, 255, 1)"
          type: string
        trackBackground:
          description: "RGBA color playback bar: background. Default: rgba(255, 255, 255, .2)"
          type: string
        trackPlayed:
          description: "RGBA color playback bar: played content. Default: rgba(88, 131, 255, .95)"
          type: string
        trackUnplayed:
          description: "RGBA color playback bar: downloaded but unplayed (buffered) content. Default: rgba(255, 255, 255, .35)"
          type: string
        updatedAt:
          description: Last update date
          format: date-time
          type: string
      title: Player
      type: object
    player-session-event:
      properties:
        at:
          type: integer
        emittedAt:
          format: date-time
          type: string
        from:
          type: integer
        to:
          type: integer
        type:
          description: "Possible values are: ready, play, pause, resume, seek.backward, seek.forward, end"
          example: play
          type: string
      title: Player Session Event
      type: object
    playerinput:
      example:
        assets:
          link: https://api.video
          logo: https://cdn.api.video/player/pl14Db6oMJRH6SRVoOwORacK/logo.png
        backgroundBottom: rgba(94, 95, 89, 1)
        backgroundText: rgba(255, 255, 255, .95)
        backgroundTop: rgba(72, 4, 45, 1)
        enableApi: true
        enableControls: true
        forceAutoplay: false
        forceLoop: false
        hideTitle: false
        language: en
        link: rgba(255, 0, 0, .95)
        linkActive: rgba(255, 0, 0, .75)
        linkHover: rgba(255, 255, 255, .75)
        playerId: pl14Db6oMJRH6SRVoOwORacK
        shapeAspect: flat
        shapeBackgroundBottom: rgba(50, 50, 50, .8)
        shapeBackgroundTop: rgba(50, 50, 50, .7)
        shapeMargin: 10
        shapeRadius: 3
        text: rgba(255, 255, 255, .95)
        trackBackground: rgba(0, 0, 0, 0)
        trackPlayed: rgba(255, 255, 255, .95)
        trackUnplayed: rgba(255, 255, 255, .1)
      properties:
        backgroundBottom:
          description: "RGBA color: bottom 50% of background. Default: rgba(0, 0, 0, .7)"
          type: string
        backgroundText:
          description: "RGBA color for title text. Default: rgba(255, 255, 255, 1)"
          type: string
        backgroundTop:
          description: "RGBA color: top 50% of background. Default: rgba(0, 0, 0, .7)"
          type: string
        enableApi:
          default: true
          description: "enable/disable player SDK access. Default: true"
          type: boolean
        enableControls:
          default: true
          description: "enable/disable player controls. Default: true"
          type: boolean
        forceAutoplay:
          default: false
          description: "enable/disable player autoplay. Default: false"
          type: boolean
        forceLoop:
          default: false
          description: "enable/disable looping. Default: false"
          type: boolean
        hideTitle:
          default: false
          description: "enable/disable title. Default: false"
          type: boolean
        link:
          description: "RGBA color for all controls. Default: rgba(255, 255, 255, 1)"
          type: string
        linkHover:
          description: "RGBA color for all controls when hovered. Default: rgba(255, 255, 255, 1)"
          type: string
        text:
          description: "RGBA color for timer text. Default: rgba(255, 255, 255, 1)"
          type: string
        trackBackground:
          description: "RGBA color playback bar: background. Default: rgba(255, 255, 255, .2)"
          type: string
        trackPlayed:
          description: "RGBA color playback bar: played content. Default: rgba(88, 131, 255, .95)"
          type: string
        trackUnplayed:
          description: "RGBA color playback bar: downloaded but unplayed (buffered) content. Default: rgba(255, 255, 255, .35)"
          type: string
      title: PlayerInput
      type: object
    quality:
      properties:
        quality:
          enum:
            - 360p
            - 480p
            - 720p
            - 1080p
            - 2160p
          type: string
        status:
          enum:
            - waiting
            - encoding
            - encoded
            - failed
          type: string
      title: quality
      type: object
    subtitle:
      properties:
        default:
          default: false
          type: boolean
        src:
          type: string
        srclang:
          type: string
        uri:
          type: string
      title: Subtitle
      type: object
    upload-token:
      properties:
        createdAt:
          format: date-time
          type: string
        expiresAt:
          format: date-time
          type: string
        token:
          type: string
        ttl:
          maximum: 2147483647
          minimum: 0
          type: integer
      title: UploadToken
      type: object
    video:
      allOf:
        - $ref: "#/components/schemas/videooutput"
        - {}
      example:
        actions:
          - video_delete
          - video_download
          - video_update
        description: An amazing video explaining the string theory
        metadata:
          - key: Author
            value: John Doe
          - key: Format
            value: Tutorial
        publishedAt: 4665-07-14T23:36:18.598Z
        scheduledAt: 4251-03-03T12:52:03.085Z
        tags:
          - maths
          - string theory
          - video
        title: Maths video
        videoId: c188ed58-3403-46a2-b91b-44603d10b2c9
      title: Video
    video-session:
      example:
        client:
          name: Firefox
          type: browser
          version: "67.0"
        device:
          model: unknown
          type: desktop
          vendor: Dell
        location:
          city: Paris
          country: France
        os:
          name: Microsoft Windows
          shortname: W10
          version: Windows10
        referrer:
          medium: organic
          searchTerm: video encoding hosting and delivery
          source: https://google.com
          url: https://api.video
        session:
          endedAt: 2019-06-24T11:49:19.243+00
          loadedAt: 2019-06-24T11:45:01.109+00
          sessionId: psEmFwGQUAXR2lFHj5nDOpy
      properties:
        client:
          properties:
            name:
              type: string
            version:
              type: string
          type: object
        device:
          properties:
            model:
              type: string
            type:
              type: string
            vendor:
              type: string
          type: object
        location:
          properties:
            city:
              type: string
            country:
              type: string
          type: object
        os:
          properties:
            name:
              type: string
            shortname:
              type: string
            version:
              type: string
          type: object
        referrer:
          properties:
            medium:
              type: string
            searchTerm:
              type: string
            source:
              type: string
            url:
              type: string
          type: object
        session:
          properties:
            endedAt:
              format: date-time
              type: string
            loadedAt:
              format: date-time
              type: string
            sessionId:
              type: string
          type: object
      title: Video Session
      type: object
    videooutput:
      properties:
        assets:
          description: Collection of details about the video object that you can use to work with the video object.
          properties:
            hls:
              description: This is the manifest URL. For HTTP Live Streaming (HLS), when a HLS video stream is initiated, the first file to download is the manifest. This file has the extension M3U8, and provides the video player with information about the various bitrates available for streaming.
              format: uri
              type: string
            iframe:
              description: Code to use video from a third party website
              example: <iframe src="//embed.api.video/c188ed58-3403-46a2-b91b-44603d10b2c9?token=831a9bd9-9f50-464c-a369-8e9d914371ae" width="100%" height="100%" frameborder="0" scrolling="no" allowfullscreen=""></iframe>
              type: string
            mp4:
              description: Available only if mp4Support is enabled. Raw mp4 url.
              example: https://cdn.api.video/vod/vi4k0jvEUuaTdRAEjQ4Jfrgz/token/8fd70443-d9f0-45d2-b01c-12c8cfc707c9/mp4/720/source.mp4
              format: uri
              type: string
            player:
              description: Raw url of the player.
              example: https://embed.api.video/1b9d6ae8-8f57-4b6d-8552-d636926b4f5f?token=831a9bd9-9f50-464c-a369-8e9d914371ae
              format: uri
              type: string
            thumbnail:
              description: Poster of the video.
              example: https://cdn.api.video/stream/831a9bd9-9f50-464c-a369-8e9d914371ae/thumbnail.jpg
              format: uri
              type: string
          type: object
        description:
          description: >
            A description for the video content.
          example: An amazing video explaining string theory.
          type: string
        metadata:
          description: >
            Metadata you can use to categorise and filter videos. Metadata is a list of dictionaries, where each dictionary represents a key value pair for categorising a video. 
          example: '[{"key":"Author", "value":"John Doe"}, {"key":"Format", "value":"Tutorial"}]'
          items: {}
          type: array
        mp4Support:
          description: >
            This lets you know whether mp4 is supported. If enabled, an mp4 URL will be provided in the response for the video.
          example: true
          type: boolean
        panoramic:
          description: >
            Defines if video is panoramic.
          example: false
          type: boolean
        playerId:
          description: >
            The id of the player that will be applied on the video.
          example: pl45KFKdlddgk654dspkze
          type: string
        public:
          description: >
            Defines if the content is publicly reachable or if a unique token is needed for each play session.
          example: false
          type: boolean
        publishedAt:
          description: The date and time the API created the video. Date and time are provided using ISO-8601 UTC format.
          example: 2019-12-16T08:25:51+00:00
          type: string
        source:
          description: Source information about the video.
          properties:
            liveStream:
              description: This appears if the video is from a Live Record.
              properties:
                links:
                  items:
                    properties:
                      rel:
                        type: string
                      uri:
                        type: string
                    type: object
                  type: array
                liveStreamId:
                  type: string
              type: object
            type:
              type: string
            uri:
              description: The URL where the video is stored.
              example: /videos/c188ed58-3403-46a2-b91b-44603d10b2c9/source
              type: string
          type: object
        tags:
          description: >
            One array of tags (each tag is a string) in order to categorize a video. Tags may include spaces. 
          example: '"tags": ["maths", "string theory", "video"]'
          items: {}
          type: array
        title:
          description: >
            The title of the video content.
          example: Maths video
          type: string
        updatedAt:
          description: The date and time the video was updated. Date and time are provided using ISO-8601 UTC format.
          example: 2019-12-16T08:25:51+00:10
          format: date-time
          type: string
        videoId:
          description: The unique identifier of the video object.
          example: c188ed58-3403-46a2-b91b-44603d10b2c9
          type: string
      title: VideoOutput
      type: object
    videostatus:
      example:
        encoding:
          metadata:
            aspectRatio: 16/9
            audioCodec: aac
            bitrate: 411.218
            duration: 4176
            framerate: 24
            height: 240
            samplerate: 48000
            videoCodec: h264
            width: 424
          playable: true
          qualities:
            - quality: 360p
              status: encoded
            - quality: 480p
              status: encoded
            - quality: 720p
              status: encoded
            - quality: 1080p
              status: encoding
            - quality: 2160p
              status: waiting
        ingest:
          filesize: 273579401
          receivedBytes:
            - from: 0
              to: 134217727
              total: 273579401
            - from: 134217728
              to: 268435455
              total: 273579401
            - from: 268435456
              to: 273579400
              total: 273579401
          status: uploaded
      properties:
        encoding:
          properties:
            metadata:
              properties:
                aspectRatio:
                  type: string
                audioCodec:
                  type: string
                bitrate:
                  description: The number of bits processed per second.
                  type: number
                duration:
                  description: The length of the video.
                  type: integer
                framerate:
                  description: The frequency with which consecutive images or frames appear on a display. Shown in this API as frames per second (fps).
                  example: 60
                  type: integer
                height:
                  description: The height of the video in pixels.
                  type: integer
                samplerate:
                  description: How many samples per second a digital audio system uses to record an audio signal. The higher the rate, the higher the frequencies that can be recorded. They are presented in this API using hertz.
                  example: 48000
                  type: integer
                videoCodec:
                  type: string
                width:
                  description: The width of the video in pixels.
                  type: integer
              type: object
            playable:
              description: Whether the video is playable or not.
              example: true
              type: boolean
            qualities:
              description: Available qualities the video can be viewed in.
              items:
                $ref: "#/components/schemas/quality"
              type: array
          type: object
        ingest:
          description: Details about the capturing, transferring, and storing of your video for use immediately or in the future.
          properties:
            filesize:
              description: The size of your file in bytes.
              example: 200000
              type: integer
            receivedBytes:
              description: The total number of bytes received, listed for each chunk of the upload.
              items:
                $ref: "#/components/schemas/bytes_range"
              type: array
            status:
              description: There are three possible ingest statuses. missing - you are missing information required to ingest the video. uploading - the video is in the process of being uploaded. uploaded - the video is ready for use.
              enum:
                - missing
                - uploading
                - uploaded
              example: uploaded
              type: string
          type: object
      title: VideoStatus
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
x-explorer-enabled: true
x-proxy-enabled: true
x-samples-enabled: true
x-samples-languages:
  - curl
  - node
  - ruby
  - javascript
  - python
