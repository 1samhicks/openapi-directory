openapi: 3.0.0
servers:
  - url: https://unify.apideck.com/crm
info:
  contact:
    email: hello@apideck.com
    url: https://developers.apideck.com
  description: >
    ## Welcome to the CRM API.


    You can use this API to access all CRM endpoints.


    If you are working with APIs, you are probably already familiar with Postman, a development tool that enables you to configure and run API requests. Click the button below to run the collection.


    [![Run our CRM API in Postman](https://app.apideck.com/images/postman-button.svg)](https://www.postman.com/apideck/workspace/unified-apis/overview)


    ## Base URL


    The base URL for all API requests is `https://unify.apideck.com/crm`


    ## GraphQL


    Use the [GraphQL playground](https://unify.apideck.com/graphql) to test out the GraphQL API.


    ## Headers


    Custom headers that are expected as part of the request. Note that [RFC7230](https://tools.ietf.org/html/rfc7230) states header names are case insensitive.


    | Name                  | Type    | Required | Description                                                                                                                                                    |

    | --------------------- | ------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |

    | x-apideck-consumer-id | String  | Yes      | The id of the customer stored inside Apideck Vault. This can be a user id, account id, device id or whatever entity that can have integration within your app. |

    | x-apideck-service-id  | String  | No       | Describe the service you want to call (e.g., pipedrive). Only needed when a customer has activated multiple integrations for the same Unified API.             |

    | x-apideck-raw         | Boolean | No       | Include raw response. Mostly used for debugging purposes.                                                                                                      |

    | x-apideck-app-id      | String  | Yes      | The application id of your Unify application. Available at https://app.apideck.com/unify/api-keys.                                                             |

    | Authorization         | String  | Yes      | Bearer API KEY                                                                                                                                                 |


    ## Authorization


    You can interact with the API through the authorization methods below.


    <!-- ReDoc-Inject: <security-definitions> -->


    ## Connectors


    Supported connectors and endpoints


    | Service ID                                                      | Status            | v*         | Custom fields | Webhooks  |

    | --------------------------------------------------------------- | ----------------- | ---------- | ------------- | --------- |

    | [ActiveCampaign](https://www.activecampaign.com/)               | &#128736;&#65039; | 3          | &#128284;     | &#128284; |

    | [Auth0](https://auth0.com)                                      | &#128736;&#65039; | 2          | &#128284;     | &#128284; |

    | [Close](https://close.com)                                      | &#128736;&#65039; | 1.0.0      | &#128284;     | &#128284; |

    | [Copper](https://www.copper.com/)                               | &#9989;           | 1.0.0      | &#9989;       | &#128284; |

    | [Customer.io](https://customer.io/)                             | &#128736;&#65039; |            | &#128284;     | &#128284; |

    | [HubSpot](https://www.hubspot.com/)                             | &#128736;&#65039; | 1.0.0      | &#128284;     | &#128284; |

    | [Microsoft Dynamics CRM](https://dynamics.microsoft.com/en-us/) | &#128736;&#65039; | 1          | &#128284;     | &#128284; |

    | [Mixmax](https://mixmax.com)                                    | &#128736;&#65039; | 0.1.0      | &#128284;     | &#128284; |

    | [Pipedrive](https://www.pipedrive.com/)                         | &#128736;&#65039; | 1.0.0      | &#128284;     | &#128284; |

    | [Reply](https://reply.io)                                       | &#128736;&#65039; | 1.0        | &#128284;     | &#128284; |

    | [Salesflare](https://salesflare.com)                            | &#128736;&#65039; | 0.0.1      | &#128284;     | &#128284; |

    | [Salesforce](https://www.salesforce.com)                        | &#9989;           | v39.0      | &#9989;       | &#128284; |

    | [Teamleader](https://www.teamleader.eu/)                        | &#128736;&#65039; | 2019-01-24 | &#128284;     | &#128284; |

    | [Zendesk Sell](https://www.zendesk.com/sell/)                   | &#128736;&#65039; | 2.0        | &#128284;     | &#128284; |

    | [Zoho CRM](https://www.zoho.com/crm/)                           | &#9989;           | 2.0        | &#9989;       | &#128284; |


    | &#9989; <span style="font-size:0.75em">Available for implementation</span> | - <span style="font-size:0.75em">Not Supported</span>        | &#128736;&#65039; <span style="font-size:0.75em">In Development</span> |

    | -------------------------------------------------------------------------- | ------------------------------------------------------------ | ---------------------------------------------------------------------- |

    | * <span style="font-size:0.75em">Latest supported API version</span>       | &#128284; <span style="font-size:0.75em">Coming Soon!</span> |                                                                        |


    ## SDKs and API Clients


    Upcoming. [Request the SDK of your choice](https://integrations.apideck.com/request).


    ## Debugging


    Because of the nature of the abstraction we do in Apideck Unify we still provide the option to the receive raw requests and responses being handled underlying. By including the raw flag `?raw=true` in your requests you can still receive the full request. Please note that this increases the response size and can introduce extra latency.


    ## Errors


    The API returns standard HTTP response codes to indicate success or failure of the API requests. For errors, we also return a customized error message inside the JSON response. You can see the returned HTTP status codes below.


    | Code | Title                | Description                                                                                                                                                                                              |

    | ---- | -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |

    | 200  | OK                   | The request message has been successfully processed, and it has produced a response. The response message varies, depending on the request method and the requested data.                                |

    | 201  | Created              | The request has been fulfilled and has resulted in one or more new resources being created.                                                                                                              |

    | 204  | No Content           | The server has successfully fulfilled the request and that there is no additional content to send in the response payload body.                                                                          |

    | 400  | Bad Request          | The receiving server cannot understand the request because of malformed syntax. Do not repeat the request without first modifying it; check the request for errors, fix them and then retry the request. |

    | 401  | Unauthorized         | The request has not been applied because it lacks valid authentication credentials for the target resource.                                                                                              |

    | 402  | Payment Required     | Subscription data is incomplete or out of date. You'll need to provide payment details to continue.                                                                                                      |

    | 403  | Forbidden            | You do not have the appropriate user rights to access the request. Do not repeat the request.                                                                                                            |

    | 404  | Not Found            | The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.                                                                           |

    | 409  | Conflict             | The request could not be completed due to a conflict with the current state of the target resource.                                                                                                      |

    | 422  | Unprocessable Entity | The server understands the content type of the request entity, and the syntax of the request entity is correct but was unable to process the contained instructions.                                     |

    | 5xx  | Server Errors        | Something went wrong with the Unify API. These errors are logged on our side. You can contact our team to resolve the issue.                                                                             |


    ### Handling errors


    The Unify API and SDKs can produce errors for many reasons, such as a failed requests due to misconfigured integrations, invalid parameters, authentication errors, and network unavailability.


    ### Error Types


    #### MissingParamsError


    Request is missing parameters from either path of body. Missing required params are described in the error detail of response.


    #### MissingHeadersError


    Request was made missing one of the required headers. Missing headers are described in the error detail of response. Check the documentation for the request you are making. One or more of the following will be required: `x-apideck-app-id`, `x-apideck-consumer-id`, `x-apideck-service-id`


    #### SpecRequestValidationError


    Input variables are not aligned with the open-api spec. Check the spelling and types of your attributes, and ensure you are not passing data that is outside of the the specification.


    #### ConnectorExecutionError


    A Unified API request made via one of our downstream connectors returned an unexpected error. The `status_code` returned is proxied through to error response along with their original response via the error detail.


    #### UnauthorizedError


    We were unable to authorize the request as made. This can happen for a number of reasons, from missing header params to passing an incorrect authorization token. Verify your Api Key is being set correctly in the authorization header. ie: `Authorization: 'Bearer sk_live_***'`


    #### ConnectorCredentialsError


    A request using a given connector has not been authorized. Ensure the connector you are trying to use has been configured correctly and been authorized for use.


    #### ConnectorDisabledError


    A request has been made to a connector that has since been disabled. This may be temporary - You can contact our team to resolve the issue.


    #### RequestLimitError


    You have reached the number of requests included in your Free Tier Subscription. You will no be able to make further requests until this limit resets at the end of the month, or talk to us about upgrading your subscription to continue immediately.


    #### EntityNotFoundError


    You've made a request for a resource or route that does not exist. Verify your path parameters or any identifiers used to fetch this resource.


    #### CredentialsNotFoundError


    When adding a connector integration that implement OAuth, both a `client_id` and `client_secret` must be provided before any authorizations can be performed. Verify the integration has been configured properly before continuing.


    #### IntegrationNotFoundError


    The requested connector integration could not be found associated to your `application_id`. Verify your `application_id` is correct, and that this connector has been added and configured for your application.


    #### ConnectionNotFoundError


    A valid connection could not be found associated to your `application_id`. Something _may_ have interrupted the authorization flow. You may need to start the connector authorization process again.


    #### ConnectorNotFoundError


    A request was made for an unknown connector. Verify your `service_id` is spelled correctly, and that this connector is enabled for your provided `unified_api`.


    #### RedirectUriError


    A request was made either in a connector authorization flow, or attempting to revoke connector access without a valid `redirect_uri`. This is the url the user should be returned to on completion of process.


    #### InvalidStateError


    The state param is required and is used to ensure the outgoing authorization state has not been altered before user id redirected back. It also contains required params needed to identify the connector being used. If this has been altered, the authorization will not succeed.


    #### AuthCodeExchangeError


    When attempting to exchange the authorization code for an `access_token` during an OAuth flow, an error occurred. This may be temporary. You can reattempt authorization or contact our team to resolve the issue.


    #### MappingError


    There was an error attempting to retrieve the mapping for a given attribute. We've been notified and are working to fix this issue.


    #### ConnectorMappingNotFoundError


    It seems the implementation for this connector is incomplete. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.


    #### ConnectorResponseMappingNotFoundError


    We were unable to retrieve the response mapping for this connector. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.


    #### ConnectorOperationMappingNotFoundError


    Connector mapping has not been implemented for the requested operation. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.


    #### ConnectorWorkflowMappingError


    The composite api calls required for this operation have not been mapped entirely. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.


    ## API Design


    ### API Styles and data formats


    #### REST API


    The API is organized around [REST](https://restfulapi.net/), providing simple and predictable URIs to access and modify objects. Requests support standard HTTP methods like GET, PUT, POST, and DELETE and standard status codes. JSON is returned by all API responses, including errors. In all API requests, you must set the content-type HTTP header to application/json. All API requests must be made over HTTPS. Calls made over HTTP will fail.


    ##### Available HTTP methods


    The Apideck API uses HTTP verbs to understand if you want to read (GET), delete (DELETE) or create (POST) an object. When your web application cannot do a POST or DELETE, we provide the ability to set the method through the query parameter \_method.


    ```

    POST /messages

    GET /messages

    GET /messages/{messageId}

    PATCH /messages/{messageId}

    DELETE /messages/{messageId}

    ```


    Response bodies are always UTF-8 encoded JSON objects, unless explicitly documented otherwise. For some endpoints and use cases we divert from REST to provide a better developer experience.


    ### Schema


    All API requests and response bodies adhere to a common JSON format representing individual items, collections of items, links to related items and additional meta data.


    ### Meta


    Meta data can be represented as a top level member named “meta”. Any information may be provided in the meta data. It’s most common use is to return the total number of records when requesting a collection of resources.


    ### Idempotence (upcoming)


    To prevent the creation of duplicate resources, every POST method (such as one that creates a consumer record) must specify a unique value for the X-Unique-Transaction-ID header name. Uniquely identifying each unique POST request ensures that the API processes a given request once and only once.


    Uniquely identifying new resource-creation POSTs is especially important when the outcome of a response is ambiguous because of a transient service interruption, such as a server-side timeout or network disruption. If a service interruption occurs, then the client application can safely retry the uniquely identified request without creating duplicate operations. (API endpoints that guarantee that every uniquely identified request is processed only once no matter how many times that uniquely identifiable request is made are described as idempotent.)


    ### Request IDs


    Each API request has an associated request identifier. You can find this value in the response headers, under Request-Id. You can also find request identifiers in the URLs of individual request logs in your Dashboard. If you need to contact us about a specific request, providing the request identifier will ensure the fastest possible resolution.


    ### Fixed field types


    #### Dates


    The dates returned by the API are all represented in UTC (ISO8601 format).


    This example `2019-11-14T00:55:31.820Z` is defined by the ISO 8601 standard. The T in the middle separates the year-month-day portion from the hour-minute-second portion. The Z on the end means UTC, that is, an offset-from-UTC of zero hours-minutes-seconds. The Z is pronounced "Zulu" per military/aviation tradition.


    The ISO 8601 standard is more modern. The formats are wisely designed to be easy to parse by machine as well as easy to read by humans across cultures.


    #### Prices and Currencies


    All prices returned by the API are represented as integer amounts in a currency’s smallest unit. For example, $5 USD would be returned as 500 (i.e, 500 cents).


    For zero-decimal currencies, amounts will still be provided as an integer but without the need to divide by 100. For example, an amount of ¥5 (JPY) would be returned as 5.


    All currency codes conform to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).


    ## Support


    If you have problems or need help with your case, you can always reach out to our Support.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: CRM API
  version: 0.1.0
  x-apisguru-categories:
    - developer_tools
  x-logo:
    url: https://developers.apideck.com/icon.png
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/apideck-libraries/openapi-specs/master/crm.yml
      version: "3.0"
  x-providerName: apideck.com
  x-serviceName: crm
security:
  - apiKey: []
tags:
  - description: ""
    name: Companies
  - description: ""
    name: Opportunities
  - description: ""
    name: Leads
  - description: ""
    name: Contacts
paths:
  /companies:
    get:
      description: List companies
      operationId: companiesAll
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/x-apideck-consumer-id"
        - $ref: "#/components/parameters/x-apideck-app-id"
        - $ref: "#/components/parameters/x-apideck-service-id"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/per_page"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/companies"
          description: company
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unexpected error
      security:
        - apiKey: []
      summary: List companies
      tags:
        - Companies
    post:
      description: Create company
      operationId: companiesAdd
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/x-apideck-consumer-id"
        - $ref: "#/components/parameters/x-apideck-app-id"
        - $ref: "#/components/parameters/x-apideck-service-id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/companiesAdd"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/companiesAddResponse"
          description: Companies created
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unexpected error
      security:
        - apiKey: []
      summary: Create company
      tags:
        - Companies
  "/companies/{id}":
    delete:
      description: Delete company
      operationId: companiesDelete
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/x-apideck-consumer-id"
        - $ref: "#/components/parameters/x-apideck-app-id"
        - $ref: "#/components/parameters/x-apideck-service-id"
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/companiesDeleteResponse"
          description: Companies deleted
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unexpected error
      security:
        - apiKey: []
      summary: Delete company
      tags:
        - Companies
    get:
      description: Get company
      operationId: companiesOne
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/x-apideck-consumer-id"
        - $ref: "#/components/parameters/x-apideck-app-id"
        - $ref: "#/components/parameters/x-apideck-service-id"
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/company"
          description: company
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unexpected error
      security:
        - apiKey: []
      summary: Get company
      tags:
        - Companies
    patch:
      description: Update company
      operationId: companiesUpdate
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/x-apideck-consumer-id"
        - $ref: "#/components/parameters/x-apideck-app-id"
        - $ref: "#/components/parameters/x-apideck-service-id"
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/companiesUpdate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/companiesUpdateResponse"
          description: Companies updated
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unexpected error
      security:
        - apiKey: []
      summary: Update company
      tags:
        - Companies
  /contacts:
    get:
      description: List contacts
      operationId: contactsAll
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/x-apideck-consumer-id"
        - $ref: "#/components/parameters/x-apideck-app-id"
        - $ref: "#/components/parameters/x-apideck-service-id"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/per_page"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contacts"
          description: contact
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unexpected error
      security:
        - apiKey: []
      summary: List contacts
      tags:
        - Contacts
    post:
      description: Create contact
      operationId: contactsAdd
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/x-apideck-consumer-id"
        - $ref: "#/components/parameters/x-apideck-app-id"
        - $ref: "#/components/parameters/x-apideck-service-id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/contactsAdd"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactsAddResponse"
          description: Contacts created
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unexpected error
      security:
        - apiKey: []
      summary: Create contact
      tags:
        - Contacts
  "/contacts/{id}":
    delete:
      description: Delete contact
      operationId: contactsDelete
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/x-apideck-consumer-id"
        - $ref: "#/components/parameters/x-apideck-app-id"
        - $ref: "#/components/parameters/x-apideck-service-id"
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactsDeleteResponse"
          description: Contacts deleted
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unexpected error
      security:
        - apiKey: []
      summary: Delete contact
      tags:
        - Contacts
    get:
      description: Get contact
      operationId: contactsOne
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/x-apideck-consumer-id"
        - $ref: "#/components/parameters/x-apideck-app-id"
        - $ref: "#/components/parameters/x-apideck-service-id"
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contact"
          description: contact
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unexpected error
      security:
        - apiKey: []
      summary: Get contact
      tags:
        - Contacts
    patch:
      description: Update contact
      operationId: contactsUpdate
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/x-apideck-consumer-id"
        - $ref: "#/components/parameters/x-apideck-app-id"
        - $ref: "#/components/parameters/x-apideck-service-id"
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/contactsUpdate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactsUpdateResponse"
          description: Contacts updated
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unexpected error
      security:
        - apiKey: []
      summary: Update contact
      tags:
        - Contacts
  /leads:
    get:
      description: List leads
      operationId: leadsAll
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/x-apideck-consumer-id"
        - $ref: "#/components/parameters/x-apideck-app-id"
        - $ref: "#/components/parameters/x-apideck-service-id"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/per_page"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/leads"
          description: lead
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unexpected error
      security:
        - apiKey: []
      summary: List leads
      tags:
        - Leads
    post:
      description: Create lead
      operationId: leadsAdd
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/x-apideck-consumer-id"
        - $ref: "#/components/parameters/x-apideck-app-id"
        - $ref: "#/components/parameters/x-apideck-service-id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/leadsAdd"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/leadsAddResponse"
          description: Leads created
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unexpected error
      security:
        - apiKey: []
      summary: Create lead
      tags:
        - Leads
  "/leads/{id}":
    delete:
      description: Delete lead
      operationId: leadsDelete
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/x-apideck-consumer-id"
        - $ref: "#/components/parameters/x-apideck-app-id"
        - $ref: "#/components/parameters/x-apideck-service-id"
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/leadsDeleteResponse"
          description: Leads deleted
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unexpected error
      security:
        - apiKey: []
      summary: Delete lead
      tags:
        - Leads
    get:
      description: Get lead
      operationId: leadsOne
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/x-apideck-consumer-id"
        - $ref: "#/components/parameters/x-apideck-app-id"
        - $ref: "#/components/parameters/x-apideck-service-id"
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/lead"
          description: lead
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unexpected error
      security:
        - apiKey: []
      summary: Get lead
      tags:
        - Leads
    patch:
      description: Update lead
      operationId: leadsUpdate
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/x-apideck-consumer-id"
        - $ref: "#/components/parameters/x-apideck-app-id"
        - $ref: "#/components/parameters/x-apideck-service-id"
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/leadsUpdate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/leadsUpdateResponse"
          description: Leads updated
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unexpected error
      security:
        - apiKey: []
      summary: Update lead
      tags:
        - Leads
  /opportunities:
    get:
      description: List opportunities
      operationId: opportunitiesAll
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/x-apideck-consumer-id"
        - $ref: "#/components/parameters/x-apideck-app-id"
        - $ref: "#/components/parameters/x-apideck-service-id"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/per_page"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/opportunities"
          description: opportunity
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unexpected error
      security:
        - apiKey: []
      summary: List opportunities
      tags:
        - Opportunities
    post:
      description: Create opportunity
      operationId: opportunitiesAdd
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/x-apideck-consumer-id"
        - $ref: "#/components/parameters/x-apideck-app-id"
        - $ref: "#/components/parameters/x-apideck-service-id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/opportunitiesAdd"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/opportunitiesAddResponse"
          description: Opportunities created
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unexpected error
      security:
        - apiKey: []
      summary: Create opportunity
      tags:
        - Opportunities
  "/opportunities/{id}":
    delete:
      description: Delete opportunity
      operationId: opportunitiesDelete
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/x-apideck-consumer-id"
        - $ref: "#/components/parameters/x-apideck-app-id"
        - $ref: "#/components/parameters/x-apideck-service-id"
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/opportunitiesDeleteResponse"
          description: Opportunities deleted
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unexpected error
      security:
        - apiKey: []
      summary: Delete opportunity
      tags:
        - Opportunities
    get:
      description: Get opportunity
      operationId: opportunitiesOne
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/x-apideck-consumer-id"
        - $ref: "#/components/parameters/x-apideck-app-id"
        - $ref: "#/components/parameters/x-apideck-service-id"
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/opportunity"
          description: opportunity
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unexpected error
      security:
        - apiKey: []
      summary: Get opportunity
      tags:
        - Opportunities
    patch:
      description: Update opportunity
      operationId: opportunitiesUpdate
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/x-apideck-consumer-id"
        - $ref: "#/components/parameters/x-apideck-app-id"
        - $ref: "#/components/parameters/x-apideck-service-id"
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/opportunitiesUpdate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/opportunitiesUpdateResponse"
          description: Opportunities updated
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "402":
          $ref: "#/components/responses/PaymentRequired"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unexpected error
      security:
        - apiKey: []
      summary: Update opportunity
      tags:
        - Opportunities
components:
  parameters:
    id:
      description: ID of the record you are acting upon.
      in: path
      name: id
      required: true
      schema:
        type: string
    offset:
      description: The number of items to skip before starting to collect the result set
      in: query
      name: offset
      schema:
        type: integer
    page:
      description: Page number to start from. Omitting the page parameter will return page 1
      in: query
      name: page
      schema:
        default: 1
        type: integer
    per_page:
      description: Number of records to return per page. Default = 100.
      in: query
      name: per_page
      schema:
        default: 100
        type: integer
    raw:
      description: Include raw response. Mostly used for debugging purposes
      in: query
      name: raw
      schema:
        default: true
        type: boolean
    x-apideck-app-id:
      description: The ID of your Unify application
      in: header
      name: x-apideck-app-id
      required: true
      schema:
        type: string
    x-apideck-consumer-id:
      description: ID of the consumer which you want to get or push data from
      in: header
      name: x-apideck-consumer-id
      required: true
      schema:
        type: string
    x-apideck-service-id:
      description: Provide the service id you want to call (e.g., pipedrive). See the full list in the connector section. Only needed when a consumer has activated multiple integrations for a Unified API.
      in: header
      name: x-apideck-service-id
      schema:
        type: string
  responses:
    BadRequest:
      content:
        application/json:
          schema:
            properties:
              detail:
                description: Contains parameter or domain specific information related to the error and why it occured.
                example:
                  missing:
                    - - foobar: required
                oneOf:
                  - type: string
                  - type: object
              error:
                description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
                example: Bad Request
                type: string
              message:
                description: A human-readable message providing more details about the error.
                example: Invalid Params
                type: string
              ref:
                description: Link to documentation of error type
                example: https://developers.apideck.com/errors#missingheaderserror
                type: string
              status_code:
                description: HTTP status code
                example: 400
                type: number
              typeName:
                description: The type of error returned
                example: MissingHeadersError
                type: string
      description: Bad Request
    Deleted:
      description: Resource deleted
    NotFound:
      content:
        application/json:
          schema:
            properties:
              detail:
                description: Contains parameter or domain specific information related to the error and why it occured.
                example: "Could not find widget with id: '123'"
                type: string
              error:
                description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
                example: Not Found
                type: string
              message:
                description: A human-readable message providing more details about the error.
                example: Unknown Widget
                type: string
              ref:
                description: Link to documentation of error type
                example: https://developers.apideck.com/errors#entitynotfounderror
                type: string
              status_code:
                description: HTTP status code
                example: 404
                type: number
              typeName:
                description: The type of error returned
                example: EntityNotFoundError
                type: string
      description: The specified resource was not found
    NotImplemented:
      content:
        application/json:
          schema:
            properties:
              detail:
                description: Contains parameter or domain specific information related to the error and why it occured.
                example: Failed to retrieve Widget tokenUrl from 'components.securitySchemes.oauth2.flows'
                oneOf:
                  - type: string
                  - type: object
              error:
                description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
                example: Not Implemented
                type: string
              message:
                description: A human-readable message providing more details about the error.
                example: Unmapped Attribute
                type: string
              ref:
                description: Link to documentation of error type
                example: https://developers.apideck.com/errors#mappingerror
                type: string
              status_code:
                description: HTTP status code
                example: 501
                type: number
              typeName:
                description: The type of error returned
                example: MappingError
                type: string
      description: Not Implemented
    PaymentRequired:
      content:
        application/json:
          schema:
            properties:
              detail:
                description: Contains parameter or domain specific information related to the error and why it occured.
                example: You have reached your limit of 2000
                type: string
              error:
                description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
                example: Payment Required
                type: string
              message:
                description: A human-readable message providing more details about the error.
                example: Request Limit Reached
                type: string
              ref:
                description: Link to documentation of error type
                example: https://developers.apideck.com/errors#requestlimiterror
                type: string
              status_code:
                description: HTTP status code
                example: 402
                type: number
              typeName:
                description: The type of error returned
                example: RequestLimitError
                type: string
      description: Payment Required
    Unauthorized:
      content:
        application/json:
          schema:
            properties:
              detail:
                description: Contains parameter or domain specific information related to the error and why it occured.
                example: Failed to generate valid JWT Session. Verify applicationId is correct
                oneOf:
                  - type: string
                  - type: object
              error:
                description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
                example: Unauthorized
                type: string
              message:
                description: A human-readable message providing more details about the error.
                example: Unauthorized Request
                type: string
              ref:
                description: Link to documentation of error type
                example: https://developers.apideck.com/errors#unauthorizederror
                type: string
              status_code:
                description: HTTP status code
                example: 401
                type: number
              typeName:
                description: The type of error returned
                example: UnauthorizedError
                type: string
      description: Unauthorized
    Unprocessable:
      content:
        application/json:
          schema:
            properties:
              detail:
                description: Contains parameter or domain specific information related to the error and why it occured.
                example: State did not include unified_api
                type: string
              error:
                description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
                example: Unprocessable Entity
                type: string
              message:
                description: A human-readable message providing more details about the error.
                example: Invalid State
                type: string
              ref:
                description: Link to documentation of error type
                example: https://developers.apideck.com/errors#invalidstateerror
                type: string
              status_code:
                description: HTTP status code
                example: 422
                type: number
              typeName:
                description: The type of error returned
                example: InvalidStateError
                type: string
      description: Unprocessable
  schemas:
    Error:
      properties:
        detail:
          description: Contains parameter or domain specific information related to the error and why it occured.
          example: "Missing Header: x-apideck-consumer-id"
          oneOf:
            - type: string
            - type: object
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Bad Request
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Invalid Params
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#unauthorizederror
          type: string
        status_code:
          description: HTTP status code
          example: 400
          type: number
        typeName:
          description: The type of error returned
          example: MissingHeadersError
          type: string
    companies:
      properties:
        data:
          description: Operation Results
          items:
            $ref: "#/components/schemas/company/properties/data"
          minItems: 0
          type: array
        operation:
          description: Operation performed
          example: all
          type: string
        resource:
          description: Unified API resource name
          example: companies
          type: string
        service:
          description: Apideck ID of service provider
          example: zoho-crm
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      type: object
    companiesAdd:
      properties:
        addresses:
          $ref: "#/components/schemas/contactsAdd/properties/addresses"
        bank-accounts:
          items:
            properties:
              bic:
                example: AUDSCHGGXXX
                nullable: true
                type: string
              iban:
                example: CH2989144532982975332
                nullable: true
                type: string
            type: object
          type: array
        currency:
          example: USD
          nullable: true
          type: string
        custom_fields:
          $ref: "#/components/schemas/contactsAdd/properties/custom_fields"
        description:
          example: A crm that works for you, so you can spend time on relationships instead of data.
          type: string
        email_domain:
          example: spacex.com
          type: string
        emails:
          $ref: "#/components/schemas/contactsAdd/properties/emails"
        fax:
          example: "+12129876543"
          nullable: true
          type: string
        image_url:
          example: https://www.spacex.com/static/images/share.jpg
          type: string
        name:
          example: SpaceX
          type: string
        owner_id:
          example: "12345"
          type: string
        phone_numbers:
          $ref: "#/components/schemas/contactsAdd/properties/phone_numbers"
        social_links:
          $ref: "#/components/schemas/contactsAdd/properties/social_links"
        tags:
          $ref: "#/components/schemas/contactsAdd/properties/tags"
        vat_number:
          description: VAT number
          example: BE0689615164
          nullable: true
          type: string
        websites:
          $ref: "#/components/schemas/contactsAdd/properties/websites"
      required:
        - name
      type: object
    companiesAddResponse:
      properties:
        data:
          properties:
            id:
              example: "12345"
              readOnly: true
              type: string
        operation:
          description: Operation performed
          example: add
          type: string
        resource:
          description: Unified API resource name
          example: companies
          type: string
        service:
          description: Apideck ID of service provider
          example: zoho-crm
          type: string
        status:
          description: HTTP Response Status
          example: Created
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 201
          type: integer
      type: object
    companiesDeleteResponse:
      properties:
        data:
          properties:
            id:
              type: string
        operation:
          description: Operation performed
          example: delete
          type: string
        resource:
          description: Unified API resource name
          example: companies
          type: string
        service:
          description: Apideck ID of service provider
          example: zoho-crm
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      type: object
    companiesUpdate:
      properties:
        addresses:
          $ref: "#/components/schemas/contactsAdd/properties/addresses"
        bank-accounts:
          $ref: "#/components/schemas/companiesAdd/properties/bank-accounts"
        currency:
          example: USD
          nullable: true
          type: string
        custom_fields:
          $ref: "#/components/schemas/contactsAdd/properties/custom_fields"
        description:
          example: A crm that works for you, so you can spend time on relationships instead of data.
          type: string
        email_domain:
          example: spacex.com
          type: string
        emails:
          $ref: "#/components/schemas/contactsAdd/properties/emails"
        fax:
          example: "+12129876543"
          nullable: true
          type: string
        image_url:
          example: https://www.spacex.com/static/images/share.jpg
          type: string
        name:
          example: SpaceX
          type: string
        owner_id:
          example: "12345"
          type: string
        phone_numbers:
          $ref: "#/components/schemas/contactsAdd/properties/phone_numbers"
        social_links:
          $ref: "#/components/schemas/contactsAdd/properties/social_links"
        tags:
          $ref: "#/components/schemas/contactsAdd/properties/tags"
        vat_number:
          description: VAT number
          example: BE0689615164
          nullable: true
          type: string
        websites:
          $ref: "#/components/schemas/contactsAdd/properties/websites"
      required:
        - name
      type: object
    companiesUpdateResponse:
      properties:
        data:
          properties:
            id:
              example: "12345"
              readOnly: true
              type: string
        operation:
          description: Operation performed
          example: update
          type: string
        resource:
          description: Unified API resource name
          example: companies
          type: string
        service:
          description: Apideck ID of service provider
          example: zoho-crm
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      type: object
    company:
      properties:
        data:
          properties:
            addresses:
              $ref: "#/components/schemas/contactsAdd/properties/addresses"
            bank-accounts:
              $ref: "#/components/schemas/companiesAdd/properties/bank-accounts"
            created_at:
              example: 2020-09-30T07:43:32.000Z
              readOnly: true
              type: string
            created_by:
              example: "12345"
              nullable: true
              type: string
            currency:
              example: USD
              nullable: true
              type: string
            custom_fields:
              $ref: "#/components/schemas/contactsAdd/properties/custom_fields"
            description:
              example: A crm that works for you, so you can spend time on relationships instead of data.
              type: string
            emails:
              $ref: "#/components/schemas/contactsAdd/properties/emails"
            fax:
              example: "+12129876543"
              nullable: true
              type: string
            id:
              example: "12345"
              readOnly: true
              type: string
            image_url:
              type: string
            interaction_count:
              example: 1
              readOnly: true
              type: integer
            name:
              example: Copper
              type: string
            owner_id:
              example: "12345"
              type: string
            phone_numbers:
              $ref: "#/components/schemas/contactsAdd/properties/phone_numbers"
            social_links:
              $ref: "#/components/schemas/contactsAdd/properties/social_links"
            tags:
              $ref: "#/components/schemas/contactsAdd/properties/tags"
            updated_at:
              example: 2020-09-30T07:43:32.000Z
              readOnly: true
              type: string
            updated_by:
              example: "12345"
              nullable: true
              type: string
            vat_number:
              description: VAT number
              example: BE0689615164
              nullable: true
              type: string
            websites:
              $ref: "#/components/schemas/contactsAdd/properties/websites"
          required:
            - id
            - name
          type: object
        operation:
          description: Operation performed
          example: one
          type: string
        resource:
          description: Unified API resource name
          example: companies
          type: string
        service:
          description: Apideck ID of service provider
          example: zoho-crm
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      type: object
    contact:
      properties:
        data:
          properties:
            addresses:
              $ref: "#/components/schemas/contactsAdd/properties/addresses"
            birthday:
              example: 2000-08-12
              nullable: true
              type: string
            company_id:
              example: "2"
              nullable: true
              type: string
            created_at:
              example: 2017-08-12T20:43:21.291Z
              readOnly: true
              type: string
            custom_fields:
              $ref: "#/components/schemas/contactsAdd/properties/custom_fields"
            department:
              example: Engineering
              nullable: true
              type: string
            description:
              example: Internal champion
              nullable: true
              type: string
            emails:
              $ref: "#/components/schemas/contactsAdd/properties/emails"
            fax:
              example: "+12129876543"
              nullable: true
              type: string
            first_name:
              example: Elon
              type: string
            gender:
              enum:
                - male
                - female
                - unisex
              example: female
              nullable: true
              type: string
            id:
              example: "1"
              readOnly: true
              type: string
            image:
              example: https://logo.clearbit.com/spacex.com?s=128
              nullable: true
              type: string
            language:
              description: language code according to ISO 639-1. For the United States - EN
              example: EN
              nullable: true
              type: string
            last_name:
              example: Musk
              type: string
            lead_id:
              example: "3"
              type: string
            lead_source:
              example: Cold Call
              minLength: 1
              nullable: true
              type: string
            middle_name:
              example: D.
              type: string
            name:
              example: Elon Musk
              type: string
            owner_id:
              example: "1"
              type: string
            phone_numbers:
              $ref: "#/components/schemas/contactsAdd/properties/phone_numbers"
            prefix:
              example: Mr.
              nullable: true
              type: string
            social_links:
              $ref: "#/components/schemas/contactsAdd/properties/social_links"
            status:
              example: open
              type: string
            suffix:
              example: PhD
              nullable: true
              type: string
            tags:
              $ref: "#/components/schemas/contactsAdd/properties/tags"
            title:
              example: CEO
              nullable: true
              type: string
            updated_at:
              example: 2017-08-12T20:43:21.291Z
              readOnly: true
              type: string
            websites:
              $ref: "#/components/schemas/contactsAdd/properties/websites"
          required:
            - name
          x-pii:
            - name
            - first_name
            - middle_name
            - last_name
            - email
        operation:
          description: Operation performed
          example: one
          type: string
        resource:
          description: Unified API resource name
          example: contacts
          type: string
        service:
          description: Apideck ID of service provider
          example: zoho-crm
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      type: object
    contacts:
      properties:
        data:
          description: Operation Results
          items:
            $ref: "#/components/schemas/contact/properties/data"
          minItems: 0
          type: array
        operation:
          description: Operation performed
          example: all
          type: string
        resource:
          description: Unified API resource name
          example: contacts
          type: string
        service:
          description: Apideck ID of service provider
          example: zoho-crm
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      type: object
    contactsAdd:
      properties:
        addresses:
          items:
            properties:
              city:
                description: Name of city.
                example: San Francisco
                nullable: true
                type: string
              country:
                description: country code according to ISO 3166-1 alpha-2.
                example: US
                nullable: true
                type: string
              id:
                example: "123"
                type: string
              latitude:
                example: "40.759211"
                nullable: true
                type: string
              line1:
                description: "Line 1 of the address e.g. number, street, suite, apt #, etc."
                example: Main street
                nullable: true
                type: string
              line2:
                description: Line 2 of the address
                example: "apt #"
                nullable: true
                type: string
              longitude:
                example: "-73.984638"
                nullable: true
                type: string
              name:
                example: HQ US
                nullable: true
                type: string
              postal_code:
                description: Zip code or equivalent.
                example: "94104"
                nullable: true
                type: string
              state:
                description: Name of state
                example: CA
                nullable: true
                type: string
              type:
                enum:
                  - default
                  - primary
                  - secondary
                  - tertiary
                  - invoicing
                  - delivery
                  - visiting
                  - mailing
                  - home
                  - work
                  - other
                example: invoicing
                type: string
            type: object
          type: array
        birthday:
          example: 2000-08-12
          nullable: true
          type: string
        company_id:
          example: "1234567"
          type: string
        custom_fields:
          items:
            additionalProperties: false
            properties:
              id:
                example: custom_technologies
                type: string
              value:
                example: Uses Salesforce and Marketo
                nullable: true
                type: string
            required:
              - id
            type: object
          type: array
        department:
          example: Engineering
          nullable: true
          type: string
        description:
          example: Internal champion
          nullable: true
          type: string
        emails:
          items:
            properties:
              email:
                example: elon@musk.com
                format: email
                type: string
              id:
                example: "123"
                type: string
              type:
                example: default
                type: string
            type: object
          type: array
        fax:
          example: "+12129876543"
          nullable: true
          type: string
        first_name:
          example: Elon
          type: string
        gender:
          enum:
            - male
            - female
            - unisex
          example: female
          nullable: true
          type: string
        image:
          example: https://logo.clearbit.com/spacex.com?s=128
          nullable: true
          type: string
        language:
          description: language code according to ISO 639-1. For the United States - EN
          example: EN
          nullable: true
          type: string
        last_name:
          example: Musk
          type: string
        lead_id:
          example: "3"
          type: string
        lead_source:
          example: Cold Call
          minLength: 1
          nullable: true
          type: string
        middle_name:
          example: D.
          type: string
        name:
          example: Elon Musk
          type: string
        owner_id:
          example: "1234567"
          type: string
        phone_numbers:
          items:
            properties:
              id:
                example: "123"
                type: string
              number:
                example: 111-111-1111
                type: string
              phone_type:
                enum:
                  - default
                  - phone
                  - mobile
                  - work
                  - office
                  - home
                  - fax
                  - assistant
                  - other
                type: string
            type: object
          type: array
        prefix:
          example: Mr.
          nullable: true
          type: string
        social_links:
          items:
            properties:
              id:
                example: "123"
                type: string
              platform:
                example: twitter
                type: string
              url:
                example: https://www.twitter.com/apideck-io
                type: string
            type: object
          type: array
        status:
          example: open
          type: string
        suffix:
          example: PhD
          nullable: true
          type: string
        tags:
          example:
            - New
          items:
            type: string
          type: array
        title:
          example: CEO
          nullable: true
          type: string
        websites:
          items:
            properties:
              category:
                type: string
              id:
                example: "123"
                type: string
              url:
                type: string
            required:
              - url
            type: object
          type: array
      required:
        - name
      x-pii:
        - name
        - first_name
        - middle_name
        - last_name
        - email
    contactsAddResponse:
      properties:
        data:
          properties:
            id:
              example: "12345"
              readOnly: true
              type: string
        operation:
          description: Operation performed
          example: add
          type: string
        resource:
          description: Unified API resource name
          example: contacts
          type: string
        service:
          description: Apideck ID of service provider
          example: zoho-crm
          type: string
        status:
          description: HTTP Response Status
          example: Created
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 201
          type: integer
      type: object
    contactsDeleteResponse:
      properties:
        data:
          properties:
            id:
              type: string
        operation:
          description: Operation performed
          example: delete
          type: string
        resource:
          description: Unified API resource name
          example: contacts
          type: string
        service:
          description: Apideck ID of service provider
          example: zoho-crm
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      type: object
    contactsUpdate:
      properties:
        addresses:
          $ref: "#/components/schemas/contactsAdd/properties/addresses"
        birthday:
          example: 2000-08-12
          nullable: true
          type: string
        company_id:
          example: "1234567"
          type: string
        custom_fields:
          $ref: "#/components/schemas/contactsAdd/properties/custom_fields"
        department:
          example: Engineering
          nullable: true
          type: string
        description:
          example: Internal champion
          nullable: true
          type: string
        emails:
          $ref: "#/components/schemas/contactsAdd/properties/emails"
        fax:
          example: "+12129876543"
          nullable: true
          type: string
        first_name:
          example: Elon
          type: string
        gender:
          enum:
            - male
            - female
            - unisex
          example: female
          nullable: true
          type: string
        image:
          example: https://logo.clearbit.com/spacex.com?s=128
          nullable: true
          type: string
        language:
          description: language code according to ISO 639-1. For the United States - EN
          example: EN
          nullable: true
          type: string
        last_name:
          example: Musk
          type: string
        lead_id:
          example: "3"
          type: string
        lead_source:
          example: Cold Call
          minLength: 1
          nullable: true
          type: string
        middle_name:
          example: D.
          type: string
        name:
          example: Elon Musk
          type: string
        owner_id:
          example: "1234567"
          type: string
        phone_numbers:
          $ref: "#/components/schemas/contactsAdd/properties/phone_numbers"
        prefix:
          example: Mr.
          nullable: true
          type: string
        social_links:
          $ref: "#/components/schemas/contactsAdd/properties/social_links"
        status:
          example: open
          type: string
        suffix:
          example: PhD
          nullable: true
          type: string
        tags:
          $ref: "#/components/schemas/contactsAdd/properties/tags"
        title:
          example: CEO
          nullable: true
          type: string
        websites:
          $ref: "#/components/schemas/contactsAdd/properties/websites"
      required:
        - name
      x-pii:
        - name
        - first_name
        - middle_name
        - last_name
        - email
    contactsUpdateResponse:
      properties:
        data:
          properties:
            id:
              example: "12345"
              readOnly: true
              type: string
        operation:
          description: Operation performed
          example: update
          type: string
        resource:
          description: Unified API resource name
          example: contacts
          type: string
        service:
          description: Apideck ID of service provider
          example: zoho-crm
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      type: object
    lead:
      properties:
        data:
          properties:
            addresses:
              $ref: "#/components/schemas/leadsAdd/properties/addresses"
            company_id:
              example: "2"
              nullable: true
              type: string
            company_name:
              example: Spacex
              nullable: true
              type: string
            created_at:
              example: 2020-09-30T07:43:32.000Z
              readOnly: true
              type: string
            custom_fields:
              $ref: "#/components/schemas/leadsAdd/properties/custom_fields"
            description:
              example: A thinker
              type: string
            emails:
              $ref: "#/components/schemas/leadsAdd/properties/emails"
            fax:
              example: "+12129876543"
              nullable: true
              type: string
            first_name:
              type: string
            id:
              readOnly: true
              type: string
            last_name:
              nullable: true
              type: string
            name:
              type: string
            owner_id:
              example: "1"
              type: string
            phone_numbers:
              $ref: "#/components/schemas/leadsAdd/properties/phone_numbers"
            prefix:
              type: string
            social_links:
              $ref: "#/components/schemas/leadsAdd/properties/social_links"
            status:
              type: string
            tags:
              $ref: "#/components/schemas/leadsAdd/properties/tags"
            title:
              type: string
            updated_at:
              example: 2020-09-30T07:43:32.000Z
              readOnly: true
              type: string
            websites:
              $ref: "#/components/schemas/leadsAdd/properties/websites"
          required:
            - id
          x-pii:
            - name
            - email
            - first_name
            - last_name
        operation:
          description: Operation performed
          example: one
          type: string
        resource:
          description: Unified API resource name
          example: leads
          type: string
        service:
          description: Apideck ID of service provider
          example: zoho-crm
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      type: object
    leads:
      properties:
        data:
          description: Operation Results
          items:
            $ref: "#/components/schemas/lead/properties/data"
          minItems: 0
          type: array
        operation:
          description: Operation performed
          example: all
          type: string
        resource:
          description: Unified API resource name
          example: leads
          type: string
        service:
          description: Apideck ID of service provider
          example: zoho-crm
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      type: object
    leadsAdd:
      properties:
        addresses:
          items:
            properties:
              city:
                description: Name of city.
                example: San Francisco
                nullable: true
                type: string
              country:
                description: country code according to ISO 3166-1 alpha-2.
                example: US
                nullable: true
                type: string
              id:
                example: "123"
                type: string
              latitude:
                example: "40.759211"
                nullable: true
                type: string
              line1:
                description: "Line 1 of the address e.g. number, street, suite, apt #, etc."
                example: Main street
                nullable: true
                type: string
              line2:
                description: Line 2 of the address
                example: "apt #"
                nullable: true
                type: string
              longitude:
                example: "-73.984638"
                nullable: true
                type: string
              name:
                example: HQ US
                type: string
              postal_code:
                description: Zip code or equivalent.
                example: "94104"
                nullable: true
                type: string
              state:
                description: Name of state
                example: CA
                nullable: true
                type: string
              type:
                enum:
                  - default
                  - primary
                  - secondary
                  - tertiary
                  - invoicing
                  - delivery
                  - visiting
                  - mailing
                  - home
                  - work
                  - other
                example: invoicing
                type: string
            type: object
          type: array
        company_id:
          example: "1234567"
          type: string
        company_name:
          example: SpaceX
          type: string
        custom_fields:
          items:
            additionalProperties: false
            properties:
              id:
                example: custom_technologies
                type: string
              value:
                example: Uses Salesforce and Marketo
                nullable: true
                type: string
            required:
              - id
            type: object
          type: array
        description:
          example: A thinker
          type: string
        emails:
          items:
            properties:
              email:
                example: elon@musk.com
                format: email
                type: string
              id:
                example: "123"
                type: string
              type:
                example: default
                type: string
            type: object
          type: array
        fax:
          example: "+12129876543"
          nullable: true
          type: string
        first_name:
          example: Elon
          type: string
        last_name:
          example: Musk
          type: string
        lead_source:
          example: website
          type: string
        name:
          example: Elon Musk
          type: string
        note:
          example: Eager to buy more rockets.
          type: string
        phone_numbers:
          items:
            properties:
              id:
                example: "123"
                type: string
              number:
                example: 111-111-1111
                type: string
              phone_type:
                enum:
                  - default
                  - mobile
                  - work
                  - office
                  - home
                  - fax
                  - assistant
                  - other
                type: string
            type: object
          type: array
        prefix:
          example: Duke
          type: string
        social_links:
          items:
            properties:
              id:
                example: "123"
                type: string
              platform:
                example: twitter
                type: string
              url:
                example: https://www.twitter.com/apideck-io
                type: string
            type: object
          type: array
        status:
          example: open
          type: string
        tags:
          example:
            - New
          items:
            type: string
          type: array
        title:
          example: CEO
          type: string
        websites:
          items:
            properties:
              category:
                example: default
                type: string
              id:
                example: "123"
                type: string
              url:
                example: http://example.com
                type: string
            required:
              - url
            type: object
          type: array
      required:
        - name
        - company_name
      x-pii:
        - name
        - first_name
        - last_name
        - email
        - phone_number
    leadsAddResponse:
      properties:
        data:
          properties:
            id:
              example: "12345"
              readOnly: true
              type: string
        operation:
          description: Operation performed
          example: add
          type: string
        resource:
          description: Unified API resource name
          example: leads
          type: string
        service:
          description: Apideck ID of service provider
          example: zoho-crm
          type: string
        status:
          description: HTTP Response Status
          example: Created
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 201
          type: integer
      type: object
    leadsDeleteResponse:
      properties:
        data:
          properties:
            id:
              type: string
        operation:
          description: Operation performed
          example: delete
          type: string
        resource:
          description: Unified API resource name
          example: leads
          type: string
        service:
          description: Apideck ID of service provider
          example: zoho-crm
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      type: object
    leadsUpdate:
      properties:
        addresses:
          $ref: "#/components/schemas/leadsAdd/properties/addresses"
        company_id:
          example: "1234567"
          type: string
        company_name:
          example: SpaceX
          type: string
        custom_fields:
          $ref: "#/components/schemas/leadsAdd/properties/custom_fields"
        description:
          example: A thinker
          type: string
        emails:
          $ref: "#/components/schemas/leadsAdd/properties/emails"
        fax:
          example: "+12129876543"
          nullable: true
          type: string
        first_name:
          example: Elon
          type: string
        last_name:
          example: Musk
          type: string
        lead_source:
          example: website
          type: string
        name:
          example: Elon Musk
          type: string
        note:
          example: Eager to buy more rockets.
          type: string
        phone_numbers:
          $ref: "#/components/schemas/leadsAdd/properties/phone_numbers"
        prefix:
          example: Duke
          type: string
        social_links:
          $ref: "#/components/schemas/leadsAdd/properties/social_links"
        status:
          example: open
          type: string
        tags:
          $ref: "#/components/schemas/leadsAdd/properties/tags"
        title:
          example: CEO
          type: string
        websites:
          $ref: "#/components/schemas/leadsAdd/properties/websites"
      required:
        - name
        - company_name
      x-pii:
        - name
        - first_name
        - last_name
        - email
        - phone_number
    leadsUpdateResponse:
      properties:
        data:
          properties:
            id:
              example: "12345"
              readOnly: true
              type: string
        operation:
          description: Operation performed
          example: update
          type: string
        resource:
          description: Unified API resource name
          example: leads
          type: string
        service:
          description: Apideck ID of service provider
          example: zoho-crm
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      type: object
    opportunities:
      properties:
        data:
          description: Operation Results
          items:
            $ref: "#/components/schemas/opportunity/properties/data"
          minItems: 0
          type: array
        operation:
          description: Operation performed
          example: all
          type: string
        resource:
          description: Unified API resource name
          example: opportunities
          type: string
        service:
          description: Apideck ID of service provider
          example: zoho-crm
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      type: object
    opportunitiesAdd:
      properties:
        close_date:
          example: 10/7/2020
          minLength: 1
          nullable: true
          type: string
        company_id:
          example: "12345"
          nullable: true
          type: string
        company_name:
          example: Copper
          type: string
        contact_id:
          example: "12345"
          nullable: true
          type: string
        currency:
          example: USD
          nullable: true
          type: string
        custom_fields:
          $ref: "#/components/schemas/contactsAdd/properties/custom_fields"
        description:
          example: Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.
          minLength: 1
          type: string
        lead_id:
          example: "12345"
          nullable: true
          type: string
        loss_reason_id:
          example: "12345"
          nullable: true
          type: string
        monetary_amount:
          example: 75000
          type: number
        owner_id:
          example: "12345"
          nullable: true
          type: string
        pipeline_id:
          example: "12345"
          nullable: true
          type: string
        pipeline_stage_id:
          example: "12345"
          nullable: true
          type: string
        primary_contact_id:
          example: "12345"
          type: string
        priority:
          example: None
          minLength: 1
          type: string
        source_id:
          example: "12345"
          type: string
        status:
          example: Open
          minLength: 1
          nullable: true
          type: string
        status_id:
          example: "12345"
          nullable: true
          type: string
        tags:
          example:
            - sample
          items:
            type: string
          type: array
        title:
          example: 25 Office Chairs (Sample - Try me!)
          type: string
        win_probability:
          example: 40
          nullable: true
          type: number
      required:
        - title
        - primary_contact_id
      type: object
    opportunitiesAddResponse:
      properties:
        data:
          properties:
            id:
              example: "12345"
              readOnly: true
              type: string
        operation:
          description: Operation performed
          example: add
          type: string
        resource:
          description: Unified API resource name
          example: opportunities
          type: string
        service:
          description: Apideck ID of service provider
          example: zoho-crm
          type: string
        status:
          description: HTTP Response Status
          example: Created
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 201
          type: integer
      type: object
    opportunitiesDeleteResponse:
      properties:
        data:
          properties:
            id:
              type: string
        operation:
          description: Operation performed
          example: delete
          type: string
        resource:
          description: Unified API resource name
          example: opportunities
          type: string
        service:
          description: Apideck ID of service provider
          example: zoho-crm
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      type: object
    opportunitiesUpdate:
      properties:
        close_date:
          example: 10/7/2020
          minLength: 1
          nullable: true
          type: string
        company_id:
          example: "12345"
          nullable: true
          type: string
        company_name:
          example: Copper
          type: string
        contact_id:
          example: "12345"
          nullable: true
          type: string
        currency:
          example: USD
          type: string
        custom_fields:
          $ref: "#/components/schemas/contactsAdd/properties/custom_fields"
        description:
          example: Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.
          minLength: 1
          type: string
        lead_id:
          example: "12345"
          nullable: true
          type: string
        loss_reason_id:
          example: "12345"
          nullable: true
          type: string
        monetary_amount:
          example: 75000
          type: number
        owner_id:
          example: "12345"
          nullable: true
          type: string
        pipeline_id:
          example: "12345"
          nullable: true
          type: string
        pipeline_stage_id:
          example: "12345"
          nullable: true
          type: string
        primary_contact_id:
          example: "12345"
          nullable: true
          type: string
        priority:
          example: None
          minLength: 1
          type: string
        source_id:
          example: "12345"
          type: string
        status:
          example: Open
          minLength: 1
          type: string
        status_id:
          example: "12345"
          nullable: true
          type: string
        tags:
          example:
            - sample
          items:
            type: string
          type: array
        title:
          example: 25 Office Chairs (Sample - Try me!)
          type: string
        win_probability:
          example: 40
          nullable: true
          type: number
      required:
        - title
        - primary_contact_id
      type: object
    opportunitiesUpdateResponse:
      properties:
        data:
          properties:
            id:
              example: "12345"
              readOnly: true
              type: string
        operation:
          description: Operation performed
          example: update
          type: string
        resource:
          description: Unified API resource name
          example: opportunities
          type: string
        service:
          description: Apideck ID of service provider
          example: zoho-crm
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      type: object
    opportunity:
      properties:
        data:
          properties:
            close_date:
              example: 2020-10-30
              format: date
              nullable: true
              type: string
            company_id:
              example: "12345"
              nullable: true
              type: string
            company_name:
              example: Copper
              type: string
            contact_id:
              example: "12345"
              nullable: true
              type: string
            created_at:
              example: 2020-09-30T07:43:32.000Z
              format: date-time
              readOnly: true
              type: string
            created_by:
              example: "12345"
              nullable: true
              type: string
            currency:
              example: USD
              type: string
            custom_fields:
              $ref: "#/components/schemas/contactsAdd/properties/custom_fields"
            date_last_contacted:
              example: 2020-09-30T00:00:00.000Z
              format: date-time
              nullable: true
              readOnly: true
              type: string
            date_lead_created:
              example: 2020-09-30T00:00:00.000Z
              format: date-time
              nullable: true
              readOnly: true
              type: string
            date_stage_changed:
              example: 2020-09-30T00:00:00.000Z
              format: date-time
              nullable: true
              readOnly: true
              type: string
            description:
              example: Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.
              minLength: 1
              type: string
            id:
              example: "12345"
              readOnly: true
              type: string
            interaction_count:
              example: 0
              readOnly: true
              type: number
            lead_id:
              example: "12345"
              nullable: true
              type: string
            loss_reason_id:
              example: "12345"
              nullable: true
              type: string
            monetary_amount:
              example: 75000
              type: number
            owner_id:
              example: "12345"
              nullable: true
              type: string
            pipeline_id:
              example: "12345"
              nullable: true
              type: string
            pipeline_stage_id:
              example: "12345"
              nullable: true
              type: string
            primary_contact_id:
              example: "12345"
              nullable: true
              type: string
            priority:
              example: None
              minLength: 1
              type: string
            source_id:
              example: "12345"
              type: string
            status:
              example: Open
              minLength: 1
              type: string
            status_id:
              example: "12345"
              nullable: true
              type: string
            tags:
              example:
                - sample
              items:
                type: string
              type: array
            title:
              example: New Rocket
              type: string
            updated_at:
              example: 2020-09-30T07:43:32.000Z
              format: date-time
              readOnly: true
              type: string
            updated_by:
              example: "12345"
              nullable: true
              type: string
            win_probability:
              example: 40
              nullable: true
              type: number
          required:
            - id
            - title
            - primary_contact_id
          type: object
        operation:
          description: Operation performed
          example: one
          type: string
        resource:
          description: Unified API resource name
          example: opportunities
          type: string
        service:
          description: Apideck ID of service provider
          example: zoho-crm
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      type: object
  securitySchemes:
    apiKey:
      description: >
        To use API you have to sign up and get your own API key. Unify API accounts have sandbox mode and live mode API keys. 

        To change modes just use the appropriate key to get a live or test object. You can find your API keys on the unify settings of your Apideck app.

        Your Apideck application_id can also be found on the same page.


        Authenticate your API requests by including your test or live secret API key in the request header. 


        Bearer authorization header: `Authorization: Bearer <your-apideck-api-key>`


        You should use the public keys on the SDKs and the secret keys to authenticate API requests.


        **Do not share or include your secret API keys on client side code. Your API keys carry significant privileges. Please ensure to keep them 100% secure and be sure to not share your secret API keys in areas that are publicly accessible like GitHub. See API Access Key Security for more information.


        Learn how to set the Authorization header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key


        Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys
      scheme: bearer
      type: http
