openapi: 3.0.0
info:
  version: '2020-11-19'
  x-release: v4
  title: Amazon Location Service
  description: 'Suite of geospatial services including Maps, Places, Tracking, and Geofencing'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: location
  x-aws-signingName: geo
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/location-2020-11-19.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/geo/'
servers:
  - url: 'http://geo.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Location Service multi-region endpoint
  - url: 'https://geo.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Location Service multi-region endpoint
  - url: 'http://geo.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Location Service endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://geo.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Location Service endpoint for China (Beijing) and China (Ningxia)
paths:
  '/tracking/v0/trackers/{TrackerName}/consumers':
    post:
      operationId: AssociateTrackerConsumer
      description: '<p>Creates an association between a geofence collection and a tracker resource. This allows the tracker resource to communicate location data to the linked geofence collection.</p> <note> <p>Currently not supported — Cross-account configurations, such as creating associations between a tracker resource in one account and a geofence collection in another account.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateTrackerConsumerResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: TrackerName
          in: path
          required: true
          description: The name of the tracker resource to be associated with a geofence collection.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ConsumerArn
              properties:
                ConsumerArn:
                  description: '<p>The Amazon Resource Name (ARN) for the geofence collection to be associated to tracker resource. Used when you need to specify a resource across all AWS. </p> <ul> <li> <p>Format example: <code>arn:partition:service:region:account-id:resource-type:resource-id</code> </p> </li> </ul>'
                  type: string
                  pattern: '^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:([^/].*)?$'
                  minLength: 0
                  maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/geofencing/v0/collections/{CollectionName}/delete-geofences':
    post:
      operationId: BatchDeleteGeofence
      description: <p>Deletes a batch of geofences from a geofence collection.</p> <note> <p>This action deletes the resource permanently. You can't undo this action.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDeleteGeofenceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: CollectionName
          in: path
          required: true
          description: The geofence collection storing the geofences to be deleted.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - GeofenceIds
              properties:
                GeofenceIds:
                  description: The batch of geofences to be deleted.
                  type: array
                  items:
                    $ref: '#/components/schemas/Id'
                  minItems: 1
                  maxItems: 10
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/geofencing/v0/collections/{CollectionName}/positions':
    post:
      operationId: BatchEvaluateGeofences
      description: '<p>Evaluates device positions against the geofence geometries from a given geofence collection. The evaluation determines if the device has entered or exited a geofenced area, which publishes ENTER or EXIT geofence events to Amazon EventBridge.</p> <note> <p>The last geofence that a device was observed within, if any, is tracked for 30 days after the most recent device position update</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchEvaluateGeofencesResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: CollectionName
          in: path
          required: true
          description: The geofence collection used in evaluating the position of devices against its geofences.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DevicePositionUpdates
              properties:
                DevicePositionUpdates:
                  description: Contains device details for each device to be evaluated against the given geofence collection.
                  type: array
                  items:
                    $ref: '#/components/schemas/DevicePositionUpdate'
                  minItems: 1
                  maxItems: 10
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tracking/v0/trackers/{TrackerName}/get-positions':
    post:
      operationId: BatchGetDevicePosition
      description: A batch request to retrieve all device positions.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetDevicePositionResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: TrackerName
          in: path
          required: true
          description: The tracker resource retrieving the device position.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DeviceIds
              properties:
                DeviceIds:
                  description: '<p>Devices whose position you want to retrieve.</p> <ul> <li> <p>For example, for two devices: <code>device-ids=DeviceId1&amp;device-ids=DeviceId2</code> </p> </li> </ul>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Id'
                  minItems: 1
                  maxItems: 10
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/geofencing/v0/collections/{CollectionName}/put-geofences':
    post:
      operationId: BatchPutGeofence
      description: A batch request for storing geofence geometries into a given geofence collection.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPutGeofenceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: CollectionName
          in: path
          required: true
          description: The geofence collection storing the geofences.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Entries
              properties:
                Entries:
                  description: The batch of geofences to be stored in a geofence collection.
                  type: array
                  items:
                    $ref: '#/components/schemas/BatchPutGeofenceRequestEntry'
                  minItems: 1
                  maxItems: 10
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tracking/v0/trackers/{TrackerName}/positions':
    post:
      operationId: BatchUpdateDevicePosition
      description: '<p>Uploads position update data for one or more devices to a tracker resource. Amazon Location uses the data when reporting the last known device position and position history.</p> <note> <p>Only one position update is stored per sample time. Location data is sampled at a fixed rate of one position per 30-second interval, and retained for one year before it is deleted.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateDevicePositionResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: TrackerName
          in: path
          required: true
          description: The name of the tracker resource to update.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Updates
              properties:
                Updates:
                  description: Contains the position update details for each device.
                  type: array
                  items:
                    $ref: '#/components/schemas/DevicePositionUpdate'
                  minItems: 1
                  maxItems: 10
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /geofencing/v0/collections:
    post:
      operationId: CreateGeofenceCollection
      description: 'Creates a geofence collection, which manages and stores geofences.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGeofenceCollectionResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - CollectionName
                - PricingPlan
              properties:
                CollectionName:
                  description: '<p>A custom name for the geofence collection.</p> <p>Requirements:</p> <ul> <li> <p>Contain only alphanumeric characters (A–Z, a–z, 0-9), hyphens (-), periods (.), and underscores (_). </p> </li> <li> <p>Must be a unique geofence collection name.</p> </li> <li> <p>No spaces allowed. For example, <code>ExampleGeofenceCollection</code>.</p> </li> </ul>'
                  type: string
                  pattern: '^[-._\w]+$'
                  minLength: 1
                  maxLength: 100
                Description:
                  description: An optional description for the geofence collection.
                  type: string
                  minLength: 0
                  maxLength: 1000
                PricingPlan:
                  description: '<p>Specifies the pricing plan for your geofence collection.</p> <p>For additional details and restrictions on each pricing plan option, see the <a href="https://aws.amazon.com/location/pricing/">Amazon Location Service pricing page</a>.</p>'
                  type: string
                  enum:
                    - RequestBasedUsage
                    - MobileAssetTracking
                    - MobileAssetManagement
                PricingPlanDataSource:
                  description: '<p>Specifies the plan data source. Required if the Mobile Asset Tracking (MAT) or the Mobile Asset Management (MAM) pricing plan is selected.</p> <p>Billing is determined by the resource usage, the associated pricing plan, and the data source that was specified. For more information about each pricing plan option and restrictions, see the <a href="https://aws.amazon.com/location/pricing/">Amazon Location Service pricing page</a>.</p> <p>Valid Values: <code>Esri </code>| <code>Here</code> </p>'
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /maps/v0/maps:
    post:
      operationId: CreateMap
      description: '<p>Creates a map resource in your AWS account, which provides map tiles of different styles sourced from global location data providers.</p> <note> <p>By using Maps, you agree that AWS may transmit your API queries to your selected third party provider for processing, which may be outside the AWS region you are currently using. For more information, see the <a href="https://aws.amazon.com/service-terms/">AWS Service Terms</a> for Amazon Location Service. </p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMapResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Configuration
                - MapName
                - PricingPlan
              properties:
                Configuration:
                  description: Specifies the map tile style selected from an available provider.
                  type: object
                  properties:
                    Style:
                      allOf:
                        - $ref: '#/components/schemas/MapStyle'
                        - description: '<p>Specifies the map style selected from an available data provider.</p> <p>Valid styles: <code>VectorEsriStreets</code>, <code>VectorEsriTopographic</code>, <code>VectorEsriNavigation</code>, <code>VectorEsriDarkGrayCanvas</code>, <code>VectorEsriLightGrayCanvas</code>, <code>VectorHereBerlin</code>.</p> <note> <p>When using HERE as your data provider, and selecting the Style <code>VectorHereBerlin</code>, you may not use HERE Maps for Asset Management. See the <a href="https://aws.amazon.com/service-terms/">AWS Service Terms</a> for Amazon Location Service. </p> </note>'
                Description:
                  description: An optional description for the map resource.
                  type: string
                  minLength: 0
                  maxLength: 1000
                MapName:
                  description: '<p>The name for the map resource.</p> <p>Requirements:</p> <ul> <li> <p>Must contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and underscores (_). </p> </li> <li> <p>Must be a unique map resource name. </p> </li> <li> <p>No spaces allowed. For example, <code>ExampleMap</code>.</p> </li> </ul>'
                  type: string
                  pattern: '^[-._\w]+$'
                  minLength: 1
                  maxLength: 100
                PricingPlan:
                  description: '<p>Specifies the pricing plan for your map resource.</p> <p>For additional details and restrictions on each pricing plan option, see the <a href="https://aws.amazon.com/location/pricing/">Amazon Location Service pricing page</a>.</p>'
                  type: string
                  enum:
                    - RequestBasedUsage
                    - MobileAssetTracking
                    - MobileAssetManagement
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /places/v0/indexes:
    post:
      operationId: CreatePlaceIndex
      description: '<p>Creates a Place index resource in your AWS account, which supports Places functions with geospatial data sourced from your chosen data provider.</p> <note> <p>By using Places, you agree that AWS may transmit your API queries to your selected third party provider for processing, which may be outside the AWS region you are currently using. </p> <p>Because of licensing limitations, you may not use HERE to store results for locations in Japan. For more information, see the <a href="https://aws.amazon.com/service-terms/">AWS Service Terms</a> for Amazon Location Service.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePlaceIndexResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DataSource
                - IndexName
                - PricingPlan
              properties:
                DataSource:
                  description: '<p>Specifies the data provider of geospatial data.</p> <note> <p>This field is case-sensitive. Enter the valid values as shown. For example, entering <code>HERE</code> will return an error.</p> </note> <p>Valid values include:</p> <ul> <li> <p> <code>Esri</code> </p> </li> <li> <p> <code>Here</code> </p> </li> </ul> <p>For additional details on data providers, see the <a href="https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html">Amazon Location Service data providers page</a>.</p>'
                  type: string
                DataSourceConfiguration:
                  description: '<p>Specifies the data storage option chosen for requesting Places.</p> <note> <p>By using Places, you agree that AWS may transmit your API queries to your selected third party provider for processing, which may be outside the AWS region you are currently using. </p> <p>Also, when using HERE as your data provider, you may not (a) use HERE Places for Asset Management, or (b) select the <code>Storage</code> option for the <code>IntendedUse</code> parameter when requesting Places in Japan. For more information, see the <a href="https://aws.amazon.com/service-terms/">AWS Service Terms</a> for Amazon Location Service.</p> </note>'
                  type: object
                  properties:
                    IntendedUse:
                      allOf:
                        - $ref: '#/components/schemas/IntendedUse'
                        - description: '<p>Specifies how the results of an operation will be stored by the caller. </p> <p>Valid values include:</p> <ul> <li> <p> <code>SingleUse</code> specifies that the results won''t be stored. </p> </li> <li> <p> <code>Storage</code> specifies that the result can be cached or stored in a database.</p> </li> </ul> <p>Default value: <code>SingleUse</code> </p>'
                Description:
                  description: The optional description for the Place index resource.
                  type: string
                  minLength: 0
                  maxLength: 1000
                IndexName:
                  description: '<p>The name of the Place index resource. </p> <p>Requirements:</p> <ul> <li> <p>Contain only alphanumeric characters (A-Z, a-z, 0-9) , hyphens (-), periods (.), and underscores (_).</p> </li> <li> <p>Must be a unique Place index resource name.</p> </li> <li> <p>No spaces allowed. For example, <code>ExamplePlaceIndex</code>.</p> </li> </ul>'
                  type: string
                  pattern: '^[-._\w]+$'
                  minLength: 1
                  maxLength: 100
                PricingPlan:
                  description: '<p>Specifies the pricing plan for your Place index resource.</p> <p>For additional details and restrictions on each pricing plan option, see the <a href="https://aws.amazon.com/location/pricing/">Amazon Location Service pricing page</a>.</p>'
                  type: string
                  enum:
                    - RequestBasedUsage
                    - MobileAssetTracking
                    - MobileAssetManagement
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /tracking/v0/trackers:
    post:
      operationId: CreateTracker
      description: 'Creates a tracker resource in your AWS account, which lets you retrieve current and historical location of devices.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTrackerResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PricingPlan
                - TrackerName
              properties:
                Description:
                  description: An optional description for the tracker resource.
                  type: string
                  minLength: 0
                  maxLength: 1000
                PricingPlan:
                  description: '<p>Specifies the pricing plan for your tracker resource.</p> <p>For additional details and restrictions on each pricing plan option, see the <a href="https://aws.amazon.com/location/pricing/">Amazon Location Service pricing page</a>.</p>'
                  type: string
                  enum:
                    - RequestBasedUsage
                    - MobileAssetTracking
                    - MobileAssetManagement
                PricingPlanDataSource:
                  description: '<p>Specifies the plan data source. Required if the Mobile Asset Tracking (MAT) or the Mobile Asset Management (MAM) pricing plan is selected.</p> <p>Billing is determined by the resource usage, the associated pricing plan, and data source that was specified. For more information about each pricing plan option and restrictions, see the <a href="https://aws.amazon.com/location/pricing/">Amazon Location Service pricing page</a>.</p> <p>Valid Values: <code>Esri</code> | <code>Here</code> </p>'
                  type: string
                TrackerName:
                  description: '<p>The name for the tracker resource.</p> <p>Requirements:</p> <ul> <li> <p>Contain only alphanumeric characters (A-Z, a-z, 0-9) , hyphens (-), periods (.), and underscores (_).</p> </li> <li> <p>Must be a unique tracker resource name.</p> </li> <li> <p>No spaces allowed. For example, <code>ExampleTracker</code>.</p> </li> </ul>'
                  type: string
                  pattern: '^[-._\w]+$'
                  minLength: 1
                  maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/geofencing/v0/collections/{CollectionName}':
    delete:
      operationId: DeleteGeofenceCollection
      description: '<p>Deletes a geofence collection from your AWS account.</p> <note> <p>This action deletes the resource permanently. You can''t undo this action. If the geofence collection is the target of a tracker resource, the devices will no longer be monitored.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGeofenceCollectionResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: CollectionName
          in: path
          required: true
          description: The name of the geofence collection to be deleted.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeGeofenceCollection
      description: Retrieves the geofence collection details.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeGeofenceCollectionResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: CollectionName
          in: path
          required: true
          description: The name of the geofence collection.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
  '/maps/v0/maps/{MapName}':
    delete:
      operationId: DeleteMap
      description: '<p>Deletes a map resource from your AWS account.</p> <note> <p>This action deletes the resource permanently. You cannot undo this action. If the map is being used in an application, the map may not render.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMapResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: MapName
          in: path
          required: true
          description: The name of the map resource to be deleted.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeMap
      description: Retrieves the map resource details.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMapResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: MapName
          in: path
          required: true
          description: The name of the map resource.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
  '/places/v0/indexes/{IndexName}':
    delete:
      operationId: DeletePlaceIndex
      description: <p>Deletes a Place index resource from your AWS account.</p> <note> <p>This action deletes the resource permanently. You cannot undo this action.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePlaceIndexResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: IndexName
          in: path
          required: true
          description: The name of the Place index resource to be deleted.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribePlaceIndex
      description: Retrieves the Place index resource details.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePlaceIndexResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: IndexName
          in: path
          required: true
          description: The name of the Place index resource.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
  '/tracking/v0/trackers/{TrackerName}':
    delete:
      operationId: DeleteTracker
      description: '<p>Deletes a tracker resource from your AWS account.</p> <note> <p>This action deletes the resource permanently. You can''t undo this action. If the tracker resource is in use, you may encounter an error. Make sure that the target resource is not a dependency for your applications.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTrackerResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: TrackerName
          in: path
          required: true
          description: The name of the tracker resource to be deleted.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeTracker
      description: Retrieves the tracker resource details.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTrackerResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: TrackerName
          in: path
          required: true
          description: The name of the tracker resource.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
  '/tracking/v0/trackers/{TrackerName}/consumers/{ConsumerArn}':
    delete:
      operationId: DisassociateTrackerConsumer
      description: '<p>Removes the association between a tracker resource and a geofence collection.</p> <note> <p>Once you unlink a tracker resource from a geofence collection, the tracker positions will no longer be automatically evaluated against geofences.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateTrackerConsumerResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: ConsumerArn
          in: path
          required: true
          description: '<p>The Amazon Resource Name (ARN) for the geofence collection to be disassociated from the tracker resource. Used when you need to specify a resource across all AWS. </p> <ul> <li> <p>Format example: <code>arn:partition:service:region:account-id:resource-type:resource-id</code> </p> </li> </ul>'
          schema:
            type: string
            pattern: '^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:([^/].*)?$'
            minLength: 0
            maxLength: 1600
        - name: TrackerName
          in: path
          required: true
          description: The name of the tracker resource to be dissociated from the consumer.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tracking/v0/trackers/{TrackerName}/devices/{DeviceId}/positions/latest':
    get:
      operationId: GetDevicePosition
      description: <p>Retrieves a device's most recent position according to its sample time.</p> <note> <p>Device positions are deleted after one year.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDevicePositionResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: DeviceId
          in: path
          required: true
          description: The device whose position you want to retrieve.
          schema:
            type: string
            pattern: '^[-._\p{L}\p{N}]+$'
            minLength: 1
            maxLength: 100
        - name: TrackerName
          in: path
          required: true
          description: The tracker resource receiving the position update.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tracking/v0/trackers/{TrackerName}/devices/{DeviceId}/list-positions':
    post:
      operationId: GetDevicePositionHistory
      description: <p>Retrieves the device position history from a tracker resource within a specified range of time.</p> <note> <p>Device positions are deleted after 1 year.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDevicePositionHistoryResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: DeviceId
          in: path
          required: true
          description: The device whose position history you want to retrieve.
          schema:
            type: string
            pattern: '^[-._\p{L}\p{N}]+$'
            minLength: 1
            maxLength: 100
        - name: TrackerName
          in: path
          required: true
          description: The tracker resource receiving the request for the device position history.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EndTimeExclusive:
                  description: '<p>Specify the end time for the position history in <a href="https://www.iso.org/iso-8601-date-and-time-format.html"> ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. By default, the value will be the time that the request is made.</p> <p>Requirement:</p> <ul> <li> <p>The time specified for <code>EndTimeExclusive</code> must be after the time for <code>StartTimeInclusive</code>.</p> </li> </ul>'
                  type: string
                  format: date-time
                NextToken:
                  description: '<p>The pagination token specifying which page of results to return in the response. If no token is provided, the default page is the first page. </p> <p>Default value: <code>null</code> </p>'
                  type: string
                  minLength: 1
                  maxLength: 2000
                StartTimeInclusive:
                  description: '<p>Specify the start time for the position history in <a href="https://www.iso.org/iso-8601-date-and-time-format.html"> ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. By default, the value will be 24 hours prior to the time that the request is made.</p> <p>Requirement:</p> <ul> <li> <p>The time specified for <code>StartTimeInclusive</code> must be before <code>EndTimeExclusive</code>.</p> </li> </ul>'
                  type: string
                  format: date-time
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/geofencing/v0/collections/{CollectionName}/geofences/{GeofenceId}':
    get:
      operationId: GetGeofence
      description: Retrieves the geofence details from a geofence collection.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGeofenceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: CollectionName
          in: path
          required: true
          description: The geofence collection storing the target geofence.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
        - name: GeofenceId
          in: path
          required: true
          description: The geofence you're retrieving details for.
          schema:
            type: string
            pattern: '^[-._\p{L}\p{N}]+$'
            minLength: 1
            maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: PutGeofence
      description: 'Stores a geofence geometry in a given geofence collection, or updates the geometry of an existing geofence if a geofence ID is included in the request. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutGeofenceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: CollectionName
          in: path
          required: true
          description: The geofence collection to store the geofence in.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
        - name: GeofenceId
          in: path
          required: true
          description: 'An identifier for the geofence. For example, <code>ExampleGeofence-1</code>.'
          schema:
            type: string
            pattern: '^[-._\p{L}\p{N}]+$'
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Geometry
              properties:
                Geometry:
                  description: '<p>Contains the geofence geometry details.</p> <note> <p>Amazon Location does not currently support polygons with holes, multipolygons, polygons that are wound clockwise, or that cross the antimeridian. </p> </note>'
                  type: object
                  properties:
                    Polygon:
                      allOf:
                        - $ref: '#/components/schemas/LinearRings'
                        - description: '<p>An array of 1 or more linear rings. A linear ring is an array of 4 or more vertices, where the first and last vertex are the same to form a closed boundary. Each vertex is a 2-dimensional point of the form: <code>[longitude, latitude]</code>. </p> <p>The first linear ring is an outer ring, describing the polygon''s boundary. Subsequent linear rings may be inner or outer rings to describe holes and islands. Outer rings must list their vertices in counter-clockwise order around the ring''s center, where the left side is the polygon''s exterior. Inner rings must list their vertices in clockwise order, where the left side is the polygon''s interior.</p>'
  '/maps/v0/maps/{MapName}/glyphs/{FontStack}/{FontUnicodeRange}':
    get:
      operationId: GetMapGlyphs
      description: Retrieves glyphs used to display labels on a map.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMapGlyphsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: FontStack
          in: path
          required: true
          description: 'A comma-separated list of fonts to load glyphs from in order of preference.. For example, <code>Noto Sans, Arial Unicode</code>.'
          schema:
            type: string
        - name: FontUnicodeRange
          in: path
          required: true
          description: 'A Unicode range of characters to download glyphs for. Each response will contain 256 characters. For example, 0-255 includes all characters from range <code>U+0000</code> to <code>00FF</code>. Must be aligned to multiples of 256.'
          schema:
            type: string
            pattern: '^[0-9]+-[0-9]+\.pbf$'
        - name: MapName
          in: path
          required: true
          description: The map resource associated with the glyph ﬁle.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/maps/v0/maps/{MapName}/sprites/{FileName}':
    get:
      operationId: GetMapSprites
      description: Retrieves the sprite sheet corresponding to a map resource. The sprite sheet is a PNG image paired with a JSON document describing the offsets of individual icons that will be displayed on a rendered map.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMapSpritesResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: FileName
          in: path
          required: true
          description: '<p>The name of the sprite ﬁle. Use the following ﬁle names for the sprite sheet:</p> <ul> <li> <p> <code>sprites.png</code> </p> </li> <li> <p> <code>sprites@2x.png</code> for high pixel density displays</p> </li> </ul> <p>For the JSON document contain image offsets. Use the following ﬁle names:</p> <ul> <li> <p> <code>sprites.json</code> </p> </li> <li> <p> <code>sprites@2x.json</code> for high pixel density displays</p> </li> </ul>'
          schema:
            type: string
            pattern: ^sprites(@2x)?\.(png|json)$
        - name: MapName
          in: path
          required: true
          description: The map resource associated with the sprite ﬁle.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/maps/v0/maps/{MapName}/style-descriptor':
    get:
      operationId: GetMapStyleDescriptor
      description: '<p>Retrieves the map style descriptor from a map resource. </p> <p>The style descriptor contains speciﬁcations on how features render on a map. For example, what data to display, what order to display the data in, and the style for the data. Style descriptors follow the Mapbox Style Specification.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMapStyleDescriptorResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: MapName
          in: path
          required: true
          description: The map resource to retrieve the style descriptor from.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/maps/v0/maps/{MapName}/tiles/{Z}/{X}/{Y}':
    get:
      operationId: GetMapTile
      description: '<p>Retrieves a vector data tile from the map resource. Map tiles are used by clients to render a map. They are addressed using a grid arrangement with an X coordinate, Y coordinate, and Z (zoom) level. </p> <p>The origin (0, 0) is the top left of the map. Increasing the zoom level by 1 doubles both the X and Y dimensions, so a tile containing data for the entire world at (0/0/0) will be split into 4 tiles at zoom 1 (1/0/0, 1/0/1, 1/1/0, 1/1/1).</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMapTileResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: MapName
          in: path
          required: true
          description: The map resource to retrieve the map tiles from.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
        - name: X
          in: path
          required: true
          description: The X axis value for the map tile.
          schema:
            type: string
            pattern: \d+
        - name: 'Y'
          in: path
          required: true
          description: 'The Y axis value for the map tile. '
          schema:
            type: string
            pattern: \d+
        - name: Z
          in: path
          required: true
          description: The zoom value for the map tile.
          schema:
            type: string
            pattern: \d+
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /geofencing/v0/list-collections:
    post:
      operationId: ListGeofenceCollections
      description: Lists geofence collections in your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGeofenceCollectionsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  description: '<p>An optional limit for the number of resources returned in a single call. </p> <p>Default value: <code>100</code> </p>'
                  type: integer
                  minimum: 1
                  maximum: 100
                NextToken:
                  description: '<p>The pagination token specifying which page of results to return in the response. If no token is provided, the default page is the first page. </p> <p>Default value: <code>null</code> </p>'
                  type: string
                  minLength: 1
                  maxLength: 2000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/geofencing/v0/collections/{CollectionName}/list-geofences':
    post:
      operationId: ListGeofences
      description: Lists geofences stored in a given geofence collection.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGeofencesResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: CollectionName
          in: path
          required: true
          description: The name of the geofence collection storing the list of geofences.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  description: '<p>The pagination token specifying which page of results to return in the response. If no token is provided, the default page is the first page. </p> <p>Default value: <code>null</code> </p>'
                  type: string
                  minLength: 1
                  maxLength: 2000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /maps/v0/list-maps:
    post:
      operationId: ListMaps
      description: Lists map resources in your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMapsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  description: '<p>An optional limit for the number of resources returned in a single call. </p> <p>Default value: <code>100</code> </p>'
                  type: integer
                  minimum: 1
                  maximum: 100
                NextToken:
                  description: '<p>The pagination token specifying which page of results to return in the response. If no token is provided, the default page is the first page.</p> <p>Default value: <code>null</code> </p>'
                  type: string
                  minLength: 1
                  maxLength: 2000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /places/v0/list-indexes:
    post:
      operationId: ListPlaceIndexes
      description: Lists Place index resources in your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPlaceIndexesResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  description: '<p>An optional limit for the maximum number of results returned in a single call.</p> <p>Default value: <code>100</code> </p>'
                  type: integer
                  minimum: 1
                  maximum: 100
                NextToken:
                  description: '<p>The pagination token specifying which page of results to return in the response. If no token is provided, the default page is the first page.</p> <p>Default value: <code>null</code> </p>'
                  type: string
                  minLength: 1
                  maxLength: 2000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tracking/v0/trackers/{TrackerName}/list-consumers':
    post:
      operationId: ListTrackerConsumers
      description: Lists geofence collections currently associated to the given tracker resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTrackerConsumersResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: TrackerName
          in: path
          required: true
          description: The tracker resource whose associated geofence collections you want to list.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  description: '<p>An optional limit for the number of resources returned in a single call. </p> <p>Default value: <code>100</code> </p>'
                  type: integer
                  minimum: 1
                  maximum: 100
                NextToken:
                  description: '<p>The pagination token specifying which page of results to return in the response. If no token is provided, the default page is the first page. </p> <p>Default value: <code>null</code> </p>'
                  type: string
                  minLength: 1
                  maxLength: 2000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /tracking/v0/list-trackers:
    post:
      operationId: ListTrackers
      description: Lists tracker resources in your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTrackersResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  description: '<p>An optional limit for the number of resources returned in a single call. </p> <p>Default value: <code>100</code> </p>'
                  type: integer
                  minimum: 1
                  maximum: 100
                NextToken:
                  description: '<p>The pagination token specifying which page of results to return in the response. If no token is provided, the default page is the first page. </p> <p>Default value: <code>null</code> </p>'
                  type: string
                  minLength: 1
                  maxLength: 2000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/places/v0/indexes/{IndexName}/search/position':
    post:
      operationId: SearchPlaceIndexForPosition
      description: '<p>Reverse geocodes a given coordinate and returns a legible address. Allows you to search for Places or points of interest near a given position.</p> <note> <p>By using Places, you agree that AWS may transmit your API queries to your selected third party provider for processing, which may be outside the AWS region you are currently using. </p> <p>Because of licensing limitations, you may not use HERE to store results for locations in Japan. For more information, see the <a href="https://aws.amazon.com/service-terms/">AWS Service Terms</a> for Amazon Location Service.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchPlaceIndexForPositionResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: IndexName
          in: path
          required: true
          description: The name of the Place index resource you want to use for the search.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Position
              properties:
                MaxResults:
                  description: '<p>An optional paramer. The maximum number of results returned per request. </p> <p>Default value: <code>50</code> </p>'
                  type: integer
                  minimum: 1
                  maximum: 50
                Position:
                  description: '<p>Specifies a coordinate for the query defined by a longitude, and latitude.</p> <ul> <li> <p>The first position is the X coordinate, or longitude.</p> </li> <li> <p>The second position is the Y coordinate, or latitude. </p> </li> </ul> <p>For example, <code>position=xLongitude&amp;position=yLatitude</code> .</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Double'
                  minItems: 2
                  maxItems: 2
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/places/v0/indexes/{IndexName}/search/text':
    post:
      operationId: SearchPlaceIndexForText
      description: '<p>Geocodes free-form text, such as an address, name, city, or region to allow you to search for Places or points of interest. </p> <p>Includes the option to apply additional parameters to narrow your list of results.</p> <note> <p>You can search for places near a given position using <code>BiasPosition</code>, or filter results within a bounding box using <code>FilterBBox</code>. Providing both parameters simultaneously returns an error.</p> </note> <note> <p>By using Places, you agree that AWS may transmit your API queries to your selected third party provider for processing, which may be outside the AWS region you are currently using. </p> <p>Also, when using HERE as your data provider, you may not (a) use HERE Places for Asset Management, or (b) select the <code>Storage</code> option for the <code>IntendedUse</code> parameter when requesting Places in Japan. For more information, see the <a href="https://aws.amazon.com/service-terms/">AWS Service Terms</a> for Amazon Location Service.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchPlaceIndexForTextResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: IndexName
          in: path
          required: true
          description: The name of the Place index resource you want to use for the search.
          schema:
            type: string
            pattern: '^[-._\w]+$'
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Text
              properties:
                BiasPosition:
                  description: '<p>Searches for results closest to the given position. An optional parameter defined by longitude, and latitude.</p> <ul> <li> <p>The first <code>bias</code> position is the X coordinate, or longitude.</p> </li> <li> <p>The second <code>bias</code> position is the Y coordinate, or latitude. </p> </li> </ul> <p>For example, <code>bias=xLongitude&amp;bias=yLatitude</code>.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Double'
                  minItems: 2
                  maxItems: 2
                FilterBBox:
                  description: '<p>Filters the results by returning only Places within the provided bounding box. An optional parameter.</p> <p>The first 2 <code>bbox</code> parameters describe the lower southwest corner:</p> <ul> <li> <p>The first <code>bbox</code> position is the X coordinate or longitude of the lower southwest corner.</p> </li> <li> <p>The second <code>bbox</code> position is the Y coordinate or latitude of the lower southwest corner.</p> </li> </ul> <p>For example, <code>bbox=xLongitudeSW&amp;bbox=yLatitudeSW</code>.</p> <p>The next <code>bbox</code> parameters describe the upper northeast corner:</p> <ul> <li> <p>The third <code>bbox</code> position is the X coordinate, or longitude of the upper northeast corner.</p> </li> <li> <p>The fourth <code>bbox</code> position is the Y coordinate, or longitude of the upper northeast corner.</p> </li> </ul> <p>For example, <code>bbox=xLongitudeNE&amp;bbox=yLatitudeNE</code> </p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Double'
                  minItems: 4
                  maxItems: 6
                FilterCountries:
                  description: '<p>Limits the search to the given a list of countries/regions. An optional parameter.</p> <ul> <li> <p>Use the <a href="https://www.iso.org/iso-3166-country-codes.html">ISO 3166</a> 3-digit country code. For example, Australia uses three upper-case characters: <code>AUS</code>.</p> </li> </ul>'
                  type: array
                  items:
                    $ref: '#/components/schemas/CountryCode'
                  minItems: 1
                  maxItems: 100
                MaxResults:
                  description: '<p>An optional parameter. The maximum number of results returned per request. </p> <p>The default: <code>50</code> </p>'
                  type: integer
                  minimum: 1
                  maximum: 50
                Text:
                  description: 'The address, name, city, or region to be used in the search. In free-form text format. For example, <code>123 Any Street</code>.'
                  type: string
                  minLength: 1
                  maxLength: 200
                  format: password
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateTrackerConsumerResponse:
      type: object
      properties: {}
    InternalServerException: {}
    ResourceNotFoundException: {}
    ConflictException: {}
    AccessDeniedException: {}
    ValidationException: {}
    ThrottlingException: {}
    BatchDeleteGeofenceResponse:
      type: object
      required:
        - Errors
      properties:
        Errors:
          allOf:
            - $ref: '#/components/schemas/BatchDeleteGeofenceErrorList'
            - description: Contains error details for each geofence that failed to delete.
    Id:
      type: string
      pattern: '^[-._\p{L}\p{N}]+$'
      minLength: 1
      maxLength: 100
    BatchEvaluateGeofencesResponse:
      type: object
      required:
        - Errors
      properties:
        Errors:
          allOf:
            - $ref: '#/components/schemas/BatchEvaluateGeofencesErrorList'
            - description: Contains error details for each device that failed to evaluate its position against the given geofence collection.
    DevicePositionUpdate:
      type: object
      required:
        - DeviceId
        - Position
        - SampleTime
      properties:
        DeviceId:
          allOf:
            - $ref: '#/components/schemas/Id'
            - description: The device associated to the position update.
        Position:
          allOf:
            - $ref: '#/components/schemas/Position'
            - description: 'The latest device position defined in <a href="https://earth-info.nga.mil/GandG/wgs84/index.html">WGS 84</a> format: <code>[X or longitude, Y or latitude]</code>.'
        SampleTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the device''s position was determined. Uses <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code> '
      description: Contains the position update details for a device.
    BatchGetDevicePositionResponse:
      type: object
      required:
        - DevicePositions
        - Errors
      properties:
        DevicePositions:
          allOf:
            - $ref: '#/components/schemas/DevicePositionList'
            - description: 'Contains device position details such as the device ID, position, and timestamps for when the position was received and sampled.'
        Errors:
          allOf:
            - $ref: '#/components/schemas/BatchGetDevicePositionErrorList'
            - description: Contains error details for each device that failed to send its position to the tracker resource.
    BatchPutGeofenceResponse:
      type: object
      required:
        - Errors
        - Successes
      properties:
        Errors:
          allOf:
            - $ref: '#/components/schemas/BatchPutGeofenceErrorList'
            - description: Contains additional error details for each geofence that failed to be stored in a geofence collection.
        Successes:
          allOf:
            - $ref: '#/components/schemas/BatchPutGeofenceSuccessList'
            - description: Contains each geofence that was successfully stored in a geofence collection.
    BatchPutGeofenceRequestEntry:
      type: object
      required:
        - GeofenceId
        - Geometry
      properties:
        GeofenceId:
          allOf:
            - $ref: '#/components/schemas/Id'
            - description: The identifier for the geofence to be stored in a given geofence collection.
        Geometry:
          allOf:
            - $ref: '#/components/schemas/GeofenceGeometry'
            - description: '<p>Contains the polygon details to specify the position of the geofence.</p> <note> <p>Each <a href="https://docs.aws.amazon.com/location-geofences/latest/APIReference/API_GeofenceGeometry.html">geofence polygon</a> can have a maximum of 1,000 vertices.</p> </note>'
      description: 'Contains geofence geometry details. '
    BatchUpdateDevicePositionResponse:
      type: object
      required:
        - Errors
      properties:
        Errors:
          allOf:
            - $ref: '#/components/schemas/BatchUpdateDevicePositionErrorList'
            - description: Contains error details for each device that failed to update its position.
    CreateGeofenceCollectionResponse:
      type: object
      required:
        - CollectionArn
        - CollectionName
        - CreateTime
      properties:
        CollectionArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: 'The Amazon Resource Name (ARN) for the geofence collection resource. Used when you need to specify a resource across all AWS. '
        CollectionName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: The name for the geofence collection.
        CreateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the geofence collection was created in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code> '
    CreateMapResponse:
      type: object
      required:
        - CreateTime
        - MapArn
        - MapName
      properties:
        CreateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the map resource was created in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>.'
        MapArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: '<p>The Amazon Resource Name (ARN) for the map resource. Used when you need to specify a resource across all AWS.</p> <ul> <li> <p>Format example: <code>arn:partition:service:region:account-id:resource-type:resource-id</code> </p> </li> </ul>'
        MapName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: The name of the map resource.
    MapStyle:
      type: string
      pattern: '^[-._\p{L}\p{N}]+$'
      minLength: 1
      maxLength: 100
    CreatePlaceIndexResponse:
      type: object
      required:
        - CreateTime
        - IndexArn
        - IndexName
      properties:
        CreateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the Place index resource was created in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. '
        IndexArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: 'The Amazon Resource Name (ARN) for the Place index resource. Used when you need to specify a resource across all AWS. '
        IndexName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: The name for the Place index resource.
    IntendedUse:
      type: string
      enum:
        - SingleUse
        - Storage
    CreateTrackerResponse:
      type: object
      required:
        - CreateTime
        - TrackerArn
        - TrackerName
      properties:
        CreateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the tracker resource was created in <a href="https://www.iso.org/iso-8601-date-and-time-format.html"> ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. '
        TrackerArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) for the tracker resource. Used when you need to specify a resource across all AWS.
        TrackerName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: The name of the tracker resource.
    DeleteGeofenceCollectionResponse:
      type: object
      properties: {}
    DeleteMapResponse:
      type: object
      properties: {}
    DeletePlaceIndexResponse:
      type: object
      properties: {}
    DeleteTrackerResponse:
      type: object
      properties: {}
    DescribeGeofenceCollectionResponse:
      type: object
      required:
        - CollectionArn
        - CollectionName
        - CreateTime
        - Description
        - PricingPlan
        - UpdateTime
      properties:
        CollectionArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: 'The Amazon Resource Name (ARN) for the geofence collection resource. Used when you need to specify a resource across all AWS. '
        CollectionName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: The name of the geofence collection.
        CreateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the geofence resource was created in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code> '
        Description:
          allOf:
            - $ref: '#/components/schemas/ResourceDescription'
            - description: The optional description for the geofence collection.
        PricingPlan:
          allOf:
            - $ref: '#/components/schemas/PricingPlan'
            - description: '<p>The pricing plan selected for the specified geofence collection.</p> <p>For additional details and restrictions on each pricing plan option, see the <a href="https://aws.amazon.com/location/pricing/">Amazon Location Service pricing page</a>.</p>'
        PricingPlanDataSource:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The data source selected for the geofence collection and associated pricing plan.
        UpdateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the geofence collection was last updated in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code> '
    DescribeMapResponse:
      type: object
      required:
        - Configuration
        - CreateTime
        - DataSource
        - Description
        - MapArn
        - MapName
        - PricingPlan
        - UpdateTime
      properties:
        Configuration:
          allOf:
            - $ref: '#/components/schemas/MapConfiguration'
            - description: Specifies the map tile style selected from a partner data provider.
        CreateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the map resource was created in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>.'
        DataSource:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Specifies the data provider for the associated map tiles.
        Description:
          allOf:
            - $ref: '#/components/schemas/ResourceDescription'
            - description: The optional description for the map resource.
        MapArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) for the map resource. Used when you need to specify a resource across all AWS.
        MapName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: The map style selected from an available provider.
        PricingPlan:
          allOf:
            - $ref: '#/components/schemas/PricingPlan'
            - description: '<p>The pricing plan selected for the specified map resource.</p> <pre><code> &lt;p&gt;For additional details and restrictions on each pricing plan option, see the &lt;a href=&quot;https://aws.amazon.com/location/pricing/&quot;&gt;Amazon Location Service pricing page&lt;/a&gt;.&lt;/p&gt; </code></pre>'
        UpdateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the map resource was last update in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>.'
    DescribePlaceIndexResponse:
      type: object
      required:
        - CreateTime
        - DataSource
        - DataSourceConfiguration
        - Description
        - IndexArn
        - IndexName
        - PricingPlan
        - UpdateTime
      properties:
        CreateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the Place index resource was created in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. '
        DataSource:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The data provider of geospatial data. Indicates one of the available providers:</p> <ul> <li> <p> <code>Esri</code> </p> </li> <li> <p> <code>Here</code> </p> </li> </ul> <p>For additional details on data providers, see the <a href="https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html">Amazon Location Service data providers page</a>.</p>'
        DataSourceConfiguration:
          allOf:
            - $ref: '#/components/schemas/DataSourceConfiguration'
            - description: The specified data storage option for requesting Places.
        Description:
          allOf:
            - $ref: '#/components/schemas/ResourceDescription'
            - description: The optional description for the Place index resource.
        IndexArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: 'The Amazon Resource Name (ARN) for the Place index resource. Used when you need to specify a resource across all AWS. '
        IndexName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: The name of the Place index resource being described.
        PricingPlan:
          allOf:
            - $ref: '#/components/schemas/PricingPlan'
            - description: '<p>The pricing plan selected for the specified Place index resource.</p> <p>For additional details and restrictions on each pricing plan option, see the <a href="https://aws.amazon.com/location/pricing/">Amazon Location Service pricing page</a>.</p>'
        UpdateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the Place index resource was last updated in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. '
    DescribeTrackerResponse:
      type: object
      required:
        - CreateTime
        - Description
        - PricingPlan
        - TrackerArn
        - TrackerName
        - UpdateTime
      properties:
        CreateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the tracker resource was created in <a href="https://www.iso.org/iso-8601-date-and-time-format.html"> ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. '
        Description:
          allOf:
            - $ref: '#/components/schemas/ResourceDescription'
            - description: The optional description for the tracker resource.
        PricingPlan:
          allOf:
            - $ref: '#/components/schemas/PricingPlan'
            - description: '<p>The pricing plan selected for the specified tracker resource.</p> <p>For additional details and restrictions on each pricing plan option, see the <a href="https://aws.amazon.com/location/pricing/">Amazon Location Service pricing page</a>.</p>'
        PricingPlanDataSource:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The data source selected for the tracker resource and associated pricing plan.
        TrackerArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) for the tracker resource. Used when you need to specify a resource across all AWS.
        TrackerName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: The name of the tracker resource.
        UpdateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the tracker resource was last updated in <a href="https://www.iso.org/iso-8601-date-and-time-format.html"> ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. '
    DisassociateTrackerConsumerResponse:
      type: object
      properties: {}
    GetDevicePositionResponse:
      type: object
      required:
        - Position
        - ReceivedTime
        - SampleTime
      properties:
        DeviceId:
          allOf:
            - $ref: '#/components/schemas/Id'
            - description: The device whose position you retrieved.
        Position:
          allOf:
            - $ref: '#/components/schemas/Position'
            - description: The last known device position.
        ReceivedTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the tracker resource received the device position in <a href="https://www.iso.org/iso-8601-date-and-time-format.html"> ISO 8601 </a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. '
        SampleTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the device''s position was determined. Uses <a href="https://www.iso.org/iso-8601-date-and-time-format.html"> ISO 8601 </a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. '
    GetDevicePositionHistoryResponse:
      type: object
      required:
        - DevicePositions
      properties:
        DevicePositions:
          allOf:
            - $ref: '#/components/schemas/DevicePositionList'
            - description: Contains the position history details for the requested device.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: 'A pagination token indicating there are additional pages available. You can use the token in a following request to fetch the next set of results. '
    GetGeofenceResponse:
      type: object
      required:
        - CreateTime
        - GeofenceId
        - Geometry
        - Status
        - UpdateTime
      properties:
        CreateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the geofence collection was created in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code> '
        GeofenceId:
          allOf:
            - $ref: '#/components/schemas/Id'
            - description: The geofence identifier.
        Geometry:
          allOf:
            - $ref: '#/components/schemas/GeofenceGeometry'
            - description: Contains the geofence geometry details describing a polygon.
        Status:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>Identifies the state of the geofence. A geofence will hold one of the following states:</p> <ul> <li> <p> <code>ACTIVE</code> — The geofence has been indexed by the system. </p> </li> <li> <p> <code>PENDING</code> — The geofence is being processed by the system.</p> </li> <li> <p> <code>FAILED</code> — The geofence failed to be indexed by the system.</p> </li> <li> <p> <code>DELETED</code> — The geofence has been deleted from the system index.</p> </li> <li> <p> <code>DELETING</code> — The geofence is being deleted from the system index.</p> </li> </ul>'
        UpdateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the geofence collection was last updated in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code> '
    GetMapGlyphsResponse:
      type: object
      properties:
        Blob:
          allOf:
            - $ref: '#/components/schemas/Blob'
            - description: The blob's content type.
    GetMapSpritesResponse:
      type: object
      properties:
        Blob:
          allOf:
            - $ref: '#/components/schemas/Blob'
            - description: Contains the body of the sprite sheet or JSON offset ﬁle.
    GetMapStyleDescriptorResponse:
      type: object
      properties:
        Blob:
          allOf:
            - $ref: '#/components/schemas/Blob'
            - description: Contains the body of the style descriptor.
    GetMapTileResponse:
      type: object
      properties:
        Blob:
          allOf:
            - $ref: '#/components/schemas/Blob'
            - description: Contains Mapbox Vector Tile (MVT) data.
    ListGeofenceCollectionsResponse:
      type: object
      required:
        - Entries
      properties:
        Entries:
          allOf:
            - $ref: '#/components/schemas/ListGeofenceCollectionsResponseEntryList'
            - description: Lists the geofence collections that exist in your AWS account.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: 'A pagination token indicating there are additional pages available. You can use the token in a following request to fetch the next set of results. '
    ListGeofencesResponse:
      type: object
      required:
        - Entries
      properties:
        Entries:
          allOf:
            - $ref: '#/components/schemas/ListGeofenceResponseEntryList'
            - description: Contains a list of geofences stored in the geofence collection.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: 'A pagination token indicating there are additional pages available. You can use the token in a following request to fetch the next set of results. '
    ListMapsResponse:
      type: object
      required:
        - Entries
      properties:
        Entries:
          allOf:
            - $ref: '#/components/schemas/ListMapsResponseEntryList'
            - description: Contains a list of maps in your AWS account
        NextToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: 'A pagination token indicating there are additional pages available. You can use the token in a following request to fetch the next set of results. '
    ListPlaceIndexesResponse:
      type: object
      required:
        - Entries
      properties:
        Entries:
          allOf:
            - $ref: '#/components/schemas/ListPlaceIndexesResponseEntryList'
            - description: Lists the Place index resources that exist in your AWS account
        NextToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: A pagination token indicating there are additional pages available. You can use the token in a following request to fetch the next set of results.
    ListTrackerConsumersResponse:
      type: object
      required:
        - ConsumerArns
      properties:
        ConsumerArns:
          allOf:
            - $ref: '#/components/schemas/ArnList'
            - description: Contains the list of geofence collection ARNs associated to the tracker resource.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: 'A pagination token indicating there are additional pages available. You can use the token in a following request to fetch the next set of results. '
    ListTrackersResponse:
      type: object
      required:
        - Entries
      properties:
        Entries:
          allOf:
            - $ref: '#/components/schemas/ListTrackersResponseEntryList'
            - description: 'Contains tracker resources in your AWS account. Details include tracker name, description and timestamps for when the tracker was created and last updated.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: 'A pagination token indicating there are additional pages available. You can use the token in a following request to fetch the next set of results. '
    PutGeofenceResponse:
      type: object
      required:
        - CreateTime
        - GeofenceId
        - UpdateTime
      properties:
        CreateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the geofence was created in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code> '
        GeofenceId:
          allOf:
            - $ref: '#/components/schemas/Id'
            - description: The geofence identifier entered in the request.
        UpdateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the geofence was last updated in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code> '
    LinearRings:
      type: array
      items:
        $ref: '#/components/schemas/LinearRing'
      minItems: 1
    SearchPlaceIndexForPositionResponse:
      type: object
      required:
        - Results
        - Summary
      properties:
        Results:
          allOf:
            - $ref: '#/components/schemas/SearchForPositionResultList'
            - description: Returns a list of Places closest to the specified position. Each result contains additional information about the Places returned.
        Summary:
          allOf:
            - $ref: '#/components/schemas/SearchPlaceIndexForPositionSummary'
            - description: Contains a summary of the request.
    Double:
      type: number
      format: double
    SearchPlaceIndexForTextResponse:
      type: object
      required:
        - Results
        - Summary
      properties:
        Results:
          allOf:
            - $ref: '#/components/schemas/SearchForTextResultList'
            - description: 'A list of Places closest to the specified position. Each result contains additional information about the specific point of interest. '
        Summary:
          allOf:
            - $ref: '#/components/schemas/SearchPlaceIndexForTextSummary'
            - description: 'Contains a summary of the request. Contains the <code>BiasPosition</code>, <code>DataSource</code>, <code>FilterBBox</code>, <code>FilterCountries</code>, <code>MaxResults</code>, <code>ResultBBox</code>, and <code>Text</code>.'
    CountryCode:
      type: string
      pattern: '^[A-Z]{3}$'
    Arn:
      type: string
      pattern: '^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:([^/].*)?$'
      minLength: 0
      maxLength: 1600
    ArnList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
    ResourceName:
      type: string
      pattern: '^[-._\w]+$'
      minLength: 1
      maxLength: 100
    AssociateTrackerConsumerRequest:
      type: object
      required:
        - ConsumerArn
      title: AssociateTrackerConsumerRequest
      properties:
        ConsumerArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: '<p>The Amazon Resource Name (ARN) for the geofence collection to be associated to tracker resource. Used when you need to specify a resource across all AWS. </p> <ul> <li> <p>Format example: <code>arn:partition:service:region:account-id:resource-type:resource-id</code> </p> </li> </ul>'
    BatchItemError:
      type: object
      properties:
        Code:
          allOf:
            - $ref: '#/components/schemas/BatchItemErrorCode'
            - description: The error code associated with the batch request error.
        Message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A message with the reason for the batch request error.
      description: Contains the batch request error details associated with the request.
    BatchDeleteGeofenceError:
      type: object
      required:
        - Error
        - GeofenceId
      properties:
        Error:
          allOf:
            - $ref: '#/components/schemas/BatchItemError'
            - description: Contains details associated to the batch error.
        GeofenceId:
          allOf:
            - $ref: '#/components/schemas/Id'
            - description: The geofence associated with the error message.
      description: Contains error details for each geofence that failed to delete from the geofence collection.
    BatchDeleteGeofenceErrorList:
      type: array
      items:
        $ref: '#/components/schemas/BatchDeleteGeofenceError'
    BatchDeleteGeofenceRequestGeofenceIdsList:
      type: array
      items:
        $ref: '#/components/schemas/Id'
      minItems: 1
      maxItems: 10
    BatchDeleteGeofenceRequest:
      type: object
      required:
        - GeofenceIds
      title: BatchDeleteGeofenceRequest
      properties:
        GeofenceIds:
          allOf:
            - $ref: '#/components/schemas/BatchDeleteGeofenceRequestGeofenceIdsList'
            - description: The batch of geofences to be deleted.
    Timestamp:
      type: string
      format: date-time
    BatchEvaluateGeofencesError:
      type: object
      required:
        - DeviceId
        - Error
        - SampleTime
      properties:
        DeviceId:
          allOf:
            - $ref: '#/components/schemas/Id'
            - description: The device associated with the position evaluation error.
        Error:
          allOf:
            - $ref: '#/components/schemas/BatchItemError'
            - description: Contains details associated to the batch error.
        SampleTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'Specifies a timestamp for when the error occurred in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code> '
      description: Contains error details for each device that failed to evaluate its position against the geofences in a given geofence collection.
    BatchEvaluateGeofencesErrorList:
      type: array
      items:
        $ref: '#/components/schemas/BatchEvaluateGeofencesError'
    BatchEvaluateGeofencesRequestDevicePositionUpdatesList:
      type: array
      items:
        $ref: '#/components/schemas/DevicePositionUpdate'
      minItems: 1
      maxItems: 10
    BatchEvaluateGeofencesRequest:
      type: object
      required:
        - DevicePositionUpdates
      title: BatchEvaluateGeofencesRequest
      properties:
        DevicePositionUpdates:
          allOf:
            - $ref: '#/components/schemas/BatchEvaluateGeofencesRequestDevicePositionUpdatesList'
            - description: Contains device details for each device to be evaluated against the given geofence collection.
    BatchGetDevicePositionError:
      type: object
      required:
        - DeviceId
        - Error
      properties:
        DeviceId:
          allOf:
            - $ref: '#/components/schemas/Id'
            - description: The ID of the device that didn't return a position.
        Error:
          allOf:
            - $ref: '#/components/schemas/BatchItemError'
            - description: Contains details related to the error code.
      description: Contains error details for each device that didn't return a position.
    BatchGetDevicePositionErrorList:
      type: array
      items:
        $ref: '#/components/schemas/BatchGetDevicePositionError'
    BatchGetDevicePositionRequestDeviceIdsList:
      type: array
      items:
        $ref: '#/components/schemas/Id'
      minItems: 1
      maxItems: 10
    BatchGetDevicePositionRequestTrackerNameString:
      type: string
      pattern: '^[-._\w]+$'
      minLength: 1
    BatchGetDevicePositionRequest:
      type: object
      required:
        - DeviceIds
      title: BatchGetDevicePositionRequest
      properties:
        DeviceIds:
          allOf:
            - $ref: '#/components/schemas/BatchGetDevicePositionRequestDeviceIdsList'
            - description: '<p>Devices whose position you want to retrieve.</p> <ul> <li> <p>For example, for two devices: <code>device-ids=DeviceId1&amp;device-ids=DeviceId2</code> </p> </li> </ul>'
    DevicePositionList:
      type: array
      items:
        $ref: '#/components/schemas/DevicePosition'
    BatchItemErrorCode:
      type: string
      enum:
        - AccessDeniedError
        - ConflictError
        - InternalServerError
        - ResourceNotFoundError
        - ThrottlingError
        - ValidationError
    String:
      type: string
    BatchPutGeofenceError:
      type: object
      required:
        - Error
        - GeofenceId
      properties:
        Error:
          allOf:
            - $ref: '#/components/schemas/BatchItemError'
            - description: Contains details associated to the batch error.
        GeofenceId:
          allOf:
            - $ref: '#/components/schemas/Id'
            - description: The geofence associated with the error message.
      description: Contains error details for each geofence that failed to be stored in a given geofence collection.
    BatchPutGeofenceErrorList:
      type: array
      items:
        $ref: '#/components/schemas/BatchPutGeofenceError'
    BatchPutGeofenceRequestEntriesList:
      type: array
      items:
        $ref: '#/components/schemas/BatchPutGeofenceRequestEntry'
      minItems: 1
      maxItems: 10
    BatchPutGeofenceRequest:
      type: object
      required:
        - Entries
      title: BatchPutGeofenceRequest
      properties:
        Entries:
          allOf:
            - $ref: '#/components/schemas/BatchPutGeofenceRequestEntriesList'
            - description: The batch of geofences to be stored in a geofence collection.
    GeofenceGeometry:
      type: object
      properties:
        Polygon:
          allOf:
            - $ref: '#/components/schemas/LinearRings'
            - description: '<p>An array of 1 or more linear rings. A linear ring is an array of 4 or more vertices, where the first and last vertex are the same to form a closed boundary. Each vertex is a 2-dimensional point of the form: <code>[longitude, latitude]</code>. </p> <p>The first linear ring is an outer ring, describing the polygon''s boundary. Subsequent linear rings may be inner or outer rings to describe holes and islands. Outer rings must list their vertices in counter-clockwise order around the ring''s center, where the left side is the polygon''s exterior. Inner rings must list their vertices in clockwise order, where the left side is the polygon''s interior.</p>'
      description: '<p>Contains the geofence geometry details.</p> <note> <p>Amazon Location does not currently support polygons with holes, multipolygons, polygons that are wound clockwise, or that cross the antimeridian. </p> </note>'
    BatchPutGeofenceSuccessList:
      type: array
      items:
        $ref: '#/components/schemas/BatchPutGeofenceSuccess'
    BatchPutGeofenceSuccess:
      type: object
      required:
        - CreateTime
        - GeofenceId
        - UpdateTime
      properties:
        CreateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the geofence was stored in a geofence collection in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code> '
        GeofenceId:
          allOf:
            - $ref: '#/components/schemas/Id'
            - description: The geofence successfully stored in a geofence collection.
        UpdateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the geofence was last updated in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code> '
      description: Contains a summary of each geofence that was successfully stored in a given geofence collection.
    BatchUpdateDevicePositionError:
      type: object
      required:
        - DeviceId
        - Error
        - SampleTime
      properties:
        DeviceId:
          allOf:
            - $ref: '#/components/schemas/Id'
            - description: The device associated with the failed location update.
        Error:
          allOf:
            - $ref: '#/components/schemas/BatchItemError'
            - description: Contains details related to the error code such as the error code and error message.
        SampleTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the device position was determined. Uses <a href="https://www.iso.org/iso-8601-date-and-time-format.html"> ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. '
      description: Contains error details for each device that failed to update its position.
    BatchUpdateDevicePositionErrorList:
      type: array
      items:
        $ref: '#/components/schemas/BatchUpdateDevicePositionError'
    BatchUpdateDevicePositionRequestUpdatesList:
      type: array
      items:
        $ref: '#/components/schemas/DevicePositionUpdate'
      minItems: 1
      maxItems: 10
    BatchUpdateDevicePositionRequest:
      type: object
      required:
        - Updates
      title: BatchUpdateDevicePositionRequest
      properties:
        Updates:
          allOf:
            - $ref: '#/components/schemas/BatchUpdateDevicePositionRequestUpdatesList'
            - description: Contains the position update details for each device.
    Blob:
      type: string
    BoundingBox:
      type: array
      items:
        $ref: '#/components/schemas/Double'
      minItems: 4
      maxItems: 6
    CountryCodeList:
      type: array
      items:
        $ref: '#/components/schemas/CountryCode'
      minItems: 1
      maxItems: 100
    ResourceDescription:
      type: string
      minLength: 0
      maxLength: 1000
    PricingPlan:
      type: string
      enum:
        - RequestBasedUsage
        - MobileAssetTracking
        - MobileAssetManagement
    CreateGeofenceCollectionRequest:
      type: object
      required:
        - CollectionName
        - PricingPlan
      title: CreateGeofenceCollectionRequest
      properties:
        CollectionName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: '<p>A custom name for the geofence collection.</p> <p>Requirements:</p> <ul> <li> <p>Contain only alphanumeric characters (A–Z, a–z, 0-9), hyphens (-), periods (.), and underscores (_). </p> </li> <li> <p>Must be a unique geofence collection name.</p> </li> <li> <p>No spaces allowed. For example, <code>ExampleGeofenceCollection</code>.</p> </li> </ul>'
        Description:
          allOf:
            - $ref: '#/components/schemas/ResourceDescription'
            - description: An optional description for the geofence collection.
        PricingPlan:
          allOf:
            - $ref: '#/components/schemas/PricingPlan'
            - description: '<p>Specifies the pricing plan for your geofence collection.</p> <p>For additional details and restrictions on each pricing plan option, see the <a href="https://aws.amazon.com/location/pricing/">Amazon Location Service pricing page</a>.</p>'
        PricingPlanDataSource:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>Specifies the plan data source. Required if the Mobile Asset Tracking (MAT) or the Mobile Asset Management (MAM) pricing plan is selected.</p> <p>Billing is determined by the resource usage, the associated pricing plan, and the data source that was specified. For more information about each pricing plan option and restrictions, see the <a href="https://aws.amazon.com/location/pricing/">Amazon Location Service pricing page</a>.</p> <p>Valid Values: <code>Esri </code>| <code>Here</code> </p>'
    MapConfiguration:
      type: object
      required:
        - Style
      properties:
        Style:
          allOf:
            - $ref: '#/components/schemas/MapStyle'
            - description: '<p>Specifies the map style selected from an available data provider.</p> <p>Valid styles: <code>VectorEsriStreets</code>, <code>VectorEsriTopographic</code>, <code>VectorEsriNavigation</code>, <code>VectorEsriDarkGrayCanvas</code>, <code>VectorEsriLightGrayCanvas</code>, <code>VectorHereBerlin</code>.</p> <note> <p>When using HERE as your data provider, and selecting the Style <code>VectorHereBerlin</code>, you may not use HERE Maps for Asset Management. See the <a href="https://aws.amazon.com/service-terms/">AWS Service Terms</a> for Amazon Location Service. </p> </note>'
      description: Specifies the map tile style selected from an available provider.
    CreateMapRequest:
      type: object
      required:
        - Configuration
        - MapName
        - PricingPlan
      title: CreateMapRequest
      properties:
        Configuration:
          allOf:
            - $ref: '#/components/schemas/MapConfiguration'
            - description: Specifies the map style selected from an available data provider.
        Description:
          allOf:
            - $ref: '#/components/schemas/ResourceDescription'
            - description: An optional description for the map resource.
        MapName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: '<p>The name for the map resource.</p> <p>Requirements:</p> <ul> <li> <p>Must contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and underscores (_). </p> </li> <li> <p>Must be a unique map resource name. </p> </li> <li> <p>No spaces allowed. For example, <code>ExampleMap</code>.</p> </li> </ul>'
        PricingPlan:
          allOf:
            - $ref: '#/components/schemas/PricingPlan'
            - description: '<p>Specifies the pricing plan for your map resource.</p> <p>For additional details and restrictions on each pricing plan option, see the <a href="https://aws.amazon.com/location/pricing/">Amazon Location Service pricing page</a>.</p>'
    DataSourceConfiguration:
      type: object
      properties:
        IntendedUse:
          allOf:
            - $ref: '#/components/schemas/IntendedUse'
            - description: '<p>Specifies how the results of an operation will be stored by the caller. </p> <p>Valid values include:</p> <ul> <li> <p> <code>SingleUse</code> specifies that the results won''t be stored. </p> </li> <li> <p> <code>Storage</code> specifies that the result can be cached or stored in a database.</p> </li> </ul> <p>Default value: <code>SingleUse</code> </p>'
      description: '<p>Specifies the data storage option chosen for requesting Places.</p> <note> <p>By using Places, you agree that AWS may transmit your API queries to your selected third party provider for processing, which may be outside the AWS region you are currently using. </p> <p>Also, when using HERE as your data provider, you may not (a) use HERE Places for Asset Management, or (b) select the <code>Storage</code> option for the <code>IntendedUse</code> parameter when requesting Places in Japan. For more information, see the <a href="https://aws.amazon.com/service-terms/">AWS Service Terms</a> for Amazon Location Service.</p> </note>'
    CreatePlaceIndexRequest:
      type: object
      required:
        - DataSource
        - IndexName
        - PricingPlan
      title: CreatePlaceIndexRequest
      properties:
        DataSource:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>Specifies the data provider of geospatial data.</p> <note> <p>This field is case-sensitive. Enter the valid values as shown. For example, entering <code>HERE</code> will return an error.</p> </note> <p>Valid values include:</p> <ul> <li> <p> <code>Esri</code> </p> </li> <li> <p> <code>Here</code> </p> </li> </ul> <p>For additional details on data providers, see the <a href="https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html">Amazon Location Service data providers page</a>.</p>'
        DataSourceConfiguration:
          allOf:
            - $ref: '#/components/schemas/DataSourceConfiguration'
            - description: Specifies the data storage option for requesting Places.
        Description:
          allOf:
            - $ref: '#/components/schemas/ResourceDescription'
            - description: The optional description for the Place index resource.
        IndexName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: '<p>The name of the Place index resource. </p> <p>Requirements:</p> <ul> <li> <p>Contain only alphanumeric characters (A-Z, a-z, 0-9) , hyphens (-), periods (.), and underscores (_).</p> </li> <li> <p>Must be a unique Place index resource name.</p> </li> <li> <p>No spaces allowed. For example, <code>ExamplePlaceIndex</code>.</p> </li> </ul>'
        PricingPlan:
          allOf:
            - $ref: '#/components/schemas/PricingPlan'
            - description: '<p>Specifies the pricing plan for your Place index resource.</p> <p>For additional details and restrictions on each pricing plan option, see the <a href="https://aws.amazon.com/location/pricing/">Amazon Location Service pricing page</a>.</p>'
    CreateTrackerRequest:
      type: object
      required:
        - PricingPlan
        - TrackerName
      title: CreateTrackerRequest
      properties:
        Description:
          allOf:
            - $ref: '#/components/schemas/ResourceDescription'
            - description: An optional description for the tracker resource.
        PricingPlan:
          allOf:
            - $ref: '#/components/schemas/PricingPlan'
            - description: '<p>Specifies the pricing plan for your tracker resource.</p> <p>For additional details and restrictions on each pricing plan option, see the <a href="https://aws.amazon.com/location/pricing/">Amazon Location Service pricing page</a>.</p>'
        PricingPlanDataSource:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>Specifies the plan data source. Required if the Mobile Asset Tracking (MAT) or the Mobile Asset Management (MAM) pricing plan is selected.</p> <p>Billing is determined by the resource usage, the associated pricing plan, and data source that was specified. For more information about each pricing plan option and restrictions, see the <a href="https://aws.amazon.com/location/pricing/">Amazon Location Service pricing page</a>.</p> <p>Valid Values: <code>Esri</code> | <code>Here</code> </p>'
        TrackerName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: '<p>The name for the tracker resource.</p> <p>Requirements:</p> <ul> <li> <p>Contain only alphanumeric characters (A-Z, a-z, 0-9) , hyphens (-), periods (.), and underscores (_).</p> </li> <li> <p>Must be a unique tracker resource name.</p> </li> <li> <p>No spaces allowed. For example, <code>ExampleTracker</code>.</p> </li> </ul>'
    DeleteGeofenceCollectionRequest:
      type: object
      title: DeleteGeofenceCollectionRequest
      properties: {}
    DeleteMapRequest:
      type: object
      title: DeleteMapRequest
      properties: {}
    DeletePlaceIndexRequest:
      type: object
      title: DeletePlaceIndexRequest
      properties: {}
    DeleteTrackerRequest:
      type: object
      title: DeleteTrackerRequest
      properties: {}
    DescribeGeofenceCollectionRequest:
      type: object
      title: DescribeGeofenceCollectionRequest
      properties: {}
    DescribeMapRequest:
      type: object
      title: DescribeMapRequest
      properties: {}
    DescribePlaceIndexRequest:
      type: object
      title: DescribePlaceIndexRequest
      properties: {}
    DescribeTrackerRequest:
      type: object
      title: DescribeTrackerRequest
      properties: {}
    Position:
      type: array
      items:
        $ref: '#/components/schemas/Double'
      minItems: 2
      maxItems: 2
    DevicePosition:
      type: object
      required:
        - Position
        - ReceivedTime
        - SampleTime
      properties:
        DeviceId:
          allOf:
            - $ref: '#/components/schemas/Id'
            - description: The device whose position you retrieved.
        Position:
          allOf:
            - $ref: '#/components/schemas/Position'
            - description: The last known device position.
        ReceivedTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the tracker resource received the device position in <a href="https://www.iso.org/iso-8601-date-and-time-format.html"> ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. '
        SampleTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the device''s position was determined. Uses <a href="https://www.iso.org/iso-8601-date-and-time-format.html"> ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. '
      description: Contains the device position details.
    DisassociateTrackerConsumerRequest:
      type: object
      title: DisassociateTrackerConsumerRequest
      properties: {}
    Token:
      type: string
      minLength: 1
      maxLength: 2000
    GetDevicePositionHistoryRequest:
      type: object
      title: GetDevicePositionHistoryRequest
      properties:
        EndTimeExclusive:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: '<p>Specify the end time for the position history in <a href="https://www.iso.org/iso-8601-date-and-time-format.html"> ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. By default, the value will be the time that the request is made.</p> <p>Requirement:</p> <ul> <li> <p>The time specified for <code>EndTimeExclusive</code> must be after the time for <code>StartTimeInclusive</code>.</p> </li> </ul>'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: '<p>The pagination token specifying which page of results to return in the response. If no token is provided, the default page is the first page. </p> <p>Default value: <code>null</code> </p>'
        StartTimeInclusive:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: '<p>Specify the start time for the position history in <a href="https://www.iso.org/iso-8601-date-and-time-format.html"> ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. By default, the value will be 24 hours prior to the time that the request is made.</p> <p>Requirement:</p> <ul> <li> <p>The time specified for <code>StartTimeInclusive</code> must be before <code>EndTimeExclusive</code>.</p> </li> </ul>'
    GetDevicePositionRequest:
      type: object
      title: GetDevicePositionRequest
      properties: {}
    GetGeofenceRequest:
      type: object
      title: GetGeofenceRequest
      properties: {}
    GetMapGlyphsRequestFontUnicodeRangeString:
      type: string
      pattern: '^[0-9]+-[0-9]+\.pbf$'
    GetMapGlyphsRequest:
      type: object
      title: GetMapGlyphsRequest
      properties: {}
    GetMapSpritesRequestFileNameString:
      type: string
      pattern: ^sprites(@2x)?\.(png|json)$
    GetMapSpritesRequest:
      type: object
      title: GetMapSpritesRequest
      properties: {}
    GetMapStyleDescriptorRequest:
      type: object
      title: GetMapStyleDescriptorRequest
      properties: {}
    GetMapTileRequestXString:
      type: string
      pattern: \d+
    GetMapTileRequestYString:
      type: string
      pattern: \d+
    GetMapTileRequestZString:
      type: string
      pattern: \d+
    GetMapTileRequest:
      type: object
      title: GetMapTileRequest
      properties: {}
    LinearRing:
      type: array
      items:
        $ref: '#/components/schemas/Position'
      minItems: 4
    ListGeofenceCollectionsRequestMaxResultsInteger:
      type: integer
      minimum: 1
      maximum: 100
    ListGeofenceCollectionsRequest:
      type: object
      title: ListGeofenceCollectionsRequest
      properties:
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/ListGeofenceCollectionsRequestMaxResultsInteger'
            - description: '<p>An optional limit for the number of resources returned in a single call. </p> <p>Default value: <code>100</code> </p>'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: '<p>The pagination token specifying which page of results to return in the response. If no token is provided, the default page is the first page. </p> <p>Default value: <code>null</code> </p>'
    ListGeofenceCollectionsResponseEntryList:
      type: array
      items:
        $ref: '#/components/schemas/ListGeofenceCollectionsResponseEntry'
    ListGeofenceCollectionsResponseEntry:
      type: object
      required:
        - CollectionName
        - CreateTime
        - Description
        - PricingPlan
        - UpdateTime
      properties:
        CollectionName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: The name of the geofence collection.
        CreateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the geofence collection was created in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code> '
        Description:
          allOf:
            - $ref: '#/components/schemas/ResourceDescription'
            - description: The description for the geofence collection
        PricingPlan:
          allOf:
            - $ref: '#/components/schemas/PricingPlan'
            - description: '<p>The pricing plan for the specified geofence collection.</p> <p>For additional details and restrictions on each pricing plan option, see the <a href="https://aws.amazon.com/location/pricing/">Amazon Location Service pricing page</a>.</p>'
        PricingPlanDataSource:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The data source selected for the geofence collection and associated pricing plan.
        UpdateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'Specifies a timestamp for when the resource was last updated in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code> '
      description: Contains the geofence collection details.
    ListGeofenceResponseEntry:
      type: object
      required:
        - CreateTime
        - GeofenceId
        - Geometry
        - Status
        - UpdateTime
      properties:
        CreateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the geofence was stored in a geofence collection in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code> '
        GeofenceId:
          allOf:
            - $ref: '#/components/schemas/Id'
            - description: The geofence identifier.
        Geometry:
          allOf:
            - $ref: '#/components/schemas/GeofenceGeometry'
            - description: Contains the geofence geometry details describing a polygon.
        Status:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>Identifies the state of the geofence. A geofence will hold one of the following states:</p> <ul> <li> <p> <code>ACTIVE</code> — The geofence has been indexed by the system. </p> </li> <li> <p> <code>PENDING</code> — The geofence is being processed by the system.</p> </li> <li> <p> <code>FAILED</code> — The geofence failed to be indexed by the system.</p> </li> <li> <p> <code>DELETED</code> — The geofence has been deleted from the system index.</p> </li> <li> <p> <code>DELETING</code> — The geofence is being deleted from the system index.</p> </li> </ul>'
        UpdateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the geofence was last updated in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code> '
      description: Contains a list of geofences stored in a given geofence collection.
    ListGeofenceResponseEntryList:
      type: array
      items:
        $ref: '#/components/schemas/ListGeofenceResponseEntry'
    ListGeofencesRequest:
      type: object
      title: ListGeofencesRequest
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: '<p>The pagination token specifying which page of results to return in the response. If no token is provided, the default page is the first page. </p> <p>Default value: <code>null</code> </p>'
    ListMapsRequestMaxResultsInteger:
      type: integer
      minimum: 1
      maximum: 100
    ListMapsRequest:
      type: object
      title: ListMapsRequest
      properties:
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/ListMapsRequestMaxResultsInteger'
            - description: '<p>An optional limit for the number of resources returned in a single call. </p> <p>Default value: <code>100</code> </p>'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: '<p>The pagination token specifying which page of results to return in the response. If no token is provided, the default page is the first page.</p> <p>Default value: <code>null</code> </p>'
    ListMapsResponseEntryList:
      type: array
      items:
        $ref: '#/components/schemas/ListMapsResponseEntry'
    ListMapsResponseEntry:
      type: object
      required:
        - CreateTime
        - DataSource
        - Description
        - MapName
        - PricingPlan
        - UpdateTime
      properties:
        CreateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the map resource was created in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>.'
        DataSource:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Specifies the data provider for the associated map tiles.
        Description:
          allOf:
            - $ref: '#/components/schemas/ResourceDescription'
            - description: The description for the map resource.
        MapName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: The name of the associated map resource.
        PricingPlan:
          allOf:
            - $ref: '#/components/schemas/PricingPlan'
            - description: '<p>The pricing plan for the specified map resource.</p> <p>For additional details and restrictions on each pricing plan option, see the <a href="https://aws.amazon.com/location/pricing/">Amazon Location Service pricing page</a>.</p>'
        UpdateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the map resource was last updated in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>.'
      description: Contains details of an existing map resource in your AWS account.
    ListPlaceIndexesRequestMaxResultsInteger:
      type: integer
      minimum: 1
      maximum: 100
    ListPlaceIndexesRequest:
      type: object
      title: ListPlaceIndexesRequest
      properties:
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/ListPlaceIndexesRequestMaxResultsInteger'
            - description: '<p>An optional limit for the maximum number of results returned in a single call.</p> <p>Default value: <code>100</code> </p>'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: '<p>The pagination token specifying which page of results to return in the response. If no token is provided, the default page is the first page.</p> <p>Default value: <code>null</code> </p>'
    ListPlaceIndexesResponseEntryList:
      type: array
      items:
        $ref: '#/components/schemas/ListPlaceIndexesResponseEntry'
    ListPlaceIndexesResponseEntry:
      type: object
      required:
        - CreateTime
        - DataSource
        - Description
        - IndexName
        - PricingPlan
        - UpdateTime
      properties:
        CreateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the Place index resource was created in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. '
        DataSource:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The data provider of geospatial data. Indicates one of the available providers:</p> <ul> <li> <p>Esri</p> </li> <li> <p>HERE</p> </li> </ul> <p>For additional details on data providers, see the <a href="https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html">Amazon Location Service data providers page</a>.</p>'
        Description:
          allOf:
            - $ref: '#/components/schemas/ResourceDescription'
            - description: The optional description for the Place index resource.
        IndexName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: The name of the Place index resource.
        PricingPlan:
          allOf:
            - $ref: '#/components/schemas/PricingPlan'
            - description: '<p>The pricing plan for the specified Place index resource.</p> <p>For additional details and restrictions on each pricing plan option, see the <a href="https://aws.amazon.com/location/pricing/">Amazon Location Service pricing page</a>.</p>'
        UpdateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the Place index resource was last updated in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. '
      description: A Place index resource listed in your AWS account.
    ListTrackerConsumersRequestMaxResultsInteger:
      type: integer
      minimum: 1
      maximum: 100
    ListTrackerConsumersRequest:
      type: object
      title: ListTrackerConsumersRequest
      properties:
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/ListTrackerConsumersRequestMaxResultsInteger'
            - description: '<p>An optional limit for the number of resources returned in a single call. </p> <p>Default value: <code>100</code> </p>'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: '<p>The pagination token specifying which page of results to return in the response. If no token is provided, the default page is the first page. </p> <p>Default value: <code>null</code> </p>'
    ListTrackersRequestMaxResultsInteger:
      type: integer
      minimum: 1
      maximum: 100
    ListTrackersRequest:
      type: object
      title: ListTrackersRequest
      properties:
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/ListTrackersRequestMaxResultsInteger'
            - description: '<p>An optional limit for the number of resources returned in a single call. </p> <p>Default value: <code>100</code> </p>'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: '<p>The pagination token specifying which page of results to return in the response. If no token is provided, the default page is the first page. </p> <p>Default value: <code>null</code> </p>'
    ListTrackersResponseEntryList:
      type: array
      items:
        $ref: '#/components/schemas/ListTrackersResponseEntry'
    ListTrackersResponseEntry:
      type: object
      required:
        - CreateTime
        - Description
        - PricingPlan
        - TrackerName
        - UpdateTime
      properties:
        CreateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp for when the tracker resource was created in <a href="https://www.iso.org/iso-8601-date-and-time-format.html"> ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. '
        Description:
          allOf:
            - $ref: '#/components/schemas/ResourceDescription'
            - description: The description for the tracker resource.
        PricingPlan:
          allOf:
            - $ref: '#/components/schemas/PricingPlan'
            - description: '<p>The pricing plan for the specified tracker resource.</p> <p>For additional details and restrictions on each pricing plan option, see the <a href="https://aws.amazon.com/location/pricing/">Amazon Location Service pricing page</a>.</p>'
        PricingPlanDataSource:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The data source selected for the tracker resource and associated pricing plan.
        TrackerName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: The name of the tracker resource.
        UpdateTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the device''s position was determined. Uses <a href="https://www.iso.org/iso-8601-date-and-time-format.html"> ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. '
      description: Contains the tracker resource details.
    PlaceGeometry:
      type: object
      properties:
        Point:
          allOf:
            - $ref: '#/components/schemas/Position'
            - description: '<p>A single point geometry specifies a location for a Place using <a href="https://gisgeography.com/wgs84-world-geodetic-system/">WGS 84</a> coordinates:</p> <ul> <li> <p> <i>x</i> — Specifies the x coordinate or longitude. </p> </li> <li> <p> <i>y</i> — Specifies the y coordinate or latitude. </p> </li> </ul>'
      description: Places uses a point geometry to specify a location or a Place.
    Place:
      type: object
      required:
        - Geometry
      properties:
        AddressNumber:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The numerical portion of an address, such as a building number. '
        Country:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A country/region specified using <a href="https://www.iso.org/iso-3166-country-codes.html">ISO 3166</a> 3-digit country/region code. For example, <code>CAN</code>.'
        Geometry:
          $ref: '#/components/schemas/PlaceGeometry'
        Label:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The full name and address of the point of interest such as a city, region, or country. For example, <code>123 Any Street, Any Town, USA</code>.'
        Municipality:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A name for a local area, such as a city or town name. For example, <code>Toronto</code>.'
        Neighborhood:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The name of a community district. For example, <code>Downtown</code>.'
        PostalCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A group of numbers and letters in a country-specific format, which accompanies the address for the purpose of identifying a location. '
        Region:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A name for an area or geographical division, such as a province or state name. For example, <code>British Columbia</code>.'
        Street:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The name for a street or a road to identify a location. For example, <code>Main Street</code>.'
        SubRegion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A country, or an area that''s part of a larger region . For example, <code>Metro Vancouver</code>.'
      description: Contains details about addresses or points of interest that match the search criteria.
    PlaceIndexSearchResultLimit:
      type: integer
      minimum: 1
      maximum: 50
    PutGeofenceRequest:
      type: object
      required:
        - Geometry
      title: PutGeofenceRequest
      properties:
        Geometry:
          allOf:
            - $ref: '#/components/schemas/GeofenceGeometry'
            - description: '<p>Contains the polygon details to specify the position of the geofence.</p> <note> <p>Each <a href="https://docs.aws.amazon.com/location-geofences/latest/APIReference/API_GeofenceGeometry.html">geofence polygon</a> can have a maximum of 1,000 vertices.</p> </note>'
    SearchForPositionResult:
      type: object
      required:
        - Place
      properties:
        Place:
          allOf:
            - $ref: '#/components/schemas/Place'
            - description: Contains details about the relevant point of interest.
      description: 'Specifies a single point of interest, or Place as a result of a search query obtained from a dataset configured in the Place index Resource.'
    SearchForPositionResultList:
      type: array
      items:
        $ref: '#/components/schemas/SearchForPositionResult'
    SearchForTextResult:
      type: object
      required:
        - Place
      properties:
        Place:
          allOf:
            - $ref: '#/components/schemas/Place'
            - description: Contains details about the relevant point of interest.
      description: Contains relevant Places returned by calling <code>SearchPlaceIndexForText</code>.
    SearchForTextResultList:
      type: array
      items:
        $ref: '#/components/schemas/SearchForTextResult'
    SearchPlaceIndexForPositionRequest:
      type: object
      required:
        - Position
      title: SearchPlaceIndexForPositionRequest
      properties:
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/PlaceIndexSearchResultLimit'
            - description: '<p>An optional paramer. The maximum number of results returned per request. </p> <p>Default value: <code>50</code> </p>'
        Position:
          allOf:
            - $ref: '#/components/schemas/Position'
            - description: '<p>Specifies a coordinate for the query defined by a longitude, and latitude.</p> <ul> <li> <p>The first position is the X coordinate, or longitude.</p> </li> <li> <p>The second position is the Y coordinate, or latitude. </p> </li> </ul> <p>For example, <code>position=xLongitude&amp;position=yLatitude</code> .</p>'
    SearchPlaceIndexForPositionSummary:
      type: object
      required:
        - DataSource
        - Position
      properties:
        DataSource:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The data provider of geospatial data. Indicates one of the available providers:</p> <ul> <li> <p>Esri</p> </li> <li> <p>HERE</p> </li> </ul> <p>For additional details on data providers, see the <a href="https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html">Amazon Location Service data providers page</a>.</p>'
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/PlaceIndexSearchResultLimit'
            - description: '<p>An optional parameter. The maximum number of results returned per request. </p> <p>Default value: <code>50</code> </p>'
        Position:
          allOf:
            - $ref: '#/components/schemas/Position'
            - description: The position given in the reverse geocoding request.
      description: A summary of the reverse geocoding request sent using <code>SearchPlaceIndexForPosition</code>.
    SyntheticSearchPlaceIndexForTextRequestString:
      type: string
      minLength: 1
      maxLength: 200
      format: password
    SearchPlaceIndexForTextRequest:
      type: object
      required:
        - Text
      title: SearchPlaceIndexForTextRequest
      properties:
        BiasPosition:
          allOf:
            - $ref: '#/components/schemas/Position'
            - description: '<p>Searches for results closest to the given position. An optional parameter defined by longitude, and latitude.</p> <ul> <li> <p>The first <code>bias</code> position is the X coordinate, or longitude.</p> </li> <li> <p>The second <code>bias</code> position is the Y coordinate, or latitude. </p> </li> </ul> <p>For example, <code>bias=xLongitude&amp;bias=yLatitude</code>.</p>'
        FilterBBox:
          allOf:
            - $ref: '#/components/schemas/BoundingBox'
            - description: '<p>Filters the results by returning only Places within the provided bounding box. An optional parameter.</p> <p>The first 2 <code>bbox</code> parameters describe the lower southwest corner:</p> <ul> <li> <p>The first <code>bbox</code> position is the X coordinate or longitude of the lower southwest corner.</p> </li> <li> <p>The second <code>bbox</code> position is the Y coordinate or latitude of the lower southwest corner.</p> </li> </ul> <p>For example, <code>bbox=xLongitudeSW&amp;bbox=yLatitudeSW</code>.</p> <p>The next <code>bbox</code> parameters describe the upper northeast corner:</p> <ul> <li> <p>The third <code>bbox</code> position is the X coordinate, or longitude of the upper northeast corner.</p> </li> <li> <p>The fourth <code>bbox</code> position is the Y coordinate, or longitude of the upper northeast corner.</p> </li> </ul> <p>For example, <code>bbox=xLongitudeNE&amp;bbox=yLatitudeNE</code> </p>'
        FilterCountries:
          allOf:
            - $ref: '#/components/schemas/CountryCodeList'
            - description: '<p>Limits the search to the given a list of countries/regions. An optional parameter.</p> <ul> <li> <p>Use the <a href="https://www.iso.org/iso-3166-country-codes.html">ISO 3166</a> 3-digit country code. For example, Australia uses three upper-case characters: <code>AUS</code>.</p> </li> </ul>'
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/PlaceIndexSearchResultLimit'
            - description: '<p>An optional parameter. The maximum number of results returned per request. </p> <p>The default: <code>50</code> </p>'
        Text:
          allOf:
            - $ref: '#/components/schemas/SyntheticSearchPlaceIndexForTextRequestString'
            - description: 'The address, name, city, or region to be used in the search. In free-form text format. For example, <code>123 Any Street</code>.'
    SearchPlaceIndexForTextSummary:
      type: object
      required:
        - DataSource
        - Text
      properties:
        BiasPosition:
          allOf:
            - $ref: '#/components/schemas/Position'
            - description: Contains the coordinates for the bias position entered in the geocoding request.
        DataSource:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The data provider of geospatial data. Indicates one of the available providers:</p> <ul> <li> <p>Esri</p> </li> <li> <p>HERE</p> </li> </ul> <p>For additional details on data providers, see the <a href="https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html">Amazon Location Service data providers page</a>.</p>'
        FilterBBox:
          allOf:
            - $ref: '#/components/schemas/BoundingBox'
            - description: Contains the coordinates for the optional bounding box coordinated entered in the geocoding request.
        FilterCountries:
          allOf:
            - $ref: '#/components/schemas/CountryCodeList'
            - description: Contains the country filter entered in the geocoding request.
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/PlaceIndexSearchResultLimit'
            - description: Contains the maximum number of results indicated for the request.
        ResultBBox:
          allOf:
            - $ref: '#/components/schemas/BoundingBox'
            - description: A bounding box that contains the search results within the specified area indicated by <code>FilterBBox</code>. A subset of bounding box specified using <code>FilterBBox</code>.
        Text:
          allOf:
            - $ref: '#/components/schemas/SyntheticSearchPlaceIndexForTextSummaryString'
            - description: 'The address, name, city or region to be used in the geocoding request. In free-form text format. For example, <code>Vancouver</code>.'
      description: A summary of the geocoding request sent using <code>SearchPlaceIndexForText</code>.
    SyntheticSearchPlaceIndexForTextSummaryString:
      type: string
      format: password
security:
  - hmac: []
