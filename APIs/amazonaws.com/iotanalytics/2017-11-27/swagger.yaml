swagger: '2.0'
schemes:
  - https
  - http
host: iotanalytics.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: '<p>AWS IoT Analytics allows you to collect large amounts of device data, process messages, and store them. You can then query the data and run sophisticated analytics on it. AWS IoT Analytics enables advanced data exploration through integration with Jupyter Notebooks and data visualization through integration with Amazon QuickSight.</p> <p>Traditional analytics and business intelligence tools are designed to process structured data. IoT data often comes from devices that record noisy processes (such as temperature, motion, or sound). As a result the data from these devices can have significant gaps, corrupted messages, and false readings that must be cleaned up before analysis can occur. Also, IoT data is often only meaningful in the context of other data from external sources. </p> <p>AWS IoT Analytics automates the steps required to analyze data from IoT devices. AWS IoT Analytics filters, transforms, and enriches IoT data before storing it in a time-series data store for analysis. You can set up the service to collect only the data you need from your devices, apply mathematical transforms to process the data, and enrich the data with device-specific metadata such as device type and location before storing it. Then, you can analyze your data by running queries using the built-in SQL query engine, or perform more complex analytics and machine learning inference. AWS IoT Analytics includes pre-built models for common IoT use cases so you can answer questions like which devices are about to fail or which customers are at risk of abandoning their wearable devices.</p>'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS IoT Analytics
  version: '2017-11-27'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iotanalytics-2017-11-27.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: iotanalytics
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/iotanalytics/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /channels:
    get:
      description: Retrieves a list of channels.
      operationId: ListChannels
      parameters:
        - description: The token for the next set of results.
          in: query
          name: nextToken
          required: false
          type: string
        - description: <p>The maximum number of results to return in this request.</p> <p>The default value is 100.</p>
          in: query
          maximum: 250
          minimum: 1
          name: maxResults
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListChannelsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Creates a channel. A channel collects data from an MQTT topic and archives the raw, unprocessed messages before publishing the data to a pipeline.'
      operationId: CreateChannel
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              channelName:
                description: The name of the channel.
                maxLength: 128
                minLength: 1
                pattern: '^[a-zA-Z0-9_]+$'
                type: string
              channelStorage:
                description: Where channel data is stored.
                properties:
                  customerManagedS3:
                    $ref: '#/definitions/CustomerManagedChannelS3Storage'
                    description: Use this to store channel data in an S3 bucket that you manage.
                  serviceManagedS3:
                    $ref: '#/definitions/ServiceManagedChannelS3Storage'
                    description: Use this to store channel data in an S3 bucket managed by the AWS IoT Analytics service.
                type: object
              retentionPeriod:
                description: 'How long, in days, message data is kept.'
                properties:
                  numberOfDays:
                    $ref: '#/definitions/RetentionPeriodInDays'
                    description: The number of days that message data is kept. The "unlimited" parameter must be false.
                  unlimited:
                    $ref: '#/definitions/UnlimitedRetentionPeriod'
                    description: 'If true, message data is kept indefinitely.'
                type: object
              tags:
                description: Metadata which can be used to manage the channel.
                items:
                  $ref: '#/definitions/Tag'
                maxItems: 50
                minItems: 1
                type: array
            required:
              - channelName
            type: object
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateChannelResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  '/channels/{channelName}':
    delete:
      description: Deletes the specified channel.
      operationId: DeleteChannel
      parameters:
        - description: The name of the channel to delete.
          in: path
          maxLength: 128
          minLength: 1
          name: channelName
          pattern: '^[a-zA-Z0-9_]+$'
          required: true
          type: string
      responses:
        '204':
          description: Success
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    get:
      description: Retrieves information about a channel.
      operationId: DescribeChannel
      parameters:
        - description: The name of the channel whose information is retrieved.
          in: path
          maxLength: 128
          minLength: 1
          name: channelName
          pattern: '^[a-zA-Z0-9_]+$'
          required: true
          type: string
        - description: 'If true, additional statistical information about the channel is included in the response.'
          in: query
          name: includeStatistics
          required: false
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeChannelResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Updates the settings of a channel.
      operationId: UpdateChannel
      parameters:
        - description: The name of the channel to be updated.
          in: path
          maxLength: 128
          minLength: 1
          name: channelName
          pattern: '^[a-zA-Z0-9_]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              channelStorage:
                description: Where channel data is stored.
                properties:
                  customerManagedS3:
                    $ref: '#/definitions/CustomerManagedChannelS3Storage'
                    description: Use this to store channel data in an S3 bucket that you manage.
                  serviceManagedS3:
                    $ref: '#/definitions/ServiceManagedChannelS3Storage'
                    description: Use this to store channel data in an S3 bucket managed by the AWS IoT Analytics service.
                type: object
              retentionPeriod:
                description: 'How long, in days, message data is kept.'
                properties:
                  numberOfDays:
                    $ref: '#/definitions/RetentionPeriodInDays'
                    description: The number of days that message data is kept. The "unlimited" parameter must be false.
                  unlimited:
                    $ref: '#/definitions/UnlimitedRetentionPeriod'
                    description: 'If true, message data is kept indefinitely.'
                type: object
            type: object
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  '/channels/{channelName}/sample':
    get:
      description: Retrieves a sample of messages from the specified channel ingested during the specified timeframe. Up to 10 messages can be retrieved.
      operationId: SampleChannelData
      parameters:
        - description: The name of the channel whose message samples are retrieved.
          in: path
          maxLength: 128
          minLength: 1
          name: channelName
          pattern: '^[a-zA-Z0-9_]+$'
          required: true
          type: string
        - description: 'The number of sample messages to be retrieved. The limit is 10, the default is also 10.'
          in: query
          maximum: 10
          minimum: 1
          name: maxMessages
          required: false
          type: integer
        - description: The start of the time window from which sample messages are retrieved.
          format: date-time
          in: query
          name: startTime
          required: false
          type: string
        - description: The end of the time window from which sample messages are retrieved.
          format: date-time
          in: query
          name: endTime
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SampleChannelDataResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /datasets:
    get:
      description: Retrieves information about data sets.
      operationId: ListDatasets
      parameters:
        - description: The token for the next set of results.
          in: query
          name: nextToken
          required: false
          type: string
        - description: <p>The maximum number of results to return in this request.</p> <p>The default value is 100.</p>
          in: query
          maximum: 250
          minimum: 1
          name: maxResults
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDatasetsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a data set. A data set stores data retrieved from a data store by applying a "queryAction" (a SQL query) or a "containerAction" (executing a containerized application). This operation creates the skeleton of a data set. The data set can be populated manually by calling "CreateDatasetContent" or automatically according to a "trigger" you specify.
      operationId: CreateDataset
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              actions:
                description: A list of actions that create the data set contents.
                items:
                  $ref: '#/definitions/DatasetAction'
                maxItems: 1
                minItems: 1
                type: array
              contentDeliveryRules:
                description: When data set contents are created they are delivered to destinations specified here.
                items:
                  $ref: '#/definitions/DatasetContentDeliveryRule'
                maxItems: 20
                minItems: 0
                type: array
              datasetName:
                description: The name of the data set.
                maxLength: 128
                minLength: 1
                pattern: '^[a-zA-Z0-9_]+$'
                type: string
              retentionPeriod:
                description: 'How long, in days, message data is kept.'
                properties:
                  numberOfDays:
                    $ref: '#/definitions/RetentionPeriodInDays'
                    description: The number of days that message data is kept. The "unlimited" parameter must be false.
                  unlimited:
                    $ref: '#/definitions/UnlimitedRetentionPeriod'
                    description: 'If true, message data is kept indefinitely.'
                type: object
              tags:
                description: Metadata which can be used to manage the data set.
                items:
                  $ref: '#/definitions/Tag'
                maxItems: 50
                minItems: 1
                type: array
              triggers:
                description: A list of triggers. A trigger causes data set contents to be populated at a specified time interval or when another data set's contents are created. The list of triggers can be empty or contain up to five <b>DataSetTrigger</b> objects.
                items:
                  $ref: '#/definitions/DatasetTrigger'
                maxItems: 5
                minItems: 0
                type: array
              versioningConfiguration:
                description: Information about the versioning of data set contents.
                properties:
                  maxVersions:
                    $ref: '#/definitions/MaxVersions'
                    description: How many versions of data set contents will be kept. The "unlimited" parameter must be false.
                  unlimited:
                    $ref: '#/definitions/UnlimitedVersioning'
                    description: 'If true, unlimited versions of data set contents will be kept.'
                type: object
            required:
              - datasetName
              - actions
            type: object
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateDatasetResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  '/datasets/{datasetName}':
    delete:
      description: <p>Deletes the specified data set.</p> <p>You do not have to delete the content of the data set before you perform this operation.</p>
      operationId: DeleteDataset
      parameters:
        - description: The name of the data set to delete.
          in: path
          maxLength: 128
          minLength: 1
          name: datasetName
          pattern: '^[a-zA-Z0-9_]+$'
          required: true
          type: string
      responses:
        '204':
          description: Success
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    get:
      description: Retrieves information about a data set.
      operationId: DescribeDataset
      parameters:
        - description: The name of the data set whose information is retrieved.
          in: path
          maxLength: 128
          minLength: 1
          name: datasetName
          pattern: '^[a-zA-Z0-9_]+$'
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDatasetResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Updates the settings of a data set.
      operationId: UpdateDataset
      parameters:
        - description: The name of the data set to update.
          in: path
          maxLength: 128
          minLength: 1
          name: datasetName
          pattern: '^[a-zA-Z0-9_]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              actions:
                description: A list of "DatasetAction" objects.
                items:
                  $ref: '#/definitions/DatasetAction'
                maxItems: 1
                minItems: 1
                type: array
              contentDeliveryRules:
                description: When data set contents are created they are delivered to destinations specified here.
                items:
                  $ref: '#/definitions/DatasetContentDeliveryRule'
                maxItems: 20
                minItems: 0
                type: array
              retentionPeriod:
                description: 'How long, in days, message data is kept.'
                properties:
                  numberOfDays:
                    $ref: '#/definitions/RetentionPeriodInDays'
                    description: The number of days that message data is kept. The "unlimited" parameter must be false.
                  unlimited:
                    $ref: '#/definitions/UnlimitedRetentionPeriod'
                    description: 'If true, message data is kept indefinitely.'
                type: object
              triggers:
                description: A list of "DatasetTrigger" objects. The list can be empty or can contain up to five <b>DataSetTrigger</b> objects.
                items:
                  $ref: '#/definitions/DatasetTrigger'
                maxItems: 5
                minItems: 0
                type: array
              versioningConfiguration:
                description: Information about the versioning of data set contents.
                properties:
                  maxVersions:
                    $ref: '#/definitions/MaxVersions'
                    description: How many versions of data set contents will be kept. The "unlimited" parameter must be false.
                  unlimited:
                    $ref: '#/definitions/UnlimitedVersioning'
                    description: 'If true, unlimited versions of data set contents will be kept.'
                type: object
            required:
              - actions
            type: object
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  '/datasets/{datasetName}/content':
    delete:
      description: Deletes the content of the specified data set.
      operationId: DeleteDatasetContent
      parameters:
        - description: The name of the data set whose content is deleted.
          in: path
          maxLength: 128
          minLength: 1
          name: datasetName
          pattern: '^[a-zA-Z0-9_]+$'
          required: true
          type: string
        - description: 'The version of the data set whose content is deleted. You can also use the strings "$LATEST" or "$LATEST_SUCCEEDED" to delete the latest or latest successfully completed data set. If not specified, "$LATEST_SUCCEEDED" is the default.'
          in: query
          maxLength: 36
          minLength: 7
          name: versionId
          required: false
          type: string
      responses:
        '204':
          description: Success
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    get:
      description: Retrieves the contents of a data set as pre-signed URIs.
      operationId: GetDatasetContent
      parameters:
        - description: The name of the data set whose contents are retrieved.
          in: path
          maxLength: 128
          minLength: 1
          name: datasetName
          pattern: '^[a-zA-Z0-9_]+$'
          required: true
          type: string
        - description: 'The version of the data set whose contents are retrieved. You can also use the strings "$LATEST" or "$LATEST_SUCCEEDED" to retrieve the contents of the latest or latest successfully completed data set. If not specified, "$LATEST_SUCCEEDED" is the default.'
          in: query
          maxLength: 36
          minLength: 7
          name: versionId
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDatasetContentResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates the content of a data set by applying a "queryAction" (a SQL query) or a "containerAction" (executing a containerized application).
      operationId: CreateDatasetContent
      parameters:
        - description: The name of the data set.
          in: path
          maxLength: 128
          minLength: 1
          name: datasetName
          pattern: '^[a-zA-Z0-9_]+$'
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDatasetContentResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  '/datasets/{datasetName}/contents':
    get:
      description: Lists information about data set contents that have been created.
      operationId: ListDatasetContents
      parameters:
        - description: The name of the data set whose contents information you want to list.
          in: path
          maxLength: 128
          minLength: 1
          name: datasetName
          pattern: '^[a-zA-Z0-9_]+$'
          required: true
          type: string
        - description: The token for the next set of results.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of results to return in this request.
          in: query
          maximum: 250
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: A filter to limit results to those data set contents whose creation is scheduled on or after the given time. See the field <code>triggers.schedule</code> in the CreateDataset request. (timestamp)
          format: date-time
          in: query
          name: scheduledOnOrAfter
          required: false
          type: string
        - description: A filter to limit results to those data set contents whose creation is scheduled before the given time. See the field <code>triggers.schedule</code> in the CreateDataset request. (timestamp)
          format: date-time
          in: query
          name: scheduledBefore
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDatasetContentsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /datastores:
    get:
      description: Retrieves a list of data stores.
      operationId: ListDatastores
      parameters:
        - description: The token for the next set of results.
          in: query
          name: nextToken
          required: false
          type: string
        - description: <p>The maximum number of results to return in this request.</p> <p>The default value is 100.</p>
          in: query
          maximum: 250
          minimum: 1
          name: maxResults
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDatastoresResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Creates a data store, which is a repository for messages.'
      operationId: CreateDatastore
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              datastoreName:
                description: The name of the data store.
                maxLength: 128
                minLength: 1
                pattern: '^[a-zA-Z0-9_]+$'
                type: string
              datastoreStorage:
                description: Where data store data is stored.
                properties:
                  customerManagedS3:
                    $ref: '#/definitions/CustomerManagedDatastoreS3Storage'
                    description: Use this to store data store data in an S3 bucket that you manage.
                  serviceManagedS3:
                    $ref: '#/definitions/ServiceManagedDatastoreS3Storage'
                    description: Use this to store data store data in an S3 bucket managed by the AWS IoT Analytics service.
                type: object
              retentionPeriod:
                description: 'How long, in days, message data is kept.'
                properties:
                  numberOfDays:
                    $ref: '#/definitions/RetentionPeriodInDays'
                    description: The number of days that message data is kept. The "unlimited" parameter must be false.
                  unlimited:
                    $ref: '#/definitions/UnlimitedRetentionPeriod'
                    description: 'If true, message data is kept indefinitely.'
                type: object
              tags:
                description: Metadata which can be used to manage the data store.
                items:
                  $ref: '#/definitions/Tag'
                maxItems: 50
                minItems: 1
                type: array
            required:
              - datastoreName
            type: object
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateDatastoreResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  '/datastores/{datastoreName}':
    delete:
      description: Deletes the specified data store.
      operationId: DeleteDatastore
      parameters:
        - description: The name of the data store to delete.
          in: path
          maxLength: 128
          minLength: 1
          name: datastoreName
          pattern: '^[a-zA-Z0-9_]+$'
          required: true
          type: string
      responses:
        '204':
          description: Success
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    get:
      description: Retrieves information about a data store.
      operationId: DescribeDatastore
      parameters:
        - description: The name of the data store
          in: path
          maxLength: 128
          minLength: 1
          name: datastoreName
          pattern: '^[a-zA-Z0-9_]+$'
          required: true
          type: string
        - description: 'If true, additional statistical information about the datastore is included in the response.'
          in: query
          name: includeStatistics
          required: false
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDatastoreResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Updates the settings of a data store.
      operationId: UpdateDatastore
      parameters:
        - description: The name of the data store to be updated.
          in: path
          maxLength: 128
          minLength: 1
          name: datastoreName
          pattern: '^[a-zA-Z0-9_]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              datastoreStorage:
                description: Where data store data is stored.
                properties:
                  customerManagedS3:
                    $ref: '#/definitions/CustomerManagedDatastoreS3Storage'
                    description: Use this to store data store data in an S3 bucket that you manage.
                  serviceManagedS3:
                    $ref: '#/definitions/ServiceManagedDatastoreS3Storage'
                    description: Use this to store data store data in an S3 bucket managed by the AWS IoT Analytics service.
                type: object
              retentionPeriod:
                description: 'How long, in days, message data is kept.'
                properties:
                  numberOfDays:
                    $ref: '#/definitions/RetentionPeriodInDays'
                    description: The number of days that message data is kept. The "unlimited" parameter must be false.
                  unlimited:
                    $ref: '#/definitions/UnlimitedRetentionPeriod'
                    description: 'If true, message data is kept indefinitely.'
                type: object
            type: object
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /logging:
    get:
      description: Retrieves the current settings of the AWS IoT Analytics logging options.
      operationId: DescribeLoggingOptions
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeLoggingOptionsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: '<p>Sets or updates the AWS IoT Analytics logging options.</p> <p>Note that if you update the value of any <code>loggingOptions</code> field, it takes up to one minute for the change to take effect. Also, if you change the policy attached to the role you specified in the roleArn field (for example, to correct an invalid policy) it takes up to 5 minutes for that change to take effect. </p>'
      operationId: PutLoggingOptions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              loggingOptions:
                description: Information about logging options.
                properties:
                  enabled:
                    $ref: '#/definitions/LoggingEnabled'
                    description: 'If true, logging is enabled for AWS IoT Analytics.'
                  level:
                    $ref: '#/definitions/LoggingLevel'
                    description: 'The logging level. Currently, only "ERROR" is supported.'
                  roleArn:
                    $ref: '#/definitions/RoleArn'
                    description: The ARN of the role that grants permission to AWS IoT Analytics to perform logging.
                type: object
            required:
              - loggingOptions
            type: object
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /messages/batch:
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Sends messages to a channel.
      operationId: BatchPutMessage
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              channelName:
                description: The name of the channel where the messages are sent.
                maxLength: 128
                minLength: 1
                pattern: '^[a-zA-Z0-9_]+$'
                type: string
              messages:
                description: '<p>The list of messages to be sent. Each message has format: ''{ "messageId": "string", "payload": "string"}''.</p> <p>Note that the field names of message payloads (data) that you send to AWS IoT Analytics:</p> <ul> <li> <p>Must contain only alphanumeric characters and undescores (_); no other special characters are allowed.</p> </li> <li> <p>Must begin with an alphabetic character or single underscore (_).</p> </li> <li> <p>Cannot contain hyphens (-).</p> </li> <li> <p>In regular expression terms: "^[A-Za-z_]([A-Za-z0-9]*|[A-Za-z0-9][A-Za-z0-9_]*)$". </p> </li> <li> <p>Cannot be greater than 255 characters.</p> </li> <li> <p>Are case-insensitive. (Fields named "foo" and "FOO" in the same payload are considered duplicates.)</p> </li> </ul> <p>For example, {"temp_01": 29} or {"_temp_01": 29} are valid, but {"temp-01": 29}, {"01_temp": 29} or {"__temp_01": 29} are invalid in message payloads. </p>'
                items:
                  $ref: '#/definitions/Message'
                type: array
            required:
              - channelName
              - messages
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchPutMessageResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /pipelineactivities/run:
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Simulates the results of running a pipeline activity on a message payload.
      operationId: RunPipelineActivity
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              payloads:
                description: The sample message payloads on which the pipeline activity is run.
                items:
                  $ref: '#/definitions/MessagePayload'
                maxItems: 10
                minItems: 1
                type: array
              pipelineActivity:
                description: An activity that performs a transformation on a message.
                properties:
                  addAttributes:
                    $ref: '#/definitions/AddAttributesActivity'
                    description: Adds other attributes based on existing attributes in the message.
                  channel:
                    $ref: '#/definitions/ChannelActivity'
                    description: Determines the source of the messages to be processed.
                  datastore:
                    $ref: '#/definitions/DatastoreActivity'
                    description: Specifies where to store the processed message data.
                  deviceRegistryEnrich:
                    $ref: '#/definitions/DeviceRegistryEnrichActivity'
                    description: Adds data from the AWS IoT device registry to your message.
                  deviceShadowEnrich:
                    $ref: '#/definitions/DeviceShadowEnrichActivity'
                    description: Adds information from the AWS IoT Device Shadows service to a message.
                  filter:
                    $ref: '#/definitions/FilterActivity'
                    description: Filters a message based on its attributes.
                  lambda:
                    $ref: '#/definitions/LambdaActivity'
                    description: Runs a Lambda function to modify the message.
                  math:
                    $ref: '#/definitions/MathActivity'
                    description: Computes an arithmetic expression using the message's attributes and adds it to the message.
                  removeAttributes:
                    $ref: '#/definitions/RemoveAttributesActivity'
                    description: Removes attributes from a message.
                  selectAttributes:
                    $ref: '#/definitions/SelectAttributesActivity'
                    description: 'Creates a new message using only the specified attributes from the original message. '
                type: object
            required:
              - pipelineActivity
              - payloads
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RunPipelineActivityResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  /pipelines:
    get:
      description: Retrieves a list of pipelines.
      operationId: ListPipelines
      parameters:
        - description: The token for the next set of results.
          in: query
          name: nextToken
          required: false
          type: string
        - description: <p>The maximum number of results to return in this request.</p> <p>The default value is 100.</p>
          in: query
          maximum: 250
          minimum: 1
          name: maxResults
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPipelinesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Creates a pipeline. A pipeline consumes messages from one or more channels and allows you to process the messages before storing them in a data store. You must specify both a <code>channel</code> and a <code>datastore</code> activity and, optionally, as many as 23 additional activities in the <code>pipelineActivities</code> array.'
      operationId: CreatePipeline
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              pipelineActivities:
                description: '<p>A list of "PipelineActivity" objects. Activities perform transformations on your messages, such as removing, renaming or adding message attributes; filtering messages based on attribute values; invoking your Lambda functions on messages for advanced processing; or performing mathematical transformations to normalize device data.</p> <p>The list can be 2-25 <b>PipelineActivity</b> objects and must contain both a <code>channel</code> and a <code>datastore</code> activity. Each entry in the list must contain only one activity, for example:</p> <p> <code>pipelineActivities = [ { "channel": { ... } }, { "lambda": { ... } }, ... ]</code> </p>'
                items:
                  $ref: '#/definitions/PipelineActivity'
                maxItems: 25
                minItems: 1
                type: array
              pipelineName:
                description: The name of the pipeline.
                maxLength: 128
                minLength: 1
                pattern: '^[a-zA-Z0-9_]+$'
                type: string
              tags:
                description: Metadata which can be used to manage the pipeline.
                items:
                  $ref: '#/definitions/Tag'
                maxItems: 50
                minItems: 1
                type: array
            required:
              - pipelineName
              - pipelineActivities
            type: object
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreatePipelineResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  '/pipelines/{pipelineName}':
    delete:
      description: Deletes the specified pipeline.
      operationId: DeletePipeline
      parameters:
        - description: The name of the pipeline to delete.
          in: path
          maxLength: 128
          minLength: 1
          name: pipelineName
          pattern: '^[a-zA-Z0-9_]+$'
          required: true
          type: string
      responses:
        '204':
          description: Success
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    get:
      description: Retrieves information about a pipeline.
      operationId: DescribePipeline
      parameters:
        - description: The name of the pipeline whose information is retrieved.
          in: path
          maxLength: 128
          minLength: 1
          name: pipelineName
          pattern: '^[a-zA-Z0-9_]+$'
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribePipelineResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: 'Updates the settings of a pipeline. You must specify both a <code>channel</code> and a <code>datastore</code> activity and, optionally, as many as 23 additional activities in the <code>pipelineActivities</code> array.'
      operationId: UpdatePipeline
      parameters:
        - description: The name of the pipeline to update.
          in: path
          maxLength: 128
          minLength: 1
          name: pipelineName
          pattern: '^[a-zA-Z0-9_]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              pipelineActivities:
                description: '<p>A list of "PipelineActivity" objects. Activities perform transformations on your messages, such as removing, renaming or adding message attributes; filtering messages based on attribute values; invoking your Lambda functions on messages for advanced processing; or performing mathematical transformations to normalize device data.</p> <p>The list can be 2-25 <b>PipelineActivity</b> objects and must contain both a <code>channel</code> and a <code>datastore</code> activity. Each entry in the list must contain only one activity, for example:</p> <p> <code>pipelineActivities = [ { "channel": { ... } }, { "lambda": { ... } }, ... ]</code> </p>'
                items:
                  $ref: '#/definitions/PipelineActivity'
                maxItems: 25
                minItems: 1
                type: array
            required:
              - pipelineActivities
            type: object
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  '/pipelines/{pipelineName}/reprocessing':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Starts the reprocessing of raw message data through the pipeline.
      operationId: StartPipelineReprocessing
      parameters:
        - description: The name of the pipeline on which to start reprocessing.
          in: path
          maxLength: 128
          minLength: 1
          name: pipelineName
          pattern: '^[a-zA-Z0-9_]+$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              endTime:
                description: The end time (exclusive) of raw message data that is reprocessed.
                format: date-time
                type: string
              startTime:
                description: The start time (inclusive) of raw message data that is reprocessed.
                format: date-time
                type: string
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartPipelineReprocessingResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  '/pipelines/{pipelineName}/reprocessing/{reprocessingId}':
    delete:
      description: Cancels the reprocessing of data through the pipeline.
      operationId: CancelPipelineReprocessing
      parameters:
        - description: The name of pipeline for which data reprocessing is canceled.
          in: path
          maxLength: 128
          minLength: 1
          name: pipelineName
          pattern: '^[a-zA-Z0-9_]+$'
          required: true
          type: string
        - description: The ID of the reprocessing task (returned by "StartPipelineReprocessing").
          in: path
          name: reprocessingId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelPipelineReprocessingResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/tags#resourceArn':
    get:
      description: Lists the tags (metadata) which you have assigned to the resource.
      operationId: ListTagsForResource
      parameters:
        - description: The ARN of the resource whose tags you want to list.
          in: query
          maxLength: 2048
          minLength: 20
          name: resourceArn
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Adds to or modifies the tags of the given resource. Tags are metadata which can be used to manage a resource.
      operationId: TagResource
      parameters:
        - description: The ARN of the resource whose tags you want to modify.
          in: query
          maxLength: 2048
          minLength: 20
          name: resourceArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              tags:
                description: The new or modified tags for the resource.
                items:
                  $ref: '#/definitions/Tag'
                maxItems: 50
                minItems: 1
                type: array
            required:
              - tags
            type: object
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/tags#resourceArn&tagKeys':
    delete:
      description: Removes the given tags (metadata) from the resource.
      operationId: UntagResource
      parameters:
        - description: The ARN of the resource whose tags you want to remove.
          in: query
          maxLength: 2048
          minLength: 20
          name: resourceArn
          required: true
          type: string
        - description: The keys of those tags which you want to remove.
          in: query
          items:
            type: string
          name: tagKeys
          required: true
          type: array
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  ActivityBatchSize:
    maximum: 1000
    minimum: 1
    type: integer
  ActivityName:
    maxLength: 128
    minLength: 1
    type: string
  AddAttributesActivity:
    description: An activity that adds other attributes based on existing attributes in the message.
    properties:
      attributes:
        $ref: '#/definitions/AttributeNameMapping'
        description: '<p>A list of 1-50 "AttributeNameMapping" objects that map an existing attribute to a new attribute.</p> <note> <p>The existing attributes remain in the message, so if you want to remove the originals, use "RemoveAttributeActivity".</p> </note>'
      name:
        $ref: '#/definitions/ActivityName'
        description: The name of the 'addAttributes' activity.
      next:
        $ref: '#/definitions/ActivityName'
        description: The next activity in the pipeline.
    required:
      - name
      - attributes
    type: object
  AttributeName:
    maxLength: 256
    minLength: 1
    type: string
  AttributeNameMapping:
    additionalProperties:
      $ref: '#/definitions/AttributeName'
    maxProperties: 50
    minProperties: 1
    type: object
  AttributeNames:
    items:
      $ref: '#/definitions/AttributeName'
    maxItems: 50
    minItems: 1
    type: array
  BatchPutMessageErrorEntries:
    items:
      $ref: '#/definitions/BatchPutMessageErrorEntry'
    type: array
  BatchPutMessageErrorEntry:
    description: Contains informations about errors.
    properties:
      errorCode:
        $ref: '#/definitions/ErrorCode'
        description: The code associated with the error.
      errorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: The message associated with the error.
      messageId:
        $ref: '#/definitions/MessageId'
        description: The ID of the message that caused the error. (See the value corresponding to the "messageId" key in the message object.)
    type: object
  BatchPutMessageRequest:
    properties:
      channelName:
        $ref: '#/definitions/ChannelName'
        description: The name of the channel where the messages are sent.
      messages:
        $ref: '#/definitions/Messages'
        description: '<p>The list of messages to be sent. Each message has format: ''{ "messageId": "string", "payload": "string"}''.</p> <p>Note that the field names of message payloads (data) that you send to AWS IoT Analytics:</p> <ul> <li> <p>Must contain only alphanumeric characters and undescores (_); no other special characters are allowed.</p> </li> <li> <p>Must begin with an alphabetic character or single underscore (_).</p> </li> <li> <p>Cannot contain hyphens (-).</p> </li> <li> <p>In regular expression terms: "^[A-Za-z_]([A-Za-z0-9]*|[A-Za-z0-9][A-Za-z0-9_]*)$". </p> </li> <li> <p>Cannot be greater than 255 characters.</p> </li> <li> <p>Are case-insensitive. (Fields named "foo" and "FOO" in the same payload are considered duplicates.)</p> </li> </ul> <p>For example, {"temp_01": 29} or {"_temp_01": 29} are valid, but {"temp-01": 29}, {"01_temp": 29} or {"__temp_01": 29} are invalid in message payloads. </p>'
    required:
      - channelName
      - messages
    type: object
  BatchPutMessageResponse:
    properties:
      batchPutMessageErrorEntries:
        $ref: '#/definitions/BatchPutMessageErrorEntries'
        description: A list of any errors encountered when sending the messages to the channel.
    type: object
  BucketKeyExpression:
    maxLength: 255
    minLength: 1
    pattern: '^[a-zA-Z0-9!_.*''()/{}:-]*$'
    type: string
  BucketName:
    maxLength: 255
    minLength: 3
    pattern: '^[a-zA-Z0-9.\-_]*$'
    type: string
  CancelPipelineReprocessingRequest:
    properties: {}
    type: object
  CancelPipelineReprocessingResponse:
    properties: {}
    type: object
  Channel:
    description: 'A collection of data from an MQTT topic. Channels archive the raw, unprocessed messages before publishing the data to a pipeline.'
    properties:
      arn:
        $ref: '#/definitions/ChannelArn'
        description: The ARN of the channel.
      creationTime:
        $ref: '#/definitions/Timestamp'
        description: When the channel was created.
      lastUpdateTime:
        $ref: '#/definitions/Timestamp'
        description: When the channel was last updated.
      name:
        $ref: '#/definitions/ChannelName'
        description: The name of the channel.
      retentionPeriod:
        $ref: '#/definitions/RetentionPeriod'
        description: 'How long, in days, message data is kept for the channel.'
      status:
        $ref: '#/definitions/ChannelStatus'
        description: The status of the channel.
      storage:
        $ref: '#/definitions/ChannelStorage'
        description: Where channel data is stored.
    type: object
  ChannelActivity:
    description: The activity that determines the source of the messages to be processed.
    properties:
      channelName:
        $ref: '#/definitions/ChannelName'
        description: The name of the channel from which the messages are processed.
      name:
        $ref: '#/definitions/ActivityName'
        description: The name of the 'channel' activity.
      next:
        $ref: '#/definitions/ActivityName'
        description: The next activity in the pipeline.
    required:
      - name
      - channelName
    type: object
  ChannelArn:
    type: string
  ChannelName:
    maxLength: 128
    minLength: 1
    pattern: '^[a-zA-Z0-9_]+$'
    type: string
  ChannelStatistics:
    description: Statistics information about the channel.
    properties:
      size:
        $ref: '#/definitions/EstimatedResourceSize'
        description: The estimated size of the channel.
    type: object
  ChannelStatus:
    enum:
      - CREATING
      - ACTIVE
      - DELETING
    type: string
  ChannelStorage:
    description: Where channel data is stored.
    properties:
      customerManagedS3:
        $ref: '#/definitions/CustomerManagedChannelS3Storage'
        description: Use this to store channel data in an S3 bucket that you manage.
      serviceManagedS3:
        $ref: '#/definitions/ServiceManagedChannelS3Storage'
        description: Use this to store channel data in an S3 bucket managed by the AWS IoT Analytics service.
    type: object
  ChannelStorageSummary:
    description: Where channel data is stored.
    properties:
      customerManagedS3:
        $ref: '#/definitions/CustomerManagedChannelS3StorageSummary'
        description: Used to store channel data in an S3 bucket that you manage.
      serviceManagedS3:
        $ref: '#/definitions/ServiceManagedChannelS3StorageSummary'
        description: Used to store channel data in an S3 bucket managed by the AWS IoT Analytics service.
    type: object
  ChannelSummaries:
    items:
      $ref: '#/definitions/ChannelSummary'
    type: array
  ChannelSummary:
    description: A summary of information about a channel.
    properties:
      channelName:
        $ref: '#/definitions/ChannelName'
        description: The name of the channel.
      channelStorage:
        $ref: '#/definitions/ChannelStorageSummary'
        description: Where channel data is stored.
      creationTime:
        $ref: '#/definitions/Timestamp'
        description: When the channel was created.
      lastUpdateTime:
        $ref: '#/definitions/Timestamp'
        description: The last time the channel was updated.
      status:
        $ref: '#/definitions/ChannelStatus'
        description: The status of the channel.
    type: object
  ComputeType:
    enum:
      - ACU_1
      - ACU_2
    type: string
  ContainerDatasetAction:
    description: Information needed to run the "containerAction" to produce data set contents.
    properties:
      executionRoleArn:
        $ref: '#/definitions/RoleArn'
        description: 'The ARN of the role which gives permission to the system to access needed resources in order to run the "containerAction". This includes, at minimum, permission to retrieve the data set contents which are the input to the containerized application.'
      image:
        $ref: '#/definitions/Image'
        description: The ARN of the Docker container stored in your account. The Docker container contains an application and needed support libraries and is used to generate data set contents.
      resourceConfiguration:
        $ref: '#/definitions/ResourceConfiguration'
        description: Configuration of the resource which executes the "containerAction".
      variables:
        $ref: '#/definitions/Variables'
        description: 'The values of variables used within the context of the execution of the containerized application (basically, parameters passed to the application). Each variable must have a name and a value given by one of "stringValue", "datasetContentVersionValue", or "outputFileUriValue".'
    required:
      - image
      - executionRoleArn
      - resourceConfiguration
    type: object
  CreateChannelRequest:
    properties:
      channelName:
        $ref: '#/definitions/ChannelName'
        description: The name of the channel.
      channelStorage:
        $ref: '#/definitions/ChannelStorage'
        description: Where channel data is stored.
      retentionPeriod:
        $ref: '#/definitions/RetentionPeriod'
        description: 'How long, in days, message data is kept for the channel.'
      tags:
        $ref: '#/definitions/TagList'
        description: Metadata which can be used to manage the channel.
    required:
      - channelName
    type: object
  CreateChannelResponse:
    properties:
      channelArn:
        $ref: '#/definitions/ChannelArn'
        description: The ARN of the channel.
      channelName:
        $ref: '#/definitions/ChannelName'
        description: The name of the channel.
      retentionPeriod:
        $ref: '#/definitions/RetentionPeriod'
        description: 'How long, in days, message data is kept for the channel.'
    type: object
  CreateDatasetContentRequest:
    properties: {}
    type: object
  CreateDatasetContentResponse:
    properties:
      versionId:
        $ref: '#/definitions/DatasetContentVersion'
        description: The version ID of the data set contents which are being created.
    type: object
  CreateDatasetRequest:
    properties:
      actions:
        $ref: '#/definitions/DatasetActions'
        description: A list of actions that create the data set contents.
      contentDeliveryRules:
        $ref: '#/definitions/DatasetContentDeliveryRules'
        description: When data set contents are created they are delivered to destinations specified here.
      datasetName:
        $ref: '#/definitions/DatasetName'
        description: The name of the data set.
      retentionPeriod:
        $ref: '#/definitions/RetentionPeriod'
        description: '[Optional] How long, in days, versions of data set contents are kept for the data set. If not specified or set to null, versions of data set contents are retained for at most 90 days. The number of versions of data set contents retained is determined by the <code>versioningConfiguration</code> parameter. (For more information, see https://docs.aws.amazon.com/iotanalytics/latest/userguide/getting-started.html#aws-iot-analytics-dataset-versions)'
      tags:
        $ref: '#/definitions/TagList'
        description: Metadata which can be used to manage the data set.
      triggers:
        $ref: '#/definitions/DatasetTriggers'
        description: A list of triggers. A trigger causes data set contents to be populated at a specified time interval or when another data set's contents are created. The list of triggers can be empty or contain up to five <b>DataSetTrigger</b> objects.
      versioningConfiguration:
        $ref: '#/definitions/VersioningConfiguration'
        description: '[Optional] How many versions of data set contents are kept. If not specified or set to null, only the latest version plus the latest succeeded version (if they are different) are kept for the time period specified by the "retentionPeriod" parameter. (For more information, see https://docs.aws.amazon.com/iotanalytics/latest/userguide/getting-started.html#aws-iot-analytics-dataset-versions)'
    required:
      - datasetName
      - actions
    type: object
  CreateDatasetResponse:
    properties:
      datasetArn:
        $ref: '#/definitions/DatasetArn'
        description: The ARN of the data set.
      datasetName:
        $ref: '#/definitions/DatasetName'
        description: The name of the data set.
      retentionPeriod:
        $ref: '#/definitions/RetentionPeriod'
        description: 'How long, in days, data set contents are kept for the data set.'
    type: object
  CreateDatastoreRequest:
    properties:
      datastoreName:
        $ref: '#/definitions/DatastoreName'
        description: The name of the data store.
      datastoreStorage:
        $ref: '#/definitions/DatastoreStorage'
        description: Where data store data is stored.
      retentionPeriod:
        $ref: '#/definitions/RetentionPeriod'
        description: 'How long, in days, message data is kept for the data store.'
      tags:
        $ref: '#/definitions/TagList'
        description: Metadata which can be used to manage the data store.
    required:
      - datastoreName
    type: object
  CreateDatastoreResponse:
    properties:
      datastoreArn:
        $ref: '#/definitions/DatastoreArn'
        description: The ARN of the data store.
      datastoreName:
        $ref: '#/definitions/DatastoreName'
        description: The name of the data store.
      retentionPeriod:
        $ref: '#/definitions/RetentionPeriod'
        description: 'How long, in days, message data is kept for the data store.'
    type: object
  CreatePipelineRequest:
    properties:
      pipelineActivities:
        $ref: '#/definitions/PipelineActivities'
        description: '<p>A list of "PipelineActivity" objects. Activities perform transformations on your messages, such as removing, renaming or adding message attributes; filtering messages based on attribute values; invoking your Lambda functions on messages for advanced processing; or performing mathematical transformations to normalize device data.</p> <p>The list can be 2-25 <b>PipelineActivity</b> objects and must contain both a <code>channel</code> and a <code>datastore</code> activity. Each entry in the list must contain only one activity, for example:</p> <p> <code>pipelineActivities = [ { "channel": { ... } }, { "lambda": { ... } }, ... ]</code> </p>'
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline.
      tags:
        $ref: '#/definitions/TagList'
        description: Metadata which can be used to manage the pipeline.
    required:
      - pipelineName
      - pipelineActivities
    type: object
  CreatePipelineResponse:
    properties:
      pipelineArn:
        $ref: '#/definitions/PipelineArn'
        description: The ARN of the pipeline.
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline.
    type: object
  CustomerManagedChannelS3Storage:
    description: Use this to store channel data in an S3 bucket that you manage.
    properties:
      bucket:
        $ref: '#/definitions/BucketName'
        description: The name of the Amazon S3 bucket in which channel data is stored.
      keyPrefix:
        $ref: '#/definitions/S3KeyPrefix'
        description: The prefix used to create the keys of the channel data objects. Each object in an Amazon S3 bucket has a key that is its unique identifier within the bucket (each object in a bucket has exactly one key).
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the role which grants AWS IoT Analytics permission to interact with your Amazon S3 resources.
    required:
      - bucket
      - roleArn
    type: object
  CustomerManagedChannelS3StorageSummary:
    description: Used to store channel data in an S3 bucket that you manage.
    properties:
      bucket:
        $ref: '#/definitions/BucketName'
        description: The name of the Amazon S3 bucket in which channel data is stored.
      keyPrefix:
        $ref: '#/definitions/S3KeyPrefix'
        description: The prefix used to create the keys of the channel data objects. Each object in an Amazon S3 bucket has a key that is its unique identifier within the bucket (each object in a bucket has exactly one key).
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the role which grants AWS IoT Analytics permission to interact with your Amazon S3 resources.
    type: object
  CustomerManagedDatastoreS3Storage:
    description: Use this to store data store data in an S3 bucket that you manage.
    properties:
      bucket:
        $ref: '#/definitions/BucketName'
        description: The name of the Amazon S3 bucket in which data store data is stored.
      keyPrefix:
        $ref: '#/definitions/S3KeyPrefix'
        description: The prefix used to create the keys of the data store data objects. Each object in an Amazon S3 bucket has a key that is its unique identifier within the bucket (each object in a bucket has exactly one key).
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the role which grants AWS IoT Analytics permission to interact with your Amazon S3 resources.
    required:
      - bucket
      - roleArn
    type: object
  CustomerManagedDatastoreS3StorageSummary:
    description: Used to store data store data in an S3 bucket that you manage.
    properties:
      bucket:
        $ref: '#/definitions/BucketName'
        description: The name of the Amazon S3 bucket in which data store data is stored.
      keyPrefix:
        $ref: '#/definitions/S3KeyPrefix'
        description: The prefix used to create the keys of the data store data objects. Each object in an Amazon S3 bucket has a key that is its unique identifier within the bucket (each object in a bucket has exactly one key).
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the role which grants AWS IoT Analytics permission to interact with your Amazon S3 resources.
    type: object
  Dataset:
    description: Information about a data set.
    properties:
      actions:
        $ref: '#/definitions/DatasetActions'
        description: The "DatasetAction" objects that automatically create the data set contents.
      arn:
        $ref: '#/definitions/DatasetArn'
        description: The ARN of the data set.
      contentDeliveryRules:
        $ref: '#/definitions/DatasetContentDeliveryRules'
        description: When data set contents are created they are delivered to destinations specified here.
      creationTime:
        $ref: '#/definitions/Timestamp'
        description: When the data set was created.
      lastUpdateTime:
        $ref: '#/definitions/Timestamp'
        description: The last time the data set was updated.
      name:
        $ref: '#/definitions/DatasetName'
        description: The name of the data set.
      retentionPeriod:
        $ref: '#/definitions/RetentionPeriod'
        description: '[Optional] How long, in days, message data is kept for the data set.'
      status:
        $ref: '#/definitions/DatasetStatus'
        description: The status of the data set.
      triggers:
        $ref: '#/definitions/DatasetTriggers'
        description: The "DatasetTrigger" objects that specify when the data set is automatically updated.
      versioningConfiguration:
        $ref: '#/definitions/VersioningConfiguration'
        description: '[Optional] How many versions of data set contents are kept. If not specified or set to null, only the latest version plus the latest succeeded version (if they are different) are kept for the time period specified by the "retentionPeriod" parameter. (For more information, see https://docs.aws.amazon.com/iotanalytics/latest/userguide/getting-started.html#aws-iot-analytics-dataset-versions)'
    type: object
  DatasetAction:
    description: A "DatasetAction" object that specifies how data set contents are automatically created.
    properties:
      actionName:
        $ref: '#/definitions/DatasetActionName'
        description: The name of the data set action by which data set contents are automatically created.
      containerAction:
        $ref: '#/definitions/ContainerDatasetAction'
        description: Information which allows the system to run a containerized application in order to create the data set contents. The application must be in a Docker container along with any needed support libraries.
      queryAction:
        $ref: '#/definitions/SqlQueryDatasetAction'
        description: An "SqlQueryDatasetAction" object that uses an SQL query to automatically create data set contents.
    type: object
  DatasetActionName:
    maxLength: 128
    minLength: 1
    pattern: '^[a-zA-Z0-9_]+$'
    type: string
  DatasetActionSummaries:
    items:
      $ref: '#/definitions/DatasetActionSummary'
    maxItems: 1
    minItems: 1
    type: array
  DatasetActionSummary:
    description: Information about the action which automatically creates the data set's contents.
    properties:
      actionName:
        $ref: '#/definitions/DatasetActionName'
        description: The name of the action which automatically creates the data set's contents.
      actionType:
        $ref: '#/definitions/DatasetActionType'
        description: The type of action by which the data set's contents are automatically created.
    type: object
  DatasetActionType:
    enum:
      - QUERY
      - CONTAINER
    type: string
  DatasetActions:
    items:
      $ref: '#/definitions/DatasetAction'
    maxItems: 1
    minItems: 1
    type: array
  DatasetArn:
    type: string
  DatasetContentDeliveryDestination:
    description: The destination to which data set contents are delivered.
    properties:
      iotEventsDestinationConfiguration:
        $ref: '#/definitions/IotEventsDestinationConfiguration'
        description: Configuration information for delivery of data set contents to AWS IoT Events.
      s3DestinationConfiguration:
        $ref: '#/definitions/S3DestinationConfiguration'
        description: Configuration information for delivery of data set contents to Amazon S3.
    type: object
  DatasetContentDeliveryRule:
    description: When data set contents are created they are delivered to destination specified here.
    properties:
      destination:
        $ref: '#/definitions/DatasetContentDeliveryDestination'
        description: The destination to which data set contents are delivered.
      entryName:
        $ref: '#/definitions/EntryName'
        description: The name of the data set content delivery rules entry.
    required:
      - destination
    type: object
  DatasetContentDeliveryRules:
    items:
      $ref: '#/definitions/DatasetContentDeliveryRule'
    maxItems: 20
    minItems: 0
    type: array
  DatasetContentState:
    enum:
      - CREATING
      - SUCCEEDED
      - FAILED
    type: string
  DatasetContentStatus:
    description: The state of the data set contents and the reason they are in this state.
    properties:
      reason:
        $ref: '#/definitions/Reason'
        description: The reason the data set contents are in this state.
      state:
        $ref: '#/definitions/DatasetContentState'
        description: 'The state of the data set contents. Can be one of "READY", "CREATING", "SUCCEEDED" or "FAILED".'
    type: object
  DatasetContentSummaries:
    items:
      $ref: '#/definitions/DatasetContentSummary'
    type: array
  DatasetContentSummary:
    description: Summary information about data set contents.
    properties:
      creationTime:
        $ref: '#/definitions/Timestamp'
        description: The actual time the creation of the data set contents was started.
      scheduleTime:
        $ref: '#/definitions/Timestamp'
        description: The time the creation of the data set contents was scheduled to start.
      status:
        $ref: '#/definitions/DatasetContentStatus'
        description: The status of the data set contents.
      version:
        $ref: '#/definitions/DatasetContentVersion'
        description: The version of the data set contents.
    type: object
  DatasetContentVersion:
    maxLength: 36
    minLength: 7
    type: string
  DatasetContentVersionValue:
    description: The data set whose latest contents are used as input to the notebook or application.
    properties:
      datasetName:
        $ref: '#/definitions/DatasetName'
        description: The name of the data set whose latest contents are used as input to the notebook or application.
    required:
      - datasetName
    type: object
  DatasetEntries:
    items:
      $ref: '#/definitions/DatasetEntry'
    type: array
  DatasetEntry:
    description: The reference to a data set entry.
    properties:
      dataURI:
        $ref: '#/definitions/PresignedURI'
        description: The pre-signed URI of the data set item.
      entryName:
        $ref: '#/definitions/EntryName'
        description: The name of the data set item.
    type: object
  DatasetName:
    maxLength: 128
    minLength: 1
    pattern: '^[a-zA-Z0-9_]+$'
    type: string
  DatasetStatus:
    enum:
      - CREATING
      - ACTIVE
      - DELETING
    type: string
  DatasetSummaries:
    items:
      $ref: '#/definitions/DatasetSummary'
    type: array
  DatasetSummary:
    description: A summary of information about a data set.
    properties:
      actions:
        $ref: '#/definitions/DatasetActionSummaries'
        description: A list of "DataActionSummary" objects.
      creationTime:
        $ref: '#/definitions/Timestamp'
        description: The time the data set was created.
      datasetName:
        $ref: '#/definitions/DatasetName'
        description: The name of the data set.
      lastUpdateTime:
        $ref: '#/definitions/Timestamp'
        description: The last time the data set was updated.
      status:
        $ref: '#/definitions/DatasetStatus'
        description: The status of the data set.
      triggers:
        $ref: '#/definitions/DatasetTriggers'
        description: A list of triggers. A trigger causes data set content to be populated at a specified time interval or when another data set is populated. The list of triggers can be empty or contain up to five DataSetTrigger objects
    type: object
  DatasetTrigger:
    description: The "DatasetTrigger" that specifies when the data set is automatically updated.
    properties:
      dataset:
        $ref: '#/definitions/TriggeringDataset'
        description: The data set whose content creation triggers the creation of this data set's contents.
      schedule:
        $ref: '#/definitions/Schedule'
        description: The "Schedule" when the trigger is initiated.
    type: object
  DatasetTriggers:
    items:
      $ref: '#/definitions/DatasetTrigger'
    maxItems: 5
    minItems: 0
    type: array
  Datastore:
    description: Information about a data store.
    properties:
      arn:
        $ref: '#/definitions/DatastoreArn'
        description: The ARN of the data store.
      creationTime:
        $ref: '#/definitions/Timestamp'
        description: When the data store was created.
      lastUpdateTime:
        $ref: '#/definitions/Timestamp'
        description: The last time the data store was updated.
      name:
        $ref: '#/definitions/DatastoreName'
        description: The name of the data store.
      retentionPeriod:
        $ref: '#/definitions/RetentionPeriod'
        description: 'How long, in days, message data is kept for the data store.'
      status:
        $ref: '#/definitions/DatastoreStatus'
        description: '<p>The status of a data store:</p> <dl> <dt>CREATING</dt> <dd> <p>The data store is being created.</p> </dd> <dt>ACTIVE</dt> <dd> <p>The data store has been created and can be used.</p> </dd> <dt>DELETING</dt> <dd> <p>The data store is being deleted.</p> </dd> </dl>'
      storage:
        $ref: '#/definitions/DatastoreStorage'
        description: Where data store data is stored.
    type: object
  DatastoreActivity:
    description: The 'datastore' activity that specifies where to store the processed data.
    properties:
      datastoreName:
        $ref: '#/definitions/DatastoreName'
        description: The name of the data store where processed messages are stored.
      name:
        $ref: '#/definitions/ActivityName'
        description: The name of the 'datastore' activity.
    required:
      - name
      - datastoreName
    type: object
  DatastoreArn:
    type: string
  DatastoreName:
    maxLength: 128
    minLength: 1
    pattern: '^[a-zA-Z0-9_]+$'
    type: string
  DatastoreStatistics:
    description: Statistical information about the data store.
    properties:
      size:
        $ref: '#/definitions/EstimatedResourceSize'
        description: The estimated size of the data store.
    type: object
  DatastoreStatus:
    enum:
      - CREATING
      - ACTIVE
      - DELETING
    type: string
  DatastoreStorage:
    description: Where data store data is stored.
    properties:
      customerManagedS3:
        $ref: '#/definitions/CustomerManagedDatastoreS3Storage'
        description: Use this to store data store data in an S3 bucket that you manage.
      serviceManagedS3:
        $ref: '#/definitions/ServiceManagedDatastoreS3Storage'
        description: Use this to store data store data in an S3 bucket managed by the AWS IoT Analytics service.
    type: object
  DatastoreStorageSummary:
    description: Where data store data is stored.
    properties:
      customerManagedS3:
        $ref: '#/definitions/CustomerManagedDatastoreS3StorageSummary'
        description: Used to store data store data in an S3 bucket that you manage.
      serviceManagedS3:
        $ref: '#/definitions/ServiceManagedDatastoreS3StorageSummary'
        description: Used to store data store data in an S3 bucket managed by the AWS IoT Analytics service.
    type: object
  DatastoreSummaries:
    items:
      $ref: '#/definitions/DatastoreSummary'
    type: array
  DatastoreSummary:
    description: A summary of information about a data store.
    properties:
      creationTime:
        $ref: '#/definitions/Timestamp'
        description: When the data store was created.
      datastoreName:
        $ref: '#/definitions/DatastoreName'
        description: The name of the data store.
      datastoreStorage:
        $ref: '#/definitions/DatastoreStorageSummary'
        description: Where data store data is stored.
      lastUpdateTime:
        $ref: '#/definitions/Timestamp'
        description: The last time the data store was updated.
      status:
        $ref: '#/definitions/DatastoreStatus'
        description: The status of the data store.
    type: object
  DeleteChannelRequest:
    properties: {}
    type: object
  DeleteDatasetContentRequest:
    properties: {}
    type: object
  DeleteDatasetRequest:
    properties: {}
    type: object
  DeleteDatastoreRequest:
    properties: {}
    type: object
  DeletePipelineRequest:
    properties: {}
    type: object
  DeltaTime:
    description: Used to limit data to that which has arrived since the last execution of the action.
    properties:
      offsetSeconds:
        $ref: '#/definitions/OffsetSeconds'
        description: 'The number of seconds of estimated "in flight" lag time of message data. When you create data set contents using message data from a specified time frame, some message data may still be "in flight" when processing begins, and so will not arrive in time to be processed. Use this field to make allowances for the "in flight" time of your message data, so that data not processed from a previous time frame will be included with the next time frame. Without this, missed message data would be excluded from processing during the next time frame as well, because its timestamp places it within the previous time frame.'
      timeExpression:
        $ref: '#/definitions/TimeExpression'
        description: 'An expression by which the time of the message data may be determined. This may be the name of a timestamp field, or a SQL expression which is used to derive the time the message data was generated.'
    required:
      - offsetSeconds
      - timeExpression
    type: object
  DescribeChannelRequest:
    properties: {}
    type: object
  DescribeChannelResponse:
    properties:
      channel:
        $ref: '#/definitions/Channel'
        description: An object that contains information about the channel.
      statistics:
        $ref: '#/definitions/ChannelStatistics'
        description: Statistics about the channel. Included if the 'includeStatistics' parameter is set to true in the request.
    type: object
  DescribeDatasetRequest:
    properties: {}
    type: object
  DescribeDatasetResponse:
    properties:
      dataset:
        $ref: '#/definitions/Dataset'
        description: An object that contains information about the data set.
    type: object
  DescribeDatastoreRequest:
    properties: {}
    type: object
  DescribeDatastoreResponse:
    properties:
      datastore:
        $ref: '#/definitions/Datastore'
        description: Information about the data store.
      statistics:
        $ref: '#/definitions/DatastoreStatistics'
        description: Additional statistical information about the data store. Included if the 'includeStatistics' parameter is set to true in the request.
    type: object
  DescribeLoggingOptionsRequest:
    properties: {}
    type: object
  DescribeLoggingOptionsResponse:
    properties:
      loggingOptions:
        $ref: '#/definitions/LoggingOptions'
        description: The current settings of the AWS IoT Analytics logging options.
    type: object
  DescribePipelineRequest:
    properties: {}
    type: object
  DescribePipelineResponse:
    properties:
      pipeline:
        $ref: '#/definitions/Pipeline'
        description: A "Pipeline" object that contains information about the pipeline.
    type: object
  DeviceRegistryEnrichActivity:
    description: An activity that adds data from the AWS IoT device registry to your message.
    properties:
      attribute:
        $ref: '#/definitions/AttributeName'
        description: The name of the attribute that is added to the message.
      name:
        $ref: '#/definitions/ActivityName'
        description: The name of the 'deviceRegistryEnrich' activity.
      next:
        $ref: '#/definitions/ActivityName'
        description: The next activity in the pipeline.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the role that allows access to the device's registry information.
      thingName:
        $ref: '#/definitions/AttributeName'
        description: The name of the IoT device whose registry information is added to the message.
    required:
      - name
      - attribute
      - thingName
      - roleArn
    type: object
  DeviceShadowEnrichActivity:
    description: An activity that adds information from the AWS IoT Device Shadows service to a message.
    properties:
      attribute:
        $ref: '#/definitions/AttributeName'
        description: The name of the attribute that is added to the message.
      name:
        $ref: '#/definitions/ActivityName'
        description: The name of the 'deviceShadowEnrich' activity.
      next:
        $ref: '#/definitions/ActivityName'
        description: The next activity in the pipeline.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the role that allows access to the device's shadow.
      thingName:
        $ref: '#/definitions/AttributeName'
        description: The name of the IoT device whose shadow information is added to the message.
    required:
      - name
      - attribute
      - thingName
      - roleArn
    type: object
  DoubleValue:
    format: double
    type: number
  EndTime:
    format: date-time
    type: string
  EntryName:
    type: string
  ErrorCode:
    type: string
  ErrorMessage:
    type: string
  EstimatedResourceSize:
    description: The estimated size of the resource.
    properties:
      estimatedOn:
        $ref: '#/definitions/Timestamp'
        description: The time when the estimate of the size of the resource was made.
      estimatedSizeInBytes:
        $ref: '#/definitions/SizeInBytes'
        description: The estimated size of the resource in bytes.
    type: object
  FilterActivity:
    description: An activity that filters a message based on its attributes.
    properties:
      filter:
        $ref: '#/definitions/FilterExpression'
        description: An expression that looks like a SQL WHERE clause that must return a Boolean value.
      name:
        $ref: '#/definitions/ActivityName'
        description: The name of the 'filter' activity.
      next:
        $ref: '#/definitions/ActivityName'
        description: The next activity in the pipeline.
    required:
      - name
      - filter
    type: object
  FilterExpression:
    maxLength: 256
    minLength: 1
    type: string
  GetDatasetContentRequest:
    properties: {}
    type: object
  GetDatasetContentResponse:
    properties:
      entries:
        $ref: '#/definitions/DatasetEntries'
        description: A list of "DatasetEntry" objects.
      status:
        $ref: '#/definitions/DatasetContentStatus'
        description: The status of the data set content.
      timestamp:
        $ref: '#/definitions/Timestamp'
        description: The time when the request was made.
    type: object
  GlueConfiguration:
    description: 'Configuration information for coordination with the AWS Glue ETL (extract, transform and load) service.'
    properties:
      databaseName:
        $ref: '#/definitions/GlueDatabaseName'
        description: The name of the database in your AWS Glue Data Catalog in which the table is located. (An AWS Glue Data Catalog database contains Glue Data tables.)
      tableName:
        $ref: '#/definitions/GlueTableName'
        description: 'The name of the table in your AWS Glue Data Catalog which is used to perform the ETL (extract, transform and load) operations. (An AWS Glue Data Catalog table contains partitioned data and descriptions of data sources and targets.)'
    required:
      - tableName
      - databaseName
    type: object
  GlueDatabaseName:
    maxLength: 150
    minLength: 1
    type: string
    x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*'
  GlueTableName:
    maxLength: 150
    minLength: 1
    type: string
    x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*'
  Image:
    maxLength: 255
    type: string
  IncludeStatisticsFlag:
    type: boolean
  InternalFailureException: {}
  InvalidRequestException: {}
  IotEventsDestinationConfiguration:
    description: Configuration information for delivery of data set contents to AWS IoT Events.
    properties:
      inputName:
        $ref: '#/definitions/IotEventsInputName'
        description: The name of the AWS IoT Events input to which data set contents are delivered.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the role which grants AWS IoT Analytics permission to deliver data set contents to an AWS IoT Events input.
    required:
      - inputName
      - roleArn
    type: object
  IotEventsInputName:
    maxLength: 128
    minLength: 1
    pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'
    type: string
  LambdaActivity:
    description: An activity that runs a Lambda function to modify the message.
    properties:
      batchSize:
        $ref: '#/definitions/ActivityBatchSize'
        description: '<p>The number of messages passed to the Lambda function for processing.</p> <p>The AWS Lambda function must be able to process all of these messages within five minutes, which is the maximum timeout duration for Lambda functions.</p>'
      lambdaName:
        $ref: '#/definitions/LambdaName'
        description: The name of the Lambda function that is run on the message.
      name:
        $ref: '#/definitions/ActivityName'
        description: The name of the 'lambda' activity.
      next:
        $ref: '#/definitions/ActivityName'
        description: The next activity in the pipeline.
    required:
      - name
      - lambdaName
      - batchSize
    type: object
  LambdaName:
    maxLength: 64
    minLength: 1
    pattern: '^[a-zA-Z0-9_-]+$'
    type: string
  LimitExceededException: {}
  ListChannelsRequest:
    properties: {}
    type: object
  ListChannelsResponse:
    properties:
      channelSummaries:
        $ref: '#/definitions/ChannelSummaries'
        description: A list of "ChannelSummary" objects.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to retrieve the next set of results, or <code>null</code> if there are no more results.'
    type: object
  ListDatasetContentsRequest:
    properties: {}
    type: object
  ListDatasetContentsResponse:
    properties:
      datasetContentSummaries:
        $ref: '#/definitions/DatasetContentSummaries'
        description: Summary information about data set contents that have been created.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to retrieve the next set of results, or <code>null</code> if there are no more results.'
    type: object
  ListDatasetsRequest:
    properties: {}
    type: object
  ListDatasetsResponse:
    properties:
      datasetSummaries:
        $ref: '#/definitions/DatasetSummaries'
        description: A list of "DatasetSummary" objects.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to retrieve the next set of results, or <code>null</code> if there are no more results.'
    type: object
  ListDatastoresRequest:
    properties: {}
    type: object
  ListDatastoresResponse:
    properties:
      datastoreSummaries:
        $ref: '#/definitions/DatastoreSummaries'
        description: A list of "DatastoreSummary" objects.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to retrieve the next set of results, or <code>null</code> if there are no more results.'
    type: object
  ListPipelinesRequest:
    properties: {}
    type: object
  ListPipelinesResponse:
    properties:
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to retrieve the next set of results, or <code>null</code> if there are no more results.'
      pipelineSummaries:
        $ref: '#/definitions/PipelineSummaries'
        description: A list of "PipelineSummary" objects.
    type: object
  ListTagsForResourceRequest:
    properties: {}
    type: object
  ListTagsForResourceResponse:
    properties:
      tags:
        $ref: '#/definitions/TagList'
        description: The tags (metadata) which you have assigned to the resource.
    type: object
  LogResult:
    type: string
  LoggingEnabled:
    type: boolean
  LoggingLevel:
    enum:
      - ERROR
    type: string
  LoggingOptions:
    description: Information about logging options.
    properties:
      enabled:
        $ref: '#/definitions/LoggingEnabled'
        description: 'If true, logging is enabled for AWS IoT Analytics.'
      level:
        $ref: '#/definitions/LoggingLevel'
        description: 'The logging level. Currently, only "ERROR" is supported.'
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the role that grants permission to AWS IoT Analytics to perform logging.
    required:
      - roleArn
      - level
      - enabled
    type: object
  MathActivity:
    description: An activity that computes an arithmetic expression using the message's attributes.
    properties:
      attribute:
        $ref: '#/definitions/AttributeName'
        description: The name of the attribute that contains the result of the math operation.
      math:
        $ref: '#/definitions/MathExpression'
        description: An expression that uses one or more existing attributes and must return an integer value.
      name:
        $ref: '#/definitions/ActivityName'
        description: The name of the 'math' activity.
      next:
        $ref: '#/definitions/ActivityName'
        description: The next activity in the pipeline.
    required:
      - name
      - attribute
      - math
    type: object
  MathExpression:
    maxLength: 256
    minLength: 1
    type: string
  MaxMessages:
    maximum: 10
    minimum: 1
    type: integer
  MaxResults:
    maximum: 250
    minimum: 1
    type: integer
  MaxVersions:
    maximum: 1000
    minimum: 1
    type: integer
  Message:
    description: Information about a message.
    properties:
      messageId:
        $ref: '#/definitions/MessageId'
        description: The ID you wish to assign to the message. Each "messageId" must be unique within each batch sent.
      payload:
        $ref: '#/definitions/MessagePayload'
        description: The payload of the message. This may be a JSON string or a Base64-encoded string representing binary data (in which case you must decode it by means of a pipeline activity).
    required:
      - messageId
      - payload
    type: object
  MessageId:
    maxLength: 128
    minLength: 1
    type: string
  MessagePayload:
    type: string
  MessagePayloads:
    items:
      $ref: '#/definitions/MessagePayload'
    maxItems: 10
    minItems: 1
    type: array
  Messages:
    items:
      $ref: '#/definitions/Message'
    type: array
  NextToken:
    type: string
  OffsetSeconds:
    type: integer
  OutputFileName:
    pattern: '[\w\.-]{1,255}'
    type: string
  OutputFileUriValue:
    description: The value of the variable as a structure that specifies an output file URI.
    properties:
      fileName:
        $ref: '#/definitions/OutputFileName'
        description: 'The URI of the location where data set contents are stored, usually the URI of a file in an S3 bucket.'
    required:
      - fileName
    type: object
  Pipeline:
    description: Contains information about a pipeline.
    properties:
      activities:
        $ref: '#/definitions/PipelineActivities'
        description: The activities that perform transformations on the messages.
      arn:
        $ref: '#/definitions/PipelineArn'
        description: The ARN of the pipeline.
      creationTime:
        $ref: '#/definitions/Timestamp'
        description: When the pipeline was created.
      lastUpdateTime:
        $ref: '#/definitions/Timestamp'
        description: The last time the pipeline was updated.
      name:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline.
      reprocessingSummaries:
        $ref: '#/definitions/ReprocessingSummaries'
        description: A summary of information about the pipeline reprocessing.
    type: object
  PipelineActivities:
    items:
      $ref: '#/definitions/PipelineActivity'
    maxItems: 25
    minItems: 1
    type: array
  PipelineActivity:
    description: An activity that performs a transformation on a message.
    properties:
      addAttributes:
        $ref: '#/definitions/AddAttributesActivity'
        description: Adds other attributes based on existing attributes in the message.
      channel:
        $ref: '#/definitions/ChannelActivity'
        description: Determines the source of the messages to be processed.
      datastore:
        $ref: '#/definitions/DatastoreActivity'
        description: Specifies where to store the processed message data.
      deviceRegistryEnrich:
        $ref: '#/definitions/DeviceRegistryEnrichActivity'
        description: Adds data from the AWS IoT device registry to your message.
      deviceShadowEnrich:
        $ref: '#/definitions/DeviceShadowEnrichActivity'
        description: Adds information from the AWS IoT Device Shadows service to a message.
      filter:
        $ref: '#/definitions/FilterActivity'
        description: Filters a message based on its attributes.
      lambda:
        $ref: '#/definitions/LambdaActivity'
        description: Runs a Lambda function to modify the message.
      math:
        $ref: '#/definitions/MathActivity'
        description: Computes an arithmetic expression using the message's attributes and adds it to the message.
      removeAttributes:
        $ref: '#/definitions/RemoveAttributesActivity'
        description: Removes attributes from a message.
      selectAttributes:
        $ref: '#/definitions/SelectAttributesActivity'
        description: 'Creates a new message using only the specified attributes from the original message. '
    type: object
  PipelineArn:
    type: string
  PipelineName:
    maxLength: 128
    minLength: 1
    pattern: '^[a-zA-Z0-9_]+$'
    type: string
  PipelineSummaries:
    items:
      $ref: '#/definitions/PipelineSummary'
    type: array
  PipelineSummary:
    description: A summary of information about a pipeline.
    properties:
      creationTime:
        $ref: '#/definitions/Timestamp'
        description: When the pipeline was created.
      lastUpdateTime:
        $ref: '#/definitions/Timestamp'
        description: When the pipeline was last updated.
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline.
      reprocessingSummaries:
        $ref: '#/definitions/ReprocessingSummaries'
        description: A summary of information about the pipeline reprocessing.
    type: object
  PresignedURI:
    type: string
  PutLoggingOptionsRequest:
    properties:
      loggingOptions:
        $ref: '#/definitions/LoggingOptions'
        description: The new values of the AWS IoT Analytics logging options.
    required:
      - loggingOptions
    type: object
  QueryFilter:
    description: 'Information which is used to filter message data, to segregate it according to the time frame in which it arrives.'
    properties:
      deltaTime:
        $ref: '#/definitions/DeltaTime'
        description: Used to limit data to that which has arrived since the last execution of the action.
    type: object
  QueryFilters:
    items:
      $ref: '#/definitions/QueryFilter'
    maxItems: 1
    minItems: 0
    type: array
  Reason:
    type: string
  RemoveAttributesActivity:
    description: An activity that removes attributes from a message.
    properties:
      attributes:
        $ref: '#/definitions/AttributeNames'
        description: A list of 1-50 attributes to remove from the message.
      name:
        $ref: '#/definitions/ActivityName'
        description: The name of the 'removeAttributes' activity.
      next:
        $ref: '#/definitions/ActivityName'
        description: The next activity in the pipeline.
    required:
      - name
      - attributes
    type: object
  ReprocessingId:
    type: string
  ReprocessingStatus:
    enum:
      - RUNNING
      - SUCCEEDED
      - CANCELLED
      - FAILED
    type: string
  ReprocessingSummaries:
    items:
      $ref: '#/definitions/ReprocessingSummary'
    type: array
  ReprocessingSummary:
    description: Information about pipeline reprocessing.
    properties:
      creationTime:
        $ref: '#/definitions/Timestamp'
        description: The time the pipeline reprocessing was created.
      id:
        $ref: '#/definitions/ReprocessingId'
        description: The 'reprocessingId' returned by "StartPipelineReprocessing".
      status:
        $ref: '#/definitions/ReprocessingStatus'
        description: The status of the pipeline reprocessing.
    type: object
  ResourceAlreadyExistsException: {}
  ResourceArn:
    maxLength: 2048
    minLength: 20
    type: string
  ResourceConfiguration:
    description: The configuration of the resource used to execute the "containerAction".
    properties:
      computeType:
        $ref: '#/definitions/ComputeType'
        description: 'The type of the compute resource used to execute the "containerAction". Possible values are: ACU_1 (vCPU=4, memory=16GiB) or ACU_2 (vCPU=8, memory=32GiB).'
      volumeSizeInGB:
        $ref: '#/definitions/VolumeSizeInGB'
        description: 'The size (in GB) of the persistent storage available to the resource instance used to execute the "containerAction" (min: 1, max: 50).'
    required:
      - computeType
      - volumeSizeInGB
    type: object
  ResourceNotFoundException: {}
  RetentionPeriod:
    description: 'How long, in days, message data is kept.'
    properties:
      numberOfDays:
        $ref: '#/definitions/RetentionPeriodInDays'
        description: The number of days that message data is kept. The "unlimited" parameter must be false.
      unlimited:
        $ref: '#/definitions/UnlimitedRetentionPeriod'
        description: 'If true, message data is kept indefinitely.'
    type: object
  RetentionPeriodInDays:
    minimum: 1
    type: integer
  RoleArn:
    maxLength: 2048
    minLength: 20
    type: string
  RunPipelineActivityRequest:
    properties:
      payloads:
        $ref: '#/definitions/MessagePayloads'
        description: The sample message payloads on which the pipeline activity is run.
      pipelineActivity:
        $ref: '#/definitions/PipelineActivity'
        description: 'The pipeline activity that is run. This must not be a ''channel'' activity or a ''datastore'' activity because these activities are used in a pipeline only to load the original message and to store the (possibly) transformed message. If a ''lambda'' activity is specified, only short-running Lambda functions (those with a timeout of less than 30 seconds or less) can be used.'
    required:
      - pipelineActivity
      - payloads
    type: object
  RunPipelineActivityResponse:
    properties:
      logResult:
        $ref: '#/definitions/LogResult'
        description: 'In case the pipeline activity fails, the log message that is generated.'
      payloads:
        $ref: '#/definitions/MessagePayloads'
        description: 'The enriched or transformed sample message payloads as base64-encoded strings. (The results of running the pipeline activity on each input sample message payload, encoded in base64.)'
    type: object
  S3DestinationConfiguration:
    description: Configuration information for delivery of data set contents to Amazon S3.
    properties:
      bucket:
        $ref: '#/definitions/BucketName'
        description: The name of the Amazon S3 bucket to which data set contents are delivered.
      glueConfiguration:
        $ref: '#/definitions/GlueConfiguration'
        description: 'Configuration information for coordination with the AWS Glue ETL (extract, transform and load) service.'
      key:
        $ref: '#/definitions/BucketKeyExpression'
        description: The key of the data set contents object. Each object in an Amazon S3 bucket has a key that is its unique identifier within the bucket (each object in a bucket has exactly one key).
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the role which grants AWS IoT Analytics permission to interact with your Amazon S3 and AWS Glue resources.
    required:
      - bucket
      - key
      - roleArn
    type: object
  S3KeyPrefix:
    maxLength: 255
    minLength: 1
    pattern: '^[a-zA-Z0-9!_.*''()/{}:-]*/$'
    type: string
  SampleChannelDataRequest:
    properties: {}
    type: object
  SampleChannelDataResponse:
    properties:
      payloads:
        $ref: '#/definitions/MessagePayloads'
        description: The list of message samples. Each sample message is returned as a base64-encoded string.
    type: object
  Schedule:
    description: The schedule for when to trigger an update.
    properties:
      expression:
        $ref: '#/definitions/ScheduleExpression'
        description: 'The expression that defines when to trigger an update. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html"> Schedule Expressions for Rules</a> in the Amazon CloudWatch Events User Guide.'
    type: object
  ScheduleExpression:
    type: string
  SelectAttributesActivity:
    description: Creates a new message using only the specified attributes from the original message.
    properties:
      attributes:
        $ref: '#/definitions/AttributeNames'
        description: A list of the attributes to select from the message.
      name:
        $ref: '#/definitions/ActivityName'
        description: The name of the 'selectAttributes' activity.
      next:
        $ref: '#/definitions/ActivityName'
        description: The next activity in the pipeline.
    required:
      - name
      - attributes
    type: object
  ServiceManagedChannelS3Storage:
    description: Use this to store channel data in an S3 bucket managed by the AWS IoT Analytics service.
    properties: {}
    type: object
  ServiceManagedChannelS3StorageSummary:
    description: Used to store channel data in an S3 bucket managed by the AWS IoT Analytics service.
    properties: {}
    type: object
  ServiceManagedDatastoreS3Storage:
    description: Use this to store data store data in an S3 bucket managed by the AWS IoT Analytics service.
    properties: {}
    type: object
  ServiceManagedDatastoreS3StorageSummary:
    description: Used to store data store data in an S3 bucket managed by the AWS IoT Analytics service.
    properties: {}
    type: object
  ServiceUnavailableException: {}
  SizeInBytes:
    format: double
    type: number
  SqlQuery:
    type: string
  SqlQueryDatasetAction:
    description: The SQL query to modify the message.
    properties:
      filters:
        $ref: '#/definitions/QueryFilters'
        description: Pre-filters applied to message data.
      sqlQuery:
        $ref: '#/definitions/SqlQuery'
        description: A SQL query string.
    required:
      - sqlQuery
    type: object
  StartPipelineReprocessingRequest:
    properties:
      endTime:
        $ref: '#/definitions/EndTime'
        description: The end time (exclusive) of raw message data that is reprocessed.
      startTime:
        $ref: '#/definitions/StartTime'
        description: The start time (inclusive) of raw message data that is reprocessed.
    type: object
  StartPipelineReprocessingResponse:
    properties:
      reprocessingId:
        $ref: '#/definitions/ReprocessingId'
        description: The ID of the pipeline reprocessing activity that was started.
    type: object
  StartTime:
    format: date-time
    type: string
  StringValue:
    maxLength: 1024
    minLength: 0
    type: string
  Tag:
    description: A set of key/value pairs which are used to manage the resource.
    properties:
      key:
        $ref: '#/definitions/TagKey'
        description: The tag's key.
      value:
        $ref: '#/definitions/TagValue'
        description: The tag's value.
    required:
      - key
      - value
    type: object
  TagKey:
    maxLength: 256
    minLength: 1
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 50
    minItems: 1
    type: array
  TagList:
    items:
      $ref: '#/definitions/Tag'
    maxItems: 50
    minItems: 1
    type: array
  TagResourceRequest:
    properties:
      tags:
        $ref: '#/definitions/TagList'
        description: The new or modified tags for the resource.
    required:
      - tags
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    minLength: 1
    type: string
  ThrottlingException: {}
  TimeExpression:
    type: string
  Timestamp:
    format: date-time
    type: string
  TriggeringDataset:
    description: Information about the data set whose content generation triggers the new data set content generation.
    properties:
      name:
        $ref: '#/definitions/DatasetName'
        description: The name of the data set whose content generation triggers the new data set content generation.
    required:
      - name
    type: object
  UnlimitedRetentionPeriod:
    type: boolean
  UnlimitedVersioning:
    type: boolean
  UntagResourceRequest:
    properties: {}
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateChannelRequest:
    properties:
      channelStorage:
        $ref: '#/definitions/ChannelStorage'
        description: Where channel data is stored.
      retentionPeriod:
        $ref: '#/definitions/RetentionPeriod'
        description: 'How long, in days, message data is kept for the channel.'
    type: object
  UpdateDatasetRequest:
    properties:
      actions:
        $ref: '#/definitions/DatasetActions'
        description: A list of "DatasetAction" objects.
      contentDeliveryRules:
        $ref: '#/definitions/DatasetContentDeliveryRules'
        description: When data set contents are created they are delivered to destinations specified here.
      retentionPeriod:
        $ref: '#/definitions/RetentionPeriod'
        description: 'How long, in days, data set contents are kept for the data set.'
      triggers:
        $ref: '#/definitions/DatasetTriggers'
        description: A list of "DatasetTrigger" objects. The list can be empty or can contain up to five <b>DataSetTrigger</b> objects.
      versioningConfiguration:
        $ref: '#/definitions/VersioningConfiguration'
        description: '[Optional] How many versions of data set contents are kept. If not specified or set to null, only the latest version plus the latest succeeded version (if they are different) are kept for the time period specified by the "retentionPeriod" parameter. (For more information, see https://docs.aws.amazon.com/iotanalytics/latest/userguide/getting-started.html#aws-iot-analytics-dataset-versions)'
    required:
      - actions
    type: object
  UpdateDatastoreRequest:
    properties:
      datastoreStorage:
        $ref: '#/definitions/DatastoreStorage'
        description: Where data store data is stored.
      retentionPeriod:
        $ref: '#/definitions/RetentionPeriod'
        description: 'How long, in days, message data is kept for the data store.'
    type: object
  UpdatePipelineRequest:
    properties:
      pipelineActivities:
        $ref: '#/definitions/PipelineActivities'
        description: '<p>A list of "PipelineActivity" objects. Activities perform transformations on your messages, such as removing, renaming or adding message attributes; filtering messages based on attribute values; invoking your Lambda functions on messages for advanced processing; or performing mathematical transformations to normalize device data.</p> <p>The list can be 2-25 <b>PipelineActivity</b> objects and must contain both a <code>channel</code> and a <code>datastore</code> activity. Each entry in the list must contain only one activity, for example:</p> <p> <code>pipelineActivities = [ { "channel": { ... } }, { "lambda": { ... } }, ... ]</code> </p>'
    required:
      - pipelineActivities
    type: object
  Variable:
    description: 'An instance of a variable to be passed to the "containerAction" execution. Each variable must have a name and a value given by one of "stringValue", "datasetContentVersionValue", or "outputFileUriValue".'
    properties:
      datasetContentVersionValue:
        $ref: '#/definitions/DatasetContentVersionValue'
        description: The value of the variable as a structure that specifies a data set content version.
      doubleValue:
        $ref: '#/definitions/DoubleValue'
        description: The value of the variable as a double (numeric).
      name:
        $ref: '#/definitions/VariableName'
        description: The name of the variable.
      outputFileUriValue:
        $ref: '#/definitions/OutputFileUriValue'
        description: The value of the variable as a structure that specifies an output file URI.
      stringValue:
        $ref: '#/definitions/StringValue'
        description: The value of the variable as a string.
    required:
      - name
    type: object
  VariableName:
    maxLength: 256
    minLength: 1
    type: string
  Variables:
    items:
      $ref: '#/definitions/Variable'
    maxItems: 50
    minItems: 0
    type: array
  VersioningConfiguration:
    description: Information about the versioning of data set contents.
    properties:
      maxVersions:
        $ref: '#/definitions/MaxVersions'
        description: How many versions of data set contents will be kept. The "unlimited" parameter must be false.
      unlimited:
        $ref: '#/definitions/UnlimitedVersioning'
        description: 'If true, unlimited versions of data set contents will be kept.'
    type: object
  VolumeSizeInGB:
    maximum: 50
    minimum: 1
    type: integer
x-servers:
  - description: The AWS IoT Analytics multi-region endpoint
    url: 'http://iotanalytics.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The AWS IoT Analytics multi-region endpoint
    url: 'https://iotanalytics.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The AWS IoT Analytics endpoint for China (Beijing) and China (Ningxia)
    url: 'http://iotanalytics.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
  - description: The AWS IoT Analytics endpoint for China (Beijing) and China (Ningxia)
    url: 'https://iotanalytics.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
