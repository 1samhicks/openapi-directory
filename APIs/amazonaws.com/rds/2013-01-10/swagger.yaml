swagger: '2.0'
info:
  version: '2013-01-10'
  x-release: v4
  title: Amazon Relational Database Service
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: rds
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/rds-2013-01-10.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: false
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/rds/'
host: rds.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes: []
produces: []
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AddSourceIdentifierToSubscription
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddSourceIdentifierToSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
        '481':
          description: SourceNotFoundFault
          schema:
            $ref: '#/definitions/SourceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddSourceIdentifierToSubscriptionMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AddTagsToResource':
    post:
      operationId: AddTagsToResource
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddTagsToResourceMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AuthorizeDBSecurityGroupIngress':
    post:
      operationId: AuthorizeDBSecurityGroupIngress
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuthorizeDBSecurityGroupIngressResult'
        '480':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '481':
          description: InvalidDBSecurityGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSecurityGroupStateFault'
        '482':
          description: AuthorizationAlreadyExistsFault
          schema:
            $ref: '#/definitions/AuthorizationAlreadyExistsFault'
        '483':
          description: AuthorizationQuotaExceededFault
          schema:
            $ref: '#/definitions/AuthorizationQuotaExceededFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AuthorizeDBSecurityGroupIngressMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CopyDBSnapshot':
    post:
      operationId: CopyDBSnapshot
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CopyDBSnapshotResult'
        '480':
          description: DBSnapshotAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSnapshotAlreadyExistsFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
        '482':
          description: InvalidDBSnapshotStateFault
          schema:
            $ref: '#/definitions/InvalidDBSnapshotStateFault'
        '483':
          description: SnapshotQuotaExceededFault
          schema:
            $ref: '#/definitions/SnapshotQuotaExceededFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CopyDBSnapshotMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateDBInstance':
    post:
      operationId: CreateDBInstance
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBInstanceResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '481':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '482':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
        '483':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '484':
          description: InstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/InstanceQuotaExceededFault'
        '485':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '486':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '487':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '488':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '489':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '490':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '491':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDBInstanceMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateDBInstanceReadReplica':
    post:
      operationId: CreateDBInstanceReadReplica
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBInstanceReadReplicaResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '481':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '482':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
        '483':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '484':
          description: InstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/InstanceQuotaExceededFault'
        '485':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '486':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '487':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '488':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '489':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '490':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '491':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '492':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '493':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDBInstanceReadReplicaMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateDBParameterGroup':
    post:
      operationId: CreateDBParameterGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBParameterGroupResult'
        '480':
          description: DBParameterGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/DBParameterGroupQuotaExceededFault'
        '481':
          description: DBParameterGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBParameterGroupAlreadyExistsFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDBParameterGroupMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateDBSecurityGroup':
    post:
      operationId: CreateDBSecurityGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBSecurityGroupResult'
        '480':
          description: DBSecurityGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSecurityGroupAlreadyExistsFault'
        '481':
          description: DBSecurityGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/DBSecurityGroupQuotaExceededFault'
        '482':
          description: DBSecurityGroupNotSupportedFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotSupportedFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDBSecurityGroupMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateDBSnapshot':
    post:
      operationId: CreateDBSnapshot
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBSnapshotResult'
        '480':
          description: DBSnapshotAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSnapshotAlreadyExistsFault'
        '481':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '482':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '483':
          description: SnapshotQuotaExceededFault
          schema:
            $ref: '#/definitions/SnapshotQuotaExceededFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDBSnapshotMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateDBSubnetGroup':
    post:
      operationId: CreateDBSubnetGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBSubnetGroupResult'
        '480':
          description: DBSubnetGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSubnetGroupAlreadyExistsFault'
        '481':
          description: DBSubnetGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/DBSubnetGroupQuotaExceededFault'
        '482':
          description: DBSubnetQuotaExceededFault
          schema:
            $ref: '#/definitions/DBSubnetQuotaExceededFault'
        '483':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '484':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDBSubnetGroupMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateEventSubscription':
    post:
      operationId: CreateEventSubscription
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateEventSubscriptionResult'
        '480':
          description: EventSubscriptionQuotaExceededFault
          schema:
            $ref: '#/definitions/EventSubscriptionQuotaExceededFault'
        '481':
          description: SubscriptionAlreadyExistFault
          schema:
            $ref: '#/definitions/SubscriptionAlreadyExistFault'
        '482':
          description: SNSInvalidTopicFault
          schema:
            $ref: '#/definitions/SNSInvalidTopicFault'
        '483':
          description: SNSNoAuthorizationFault
          schema:
            $ref: '#/definitions/SNSNoAuthorizationFault'
        '484':
          description: SNSTopicArnNotFoundFault
          schema:
            $ref: '#/definitions/SNSTopicArnNotFoundFault'
        '485':
          description: SubscriptionCategoryNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionCategoryNotFoundFault'
        '486':
          description: SourceNotFoundFault
          schema:
            $ref: '#/definitions/SourceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateEventSubscriptionMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateOptionGroup':
    post:
      operationId: CreateOptionGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateOptionGroupResult'
        '480':
          description: OptionGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/OptionGroupAlreadyExistsFault'
        '481':
          description: OptionGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/OptionGroupQuotaExceededFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateOptionGroupMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteDBInstance':
    post:
      operationId: DeleteDBInstance
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDBInstanceResult'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '482':
          description: DBSnapshotAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSnapshotAlreadyExistsFault'
        '483':
          description: SnapshotQuotaExceededFault
          schema:
            $ref: '#/definitions/SnapshotQuotaExceededFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDBInstanceMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteDBParameterGroup':
    post:
      operationId: DeleteDBParameterGroup
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBParameterGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBParameterGroupStateFault'
        '481':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDBParameterGroupMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteDBSecurityGroup':
    post:
      operationId: DeleteDBSecurityGroup
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBSecurityGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSecurityGroupStateFault'
        '481':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDBSecurityGroupMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteDBSnapshot':
    post:
      operationId: DeleteDBSnapshot
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDBSnapshotResult'
        '480':
          description: InvalidDBSnapshotStateFault
          schema:
            $ref: '#/definitions/InvalidDBSnapshotStateFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDBSnapshotMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteDBSubnetGroup':
    post:
      operationId: DeleteDBSubnetGroup
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBSubnetGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSubnetGroupStateFault'
        '481':
          description: InvalidDBSubnetStateFault
          schema:
            $ref: '#/definitions/InvalidDBSubnetStateFault'
        '482':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDBSubnetGroupMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteEventSubscription':
    post:
      operationId: DeleteEventSubscription
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteEventSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
        '481':
          description: InvalidEventSubscriptionStateFault
          schema:
            $ref: '#/definitions/InvalidEventSubscriptionStateFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteEventSubscriptionMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteOptionGroup':
    post:
      operationId: DeleteOptionGroup
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
        '481':
          description: InvalidOptionGroupStateFault
          schema:
            $ref: '#/definitions/InvalidOptionGroupStateFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteOptionGroupMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeDBEngineVersions':
    post:
      operationId: DescribeDBEngineVersions
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBEngineVersionMessage'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDBEngineVersionsMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeDBInstances':
    post:
      operationId: DescribeDBInstances
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBInstanceMessage'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDBInstancesMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeDBParameterGroups':
    post:
      operationId: DescribeDBParameterGroups
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBParameterGroupsMessage'
        '480':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDBParameterGroupsMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeDBParameters':
    post:
      operationId: DescribeDBParameters
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBParameterGroupDetails'
        '480':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDBParametersMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeDBSecurityGroups':
    post:
      operationId: DescribeDBSecurityGroups
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBSecurityGroupMessage'
        '480':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDBSecurityGroupsMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeDBSnapshots':
    post:
      operationId: DescribeDBSnapshots
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBSnapshotMessage'
        '480':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDBSnapshotsMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeDBSubnetGroups':
    post:
      operationId: DescribeDBSubnetGroups
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBSubnetGroupMessage'
        '480':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDBSubnetGroupsMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEngineDefaultParameters':
    post:
      operationId: DescribeEngineDefaultParameters
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEngineDefaultParametersResult'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEngineDefaultParametersMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEventCategories':
    post:
      operationId: DescribeEventCategories
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventCategoriesMessage'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEventCategoriesMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEventSubscriptions':
    post:
      operationId: DescribeEventSubscriptions
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventSubscriptionsMessage'
        '480':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEventSubscriptionsMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEvents':
    post:
      operationId: DescribeEvents
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventsMessage'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEventsMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeOptionGroupOptions':
    post:
      operationId: DescribeOptionGroupOptions
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OptionGroupOptionsMessage'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeOptionGroupOptionsMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeOptionGroups':
    post:
      operationId: DescribeOptionGroups
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OptionGroups'
        '480':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeOptionGroupsMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeOrderableDBInstanceOptions':
    post:
      operationId: DescribeOrderableDBInstanceOptions
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderableDBInstanceOptionsMessage'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeOrderableDBInstanceOptionsMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeReservedDBInstances':
    post:
      operationId: DescribeReservedDBInstances
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ReservedDBInstanceMessage'
        '480':
          description: ReservedDBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/ReservedDBInstanceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeReservedDBInstancesMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeReservedDBInstancesOfferings':
    post:
      operationId: DescribeReservedDBInstancesOfferings
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ReservedDBInstancesOfferingMessage'
        '480':
          description: ReservedDBInstancesOfferingNotFoundFault
          schema:
            $ref: '#/definitions/ReservedDBInstancesOfferingNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeReservedDBInstancesOfferingsMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListTagsForResource':
    post:
      operationId: ListTagsForResource
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagListMessage'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyDBInstance':
    post:
      operationId: ModifyDBInstance
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyDBInstanceResult'
        '480':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '481':
          description: InvalidDBSecurityGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSecurityGroupStateFault'
        '482':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '483':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '484':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '485':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
        '486':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '487':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '488':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '489':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '490':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
        '491':
          description: DBUpgradeDependencyFailureFault
          schema:
            $ref: '#/definitions/DBUpgradeDependencyFailureFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyDBInstanceMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyDBParameterGroup':
    post:
      operationId: ModifyDBParameterGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBParameterGroupNameMessage'
        '480':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
        '481':
          description: InvalidDBParameterGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBParameterGroupStateFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyDBParameterGroupMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyDBSubnetGroup':
    post:
      operationId: ModifyDBSubnetGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyDBSubnetGroupResult'
        '480':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '481':
          description: DBSubnetQuotaExceededFault
          schema:
            $ref: '#/definitions/DBSubnetQuotaExceededFault'
        '482':
          description: SubnetAlreadyInUse
          schema:
            $ref: '#/definitions/SubnetAlreadyInUse'
        '483':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '484':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyDBSubnetGroupMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyEventSubscription':
    post:
      operationId: ModifyEventSubscription
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyEventSubscriptionResult'
        '480':
          description: EventSubscriptionQuotaExceededFault
          schema:
            $ref: '#/definitions/EventSubscriptionQuotaExceededFault'
        '481':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
        '482':
          description: SNSInvalidTopicFault
          schema:
            $ref: '#/definitions/SNSInvalidTopicFault'
        '483':
          description: SNSNoAuthorizationFault
          schema:
            $ref: '#/definitions/SNSNoAuthorizationFault'
        '484':
          description: SNSTopicArnNotFoundFault
          schema:
            $ref: '#/definitions/SNSTopicArnNotFoundFault'
        '485':
          description: SubscriptionCategoryNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionCategoryNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyEventSubscriptionMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyOptionGroup':
    post:
      operationId: ModifyOptionGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyOptionGroupResult'
        '480':
          description: InvalidOptionGroupStateFault
          schema:
            $ref: '#/definitions/InvalidOptionGroupStateFault'
        '481':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyOptionGroupMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PromoteReadReplica':
    post:
      operationId: PromoteReadReplica
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PromoteReadReplicaResult'
        '480':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '481':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PromoteReadReplicaMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PurchaseReservedDBInstancesOffering':
    post:
      operationId: PurchaseReservedDBInstancesOffering
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PurchaseReservedDBInstancesOfferingResult'
        '480':
          description: ReservedDBInstancesOfferingNotFoundFault
          schema:
            $ref: '#/definitions/ReservedDBInstancesOfferingNotFoundFault'
        '481':
          description: ReservedDBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/ReservedDBInstanceAlreadyExistsFault'
        '482':
          description: ReservedDBInstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/ReservedDBInstanceQuotaExceededFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PurchaseReservedDBInstancesOfferingMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RebootDBInstance':
    post:
      operationId: RebootDBInstance
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RebootDBInstanceResult'
        '480':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '481':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RebootDBInstanceMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RemoveSourceIdentifierFromSubscription':
    post:
      operationId: RemoveSourceIdentifierFromSubscription
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveSourceIdentifierFromSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
        '481':
          description: SourceNotFoundFault
          schema:
            $ref: '#/definitions/SourceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemoveSourceIdentifierFromSubscriptionMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RemoveTagsFromResource':
    post:
      operationId: RemoveTagsFromResource
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemoveTagsFromResourceMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ResetDBParameterGroup':
    post:
      operationId: ResetDBParameterGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBParameterGroupNameMessage'
        '480':
          description: InvalidDBParameterGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBParameterGroupStateFault'
        '481':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ResetDBParameterGroupMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RestoreDBInstanceFromDBSnapshot':
    post:
      operationId: RestoreDBInstanceFromDBSnapshot
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RestoreDBInstanceFromDBSnapshotResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
        '482':
          description: InstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/InstanceQuotaExceededFault'
        '483':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '484':
          description: InvalidDBSnapshotStateFault
          schema:
            $ref: '#/definitions/InvalidDBSnapshotStateFault'
        '485':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '486':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '487':
          description: InvalidRestoreFault
          schema:
            $ref: '#/definitions/InvalidRestoreFault'
        '488':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '489':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '490':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '491':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '492':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RestoreDBInstanceFromDBSnapshotMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RestoreDBInstanceToPointInTime':
    post:
      operationId: RestoreDBInstanceToPointInTime
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RestoreDBInstanceToPointInTimeResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '481':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '482':
          description: InstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/InstanceQuotaExceededFault'
        '483':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '484':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '485':
          description: PointInTimeRestoreNotEnabledFault
          schema:
            $ref: '#/definitions/PointInTimeRestoreNotEnabledFault'
        '486':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '487':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '488':
          description: InvalidRestoreFault
          schema:
            $ref: '#/definitions/InvalidRestoreFault'
        '489':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '490':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '491':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '492':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '493':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RestoreDBInstanceToPointInTimeMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RevokeDBSecurityGroupIngress':
    post:
      operationId: RevokeDBSecurityGroupIngress
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RevokeDBSecurityGroupIngressResult'
        '480':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '481':
          description: AuthorizationNotFoundFault
          schema:
            $ref: '#/definitions/AuthorizationNotFoundFault'
        '482':
          description: InvalidDBSecurityGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSecurityGroupStateFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RevokeDBSecurityGroupIngressMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AddSourceIdentifierToSubscriptionResult:
    type: object
    properties:
      EventSubscription:
        $ref: '#/definitions/[object Object]'
  AddSourceIdentifierToSubscriptionMessage:
    type: object
    required:
      - SubscriptionName
      - SourceIdentifier
    properties:
      SubscriptionName:
        $ref: '#/definitions/[object Object]'
      SourceIdentifier:
        $ref: '#/definitions/[object Object]'
  SubscriptionNotFoundFault: {}
  SourceNotFoundFault: {}
  AddTagsToResourceMessage:
    type: object
    required:
      - ResourceName
      - Tags
    properties:
      ResourceName:
        $ref: '#/definitions/[object Object]'
      Tags:
        $ref: '#/definitions/[object Object]'
  DBInstanceNotFoundFault: {}
  DBSnapshotNotFoundFault: {}
  AuthorizeDBSecurityGroupIngressResult:
    type: object
    properties:
      DBSecurityGroup:
        $ref: '#/definitions/[object Object]'
  AuthorizeDBSecurityGroupIngressMessage:
    type: object
    required:
      - DBSecurityGroupName
    properties:
      DBSecurityGroupName:
        $ref: '#/definitions/[object Object]'
      CIDRIP:
        $ref: '#/definitions/[object Object]'
      EC2SecurityGroupName:
        $ref: '#/definitions/[object Object]'
      EC2SecurityGroupId:
        $ref: '#/definitions/[object Object]'
      EC2SecurityGroupOwnerId:
        $ref: '#/definitions/[object Object]'
  DBSecurityGroupNotFoundFault: {}
  InvalidDBSecurityGroupStateFault: {}
  AuthorizationAlreadyExistsFault: {}
  AuthorizationQuotaExceededFault: {}
  CopyDBSnapshotResult:
    type: object
    properties:
      DBSnapshot:
        $ref: '#/definitions/[object Object]'
  CopyDBSnapshotMessage:
    type: object
    required:
      - SourceDBSnapshotIdentifier
      - TargetDBSnapshotIdentifier
    properties:
      SourceDBSnapshotIdentifier:
        $ref: '#/definitions/[object Object]'
      TargetDBSnapshotIdentifier:
        $ref: '#/definitions/[object Object]'
  DBSnapshotAlreadyExistsFault: {}
  InvalidDBSnapshotStateFault: {}
  SnapshotQuotaExceededFault: {}
  CreateDBInstanceResult:
    type: object
    properties:
      DBInstance:
        $ref: '#/definitions/[object Object]'
  CreateDBInstanceMessage:
    type: object
    required:
      - DBInstanceIdentifier
      - AllocatedStorage
      - DBInstanceClass
      - Engine
      - MasterUsername
      - MasterUserPassword
    properties:
      DBName:
        $ref: '#/definitions/[object Object]'
      DBInstanceIdentifier:
        $ref: '#/definitions/[object Object]'
      AllocatedStorage:
        $ref: '#/definitions/[object Object]'
      DBInstanceClass:
        $ref: '#/definitions/[object Object]'
      Engine:
        $ref: '#/definitions/[object Object]'
      MasterUsername:
        $ref: '#/definitions/[object Object]'
      MasterUserPassword:
        $ref: '#/definitions/[object Object]'
      DBSecurityGroups:
        $ref: '#/definitions/[object Object]'
      VpcSecurityGroupIds:
        $ref: '#/definitions/[object Object]'
      AvailabilityZone:
        $ref: '#/definitions/[object Object]'
      DBSubnetGroupName:
        $ref: '#/definitions/[object Object]'
      PreferredMaintenanceWindow:
        $ref: '#/definitions/[object Object]'
      DBParameterGroupName:
        $ref: '#/definitions/[object Object]'
      BackupRetentionPeriod:
        $ref: '#/definitions/[object Object]'
      PreferredBackupWindow:
        $ref: '#/definitions/[object Object]'
      Port:
        $ref: '#/definitions/[object Object]'
      MultiAZ:
        $ref: '#/definitions/[object Object]'
      EngineVersion:
        $ref: '#/definitions/[object Object]'
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/[object Object]'
      LicenseModel:
        $ref: '#/definitions/[object Object]'
      Iops:
        $ref: '#/definitions/[object Object]'
      OptionGroupName:
        $ref: '#/definitions/[object Object]'
      CharacterSetName:
        $ref: '#/definitions/[object Object]'
      PubliclyAccessible:
        $ref: '#/definitions/[object Object]'
  DBInstanceAlreadyExistsFault: {}
  InsufficientDBInstanceCapacityFault: {}
  DBParameterGroupNotFoundFault: {}
  InstanceQuotaExceededFault: {}
  StorageQuotaExceededFault: {}
  DBSubnetGroupNotFoundFault: {}
  DBSubnetGroupDoesNotCoverEnoughAZs: {}
  InvalidSubnet: {}
  InvalidVPCNetworkStateFault: {}
  ProvisionedIopsNotAvailableInAZFault: {}
  OptionGroupNotFoundFault: {}
  CreateDBInstanceReadReplicaResult:
    type: object
    properties:
      DBInstance:
        $ref: '#/definitions/[object Object]'
  CreateDBInstanceReadReplicaMessage:
    type: object
    required:
      - DBInstanceIdentifier
      - SourceDBInstanceIdentifier
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/[object Object]'
      SourceDBInstanceIdentifier:
        $ref: '#/definitions/[object Object]'
      DBInstanceClass:
        $ref: '#/definitions/[object Object]'
      AvailabilityZone:
        $ref: '#/definitions/[object Object]'
      Port:
        $ref: '#/definitions/[object Object]'
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/[object Object]'
      Iops:
        $ref: '#/definitions/[object Object]'
      OptionGroupName:
        $ref: '#/definitions/[object Object]'
      PubliclyAccessible:
        $ref: '#/definitions/[object Object]'
  InvalidDBInstanceStateFault: {}
  CreateDBParameterGroupResult:
    type: object
    properties:
      DBParameterGroup:
        $ref: '#/definitions/[object Object]'
  CreateDBParameterGroupMessage:
    type: object
    required:
      - DBParameterGroupName
      - DBParameterGroupFamily
      - Description
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/[object Object]'
      DBParameterGroupFamily:
        $ref: '#/definitions/[object Object]'
      Description:
        $ref: '#/definitions/[object Object]'
  DBParameterGroupQuotaExceededFault: {}
  DBParameterGroupAlreadyExistsFault: {}
  CreateDBSecurityGroupResult:
    type: object
    properties:
      DBSecurityGroup:
        $ref: '#/definitions/[object Object]'
  CreateDBSecurityGroupMessage:
    type: object
    required:
      - DBSecurityGroupName
      - DBSecurityGroupDescription
    properties:
      DBSecurityGroupName:
        $ref: '#/definitions/[object Object]'
      DBSecurityGroupDescription:
        $ref: '#/definitions/[object Object]'
  DBSecurityGroupAlreadyExistsFault: {}
  DBSecurityGroupQuotaExceededFault: {}
  DBSecurityGroupNotSupportedFault: {}
  CreateDBSnapshotResult:
    type: object
    properties:
      DBSnapshot:
        $ref: '#/definitions/[object Object]'
  CreateDBSnapshotMessage:
    type: object
    required:
      - DBSnapshotIdentifier
      - DBInstanceIdentifier
    properties:
      DBSnapshotIdentifier:
        $ref: '#/definitions/[object Object]'
      DBInstanceIdentifier:
        $ref: '#/definitions/[object Object]'
  CreateDBSubnetGroupResult:
    type: object
    properties:
      DBSubnetGroup:
        $ref: '#/definitions/[object Object]'
  CreateDBSubnetGroupMessage:
    type: object
    required:
      - DBSubnetGroupName
      - DBSubnetGroupDescription
      - SubnetIds
    properties:
      DBSubnetGroupName:
        $ref: '#/definitions/[object Object]'
      DBSubnetGroupDescription:
        $ref: '#/definitions/[object Object]'
      SubnetIds:
        $ref: '#/definitions/[object Object]'
  DBSubnetGroupAlreadyExistsFault: {}
  DBSubnetGroupQuotaExceededFault: {}
  DBSubnetQuotaExceededFault: {}
  CreateEventSubscriptionResult:
    type: object
    properties:
      EventSubscription:
        $ref: '#/definitions/[object Object]'
  CreateEventSubscriptionMessage:
    type: object
    required:
      - SubscriptionName
      - SnsTopicArn
    properties:
      SubscriptionName:
        $ref: '#/definitions/[object Object]'
      SnsTopicArn:
        $ref: '#/definitions/[object Object]'
      SourceType:
        $ref: '#/definitions/[object Object]'
      EventCategories:
        $ref: '#/definitions/[object Object]'
      SourceIds:
        $ref: '#/definitions/[object Object]'
      Enabled:
        $ref: '#/definitions/[object Object]'
  EventSubscriptionQuotaExceededFault: {}
  SubscriptionAlreadyExistFault: {}
  SNSInvalidTopicFault: {}
  SNSNoAuthorizationFault: {}
  SNSTopicArnNotFoundFault: {}
  SubscriptionCategoryNotFoundFault: {}
  CreateOptionGroupResult:
    type: object
    properties:
      OptionGroup:
        $ref: '#/definitions/[object Object]'
  CreateOptionGroupMessage:
    type: object
    required:
      - OptionGroupName
      - EngineName
      - MajorEngineVersion
      - OptionGroupDescription
    properties:
      OptionGroupName:
        $ref: '#/definitions/[object Object]'
      EngineName:
        $ref: '#/definitions/[object Object]'
      MajorEngineVersion:
        $ref: '#/definitions/[object Object]'
      OptionGroupDescription:
        $ref: '#/definitions/[object Object]'
  OptionGroupAlreadyExistsFault: {}
  OptionGroupQuotaExceededFault: {}
  DeleteDBInstanceResult:
    type: object
    properties:
      DBInstance:
        $ref: '#/definitions/[object Object]'
  DeleteDBInstanceMessage:
    type: object
    required:
      - DBInstanceIdentifier
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/[object Object]'
      SkipFinalSnapshot:
        $ref: '#/definitions/[object Object]'
      FinalDBSnapshotIdentifier:
        $ref: '#/definitions/[object Object]'
  DeleteDBParameterGroupMessage:
    type: object
    required:
      - DBParameterGroupName
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/[object Object]'
  InvalidDBParameterGroupStateFault: {}
  DeleteDBSecurityGroupMessage:
    type: object
    required:
      - DBSecurityGroupName
    properties:
      DBSecurityGroupName:
        $ref: '#/definitions/[object Object]'
  DeleteDBSnapshotResult:
    type: object
    properties:
      DBSnapshot:
        $ref: '#/definitions/[object Object]'
  DeleteDBSnapshotMessage:
    type: object
    required:
      - DBSnapshotIdentifier
    properties:
      DBSnapshotIdentifier:
        $ref: '#/definitions/[object Object]'
  DeleteDBSubnetGroupMessage:
    type: object
    required:
      - DBSubnetGroupName
    properties:
      DBSubnetGroupName:
        $ref: '#/definitions/[object Object]'
  InvalidDBSubnetGroupStateFault: {}
  InvalidDBSubnetStateFault: {}
  DeleteEventSubscriptionResult:
    type: object
    properties:
      EventSubscription:
        $ref: '#/definitions/[object Object]'
  DeleteEventSubscriptionMessage:
    type: object
    required:
      - SubscriptionName
    properties:
      SubscriptionName:
        $ref: '#/definitions/[object Object]'
  InvalidEventSubscriptionStateFault: {}
  DeleteOptionGroupMessage:
    type: object
    required:
      - OptionGroupName
    properties:
      OptionGroupName:
        $ref: '#/definitions/[object Object]'
  InvalidOptionGroupStateFault: {}
  DBEngineVersionMessage:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/[object Object]'
      DBEngineVersions:
        $ref: '#/definitions/[object Object]'
  DescribeDBEngineVersionsMessage:
    type: object
    properties:
      Engine:
        $ref: '#/definitions/[object Object]'
      EngineVersion:
        $ref: '#/definitions/[object Object]'
      DBParameterGroupFamily:
        $ref: '#/definitions/[object Object]'
      MaxRecords:
        $ref: '#/definitions/[object Object]'
      Marker:
        $ref: '#/definitions/[object Object]'
      DefaultOnly:
        $ref: '#/definitions/[object Object]'
      ListSupportedCharacterSets:
        $ref: '#/definitions/[object Object]'
  DBInstanceMessage:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/[object Object]'
      DBInstances:
        $ref: '#/definitions/[object Object]'
  DescribeDBInstancesMessage:
    type: object
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/[object Object]'
      MaxRecords:
        $ref: '#/definitions/[object Object]'
      Marker:
        $ref: '#/definitions/[object Object]'
  DBParameterGroupsMessage:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/[object Object]'
      DBParameterGroups:
        $ref: '#/definitions/[object Object]'
  DescribeDBParameterGroupsMessage:
    type: object
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/[object Object]'
      MaxRecords:
        $ref: '#/definitions/[object Object]'
      Marker:
        $ref: '#/definitions/[object Object]'
  DBParameterGroupDetails:
    type: object
    properties:
      Parameters:
        $ref: '#/definitions/[object Object]'
      Marker:
        $ref: '#/definitions/[object Object]'
  DescribeDBParametersMessage:
    type: object
    required:
      - DBParameterGroupName
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/[object Object]'
      Source:
        $ref: '#/definitions/[object Object]'
      MaxRecords:
        $ref: '#/definitions/[object Object]'
      Marker:
        $ref: '#/definitions/[object Object]'
  DBSecurityGroupMessage:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/[object Object]'
      DBSecurityGroups:
        $ref: '#/definitions/[object Object]'
  DescribeDBSecurityGroupsMessage:
    type: object
    properties:
      DBSecurityGroupName:
        $ref: '#/definitions/[object Object]'
      MaxRecords:
        $ref: '#/definitions/[object Object]'
      Marker:
        $ref: '#/definitions/[object Object]'
  DBSnapshotMessage:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/[object Object]'
      DBSnapshots:
        $ref: '#/definitions/[object Object]'
  DescribeDBSnapshotsMessage:
    type: object
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/[object Object]'
      DBSnapshotIdentifier:
        $ref: '#/definitions/[object Object]'
      SnapshotType:
        $ref: '#/definitions/[object Object]'
      MaxRecords:
        $ref: '#/definitions/[object Object]'
      Marker:
        $ref: '#/definitions/[object Object]'
  DBSubnetGroupMessage:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/[object Object]'
      DBSubnetGroups:
        $ref: '#/definitions/[object Object]'
  DescribeDBSubnetGroupsMessage:
    type: object
    properties:
      DBSubnetGroupName:
        $ref: '#/definitions/[object Object]'
      MaxRecords:
        $ref: '#/definitions/[object Object]'
      Marker:
        $ref: '#/definitions/[object Object]'
  DescribeEngineDefaultParametersResult:
    type: object
    properties:
      EngineDefaults:
        $ref: '#/definitions/[object Object]'
  DescribeEngineDefaultParametersMessage:
    type: object
    required:
      - DBParameterGroupFamily
    properties:
      DBParameterGroupFamily:
        $ref: '#/definitions/[object Object]'
      MaxRecords:
        $ref: '#/definitions/[object Object]'
      Marker:
        $ref: '#/definitions/[object Object]'
  EventCategoriesMessage:
    type: object
    properties:
      EventCategoriesMapList:
        $ref: '#/definitions/[object Object]'
  DescribeEventCategoriesMessage:
    type: object
    properties:
      SourceType:
        $ref: '#/definitions/[object Object]'
  EventSubscriptionsMessage:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/[object Object]'
      EventSubscriptionsList:
        $ref: '#/definitions/[object Object]'
  DescribeEventSubscriptionsMessage:
    type: object
    properties:
      SubscriptionName:
        $ref: '#/definitions/[object Object]'
      MaxRecords:
        $ref: '#/definitions/[object Object]'
      Marker:
        $ref: '#/definitions/[object Object]'
  EventsMessage:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/[object Object]'
      Events:
        $ref: '#/definitions/[object Object]'
  DescribeEventsMessage:
    type: object
    properties:
      SourceIdentifier:
        $ref: '#/definitions/[object Object]'
      SourceType:
        $ref: '#/definitions/[object Object]'
      StartTime:
        $ref: '#/definitions/[object Object]'
      EndTime:
        $ref: '#/definitions/[object Object]'
      Duration:
        $ref: '#/definitions/[object Object]'
      EventCategories:
        $ref: '#/definitions/[object Object]'
      MaxRecords:
        $ref: '#/definitions/[object Object]'
      Marker:
        $ref: '#/definitions/[object Object]'
  OptionGroupOptionsMessage:
    type: object
    properties:
      OptionGroupOptions:
        $ref: '#/definitions/[object Object]'
      Marker:
        $ref: '#/definitions/[object Object]'
  DescribeOptionGroupOptionsMessage:
    type: object
    required:
      - EngineName
    properties:
      EngineName:
        $ref: '#/definitions/[object Object]'
      MajorEngineVersion:
        $ref: '#/definitions/[object Object]'
      MaxRecords:
        $ref: '#/definitions/[object Object]'
      Marker:
        $ref: '#/definitions/[object Object]'
  OptionGroups:
    type: object
    properties:
      OptionGroupsList:
        $ref: '#/definitions/[object Object]'
      Marker:
        $ref: '#/definitions/[object Object]'
  DescribeOptionGroupsMessage:
    type: object
    properties:
      OptionGroupName:
        $ref: '#/definitions/[object Object]'
      Marker:
        $ref: '#/definitions/[object Object]'
      MaxRecords:
        $ref: '#/definitions/[object Object]'
      EngineName:
        $ref: '#/definitions/[object Object]'
      MajorEngineVersion:
        $ref: '#/definitions/[object Object]'
  OrderableDBInstanceOptionsMessage:
    type: object
    properties:
      OrderableDBInstanceOptions:
        $ref: '#/definitions/[object Object]'
      Marker:
        $ref: '#/definitions/[object Object]'
  DescribeOrderableDBInstanceOptionsMessage:
    type: object
    required:
      - Engine
    properties:
      Engine:
        $ref: '#/definitions/[object Object]'
      EngineVersion:
        $ref: '#/definitions/[object Object]'
      DBInstanceClass:
        $ref: '#/definitions/[object Object]'
      LicenseModel:
        $ref: '#/definitions/[object Object]'
      Vpc:
        $ref: '#/definitions/[object Object]'
      MaxRecords:
        $ref: '#/definitions/[object Object]'
      Marker:
        $ref: '#/definitions/[object Object]'
  ReservedDBInstanceMessage:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/[object Object]'
      ReservedDBInstances:
        $ref: '#/definitions/[object Object]'
  DescribeReservedDBInstancesMessage:
    type: object
    properties:
      ReservedDBInstanceId:
        $ref: '#/definitions/[object Object]'
      ReservedDBInstancesOfferingId:
        $ref: '#/definitions/[object Object]'
      DBInstanceClass:
        $ref: '#/definitions/[object Object]'
      Duration:
        $ref: '#/definitions/[object Object]'
      ProductDescription:
        $ref: '#/definitions/[object Object]'
      OfferingType:
        $ref: '#/definitions/[object Object]'
      MultiAZ:
        $ref: '#/definitions/[object Object]'
      MaxRecords:
        $ref: '#/definitions/[object Object]'
      Marker:
        $ref: '#/definitions/[object Object]'
  ReservedDBInstanceNotFoundFault: {}
  ReservedDBInstancesOfferingMessage:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/[object Object]'
      ReservedDBInstancesOfferings:
        $ref: '#/definitions/[object Object]'
  DescribeReservedDBInstancesOfferingsMessage:
    type: object
    properties:
      ReservedDBInstancesOfferingId:
        $ref: '#/definitions/[object Object]'
      DBInstanceClass:
        $ref: '#/definitions/[object Object]'
      Duration:
        $ref: '#/definitions/[object Object]'
      ProductDescription:
        $ref: '#/definitions/[object Object]'
      OfferingType:
        $ref: '#/definitions/[object Object]'
      MultiAZ:
        $ref: '#/definitions/[object Object]'
      MaxRecords:
        $ref: '#/definitions/[object Object]'
      Marker:
        $ref: '#/definitions/[object Object]'
  ReservedDBInstancesOfferingNotFoundFault: {}
  TagListMessage:
    type: object
    properties:
      TagList:
        $ref: '#/definitions/[object Object]'
  ListTagsForResourceMessage:
    type: object
    required:
      - ResourceName
    properties:
      ResourceName:
        $ref: '#/definitions/[object Object]'
  ModifyDBInstanceResult:
    type: object
    properties:
      DBInstance:
        $ref: '#/definitions/[object Object]'
  ModifyDBInstanceMessage:
    type: object
    required:
      - DBInstanceIdentifier
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/[object Object]'
      AllocatedStorage:
        $ref: '#/definitions/[object Object]'
      DBInstanceClass:
        $ref: '#/definitions/[object Object]'
      DBSecurityGroups:
        $ref: '#/definitions/[object Object]'
      VpcSecurityGroupIds:
        $ref: '#/definitions/[object Object]'
      ApplyImmediately:
        $ref: '#/definitions/[object Object]'
      MasterUserPassword:
        $ref: '#/definitions/[object Object]'
      DBParameterGroupName:
        $ref: '#/definitions/[object Object]'
      BackupRetentionPeriod:
        $ref: '#/definitions/[object Object]'
      PreferredBackupWindow:
        $ref: '#/definitions/[object Object]'
      PreferredMaintenanceWindow:
        $ref: '#/definitions/[object Object]'
      MultiAZ:
        $ref: '#/definitions/[object Object]'
      EngineVersion:
        $ref: '#/definitions/[object Object]'
      AllowMajorVersionUpgrade:
        $ref: '#/definitions/[object Object]'
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/[object Object]'
      Iops:
        $ref: '#/definitions/[object Object]'
      OptionGroupName:
        $ref: '#/definitions/[object Object]'
      NewDBInstanceIdentifier:
        $ref: '#/definitions/[object Object]'
  DBUpgradeDependencyFailureFault: {}
  DBParameterGroupNameMessage:
    type: object
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/[object Object]'
  ModifyDBParameterGroupMessage:
    type: object
    required:
      - DBParameterGroupName
      - Parameters
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/[object Object]'
      Parameters:
        $ref: '#/definitions/[object Object]'
  ModifyDBSubnetGroupResult:
    type: object
    properties:
      DBSubnetGroup:
        $ref: '#/definitions/[object Object]'
  ModifyDBSubnetGroupMessage:
    type: object
    required:
      - DBSubnetGroupName
      - SubnetIds
    properties:
      DBSubnetGroupName:
        $ref: '#/definitions/[object Object]'
      DBSubnetGroupDescription:
        $ref: '#/definitions/[object Object]'
      SubnetIds:
        $ref: '#/definitions/[object Object]'
  SubnetAlreadyInUse: {}
  ModifyEventSubscriptionResult:
    type: object
    properties:
      EventSubscription:
        $ref: '#/definitions/[object Object]'
  ModifyEventSubscriptionMessage:
    type: object
    required:
      - SubscriptionName
    properties:
      SubscriptionName:
        $ref: '#/definitions/[object Object]'
      SnsTopicArn:
        $ref: '#/definitions/[object Object]'
      SourceType:
        $ref: '#/definitions/[object Object]'
      EventCategories:
        $ref: '#/definitions/[object Object]'
      Enabled:
        $ref: '#/definitions/[object Object]'
  ModifyOptionGroupResult:
    type: object
    properties:
      OptionGroup:
        $ref: '#/definitions/[object Object]'
  ModifyOptionGroupMessage:
    type: object
    required:
      - OptionGroupName
    properties:
      OptionGroupName:
        $ref: '#/definitions/[object Object]'
      OptionsToInclude:
        $ref: '#/definitions/[object Object]'
      OptionsToRemove:
        $ref: '#/definitions/[object Object]'
      ApplyImmediately:
        $ref: '#/definitions/[object Object]'
  PromoteReadReplicaResult:
    type: object
    properties:
      DBInstance:
        $ref: '#/definitions/[object Object]'
  PromoteReadReplicaMessage:
    type: object
    required:
      - DBInstanceIdentifier
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/[object Object]'
      BackupRetentionPeriod:
        $ref: '#/definitions/[object Object]'
      PreferredBackupWindow:
        $ref: '#/definitions/[object Object]'
  PurchaseReservedDBInstancesOfferingResult:
    type: object
    properties:
      ReservedDBInstance:
        $ref: '#/definitions/[object Object]'
  PurchaseReservedDBInstancesOfferingMessage:
    type: object
    required:
      - ReservedDBInstancesOfferingId
    properties:
      ReservedDBInstancesOfferingId:
        $ref: '#/definitions/[object Object]'
      ReservedDBInstanceId:
        $ref: '#/definitions/[object Object]'
      DBInstanceCount:
        $ref: '#/definitions/[object Object]'
  ReservedDBInstanceAlreadyExistsFault: {}
  ReservedDBInstanceQuotaExceededFault: {}
  RebootDBInstanceResult:
    type: object
    properties:
      DBInstance:
        $ref: '#/definitions/[object Object]'
  RebootDBInstanceMessage:
    type: object
    required:
      - DBInstanceIdentifier
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/[object Object]'
      ForceFailover:
        $ref: '#/definitions/[object Object]'
  RemoveSourceIdentifierFromSubscriptionResult:
    type: object
    properties:
      EventSubscription:
        $ref: '#/definitions/[object Object]'
  RemoveSourceIdentifierFromSubscriptionMessage:
    type: object
    required:
      - SubscriptionName
      - SourceIdentifier
    properties:
      SubscriptionName:
        $ref: '#/definitions/[object Object]'
      SourceIdentifier:
        $ref: '#/definitions/[object Object]'
  RemoveTagsFromResourceMessage:
    type: object
    required:
      - ResourceName
      - TagKeys
    properties:
      ResourceName:
        $ref: '#/definitions/[object Object]'
      TagKeys:
        $ref: '#/definitions/[object Object]'
  ResetDBParameterGroupMessage:
    type: object
    required:
      - DBParameterGroupName
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/[object Object]'
      ResetAllParameters:
        $ref: '#/definitions/[object Object]'
      Parameters:
        $ref: '#/definitions/[object Object]'
  RestoreDBInstanceFromDBSnapshotResult:
    type: object
    properties:
      DBInstance:
        $ref: '#/definitions/[object Object]'
  RestoreDBInstanceFromDBSnapshotMessage:
    type: object
    required:
      - DBInstanceIdentifier
      - DBSnapshotIdentifier
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/[object Object]'
      DBSnapshotIdentifier:
        $ref: '#/definitions/[object Object]'
      DBInstanceClass:
        $ref: '#/definitions/[object Object]'
      Port:
        $ref: '#/definitions/[object Object]'
      AvailabilityZone:
        $ref: '#/definitions/[object Object]'
      DBSubnetGroupName:
        $ref: '#/definitions/[object Object]'
      MultiAZ:
        $ref: '#/definitions/[object Object]'
      PubliclyAccessible:
        $ref: '#/definitions/[object Object]'
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/[object Object]'
      LicenseModel:
        $ref: '#/definitions/[object Object]'
      DBName:
        $ref: '#/definitions/[object Object]'
      Engine:
        $ref: '#/definitions/[object Object]'
      Iops:
        $ref: '#/definitions/[object Object]'
      OptionGroupName:
        $ref: '#/definitions/[object Object]'
  InvalidRestoreFault: {}
  RestoreDBInstanceToPointInTimeResult:
    type: object
    properties:
      DBInstance:
        $ref: '#/definitions/[object Object]'
  RestoreDBInstanceToPointInTimeMessage:
    type: object
    required:
      - SourceDBInstanceIdentifier
      - TargetDBInstanceIdentifier
    properties:
      SourceDBInstanceIdentifier:
        $ref: '#/definitions/[object Object]'
      TargetDBInstanceIdentifier:
        $ref: '#/definitions/[object Object]'
      RestoreTime:
        $ref: '#/definitions/[object Object]'
      UseLatestRestorableTime:
        $ref: '#/definitions/[object Object]'
      DBInstanceClass:
        $ref: '#/definitions/[object Object]'
      Port:
        $ref: '#/definitions/[object Object]'
      AvailabilityZone:
        $ref: '#/definitions/[object Object]'
      DBSubnetGroupName:
        $ref: '#/definitions/[object Object]'
      MultiAZ:
        $ref: '#/definitions/[object Object]'
      PubliclyAccessible:
        $ref: '#/definitions/[object Object]'
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/[object Object]'
      LicenseModel:
        $ref: '#/definitions/[object Object]'
      DBName:
        $ref: '#/definitions/[object Object]'
      Engine:
        $ref: '#/definitions/[object Object]'
      Iops:
        $ref: '#/definitions/[object Object]'
      OptionGroupName:
        $ref: '#/definitions/[object Object]'
  PointInTimeRestoreNotEnabledFault: {}
  RevokeDBSecurityGroupIngressResult:
    type: object
    properties:
      DBSecurityGroup:
        $ref: '#/definitions/[object Object]'
  RevokeDBSecurityGroupIngressMessage:
    type: object
    required:
      - DBSecurityGroupName
    properties:
      DBSecurityGroupName:
        $ref: '#/definitions/[object Object]'
      CIDRIP:
        $ref: '#/definitions/[object Object]'
      EC2SecurityGroupName:
        $ref: '#/definitions/[object Object]'
      EC2SecurityGroupId:
        $ref: '#/definitions/[object Object]'
      EC2SecurityGroupOwnerId:
        $ref: '#/definitions/[object Object]'
  AuthorizationNotFoundFault: {}
  '[object Object]': {}
  ApplyMethod:
    type: string
    enum:
      - immediate
      - pending-reboot
  AvailabilityZone:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
      ProvisionedIopsCapable:
        $ref: '#/definitions/[object Object]'
  AvailabilityZoneList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  Boolean:
    type: boolean
  BooleanOptional:
    type: boolean
  CharacterSet:
    type: object
    properties:
      CharacterSetName:
        $ref: '#/definitions/[object Object]'
      CharacterSetDescription:
        $ref: '#/definitions/[object Object]'
  DBEngineVersion:
    type: object
    properties:
      Engine:
        $ref: '#/definitions/[object Object]'
      EngineVersion:
        $ref: '#/definitions/[object Object]'
      DBParameterGroupFamily:
        $ref: '#/definitions/[object Object]'
      DBEngineDescription:
        $ref: '#/definitions/[object Object]'
      DBEngineVersionDescription:
        $ref: '#/definitions/[object Object]'
      DefaultCharacterSet:
        $ref: '#/definitions/[object Object]'
      SupportedCharacterSets:
        $ref: '#/definitions/[object Object]'
  DBEngineVersionList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  DBInstance:
    type: object
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/[object Object]'
      DBInstanceClass:
        $ref: '#/definitions/[object Object]'
      Engine:
        $ref: '#/definitions/[object Object]'
      DBInstanceStatus:
        $ref: '#/definitions/[object Object]'
      MasterUsername:
        $ref: '#/definitions/[object Object]'
      DBName:
        $ref: '#/definitions/[object Object]'
      Endpoint:
        $ref: '#/definitions/[object Object]'
      AllocatedStorage:
        $ref: '#/definitions/[object Object]'
      InstanceCreateTime:
        $ref: '#/definitions/[object Object]'
      PreferredBackupWindow:
        $ref: '#/definitions/[object Object]'
      BackupRetentionPeriod:
        $ref: '#/definitions/[object Object]'
      DBSecurityGroups:
        $ref: '#/definitions/[object Object]'
      VpcSecurityGroups:
        $ref: '#/definitions/[object Object]'
      DBParameterGroups:
        $ref: '#/definitions/[object Object]'
      AvailabilityZone:
        $ref: '#/definitions/[object Object]'
      DBSubnetGroup:
        $ref: '#/definitions/[object Object]'
      PreferredMaintenanceWindow:
        $ref: '#/definitions/[object Object]'
      PendingModifiedValues:
        $ref: '#/definitions/[object Object]'
      LatestRestorableTime:
        $ref: '#/definitions/[object Object]'
      MultiAZ:
        $ref: '#/definitions/[object Object]'
      EngineVersion:
        $ref: '#/definitions/[object Object]'
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/[object Object]'
      ReadReplicaSourceDBInstanceIdentifier:
        $ref: '#/definitions/[object Object]'
      ReadReplicaDBInstanceIdentifiers:
        $ref: '#/definitions/[object Object]'
      LicenseModel:
        $ref: '#/definitions/[object Object]'
      Iops:
        $ref: '#/definitions/[object Object]'
      OptionGroupMembership:
        $ref: '#/definitions/[object Object]'
      CharacterSetName:
        $ref: '#/definitions/[object Object]'
      SecondaryAvailabilityZone:
        $ref: '#/definitions/[object Object]'
      PubliclyAccessible:
        $ref: '#/definitions/[object Object]'
  DBInstanceList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  DBParameterGroup:
    type: object
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/[object Object]'
      DBParameterGroupFamily:
        $ref: '#/definitions/[object Object]'
      Description:
        $ref: '#/definitions/[object Object]'
  DBParameterGroupList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  DBParameterGroupStatus:
    type: object
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/[object Object]'
      ParameterApplyStatus:
        $ref: '#/definitions/[object Object]'
  DBParameterGroupStatusList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  DBSecurityGroup:
    type: object
    properties:
      OwnerId:
        $ref: '#/definitions/[object Object]'
      DBSecurityGroupName:
        $ref: '#/definitions/[object Object]'
      DBSecurityGroupDescription:
        $ref: '#/definitions/[object Object]'
      VpcId:
        $ref: '#/definitions/[object Object]'
      EC2SecurityGroups:
        $ref: '#/definitions/[object Object]'
      IPRanges:
        $ref: '#/definitions/[object Object]'
  DBSecurityGroupMembership:
    type: object
    properties:
      DBSecurityGroupName:
        $ref: '#/definitions/[object Object]'
      Status:
        $ref: '#/definitions/[object Object]'
  DBSecurityGroupMembershipList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  DBSecurityGroupNameList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  DBSecurityGroups:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  DBSnapshot:
    type: object
    properties:
      DBSnapshotIdentifier:
        $ref: '#/definitions/[object Object]'
      DBInstanceIdentifier:
        $ref: '#/definitions/[object Object]'
      SnapshotCreateTime:
        $ref: '#/definitions/[object Object]'
      Engine:
        $ref: '#/definitions/[object Object]'
      AllocatedStorage:
        $ref: '#/definitions/[object Object]'
      Status:
        $ref: '#/definitions/[object Object]'
      Port:
        $ref: '#/definitions/[object Object]'
      AvailabilityZone:
        $ref: '#/definitions/[object Object]'
      VpcId:
        $ref: '#/definitions/[object Object]'
      InstanceCreateTime:
        $ref: '#/definitions/[object Object]'
      MasterUsername:
        $ref: '#/definitions/[object Object]'
      EngineVersion:
        $ref: '#/definitions/[object Object]'
      LicenseModel:
        $ref: '#/definitions/[object Object]'
      SnapshotType:
        $ref: '#/definitions/[object Object]'
      Iops:
        $ref: '#/definitions/[object Object]'
  DBSnapshotList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  DBSubnetGroup:
    type: object
    properties:
      DBSubnetGroupName:
        $ref: '#/definitions/[object Object]'
      DBSubnetGroupDescription:
        $ref: '#/definitions/[object Object]'
      VpcId:
        $ref: '#/definitions/[object Object]'
      SubnetGroupStatus:
        $ref: '#/definitions/[object Object]'
      Subnets:
        $ref: '#/definitions/[object Object]'
  DBSubnetGroups:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  Double:
    type: number
    format: double
  EC2SecurityGroup:
    type: object
    properties:
      Status:
        $ref: '#/definitions/[object Object]'
      EC2SecurityGroupName:
        $ref: '#/definitions/[object Object]'
      EC2SecurityGroupId:
        $ref: '#/definitions/[object Object]'
      EC2SecurityGroupOwnerId:
        $ref: '#/definitions/[object Object]'
  EC2SecurityGroupList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  Endpoint:
    type: object
    properties:
      Address:
        $ref: '#/definitions/[object Object]'
      Port:
        $ref: '#/definitions/[object Object]'
  EngineDefaults:
    type: object
    properties:
      DBParameterGroupFamily:
        $ref: '#/definitions/[object Object]'
      Marker:
        $ref: '#/definitions/[object Object]'
      Parameters:
        $ref: '#/definitions/[object Object]'
  Event:
    type: object
    properties:
      SourceIdentifier:
        $ref: '#/definitions/[object Object]'
      SourceType:
        $ref: '#/definitions/[object Object]'
      Message:
        $ref: '#/definitions/[object Object]'
      EventCategories:
        $ref: '#/definitions/[object Object]'
      Date:
        $ref: '#/definitions/[object Object]'
  EventCategoriesList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  EventCategoriesMap:
    type: object
    properties:
      SourceType:
        $ref: '#/definitions/[object Object]'
      EventCategories:
        $ref: '#/definitions/[object Object]'
  EventCategoriesMapList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  EventList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  EventSubscription:
    type: object
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
      CustomerAwsId:
        $ref: '#/definitions/[object Object]'
      CustSubscriptionId:
        $ref: '#/definitions/[object Object]'
      SnsTopicArn:
        $ref: '#/definitions/[object Object]'
      Status:
        $ref: '#/definitions/[object Object]'
      SubscriptionCreationTime:
        $ref: '#/definitions/[object Object]'
      SourceType:
        $ref: '#/definitions/[object Object]'
      SourceIdsList:
        $ref: '#/definitions/[object Object]'
      EventCategoriesList:
        $ref: '#/definitions/[object Object]'
      Enabled:
        $ref: '#/definitions/[object Object]'
  EventSubscriptionsList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  IPRange:
    type: object
    properties:
      Status:
        $ref: '#/definitions/[object Object]'
      CIDRIP:
        $ref: '#/definitions/[object Object]'
  IPRangeList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  Integer:
    type: integer
  IntegerOptional:
    type: integer
  KeyList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  Option:
    type: object
    properties:
      OptionName:
        $ref: '#/definitions/[object Object]'
      OptionDescription:
        $ref: '#/definitions/[object Object]'
      Port:
        $ref: '#/definitions/[object Object]'
      DBSecurityGroupMemberships:
        $ref: '#/definitions/[object Object]'
      VpcSecurityGroupMemberships:
        $ref: '#/definitions/[object Object]'
  OptionConfiguration:
    type: object
    required:
      - OptionName
    properties:
      OptionName:
        $ref: '#/definitions/[object Object]'
      Port:
        $ref: '#/definitions/[object Object]'
      DBSecurityGroupMemberships:
        $ref: '#/definitions/[object Object]'
      VpcSecurityGroupMemberships:
        $ref: '#/definitions/[object Object]'
  OptionConfigurationList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  OptionGroup:
    type: object
    properties:
      OptionGroupName:
        $ref: '#/definitions/[object Object]'
      OptionGroupDescription:
        $ref: '#/definitions/[object Object]'
      EngineName:
        $ref: '#/definitions/[object Object]'
      MajorEngineVersion:
        $ref: '#/definitions/[object Object]'
      Options:
        $ref: '#/definitions/[object Object]'
      AllowsVpcAndNonVpcInstanceMemberships:
        $ref: '#/definitions/[object Object]'
      VpcId:
        $ref: '#/definitions/[object Object]'
  OptionGroupMembership:
    type: object
    properties:
      OptionGroupName:
        $ref: '#/definitions/[object Object]'
      Status:
        $ref: '#/definitions/[object Object]'
  OptionGroupOption:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
      Description:
        $ref: '#/definitions/[object Object]'
      EngineName:
        $ref: '#/definitions/[object Object]'
      MajorEngineVersion:
        $ref: '#/definitions/[object Object]'
      MinimumRequiredMinorEngineVersion:
        $ref: '#/definitions/[object Object]'
      PortRequired:
        $ref: '#/definitions/[object Object]'
      DefaultPort:
        $ref: '#/definitions/[object Object]'
      OptionsDependedOn:
        $ref: '#/definitions/[object Object]'
  OptionGroupOptionsList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  OptionGroupsList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  OptionNamesList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  OptionsDependedOn:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  OptionsList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  OrderableDBInstanceOption:
    type: object
    properties:
      Engine:
        $ref: '#/definitions/[object Object]'
      EngineVersion:
        $ref: '#/definitions/[object Object]'
      DBInstanceClass:
        $ref: '#/definitions/[object Object]'
      LicenseModel:
        $ref: '#/definitions/[object Object]'
      AvailabilityZones:
        $ref: '#/definitions/[object Object]'
      MultiAZCapable:
        $ref: '#/definitions/[object Object]'
      ReadReplicaCapable:
        $ref: '#/definitions/[object Object]'
      Vpc:
        $ref: '#/definitions/[object Object]'
  OrderableDBInstanceOptionsList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  Parameter:
    type: object
    properties:
      ParameterName:
        $ref: '#/definitions/[object Object]'
      ParameterValue:
        $ref: '#/definitions/[object Object]'
      Description:
        $ref: '#/definitions/[object Object]'
      Source:
        $ref: '#/definitions/[object Object]'
      ApplyType:
        $ref: '#/definitions/[object Object]'
      DataType:
        $ref: '#/definitions/[object Object]'
      AllowedValues:
        $ref: '#/definitions/[object Object]'
      IsModifiable:
        $ref: '#/definitions/[object Object]'
      MinimumEngineVersion:
        $ref: '#/definitions/[object Object]'
      ApplyMethod:
        $ref: '#/definitions/[object Object]'
  ParametersList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  PendingModifiedValues:
    type: object
    properties:
      DBInstanceClass:
        $ref: '#/definitions/[object Object]'
      AllocatedStorage:
        $ref: '#/definitions/[object Object]'
      MasterUserPassword:
        $ref: '#/definitions/[object Object]'
      Port:
        $ref: '#/definitions/[object Object]'
      BackupRetentionPeriod:
        $ref: '#/definitions/[object Object]'
      MultiAZ:
        $ref: '#/definitions/[object Object]'
      EngineVersion:
        $ref: '#/definitions/[object Object]'
      Iops:
        $ref: '#/definitions/[object Object]'
      DBInstanceIdentifier:
        $ref: '#/definitions/[object Object]'
  ReadReplicaDBInstanceIdentifierList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  RecurringCharge:
    type: object
    properties:
      RecurringChargeAmount:
        $ref: '#/definitions/[object Object]'
      RecurringChargeFrequency:
        $ref: '#/definitions/[object Object]'
  RecurringChargeList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ReservedDBInstance:
    type: object
    properties:
      ReservedDBInstanceId:
        $ref: '#/definitions/[object Object]'
      ReservedDBInstancesOfferingId:
        $ref: '#/definitions/[object Object]'
      DBInstanceClass:
        $ref: '#/definitions/[object Object]'
      StartTime:
        $ref: '#/definitions/[object Object]'
      Duration:
        $ref: '#/definitions/[object Object]'
      FixedPrice:
        $ref: '#/definitions/[object Object]'
      UsagePrice:
        $ref: '#/definitions/[object Object]'
      CurrencyCode:
        $ref: '#/definitions/[object Object]'
      DBInstanceCount:
        $ref: '#/definitions/[object Object]'
      ProductDescription:
        $ref: '#/definitions/[object Object]'
      OfferingType:
        $ref: '#/definitions/[object Object]'
      MultiAZ:
        $ref: '#/definitions/[object Object]'
      State:
        $ref: '#/definitions/[object Object]'
      RecurringCharges:
        $ref: '#/definitions/[object Object]'
  ReservedDBInstanceList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ReservedDBInstancesOffering:
    type: object
    properties:
      ReservedDBInstancesOfferingId:
        $ref: '#/definitions/[object Object]'
      DBInstanceClass:
        $ref: '#/definitions/[object Object]'
      Duration:
        $ref: '#/definitions/[object Object]'
      FixedPrice:
        $ref: '#/definitions/[object Object]'
      UsagePrice:
        $ref: '#/definitions/[object Object]'
      CurrencyCode:
        $ref: '#/definitions/[object Object]'
      ProductDescription:
        $ref: '#/definitions/[object Object]'
      OfferingType:
        $ref: '#/definitions/[object Object]'
      MultiAZ:
        $ref: '#/definitions/[object Object]'
      RecurringCharges:
        $ref: '#/definitions/[object Object]'
  ReservedDBInstancesOfferingList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  SourceIdsList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  SourceType:
    type: string
    enum:
      - db-instance
      - db-parameter-group
      - db-security-group
      - db-snapshot
  String:
    type: string
  Subnet:
    type: object
    properties:
      SubnetIdentifier:
        $ref: '#/definitions/[object Object]'
      SubnetAvailabilityZone:
        $ref: '#/definitions/[object Object]'
      SubnetStatus:
        $ref: '#/definitions/[object Object]'
  SubnetIdentifierList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  SubnetList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  SupportedCharacterSetsList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  TStamp:
    type: string
    format: date-time
  Tag:
    type: object
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
      Value:
        $ref: '#/definitions/[object Object]'
  TagList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  VpcSecurityGroupIdList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  VpcSecurityGroupMembership:
    type: object
    properties:
      VpcSecurityGroupId:
        $ref: '#/definitions/[object Object]'
      Status:
        $ref: '#/definitions/[object Object]'
  VpcSecurityGroupMembershipList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
