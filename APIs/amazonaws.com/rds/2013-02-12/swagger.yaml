swagger: '2.0'
schemes:
  - https
  - http
host: rds.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon Relational Database Service
  version: '2013-02-12'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/rds-2013-02-12.normal.json'
      x-apisguru-direct: true
  x-preferred: false
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: rds
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/rds/'
consumes:
  - text/xml
produces:
  - text/xml
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  '/#Action=AddSourceIdentifierToSubscription':
    get:
      description: ''
      operationId: GET AddSourceIdentifierToSubscription
      parameters:
        - description: ''
          in: query
          name: SubscriptionName
          required: true
          type: string
        - description: ''
          in: query
          name: SourceIdentifier
          required: true
          type: string
        - enum:
            - AddSourceIdentifierToSubscription
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddSourceIdentifierToSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
        '481':
          description: SourceNotFoundFault
          schema:
            $ref: '#/definitions/SourceNotFoundFault'
      x-aws-operation-name: AddSourceIdentifierToSubscription
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST AddSourceIdentifierToSubscription
      parameters:
        - description: ''
          in: formData
          name: SubscriptionName
          required: true
          type: string
        - description: ''
          in: formData
          name: SourceIdentifier
          required: true
          type: string
        - enum:
            - AddSourceIdentifierToSubscription
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddSourceIdentifierToSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
        '481':
          description: SourceNotFoundFault
          schema:
            $ref: '#/definitions/SourceNotFoundFault'
      x-aws-operation-name: AddSourceIdentifierToSubscription
  '/#Action=AddTagsToResource':
    get:
      description: ''
      operationId: GET AddTagsToResource
      parameters:
        - description: ''
          in: query
          name: ResourceName
          required: true
          type: string
        - description: ''
          in: query
          items:
            type: string
          name: Tags
          required: true
          type: array
        - enum:
            - AddTagsToResource
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      x-aws-operation-name: AddTagsToResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST AddTagsToResource
      parameters:
        - description: ''
          in: formData
          name: ResourceName
          required: true
          type: string
        - description: ''
          in: formData
          items:
            type: string
          name: Tags
          required: true
          type: array
        - enum:
            - AddTagsToResource
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      x-aws-operation-name: AddTagsToResource
  '/#Action=AuthorizeDBSecurityGroupIngress':
    get:
      description: ''
      operationId: GET AuthorizeDBSecurityGroupIngress
      parameters:
        - description: ''
          in: query
          name: DBSecurityGroupName
          required: true
          type: string
        - description: ''
          in: query
          name: CIDRIP
          required: false
          type: string
        - description: ''
          in: query
          name: EC2SecurityGroupName
          required: false
          type: string
        - description: ''
          in: query
          name: EC2SecurityGroupId
          required: false
          type: string
        - description: ''
          in: query
          name: EC2SecurityGroupOwnerId
          required: false
          type: string
        - enum:
            - AuthorizeDBSecurityGroupIngress
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuthorizeDBSecurityGroupIngressResult'
        '480':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '481':
          description: InvalidDBSecurityGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSecurityGroupStateFault'
        '482':
          description: AuthorizationAlreadyExistsFault
          schema:
            $ref: '#/definitions/AuthorizationAlreadyExistsFault'
        '483':
          description: AuthorizationQuotaExceededFault
          schema:
            $ref: '#/definitions/AuthorizationQuotaExceededFault'
      x-aws-operation-name: AuthorizeDBSecurityGroupIngress
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST AuthorizeDBSecurityGroupIngress
      parameters:
        - description: ''
          in: formData
          name: DBSecurityGroupName
          required: true
          type: string
        - description: ''
          in: formData
          name: CIDRIP
          required: false
          type: string
        - description: ''
          in: formData
          name: EC2SecurityGroupName
          required: false
          type: string
        - description: ''
          in: formData
          name: EC2SecurityGroupId
          required: false
          type: string
        - description: ''
          in: formData
          name: EC2SecurityGroupOwnerId
          required: false
          type: string
        - enum:
            - AuthorizeDBSecurityGroupIngress
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuthorizeDBSecurityGroupIngressResult'
        '480':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '481':
          description: InvalidDBSecurityGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSecurityGroupStateFault'
        '482':
          description: AuthorizationAlreadyExistsFault
          schema:
            $ref: '#/definitions/AuthorizationAlreadyExistsFault'
        '483':
          description: AuthorizationQuotaExceededFault
          schema:
            $ref: '#/definitions/AuthorizationQuotaExceededFault'
      x-aws-operation-name: AuthorizeDBSecurityGroupIngress
  '/#Action=CopyDBSnapshot':
    get:
      description: ''
      operationId: GET CopyDBSnapshot
      parameters:
        - description: ''
          in: query
          name: SourceDBSnapshotIdentifier
          required: true
          type: string
        - description: ''
          in: query
          name: TargetDBSnapshotIdentifier
          required: true
          type: string
        - enum:
            - CopyDBSnapshot
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CopyDBSnapshotResult'
        '480':
          description: DBSnapshotAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSnapshotAlreadyExistsFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
        '482':
          description: InvalidDBSnapshotStateFault
          schema:
            $ref: '#/definitions/InvalidDBSnapshotStateFault'
        '483':
          description: SnapshotQuotaExceededFault
          schema:
            $ref: '#/definitions/SnapshotQuotaExceededFault'
      x-aws-operation-name: CopyDBSnapshot
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST CopyDBSnapshot
      parameters:
        - description: ''
          in: formData
          name: SourceDBSnapshotIdentifier
          required: true
          type: string
        - description: ''
          in: formData
          name: TargetDBSnapshotIdentifier
          required: true
          type: string
        - enum:
            - CopyDBSnapshot
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CopyDBSnapshotResult'
        '480':
          description: DBSnapshotAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSnapshotAlreadyExistsFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
        '482':
          description: InvalidDBSnapshotStateFault
          schema:
            $ref: '#/definitions/InvalidDBSnapshotStateFault'
        '483':
          description: SnapshotQuotaExceededFault
          schema:
            $ref: '#/definitions/SnapshotQuotaExceededFault'
      x-aws-operation-name: CopyDBSnapshot
  '/#Action=CreateDBInstance':
    get:
      description: ''
      operationId: GET CreateDBInstance
      parameters:
        - description: ''
          in: query
          name: DBName
          required: false
          type: string
        - description: ''
          in: query
          name: DBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: query
          name: AllocatedStorage
          required: true
          type: integer
        - description: ''
          in: query
          name: DBInstanceClass
          required: true
          type: string
        - description: ''
          in: query
          name: Engine
          required: true
          type: string
        - description: ''
          in: query
          name: MasterUsername
          required: true
          type: string
        - description: ''
          in: query
          name: MasterUserPassword
          required: true
          type: string
        - description: ''
          in: query
          items:
            type: string
          name: DBSecurityGroups
          required: false
          type: array
        - description: ''
          in: query
          items:
            type: string
          name: VpcSecurityGroupIds
          required: false
          type: array
        - description: ''
          in: query
          name: AvailabilityZone
          required: false
          type: string
        - description: ''
          in: query
          name: DBSubnetGroupName
          required: false
          type: string
        - description: ''
          in: query
          name: PreferredMaintenanceWindow
          required: false
          type: string
        - description: ''
          in: query
          name: DBParameterGroupName
          required: false
          type: string
        - description: ''
          in: query
          name: BackupRetentionPeriod
          required: false
          type: integer
        - description: ''
          in: query
          name: PreferredBackupWindow
          required: false
          type: string
        - description: ''
          in: query
          name: Port
          required: false
          type: integer
        - description: ''
          in: query
          name: MultiAZ
          required: false
          type: boolean
        - description: ''
          in: query
          name: EngineVersion
          required: false
          type: string
        - description: ''
          in: query
          name: AutoMinorVersionUpgrade
          required: false
          type: boolean
        - description: ''
          in: query
          name: LicenseModel
          required: false
          type: string
        - description: ''
          in: query
          name: Iops
          required: false
          type: integer
        - description: ''
          in: query
          name: OptionGroupName
          required: false
          type: string
        - description: ''
          in: query
          name: CharacterSetName
          required: false
          type: string
        - description: ''
          in: query
          name: PubliclyAccessible
          required: false
          type: boolean
        - enum:
            - CreateDBInstance
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBInstanceResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '481':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '482':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
        '483':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '484':
          description: InstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/InstanceQuotaExceededFault'
        '485':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '486':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '487':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '488':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '489':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '490':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '491':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      x-aws-operation-name: CreateDBInstance
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST CreateDBInstance
      parameters:
        - description: ''
          in: formData
          name: DBName
          required: false
          type: string
        - description: ''
          in: formData
          name: DBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: formData
          name: AllocatedStorage
          required: true
          type: integer
        - description: ''
          in: formData
          name: DBInstanceClass
          required: true
          type: string
        - description: ''
          in: formData
          name: Engine
          required: true
          type: string
        - description: ''
          in: formData
          name: MasterUsername
          required: true
          type: string
        - description: ''
          in: formData
          name: MasterUserPassword
          required: true
          type: string
        - description: ''
          in: formData
          items:
            type: string
          name: DBSecurityGroups
          required: false
          type: array
        - description: ''
          in: formData
          items:
            type: string
          name: VpcSecurityGroupIds
          required: false
          type: array
        - description: ''
          in: formData
          name: AvailabilityZone
          required: false
          type: string
        - description: ''
          in: formData
          name: DBSubnetGroupName
          required: false
          type: string
        - description: ''
          in: formData
          name: PreferredMaintenanceWindow
          required: false
          type: string
        - description: ''
          in: formData
          name: DBParameterGroupName
          required: false
          type: string
        - description: ''
          in: formData
          name: BackupRetentionPeriod
          required: false
          type: integer
        - description: ''
          in: formData
          name: PreferredBackupWindow
          required: false
          type: string
        - description: ''
          in: formData
          name: Port
          required: false
          type: integer
        - description: ''
          in: formData
          name: MultiAZ
          required: false
          type: boolean
        - description: ''
          in: formData
          name: EngineVersion
          required: false
          type: string
        - description: ''
          in: formData
          name: AutoMinorVersionUpgrade
          required: false
          type: boolean
        - description: ''
          in: formData
          name: LicenseModel
          required: false
          type: string
        - description: ''
          in: formData
          name: Iops
          required: false
          type: integer
        - description: ''
          in: formData
          name: OptionGroupName
          required: false
          type: string
        - description: ''
          in: formData
          name: CharacterSetName
          required: false
          type: string
        - description: ''
          in: formData
          name: PubliclyAccessible
          required: false
          type: boolean
        - enum:
            - CreateDBInstance
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBInstanceResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '481':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '482':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
        '483':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '484':
          description: InstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/InstanceQuotaExceededFault'
        '485':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '486':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '487':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '488':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '489':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '490':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '491':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      x-aws-operation-name: CreateDBInstance
  '/#Action=CreateDBInstanceReadReplica':
    get:
      description: ''
      operationId: GET CreateDBInstanceReadReplica
      parameters:
        - description: ''
          in: query
          name: DBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: query
          name: SourceDBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: query
          name: DBInstanceClass
          required: false
          type: string
        - description: ''
          in: query
          name: AvailabilityZone
          required: false
          type: string
        - description: ''
          in: query
          name: Port
          required: false
          type: integer
        - description: ''
          in: query
          name: AutoMinorVersionUpgrade
          required: false
          type: boolean
        - description: ''
          in: query
          name: Iops
          required: false
          type: integer
        - description: ''
          in: query
          name: OptionGroupName
          required: false
          type: string
        - description: ''
          in: query
          name: PubliclyAccessible
          required: false
          type: boolean
        - enum:
            - CreateDBInstanceReadReplica
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBInstanceReadReplicaResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '481':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '482':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
        '483':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '484':
          description: InstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/InstanceQuotaExceededFault'
        '485':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '486':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '487':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '488':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '489':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '490':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '491':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '492':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '493':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      x-aws-operation-name: CreateDBInstanceReadReplica
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST CreateDBInstanceReadReplica
      parameters:
        - description: ''
          in: formData
          name: DBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: formData
          name: SourceDBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: formData
          name: DBInstanceClass
          required: false
          type: string
        - description: ''
          in: formData
          name: AvailabilityZone
          required: false
          type: string
        - description: ''
          in: formData
          name: Port
          required: false
          type: integer
        - description: ''
          in: formData
          name: AutoMinorVersionUpgrade
          required: false
          type: boolean
        - description: ''
          in: formData
          name: Iops
          required: false
          type: integer
        - description: ''
          in: formData
          name: OptionGroupName
          required: false
          type: string
        - description: ''
          in: formData
          name: PubliclyAccessible
          required: false
          type: boolean
        - enum:
            - CreateDBInstanceReadReplica
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBInstanceReadReplicaResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '481':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '482':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
        '483':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '484':
          description: InstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/InstanceQuotaExceededFault'
        '485':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '486':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '487':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '488':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '489':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '490':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '491':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '492':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '493':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      x-aws-operation-name: CreateDBInstanceReadReplica
  '/#Action=CreateDBParameterGroup':
    get:
      description: ''
      operationId: GET CreateDBParameterGroup
      parameters:
        - description: ''
          in: query
          name: DBParameterGroupName
          required: true
          type: string
        - description: ''
          in: query
          name: DBParameterGroupFamily
          required: true
          type: string
        - description: ''
          in: query
          name: Description
          required: true
          type: string
        - enum:
            - CreateDBParameterGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBParameterGroupResult'
        '480':
          description: DBParameterGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/DBParameterGroupQuotaExceededFault'
        '481':
          description: DBParameterGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBParameterGroupAlreadyExistsFault'
      x-aws-operation-name: CreateDBParameterGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST CreateDBParameterGroup
      parameters:
        - description: ''
          in: formData
          name: DBParameterGroupName
          required: true
          type: string
        - description: ''
          in: formData
          name: DBParameterGroupFamily
          required: true
          type: string
        - description: ''
          in: formData
          name: Description
          required: true
          type: string
        - enum:
            - CreateDBParameterGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBParameterGroupResult'
        '480':
          description: DBParameterGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/DBParameterGroupQuotaExceededFault'
        '481':
          description: DBParameterGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBParameterGroupAlreadyExistsFault'
      x-aws-operation-name: CreateDBParameterGroup
  '/#Action=CreateDBSecurityGroup':
    get:
      description: ''
      operationId: GET CreateDBSecurityGroup
      parameters:
        - description: ''
          in: query
          name: DBSecurityGroupName
          required: true
          type: string
        - description: ''
          in: query
          name: DBSecurityGroupDescription
          required: true
          type: string
        - enum:
            - CreateDBSecurityGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBSecurityGroupResult'
        '480':
          description: DBSecurityGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSecurityGroupAlreadyExistsFault'
        '481':
          description: DBSecurityGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/DBSecurityGroupQuotaExceededFault'
        '482':
          description: DBSecurityGroupNotSupportedFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotSupportedFault'
      x-aws-operation-name: CreateDBSecurityGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST CreateDBSecurityGroup
      parameters:
        - description: ''
          in: formData
          name: DBSecurityGroupName
          required: true
          type: string
        - description: ''
          in: formData
          name: DBSecurityGroupDescription
          required: true
          type: string
        - enum:
            - CreateDBSecurityGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBSecurityGroupResult'
        '480':
          description: DBSecurityGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSecurityGroupAlreadyExistsFault'
        '481':
          description: DBSecurityGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/DBSecurityGroupQuotaExceededFault'
        '482':
          description: DBSecurityGroupNotSupportedFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotSupportedFault'
      x-aws-operation-name: CreateDBSecurityGroup
  '/#Action=CreateDBSnapshot':
    get:
      description: ''
      operationId: GET CreateDBSnapshot
      parameters:
        - description: ''
          in: query
          name: DBSnapshotIdentifier
          required: true
          type: string
        - description: ''
          in: query
          name: DBInstanceIdentifier
          required: true
          type: string
        - enum:
            - CreateDBSnapshot
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBSnapshotResult'
        '480':
          description: DBSnapshotAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSnapshotAlreadyExistsFault'
        '481':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '482':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '483':
          description: SnapshotQuotaExceededFault
          schema:
            $ref: '#/definitions/SnapshotQuotaExceededFault'
      x-aws-operation-name: CreateDBSnapshot
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST CreateDBSnapshot
      parameters:
        - description: ''
          in: formData
          name: DBSnapshotIdentifier
          required: true
          type: string
        - description: ''
          in: formData
          name: DBInstanceIdentifier
          required: true
          type: string
        - enum:
            - CreateDBSnapshot
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBSnapshotResult'
        '480':
          description: DBSnapshotAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSnapshotAlreadyExistsFault'
        '481':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '482':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '483':
          description: SnapshotQuotaExceededFault
          schema:
            $ref: '#/definitions/SnapshotQuotaExceededFault'
      x-aws-operation-name: CreateDBSnapshot
  '/#Action=CreateDBSubnetGroup':
    get:
      description: ''
      operationId: GET CreateDBSubnetGroup
      parameters:
        - description: ''
          in: query
          name: DBSubnetGroupName
          required: true
          type: string
        - description: ''
          in: query
          name: DBSubnetGroupDescription
          required: true
          type: string
        - description: ''
          in: query
          items:
            type: string
          name: SubnetIds
          required: true
          type: array
        - enum:
            - CreateDBSubnetGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBSubnetGroupResult'
        '480':
          description: DBSubnetGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSubnetGroupAlreadyExistsFault'
        '481':
          description: DBSubnetGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/DBSubnetGroupQuotaExceededFault'
        '482':
          description: DBSubnetQuotaExceededFault
          schema:
            $ref: '#/definitions/DBSubnetQuotaExceededFault'
        '483':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '484':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
      x-aws-operation-name: CreateDBSubnetGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST CreateDBSubnetGroup
      parameters:
        - description: ''
          in: formData
          name: DBSubnetGroupName
          required: true
          type: string
        - description: ''
          in: formData
          name: DBSubnetGroupDescription
          required: true
          type: string
        - description: ''
          in: formData
          items:
            type: string
          name: SubnetIds
          required: true
          type: array
        - enum:
            - CreateDBSubnetGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBSubnetGroupResult'
        '480':
          description: DBSubnetGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSubnetGroupAlreadyExistsFault'
        '481':
          description: DBSubnetGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/DBSubnetGroupQuotaExceededFault'
        '482':
          description: DBSubnetQuotaExceededFault
          schema:
            $ref: '#/definitions/DBSubnetQuotaExceededFault'
        '483':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '484':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
      x-aws-operation-name: CreateDBSubnetGroup
  '/#Action=CreateEventSubscription':
    get:
      description: ''
      operationId: GET CreateEventSubscription
      parameters:
        - description: ''
          in: query
          name: SubscriptionName
          required: true
          type: string
        - description: ''
          in: query
          name: SnsTopicArn
          required: true
          type: string
        - description: ''
          in: query
          name: SourceType
          required: false
          type: string
        - description: ''
          in: query
          items:
            type: string
          name: EventCategories
          required: false
          type: array
        - description: ''
          in: query
          items:
            type: string
          name: SourceIds
          required: false
          type: array
        - description: ''
          in: query
          name: Enabled
          required: false
          type: boolean
        - enum:
            - CreateEventSubscription
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateEventSubscriptionResult'
        '480':
          description: EventSubscriptionQuotaExceededFault
          schema:
            $ref: '#/definitions/EventSubscriptionQuotaExceededFault'
        '481':
          description: SubscriptionAlreadyExistFault
          schema:
            $ref: '#/definitions/SubscriptionAlreadyExistFault'
        '482':
          description: SNSInvalidTopicFault
          schema:
            $ref: '#/definitions/SNSInvalidTopicFault'
        '483':
          description: SNSNoAuthorizationFault
          schema:
            $ref: '#/definitions/SNSNoAuthorizationFault'
        '484':
          description: SNSTopicArnNotFoundFault
          schema:
            $ref: '#/definitions/SNSTopicArnNotFoundFault'
        '485':
          description: SubscriptionCategoryNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionCategoryNotFoundFault'
        '486':
          description: SourceNotFoundFault
          schema:
            $ref: '#/definitions/SourceNotFoundFault'
      x-aws-operation-name: CreateEventSubscription
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST CreateEventSubscription
      parameters:
        - description: ''
          in: formData
          name: SubscriptionName
          required: true
          type: string
        - description: ''
          in: formData
          name: SnsTopicArn
          required: true
          type: string
        - description: ''
          in: formData
          name: SourceType
          required: false
          type: string
        - description: ''
          in: formData
          items:
            type: string
          name: EventCategories
          required: false
          type: array
        - description: ''
          in: formData
          items:
            type: string
          name: SourceIds
          required: false
          type: array
        - description: ''
          in: formData
          name: Enabled
          required: false
          type: boolean
        - enum:
            - CreateEventSubscription
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateEventSubscriptionResult'
        '480':
          description: EventSubscriptionQuotaExceededFault
          schema:
            $ref: '#/definitions/EventSubscriptionQuotaExceededFault'
        '481':
          description: SubscriptionAlreadyExistFault
          schema:
            $ref: '#/definitions/SubscriptionAlreadyExistFault'
        '482':
          description: SNSInvalidTopicFault
          schema:
            $ref: '#/definitions/SNSInvalidTopicFault'
        '483':
          description: SNSNoAuthorizationFault
          schema:
            $ref: '#/definitions/SNSNoAuthorizationFault'
        '484':
          description: SNSTopicArnNotFoundFault
          schema:
            $ref: '#/definitions/SNSTopicArnNotFoundFault'
        '485':
          description: SubscriptionCategoryNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionCategoryNotFoundFault'
        '486':
          description: SourceNotFoundFault
          schema:
            $ref: '#/definitions/SourceNotFoundFault'
      x-aws-operation-name: CreateEventSubscription
  '/#Action=CreateOptionGroup':
    get:
      description: ''
      operationId: GET CreateOptionGroup
      parameters:
        - description: ''
          in: query
          name: OptionGroupName
          required: true
          type: string
        - description: ''
          in: query
          name: EngineName
          required: true
          type: string
        - description: ''
          in: query
          name: MajorEngineVersion
          required: true
          type: string
        - description: ''
          in: query
          name: OptionGroupDescription
          required: true
          type: string
        - enum:
            - CreateOptionGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateOptionGroupResult'
        '480':
          description: OptionGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/OptionGroupAlreadyExistsFault'
        '481':
          description: OptionGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/OptionGroupQuotaExceededFault'
      x-aws-operation-name: CreateOptionGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST CreateOptionGroup
      parameters:
        - description: ''
          in: formData
          name: OptionGroupName
          required: true
          type: string
        - description: ''
          in: formData
          name: EngineName
          required: true
          type: string
        - description: ''
          in: formData
          name: MajorEngineVersion
          required: true
          type: string
        - description: ''
          in: formData
          name: OptionGroupDescription
          required: true
          type: string
        - enum:
            - CreateOptionGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateOptionGroupResult'
        '480':
          description: OptionGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/OptionGroupAlreadyExistsFault'
        '481':
          description: OptionGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/OptionGroupQuotaExceededFault'
      x-aws-operation-name: CreateOptionGroup
  '/#Action=DeleteDBInstance':
    get:
      description: ''
      operationId: GET DeleteDBInstance
      parameters:
        - description: ''
          in: query
          name: DBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: query
          name: SkipFinalSnapshot
          required: false
          type: boolean
        - description: ''
          in: query
          name: FinalDBSnapshotIdentifier
          required: false
          type: string
        - enum:
            - DeleteDBInstance
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDBInstanceResult'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '482':
          description: DBSnapshotAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSnapshotAlreadyExistsFault'
        '483':
          description: SnapshotQuotaExceededFault
          schema:
            $ref: '#/definitions/SnapshotQuotaExceededFault'
      x-aws-operation-name: DeleteDBInstance
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DeleteDBInstance
      parameters:
        - description: ''
          in: formData
          name: DBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: formData
          name: SkipFinalSnapshot
          required: false
          type: boolean
        - description: ''
          in: formData
          name: FinalDBSnapshotIdentifier
          required: false
          type: string
        - enum:
            - DeleteDBInstance
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDBInstanceResult'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '482':
          description: DBSnapshotAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSnapshotAlreadyExistsFault'
        '483':
          description: SnapshotQuotaExceededFault
          schema:
            $ref: '#/definitions/SnapshotQuotaExceededFault'
      x-aws-operation-name: DeleteDBInstance
  '/#Action=DeleteDBParameterGroup':
    get:
      description: ''
      operationId: GET DeleteDBParameterGroup
      parameters:
        - description: ''
          in: query
          name: DBParameterGroupName
          required: true
          type: string
        - enum:
            - DeleteDBParameterGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBParameterGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBParameterGroupStateFault'
        '481':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
      x-aws-operation-name: DeleteDBParameterGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DeleteDBParameterGroup
      parameters:
        - description: ''
          in: formData
          name: DBParameterGroupName
          required: true
          type: string
        - enum:
            - DeleteDBParameterGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBParameterGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBParameterGroupStateFault'
        '481':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
      x-aws-operation-name: DeleteDBParameterGroup
  '/#Action=DeleteDBSecurityGroup':
    get:
      description: ''
      operationId: GET DeleteDBSecurityGroup
      parameters:
        - description: ''
          in: query
          name: DBSecurityGroupName
          required: true
          type: string
        - enum:
            - DeleteDBSecurityGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBSecurityGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSecurityGroupStateFault'
        '481':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
      x-aws-operation-name: DeleteDBSecurityGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DeleteDBSecurityGroup
      parameters:
        - description: ''
          in: formData
          name: DBSecurityGroupName
          required: true
          type: string
        - enum:
            - DeleteDBSecurityGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBSecurityGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSecurityGroupStateFault'
        '481':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
      x-aws-operation-name: DeleteDBSecurityGroup
  '/#Action=DeleteDBSnapshot':
    get:
      description: ''
      operationId: GET DeleteDBSnapshot
      parameters:
        - description: ''
          in: query
          name: DBSnapshotIdentifier
          required: true
          type: string
        - enum:
            - DeleteDBSnapshot
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDBSnapshotResult'
        '480':
          description: InvalidDBSnapshotStateFault
          schema:
            $ref: '#/definitions/InvalidDBSnapshotStateFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      x-aws-operation-name: DeleteDBSnapshot
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DeleteDBSnapshot
      parameters:
        - description: ''
          in: formData
          name: DBSnapshotIdentifier
          required: true
          type: string
        - enum:
            - DeleteDBSnapshot
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDBSnapshotResult'
        '480':
          description: InvalidDBSnapshotStateFault
          schema:
            $ref: '#/definitions/InvalidDBSnapshotStateFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      x-aws-operation-name: DeleteDBSnapshot
  '/#Action=DeleteDBSubnetGroup':
    get:
      description: ''
      operationId: GET DeleteDBSubnetGroup
      parameters:
        - description: ''
          in: query
          name: DBSubnetGroupName
          required: true
          type: string
        - enum:
            - DeleteDBSubnetGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBSubnetGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSubnetGroupStateFault'
        '481':
          description: InvalidDBSubnetStateFault
          schema:
            $ref: '#/definitions/InvalidDBSubnetStateFault'
        '482':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
      x-aws-operation-name: DeleteDBSubnetGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DeleteDBSubnetGroup
      parameters:
        - description: ''
          in: formData
          name: DBSubnetGroupName
          required: true
          type: string
        - enum:
            - DeleteDBSubnetGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBSubnetGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSubnetGroupStateFault'
        '481':
          description: InvalidDBSubnetStateFault
          schema:
            $ref: '#/definitions/InvalidDBSubnetStateFault'
        '482':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
      x-aws-operation-name: DeleteDBSubnetGroup
  '/#Action=DeleteEventSubscription':
    get:
      description: ''
      operationId: GET DeleteEventSubscription
      parameters:
        - description: ''
          in: query
          name: SubscriptionName
          required: true
          type: string
        - enum:
            - DeleteEventSubscription
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteEventSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
        '481':
          description: InvalidEventSubscriptionStateFault
          schema:
            $ref: '#/definitions/InvalidEventSubscriptionStateFault'
      x-aws-operation-name: DeleteEventSubscription
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DeleteEventSubscription
      parameters:
        - description: ''
          in: formData
          name: SubscriptionName
          required: true
          type: string
        - enum:
            - DeleteEventSubscription
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteEventSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
        '481':
          description: InvalidEventSubscriptionStateFault
          schema:
            $ref: '#/definitions/InvalidEventSubscriptionStateFault'
      x-aws-operation-name: DeleteEventSubscription
  '/#Action=DeleteOptionGroup':
    get:
      description: ''
      operationId: GET DeleteOptionGroup
      parameters:
        - description: ''
          in: query
          name: OptionGroupName
          required: true
          type: string
        - enum:
            - DeleteOptionGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
        '481':
          description: InvalidOptionGroupStateFault
          schema:
            $ref: '#/definitions/InvalidOptionGroupStateFault'
      x-aws-operation-name: DeleteOptionGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DeleteOptionGroup
      parameters:
        - description: ''
          in: formData
          name: OptionGroupName
          required: true
          type: string
        - enum:
            - DeleteOptionGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
        '481':
          description: InvalidOptionGroupStateFault
          schema:
            $ref: '#/definitions/InvalidOptionGroupStateFault'
      x-aws-operation-name: DeleteOptionGroup
  '/#Action=DescribeDBEngineVersions':
    get:
      description: ''
      operationId: GET DescribeDBEngineVersions
      parameters:
        - description: ''
          in: query
          name: Engine
          required: false
          type: string
        - description: ''
          in: query
          name: EngineVersion
          required: false
          type: string
        - description: ''
          in: query
          name: DBParameterGroupFamily
          required: false
          type: string
        - description: ''
          in: query
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: query
          name: Marker
          required: false
          type: string
        - description: ''
          in: query
          name: DefaultOnly
          required: false
          type: boolean
        - description: ''
          in: query
          name: ListSupportedCharacterSets
          required: false
          type: boolean
        - enum:
            - DescribeDBEngineVersions
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBEngineVersionMessage'
      x-aws-operation-name: DescribeDBEngineVersions
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DescribeDBEngineVersions
      parameters:
        - description: ''
          in: formData
          name: Engine
          required: false
          type: string
        - description: ''
          in: formData
          name: EngineVersion
          required: false
          type: string
        - description: ''
          in: formData
          name: DBParameterGroupFamily
          required: false
          type: string
        - description: ''
          in: formData
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: formData
          name: Marker
          required: false
          type: string
        - description: ''
          in: formData
          name: DefaultOnly
          required: false
          type: boolean
        - description: ''
          in: formData
          name: ListSupportedCharacterSets
          required: false
          type: boolean
        - enum:
            - DescribeDBEngineVersions
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBEngineVersionMessage'
      x-aws-operation-name: DescribeDBEngineVersions
  '/#Action=DescribeDBInstances':
    get:
      description: ''
      operationId: GET DescribeDBInstances
      parameters:
        - description: ''
          in: query
          name: DBInstanceIdentifier
          required: false
          type: string
        - description: ''
          in: query
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: query
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeDBInstances
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBInstanceMessage'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
      x-aws-operation-name: DescribeDBInstances
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DescribeDBInstances
      parameters:
        - description: ''
          in: formData
          name: DBInstanceIdentifier
          required: false
          type: string
        - description: ''
          in: formData
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: formData
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeDBInstances
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBInstanceMessage'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
      x-aws-operation-name: DescribeDBInstances
  '/#Action=DescribeDBLogFiles':
    get:
      description: ''
      operationId: GET DescribeDBLogFiles
      parameters:
        - description: ''
          in: query
          name: DBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: query
          name: FilenameContains
          required: false
          type: string
        - description: ''
          in: query
          name: FileLastWritten
          required: false
          type: integer
        - description: ''
          in: query
          name: FileSize
          required: false
          type: integer
        - description: ''
          in: query
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: query
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeDBLogFiles
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDBLogFilesResponse'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
      x-aws-operation-name: DescribeDBLogFiles
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DescribeDBLogFiles
      parameters:
        - description: ''
          in: formData
          name: DBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: formData
          name: FilenameContains
          required: false
          type: string
        - description: ''
          in: formData
          name: FileLastWritten
          required: false
          type: integer
        - description: ''
          in: formData
          name: FileSize
          required: false
          type: integer
        - description: ''
          in: formData
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: formData
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeDBLogFiles
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDBLogFilesResponse'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
      x-aws-operation-name: DescribeDBLogFiles
  '/#Action=DescribeDBParameterGroups':
    get:
      description: ''
      operationId: GET DescribeDBParameterGroups
      parameters:
        - description: ''
          in: query
          name: DBParameterGroupName
          required: false
          type: string
        - description: ''
          in: query
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: query
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeDBParameterGroups
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBParameterGroupsMessage'
        '480':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
      x-aws-operation-name: DescribeDBParameterGroups
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DescribeDBParameterGroups
      parameters:
        - description: ''
          in: formData
          name: DBParameterGroupName
          required: false
          type: string
        - description: ''
          in: formData
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: formData
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeDBParameterGroups
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBParameterGroupsMessage'
        '480':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
      x-aws-operation-name: DescribeDBParameterGroups
  '/#Action=DescribeDBParameters':
    get:
      description: ''
      operationId: GET DescribeDBParameters
      parameters:
        - description: ''
          in: query
          name: DBParameterGroupName
          required: true
          type: string
        - description: ''
          in: query
          name: Source
          required: false
          type: string
        - description: ''
          in: query
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: query
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeDBParameters
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBParameterGroupDetails'
        '480':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
      x-aws-operation-name: DescribeDBParameters
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DescribeDBParameters
      parameters:
        - description: ''
          in: formData
          name: DBParameterGroupName
          required: true
          type: string
        - description: ''
          in: formData
          name: Source
          required: false
          type: string
        - description: ''
          in: formData
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: formData
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeDBParameters
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBParameterGroupDetails'
        '480':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
      x-aws-operation-name: DescribeDBParameters
  '/#Action=DescribeDBSecurityGroups':
    get:
      description: ''
      operationId: GET DescribeDBSecurityGroups
      parameters:
        - description: ''
          in: query
          name: DBSecurityGroupName
          required: false
          type: string
        - description: ''
          in: query
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: query
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeDBSecurityGroups
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBSecurityGroupMessage'
        '480':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
      x-aws-operation-name: DescribeDBSecurityGroups
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DescribeDBSecurityGroups
      parameters:
        - description: ''
          in: formData
          name: DBSecurityGroupName
          required: false
          type: string
        - description: ''
          in: formData
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: formData
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeDBSecurityGroups
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBSecurityGroupMessage'
        '480':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
      x-aws-operation-name: DescribeDBSecurityGroups
  '/#Action=DescribeDBSnapshots':
    get:
      description: ''
      operationId: GET DescribeDBSnapshots
      parameters:
        - description: ''
          in: query
          name: DBInstanceIdentifier
          required: false
          type: string
        - description: ''
          in: query
          name: DBSnapshotIdentifier
          required: false
          type: string
        - description: ''
          in: query
          name: SnapshotType
          required: false
          type: string
        - description: ''
          in: query
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: query
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeDBSnapshots
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBSnapshotMessage'
        '480':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      x-aws-operation-name: DescribeDBSnapshots
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DescribeDBSnapshots
      parameters:
        - description: ''
          in: formData
          name: DBInstanceIdentifier
          required: false
          type: string
        - description: ''
          in: formData
          name: DBSnapshotIdentifier
          required: false
          type: string
        - description: ''
          in: formData
          name: SnapshotType
          required: false
          type: string
        - description: ''
          in: formData
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: formData
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeDBSnapshots
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBSnapshotMessage'
        '480':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      x-aws-operation-name: DescribeDBSnapshots
  '/#Action=DescribeDBSubnetGroups':
    get:
      description: ''
      operationId: GET DescribeDBSubnetGroups
      parameters:
        - description: ''
          in: query
          name: DBSubnetGroupName
          required: false
          type: string
        - description: ''
          in: query
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: query
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeDBSubnetGroups
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBSubnetGroupMessage'
        '480':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
      x-aws-operation-name: DescribeDBSubnetGroups
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DescribeDBSubnetGroups
      parameters:
        - description: ''
          in: formData
          name: DBSubnetGroupName
          required: false
          type: string
        - description: ''
          in: formData
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: formData
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeDBSubnetGroups
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBSubnetGroupMessage'
        '480':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
      x-aws-operation-name: DescribeDBSubnetGroups
  '/#Action=DescribeEngineDefaultParameters':
    get:
      description: ''
      operationId: GET DescribeEngineDefaultParameters
      parameters:
        - description: ''
          in: query
          name: DBParameterGroupFamily
          required: true
          type: string
        - description: ''
          in: query
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: query
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeEngineDefaultParameters
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEngineDefaultParametersResult'
      x-aws-operation-name: DescribeEngineDefaultParameters
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DescribeEngineDefaultParameters
      parameters:
        - description: ''
          in: formData
          name: DBParameterGroupFamily
          required: true
          type: string
        - description: ''
          in: formData
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: formData
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeEngineDefaultParameters
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEngineDefaultParametersResult'
      x-aws-operation-name: DescribeEngineDefaultParameters
  '/#Action=DescribeEventCategories':
    get:
      description: ''
      operationId: GET DescribeEventCategories
      parameters:
        - description: ''
          in: query
          name: SourceType
          required: false
          type: string
        - enum:
            - DescribeEventCategories
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventCategoriesMessage'
      x-aws-operation-name: DescribeEventCategories
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DescribeEventCategories
      parameters:
        - description: ''
          in: formData
          name: SourceType
          required: false
          type: string
        - enum:
            - DescribeEventCategories
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventCategoriesMessage'
      x-aws-operation-name: DescribeEventCategories
  '/#Action=DescribeEventSubscriptions':
    get:
      description: ''
      operationId: GET DescribeEventSubscriptions
      parameters:
        - description: ''
          in: query
          name: SubscriptionName
          required: false
          type: string
        - description: ''
          in: query
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: query
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeEventSubscriptions
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventSubscriptionsMessage'
        '480':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
      x-aws-operation-name: DescribeEventSubscriptions
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DescribeEventSubscriptions
      parameters:
        - description: ''
          in: formData
          name: SubscriptionName
          required: false
          type: string
        - description: ''
          in: formData
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: formData
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeEventSubscriptions
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventSubscriptionsMessage'
        '480':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
      x-aws-operation-name: DescribeEventSubscriptions
  '/#Action=DescribeEvents':
    get:
      description: ''
      operationId: GET DescribeEvents
      parameters:
        - description: ''
          in: query
          name: SourceIdentifier
          required: false
          type: string
        - description: ''
          enum:
            - db-instance
            - db-parameter-group
            - db-security-group
            - db-snapshot
          in: query
          name: SourceType
          required: false
          type: string
        - description: ''
          format: date-time
          in: query
          name: StartTime
          required: false
          type: string
        - description: ''
          format: date-time
          in: query
          name: EndTime
          required: false
          type: string
        - description: ''
          in: query
          name: Duration
          required: false
          type: integer
        - description: ''
          in: query
          items:
            type: string
          name: EventCategories
          required: false
          type: array
        - description: ''
          in: query
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: query
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeEvents
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventsMessage'
      x-aws-operation-name: DescribeEvents
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DescribeEvents
      parameters:
        - description: ''
          in: formData
          name: SourceIdentifier
          required: false
          type: string
        - description: ''
          enum:
            - db-instance
            - db-parameter-group
            - db-security-group
            - db-snapshot
          in: formData
          name: SourceType
          required: false
          type: string
        - description: ''
          format: date-time
          in: formData
          name: StartTime
          required: false
          type: string
        - description: ''
          format: date-time
          in: formData
          name: EndTime
          required: false
          type: string
        - description: ''
          in: formData
          name: Duration
          required: false
          type: integer
        - description: ''
          in: formData
          items:
            type: string
          name: EventCategories
          required: false
          type: array
        - description: ''
          in: formData
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: formData
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeEvents
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventsMessage'
      x-aws-operation-name: DescribeEvents
  '/#Action=DescribeOptionGroupOptions':
    get:
      description: ''
      operationId: GET DescribeOptionGroupOptions
      parameters:
        - description: ''
          in: query
          name: EngineName
          required: true
          type: string
        - description: ''
          in: query
          name: MajorEngineVersion
          required: false
          type: string
        - description: ''
          in: query
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: query
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeOptionGroupOptions
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OptionGroupOptionsMessage'
      x-aws-operation-name: DescribeOptionGroupOptions
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DescribeOptionGroupOptions
      parameters:
        - description: ''
          in: formData
          name: EngineName
          required: true
          type: string
        - description: ''
          in: formData
          name: MajorEngineVersion
          required: false
          type: string
        - description: ''
          in: formData
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: formData
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeOptionGroupOptions
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OptionGroupOptionsMessage'
      x-aws-operation-name: DescribeOptionGroupOptions
  '/#Action=DescribeOptionGroups':
    get:
      description: ''
      operationId: GET DescribeOptionGroups
      parameters:
        - description: ''
          in: query
          name: OptionGroupName
          required: false
          type: string
        - description: ''
          in: query
          name: Marker
          required: false
          type: string
        - description: ''
          in: query
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: query
          name: EngineName
          required: false
          type: string
        - description: ''
          in: query
          name: MajorEngineVersion
          required: false
          type: string
        - enum:
            - DescribeOptionGroups
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OptionGroups'
        '480':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      x-aws-operation-name: DescribeOptionGroups
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DescribeOptionGroups
      parameters:
        - description: ''
          in: formData
          name: OptionGroupName
          required: false
          type: string
        - description: ''
          in: formData
          name: Marker
          required: false
          type: string
        - description: ''
          in: formData
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: formData
          name: EngineName
          required: false
          type: string
        - description: ''
          in: formData
          name: MajorEngineVersion
          required: false
          type: string
        - enum:
            - DescribeOptionGroups
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OptionGroups'
        '480':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      x-aws-operation-name: DescribeOptionGroups
  '/#Action=DescribeOrderableDBInstanceOptions':
    get:
      description: ''
      operationId: GET DescribeOrderableDBInstanceOptions
      parameters:
        - description: ''
          in: query
          name: Engine
          required: true
          type: string
        - description: ''
          in: query
          name: EngineVersion
          required: false
          type: string
        - description: ''
          in: query
          name: DBInstanceClass
          required: false
          type: string
        - description: ''
          in: query
          name: LicenseModel
          required: false
          type: string
        - description: ''
          in: query
          name: Vpc
          required: false
          type: boolean
        - description: ''
          in: query
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: query
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeOrderableDBInstanceOptions
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderableDBInstanceOptionsMessage'
      x-aws-operation-name: DescribeOrderableDBInstanceOptions
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DescribeOrderableDBInstanceOptions
      parameters:
        - description: ''
          in: formData
          name: Engine
          required: true
          type: string
        - description: ''
          in: formData
          name: EngineVersion
          required: false
          type: string
        - description: ''
          in: formData
          name: DBInstanceClass
          required: false
          type: string
        - description: ''
          in: formData
          name: LicenseModel
          required: false
          type: string
        - description: ''
          in: formData
          name: Vpc
          required: false
          type: boolean
        - description: ''
          in: formData
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: formData
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeOrderableDBInstanceOptions
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderableDBInstanceOptionsMessage'
      x-aws-operation-name: DescribeOrderableDBInstanceOptions
  '/#Action=DescribeReservedDBInstances':
    get:
      description: ''
      operationId: GET DescribeReservedDBInstances
      parameters:
        - description: ''
          in: query
          name: ReservedDBInstanceId
          required: false
          type: string
        - description: ''
          in: query
          name: ReservedDBInstancesOfferingId
          required: false
          type: string
        - description: ''
          in: query
          name: DBInstanceClass
          required: false
          type: string
        - description: ''
          in: query
          name: Duration
          required: false
          type: string
        - description: ''
          in: query
          name: ProductDescription
          required: false
          type: string
        - description: ''
          in: query
          name: OfferingType
          required: false
          type: string
        - description: ''
          in: query
          name: MultiAZ
          required: false
          type: boolean
        - description: ''
          in: query
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: query
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeReservedDBInstances
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ReservedDBInstanceMessage'
        '480':
          description: ReservedDBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/ReservedDBInstanceNotFoundFault'
      x-aws-operation-name: DescribeReservedDBInstances
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DescribeReservedDBInstances
      parameters:
        - description: ''
          in: formData
          name: ReservedDBInstanceId
          required: false
          type: string
        - description: ''
          in: formData
          name: ReservedDBInstancesOfferingId
          required: false
          type: string
        - description: ''
          in: formData
          name: DBInstanceClass
          required: false
          type: string
        - description: ''
          in: formData
          name: Duration
          required: false
          type: string
        - description: ''
          in: formData
          name: ProductDescription
          required: false
          type: string
        - description: ''
          in: formData
          name: OfferingType
          required: false
          type: string
        - description: ''
          in: formData
          name: MultiAZ
          required: false
          type: boolean
        - description: ''
          in: formData
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: formData
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeReservedDBInstances
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ReservedDBInstanceMessage'
        '480':
          description: ReservedDBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/ReservedDBInstanceNotFoundFault'
      x-aws-operation-name: DescribeReservedDBInstances
  '/#Action=DescribeReservedDBInstancesOfferings':
    get:
      description: ''
      operationId: GET DescribeReservedDBInstancesOfferings
      parameters:
        - description: ''
          in: query
          name: ReservedDBInstancesOfferingId
          required: false
          type: string
        - description: ''
          in: query
          name: DBInstanceClass
          required: false
          type: string
        - description: ''
          in: query
          name: Duration
          required: false
          type: string
        - description: ''
          in: query
          name: ProductDescription
          required: false
          type: string
        - description: ''
          in: query
          name: OfferingType
          required: false
          type: string
        - description: ''
          in: query
          name: MultiAZ
          required: false
          type: boolean
        - description: ''
          in: query
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: query
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeReservedDBInstancesOfferings
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ReservedDBInstancesOfferingMessage'
        '480':
          description: ReservedDBInstancesOfferingNotFoundFault
          schema:
            $ref: '#/definitions/ReservedDBInstancesOfferingNotFoundFault'
      x-aws-operation-name: DescribeReservedDBInstancesOfferings
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DescribeReservedDBInstancesOfferings
      parameters:
        - description: ''
          in: formData
          name: ReservedDBInstancesOfferingId
          required: false
          type: string
        - description: ''
          in: formData
          name: DBInstanceClass
          required: false
          type: string
        - description: ''
          in: formData
          name: Duration
          required: false
          type: string
        - description: ''
          in: formData
          name: ProductDescription
          required: false
          type: string
        - description: ''
          in: formData
          name: OfferingType
          required: false
          type: string
        - description: ''
          in: formData
          name: MultiAZ
          required: false
          type: boolean
        - description: ''
          in: formData
          name: MaxRecords
          required: false
          type: integer
        - description: ''
          in: formData
          name: Marker
          required: false
          type: string
        - enum:
            - DescribeReservedDBInstancesOfferings
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ReservedDBInstancesOfferingMessage'
        '480':
          description: ReservedDBInstancesOfferingNotFoundFault
          schema:
            $ref: '#/definitions/ReservedDBInstancesOfferingNotFoundFault'
      x-aws-operation-name: DescribeReservedDBInstancesOfferings
  '/#Action=DownloadDBLogFilePortion':
    get:
      description: ''
      operationId: GET DownloadDBLogFilePortion
      parameters:
        - description: ''
          in: query
          name: DBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: query
          name: LogFileName
          required: true
          type: string
        - description: ''
          in: query
          name: Marker
          required: false
          type: string
        - description: ''
          in: query
          name: NumberOfLines
          required: false
          type: integer
        - enum:
            - DownloadDBLogFilePortion
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DownloadDBLogFilePortionDetails'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: DBLogFileNotFoundFault
          schema:
            $ref: '#/definitions/DBLogFileNotFoundFault'
      x-aws-operation-name: DownloadDBLogFilePortion
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST DownloadDBLogFilePortion
      parameters:
        - description: ''
          in: formData
          name: DBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: formData
          name: LogFileName
          required: true
          type: string
        - description: ''
          in: formData
          name: Marker
          required: false
          type: string
        - description: ''
          in: formData
          name: NumberOfLines
          required: false
          type: integer
        - enum:
            - DownloadDBLogFilePortion
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DownloadDBLogFilePortionDetails'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: DBLogFileNotFoundFault
          schema:
            $ref: '#/definitions/DBLogFileNotFoundFault'
      x-aws-operation-name: DownloadDBLogFilePortion
  '/#Action=ListTagsForResource':
    get:
      description: ''
      operationId: GET ListTagsForResource
      parameters:
        - description: ''
          in: query
          name: ResourceName
          required: true
          type: string
        - enum:
            - ListTagsForResource
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagListMessage'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      x-aws-operation-name: ListTagsForResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST ListTagsForResource
      parameters:
        - description: ''
          in: formData
          name: ResourceName
          required: true
          type: string
        - enum:
            - ListTagsForResource
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagListMessage'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      x-aws-operation-name: ListTagsForResource
  '/#Action=ModifyDBInstance':
    get:
      description: ''
      operationId: GET ModifyDBInstance
      parameters:
        - description: ''
          in: query
          name: DBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: query
          name: AllocatedStorage
          required: false
          type: integer
        - description: ''
          in: query
          name: DBInstanceClass
          required: false
          type: string
        - description: ''
          in: query
          items:
            type: string
          name: DBSecurityGroups
          required: false
          type: array
        - description: ''
          in: query
          items:
            type: string
          name: VpcSecurityGroupIds
          required: false
          type: array
        - description: ''
          in: query
          name: ApplyImmediately
          required: false
          type: boolean
        - description: ''
          in: query
          name: MasterUserPassword
          required: false
          type: string
        - description: ''
          in: query
          name: DBParameterGroupName
          required: false
          type: string
        - description: ''
          in: query
          name: BackupRetentionPeriod
          required: false
          type: integer
        - description: ''
          in: query
          name: PreferredBackupWindow
          required: false
          type: string
        - description: ''
          in: query
          name: PreferredMaintenanceWindow
          required: false
          type: string
        - description: ''
          in: query
          name: MultiAZ
          required: false
          type: boolean
        - description: ''
          in: query
          name: EngineVersion
          required: false
          type: string
        - description: ''
          in: query
          name: AllowMajorVersionUpgrade
          required: false
          type: boolean
        - description: ''
          in: query
          name: AutoMinorVersionUpgrade
          required: false
          type: boolean
        - description: ''
          in: query
          name: Iops
          required: false
          type: integer
        - description: ''
          in: query
          name: OptionGroupName
          required: false
          type: string
        - description: ''
          in: query
          name: NewDBInstanceIdentifier
          required: false
          type: string
        - enum:
            - ModifyDBInstance
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyDBInstanceResult'
        '480':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '481':
          description: InvalidDBSecurityGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSecurityGroupStateFault'
        '482':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '483':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '484':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '485':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
        '486':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '487':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '488':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '489':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '490':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
        '491':
          description: DBUpgradeDependencyFailureFault
          schema:
            $ref: '#/definitions/DBUpgradeDependencyFailureFault'
      x-aws-operation-name: ModifyDBInstance
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST ModifyDBInstance
      parameters:
        - description: ''
          in: formData
          name: DBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: formData
          name: AllocatedStorage
          required: false
          type: integer
        - description: ''
          in: formData
          name: DBInstanceClass
          required: false
          type: string
        - description: ''
          in: formData
          items:
            type: string
          name: DBSecurityGroups
          required: false
          type: array
        - description: ''
          in: formData
          items:
            type: string
          name: VpcSecurityGroupIds
          required: false
          type: array
        - description: ''
          in: formData
          name: ApplyImmediately
          required: false
          type: boolean
        - description: ''
          in: formData
          name: MasterUserPassword
          required: false
          type: string
        - description: ''
          in: formData
          name: DBParameterGroupName
          required: false
          type: string
        - description: ''
          in: formData
          name: BackupRetentionPeriod
          required: false
          type: integer
        - description: ''
          in: formData
          name: PreferredBackupWindow
          required: false
          type: string
        - description: ''
          in: formData
          name: PreferredMaintenanceWindow
          required: false
          type: string
        - description: ''
          in: formData
          name: MultiAZ
          required: false
          type: boolean
        - description: ''
          in: formData
          name: EngineVersion
          required: false
          type: string
        - description: ''
          in: formData
          name: AllowMajorVersionUpgrade
          required: false
          type: boolean
        - description: ''
          in: formData
          name: AutoMinorVersionUpgrade
          required: false
          type: boolean
        - description: ''
          in: formData
          name: Iops
          required: false
          type: integer
        - description: ''
          in: formData
          name: OptionGroupName
          required: false
          type: string
        - description: ''
          in: formData
          name: NewDBInstanceIdentifier
          required: false
          type: string
        - enum:
            - ModifyDBInstance
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyDBInstanceResult'
        '480':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '481':
          description: InvalidDBSecurityGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSecurityGroupStateFault'
        '482':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '483':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '484':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '485':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
        '486':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '487':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '488':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '489':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '490':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
        '491':
          description: DBUpgradeDependencyFailureFault
          schema:
            $ref: '#/definitions/DBUpgradeDependencyFailureFault'
      x-aws-operation-name: ModifyDBInstance
  '/#Action=ModifyDBParameterGroup':
    get:
      description: ''
      operationId: GET ModifyDBParameterGroup
      parameters:
        - description: ''
          in: query
          name: DBParameterGroupName
          required: true
          type: string
        - description: ''
          in: query
          items:
            type: string
          name: Parameters
          required: true
          type: array
        - enum:
            - ModifyDBParameterGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBParameterGroupNameMessage'
        '480':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
        '481':
          description: InvalidDBParameterGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBParameterGroupStateFault'
      x-aws-operation-name: ModifyDBParameterGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST ModifyDBParameterGroup
      parameters:
        - description: ''
          in: formData
          name: DBParameterGroupName
          required: true
          type: string
        - description: ''
          in: formData
          items:
            type: string
          name: Parameters
          required: true
          type: array
        - enum:
            - ModifyDBParameterGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBParameterGroupNameMessage'
        '480':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
        '481':
          description: InvalidDBParameterGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBParameterGroupStateFault'
      x-aws-operation-name: ModifyDBParameterGroup
  '/#Action=ModifyDBSubnetGroup':
    get:
      description: ''
      operationId: GET ModifyDBSubnetGroup
      parameters:
        - description: ''
          in: query
          name: DBSubnetGroupName
          required: true
          type: string
        - description: ''
          in: query
          name: DBSubnetGroupDescription
          required: false
          type: string
        - description: ''
          in: query
          items:
            type: string
          name: SubnetIds
          required: true
          type: array
        - enum:
            - ModifyDBSubnetGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyDBSubnetGroupResult'
        '480':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '481':
          description: DBSubnetQuotaExceededFault
          schema:
            $ref: '#/definitions/DBSubnetQuotaExceededFault'
        '482':
          description: SubnetAlreadyInUse
          schema:
            $ref: '#/definitions/SubnetAlreadyInUse'
        '483':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '484':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
      x-aws-operation-name: ModifyDBSubnetGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST ModifyDBSubnetGroup
      parameters:
        - description: ''
          in: formData
          name: DBSubnetGroupName
          required: true
          type: string
        - description: ''
          in: formData
          name: DBSubnetGroupDescription
          required: false
          type: string
        - description: ''
          in: formData
          items:
            type: string
          name: SubnetIds
          required: true
          type: array
        - enum:
            - ModifyDBSubnetGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyDBSubnetGroupResult'
        '480':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '481':
          description: DBSubnetQuotaExceededFault
          schema:
            $ref: '#/definitions/DBSubnetQuotaExceededFault'
        '482':
          description: SubnetAlreadyInUse
          schema:
            $ref: '#/definitions/SubnetAlreadyInUse'
        '483':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '484':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
      x-aws-operation-name: ModifyDBSubnetGroup
  '/#Action=ModifyEventSubscription':
    get:
      description: ''
      operationId: GET ModifyEventSubscription
      parameters:
        - description: ''
          in: query
          name: SubscriptionName
          required: true
          type: string
        - description: ''
          in: query
          name: SnsTopicArn
          required: false
          type: string
        - description: ''
          in: query
          name: SourceType
          required: false
          type: string
        - description: ''
          in: query
          items:
            type: string
          name: EventCategories
          required: false
          type: array
        - description: ''
          in: query
          name: Enabled
          required: false
          type: boolean
        - enum:
            - ModifyEventSubscription
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyEventSubscriptionResult'
        '480':
          description: EventSubscriptionQuotaExceededFault
          schema:
            $ref: '#/definitions/EventSubscriptionQuotaExceededFault'
        '481':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
        '482':
          description: SNSInvalidTopicFault
          schema:
            $ref: '#/definitions/SNSInvalidTopicFault'
        '483':
          description: SNSNoAuthorizationFault
          schema:
            $ref: '#/definitions/SNSNoAuthorizationFault'
        '484':
          description: SNSTopicArnNotFoundFault
          schema:
            $ref: '#/definitions/SNSTopicArnNotFoundFault'
        '485':
          description: SubscriptionCategoryNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionCategoryNotFoundFault'
      x-aws-operation-name: ModifyEventSubscription
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST ModifyEventSubscription
      parameters:
        - description: ''
          in: formData
          name: SubscriptionName
          required: true
          type: string
        - description: ''
          in: formData
          name: SnsTopicArn
          required: false
          type: string
        - description: ''
          in: formData
          name: SourceType
          required: false
          type: string
        - description: ''
          in: formData
          items:
            type: string
          name: EventCategories
          required: false
          type: array
        - description: ''
          in: formData
          name: Enabled
          required: false
          type: boolean
        - enum:
            - ModifyEventSubscription
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyEventSubscriptionResult'
        '480':
          description: EventSubscriptionQuotaExceededFault
          schema:
            $ref: '#/definitions/EventSubscriptionQuotaExceededFault'
        '481':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
        '482':
          description: SNSInvalidTopicFault
          schema:
            $ref: '#/definitions/SNSInvalidTopicFault'
        '483':
          description: SNSNoAuthorizationFault
          schema:
            $ref: '#/definitions/SNSNoAuthorizationFault'
        '484':
          description: SNSTopicArnNotFoundFault
          schema:
            $ref: '#/definitions/SNSTopicArnNotFoundFault'
        '485':
          description: SubscriptionCategoryNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionCategoryNotFoundFault'
      x-aws-operation-name: ModifyEventSubscription
  '/#Action=ModifyOptionGroup':
    get:
      description: ''
      operationId: GET ModifyOptionGroup
      parameters:
        - description: ''
          in: query
          name: OptionGroupName
          required: true
          type: string
        - description: ''
          in: query
          items:
            type: string
          name: OptionsToInclude
          required: false
          type: array
        - description: ''
          in: query
          items:
            type: string
          name: OptionsToRemove
          required: false
          type: array
        - description: ''
          in: query
          name: ApplyImmediately
          required: false
          type: boolean
        - enum:
            - ModifyOptionGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyOptionGroupResult'
        '480':
          description: InvalidOptionGroupStateFault
          schema:
            $ref: '#/definitions/InvalidOptionGroupStateFault'
        '481':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      x-aws-operation-name: ModifyOptionGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST ModifyOptionGroup
      parameters:
        - description: ''
          in: formData
          name: OptionGroupName
          required: true
          type: string
        - description: ''
          in: formData
          items:
            type: string
          name: OptionsToInclude
          required: false
          type: array
        - description: ''
          in: formData
          items:
            type: string
          name: OptionsToRemove
          required: false
          type: array
        - description: ''
          in: formData
          name: ApplyImmediately
          required: false
          type: boolean
        - enum:
            - ModifyOptionGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyOptionGroupResult'
        '480':
          description: InvalidOptionGroupStateFault
          schema:
            $ref: '#/definitions/InvalidOptionGroupStateFault'
        '481':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      x-aws-operation-name: ModifyOptionGroup
  '/#Action=PromoteReadReplica':
    get:
      description: ''
      operationId: GET PromoteReadReplica
      parameters:
        - description: ''
          in: query
          name: DBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: query
          name: BackupRetentionPeriod
          required: false
          type: integer
        - description: ''
          in: query
          name: PreferredBackupWindow
          required: false
          type: string
        - enum:
            - PromoteReadReplica
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PromoteReadReplicaResult'
        '480':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '481':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
      x-aws-operation-name: PromoteReadReplica
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST PromoteReadReplica
      parameters:
        - description: ''
          in: formData
          name: DBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: formData
          name: BackupRetentionPeriod
          required: false
          type: integer
        - description: ''
          in: formData
          name: PreferredBackupWindow
          required: false
          type: string
        - enum:
            - PromoteReadReplica
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PromoteReadReplicaResult'
        '480':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '481':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
      x-aws-operation-name: PromoteReadReplica
  '/#Action=PurchaseReservedDBInstancesOffering':
    get:
      description: ''
      operationId: GET PurchaseReservedDBInstancesOffering
      parameters:
        - description: ''
          in: query
          name: ReservedDBInstancesOfferingId
          required: true
          type: string
        - description: ''
          in: query
          name: ReservedDBInstanceId
          required: false
          type: string
        - description: ''
          in: query
          name: DBInstanceCount
          required: false
          type: integer
        - enum:
            - PurchaseReservedDBInstancesOffering
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PurchaseReservedDBInstancesOfferingResult'
        '480':
          description: ReservedDBInstancesOfferingNotFoundFault
          schema:
            $ref: '#/definitions/ReservedDBInstancesOfferingNotFoundFault'
        '481':
          description: ReservedDBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/ReservedDBInstanceAlreadyExistsFault'
        '482':
          description: ReservedDBInstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/ReservedDBInstanceQuotaExceededFault'
      x-aws-operation-name: PurchaseReservedDBInstancesOffering
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST PurchaseReservedDBInstancesOffering
      parameters:
        - description: ''
          in: formData
          name: ReservedDBInstancesOfferingId
          required: true
          type: string
        - description: ''
          in: formData
          name: ReservedDBInstanceId
          required: false
          type: string
        - description: ''
          in: formData
          name: DBInstanceCount
          required: false
          type: integer
        - enum:
            - PurchaseReservedDBInstancesOffering
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PurchaseReservedDBInstancesOfferingResult'
        '480':
          description: ReservedDBInstancesOfferingNotFoundFault
          schema:
            $ref: '#/definitions/ReservedDBInstancesOfferingNotFoundFault'
        '481':
          description: ReservedDBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/ReservedDBInstanceAlreadyExistsFault'
        '482':
          description: ReservedDBInstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/ReservedDBInstanceQuotaExceededFault'
      x-aws-operation-name: PurchaseReservedDBInstancesOffering
  '/#Action=RebootDBInstance':
    get:
      description: ''
      operationId: GET RebootDBInstance
      parameters:
        - description: ''
          in: query
          name: DBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: query
          name: ForceFailover
          required: false
          type: boolean
        - enum:
            - RebootDBInstance
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RebootDBInstanceResult'
        '480':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '481':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
      x-aws-operation-name: RebootDBInstance
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST RebootDBInstance
      parameters:
        - description: ''
          in: formData
          name: DBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: formData
          name: ForceFailover
          required: false
          type: boolean
        - enum:
            - RebootDBInstance
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RebootDBInstanceResult'
        '480':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '481':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
      x-aws-operation-name: RebootDBInstance
  '/#Action=RemoveSourceIdentifierFromSubscription':
    get:
      description: ''
      operationId: GET RemoveSourceIdentifierFromSubscription
      parameters:
        - description: ''
          in: query
          name: SubscriptionName
          required: true
          type: string
        - description: ''
          in: query
          name: SourceIdentifier
          required: true
          type: string
        - enum:
            - RemoveSourceIdentifierFromSubscription
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveSourceIdentifierFromSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
        '481':
          description: SourceNotFoundFault
          schema:
            $ref: '#/definitions/SourceNotFoundFault'
      x-aws-operation-name: RemoveSourceIdentifierFromSubscription
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST RemoveSourceIdentifierFromSubscription
      parameters:
        - description: ''
          in: formData
          name: SubscriptionName
          required: true
          type: string
        - description: ''
          in: formData
          name: SourceIdentifier
          required: true
          type: string
        - enum:
            - RemoveSourceIdentifierFromSubscription
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveSourceIdentifierFromSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
        '481':
          description: SourceNotFoundFault
          schema:
            $ref: '#/definitions/SourceNotFoundFault'
      x-aws-operation-name: RemoveSourceIdentifierFromSubscription
  '/#Action=RemoveTagsFromResource':
    get:
      description: ''
      operationId: GET RemoveTagsFromResource
      parameters:
        - description: ''
          in: query
          name: ResourceName
          required: true
          type: string
        - description: ''
          in: query
          items:
            type: string
          name: TagKeys
          required: true
          type: array
        - enum:
            - RemoveTagsFromResource
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      x-aws-operation-name: RemoveTagsFromResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST RemoveTagsFromResource
      parameters:
        - description: ''
          in: formData
          name: ResourceName
          required: true
          type: string
        - description: ''
          in: formData
          items:
            type: string
          name: TagKeys
          required: true
          type: array
        - enum:
            - RemoveTagsFromResource
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      x-aws-operation-name: RemoveTagsFromResource
  '/#Action=ResetDBParameterGroup':
    get:
      description: ''
      operationId: GET ResetDBParameterGroup
      parameters:
        - description: ''
          in: query
          name: DBParameterGroupName
          required: true
          type: string
        - description: ''
          in: query
          name: ResetAllParameters
          required: false
          type: boolean
        - description: ''
          in: query
          items:
            type: string
          name: Parameters
          required: false
          type: array
        - enum:
            - ResetDBParameterGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBParameterGroupNameMessage'
        '480':
          description: InvalidDBParameterGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBParameterGroupStateFault'
        '481':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
      x-aws-operation-name: ResetDBParameterGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST ResetDBParameterGroup
      parameters:
        - description: ''
          in: formData
          name: DBParameterGroupName
          required: true
          type: string
        - description: ''
          in: formData
          name: ResetAllParameters
          required: false
          type: boolean
        - description: ''
          in: formData
          items:
            type: string
          name: Parameters
          required: false
          type: array
        - enum:
            - ResetDBParameterGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBParameterGroupNameMessage'
        '480':
          description: InvalidDBParameterGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBParameterGroupStateFault'
        '481':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
      x-aws-operation-name: ResetDBParameterGroup
  '/#Action=RestoreDBInstanceFromDBSnapshot':
    get:
      description: ''
      operationId: GET RestoreDBInstanceFromDBSnapshot
      parameters:
        - description: ''
          in: query
          name: DBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: query
          name: DBSnapshotIdentifier
          required: true
          type: string
        - description: ''
          in: query
          name: DBInstanceClass
          required: false
          type: string
        - description: ''
          in: query
          name: Port
          required: false
          type: integer
        - description: ''
          in: query
          name: AvailabilityZone
          required: false
          type: string
        - description: ''
          in: query
          name: DBSubnetGroupName
          required: false
          type: string
        - description: ''
          in: query
          name: MultiAZ
          required: false
          type: boolean
        - description: ''
          in: query
          name: PubliclyAccessible
          required: false
          type: boolean
        - description: ''
          in: query
          name: AutoMinorVersionUpgrade
          required: false
          type: boolean
        - description: ''
          in: query
          name: LicenseModel
          required: false
          type: string
        - description: ''
          in: query
          name: DBName
          required: false
          type: string
        - description: ''
          in: query
          name: Engine
          required: false
          type: string
        - description: ''
          in: query
          name: Iops
          required: false
          type: integer
        - description: ''
          in: query
          name: OptionGroupName
          required: false
          type: string
        - enum:
            - RestoreDBInstanceFromDBSnapshot
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RestoreDBInstanceFromDBSnapshotResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
        '482':
          description: InstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/InstanceQuotaExceededFault'
        '483':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '484':
          description: InvalidDBSnapshotStateFault
          schema:
            $ref: '#/definitions/InvalidDBSnapshotStateFault'
        '485':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '486':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '487':
          description: InvalidRestoreFault
          schema:
            $ref: '#/definitions/InvalidRestoreFault'
        '488':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '489':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '490':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '491':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '492':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      x-aws-operation-name: RestoreDBInstanceFromDBSnapshot
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST RestoreDBInstanceFromDBSnapshot
      parameters:
        - description: ''
          in: formData
          name: DBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: formData
          name: DBSnapshotIdentifier
          required: true
          type: string
        - description: ''
          in: formData
          name: DBInstanceClass
          required: false
          type: string
        - description: ''
          in: formData
          name: Port
          required: false
          type: integer
        - description: ''
          in: formData
          name: AvailabilityZone
          required: false
          type: string
        - description: ''
          in: formData
          name: DBSubnetGroupName
          required: false
          type: string
        - description: ''
          in: formData
          name: MultiAZ
          required: false
          type: boolean
        - description: ''
          in: formData
          name: PubliclyAccessible
          required: false
          type: boolean
        - description: ''
          in: formData
          name: AutoMinorVersionUpgrade
          required: false
          type: boolean
        - description: ''
          in: formData
          name: LicenseModel
          required: false
          type: string
        - description: ''
          in: formData
          name: DBName
          required: false
          type: string
        - description: ''
          in: formData
          name: Engine
          required: false
          type: string
        - description: ''
          in: formData
          name: Iops
          required: false
          type: integer
        - description: ''
          in: formData
          name: OptionGroupName
          required: false
          type: string
        - enum:
            - RestoreDBInstanceFromDBSnapshot
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RestoreDBInstanceFromDBSnapshotResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
        '482':
          description: InstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/InstanceQuotaExceededFault'
        '483':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '484':
          description: InvalidDBSnapshotStateFault
          schema:
            $ref: '#/definitions/InvalidDBSnapshotStateFault'
        '485':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '486':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '487':
          description: InvalidRestoreFault
          schema:
            $ref: '#/definitions/InvalidRestoreFault'
        '488':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '489':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '490':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '491':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '492':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      x-aws-operation-name: RestoreDBInstanceFromDBSnapshot
  '/#Action=RestoreDBInstanceToPointInTime':
    get:
      description: ''
      operationId: GET RestoreDBInstanceToPointInTime
      parameters:
        - description: ''
          in: query
          name: SourceDBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: query
          name: TargetDBInstanceIdentifier
          required: true
          type: string
        - description: ''
          format: date-time
          in: query
          name: RestoreTime
          required: false
          type: string
        - description: ''
          in: query
          name: UseLatestRestorableTime
          required: false
          type: boolean
        - description: ''
          in: query
          name: DBInstanceClass
          required: false
          type: string
        - description: ''
          in: query
          name: Port
          required: false
          type: integer
        - description: ''
          in: query
          name: AvailabilityZone
          required: false
          type: string
        - description: ''
          in: query
          name: DBSubnetGroupName
          required: false
          type: string
        - description: ''
          in: query
          name: MultiAZ
          required: false
          type: boolean
        - description: ''
          in: query
          name: PubliclyAccessible
          required: false
          type: boolean
        - description: ''
          in: query
          name: AutoMinorVersionUpgrade
          required: false
          type: boolean
        - description: ''
          in: query
          name: LicenseModel
          required: false
          type: string
        - description: ''
          in: query
          name: DBName
          required: false
          type: string
        - description: ''
          in: query
          name: Engine
          required: false
          type: string
        - description: ''
          in: query
          name: Iops
          required: false
          type: integer
        - description: ''
          in: query
          name: OptionGroupName
          required: false
          type: string
        - enum:
            - RestoreDBInstanceToPointInTime
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RestoreDBInstanceToPointInTimeResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '481':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '482':
          description: InstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/InstanceQuotaExceededFault'
        '483':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '484':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '485':
          description: PointInTimeRestoreNotEnabledFault
          schema:
            $ref: '#/definitions/PointInTimeRestoreNotEnabledFault'
        '486':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '487':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '488':
          description: InvalidRestoreFault
          schema:
            $ref: '#/definitions/InvalidRestoreFault'
        '489':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '490':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '491':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '492':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '493':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      x-aws-operation-name: RestoreDBInstanceToPointInTime
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST RestoreDBInstanceToPointInTime
      parameters:
        - description: ''
          in: formData
          name: SourceDBInstanceIdentifier
          required: true
          type: string
        - description: ''
          in: formData
          name: TargetDBInstanceIdentifier
          required: true
          type: string
        - description: ''
          format: date-time
          in: formData
          name: RestoreTime
          required: false
          type: string
        - description: ''
          in: formData
          name: UseLatestRestorableTime
          required: false
          type: boolean
        - description: ''
          in: formData
          name: DBInstanceClass
          required: false
          type: string
        - description: ''
          in: formData
          name: Port
          required: false
          type: integer
        - description: ''
          in: formData
          name: AvailabilityZone
          required: false
          type: string
        - description: ''
          in: formData
          name: DBSubnetGroupName
          required: false
          type: string
        - description: ''
          in: formData
          name: MultiAZ
          required: false
          type: boolean
        - description: ''
          in: formData
          name: PubliclyAccessible
          required: false
          type: boolean
        - description: ''
          in: formData
          name: AutoMinorVersionUpgrade
          required: false
          type: boolean
        - description: ''
          in: formData
          name: LicenseModel
          required: false
          type: string
        - description: ''
          in: formData
          name: DBName
          required: false
          type: string
        - description: ''
          in: formData
          name: Engine
          required: false
          type: string
        - description: ''
          in: formData
          name: Iops
          required: false
          type: integer
        - description: ''
          in: formData
          name: OptionGroupName
          required: false
          type: string
        - enum:
            - RestoreDBInstanceToPointInTime
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RestoreDBInstanceToPointInTimeResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '481':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '482':
          description: InstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/InstanceQuotaExceededFault'
        '483':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '484':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '485':
          description: PointInTimeRestoreNotEnabledFault
          schema:
            $ref: '#/definitions/PointInTimeRestoreNotEnabledFault'
        '486':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '487':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '488':
          description: InvalidRestoreFault
          schema:
            $ref: '#/definitions/InvalidRestoreFault'
        '489':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '490':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '491':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '492':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '493':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      x-aws-operation-name: RestoreDBInstanceToPointInTime
  '/#Action=RevokeDBSecurityGroupIngress':
    get:
      description: ''
      operationId: GET RevokeDBSecurityGroupIngress
      parameters:
        - description: ''
          in: query
          name: DBSecurityGroupName
          required: true
          type: string
        - description: ''
          in: query
          name: CIDRIP
          required: false
          type: string
        - description: ''
          in: query
          name: EC2SecurityGroupName
          required: false
          type: string
        - description: ''
          in: query
          name: EC2SecurityGroupId
          required: false
          type: string
        - description: ''
          in: query
          name: EC2SecurityGroupOwnerId
          required: false
          type: string
        - enum:
            - RevokeDBSecurityGroupIngress
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RevokeDBSecurityGroupIngressResult'
        '480':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '481':
          description: AuthorizationNotFoundFault
          schema:
            $ref: '#/definitions/AuthorizationNotFoundFault'
        '482':
          description: InvalidDBSecurityGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSecurityGroupStateFault'
      x-aws-operation-name: RevokeDBSecurityGroupIngress
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: POST RevokeDBSecurityGroupIngress
      parameters:
        - description: ''
          in: formData
          name: DBSecurityGroupName
          required: true
          type: string
        - description: ''
          in: formData
          name: CIDRIP
          required: false
          type: string
        - description: ''
          in: formData
          name: EC2SecurityGroupName
          required: false
          type: string
        - description: ''
          in: formData
          name: EC2SecurityGroupId
          required: false
          type: string
        - description: ''
          in: formData
          name: EC2SecurityGroupOwnerId
          required: false
          type: string
        - enum:
            - RevokeDBSecurityGroupIngress
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2013-02-12'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RevokeDBSecurityGroupIngressResult'
        '480':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '481':
          description: AuthorizationNotFoundFault
          schema:
            $ref: '#/definitions/AuthorizationNotFoundFault'
        '482':
          description: InvalidDBSecurityGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSecurityGroupStateFault'
      x-aws-operation-name: RevokeDBSecurityGroupIngress
definitions:
  AddSourceIdentifierToSubscriptionMessage:
    properties:
      SourceIdentifier:
        $ref: '#/definitions/String'
      SubscriptionName:
        $ref: '#/definitions/String'
    required:
      - SubscriptionName
      - SourceIdentifier
    type: object
  AddSourceIdentifierToSubscriptionResult:
    properties:
      EventSubscription:
        $ref: '#/definitions/EventSubscription'
    type: object
  AddTagsToResourceMessage:
    properties:
      ResourceName:
        $ref: '#/definitions/String'
      Tags:
        $ref: '#/definitions/TagList'
    required:
      - ResourceName
      - Tags
    type: object
  ApplyMethod:
    enum:
      - immediate
      - pending-reboot
    type: string
  AuthorizationAlreadyExistsFault: {}
  AuthorizationNotFoundFault: {}
  AuthorizationQuotaExceededFault: {}
  AuthorizeDBSecurityGroupIngressMessage:
    properties:
      CIDRIP:
        $ref: '#/definitions/String'
      DBSecurityGroupName:
        $ref: '#/definitions/String'
      EC2SecurityGroupId:
        $ref: '#/definitions/String'
      EC2SecurityGroupName:
        $ref: '#/definitions/String'
      EC2SecurityGroupOwnerId:
        $ref: '#/definitions/String'
    required:
      - DBSecurityGroupName
    type: object
  AuthorizeDBSecurityGroupIngressResult:
    properties:
      DBSecurityGroup:
        $ref: '#/definitions/DBSecurityGroup'
    type: object
  AvailabilityZone:
    properties:
      Name:
        $ref: '#/definitions/String'
      ProvisionedIopsCapable:
        $ref: '#/definitions/Boolean'
    type: object
  AvailabilityZoneList:
    items:
      $ref: '#/definitions/AvailabilityZone'
    type: array
  Boolean:
    type: boolean
  BooleanOptional:
    type: boolean
  CharacterSet:
    properties:
      CharacterSetDescription:
        $ref: '#/definitions/String'
      CharacterSetName:
        $ref: '#/definitions/String'
    type: object
  CopyDBSnapshotMessage:
    properties:
      SourceDBSnapshotIdentifier:
        $ref: '#/definitions/String'
      TargetDBSnapshotIdentifier:
        $ref: '#/definitions/String'
    required:
      - SourceDBSnapshotIdentifier
      - TargetDBSnapshotIdentifier
    type: object
  CopyDBSnapshotResult:
    properties:
      DBSnapshot:
        $ref: '#/definitions/DBSnapshot'
    type: object
  CreateDBInstanceMessage:
    properties:
      AllocatedStorage:
        $ref: '#/definitions/IntegerOptional'
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/BooleanOptional'
      AvailabilityZone:
        $ref: '#/definitions/String'
      BackupRetentionPeriod:
        $ref: '#/definitions/IntegerOptional'
      CharacterSetName:
        $ref: '#/definitions/String'
      DBInstanceClass:
        $ref: '#/definitions/String'
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      DBName:
        $ref: '#/definitions/String'
      DBParameterGroupName:
        $ref: '#/definitions/String'
      DBSecurityGroups:
        $ref: '#/definitions/DBSecurityGroupNameList'
      DBSubnetGroupName:
        $ref: '#/definitions/String'
      Engine:
        $ref: '#/definitions/String'
      EngineVersion:
        $ref: '#/definitions/String'
      Iops:
        $ref: '#/definitions/IntegerOptional'
      LicenseModel:
        $ref: '#/definitions/String'
      MasterUserPassword:
        $ref: '#/definitions/String'
      MasterUsername:
        $ref: '#/definitions/String'
      MultiAZ:
        $ref: '#/definitions/BooleanOptional'
      OptionGroupName:
        $ref: '#/definitions/String'
      Port:
        $ref: '#/definitions/IntegerOptional'
      PreferredBackupWindow:
        $ref: '#/definitions/String'
      PreferredMaintenanceWindow:
        $ref: '#/definitions/String'
      PubliclyAccessible:
        $ref: '#/definitions/BooleanOptional'
      VpcSecurityGroupIds:
        $ref: '#/definitions/VpcSecurityGroupIdList'
    required:
      - DBInstanceIdentifier
      - AllocatedStorage
      - DBInstanceClass
      - Engine
      - MasterUsername
      - MasterUserPassword
    type: object
  CreateDBInstanceReadReplicaMessage:
    properties:
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/BooleanOptional'
      AvailabilityZone:
        $ref: '#/definitions/String'
      DBInstanceClass:
        $ref: '#/definitions/String'
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      Iops:
        $ref: '#/definitions/IntegerOptional'
      OptionGroupName:
        $ref: '#/definitions/String'
      Port:
        $ref: '#/definitions/IntegerOptional'
      PubliclyAccessible:
        $ref: '#/definitions/BooleanOptional'
      SourceDBInstanceIdentifier:
        $ref: '#/definitions/String'
    required:
      - DBInstanceIdentifier
      - SourceDBInstanceIdentifier
    type: object
  CreateDBInstanceReadReplicaResult:
    properties:
      DBInstance:
        $ref: '#/definitions/DBInstance'
    type: object
  CreateDBInstanceResult:
    properties:
      DBInstance:
        $ref: '#/definitions/DBInstance'
    type: object
  CreateDBParameterGroupMessage:
    properties:
      DBParameterGroupFamily:
        $ref: '#/definitions/String'
      DBParameterGroupName:
        $ref: '#/definitions/String'
      Description:
        $ref: '#/definitions/String'
    required:
      - DBParameterGroupName
      - DBParameterGroupFamily
      - Description
    type: object
  CreateDBParameterGroupResult:
    properties:
      DBParameterGroup:
        $ref: '#/definitions/DBParameterGroup'
    type: object
  CreateDBSecurityGroupMessage:
    properties:
      DBSecurityGroupDescription:
        $ref: '#/definitions/String'
      DBSecurityGroupName:
        $ref: '#/definitions/String'
    required:
      - DBSecurityGroupName
      - DBSecurityGroupDescription
    type: object
  CreateDBSecurityGroupResult:
    properties:
      DBSecurityGroup:
        $ref: '#/definitions/DBSecurityGroup'
    type: object
  CreateDBSnapshotMessage:
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      DBSnapshotIdentifier:
        $ref: '#/definitions/String'
    required:
      - DBSnapshotIdentifier
      - DBInstanceIdentifier
    type: object
  CreateDBSnapshotResult:
    properties:
      DBSnapshot:
        $ref: '#/definitions/DBSnapshot'
    type: object
  CreateDBSubnetGroupMessage:
    properties:
      DBSubnetGroupDescription:
        $ref: '#/definitions/String'
      DBSubnetGroupName:
        $ref: '#/definitions/String'
      SubnetIds:
        $ref: '#/definitions/SubnetIdentifierList'
    required:
      - DBSubnetGroupName
      - DBSubnetGroupDescription
      - SubnetIds
    type: object
  CreateDBSubnetGroupResult:
    properties:
      DBSubnetGroup:
        $ref: '#/definitions/DBSubnetGroup'
    type: object
  CreateEventSubscriptionMessage:
    properties:
      Enabled:
        $ref: '#/definitions/BooleanOptional'
      EventCategories:
        $ref: '#/definitions/EventCategoriesList'
      SnsTopicArn:
        $ref: '#/definitions/String'
      SourceIds:
        $ref: '#/definitions/SourceIdsList'
      SourceType:
        $ref: '#/definitions/String'
      SubscriptionName:
        $ref: '#/definitions/String'
    required:
      - SubscriptionName
      - SnsTopicArn
    type: object
  CreateEventSubscriptionResult:
    properties:
      EventSubscription:
        $ref: '#/definitions/EventSubscription'
    type: object
  CreateOptionGroupMessage:
    properties:
      EngineName:
        $ref: '#/definitions/String'
      MajorEngineVersion:
        $ref: '#/definitions/String'
      OptionGroupDescription:
        $ref: '#/definitions/String'
      OptionGroupName:
        $ref: '#/definitions/String'
    required:
      - OptionGroupName
      - EngineName
      - MajorEngineVersion
      - OptionGroupDescription
    type: object
  CreateOptionGroupResult:
    properties:
      OptionGroup:
        $ref: '#/definitions/OptionGroup'
    type: object
  DBEngineVersion:
    properties:
      DBEngineDescription:
        $ref: '#/definitions/String'
      DBEngineVersionDescription:
        $ref: '#/definitions/String'
      DBParameterGroupFamily:
        $ref: '#/definitions/String'
      DefaultCharacterSet:
        $ref: '#/definitions/CharacterSet'
      Engine:
        $ref: '#/definitions/String'
      EngineVersion:
        $ref: '#/definitions/String'
      SupportedCharacterSets:
        $ref: '#/definitions/SupportedCharacterSetsList'
    type: object
  DBEngineVersionList:
    items:
      $ref: '#/definitions/DBEngineVersion'
    type: array
  DBEngineVersionMessage:
    properties:
      DBEngineVersions:
        $ref: '#/definitions/DBEngineVersionList'
      Marker:
        $ref: '#/definitions/String'
    type: object
  DBInstance:
    properties:
      AllocatedStorage:
        $ref: '#/definitions/Integer'
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/Boolean'
      AvailabilityZone:
        $ref: '#/definitions/String'
      BackupRetentionPeriod:
        $ref: '#/definitions/Integer'
      CharacterSetName:
        $ref: '#/definitions/String'
      DBInstanceClass:
        $ref: '#/definitions/String'
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      DBInstanceStatus:
        $ref: '#/definitions/String'
      DBName:
        $ref: '#/definitions/String'
      DBParameterGroups:
        $ref: '#/definitions/DBParameterGroupStatusList'
      DBSecurityGroups:
        $ref: '#/definitions/DBSecurityGroupMembershipList'
      DBSubnetGroup:
        $ref: '#/definitions/DBSubnetGroup'
      Endpoint:
        $ref: '#/definitions/Endpoint'
      Engine:
        $ref: '#/definitions/String'
      EngineVersion:
        $ref: '#/definitions/String'
      InstanceCreateTime:
        $ref: '#/definitions/TStamp'
      Iops:
        $ref: '#/definitions/IntegerOptional'
      LatestRestorableTime:
        $ref: '#/definitions/TStamp'
      LicenseModel:
        $ref: '#/definitions/String'
      MasterUsername:
        $ref: '#/definitions/String'
      MultiAZ:
        $ref: '#/definitions/Boolean'
      OptionGroupMemberships:
        $ref: '#/definitions/OptionGroupMembershipList'
      PendingModifiedValues:
        $ref: '#/definitions/PendingModifiedValues'
      PreferredBackupWindow:
        $ref: '#/definitions/String'
      PreferredMaintenanceWindow:
        $ref: '#/definitions/String'
      PubliclyAccessible:
        $ref: '#/definitions/Boolean'
      ReadReplicaDBInstanceIdentifiers:
        $ref: '#/definitions/ReadReplicaDBInstanceIdentifierList'
      ReadReplicaSourceDBInstanceIdentifier:
        $ref: '#/definitions/String'
      SecondaryAvailabilityZone:
        $ref: '#/definitions/String'
      VpcSecurityGroups:
        $ref: '#/definitions/VpcSecurityGroupMembershipList'
    type: object
  DBInstanceAlreadyExistsFault: {}
  DBInstanceList:
    items:
      $ref: '#/definitions/DBInstance'
    type: array
  DBInstanceMessage:
    properties:
      DBInstances:
        $ref: '#/definitions/DBInstanceList'
      Marker:
        $ref: '#/definitions/String'
    type: object
  DBInstanceNotFoundFault: {}
  DBLogFileNotFoundFault: {}
  DBParameterGroup:
    properties:
      DBParameterGroupFamily:
        $ref: '#/definitions/String'
      DBParameterGroupName:
        $ref: '#/definitions/String'
      Description:
        $ref: '#/definitions/String'
    type: object
  DBParameterGroupAlreadyExistsFault: {}
  DBParameterGroupDetails:
    properties:
      Marker:
        $ref: '#/definitions/String'
      Parameters:
        $ref: '#/definitions/ParametersList'
    type: object
  DBParameterGroupList:
    items:
      $ref: '#/definitions/DBParameterGroup'
    type: array
  DBParameterGroupNameMessage:
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/String'
    type: object
  DBParameterGroupNotFoundFault: {}
  DBParameterGroupQuotaExceededFault: {}
  DBParameterGroupStatus:
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/String'
      ParameterApplyStatus:
        $ref: '#/definitions/String'
    type: object
  DBParameterGroupStatusList:
    items:
      $ref: '#/definitions/DBParameterGroupStatus'
    type: array
  DBParameterGroupsMessage:
    properties:
      DBParameterGroups:
        $ref: '#/definitions/DBParameterGroupList'
      Marker:
        $ref: '#/definitions/String'
    type: object
  DBSecurityGroup:
    properties:
      DBSecurityGroupDescription:
        $ref: '#/definitions/String'
      DBSecurityGroupName:
        $ref: '#/definitions/String'
      EC2SecurityGroups:
        $ref: '#/definitions/EC2SecurityGroupList'
      IPRanges:
        $ref: '#/definitions/IPRangeList'
      OwnerId:
        $ref: '#/definitions/String'
      VpcId:
        $ref: '#/definitions/String'
    type: object
  DBSecurityGroupAlreadyExistsFault: {}
  DBSecurityGroupMembership:
    properties:
      DBSecurityGroupName:
        $ref: '#/definitions/String'
      Status:
        $ref: '#/definitions/String'
    type: object
  DBSecurityGroupMembershipList:
    items:
      $ref: '#/definitions/DBSecurityGroupMembership'
    type: array
  DBSecurityGroupMessage:
    properties:
      DBSecurityGroups:
        $ref: '#/definitions/DBSecurityGroups'
      Marker:
        $ref: '#/definitions/String'
    type: object
  DBSecurityGroupNameList:
    items:
      $ref: '#/definitions/String'
    type: array
  DBSecurityGroupNotFoundFault: {}
  DBSecurityGroupNotSupportedFault: {}
  DBSecurityGroupQuotaExceededFault: {}
  DBSecurityGroups:
    items:
      $ref: '#/definitions/DBSecurityGroup'
    type: array
  DBSnapshot:
    properties:
      AllocatedStorage:
        $ref: '#/definitions/Integer'
      AvailabilityZone:
        $ref: '#/definitions/String'
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      DBSnapshotIdentifier:
        $ref: '#/definitions/String'
      Engine:
        $ref: '#/definitions/String'
      EngineVersion:
        $ref: '#/definitions/String'
      InstanceCreateTime:
        $ref: '#/definitions/TStamp'
      Iops:
        $ref: '#/definitions/IntegerOptional'
      LicenseModel:
        $ref: '#/definitions/String'
      MasterUsername:
        $ref: '#/definitions/String'
      OptionGroupName:
        $ref: '#/definitions/String'
      Port:
        $ref: '#/definitions/Integer'
      SnapshotCreateTime:
        $ref: '#/definitions/TStamp'
      SnapshotType:
        $ref: '#/definitions/String'
      Status:
        $ref: '#/definitions/String'
      VpcId:
        $ref: '#/definitions/String'
    type: object
  DBSnapshotAlreadyExistsFault: {}
  DBSnapshotList:
    items:
      $ref: '#/definitions/DBSnapshot'
    type: array
  DBSnapshotMessage:
    properties:
      DBSnapshots:
        $ref: '#/definitions/DBSnapshotList'
      Marker:
        $ref: '#/definitions/String'
    type: object
  DBSnapshotNotFoundFault: {}
  DBSubnetGroup:
    properties:
      DBSubnetGroupDescription:
        $ref: '#/definitions/String'
      DBSubnetGroupName:
        $ref: '#/definitions/String'
      SubnetGroupStatus:
        $ref: '#/definitions/String'
      Subnets:
        $ref: '#/definitions/SubnetList'
      VpcId:
        $ref: '#/definitions/String'
    type: object
  DBSubnetGroupAlreadyExistsFault: {}
  DBSubnetGroupDoesNotCoverEnoughAZs: {}
  DBSubnetGroupMessage:
    properties:
      DBSubnetGroups:
        $ref: '#/definitions/DBSubnetGroups'
      Marker:
        $ref: '#/definitions/String'
    type: object
  DBSubnetGroupNotFoundFault: {}
  DBSubnetGroupQuotaExceededFault: {}
  DBSubnetGroups:
    items:
      $ref: '#/definitions/DBSubnetGroup'
    type: array
  DBSubnetQuotaExceededFault: {}
  DBUpgradeDependencyFailureFault: {}
  DeleteDBInstanceMessage:
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      FinalDBSnapshotIdentifier:
        $ref: '#/definitions/String'
      SkipFinalSnapshot:
        $ref: '#/definitions/Boolean'
    required:
      - DBInstanceIdentifier
    type: object
  DeleteDBInstanceResult:
    properties:
      DBInstance:
        $ref: '#/definitions/DBInstance'
    type: object
  DeleteDBParameterGroupMessage:
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/String'
    required:
      - DBParameterGroupName
    type: object
  DeleteDBSecurityGroupMessage:
    properties:
      DBSecurityGroupName:
        $ref: '#/definitions/String'
    required:
      - DBSecurityGroupName
    type: object
  DeleteDBSnapshotMessage:
    properties:
      DBSnapshotIdentifier:
        $ref: '#/definitions/String'
    required:
      - DBSnapshotIdentifier
    type: object
  DeleteDBSnapshotResult:
    properties:
      DBSnapshot:
        $ref: '#/definitions/DBSnapshot'
    type: object
  DeleteDBSubnetGroupMessage:
    properties:
      DBSubnetGroupName:
        $ref: '#/definitions/String'
    required:
      - DBSubnetGroupName
    type: object
  DeleteEventSubscriptionMessage:
    properties:
      SubscriptionName:
        $ref: '#/definitions/String'
    required:
      - SubscriptionName
    type: object
  DeleteEventSubscriptionResult:
    properties:
      EventSubscription:
        $ref: '#/definitions/EventSubscription'
    type: object
  DeleteOptionGroupMessage:
    properties:
      OptionGroupName:
        $ref: '#/definitions/String'
    required:
      - OptionGroupName
    type: object
  DescribeDBEngineVersionsMessage:
    properties:
      DBParameterGroupFamily:
        $ref: '#/definitions/String'
      DefaultOnly:
        $ref: '#/definitions/Boolean'
      Engine:
        $ref: '#/definitions/String'
      EngineVersion:
        $ref: '#/definitions/String'
      ListSupportedCharacterSets:
        $ref: '#/definitions/BooleanOptional'
      Marker:
        $ref: '#/definitions/String'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
    type: object
  DescribeDBInstancesMessage:
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      Marker:
        $ref: '#/definitions/String'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
    type: object
  DescribeDBLogFilesDetails:
    properties:
      LastWritten:
        $ref: '#/definitions/Long'
      LogFileName:
        $ref: '#/definitions/String'
      Size:
        $ref: '#/definitions/Long'
    type: object
  DescribeDBLogFilesList:
    items:
      $ref: '#/definitions/DescribeDBLogFilesDetails'
    type: array
  DescribeDBLogFilesMessage:
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      FileLastWritten:
        $ref: '#/definitions/Long'
      FileSize:
        $ref: '#/definitions/Long'
      FilenameContains:
        $ref: '#/definitions/String'
      Marker:
        $ref: '#/definitions/String'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
    required:
      - DBInstanceIdentifier
    type: object
  DescribeDBLogFilesResponse:
    properties:
      DescribeDBLogFiles:
        $ref: '#/definitions/DescribeDBLogFilesList'
      Marker:
        $ref: '#/definitions/String'
    type: object
  DescribeDBParameterGroupsMessage:
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/String'
      Marker:
        $ref: '#/definitions/String'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
    type: object
  DescribeDBParametersMessage:
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/String'
      Marker:
        $ref: '#/definitions/String'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      Source:
        $ref: '#/definitions/String'
    required:
      - DBParameterGroupName
    type: object
  DescribeDBSecurityGroupsMessage:
    properties:
      DBSecurityGroupName:
        $ref: '#/definitions/String'
      Marker:
        $ref: '#/definitions/String'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
    type: object
  DescribeDBSnapshotsMessage:
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      DBSnapshotIdentifier:
        $ref: '#/definitions/String'
      Marker:
        $ref: '#/definitions/String'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      SnapshotType:
        $ref: '#/definitions/String'
    type: object
  DescribeDBSubnetGroupsMessage:
    properties:
      DBSubnetGroupName:
        $ref: '#/definitions/String'
      Marker:
        $ref: '#/definitions/String'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
    type: object
  DescribeEngineDefaultParametersMessage:
    properties:
      DBParameterGroupFamily:
        $ref: '#/definitions/String'
      Marker:
        $ref: '#/definitions/String'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
    required:
      - DBParameterGroupFamily
    type: object
  DescribeEngineDefaultParametersResult:
    properties:
      EngineDefaults:
        $ref: '#/definitions/EngineDefaults'
    type: object
  DescribeEventCategoriesMessage:
    properties:
      SourceType:
        $ref: '#/definitions/String'
    type: object
  DescribeEventSubscriptionsMessage:
    properties:
      Marker:
        $ref: '#/definitions/String'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      SubscriptionName:
        $ref: '#/definitions/String'
    type: object
  DescribeEventsMessage:
    properties:
      Duration:
        $ref: '#/definitions/IntegerOptional'
      EndTime:
        $ref: '#/definitions/TStamp'
      EventCategories:
        $ref: '#/definitions/EventCategoriesList'
      Marker:
        $ref: '#/definitions/String'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      SourceIdentifier:
        $ref: '#/definitions/String'
      SourceType:
        $ref: '#/definitions/SourceType'
      StartTime:
        $ref: '#/definitions/TStamp'
    type: object
  DescribeOptionGroupOptionsMessage:
    properties:
      EngineName:
        $ref: '#/definitions/String'
      MajorEngineVersion:
        $ref: '#/definitions/String'
      Marker:
        $ref: '#/definitions/String'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
    required:
      - EngineName
    type: object
  DescribeOptionGroupsMessage:
    properties:
      EngineName:
        $ref: '#/definitions/String'
      MajorEngineVersion:
        $ref: '#/definitions/String'
      Marker:
        $ref: '#/definitions/String'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      OptionGroupName:
        $ref: '#/definitions/String'
    type: object
  DescribeOrderableDBInstanceOptionsMessage:
    properties:
      DBInstanceClass:
        $ref: '#/definitions/String'
      Engine:
        $ref: '#/definitions/String'
      EngineVersion:
        $ref: '#/definitions/String'
      LicenseModel:
        $ref: '#/definitions/String'
      Marker:
        $ref: '#/definitions/String'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      Vpc:
        $ref: '#/definitions/BooleanOptional'
    required:
      - Engine
    type: object
  DescribeReservedDBInstancesMessage:
    properties:
      DBInstanceClass:
        $ref: '#/definitions/String'
      Duration:
        $ref: '#/definitions/String'
      Marker:
        $ref: '#/definitions/String'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      MultiAZ:
        $ref: '#/definitions/BooleanOptional'
      OfferingType:
        $ref: '#/definitions/String'
      ProductDescription:
        $ref: '#/definitions/String'
      ReservedDBInstanceId:
        $ref: '#/definitions/String'
      ReservedDBInstancesOfferingId:
        $ref: '#/definitions/String'
    type: object
  DescribeReservedDBInstancesOfferingsMessage:
    properties:
      DBInstanceClass:
        $ref: '#/definitions/String'
      Duration:
        $ref: '#/definitions/String'
      Marker:
        $ref: '#/definitions/String'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      MultiAZ:
        $ref: '#/definitions/BooleanOptional'
      OfferingType:
        $ref: '#/definitions/String'
      ProductDescription:
        $ref: '#/definitions/String'
      ReservedDBInstancesOfferingId:
        $ref: '#/definitions/String'
    type: object
  Double:
    format: double
    type: number
  DownloadDBLogFilePortionDetails:
    properties:
      AdditionalDataPending:
        $ref: '#/definitions/Boolean'
      LogFileData:
        $ref: '#/definitions/String'
      Marker:
        $ref: '#/definitions/String'
    type: object
  DownloadDBLogFilePortionMessage:
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      LogFileName:
        $ref: '#/definitions/String'
      Marker:
        $ref: '#/definitions/String'
      NumberOfLines:
        $ref: '#/definitions/Integer'
    required:
      - DBInstanceIdentifier
      - LogFileName
    type: object
  EC2SecurityGroup:
    properties:
      EC2SecurityGroupId:
        $ref: '#/definitions/String'
      EC2SecurityGroupName:
        $ref: '#/definitions/String'
      EC2SecurityGroupOwnerId:
        $ref: '#/definitions/String'
      Status:
        $ref: '#/definitions/String'
    type: object
  EC2SecurityGroupList:
    items:
      $ref: '#/definitions/EC2SecurityGroup'
    type: array
  Endpoint:
    properties:
      Address:
        $ref: '#/definitions/String'
      Port:
        $ref: '#/definitions/Integer'
    type: object
  EngineDefaults:
    properties:
      DBParameterGroupFamily:
        $ref: '#/definitions/String'
      Marker:
        $ref: '#/definitions/String'
      Parameters:
        $ref: '#/definitions/ParametersList'
    type: object
  Event:
    properties:
      Date:
        $ref: '#/definitions/TStamp'
      EventCategories:
        $ref: '#/definitions/EventCategoriesList'
      Message:
        $ref: '#/definitions/String'
      SourceIdentifier:
        $ref: '#/definitions/String'
      SourceType:
        $ref: '#/definitions/SourceType'
    type: object
  EventCategoriesList:
    items:
      $ref: '#/definitions/String'
    type: array
  EventCategoriesMap:
    properties:
      EventCategories:
        $ref: '#/definitions/EventCategoriesList'
      SourceType:
        $ref: '#/definitions/String'
    type: object
  EventCategoriesMapList:
    items:
      $ref: '#/definitions/EventCategoriesMap'
    type: array
  EventCategoriesMessage:
    properties:
      EventCategoriesMapList:
        $ref: '#/definitions/EventCategoriesMapList'
    type: object
  EventList:
    items:
      $ref: '#/definitions/Event'
    type: array
  EventSubscription:
    properties:
      CustSubscriptionId:
        $ref: '#/definitions/String'
      CustomerAwsId:
        $ref: '#/definitions/String'
      Enabled:
        $ref: '#/definitions/Boolean'
      EventCategoriesList:
        $ref: '#/definitions/EventCategoriesList'
      SnsTopicArn:
        $ref: '#/definitions/String'
      SourceIdsList:
        $ref: '#/definitions/SourceIdsList'
      SourceType:
        $ref: '#/definitions/String'
      Status:
        $ref: '#/definitions/String'
      SubscriptionCreationTime:
        $ref: '#/definitions/String'
    type: object
  EventSubscriptionQuotaExceededFault: {}
  EventSubscriptionsList:
    items:
      $ref: '#/definitions/EventSubscription'
    type: array
  EventSubscriptionsMessage:
    properties:
      EventSubscriptionsList:
        $ref: '#/definitions/EventSubscriptionsList'
      Marker:
        $ref: '#/definitions/String'
    type: object
  EventsMessage:
    properties:
      Events:
        $ref: '#/definitions/EventList'
      Marker:
        $ref: '#/definitions/String'
    type: object
  IPRange:
    properties:
      CIDRIP:
        $ref: '#/definitions/String'
      Status:
        $ref: '#/definitions/String'
    type: object
  IPRangeList:
    items:
      $ref: '#/definitions/IPRange'
    type: array
  InstanceQuotaExceededFault: {}
  InsufficientDBInstanceCapacityFault: {}
  Integer:
    type: integer
  IntegerOptional:
    type: integer
  InvalidDBInstanceStateFault: {}
  InvalidDBParameterGroupStateFault: {}
  InvalidDBSecurityGroupStateFault: {}
  InvalidDBSnapshotStateFault: {}
  InvalidDBSubnetGroupStateFault: {}
  InvalidDBSubnetStateFault: {}
  InvalidEventSubscriptionStateFault: {}
  InvalidOptionGroupStateFault: {}
  InvalidRestoreFault: {}
  InvalidSubnet: {}
  InvalidVPCNetworkStateFault: {}
  KeyList:
    items:
      $ref: '#/definitions/String'
    type: array
  ListTagsForResourceMessage:
    properties:
      ResourceName:
        $ref: '#/definitions/String'
    required:
      - ResourceName
    type: object
  Long:
    type: integer
  ModifyDBInstanceMessage:
    properties:
      AllocatedStorage:
        $ref: '#/definitions/IntegerOptional'
      AllowMajorVersionUpgrade:
        $ref: '#/definitions/Boolean'
      ApplyImmediately:
        $ref: '#/definitions/Boolean'
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/BooleanOptional'
      BackupRetentionPeriod:
        $ref: '#/definitions/IntegerOptional'
      DBInstanceClass:
        $ref: '#/definitions/String'
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      DBParameterGroupName:
        $ref: '#/definitions/String'
      DBSecurityGroups:
        $ref: '#/definitions/DBSecurityGroupNameList'
      EngineVersion:
        $ref: '#/definitions/String'
      Iops:
        $ref: '#/definitions/IntegerOptional'
      MasterUserPassword:
        $ref: '#/definitions/String'
      MultiAZ:
        $ref: '#/definitions/BooleanOptional'
      NewDBInstanceIdentifier:
        $ref: '#/definitions/String'
      OptionGroupName:
        $ref: '#/definitions/String'
      PreferredBackupWindow:
        $ref: '#/definitions/String'
      PreferredMaintenanceWindow:
        $ref: '#/definitions/String'
      VpcSecurityGroupIds:
        $ref: '#/definitions/VpcSecurityGroupIdList'
    required:
      - DBInstanceIdentifier
    type: object
  ModifyDBInstanceResult:
    properties:
      DBInstance:
        $ref: '#/definitions/DBInstance'
    type: object
  ModifyDBParameterGroupMessage:
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/String'
      Parameters:
        $ref: '#/definitions/ParametersList'
    required:
      - DBParameterGroupName
      - Parameters
    type: object
  ModifyDBSubnetGroupMessage:
    properties:
      DBSubnetGroupDescription:
        $ref: '#/definitions/String'
      DBSubnetGroupName:
        $ref: '#/definitions/String'
      SubnetIds:
        $ref: '#/definitions/SubnetIdentifierList'
    required:
      - DBSubnetGroupName
      - SubnetIds
    type: object
  ModifyDBSubnetGroupResult:
    properties:
      DBSubnetGroup:
        $ref: '#/definitions/DBSubnetGroup'
    type: object
  ModifyEventSubscriptionMessage:
    properties:
      Enabled:
        $ref: '#/definitions/BooleanOptional'
      EventCategories:
        $ref: '#/definitions/EventCategoriesList'
      SnsTopicArn:
        $ref: '#/definitions/String'
      SourceType:
        $ref: '#/definitions/String'
      SubscriptionName:
        $ref: '#/definitions/String'
    required:
      - SubscriptionName
    type: object
  ModifyEventSubscriptionResult:
    properties:
      EventSubscription:
        $ref: '#/definitions/EventSubscription'
    type: object
  ModifyOptionGroupMessage:
    properties:
      ApplyImmediately:
        $ref: '#/definitions/Boolean'
      OptionGroupName:
        $ref: '#/definitions/String'
      OptionsToInclude:
        $ref: '#/definitions/OptionConfigurationList'
      OptionsToRemove:
        $ref: '#/definitions/OptionNamesList'
    required:
      - OptionGroupName
    type: object
  ModifyOptionGroupResult:
    properties:
      OptionGroup:
        $ref: '#/definitions/OptionGroup'
    type: object
  Option:
    properties:
      DBSecurityGroupMemberships:
        $ref: '#/definitions/DBSecurityGroupMembershipList'
      OptionDescription:
        $ref: '#/definitions/String'
      OptionName:
        $ref: '#/definitions/String'
      OptionSettings:
        $ref: '#/definitions/OptionSettingConfigurationList'
      Persistent:
        $ref: '#/definitions/Boolean'
      Port:
        $ref: '#/definitions/IntegerOptional'
      VpcSecurityGroupMemberships:
        $ref: '#/definitions/VpcSecurityGroupMembershipList'
    type: object
  OptionConfiguration:
    properties:
      DBSecurityGroupMemberships:
        $ref: '#/definitions/DBSecurityGroupNameList'
      OptionName:
        $ref: '#/definitions/String'
      OptionSettings:
        $ref: '#/definitions/OptionSettingsList'
      Port:
        $ref: '#/definitions/IntegerOptional'
      VpcSecurityGroupMemberships:
        $ref: '#/definitions/VpcSecurityGroupIdList'
    required:
      - OptionName
    type: object
  OptionConfigurationList:
    items:
      $ref: '#/definitions/OptionConfiguration'
    type: array
  OptionGroup:
    properties:
      AllowsVpcAndNonVpcInstanceMemberships:
        $ref: '#/definitions/Boolean'
      EngineName:
        $ref: '#/definitions/String'
      MajorEngineVersion:
        $ref: '#/definitions/String'
      OptionGroupDescription:
        $ref: '#/definitions/String'
      OptionGroupName:
        $ref: '#/definitions/String'
      Options:
        $ref: '#/definitions/OptionsList'
      VpcId:
        $ref: '#/definitions/String'
    type: object
  OptionGroupAlreadyExistsFault: {}
  OptionGroupMembership:
    properties:
      OptionGroupName:
        $ref: '#/definitions/String'
      Status:
        $ref: '#/definitions/String'
    type: object
  OptionGroupMembershipList:
    items:
      $ref: '#/definitions/OptionGroupMembership'
    type: array
  OptionGroupNotFoundFault: {}
  OptionGroupOption:
    properties:
      DefaultPort:
        $ref: '#/definitions/IntegerOptional'
      Description:
        $ref: '#/definitions/String'
      EngineName:
        $ref: '#/definitions/String'
      MajorEngineVersion:
        $ref: '#/definitions/String'
      MinimumRequiredMinorEngineVersion:
        $ref: '#/definitions/String'
      Name:
        $ref: '#/definitions/String'
      OptionGroupOptionSettings:
        $ref: '#/definitions/OptionGroupOptionSettingsList'
      OptionsDependedOn:
        $ref: '#/definitions/OptionsDependedOn'
      Persistent:
        $ref: '#/definitions/Boolean'
      PortRequired:
        $ref: '#/definitions/Boolean'
    type: object
  OptionGroupOptionSetting:
    properties:
      AllowedValues:
        $ref: '#/definitions/String'
      ApplyType:
        $ref: '#/definitions/String'
      DefaultValue:
        $ref: '#/definitions/String'
      IsModifiable:
        $ref: '#/definitions/Boolean'
      SettingDescription:
        $ref: '#/definitions/String'
      SettingName:
        $ref: '#/definitions/String'
    type: object
  OptionGroupOptionSettingsList:
    items:
      $ref: '#/definitions/OptionGroupOptionSetting'
    type: array
  OptionGroupOptionsList:
    items:
      $ref: '#/definitions/OptionGroupOption'
    type: array
  OptionGroupOptionsMessage:
    properties:
      Marker:
        $ref: '#/definitions/String'
      OptionGroupOptions:
        $ref: '#/definitions/OptionGroupOptionsList'
    type: object
  OptionGroupQuotaExceededFault: {}
  OptionGroups:
    properties:
      Marker:
        $ref: '#/definitions/String'
      OptionGroupsList:
        $ref: '#/definitions/OptionGroupsList'
    type: object
  OptionGroupsList:
    items:
      $ref: '#/definitions/OptionGroup'
    type: array
  OptionNamesList:
    items:
      $ref: '#/definitions/String'
    type: array
  OptionSetting:
    properties:
      AllowedValues:
        $ref: '#/definitions/String'
      ApplyType:
        $ref: '#/definitions/String'
      DataType:
        $ref: '#/definitions/String'
      DefaultValue:
        $ref: '#/definitions/String'
      Description:
        $ref: '#/definitions/String'
      IsCollection:
        $ref: '#/definitions/Boolean'
      IsModifiable:
        $ref: '#/definitions/Boolean'
      Name:
        $ref: '#/definitions/String'
      Value:
        $ref: '#/definitions/String'
    type: object
  OptionSettingConfigurationList:
    items:
      $ref: '#/definitions/OptionSetting'
    type: array
  OptionSettingsList:
    items:
      $ref: '#/definitions/OptionSetting'
    type: array
  OptionsDependedOn:
    items:
      $ref: '#/definitions/String'
    type: array
  OptionsList:
    items:
      $ref: '#/definitions/Option'
    type: array
  OrderableDBInstanceOption:
    properties:
      AvailabilityZones:
        $ref: '#/definitions/AvailabilityZoneList'
      DBInstanceClass:
        $ref: '#/definitions/String'
      Engine:
        $ref: '#/definitions/String'
      EngineVersion:
        $ref: '#/definitions/String'
      LicenseModel:
        $ref: '#/definitions/String'
      MultiAZCapable:
        $ref: '#/definitions/Boolean'
      ReadReplicaCapable:
        $ref: '#/definitions/Boolean'
      Vpc:
        $ref: '#/definitions/Boolean'
    type: object
  OrderableDBInstanceOptionsList:
    items:
      $ref: '#/definitions/OrderableDBInstanceOption'
    type: array
  OrderableDBInstanceOptionsMessage:
    properties:
      Marker:
        $ref: '#/definitions/String'
      OrderableDBInstanceOptions:
        $ref: '#/definitions/OrderableDBInstanceOptionsList'
    type: object
  Parameter:
    properties:
      AllowedValues:
        $ref: '#/definitions/String'
      ApplyMethod:
        $ref: '#/definitions/ApplyMethod'
      ApplyType:
        $ref: '#/definitions/String'
      DataType:
        $ref: '#/definitions/String'
      Description:
        $ref: '#/definitions/String'
      IsModifiable:
        $ref: '#/definitions/Boolean'
      MinimumEngineVersion:
        $ref: '#/definitions/String'
      ParameterName:
        $ref: '#/definitions/String'
      ParameterValue:
        $ref: '#/definitions/String'
      Source:
        $ref: '#/definitions/String'
    type: object
  ParametersList:
    items:
      $ref: '#/definitions/Parameter'
    type: array
  PendingModifiedValues:
    properties:
      AllocatedStorage:
        $ref: '#/definitions/IntegerOptional'
      BackupRetentionPeriod:
        $ref: '#/definitions/IntegerOptional'
      DBInstanceClass:
        $ref: '#/definitions/String'
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      EngineVersion:
        $ref: '#/definitions/String'
      Iops:
        $ref: '#/definitions/IntegerOptional'
      MasterUserPassword:
        $ref: '#/definitions/String'
      MultiAZ:
        $ref: '#/definitions/BooleanOptional'
      Port:
        $ref: '#/definitions/IntegerOptional'
    type: object
  PointInTimeRestoreNotEnabledFault: {}
  PromoteReadReplicaMessage:
    properties:
      BackupRetentionPeriod:
        $ref: '#/definitions/IntegerOptional'
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      PreferredBackupWindow:
        $ref: '#/definitions/String'
    required:
      - DBInstanceIdentifier
    type: object
  PromoteReadReplicaResult:
    properties:
      DBInstance:
        $ref: '#/definitions/DBInstance'
    type: object
  ProvisionedIopsNotAvailableInAZFault: {}
  PurchaseReservedDBInstancesOfferingMessage:
    properties:
      DBInstanceCount:
        $ref: '#/definitions/IntegerOptional'
      ReservedDBInstanceId:
        $ref: '#/definitions/String'
      ReservedDBInstancesOfferingId:
        $ref: '#/definitions/String'
    required:
      - ReservedDBInstancesOfferingId
    type: object
  PurchaseReservedDBInstancesOfferingResult:
    properties:
      ReservedDBInstance:
        $ref: '#/definitions/ReservedDBInstance'
    type: object
  ReadReplicaDBInstanceIdentifierList:
    items:
      $ref: '#/definitions/String'
    type: array
  RebootDBInstanceMessage:
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      ForceFailover:
        $ref: '#/definitions/BooleanOptional'
    required:
      - DBInstanceIdentifier
    type: object
  RebootDBInstanceResult:
    properties:
      DBInstance:
        $ref: '#/definitions/DBInstance'
    type: object
  RecurringCharge:
    properties:
      RecurringChargeAmount:
        $ref: '#/definitions/Double'
      RecurringChargeFrequency:
        $ref: '#/definitions/String'
    type: object
  RecurringChargeList:
    items:
      $ref: '#/definitions/RecurringCharge'
    type: array
  RemoveSourceIdentifierFromSubscriptionMessage:
    properties:
      SourceIdentifier:
        $ref: '#/definitions/String'
      SubscriptionName:
        $ref: '#/definitions/String'
    required:
      - SubscriptionName
      - SourceIdentifier
    type: object
  RemoveSourceIdentifierFromSubscriptionResult:
    properties:
      EventSubscription:
        $ref: '#/definitions/EventSubscription'
    type: object
  RemoveTagsFromResourceMessage:
    properties:
      ResourceName:
        $ref: '#/definitions/String'
      TagKeys:
        $ref: '#/definitions/KeyList'
    required:
      - ResourceName
      - TagKeys
    type: object
  ReservedDBInstance:
    properties:
      CurrencyCode:
        $ref: '#/definitions/String'
      DBInstanceClass:
        $ref: '#/definitions/String'
      DBInstanceCount:
        $ref: '#/definitions/Integer'
      Duration:
        $ref: '#/definitions/Integer'
      FixedPrice:
        $ref: '#/definitions/Double'
      MultiAZ:
        $ref: '#/definitions/Boolean'
      OfferingType:
        $ref: '#/definitions/String'
      ProductDescription:
        $ref: '#/definitions/String'
      RecurringCharges:
        $ref: '#/definitions/RecurringChargeList'
      ReservedDBInstanceId:
        $ref: '#/definitions/String'
      ReservedDBInstancesOfferingId:
        $ref: '#/definitions/String'
      StartTime:
        $ref: '#/definitions/TStamp'
      State:
        $ref: '#/definitions/String'
      UsagePrice:
        $ref: '#/definitions/Double'
    type: object
  ReservedDBInstanceAlreadyExistsFault: {}
  ReservedDBInstanceList:
    items:
      $ref: '#/definitions/ReservedDBInstance'
    type: array
  ReservedDBInstanceMessage:
    properties:
      Marker:
        $ref: '#/definitions/String'
      ReservedDBInstances:
        $ref: '#/definitions/ReservedDBInstanceList'
    type: object
  ReservedDBInstanceNotFoundFault: {}
  ReservedDBInstanceQuotaExceededFault: {}
  ReservedDBInstancesOffering:
    properties:
      CurrencyCode:
        $ref: '#/definitions/String'
      DBInstanceClass:
        $ref: '#/definitions/String'
      Duration:
        $ref: '#/definitions/Integer'
      FixedPrice:
        $ref: '#/definitions/Double'
      MultiAZ:
        $ref: '#/definitions/Boolean'
      OfferingType:
        $ref: '#/definitions/String'
      ProductDescription:
        $ref: '#/definitions/String'
      RecurringCharges:
        $ref: '#/definitions/RecurringChargeList'
      ReservedDBInstancesOfferingId:
        $ref: '#/definitions/String'
      UsagePrice:
        $ref: '#/definitions/Double'
    type: object
  ReservedDBInstancesOfferingList:
    items:
      $ref: '#/definitions/ReservedDBInstancesOffering'
    type: array
  ReservedDBInstancesOfferingMessage:
    properties:
      Marker:
        $ref: '#/definitions/String'
      ReservedDBInstancesOfferings:
        $ref: '#/definitions/ReservedDBInstancesOfferingList'
    type: object
  ReservedDBInstancesOfferingNotFoundFault: {}
  ResetDBParameterGroupMessage:
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/String'
      Parameters:
        $ref: '#/definitions/ParametersList'
      ResetAllParameters:
        $ref: '#/definitions/Boolean'
    required:
      - DBParameterGroupName
    type: object
  RestoreDBInstanceFromDBSnapshotMessage:
    properties:
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/BooleanOptional'
      AvailabilityZone:
        $ref: '#/definitions/String'
      DBInstanceClass:
        $ref: '#/definitions/String'
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      DBName:
        $ref: '#/definitions/String'
      DBSnapshotIdentifier:
        $ref: '#/definitions/String'
      DBSubnetGroupName:
        $ref: '#/definitions/String'
      Engine:
        $ref: '#/definitions/String'
      Iops:
        $ref: '#/definitions/IntegerOptional'
      LicenseModel:
        $ref: '#/definitions/String'
      MultiAZ:
        $ref: '#/definitions/BooleanOptional'
      OptionGroupName:
        $ref: '#/definitions/String'
      Port:
        $ref: '#/definitions/IntegerOptional'
      PubliclyAccessible:
        $ref: '#/definitions/BooleanOptional'
    required:
      - DBInstanceIdentifier
      - DBSnapshotIdentifier
    type: object
  RestoreDBInstanceFromDBSnapshotResult:
    properties:
      DBInstance:
        $ref: '#/definitions/DBInstance'
    type: object
  RestoreDBInstanceToPointInTimeMessage:
    properties:
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/BooleanOptional'
      AvailabilityZone:
        $ref: '#/definitions/String'
      DBInstanceClass:
        $ref: '#/definitions/String'
      DBName:
        $ref: '#/definitions/String'
      DBSubnetGroupName:
        $ref: '#/definitions/String'
      Engine:
        $ref: '#/definitions/String'
      Iops:
        $ref: '#/definitions/IntegerOptional'
      LicenseModel:
        $ref: '#/definitions/String'
      MultiAZ:
        $ref: '#/definitions/BooleanOptional'
      OptionGroupName:
        $ref: '#/definitions/String'
      Port:
        $ref: '#/definitions/IntegerOptional'
      PubliclyAccessible:
        $ref: '#/definitions/BooleanOptional'
      RestoreTime:
        $ref: '#/definitions/TStamp'
      SourceDBInstanceIdentifier:
        $ref: '#/definitions/String'
      TargetDBInstanceIdentifier:
        $ref: '#/definitions/String'
      UseLatestRestorableTime:
        $ref: '#/definitions/Boolean'
    required:
      - SourceDBInstanceIdentifier
      - TargetDBInstanceIdentifier
    type: object
  RestoreDBInstanceToPointInTimeResult:
    properties:
      DBInstance:
        $ref: '#/definitions/DBInstance'
    type: object
  RevokeDBSecurityGroupIngressMessage:
    properties:
      CIDRIP:
        $ref: '#/definitions/String'
      DBSecurityGroupName:
        $ref: '#/definitions/String'
      EC2SecurityGroupId:
        $ref: '#/definitions/String'
      EC2SecurityGroupName:
        $ref: '#/definitions/String'
      EC2SecurityGroupOwnerId:
        $ref: '#/definitions/String'
    required:
      - DBSecurityGroupName
    type: object
  RevokeDBSecurityGroupIngressResult:
    properties:
      DBSecurityGroup:
        $ref: '#/definitions/DBSecurityGroup'
    type: object
  SNSInvalidTopicFault: {}
  SNSNoAuthorizationFault: {}
  SNSTopicArnNotFoundFault: {}
  SnapshotQuotaExceededFault: {}
  SourceIdsList:
    items:
      $ref: '#/definitions/String'
    type: array
  SourceNotFoundFault: {}
  SourceType:
    enum:
      - db-instance
      - db-parameter-group
      - db-security-group
      - db-snapshot
    type: string
  StorageQuotaExceededFault: {}
  String:
    type: string
  Subnet:
    properties:
      SubnetAvailabilityZone:
        $ref: '#/definitions/AvailabilityZone'
      SubnetIdentifier:
        $ref: '#/definitions/String'
      SubnetStatus:
        $ref: '#/definitions/String'
    type: object
  SubnetAlreadyInUse: {}
  SubnetIdentifierList:
    items:
      $ref: '#/definitions/String'
    type: array
  SubnetList:
    items:
      $ref: '#/definitions/Subnet'
    type: array
  SubscriptionAlreadyExistFault: {}
  SubscriptionCategoryNotFoundFault: {}
  SubscriptionNotFoundFault: {}
  SupportedCharacterSetsList:
    items:
      $ref: '#/definitions/CharacterSet'
    type: array
  TStamp:
    format: date-time
    type: string
  Tag:
    properties:
      Key:
        $ref: '#/definitions/String'
      Value:
        $ref: '#/definitions/String'
    type: object
  TagList:
    items:
      $ref: '#/definitions/Tag'
    type: array
  TagListMessage:
    properties:
      TagList:
        $ref: '#/definitions/TagList'
    type: object
  VpcSecurityGroupIdList:
    items:
      $ref: '#/definitions/String'
    type: array
  VpcSecurityGroupMembership:
    properties:
      Status:
        $ref: '#/definitions/String'
      VpcSecurityGroupId:
        $ref: '#/definitions/String'
    type: object
  VpcSecurityGroupMembershipList:
    items:
      $ref: '#/definitions/VpcSecurityGroupMembership'
    type: array
x-servers:
  - description: The Amazon RDS multi-region endpoint
    url: 'http://rds.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The Amazon RDS multi-region endpoint
    url: 'https://rds.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The general Amazon RDS multi-region endpoint
    url: 'http://rds.amazonaws.com'
    variables: {}
  - description: The general Amazon RDS multi-region endpoint
    url: 'https://rds.amazonaws.com'
    variables: {}
  - description: The Amazon RDS endpoint for China (Beijing) and China (Ningxia)
    url: 'http://rds.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
  - description: The Amazon RDS endpoint for China (Beijing) and China (Ningxia)
    url: 'https://rds.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
