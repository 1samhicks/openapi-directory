swagger: '2.0'
schemes:
  - https
  - http
host: guardduty.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: 'Amazon GuardDuty is a continuous security monitoring service that analyzes and processes the following data sources: VPC Flow Logs, AWS CloudTrail event logs, and DNS logs. It uses threat intelligence feeds, such as lists of malicious IPs and domains, and machine learning to identify unexpected and potentially unauthorized and malicious activity within your AWS environment. This can include issues like escalations of privileges, uses of exposed credentials, or communication with malicious IPs, URLs, or domains. For example, GuardDuty can detect compromised EC2 instances serving malware or mining bitcoin. It also monitors AWS account access behavior for signs of compromise, such as unauthorized infrastructure deployments, like instances deployed in a region that has never been used, or unusual API calls, like a password policy change to reduce password strength. GuardDuty informs you of the status of your AWS environment by producing security findings that you can view in the GuardDuty console or through Amazon CloudWatch events. For more information, see <a href="https://docs.aws.amazon.com/guardduty/latest/ug/what-is-guardduty.html"> Amazon GuardDuty User Guide</a>. '
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon GuardDuty
  version: '2017-11-28'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/guardduty-2017-11-28.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: guardduty
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/guardduty/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /detector:
    get:
      description: Lists detectorIds of all the existing Amazon GuardDuty detector resources.
      operationId: ListDetectors
      parameters:
        - description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 50. The maximum value is 50.
          in: query
          maximum: 50
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.
          in: query
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDetectorsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Creates a single Amazon GuardDuty detector. A detector is a resource that represents the GuardDuty service. To start using GuardDuty, you must create a detector in each region that you enable the service. You can have only one detector per account per region.'
      operationId: CreateDetector
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              clientToken:
                description: The idempotency token for the create request.
                maxLength: 64
                minLength: 0
                type: string
              enable:
                description: A boolean value that specifies whether the detector is to be enabled.
                type: boolean
              findingPublishingFrequency:
                description: A enum value that specifies how frequently customer got Finding updates published.
                enum:
                  - FIFTEEN_MINUTES
                  - ONE_HOUR
                  - SIX_HOURS
                type: string
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: The tags to be added to a new detector resource.
                maxProperties: 200
                minProperties: 1
                type: object
            required:
              - enable
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDetectorResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}':
    delete:
      description: Deletes a Amazon GuardDuty detector specified by the detector ID.
      operationId: DeleteDetector
      parameters:
        - description: The unique ID of the detector that you want to delete.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDetectorResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    get:
      description: Retrieves an Amazon GuardDuty detector specified by the detectorId.
      operationId: GetDetector
      parameters:
        - description: The unique ID of the detector that you want to get.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDetectorResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates an Amazon GuardDuty detector specified by the detectorId.
      operationId: UpdateDetector
      parameters:
        - description: The unique ID of the detector that you want to update.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              enable:
                description: Updated boolean value for the detector that specifies whether the detector is enabled.
                type: boolean
              findingPublishingFrequency:
                description: A enum value that specifies how frequently customer got Finding updates published.
                enum:
                  - FIFTEEN_MINUTES
                  - ONE_HOUR
                  - SIX_HOURS
                type: string
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDetectorResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/filter':
    get:
      description: Returns a paginated list of the current filters.
      operationId: ListFilters
      parameters:
        - description: The unique ID of the detector the filter is associated with.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 50. The maximum value is 50.
          in: query
          maximum: 50
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.
          in: query
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFiltersResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a filter using the specified finding criteria.
      operationId: CreateFilter
      parameters:
        - description: The unique ID of the detector of the GuardDuty account for which you want to create a filter.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              action:
                description: Specifies the action that is to be applied to the findings that match the filter.
                enum:
                  - NOOP
                  - ARCHIVE
                maxLength: 300
                minLength: 1
                type: string
              clientToken:
                description: The idempotency token for the create request.
                maxLength: 64
                minLength: 0
                type: string
              description:
                description: The description of the filter.
                maxLength: 512
                minLength: 0
                type: string
              findingCriteria:
                description: Contains finding criteria information.
                properties:
                  Criterion:
                    $ref: '#/definitions/Criterion'
                    description: Represents a map of finding properties that match specified conditions and values when querying findings.
                type: object
              name:
                description: The name of the filter.
                maxLength: 64
                minLength: 3
                type: string
              rank:
                description: Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.
                maximum: 100
                minimum: 1
                type: integer
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: The tags to be added to a new filter resource.
                maxProperties: 200
                minProperties: 1
                type: object
            required:
              - name
              - findingCriteria
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateFilterResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/filter/{filterName}':
    delete:
      description: Deletes the filter specified by the filter name.
      operationId: DeleteFilter
      parameters:
        - description: The unique ID of the detector the filter is associated with.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - description: The name of the filter you want to delete.
          in: path
          name: filterName
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteFilterResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    get:
      description: Returns the details of the filter specified by the filter name.
      operationId: GetFilter
      parameters:
        - description: The unique ID of the detector the filter is associated with.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - description: The name of the filter you want to get.
          in: path
          name: filterName
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFilterResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates the filter specified by the filter name.
      operationId: UpdateFilter
      parameters:
        - description: The unique ID of the detector that specifies the GuardDuty service where you want to update a filter.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - description: The name of the filter.
          in: path
          name: filterName
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              action:
                description: Specifies the action that is to be applied to the findings that match the filter.
                enum:
                  - NOOP
                  - ARCHIVE
                maxLength: 300
                minLength: 1
                type: string
              description:
                description: The description of the filter.
                maxLength: 512
                minLength: 0
                type: string
              findingCriteria:
                description: Contains finding criteria information.
                properties:
                  Criterion:
                    $ref: '#/definitions/Criterion'
                    description: Represents a map of finding properties that match specified conditions and values when querying findings.
                type: object
              rank:
                description: Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.
                maximum: 100
                minimum: 1
                type: integer
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFilterResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/findings':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists Amazon GuardDuty findings for the specified detector ID.
      operationId: ListFindings
      parameters:
        - description: The ID of the detector that specifies the GuardDuty service whose findings you want to list.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              findingCriteria:
                description: Contains finding criteria information.
                properties:
                  Criterion:
                    $ref: '#/definitions/Criterion'
                    description: Represents a map of finding properties that match specified conditions and values when querying findings.
                type: object
              maxResults:
                description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 50. The maximum value is 50.
                maximum: 50
                minimum: 1
                type: integer
              nextToken:
                description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.
                type: string
              sortCriteria:
                description: Contains information about the criteria for sorting.
                properties:
                  AttributeName:
                    $ref: '#/definitions/String'
                    description: 'Represents the finding attribute (for example, accountId) by which to sort findings.'
                  OrderBy:
                    $ref: '#/definitions/OrderBy'
                    description: Order by which the sorted findings are to be displayed.
                type: object
            type: object
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFindingsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/findings/archive':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Archives GuardDuty findings specified by the list of finding IDs.</p> <note> <p>Only the master account can archive findings. Member accounts do not have permission to archive findings from their accounts.</p> </note>
      operationId: ArchiveFindings
      parameters:
        - description: The ID of the detector that specifies the GuardDuty service whose findings you want to archive.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              findingIds:
                description: IDs of the findings that you want to archive.
                items:
                  $ref: '#/definitions/FindingId'
                maxItems: 50
                minItems: 0
                type: array
            required:
              - findingIds
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ArchiveFindingsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/findings/create':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Generates example findings of types specified by the list of finding types. If ''NULL'' is specified for findingTypes, the API generates example findings of all supported finding types.'
      operationId: CreateSampleFindings
      parameters:
        - description: The ID of the detector to create sample findings for.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              findingTypes:
                description: Types of sample findings that you want to generate.
                items:
                  $ref: '#/definitions/FindingType'
                maxItems: 50
                minItems: 0
                type: array
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSampleFindingsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/findings/feedback':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Marks specified Amazon GuardDuty findings as useful or not useful.
      operationId: UpdateFindingsFeedback
      parameters:
        - description: The ID of the detector that specifies the GuardDuty service whose findings you want to mark as useful or not useful.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              comments:
                description: Additional feedback about the GuardDuty findings.
                type: string
              feedback:
                description: 'Valid values: USEFUL | NOT_USEFUL'
                enum:
                  - USEFUL
                  - NOT_USEFUL
                type: string
              findingIds:
                description: IDs of the findings that you want to mark as useful or not useful.
                items:
                  $ref: '#/definitions/FindingId'
                maxItems: 50
                minItems: 0
                type: array
            required:
              - findingIds
              - feedback
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFindingsFeedbackResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/findings/get':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Describes Amazon GuardDuty findings specified by finding IDs.
      operationId: GetFindings
      parameters:
        - description: The ID of the detector that specifies the GuardDuty service whose findings you want to retrieve.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              findingIds:
                description: IDs of the findings that you want to retrieve.
                items:
                  $ref: '#/definitions/FindingId'
                maxItems: 50
                minItems: 0
                type: array
              sortCriteria:
                description: Contains information about the criteria for sorting.
                properties:
                  AttributeName:
                    $ref: '#/definitions/String'
                    description: 'Represents the finding attribute (for example, accountId) by which to sort findings.'
                  OrderBy:
                    $ref: '#/definitions/OrderBy'
                    description: Order by which the sorted findings are to be displayed.
                type: object
            required:
              - findingIds
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFindingsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/findings/statistics':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists Amazon GuardDuty findings' statistics for the specified detector ID.
      operationId: GetFindingsStatistics
      parameters:
        - description: The ID of the detector that specifies the GuardDuty service whose findings' statistics you want to retrieve.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              findingCriteria:
                description: Contains finding criteria information.
                properties:
                  Criterion:
                    $ref: '#/definitions/Criterion'
                    description: Represents a map of finding properties that match specified conditions and values when querying findings.
                type: object
              findingStatisticTypes:
                description: Types of finding statistics to retrieve.
                items:
                  $ref: '#/definitions/FindingStatisticType'
                maxItems: 10
                minItems: 0
                type: array
            required:
              - findingStatisticTypes
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFindingsStatisticsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/findings/unarchive':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Unarchives Amazon GuardDuty findings specified by the list of finding IDs.
      operationId: UnarchiveFindings
      parameters:
        - description: The ID of the detector that specifies the GuardDuty service whose findings you want to unarchive.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              findingIds:
                description: IDs of the findings that you want to unarchive.
                items:
                  $ref: '#/definitions/FindingId'
                maxItems: 50
                minItems: 0
                type: array
            required:
              - findingIds
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UnarchiveFindingsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/ipset':
    get:
      description: Lists the IPSets of the GuardDuty service specified by the detector ID.
      operationId: ListIPSets
      parameters:
        - description: The unique ID of the detector the ipSet is associated with.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 50. The maximum value is 50.
          in: query
          maximum: 50
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.
          in: query
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListIPSetsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a new IPSet - a list of trusted IP addresses that have been whitelisted for secure communication with AWS infrastructure and applications.
      operationId: CreateIPSet
      parameters:
        - description: The unique ID of the detector of the GuardDuty account for which you want to create an IPSet.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              activate:
                description: A boolean value that indicates whether GuardDuty is to start using the uploaded IPSet.
                type: boolean
              clientToken:
                description: The idempotency token for the create request.
                maxLength: 64
                minLength: 0
                type: string
              format:
                description: The format of the file that contains the IPSet.
                enum:
                  - TXT
                  - STIX
                  - OTX_CSV
                  - ALIEN_VAULT
                  - PROOF_POINT
                  - FIRE_EYE
                maxLength: 300
                minLength: 1
                type: string
              location:
                description: 'The URI of the file that contains the IPSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key)'
                maxLength: 300
                minLength: 1
                type: string
              name:
                description: The user friendly name to identify the IPSet. This name is displayed in all findings that are triggered by activity that involves IP addresses included in this IPSet.
                maxLength: 300
                minLength: 1
                type: string
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: The tags to be added to a new IP set resource.
                maxProperties: 200
                minProperties: 1
                type: object
            required:
              - name
              - format
              - location
              - activate
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateIPSetResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/ipset/{ipSetId}':
    delete:
      description: Deletes the IPSet specified by the IPSet ID.
      operationId: DeleteIPSet
      parameters:
        - description: The unique ID of the detector the ipSet is associated with.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - description: The unique ID of the ipSet you want to delete.
          in: path
          name: ipSetId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteIPSetResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    get:
      description: Retrieves the IPSet specified by the IPSet ID.
      operationId: GetIPSet
      parameters:
        - description: The unique ID of the detector the ipSet is associated with.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - description: The unique ID of the ipSet you want to get.
          in: path
          name: ipSetId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetIPSetResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates the IPSet specified by the IPSet ID.
      operationId: UpdateIPSet
      parameters:
        - description: The detectorID that specifies the GuardDuty service whose IPSet you want to update.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - description: The unique ID that specifies the IPSet that you want to update.
          in: path
          name: ipSetId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              activate:
                description: The updated boolean value that specifies whether the IPSet is active or not.
                type: boolean
              location:
                description: 'The updated URI of the file that contains the IPSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key).'
                maxLength: 300
                minLength: 1
                type: string
              name:
                description: The unique ID that specifies the IPSet that you want to update.
                maxLength: 300
                minLength: 1
                type: string
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateIPSetResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/master':
    get:
      description: Provides the details for the GuardDuty master account associated with the current GuardDuty member account.
      operationId: GetMasterAccount
      parameters:
        - description: The unique ID of the detector of the GuardDuty member account.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMasterAccountResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Accepts the invitation to be monitored by a master GuardDuty account.
      operationId: AcceptInvitation
      parameters:
        - description: The unique ID of the detector of the GuardDuty member account.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              invitationId:
                description: This value is used to validate the master account to the member account.
                type: string
              masterId:
                description: The account ID of the master GuardDuty account whose invitation you're accepting.
                type: string
            required:
              - masterId
              - invitationId
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AcceptInvitationResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/master/disassociate':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Disassociates the current GuardDuty member account from its master account.
      operationId: DisassociateFromMasterAccount
      parameters:
        - description: The unique ID of the detector of the GuardDuty member account.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateFromMasterAccountResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/member':
    get:
      description: Lists details about all member accounts for the current GuardDuty master account.
      operationId: ListMembers
      parameters:
        - description: The unique ID of the detector the member is associated with.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 50. The maximum value is 50.
          in: query
          maximum: 50
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.
          in: query
          name: nextToken
          required: false
          type: string
        - description: Specifies whether to only return associated members or to return all members (including members which haven't been invited yet or have been disassociated).
          in: query
          name: onlyAssociated
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListMembersResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates member accounts of the current AWS account by specifying a list of AWS account IDs. The current AWS account can then invite these members to manage GuardDuty in their accounts.
      operationId: CreateMembers
      parameters:
        - description: The unique ID of the detector of the GuardDuty account with which you want to associate member accounts.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              accountDetails:
                description: A list of account ID and email address pairs of the accounts that you want to associate with the master GuardDuty account.
                items:
                  $ref: '#/definitions/AccountDetail'
                maxItems: 50
                minItems: 1
                type: array
            required:
              - accountDetails
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateMembersResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/member/delete':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes GuardDuty member accounts (to the current GuardDuty master account) specified by the account IDs.
      operationId: DeleteMembers
      parameters:
        - description: The unique ID of the detector of the GuardDuty account whose members you want to delete.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              accountIds:
                description: A list of account IDs of the GuardDuty member accounts that you want to delete.
                items:
                  $ref: '#/definitions/AccountId'
                maxItems: 50
                minItems: 1
                type: array
            required:
              - accountIds
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteMembersResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/member/disassociate':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Disassociates GuardDuty member accounts (to the current GuardDuty master account) specified by the account IDs.
      operationId: DisassociateMembers
      parameters:
        - description: The unique ID of the detector of the GuardDuty account whose members you want to disassociate from master.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              accountIds:
                description: A list of account IDs of the GuardDuty member accounts that you want to disassociate from master.
                items:
                  $ref: '#/definitions/AccountId'
                maxItems: 50
                minItems: 1
                type: array
            required:
              - accountIds
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateMembersResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/member/get':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves GuardDuty member accounts (to the current GuardDuty master account) specified by the account IDs.
      operationId: GetMembers
      parameters:
        - description: The unique ID of the detector of the GuardDuty account whose members you want to retrieve.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              accountIds:
                description: A list of account IDs of the GuardDuty member accounts that you want to describe.
                items:
                  $ref: '#/definitions/AccountId'
                maxItems: 50
                minItems: 1
                type: array
            required:
              - accountIds
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMembersResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/member/invite':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Invites other AWS accounts (created as members of the current AWS account by CreateMembers) to enable GuardDuty and allow the current AWS account to view and manage these accounts' GuardDuty findings on their behalf as the master account.
      operationId: InviteMembers
      parameters:
        - description: The unique ID of the detector of the GuardDuty account with which you want to invite members.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              accountIds:
                description: A list of account IDs of the accounts that you want to invite to GuardDuty as members.
                items:
                  $ref: '#/definitions/AccountId'
                maxItems: 50
                minItems: 1
                type: array
              disableEmailNotification:
                description: A boolean value that specifies whether you want to disable email notification to the accounts that you’re inviting to GuardDuty as members.
                type: boolean
              message:
                description: The invitation message that you want to send to the accounts that you’re inviting to GuardDuty as members.
                type: string
            required:
              - accountIds
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InviteMembersResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/member/start':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Re-enables GuardDuty to monitor findings of the member accounts specified by the account IDs. A master GuardDuty account can run this command after disabling GuardDuty from monitoring these members' findings by running StopMonitoringMembers.
      operationId: StartMonitoringMembers
      parameters:
        - description: The unique ID of the detector of the GuardDuty account whom you want to re-enable to monitor members' findings.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              accountIds:
                description: A list of account IDs of the GuardDuty member accounts whose findings you want the master account to monitor.
                items:
                  $ref: '#/definitions/AccountId'
                maxItems: 50
                minItems: 1
                type: array
            required:
              - accountIds
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartMonitoringMembersResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/member/stop':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Disables GuardDuty from monitoring findings of the member accounts specified by the account IDs. After running this command, a master GuardDuty account can run StartMonitoringMembers to re-enable GuardDuty to monitor these members’ findings.'
      operationId: StopMonitoringMembers
      parameters:
        - description: The unique ID of the detector of the GuardDuty account that you want to stop from monitor members' findings.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              accountIds:
                description: A list of account IDs of the GuardDuty member accounts whose findings you want the master account to stop monitoring.
                items:
                  $ref: '#/definitions/AccountId'
                maxItems: 50
                minItems: 1
                type: array
            required:
              - accountIds
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopMonitoringMembersResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/threatintelset':
    get:
      description: Lists the ThreatIntelSets of the GuardDuty service specified by the detector ID.
      operationId: ListThreatIntelSets
      parameters:
        - description: The unique ID of the detector the threatIntelSet is associated with.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 50. The maximum value is 50.
          in: query
          maximum: 50
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.
          in: query
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListThreatIntelSetsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Create a new ThreatIntelSet. ThreatIntelSets consist of known malicious IP addresses. GuardDuty generates findings based on ThreatIntelSets.
      operationId: CreateThreatIntelSet
      parameters:
        - description: The unique ID of the detector of the GuardDuty account for which you want to create a threatIntelSet.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              activate:
                description: A boolean value that indicates whether GuardDuty is to start using the uploaded ThreatIntelSet.
                type: boolean
              clientToken:
                description: The idempotency token for the create request.
                maxLength: 64
                minLength: 0
                type: string
              format:
                description: The format of the file that contains the ThreatIntelSet.
                enum:
                  - TXT
                  - STIX
                  - OTX_CSV
                  - ALIEN_VAULT
                  - PROOF_POINT
                  - FIRE_EYE
                maxLength: 300
                minLength: 1
                type: string
              location:
                description: 'The URI of the file that contains the ThreatIntelSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key).'
                maxLength: 300
                minLength: 1
                type: string
              name:
                description: A user-friendly ThreatIntelSet name that is displayed in all finding generated by activity that involves IP addresses included in this ThreatIntelSet.
                maxLength: 300
                minLength: 1
                type: string
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: The tags to be added to a new Threat List resource.
                maxProperties: 200
                minProperties: 1
                type: object
            required:
              - name
              - format
              - location
              - activate
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateThreatIntelSetResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/detector/{detectorId}/threatintelset/{threatIntelSetId}':
    delete:
      description: Deletes ThreatIntelSet specified by the ThreatIntelSet ID.
      operationId: DeleteThreatIntelSet
      parameters:
        - description: The unique ID of the detector the threatIntelSet is associated with.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - description: The unique ID of the threatIntelSet you want to delete.
          in: path
          name: threatIntelSetId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteThreatIntelSetResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    get:
      description: Retrieves the ThreatIntelSet that is specified by the ThreatIntelSet ID.
      operationId: GetThreatIntelSet
      parameters:
        - description: The unique ID of the detector the threatIntelSet is associated with.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - description: The unique ID of the threatIntelSet you want to get.
          in: path
          name: threatIntelSetId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetThreatIntelSetResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates the ThreatIntelSet specified by ThreatIntelSet ID.
      operationId: UpdateThreatIntelSet
      parameters:
        - description: The detectorID that specifies the GuardDuty service whose ThreatIntelSet you want to update.
          in: path
          maxLength: 300
          minLength: 1
          name: detectorId
          required: true
          type: string
        - description: The unique ID that specifies the ThreatIntelSet that you want to update.
          in: path
          name: threatIntelSetId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              activate:
                description: The updated boolean value that specifies whether the ThreateIntelSet is active or not.
                type: boolean
              location:
                description: 'The updated URI of the file that contains the ThreateIntelSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key)'
                maxLength: 300
                minLength: 1
                type: string
              name:
                description: The unique ID that specifies the ThreatIntelSet that you want to update.
                maxLength: 300
                minLength: 1
                type: string
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateThreatIntelSetResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  /invitation:
    get:
      description: Lists all GuardDuty membership invitations that were sent to the current AWS account.
      operationId: ListInvitations
      parameters:
        - description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 50. The maximum value is 50.
          in: query
          maximum: 50
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.
          in: query
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListInvitationsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /invitation/count:
    get:
      description: Returns the count of all GuardDuty membership invitations that were sent to the current member account except the currently accepted invitation.
      operationId: GetInvitationsCount
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInvitationsCountResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /invitation/decline:
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Declines invitations sent to the current member account by AWS account specified by their account IDs.
      operationId: DeclineInvitations
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              accountIds:
                description: A list of account IDs of the AWS accounts that sent invitations to the current member account that you want to decline invitations from.
                items:
                  $ref: '#/definitions/AccountId'
                maxItems: 50
                minItems: 1
                type: array
            required:
              - accountIds
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeclineInvitationsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  /invitation/delete:
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes invitations sent to the current member account by AWS accounts specified by their account IDs.
      operationId: DeleteInvitations
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              accountIds:
                description: A list of account IDs of the AWS accounts that sent invitations to the current member account that you want to delete invitations from.
                items:
                  $ref: '#/definitions/AccountId'
                maxItems: 50
                minItems: 1
                type: array
            required:
              - accountIds
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteInvitationsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/tags/{resourceArn}':
    get:
      description: 'Lists tags for a resource. Tagging is currently supported for detectors, finding filters, IP sets, and Threat Intel sets, with a limit of 50 tags per resource. When invoked, this operation returns all assigned tags for a given resource..'
      operationId: ListTagsForResource
      parameters:
        - description: 'The Amazon Resource Name (ARN) for the given GuardDuty resource '
          in: path
          name: resourceArn
          pattern: '^arn:[A-Za-z_.-]{1,20}:guardduty:[A-Za-z0-9_/.-]{0,63}:\d+:detector/[A-Za-z0-9_/.-]{32,264}$'
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Adds tags to a resource.
      operationId: TagResource
      parameters:
        - description: 'The Amazon Resource Name (ARN) for the given GuardDuty resource '
          in: path
          name: resourceArn
          pattern: '^arn:[A-Za-z_.-]{1,20}:guardduty:[A-Za-z0-9_/.-]{0,63}:\d+:detector/[A-Za-z0-9_/.-]{32,264}$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: The tags to be added to a resource.
                maxProperties: 200
                minProperties: 1
                type: object
            required:
              - tags
            type: object
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/tags/{resourceArn}#tagKeys':
    delete:
      description: Removes tags from a resource.
      operationId: UntagResource
      parameters:
        - description: 'The Amazon Resource Name (ARN) for the given GuardDuty resource '
          in: path
          name: resourceArn
          pattern: '^arn:[A-Za-z_.-]{1,20}:guardduty:[A-Za-z0-9_/.-]{0,63}:\d+:detector/[A-Za-z0-9_/.-]{32,264}$'
          required: true
          type: string
        - description: The tag keys to remove from a resource.
          in: query
          items:
            type: string
          name: tagKeys
          required: true
          type: array
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AcceptInvitationRequest:
    properties:
      InvitationId:
        $ref: '#/definitions/String'
        description: This value is used to validate the master account to the member account.
      MasterId:
        $ref: '#/definitions/String'
        description: The account ID of the master GuardDuty account whose invitation you're accepting.
    required:
      - MasterId
      - InvitationId
    type: object
  AcceptInvitationResponse:
    properties: {}
    type: object
  AccessKeyDetails:
    description: Contains information about the access keys.
    properties:
      AccessKeyId:
        $ref: '#/definitions/String'
        description: Access key ID of the user.
      PrincipalId:
        $ref: '#/definitions/String'
        description: The principal ID of the user.
      UserName:
        $ref: '#/definitions/String'
        description: The name of the user.
      UserType:
        $ref: '#/definitions/String'
        description: The type of the user.
    type: object
  AccountDetail:
    description: Contains information about the account.
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: Member account ID.
      Email:
        $ref: '#/definitions/Email'
        description: Member account's email address.
    required:
      - AccountId
      - Email
    type: object
  AccountDetails:
    items:
      $ref: '#/definitions/AccountDetail'
    maxItems: 50
    minItems: 1
    type: array
  AccountId:
    maxLength: 12
    minLength: 12
    type: string
  AccountIds:
    items:
      $ref: '#/definitions/AccountId'
    maxItems: 50
    minItems: 1
    type: array
  Action:
    description: Contains information about action.
    properties:
      ActionType:
        $ref: '#/definitions/String'
        description: GuardDuty Finding activity type.
      AwsApiCallAction:
        $ref: '#/definitions/AwsApiCallAction'
        description: Information about the AWS_API_CALL action described in this finding.
      DnsRequestAction:
        $ref: '#/definitions/DnsRequestAction'
        description: Information about the DNS_REQUEST action described in this finding.
      NetworkConnectionAction:
        $ref: '#/definitions/NetworkConnectionAction'
        description: Information about the NETWORK_CONNECTION action described in this finding.
      PortProbeAction:
        $ref: '#/definitions/PortProbeAction'
        description: Information about the PORT_PROBE action described in this finding.
    type: object
  ArchiveFindingsRequest:
    properties:
      FindingIds:
        $ref: '#/definitions/FindingIds'
        description: IDs of the findings that you want to archive.
    required:
      - FindingIds
    type: object
  ArchiveFindingsResponse:
    properties: {}
    type: object
  AwsApiCallAction:
    description: Contains information about the API operation.
    properties:
      Api:
        $ref: '#/definitions/String'
        description: AWS API name.
      CallerType:
        $ref: '#/definitions/String'
        description: AWS API caller type.
      DomainDetails:
        $ref: '#/definitions/DomainDetails'
        description: Domain information for the AWS API call.
      RemoteIpDetails:
        $ref: '#/definitions/RemoteIpDetails'
        description: Remote IP information of the connection.
      ServiceName:
        $ref: '#/definitions/String'
        description: AWS service name whose API was invoked.
    type: object
  BadRequestException: {}
  Boolean:
    type: boolean
  City:
    description: Contains information about the city associated with the IP address.
    properties:
      CityName:
        $ref: '#/definitions/String'
        description: City name of the remote IP address.
    type: object
  ClientToken:
    maxLength: 64
    minLength: 0
    type: string
  Condition:
    description: Contains information about the condition.
    properties:
      Eq:
        $ref: '#/definitions/Eq'
        description: Deprecated. Represents the equal condition to be applied to a single field when querying for findings.
      Equals:
        $ref: '#/definitions/Equals'
        description: Represents an <b>equal</b> condition to be applied to a single field when querying for findings.
      GreaterThan:
        $ref: '#/definitions/Long'
        description: Represents a greater than condition to be applied to a single field when querying for findings.
      GreaterThanOrEqual:
        $ref: '#/definitions/Long'
        description: Represents a greater than equal condition to be applied to a single field when querying for findings.
      Gt:
        $ref: '#/definitions/Integer'
        description: Deprecated. Represents a greater than condition to be applied to a single field when querying for findings.
      Gte:
        $ref: '#/definitions/Integer'
        description: Deprecated. Represents a greater than equal condition to be applied to a single field when querying for findings.
      LessThan:
        $ref: '#/definitions/Long'
        description: Represents a less than condition to be applied to a single field when querying for findings.
      LessThanOrEqual:
        $ref: '#/definitions/Long'
        description: Represents a less than equal condition to be applied to a single field when querying for findings.
      Lt:
        $ref: '#/definitions/Integer'
        description: Deprecated. Represents a less than condition to be applied to a single field when querying for findings.
      Lte:
        $ref: '#/definitions/Integer'
        description: Deprecated. Represents a less than equal condition to be applied to a single field when querying for findings.
      Neq:
        $ref: '#/definitions/Neq'
        description: Deprecated. Represents the not equal condition to be applied to a single field when querying for findings.
      NotEquals:
        $ref: '#/definitions/NotEquals'
        description: Represents an <b>not equal</b> condition to be applied to a single field when querying for findings.
    type: object
  CountBySeverity:
    additionalProperties:
      $ref: '#/definitions/Integer'
    type: object
  Country:
    description: Contains information about the country.
    properties:
      CountryCode:
        $ref: '#/definitions/String'
        description: Country code of the remote IP address.
      CountryName:
        $ref: '#/definitions/String'
        description: Country name of the remote IP address.
    type: object
  CreateDetectorRequest:
    properties:
      ClientToken:
        $ref: '#/definitions/ClientToken'
        description: The idempotency token for the create request.
      Enable:
        $ref: '#/definitions/Boolean'
        description: A boolean value that specifies whether the detector is to be enabled.
      FindingPublishingFrequency:
        $ref: '#/definitions/FindingPublishingFrequency'
        description: A enum value that specifies how frequently customer got Finding updates published.
      Tags:
        $ref: '#/definitions/TagMap'
        description: The tags to be added to a new detector resource.
    required:
      - Enable
    type: object
  CreateDetectorResponse:
    properties:
      DetectorId:
        $ref: '#/definitions/DetectorId'
        description: The unique ID of the created detector.
    type: object
  CreateFilterRequest:
    properties:
      Action:
        $ref: '#/definitions/FilterAction'
        description: Specifies the action that is to be applied to the findings that match the filter.
      ClientToken:
        $ref: '#/definitions/ClientToken'
        description: The idempotency token for the create request.
      Description:
        $ref: '#/definitions/FilterDescription'
        description: The description of the filter.
      FindingCriteria:
        $ref: '#/definitions/FindingCriteria'
        description: Represents the criteria to be used in the filter for querying findings.
      Name:
        $ref: '#/definitions/FilterName'
        description: The name of the filter.
      Rank:
        $ref: '#/definitions/FilterRank'
        description: Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.
      Tags:
        $ref: '#/definitions/TagMap'
        description: The tags to be added to a new filter resource.
    required:
      - Name
      - FindingCriteria
    type: object
  CreateFilterResponse:
    properties:
      Name:
        $ref: '#/definitions/FilterName'
        description: The name of the successfully created filter.
    required:
      - Name
    type: object
  CreateIPSetRequest:
    properties:
      Activate:
        $ref: '#/definitions/Boolean'
        description: A boolean value that indicates whether GuardDuty is to start using the uploaded IPSet.
      ClientToken:
        $ref: '#/definitions/ClientToken'
        description: The idempotency token for the create request.
      Format:
        $ref: '#/definitions/IpSetFormat'
        description: The format of the file that contains the IPSet.
      Location:
        $ref: '#/definitions/Location'
        description: 'The URI of the file that contains the IPSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key)'
      Name:
        $ref: '#/definitions/Name'
        description: The user friendly name to identify the IPSet. This name is displayed in all findings that are triggered by activity that involves IP addresses included in this IPSet.
      Tags:
        $ref: '#/definitions/TagMap'
        description: The tags to be added to a new IP set resource.
    required:
      - Name
      - Format
      - Location
      - Activate
    type: object
  CreateIPSetResponse:
    properties:
      IpSetId:
        $ref: '#/definitions/String'
        description: The ID of the IPSet resource.
    required:
      - IpSetId
    type: object
  CreateMembersRequest:
    properties:
      AccountDetails:
        $ref: '#/definitions/AccountDetails'
        description: A list of account ID and email address pairs of the accounts that you want to associate with the master GuardDuty account.
    required:
      - AccountDetails
    type: object
  CreateMembersResponse:
    properties:
      UnprocessedAccounts:
        $ref: '#/definitions/UnprocessedAccounts'
        description: A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.
    required:
      - UnprocessedAccounts
    type: object
  CreateSampleFindingsRequest:
    properties:
      FindingTypes:
        $ref: '#/definitions/FindingTypes'
        description: Types of sample findings that you want to generate.
    type: object
  CreateSampleFindingsResponse:
    properties: {}
    type: object
  CreateThreatIntelSetRequest:
    properties:
      Activate:
        $ref: '#/definitions/Boolean'
        description: A boolean value that indicates whether GuardDuty is to start using the uploaded ThreatIntelSet.
      ClientToken:
        $ref: '#/definitions/ClientToken'
        description: The idempotency token for the create request.
      Format:
        $ref: '#/definitions/ThreatIntelSetFormat'
        description: The format of the file that contains the ThreatIntelSet.
      Location:
        $ref: '#/definitions/Location'
        description: 'The URI of the file that contains the ThreatIntelSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key).'
      Name:
        $ref: '#/definitions/Name'
        description: A user-friendly ThreatIntelSet name that is displayed in all finding generated by activity that involves IP addresses included in this ThreatIntelSet.
      Tags:
        $ref: '#/definitions/TagMap'
        description: The tags to be added to a new Threat List resource.
    required:
      - Name
      - Format
      - Location
      - Activate
    type: object
  CreateThreatIntelSetResponse:
    properties:
      ThreatIntelSetId:
        $ref: '#/definitions/String'
        description: The ID of the ThreatIntelSet resource.
    required:
      - ThreatIntelSetId
    type: object
  Criterion:
    additionalProperties:
      $ref: '#/definitions/Condition'
    type: object
  DeclineInvitationsRequest:
    properties:
      AccountIds:
        $ref: '#/definitions/AccountIds'
        description: A list of account IDs of the AWS accounts that sent invitations to the current member account that you want to decline invitations from.
    required:
      - AccountIds
    type: object
  DeclineInvitationsResponse:
    properties:
      UnprocessedAccounts:
        $ref: '#/definitions/UnprocessedAccounts'
        description: A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.
    required:
      - UnprocessedAccounts
    type: object
  DeleteDetectorRequest:
    properties: {}
    type: object
  DeleteDetectorResponse:
    properties: {}
    type: object
  DeleteFilterRequest:
    properties: {}
    type: object
  DeleteFilterResponse:
    properties: {}
    type: object
  DeleteIPSetRequest:
    properties: {}
    type: object
  DeleteIPSetResponse:
    properties: {}
    type: object
  DeleteInvitationsRequest:
    properties:
      AccountIds:
        $ref: '#/definitions/AccountIds'
        description: A list of account IDs of the AWS accounts that sent invitations to the current member account that you want to delete invitations from.
    required:
      - AccountIds
    type: object
  DeleteInvitationsResponse:
    properties:
      UnprocessedAccounts:
        $ref: '#/definitions/UnprocessedAccounts'
        description: A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.
    required:
      - UnprocessedAccounts
    type: object
  DeleteMembersRequest:
    properties:
      AccountIds:
        $ref: '#/definitions/AccountIds'
        description: A list of account IDs of the GuardDuty member accounts that you want to delete.
    required:
      - AccountIds
    type: object
  DeleteMembersResponse:
    properties:
      UnprocessedAccounts:
        $ref: '#/definitions/UnprocessedAccounts'
        description: The accounts that could not be processed.
    required:
      - UnprocessedAccounts
    type: object
  DeleteThreatIntelSetRequest:
    properties: {}
    type: object
  DeleteThreatIntelSetResponse:
    properties: {}
    type: object
  DetectorId:
    maxLength: 300
    minLength: 1
    type: string
  DetectorIds:
    items:
      $ref: '#/definitions/DetectorId'
    maxItems: 50
    minItems: 0
    type: array
  DetectorStatus:
    enum:
      - ENABLED
      - DISABLED
    maxLength: 300
    minLength: 1
    type: string
  DisassociateFromMasterAccountRequest:
    properties: {}
    type: object
  DisassociateFromMasterAccountResponse:
    properties: {}
    type: object
  DisassociateMembersRequest:
    properties:
      AccountIds:
        $ref: '#/definitions/AccountIds'
        description: A list of account IDs of the GuardDuty member accounts that you want to disassociate from master.
    required:
      - AccountIds
    type: object
  DisassociateMembersResponse:
    properties:
      UnprocessedAccounts:
        $ref: '#/definitions/UnprocessedAccounts'
        description: A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.
    required:
      - UnprocessedAccounts
    type: object
  DnsRequestAction:
    description: Contains information about the DNS request.
    properties:
      Domain:
        $ref: '#/definitions/String'
        description: Domain information for the DNS request.
    type: object
  DomainDetails:
    description: Contains information about the domain.
    properties:
      Domain:
        $ref: '#/definitions/String'
        description: Domain information for the AWS API call.
    type: object
  Double:
    format: double
    type: number
  Email:
    maxLength: 64
    minLength: 1
    type: string
  Eq:
    items:
      $ref: '#/definitions/String'
    type: array
  Equals:
    items:
      $ref: '#/definitions/String'
    type: array
  Evidence:
    description: Contains information about the reason that the finding was generated.
    properties:
      ThreatIntelligenceDetails:
        $ref: '#/definitions/ThreatIntelligenceDetails'
        description: A list of threat intelligence details related to the evidence.
    type: object
  Feedback:
    enum:
      - USEFUL
      - NOT_USEFUL
    type: string
  FilterAction:
    enum:
      - NOOP
      - ARCHIVE
    maxLength: 300
    minLength: 1
    type: string
  FilterDescription:
    maxLength: 512
    minLength: 0
    type: string
  FilterName:
    maxLength: 64
    minLength: 3
    type: string
  FilterNames:
    items:
      $ref: '#/definitions/FilterName'
    maxItems: 50
    minItems: 0
    type: array
  FilterRank:
    maximum: 100
    minimum: 1
    type: integer
  Finding:
    description: Contains information about the finding.
    properties:
      AccountId:
        $ref: '#/definitions/String'
        description: The ID of the account in which the finding was generated.
      Arn:
        $ref: '#/definitions/String'
        description: The ARN for the finding.
      Confidence:
        $ref: '#/definitions/Double'
        description: The confidence score for the finding.
      CreatedAt:
        $ref: '#/definitions/String'
        description: The time and date at which the finding was created.
      Description:
        $ref: '#/definitions/String'
        description: The description of the finding.
      Id:
        $ref: '#/definitions/String'
        description: The ID of the finding.
      Partition:
        $ref: '#/definitions/String'
        description: The partition associated with the finding.
      Region:
        $ref: '#/definitions/String'
        description: The Region in which the finding was generated.
      Resource:
        $ref: '#/definitions/Resource'
      SchemaVersion:
        $ref: '#/definitions/String'
        description: The version of the schema used for the finding.
      Service:
        $ref: '#/definitions/Service'
      Severity:
        $ref: '#/definitions/Double'
        description: The severity of the finding.
      Title:
        $ref: '#/definitions/String'
        description: The title for the finding.
      Type:
        $ref: '#/definitions/FindingType'
        description: The type of the finding.
      UpdatedAt:
        $ref: '#/definitions/String'
        description: The time and date at which the finding was laste updated.
    required:
      - AccountId
      - Arn
      - CreatedAt
      - Id
      - Region
      - Resource
      - SchemaVersion
      - Severity
      - Type
      - UpdatedAt
    type: object
  FindingCriteria:
    description: Contains finding criteria information.
    properties:
      Criterion:
        $ref: '#/definitions/Criterion'
        description: Represents a map of finding properties that match specified conditions and values when querying findings.
    type: object
  FindingId:
    maxLength: 300
    minLength: 1
    type: string
  FindingIds:
    items:
      $ref: '#/definitions/FindingId'
    maxItems: 50
    minItems: 0
    type: array
  FindingPublishingFrequency:
    enum:
      - FIFTEEN_MINUTES
      - ONE_HOUR
      - SIX_HOURS
    type: string
  FindingStatisticType:
    enum:
      - COUNT_BY_SEVERITY
    type: string
  FindingStatisticTypes:
    items:
      $ref: '#/definitions/FindingStatisticType'
    maxItems: 10
    minItems: 0
    type: array
  FindingStatistics:
    description: Contains information about finding statistics.
    properties:
      CountBySeverity:
        $ref: '#/definitions/CountBySeverity'
        description: Represents a map of severity to count statistic for a set of findings
    type: object
  FindingType:
    maxLength: 50
    minLength: 1
    type: string
  FindingTypes:
    items:
      $ref: '#/definitions/FindingType'
    maxItems: 50
    minItems: 0
    type: array
  Findings:
    items:
      $ref: '#/definitions/Finding'
    maxItems: 50
    minItems: 0
    type: array
  GeoLocation:
    description: 'Contains information about the '
    properties:
      Lat:
        $ref: '#/definitions/Double'
        description: Latitude information of remote IP address.
      Lon:
        $ref: '#/definitions/Double'
        description: Longitude information of remote IP address.
    type: object
  GetDetectorRequest:
    properties: {}
    type: object
  GetDetectorResponse:
    properties:
      CreatedAt:
        $ref: '#/definitions/String'
        description: Detector creation timestamp.
      FindingPublishingFrequency:
        $ref: '#/definitions/FindingPublishingFrequency'
        description: Finding publishing frequency.
      ServiceRole:
        $ref: '#/definitions/String'
        description: The GuardDuty service role.
      Status:
        $ref: '#/definitions/DetectorStatus'
        description: The detector status.
      Tags:
        $ref: '#/definitions/TagMap'
        description: The tags of the detector resource.
      UpdatedAt:
        $ref: '#/definitions/String'
        description: Detector last update timestamp.
    required:
      - ServiceRole
      - Status
    type: object
  GetFilterRequest:
    properties: {}
    type: object
  GetFilterResponse:
    properties:
      Action:
        $ref: '#/definitions/FilterAction'
        description: Specifies the action that is to be applied to the findings that match the filter.
      Description:
        $ref: '#/definitions/FilterDescription'
        description: The description of the filter.
      FindingCriteria:
        $ref: '#/definitions/FindingCriteria'
        description: Represents the criteria to be used in the filter for querying findings.
      Name:
        $ref: '#/definitions/FilterName'
        description: The name of the filter.
      Rank:
        $ref: '#/definitions/FilterRank'
        description: Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.
      Tags:
        $ref: '#/definitions/TagMap'
        description: The tags of the filter resource.
    required:
      - Name
      - Action
      - FindingCriteria
    type: object
  GetFindingsRequest:
    properties:
      FindingIds:
        $ref: '#/definitions/FindingIds'
        description: IDs of the findings that you want to retrieve.
      SortCriteria:
        $ref: '#/definitions/SortCriteria'
        description: Represents the criteria used for sorting findings.
    required:
      - FindingIds
    type: object
  GetFindingsResponse:
    properties:
      Findings:
        $ref: '#/definitions/Findings'
        description: A list of findings.
    required:
      - Findings
    type: object
  GetFindingsStatisticsRequest:
    properties:
      FindingCriteria:
        $ref: '#/definitions/FindingCriteria'
        description: Represents the criteria used for querying findings.
      FindingStatisticTypes:
        $ref: '#/definitions/FindingStatisticTypes'
        description: Types of finding statistics to retrieve.
    required:
      - FindingStatisticTypes
    type: object
  GetFindingsStatisticsResponse:
    properties:
      FindingStatistics:
        $ref: '#/definitions/FindingStatistics'
        description: Finding statistics object.
    required:
      - FindingStatistics
    type: object
  GetIPSetRequest:
    properties: {}
    type: object
  GetIPSetResponse:
    properties:
      Format:
        $ref: '#/definitions/IpSetFormat'
        description: The format of the file that contains the IPSet.
      Location:
        $ref: '#/definitions/Location'
        description: 'The URI of the file that contains the IPSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key)'
      Name:
        $ref: '#/definitions/Name'
        description: The user friendly name to identify the IPSet. This name is displayed in all findings that are triggered by activity that involves IP addresses included in this IPSet.
      Status:
        $ref: '#/definitions/IpSetStatus'
        description: The status of ipSet file uploaded.
      Tags:
        $ref: '#/definitions/TagMap'
        description: The tags of the IP set resource.
    required:
      - Name
      - Format
      - Location
      - Status
    type: object
  GetInvitationsCountRequest:
    properties: {}
    type: object
  GetInvitationsCountResponse:
    properties:
      InvitationsCount:
        $ref: '#/definitions/Integer'
        description: The number of received invitations.
    type: object
  GetMasterAccountRequest:
    properties: {}
    type: object
  GetMasterAccountResponse:
    properties:
      Master:
        $ref: '#/definitions/Master'
        description: Master account details.
    required:
      - Master
    type: object
  GetMembersRequest:
    properties:
      AccountIds:
        $ref: '#/definitions/AccountIds'
        description: A list of account IDs of the GuardDuty member accounts that you want to describe.
    required:
      - AccountIds
    type: object
  GetMembersResponse:
    properties:
      Members:
        $ref: '#/definitions/Members'
        description: A list of members.
      UnprocessedAccounts:
        $ref: '#/definitions/UnprocessedAccounts'
        description: A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.
    required:
      - Members
      - UnprocessedAccounts
    type: object
  GetThreatIntelSetRequest:
    properties: {}
    type: object
  GetThreatIntelSetResponse:
    properties:
      Format:
        $ref: '#/definitions/ThreatIntelSetFormat'
        description: The format of the threatIntelSet.
      Location:
        $ref: '#/definitions/Location'
        description: 'The URI of the file that contains the ThreatIntelSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key).'
      Name:
        $ref: '#/definitions/Name'
        description: A user-friendly ThreatIntelSet name that is displayed in all finding generated by activity that involves IP addresses included in this ThreatIntelSet.
      Status:
        $ref: '#/definitions/ThreatIntelSetStatus'
        description: The status of threatIntelSet file uploaded.
      Tags:
        $ref: '#/definitions/TagMap'
        description: The tags of the Threat List resource.
    required:
      - Name
      - Format
      - Location
      - Status
    type: object
  GuardDutyArn:
    pattern: '^arn:[A-Za-z_.-]{1,20}:guardduty:[A-Za-z0-9_/.-]{0,63}:\d+:detector/[A-Za-z0-9_/.-]{32,264}$'
    type: string
  IamInstanceProfile:
    description: Contains information about the instance profile.
    properties:
      Arn:
        $ref: '#/definitions/String'
        description: AWS EC2 instance profile ARN.
      Id:
        $ref: '#/definitions/String'
        description: AWS EC2 instance profile ID.
    type: object
  InstanceDetails:
    description: Contains information about the details of an instance.
    properties:
      AvailabilityZone:
        $ref: '#/definitions/String'
        description: The availability zone of the EC2 instance.
      IamInstanceProfile:
        $ref: '#/definitions/IamInstanceProfile'
        description: The profile information of the EC2 instance.
      ImageDescription:
        $ref: '#/definitions/String'
        description: The image description of the EC2 instance.
      ImageId:
        $ref: '#/definitions/String'
        description: The image ID of the EC2 instance.
      InstanceId:
        $ref: '#/definitions/String'
        description: The ID of the EC2 instance.
      InstanceState:
        $ref: '#/definitions/String'
        description: The state of the EC2 instance.
      InstanceType:
        $ref: '#/definitions/String'
        description: The type of the EC2 instance.
      LaunchTime:
        $ref: '#/definitions/String'
        description: The launch time of the EC2 instance.
      NetworkInterfaces:
        $ref: '#/definitions/NetworkInterfaces'
        description: The network interface information of the EC2 instance.
      Platform:
        $ref: '#/definitions/String'
        description: The platform of the EC2 instance.
      ProductCodes:
        $ref: '#/definitions/ProductCodes'
        description: The product code of the EC2 instance.
      Tags:
        $ref: '#/definitions/Tags'
        description: The tags of the EC2 instance.
    type: object
  Integer:
    type: integer
  InternalServerErrorException: {}
  Invitation:
    description: Contains information about the invitation.
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: Inviter account ID
      InvitationId:
        $ref: '#/definitions/String'
        description: This value is used to validate the inviter account to the member account.
      InvitedAt:
        $ref: '#/definitions/String'
        description: Timestamp at which the invitation was sent
      RelationshipStatus:
        $ref: '#/definitions/String'
        description: The status of the relationship between the inviter and invitee accounts.
    type: object
  Invitations:
    items:
      $ref: '#/definitions/Invitation'
    maxItems: 50
    minItems: 0
    type: array
  InviteMembersRequest:
    properties:
      AccountIds:
        $ref: '#/definitions/AccountIds'
        description: A list of account IDs of the accounts that you want to invite to GuardDuty as members.
      DisableEmailNotification:
        $ref: '#/definitions/Boolean'
        description: A boolean value that specifies whether you want to disable email notification to the accounts that you’re inviting to GuardDuty as members.
      Message:
        $ref: '#/definitions/String'
        description: The invitation message that you want to send to the accounts that you’re inviting to GuardDuty as members.
    required:
      - AccountIds
    type: object
  InviteMembersResponse:
    properties:
      UnprocessedAccounts:
        $ref: '#/definitions/UnprocessedAccounts'
        description: A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.
    required:
      - UnprocessedAccounts
    type: object
  IpSetFormat:
    enum:
      - TXT
      - STIX
      - OTX_CSV
      - ALIEN_VAULT
      - PROOF_POINT
      - FIRE_EYE
    maxLength: 300
    minLength: 1
    type: string
  IpSetIds:
    items:
      $ref: '#/definitions/String'
    maxItems: 50
    minItems: 0
    type: array
  IpSetStatus:
    enum:
      - INACTIVE
      - ACTIVATING
      - ACTIVE
      - DEACTIVATING
      - ERROR
      - DELETE_PENDING
      - DELETED
    maxLength: 300
    minLength: 1
    type: string
  Ipv6Addresses:
    items:
      $ref: '#/definitions/String'
    type: array
  ListDetectorsRequest:
    properties: {}
    type: object
  ListDetectorsResponse:
    properties:
      DetectorIds:
        $ref: '#/definitions/DetectorIds'
        description: A list of detector Ids.
      NextToken:
        $ref: '#/definitions/String'
        description: Pagination parameter to be used on the next list operation to retrieve more items.
    required:
      - DetectorIds
    type: object
  ListFiltersRequest:
    properties: {}
    type: object
  ListFiltersResponse:
    properties:
      FilterNames:
        $ref: '#/definitions/FilterNames'
        description: A list of filter names
      NextToken:
        $ref: '#/definitions/String'
        description: Pagination parameter to be used on the next list operation to retrieve more items.
    required:
      - FilterNames
    type: object
  ListFindingsRequest:
    properties:
      FindingCriteria:
        $ref: '#/definitions/FindingCriteria'
        description: Represents the criteria used for querying findings.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 50. The maximum value is 50.
      NextToken:
        $ref: '#/definitions/String'
        description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.
      SortCriteria:
        $ref: '#/definitions/SortCriteria'
        description: Represents the criteria used for sorting findings.
    type: object
  ListFindingsResponse:
    properties:
      FindingIds:
        $ref: '#/definitions/FindingIds'
        description: The IDs of the findings you are listing.
      NextToken:
        $ref: '#/definitions/String'
        description: Pagination parameter to be used on the next list operation to retrieve more items.
    required:
      - FindingIds
    type: object
  ListIPSetsRequest:
    properties: {}
    type: object
  ListIPSetsResponse:
    properties:
      IpSetIds:
        $ref: '#/definitions/IpSetIds'
        description: The IDs of the IPSet resources.
      NextToken:
        $ref: '#/definitions/String'
        description: Pagination parameter to be used on the next list operation to retrieve more items.
    required:
      - IpSetIds
    type: object
  ListInvitationsRequest:
    properties: {}
    type: object
  ListInvitationsResponse:
    properties:
      Invitations:
        $ref: '#/definitions/Invitations'
        description: A list of invitation descriptions.
      NextToken:
        $ref: '#/definitions/String'
        description: Pagination parameter to be used on the next list operation to retrieve more items.
    type: object
  ListMembersRequest:
    properties: {}
    type: object
  ListMembersResponse:
    properties:
      Members:
        $ref: '#/definitions/Members'
        description: A list of members.
      NextToken:
        $ref: '#/definitions/String'
        description: Pagination parameter to be used on the next list operation to retrieve more items.
    type: object
  ListTagsForResourceRequest:
    properties: {}
    type: object
  ListTagsForResourceResponse:
    properties:
      Tags:
        $ref: '#/definitions/TagMap'
        description: The tags associated with the resource.
    type: object
  ListThreatIntelSetsRequest:
    properties: {}
    type: object
  ListThreatIntelSetsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/String'
        description: Pagination parameter to be used on the next list operation to retrieve more items.
      ThreatIntelSetIds:
        $ref: '#/definitions/ThreatIntelSetIds'
        description: The IDs of the ThreatIntelSet resources.
    required:
      - ThreatIntelSetIds
    type: object
  LocalPortDetails:
    description: Contains information about the port for the local connection.
    properties:
      Port:
        $ref: '#/definitions/Integer'
        description: Port number of the local connection.
      PortName:
        $ref: '#/definitions/String'
        description: Port name of the local connection.
    type: object
  Location:
    maxLength: 300
    minLength: 1
    type: string
  Long:
    type: integer
  Master:
    description: Contains information about the Master account and invitation.
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The ID of the account used as the Master account.
      InvitationId:
        $ref: '#/definitions/String'
        description: This value is used to validate the master account to the member account.
      InvitedAt:
        $ref: '#/definitions/String'
        description: Timestamp at which the invitation was sent.
      RelationshipStatus:
        $ref: '#/definitions/String'
        description: The status of the relationship between the master and member accounts.
    type: object
  MaxResults:
    maximum: 50
    minimum: 1
    type: integer
  Member:
    description: 'Continas information about the member account '
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: Member account ID.
      DetectorId:
        $ref: '#/definitions/DetectorId'
        description: Member account's detector ID.
      Email:
        $ref: '#/definitions/Email'
        description: Member account's email address.
      InvitedAt:
        $ref: '#/definitions/String'
        description: Timestamp at which the invitation was sent
      MasterId:
        $ref: '#/definitions/String'
        description: Master account ID.
      RelationshipStatus:
        $ref: '#/definitions/String'
        description: The status of the relationship between the member and the master.
      UpdatedAt:
        $ref: '#/definitions/String'
        description: Member last updated timestamp.
    required:
      - AccountId
      - MasterId
      - Email
      - RelationshipStatus
      - UpdatedAt
    type: object
  Members:
    items:
      $ref: '#/definitions/Member'
    maxItems: 50
    minItems: 0
    type: array
  Name:
    maxLength: 300
    minLength: 1
    type: string
  Neq:
    items:
      $ref: '#/definitions/String'
    type: array
  NetworkConnectionAction:
    description: Contains information about the network connection.
    properties:
      Blocked:
        $ref: '#/definitions/Boolean'
        description: Network connection blocked information.
      ConnectionDirection:
        $ref: '#/definitions/String'
        description: Network connection direction.
      LocalPortDetails:
        $ref: '#/definitions/LocalPortDetails'
        description: Local port information of the connection.
      Protocol:
        $ref: '#/definitions/String'
        description: Network connection protocol.
      RemoteIpDetails:
        $ref: '#/definitions/RemoteIpDetails'
        description: Remote IP information of the connection.
      RemotePortDetails:
        $ref: '#/definitions/RemotePortDetails'
        description: Remote port information of the connection.
    type: object
  NetworkInterface:
    description: Contains information about the network interface.
    properties:
      Ipv6Addresses:
        $ref: '#/definitions/Ipv6Addresses'
        description: A list of EC2 instance IPv6 address information.
      NetworkInterfaceId:
        $ref: '#/definitions/String'
        description: The ID of the network interface
      PrivateDnsName:
        $ref: '#/definitions/String'
        description: Private DNS name of the EC2 instance.
      PrivateIpAddress:
        $ref: '#/definitions/String'
        description: Private IP address of the EC2 instance.
      PrivateIpAddresses:
        $ref: '#/definitions/PrivateIpAddresses'
        description: Other private IP address information of the EC2 instance.
      PublicDnsName:
        $ref: '#/definitions/String'
        description: Public DNS name of the EC2 instance.
      PublicIp:
        $ref: '#/definitions/String'
        description: Public IP address of the EC2 instance.
      SecurityGroups:
        $ref: '#/definitions/SecurityGroups'
        description: Security groups associated with the EC2 instance.
      SubnetId:
        $ref: '#/definitions/String'
        description: The subnet ID of the EC2 instance.
      VpcId:
        $ref: '#/definitions/String'
        description: The VPC ID of the EC2 instance.
    type: object
  NetworkInterfaces:
    items:
      $ref: '#/definitions/NetworkInterface'
    type: array
  NotEquals:
    items:
      $ref: '#/definitions/String'
    type: array
  OrderBy:
    enum:
      - ASC
      - DESC
    type: string
  Organization:
    description: Continas information about the organization.
    properties:
      Asn:
        $ref: '#/definitions/String'
        description: Autonomous system number of the internet provider of the remote IP address.
      AsnOrg:
        $ref: '#/definitions/String'
        description: Organization that registered this ASN.
      Isp:
        $ref: '#/definitions/String'
        description: ISP information for the internet provider.
      Org:
        $ref: '#/definitions/String'
        description: Name of the internet provider.
    type: object
  PortProbeAction:
    description: Contains information about the port probe.
    properties:
      Blocked:
        $ref: '#/definitions/Boolean'
        description: Port probe blocked information.
      PortProbeDetails:
        $ref: '#/definitions/PortProbeDetails'
        description: A list of port probe details objects.
    type: object
  PortProbeDetail:
    description: Contains information about the port probe details.
    properties:
      LocalPortDetails:
        $ref: '#/definitions/LocalPortDetails'
        description: Local port information of the connection.
      RemoteIpDetails:
        $ref: '#/definitions/RemoteIpDetails'
        description: Remote IP information of the connection.
    type: object
  PortProbeDetails:
    items:
      $ref: '#/definitions/PortProbeDetail'
    type: array
  PrivateIpAddressDetails:
    description: Contains information about the private IP address.
    properties:
      PrivateDnsName:
        $ref: '#/definitions/String'
        description: Private DNS name of the EC2 instance.
      PrivateIpAddress:
        $ref: '#/definitions/String'
        description: Private IP address of the EC2 instance.
    type: object
  PrivateIpAddresses:
    items:
      $ref: '#/definitions/PrivateIpAddressDetails'
    type: array
  ProductCode:
    description: Contains information about the product code.
    properties:
      Code:
        $ref: '#/definitions/String'
        description: Product code information.
      ProductType:
        $ref: '#/definitions/String'
        description: Product code type.
    type: object
  ProductCodes:
    items:
      $ref: '#/definitions/ProductCode'
    type: array
  RemoteIpDetails:
    description: Continas information about the remote IP address.
    properties:
      City:
        $ref: '#/definitions/City'
        description: City information of the remote IP address.
      Country:
        $ref: '#/definitions/Country'
        description: Country code of the remote IP address.
      GeoLocation:
        $ref: '#/definitions/GeoLocation'
        description: Location information of the remote IP address.
      IpAddressV4:
        $ref: '#/definitions/String'
        description: IPV4 remote address of the connection.
      Organization:
        $ref: '#/definitions/Organization'
        description: ISP Organization information of the remote IP address.
    type: object
  RemotePortDetails:
    description: Contains information about the remote port.
    properties:
      Port:
        $ref: '#/definitions/Integer'
        description: Port number of the remote connection.
      PortName:
        $ref: '#/definitions/String'
        description: Port name of the remote connection.
    type: object
  Resource:
    description: Contains information about the resource.
    properties:
      AccessKeyDetails:
        $ref: '#/definitions/AccessKeyDetails'
        description: The IAM access key details (IAM user information) of a user that engaged in the activity that prompted GuardDuty to generate a finding.
      InstanceDetails:
        $ref: '#/definitions/InstanceDetails'
        description: The information about the EC2 instance associated with the activity that prompted GuardDuty to generate a finding.
      ResourceType:
        $ref: '#/definitions/String'
        description: The type of the AWS resource.
    type: object
  SecurityGroup:
    description: Contains information about the security group.
    properties:
      GroupId:
        $ref: '#/definitions/String'
        description: EC2 instance's security group ID.
      GroupName:
        $ref: '#/definitions/String'
        description: EC2 instance's security group name.
    type: object
  SecurityGroups:
    items:
      $ref: '#/definitions/SecurityGroup'
    type: array
  Service:
    description: Contains information about the service.
    properties:
      Action:
        $ref: '#/definitions/Action'
        description: Information about the activity described in a finding.
      Archived:
        $ref: '#/definitions/Boolean'
        description: Indicates whether this finding is archived.
      Count:
        $ref: '#/definitions/Integer'
        description: Total count of the occurrences of this finding type.
      DetectorId:
        $ref: '#/definitions/DetectorId'
        description: Detector ID for the GuardDuty service.
      EventFirstSeen:
        $ref: '#/definitions/String'
        description: First seen timestamp of the activity that prompted GuardDuty to generate this finding.
      EventLastSeen:
        $ref: '#/definitions/String'
        description: Last seen timestamp of the activity that prompted GuardDuty to generate this finding.
      Evidence:
        $ref: '#/definitions/Evidence'
        description: An evidence object associated with the service.
      ResourceRole:
        $ref: '#/definitions/String'
        description: Resource role information for this finding.
      ServiceName:
        $ref: '#/definitions/String'
        description: The name of the AWS service (GuardDuty) that generated a finding.
      UserFeedback:
        $ref: '#/definitions/String'
        description: Feedback left about the finding.
    type: object
  SortCriteria:
    description: Contains information about the criteria for sorting.
    properties:
      AttributeName:
        $ref: '#/definitions/String'
        description: 'Represents the finding attribute (for example, accountId) by which to sort findings.'
      OrderBy:
        $ref: '#/definitions/OrderBy'
        description: Order by which the sorted findings are to be displayed.
    type: object
  StartMonitoringMembersRequest:
    properties:
      AccountIds:
        $ref: '#/definitions/AccountIds'
        description: A list of account IDs of the GuardDuty member accounts whose findings you want the master account to monitor.
    required:
      - AccountIds
    type: object
  StartMonitoringMembersResponse:
    properties:
      UnprocessedAccounts:
        $ref: '#/definitions/UnprocessedAccounts'
        description: A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.
    required:
      - UnprocessedAccounts
    type: object
  StopMonitoringMembersRequest:
    properties:
      AccountIds:
        $ref: '#/definitions/AccountIds'
        description: A list of account IDs of the GuardDuty member accounts whose findings you want the master account to stop monitoring.
    required:
      - AccountIds
    type: object
  StopMonitoringMembersResponse:
    properties:
      UnprocessedAccounts:
        $ref: '#/definitions/UnprocessedAccounts'
        description: A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.
    required:
      - UnprocessedAccounts
    type: object
  String:
    type: string
  Tag:
    description: Contains information about the tag associated with the resource.
    properties:
      Key:
        $ref: '#/definitions/String'
        description: EC2 instance tag key.
      Value:
        $ref: '#/definitions/String'
        description: EC2 instance tag value.
    type: object
  TagKey:
    maxLength: 128
    minLength: 1
    pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 200
    minItems: 1
    type: array
  TagMap:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    maxProperties: 200
    minProperties: 1
    type: object
  TagResourceRequest:
    properties:
      Tags:
        $ref: '#/definitions/TagMap'
        description: The tags to be added to a resource.
    required:
      - Tags
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    type: string
  Tags:
    items:
      $ref: '#/definitions/Tag'
    type: array
  ThreatIntelSetFormat:
    enum:
      - TXT
      - STIX
      - OTX_CSV
      - ALIEN_VAULT
      - PROOF_POINT
      - FIRE_EYE
    maxLength: 300
    minLength: 1
    type: string
  ThreatIntelSetIds:
    items:
      $ref: '#/definitions/String'
    maxItems: 50
    minItems: 0
    type: array
  ThreatIntelSetStatus:
    enum:
      - INACTIVE
      - ACTIVATING
      - ACTIVE
      - DEACTIVATING
      - ERROR
      - DELETE_PENDING
      - DELETED
    maxLength: 300
    minLength: 1
    type: string
  ThreatIntelligenceDetail:
    description: An instance of a threat intelligence detail that constitutes evidence for the finding.
    properties:
      ThreatListName:
        $ref: '#/definitions/String'
        description: The name of the threat intelligence list that triggered the finding.
      ThreatNames:
        $ref: '#/definitions/ThreatNames'
        description: A list of names of the threats in the threat intelligence list that triggered the finding.
    type: object
  ThreatIntelligenceDetails:
    items:
      $ref: '#/definitions/ThreatIntelligenceDetail'
    type: array
  ThreatNames:
    items:
      $ref: '#/definitions/String'
    type: array
  UnarchiveFindingsRequest:
    properties:
      FindingIds:
        $ref: '#/definitions/FindingIds'
        description: IDs of the findings that you want to unarchive.
    required:
      - FindingIds
    type: object
  UnarchiveFindingsResponse:
    properties: {}
    type: object
  UnprocessedAccount:
    description: Contains information about the accounts that were not processed.
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: AWS Account ID.
      Result:
        $ref: '#/definitions/String'
        description: A reason why the account hasn't been processed.
    required:
      - AccountId
      - Result
    type: object
  UnprocessedAccounts:
    items:
      $ref: '#/definitions/UnprocessedAccount'
    maxItems: 50
    minItems: 0
    type: array
  UntagResourceRequest:
    properties: {}
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateDetectorRequest:
    properties:
      Enable:
        $ref: '#/definitions/Boolean'
        description: Updated boolean value for the detector that specifies whether the detector is enabled.
      FindingPublishingFrequency:
        $ref: '#/definitions/FindingPublishingFrequency'
        description: A enum value that specifies how frequently customer got Finding updates published.
    type: object
  UpdateDetectorResponse:
    properties: {}
    type: object
  UpdateFilterRequest:
    properties:
      Action:
        $ref: '#/definitions/FilterAction'
        description: Specifies the action that is to be applied to the findings that match the filter.
      Description:
        $ref: '#/definitions/FilterDescription'
        description: The description of the filter.
      FindingCriteria:
        $ref: '#/definitions/FindingCriteria'
        description: Represents the criteria to be used in the filter for querying findings.
      Rank:
        $ref: '#/definitions/FilterRank'
        description: Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.
    type: object
  UpdateFilterResponse:
    properties:
      Name:
        $ref: '#/definitions/FilterName'
        description: The name of the filter.
    required:
      - Name
    type: object
  UpdateFindingsFeedbackRequest:
    properties:
      Comments:
        $ref: '#/definitions/String'
        description: Additional feedback about the GuardDuty findings.
      Feedback:
        $ref: '#/definitions/Feedback'
        description: 'Valid values: USEFUL | NOT_USEFUL'
      FindingIds:
        $ref: '#/definitions/FindingIds'
        description: IDs of the findings that you want to mark as useful or not useful.
    required:
      - FindingIds
      - Feedback
    type: object
  UpdateFindingsFeedbackResponse:
    properties: {}
    type: object
  UpdateIPSetRequest:
    properties:
      Activate:
        $ref: '#/definitions/Boolean'
        description: The updated boolean value that specifies whether the IPSet is active or not.
      Location:
        $ref: '#/definitions/Location'
        description: 'The updated URI of the file that contains the IPSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key).'
      Name:
        $ref: '#/definitions/Name'
        description: The unique ID that specifies the IPSet that you want to update.
    type: object
  UpdateIPSetResponse:
    properties: {}
    type: object
  UpdateThreatIntelSetRequest:
    properties:
      Activate:
        $ref: '#/definitions/Boolean'
        description: The updated boolean value that specifies whether the ThreateIntelSet is active or not.
      Location:
        $ref: '#/definitions/Location'
        description: 'The updated URI of the file that contains the ThreateIntelSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key)'
      Name:
        $ref: '#/definitions/Name'
        description: The unique ID that specifies the ThreatIntelSet that you want to update.
    type: object
  UpdateThreatIntelSetResponse:
    properties: {}
    type: object
x-servers:
  - description: The Amazon GuardDuty multi-region endpoint
    url: 'http://guardduty.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The Amazon GuardDuty multi-region endpoint
    url: 'https://guardduty.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The Amazon GuardDuty endpoint for China (Beijing) and China (Ningxia)
    url: 'http://guardduty.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
  - description: The Amazon GuardDuty endpoint for China (Beijing) and China (Ningxia)
    url: 'https://guardduty.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
