swagger: '2.0'
info:
  version: '2017-11-28'
  x-release: v4
  title: Amazon GuardDuty
  description: 'Amazon GuardDuty is a continuous security monitoring service that analyzes and processes the following data sources: VPC Flow Logs, AWS CloudTrail event logs, and DNS logs. It uses threat intelligence feeds, such as lists of malicious IPs and domains, and machine learning to identify unexpected and potentially unauthorized and malicious activity within your AWS environment. This can include issues like escalations of privileges, uses of exposed credentials, or communication with malicious IPs, URLs, or domains. For example, GuardDuty can detect compromised EC2 instances serving malware or mining bitcoin. It also monitors AWS account access behavior for signs of compromise, such as unauthorized infrastructure deployments, like instances deployed in a region that has never been used, or unusual API calls, like a password policy change to reduce password strength. GuardDuty informs you of the status of your AWS environment by producing security findings that you can view in the GuardDuty console or through Amazon CloudWatch events. For more information, see <a href="https://docs.aws.amazon.com/guardduty/latest/ug/what-is-guardduty.html"> Amazon GuardDuty User Guide</a>. '
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: guardduty
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/guardduty-2017-11-28.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/guardduty/'
host: guardduty.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://guardduty.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
    description: The Amazon GuardDuty multi-region endpoint
  - url: 'https://guardduty.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
    description: The Amazon GuardDuty multi-region endpoint
  - url: 'http://guardduty.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
    description: The Amazon GuardDuty endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://guardduty.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
    description: The Amazon GuardDuty endpoint for China (Beijing) and China (Ningxia)
consumes:
  - application/json
produces:
  - application/json
parameters:
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  '/detector/{detectorId}/master':
    post:
      operationId: AcceptInvitation
      description: Accepts the invitation to be monitored by a master GuardDuty account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AcceptInvitationResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector of the GuardDuty member account.
          type: string
          minLength: 1
          maxLength: 300
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - masterId
              - invitationId
            properties:
              masterId:
                description: The account ID of the master GuardDuty account whose invitation you're accepting.
                type: string
              invitationId:
                description: This value is used to validate the master account to the member account.
                type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetMasterAccount
      description: Provides the details for the GuardDuty master account to the current GuardDuty member account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMasterAccountResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector of the GuardDuty member account.
          type: string
          minLength: 1
          maxLength: 300
  '/detector/{detectorId}/findings/archive':
    post:
      operationId: ArchiveFindings
      description: Archives Amazon GuardDuty findings specified by the list of finding IDs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ArchiveFindingsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The ID of the detector that specifies the GuardDuty service whose findings you want to archive.
          type: string
          minLength: 1
          maxLength: 300
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - findingIds
            properties:
              findingIds:
                description: IDs of the findings that you want to archive.
                type: array
                items:
                  $ref: '#/definitions/FindingId'
                minItems: 0
                maxItems: 50
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /detector:
    post:
      operationId: CreateDetector
      description: Creates a single Amazon GuardDuty detector. A detector is an object that represents the GuardDuty service. A detector must be created in order for GuardDuty to become operational.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDetectorResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - enable
            properties:
              enable:
                description: A boolean value that specifies whether the detector is to be enabled.
                type: boolean
              clientToken:
                description: The idempotency token for the create request.
                type: string
                minLength: 0
                maxLength: 64
              findingPublishingFrequency:
                description: A enum value that specifies how frequently customer got Finding updates published.
                type: string
                enum:
                  - FIFTEEN_MINUTES
                  - ONE_HOUR
                  - SIX_HOURS
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListDetectors
      description: Lists detectorIds of all the existing Amazon GuardDuty detector resources.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDetectorsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 50. The maximum value is 50.
          type: integer
          minimum: 1
          maximum: 50
        - name: nextToken
          in: query
          required: false
          description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.
          type: string
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
  '/detector/{detectorId}/filter':
    post:
      operationId: CreateFilter
      description: Creates a filter using the specified finding criteria.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateFilterResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector of the GuardDuty account for which you want to create a filter.
          type: string
          minLength: 1
          maxLength: 300
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - name
              - findingCriteria
            properties:
              name:
                description: The name of the filter.
                type: string
                minLength: 3
                maxLength: 64
              description:
                description: The description of the filter.
                type: string
                minLength: 0
                maxLength: 512
              action:
                description: Specifies the action that is to be applied to the findings that match the filter.
                type: string
                enum:
                  - NOOP
                  - ARCHIVE
                minLength: 1
                maxLength: 300
              rank:
                description: Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.
                type: integer
                minimum: 1
                maximum: 100
              findingCriteria:
                description: Represents the criteria to be used in the filter for querying findings.
                type: object
                properties:
                  Criterion:
                    $ref: '#/definitions/Criterion'
                    description: Represents a map of finding properties that match specified conditions and values when querying findings.
              clientToken:
                description: The idempotency token for the create request.
                type: string
                minLength: 0
                maxLength: 64
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListFilters
      description: Returns a paginated list of the current filters.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFiltersResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector the filter is associated with.
          type: string
          minLength: 1
          maxLength: 300
        - name: maxResults
          in: query
          required: false
          description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 50. The maximum value is 50.
          type: integer
          minimum: 1
          maximum: 50
        - name: nextToken
          in: query
          required: false
          description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.
          type: string
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
  '/detector/{detectorId}/ipset':
    post:
      operationId: CreateIPSet
      description: Creates a new IPSet - a list of trusted IP addresses that have been whitelisted for secure communication with AWS infrastructure and applications.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateIPSetResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector of the GuardDuty account for which you want to create an IPSet.
          type: string
          minLength: 1
          maxLength: 300
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - name
              - format
              - location
              - activate
            properties:
              name:
                description: The user friendly name to identify the IPSet. This name is displayed in all findings that are triggered by activity that involves IP addresses included in this IPSet.
                type: string
                minLength: 1
                maxLength: 300
              format:
                description: The format of the file that contains the IPSet.
                type: string
                enum:
                  - TXT
                  - STIX
                  - OTX_CSV
                  - ALIEN_VAULT
                  - PROOF_POINT
                  - FIRE_EYE
                minLength: 1
                maxLength: 300
              location:
                description: 'The URI of the file that contains the IPSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key)'
                type: string
                minLength: 1
                maxLength: 300
              activate:
                description: A boolean value that indicates whether GuardDuty is to start using the uploaded IPSet.
                type: boolean
              clientToken:
                description: The idempotency token for the create request.
                type: string
                minLength: 0
                maxLength: 64
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListIPSets
      description: Lists the IPSets of the GuardDuty service specified by the detector ID.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListIPSetsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector the ipSet is associated with.
          type: string
          minLength: 1
          maxLength: 300
        - name: maxResults
          in: query
          required: false
          description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 50. The maximum value is 50.
          type: integer
          minimum: 1
          maximum: 50
        - name: nextToken
          in: query
          required: false
          description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.
          type: string
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
  '/detector/{detectorId}/member':
    post:
      operationId: CreateMembers
      description: Creates member accounts of the current AWS account by specifying a list of AWS account IDs. The current AWS account can then invite these members to manage GuardDuty in their accounts.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateMembersResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector of the GuardDuty account with which you want to associate member accounts.
          type: string
          minLength: 1
          maxLength: 300
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - accountDetails
            properties:
              accountDetails:
                description: A list of account ID and email address pairs of the accounts that you want to associate with the master GuardDuty account.
                type: array
                items:
                  $ref: '#/definitions/AccountDetail'
                minItems: 1
                maxItems: 50
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListMembers
      description: Lists details about all member accounts for the current GuardDuty master account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListMembersResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector the member is associated with.
          type: string
          minLength: 1
          maxLength: 300
        - name: maxResults
          in: query
          required: false
          description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 50. The maximum value is 50.
          type: integer
          minimum: 1
          maximum: 50
        - name: nextToken
          in: query
          required: false
          description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.
          type: string
        - name: onlyAssociated
          in: query
          required: false
          description: Specifies whether to only return associated members or to return all members (including members which haven't been invited yet or have been disassociated).
          type: string
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
  '/detector/{detectorId}/findings/create':
    post:
      operationId: CreateSampleFindings
      description: 'Generates example findings of types specified by the list of finding types. If ''NULL'' is specified for findingTypes, the API generates example findings of all supported finding types.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSampleFindingsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The ID of the detector to create sample findings for.
          type: string
          minLength: 1
          maxLength: 300
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              findingTypes:
                description: Types of sample findings that you want to generate.
                type: array
                items:
                  $ref: '#/definitions/FindingType'
                minItems: 0
                maxItems: 50
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/detector/{detectorId}/threatintelset':
    post:
      operationId: CreateThreatIntelSet
      description: Create a new ThreatIntelSet. ThreatIntelSets consist of known malicious IP addresses. GuardDuty generates findings based on ThreatIntelSets.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateThreatIntelSetResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector of the GuardDuty account for which you want to create a threatIntelSet.
          type: string
          minLength: 1
          maxLength: 300
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - name
              - format
              - location
              - activate
            properties:
              name:
                description: A user-friendly ThreatIntelSet name that is displayed in all finding generated by activity that involves IP addresses included in this ThreatIntelSet.
                type: string
                minLength: 1
                maxLength: 300
              format:
                description: The format of the file that contains the ThreatIntelSet.
                type: string
                enum:
                  - TXT
                  - STIX
                  - OTX_CSV
                  - ALIEN_VAULT
                  - PROOF_POINT
                  - FIRE_EYE
                minLength: 1
                maxLength: 300
              location:
                description: 'The URI of the file that contains the ThreatIntelSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key).'
                type: string
                minLength: 1
                maxLength: 300
              activate:
                description: A boolean value that indicates whether GuardDuty is to start using the uploaded ThreatIntelSet.
                type: boolean
              clientToken:
                description: The idempotency token for the create request.
                type: string
                minLength: 0
                maxLength: 64
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListThreatIntelSets
      description: Lists the ThreatIntelSets of the GuardDuty service specified by the detector ID.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListThreatIntelSetsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector the threatIntelSet is associated with.
          type: string
          minLength: 1
          maxLength: 300
        - name: maxResults
          in: query
          required: false
          description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 50. The maximum value is 50.
          type: integer
          minimum: 1
          maximum: 50
        - name: nextToken
          in: query
          required: false
          description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.
          type: string
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
  /invitation/decline:
    post:
      operationId: DeclineInvitations
      description: Declines invitations sent to the current member account by AWS account specified by their account IDs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeclineInvitationsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - accountIds
            properties:
              accountIds:
                description: A list of account IDs of the AWS accounts that sent invitations to the current member account that you want to decline invitations from.
                type: array
                items:
                  $ref: '#/definitions/AccountId'
                minItems: 1
                maxItems: 50
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/detector/{detectorId}':
    delete:
      operationId: DeleteDetector
      description: Deletes a Amazon GuardDuty detector specified by the detector ID.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDetectorResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector that you want to delete.
          type: string
          minLength: 1
          maxLength: 300
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetDetector
      description: Retrieves an Amazon GuardDuty detector specified by the detectorId.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDetectorResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector that you want to get.
          type: string
          minLength: 1
          maxLength: 300
    post:
      operationId: UpdateDetector
      description: Updates an Amazon GuardDuty detector specified by the detectorId.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDetectorResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector that you want to update.
          type: string
          minLength: 1
          maxLength: 300
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              enable:
                description: Updated boolean value for the detector that specifies whether the detector is enabled.
                type: boolean
              findingPublishingFrequency:
                description: A enum value that specifies how frequently customer got Finding updates published.
                type: string
                enum:
                  - FIFTEEN_MINUTES
                  - ONE_HOUR
                  - SIX_HOURS
  '/detector/{detectorId}/filter/{filterName}':
    delete:
      operationId: DeleteFilter
      description: Deletes the filter specified by the filter name.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteFilterResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector the filter is associated with.
          type: string
          minLength: 1
          maxLength: 300
        - name: filterName
          in: path
          required: true
          description: The name of the filter you want to delete.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetFilter
      description: Returns the details of the filter specified by the filter name.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFilterResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector the filter is associated with.
          type: string
          minLength: 1
          maxLength: 300
        - name: filterName
          in: path
          required: true
          description: The name of the filter you want to get.
          type: string
    post:
      operationId: UpdateFilter
      description: Updates the filter specified by the filter name.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFilterResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector that specifies the GuardDuty service where you want to update a filter.
          type: string
          minLength: 1
          maxLength: 300
        - name: filterName
          in: path
          required: true
          description: The name of the filter.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              description:
                description: The description of the filter.
                type: string
                minLength: 0
                maxLength: 512
              action:
                description: Specifies the action that is to be applied to the findings that match the filter.
                type: string
                enum:
                  - NOOP
                  - ARCHIVE
                minLength: 1
                maxLength: 300
              rank:
                description: Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.
                type: integer
                minimum: 1
                maximum: 100
              findingCriteria:
                description: Represents the criteria to be used in the filter for querying findings.
                type: object
                properties:
                  Criterion:
                    $ref: '#/definitions/Criterion'
                    description: Represents a map of finding properties that match specified conditions and values when querying findings.
  '/detector/{detectorId}/ipset/{ipSetId}':
    delete:
      operationId: DeleteIPSet
      description: Deletes the IPSet specified by the IPSet ID.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteIPSetResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector the ipSet is associated with.
          type: string
          minLength: 1
          maxLength: 300
        - name: ipSetId
          in: path
          required: true
          description: The unique ID of the ipSet you want to delete.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetIPSet
      description: Retrieves the IPSet specified by the IPSet ID.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetIPSetResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector the ipSet is associated with.
          type: string
          minLength: 1
          maxLength: 300
        - name: ipSetId
          in: path
          required: true
          description: The unique ID of the ipSet you want to get.
          type: string
    post:
      operationId: UpdateIPSet
      description: Updates the IPSet specified by the IPSet ID.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateIPSetResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The detectorID that specifies the GuardDuty service whose IPSet you want to update.
          type: string
          minLength: 1
          maxLength: 300
        - name: ipSetId
          in: path
          required: true
          description: The unique ID that specifies the IPSet that you want to update.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                description: The unique ID that specifies the IPSet that you want to update.
                type: string
                minLength: 1
                maxLength: 300
              location:
                description: 'The updated URI of the file that contains the IPSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key).'
                type: string
                minLength: 1
                maxLength: 300
              activate:
                description: The updated boolean value that specifies whether the IPSet is active or not.
                type: boolean
  /invitation/delete:
    post:
      operationId: DeleteInvitations
      description: Deletes invitations sent to the current member account by AWS accounts specified by their account IDs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteInvitationsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - accountIds
            properties:
              accountIds:
                description: A list of account IDs of the AWS accounts that sent invitations to the current member account that you want to delete invitations from.
                type: array
                items:
                  $ref: '#/definitions/AccountId'
                minItems: 1
                maxItems: 50
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/detector/{detectorId}/member/delete':
    post:
      operationId: DeleteMembers
      description: Deletes GuardDuty member accounts (to the current GuardDuty master account) specified by the account IDs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteMembersResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector of the GuardDuty account whose members you want to delete.
          type: string
          minLength: 1
          maxLength: 300
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - accountIds
            properties:
              accountIds:
                description: A list of account IDs of the GuardDuty member accounts that you want to delete.
                type: array
                items:
                  $ref: '#/definitions/AccountId'
                minItems: 1
                maxItems: 50
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/detector/{detectorId}/threatintelset/{threatIntelSetId}':
    delete:
      operationId: DeleteThreatIntelSet
      description: Deletes ThreatIntelSet specified by the ThreatIntelSet ID.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteThreatIntelSetResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector the threatIntelSet is associated with.
          type: string
          minLength: 1
          maxLength: 300
        - name: threatIntelSetId
          in: path
          required: true
          description: The unique ID of the threatIntelSet you want to delete.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetThreatIntelSet
      description: Retrieves the ThreatIntelSet that is specified by the ThreatIntelSet ID.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetThreatIntelSetResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector the threatIntelSet is associated with.
          type: string
          minLength: 1
          maxLength: 300
        - name: threatIntelSetId
          in: path
          required: true
          description: The unique ID of the threatIntelSet you want to get.
          type: string
    post:
      operationId: UpdateThreatIntelSet
      description: Updates the ThreatIntelSet specified by ThreatIntelSet ID.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateThreatIntelSetResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The detectorID that specifies the GuardDuty service whose ThreatIntelSet you want to update.
          type: string
          minLength: 1
          maxLength: 300
        - name: threatIntelSetId
          in: path
          required: true
          description: The unique ID that specifies the ThreatIntelSet that you want to update.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                description: The unique ID that specifies the ThreatIntelSet that you want to update.
                type: string
                minLength: 1
                maxLength: 300
              location:
                description: 'The updated URI of the file that contains the ThreateIntelSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key)'
                type: string
                minLength: 1
                maxLength: 300
              activate:
                description: The updated boolean value that specifies whether the ThreateIntelSet is active or not.
                type: boolean
  '/detector/{detectorId}/master/disassociate':
    post:
      operationId: DisassociateFromMasterAccount
      description: Disassociates the current GuardDuty member account from its master account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateFromMasterAccountResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector of the GuardDuty member account.
          type: string
          minLength: 1
          maxLength: 300
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/detector/{detectorId}/member/disassociate':
    post:
      operationId: DisassociateMembers
      description: Disassociates GuardDuty member accounts (to the current GuardDuty master account) specified by the account IDs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateMembersResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector of the GuardDuty account whose members you want to disassociate from master.
          type: string
          minLength: 1
          maxLength: 300
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - accountIds
            properties:
              accountIds:
                description: A list of account IDs of the GuardDuty member accounts that you want to disassociate from master.
                type: array
                items:
                  $ref: '#/definitions/AccountId'
                minItems: 1
                maxItems: 50
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/detector/{detectorId}/findings/get':
    post:
      operationId: GetFindings
      description: Describes Amazon GuardDuty findings specified by finding IDs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFindingsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The ID of the detector that specifies the GuardDuty service whose findings you want to retrieve.
          type: string
          minLength: 1
          maxLength: 300
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - findingIds
            properties:
              findingIds:
                description: IDs of the findings that you want to retrieve.
                type: array
                items:
                  $ref: '#/definitions/FindingId'
                minItems: 0
                maxItems: 50
              sortCriteria:
                description: Represents the criteria used for sorting findings.
                type: object
                properties:
                  AttributeName:
                    $ref: '#/definitions/String'
                    description: 'Represents the finding attribute (for example, accountId) by which to sort findings.'
                  OrderBy:
                    $ref: '#/definitions/OrderBy'
                    description: Order by which the sorted findings are to be displayed.
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/detector/{detectorId}/findings/statistics':
    post:
      operationId: GetFindingsStatistics
      description: Lists Amazon GuardDuty findings' statistics for the specified detector ID.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFindingsStatisticsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The ID of the detector that specifies the GuardDuty service whose findings' statistics you want to retrieve.
          type: string
          minLength: 1
          maxLength: 300
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - findingStatisticTypes
            properties:
              findingStatisticTypes:
                description: Types of finding statistics to retrieve.
                type: array
                items:
                  $ref: '#/definitions/FindingStatisticType'
                minItems: 0
                maxItems: 10
              findingCriteria:
                description: Represents the criteria used for querying findings.
                type: object
                properties:
                  Criterion:
                    $ref: '#/definitions/Criterion'
                    description: Represents a map of finding properties that match specified conditions and values when querying findings.
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /invitation/count:
    get:
      operationId: GetInvitationsCount
      description: Returns the count of all GuardDuty membership invitations that were sent to the current member account except the currently accepted invitation.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInvitationsCountResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters: []
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/detector/{detectorId}/member/get':
    post:
      operationId: GetMembers
      description: Retrieves GuardDuty member accounts (to the current GuardDuty master account) specified by the account IDs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMembersResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector of the GuardDuty account whose members you want to retrieve.
          type: string
          minLength: 1
          maxLength: 300
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - accountIds
            properties:
              accountIds:
                description: A list of account IDs of the GuardDuty member accounts that you want to describe.
                type: array
                items:
                  $ref: '#/definitions/AccountId'
                minItems: 1
                maxItems: 50
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/detector/{detectorId}/member/invite':
    post:
      operationId: InviteMembers
      description: Invites other AWS accounts (created as members of the current AWS account by CreateMembers) to enable GuardDuty and allow the current AWS account to view and manage these accounts' GuardDuty findings on their behalf as the master account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InviteMembersResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector of the GuardDuty account with which you want to invite members.
          type: string
          minLength: 1
          maxLength: 300
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - accountIds
            properties:
              accountIds:
                description: A list of account IDs of the accounts that you want to invite to GuardDuty as members.
                type: array
                items:
                  $ref: '#/definitions/AccountId'
                minItems: 1
                maxItems: 50
              disableEmailNotification:
                description: A boolean value that specifies whether you want to disable email notification to the accounts that you’re inviting to GuardDuty as members.
                type: boolean
              message:
                description: The invitation message that you want to send to the accounts that you’re inviting to GuardDuty as members.
                type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/detector/{detectorId}/findings':
    post:
      operationId: ListFindings
      description: Lists Amazon GuardDuty findings for the specified detector ID.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFindingsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The ID of the detector that specifies the GuardDuty service whose findings you want to list.
          type: string
          minLength: 1
          maxLength: 300
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              findingCriteria:
                description: Represents the criteria used for querying findings.
                type: object
                properties:
                  Criterion:
                    $ref: '#/definitions/Criterion'
                    description: Represents a map of finding properties that match specified conditions and values when querying findings.
              sortCriteria:
                description: Represents the criteria used for sorting findings.
                type: object
                properties:
                  AttributeName:
                    $ref: '#/definitions/String'
                    description: 'Represents the finding attribute (for example, accountId) by which to sort findings.'
                  OrderBy:
                    $ref: '#/definitions/OrderBy'
                    description: Order by which the sorted findings are to be displayed.
              maxResults:
                description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 50. The maximum value is 50.
                type: integer
                minimum: 1
                maximum: 50
              nextToken:
                description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.
                type: string
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /invitation:
    get:
      operationId: ListInvitations
      description: Lists all GuardDuty membership invitations that were sent to the current AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListInvitationsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 50. The maximum value is 50.
          type: integer
          minimum: 1
          maximum: 50
        - name: nextToken
          in: query
          required: false
          description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.
          type: string
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/detector/{detectorId}/member/start':
    post:
      operationId: StartMonitoringMembers
      description: Re-enables GuardDuty to monitor findings of the member accounts specified by the account IDs. A master GuardDuty account can run this command after disabling GuardDuty from monitoring these members' findings by running StopMonitoringMembers.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartMonitoringMembersResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector of the GuardDuty account whom you want to re-enable to monitor members' findings.
          type: string
          minLength: 1
          maxLength: 300
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - accountIds
            properties:
              accountIds:
                description: A list of account IDs of the GuardDuty member accounts whose findings you want the master account to monitor.
                type: array
                items:
                  $ref: '#/definitions/AccountId'
                minItems: 1
                maxItems: 50
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/detector/{detectorId}/member/stop':
    post:
      operationId: StopMonitoringMembers
      description: 'Disables GuardDuty from monitoring findings of the member accounts specified by the account IDs. After running this command, a master GuardDuty account can run StartMonitoringMembers to re-enable GuardDuty to monitor these members’ findings.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopMonitoringMembersResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The unique ID of the detector of the GuardDuty account that you want to stop from monitor members' findings.
          type: string
          minLength: 1
          maxLength: 300
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - accountIds
            properties:
              accountIds:
                description: A list of account IDs of the GuardDuty member accounts whose findings you want the master account to stop monitoring.
                type: array
                items:
                  $ref: '#/definitions/AccountId'
                minItems: 1
                maxItems: 50
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/detector/{detectorId}/findings/unarchive':
    post:
      operationId: UnarchiveFindings
      description: Unarchives Amazon GuardDuty findings specified by the list of finding IDs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UnarchiveFindingsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The ID of the detector that specifies the GuardDuty service whose findings you want to unarchive.
          type: string
          minLength: 1
          maxLength: 300
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - findingIds
            properties:
              findingIds:
                description: IDs of the findings that you want to unarchive.
                type: array
                items:
                  $ref: '#/definitions/FindingId'
                minItems: 0
                maxItems: 50
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/detector/{detectorId}/findings/feedback':
    post:
      operationId: UpdateFindingsFeedback
      description: Marks specified Amazon GuardDuty findings as useful or not useful.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFindingsFeedbackResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: detectorId
          in: path
          required: true
          description: The ID of the detector that specifies the GuardDuty service whose findings you want to mark as useful or not useful.
          type: string
          minLength: 1
          maxLength: 300
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - findingIds
              - feedback
            properties:
              findingIds:
                description: IDs of the findings that you want to mark as useful or not useful.
                type: array
                items:
                  $ref: '#/definitions/FindingId'
                minItems: 0
                maxItems: 50
              feedback:
                description: 'Valid values: USEFUL | NOT_USEFUL'
                type: string
                enum:
                  - USEFUL
                  - NOT_USEFUL
              comments:
                description: Additional feedback about the GuardDuty findings.
                type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AcceptInvitationResponse:
    type: object
    properties: {}
  BadRequestException: {}
  InternalServerErrorException: {}
  ArchiveFindingsResponse:
    type: object
    properties: {}
  FindingId:
    type: string
    minLength: 1
    maxLength: 300
  CreateDetectorResponse:
    type: object
    properties:
      DetectorId:
        $ref: '#/definitions/DetectorId'
        description: The unique ID of the created detector.
  CreateFilterResponse:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/FilterName'
        description: The name of the successfully created filter.
  Criterion:
    type: object
    additionalProperties:
      $ref: '#/definitions/Condition'
  CreateIPSetResponse:
    type: object
    required:
      - IpSetId
    properties:
      IpSetId:
        $ref: '#/definitions/String'
        description: The ID of the IPSet resource.
  CreateMembersResponse:
    type: object
    required:
      - UnprocessedAccounts
    properties:
      UnprocessedAccounts:
        $ref: '#/definitions/UnprocessedAccounts'
        description: A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.
  AccountDetail:
    type: object
    required:
      - AccountId
      - Email
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: Member account ID.
      Email:
        $ref: '#/definitions/Email'
        description: Member account's email address.
  CreateSampleFindingsResponse:
    type: object
    properties: {}
  FindingType:
    type: string
    minLength: 1
    maxLength: 50
  CreateThreatIntelSetResponse:
    type: object
    required:
      - ThreatIntelSetId
    properties:
      ThreatIntelSetId:
        $ref: '#/definitions/String'
        description: The ID of the ThreatIntelSet resource.
  DeclineInvitationsResponse:
    type: object
    required:
      - UnprocessedAccounts
    properties:
      UnprocessedAccounts:
        $ref: '#/definitions/UnprocessedAccounts'
        description: A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.
  AccountId:
    type: string
    minLength: 12
    maxLength: 12
  DeleteDetectorResponse:
    type: object
    properties: {}
  DeleteFilterResponse:
    type: object
    properties: {}
  DeleteIPSetResponse:
    type: object
    properties: {}
  DeleteInvitationsResponse:
    type: object
    required:
      - UnprocessedAccounts
    properties:
      UnprocessedAccounts:
        $ref: '#/definitions/UnprocessedAccounts'
        description: A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.
  DeleteMembersResponse:
    type: object
    required:
      - UnprocessedAccounts
    properties:
      UnprocessedAccounts:
        $ref: '#/definitions/UnprocessedAccounts'
        description: A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.
  DeleteThreatIntelSetResponse:
    type: object
    properties: {}
  DisassociateFromMasterAccountResponse:
    type: object
    properties: {}
  DisassociateMembersResponse:
    type: object
    required:
      - UnprocessedAccounts
    properties:
      UnprocessedAccounts:
        $ref: '#/definitions/UnprocessedAccounts'
        description: A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.
  GetDetectorResponse:
    type: object
    required:
      - ServiceRole
      - Status
    properties:
      CreatedAt:
        $ref: '#/definitions/String'
        description: Detector creation timestamp.
      FindingPublishingFrequency:
        $ref: '#/definitions/FindingPublishingFrequency'
        description: Finding publishing frequency.
      ServiceRole:
        $ref: '#/definitions/String'
        description: The GuardDuty service role.
      Status:
        $ref: '#/definitions/DetectorStatus'
        description: The detector status.
      UpdatedAt:
        $ref: '#/definitions/String'
        description: Detector last update timestamp.
  GetFilterResponse:
    type: object
    required:
      - Name
      - Action
      - FindingCriteria
    properties:
      Name:
        $ref: '#/definitions/FilterName'
        description: The name of the filter.
      Description:
        $ref: '#/definitions/FilterDescription'
        description: The description of the filter.
      Action:
        $ref: '#/definitions/FilterAction'
        description: Specifies the action that is to be applied to the findings that match the filter.
      Rank:
        $ref: '#/definitions/FilterRank'
        description: Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.
      FindingCriteria:
        $ref: '#/definitions/FindingCriteria'
        description: Represents the criteria to be used in the filter for querying findings.
  GetFindingsResponse:
    type: object
    required:
      - Findings
    properties:
      Findings:
        $ref: '#/definitions/Findings'
        description: A list of findings.
  String:
    type: string
  OrderBy:
    type: string
    enum:
      - ASC
      - DESC
  GetFindingsStatisticsResponse:
    type: object
    required:
      - FindingStatistics
    properties:
      FindingStatistics:
        $ref: '#/definitions/FindingStatistics'
        description: Finding statistics object.
  FindingStatisticType:
    type: string
    enum:
      - COUNT_BY_SEVERITY
  GetIPSetResponse:
    type: object
    required:
      - Name
      - Format
      - Location
      - Status
    properties:
      Name:
        $ref: '#/definitions/Name'
        description: The user friendly name to identify the IPSet. This name is displayed in all findings that are triggered by activity that involves IP addresses included in this IPSet.
      Format:
        $ref: '#/definitions/IpSetFormat'
        description: The format of the file that contains the IPSet.
      Location:
        $ref: '#/definitions/Location'
        description: 'The URI of the file that contains the IPSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key)'
      Status:
        $ref: '#/definitions/IpSetStatus'
        description: The status of ipSet file uploaded.
  GetInvitationsCountResponse:
    type: object
    properties:
      InvitationsCount:
        $ref: '#/definitions/Integer'
        description: The number of received invitations.
  GetMasterAccountResponse:
    type: object
    required:
      - Master
    properties:
      Master:
        $ref: '#/definitions/Master'
        description: Master account details.
  GetMembersResponse:
    type: object
    required:
      - Members
      - UnprocessedAccounts
    properties:
      Members:
        $ref: '#/definitions/Members'
        description: A list of members.
      UnprocessedAccounts:
        $ref: '#/definitions/UnprocessedAccounts'
        description: A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.
  GetThreatIntelSetResponse:
    type: object
    required:
      - Name
      - Format
      - Location
      - Status
    properties:
      Name:
        $ref: '#/definitions/Name'
        description: A user-friendly ThreatIntelSet name that is displayed in all finding generated by activity that involves IP addresses included in this ThreatIntelSet.
      Format:
        $ref: '#/definitions/ThreatIntelSetFormat'
        description: The format of the threatIntelSet.
      Location:
        $ref: '#/definitions/Location'
        description: 'The URI of the file that contains the ThreatIntelSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key).'
      Status:
        $ref: '#/definitions/ThreatIntelSetStatus'
        description: The status of threatIntelSet file uploaded.
  InviteMembersResponse:
    type: object
    required:
      - UnprocessedAccounts
    properties:
      UnprocessedAccounts:
        $ref: '#/definitions/UnprocessedAccounts'
        description: A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.
  ListDetectorsResponse:
    type: object
    required:
      - DetectorIds
    properties:
      DetectorIds:
        $ref: '#/definitions/DetectorIds'
        description: A list of detector Ids.
      NextToken:
        $ref: '#/definitions/String'
        description: Pagination parameter to be used on the next list operation to retrieve more items.
  ListFiltersResponse:
    type: object
    required:
      - FilterNames
    properties:
      FilterNames:
        $ref: '#/definitions/FilterNames'
        description: A list of filter names
      NextToken:
        $ref: '#/definitions/String'
        description: Pagination parameter to be used on the next list operation to retrieve more items.
  ListFindingsResponse:
    type: object
    required:
      - FindingIds
    properties:
      FindingIds:
        $ref: '#/definitions/FindingIds'
        description: The IDs of the findings you are listing.
      NextToken:
        $ref: '#/definitions/String'
        description: Pagination parameter to be used on the next list operation to retrieve more items.
  ListIPSetsResponse:
    type: object
    required:
      - IpSetIds
    properties:
      IpSetIds:
        $ref: '#/definitions/IpSetIds'
        description: The IDs of the IPSet resources.
      NextToken:
        $ref: '#/definitions/String'
        description: Pagination parameter to be used on the next list operation to retrieve more items.
  ListInvitationsResponse:
    type: object
    properties:
      Invitations:
        $ref: '#/definitions/Invitations'
        description: A list of invitation descriptions.
      NextToken:
        $ref: '#/definitions/String'
        description: Pagination parameter to be used on the next list operation to retrieve more items.
  ListMembersResponse:
    type: object
    properties:
      Members:
        $ref: '#/definitions/Members'
        description: A list of members.
      NextToken:
        $ref: '#/definitions/String'
        description: Pagination parameter to be used on the next list operation to retrieve more items.
  ListThreatIntelSetsResponse:
    type: object
    required:
      - ThreatIntelSetIds
    properties:
      ThreatIntelSetIds:
        $ref: '#/definitions/ThreatIntelSetIds'
        description: The IDs of the ThreatIntelSet resources.
      NextToken:
        $ref: '#/definitions/String'
        description: Pagination parameter to be used on the next list operation to retrieve more items.
  StartMonitoringMembersResponse:
    type: object
    required:
      - UnprocessedAccounts
    properties:
      UnprocessedAccounts:
        $ref: '#/definitions/UnprocessedAccounts'
        description: A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.
  StopMonitoringMembersResponse:
    type: object
    required:
      - UnprocessedAccounts
    properties:
      UnprocessedAccounts:
        $ref: '#/definitions/UnprocessedAccounts'
        description: A list of objects containing the unprocessed account and a result string explaining why it was unprocessed.
  UnarchiveFindingsResponse:
    type: object
    properties: {}
  UpdateDetectorResponse:
    type: object
    properties: {}
  UpdateFilterResponse:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/FilterName'
        description: The name of the filter.
  UpdateFindingsFeedbackResponse:
    type: object
    properties: {}
  UpdateIPSetResponse:
    type: object
    properties: {}
  UpdateThreatIntelSetResponse:
    type: object
    properties: {}
  DetectorId:
    type: string
    minLength: 1
    maxLength: 300
  AcceptInvitationRequest:
    type: object
    required:
      - MasterId
      - InvitationId
    properties:
      MasterId:
        $ref: '#/definitions/String'
        description: The account ID of the master GuardDuty account whose invitation you're accepting.
      InvitationId:
        $ref: '#/definitions/String'
        description: This value is used to validate the master account to the member account.
  AccessKeyDetails:
    type: object
    properties:
      AccessKeyId:
        $ref: '#/definitions/String'
        description: Access key ID of the user.
      PrincipalId:
        $ref: '#/definitions/String'
        description: The principal ID of the user.
      UserName:
        $ref: '#/definitions/String'
        description: The name of the user.
      UserType:
        $ref: '#/definitions/String'
        description: The type of the user.
  Email:
    type: string
    minLength: 1
    maxLength: 64
  AccountDetails:
    type: array
    items:
      $ref: '#/definitions/AccountDetail'
    minItems: 1
    maxItems: 50
  AccountIds:
    type: array
    items:
      $ref: '#/definitions/AccountId'
    minItems: 1
    maxItems: 50
  AwsApiCallAction:
    type: object
    properties:
      Api:
        $ref: '#/definitions/String'
        description: AWS API name.
      CallerType:
        $ref: '#/definitions/String'
        description: AWS API caller type.
      DomainDetails:
        $ref: '#/definitions/DomainDetails'
        description: Domain information for the AWS API call.
      RemoteIpDetails:
        $ref: '#/definitions/RemoteIpDetails'
        description: Remote IP information of the connection.
      ServiceName:
        $ref: '#/definitions/String'
        description: AWS service name whose API was invoked.
  DnsRequestAction:
    type: object
    properties:
      Domain:
        $ref: '#/definitions/String'
        description: Domain information for the DNS request.
  NetworkConnectionAction:
    type: object
    properties:
      Blocked:
        $ref: '#/definitions/Boolean'
        description: Network connection blocked information.
      ConnectionDirection:
        $ref: '#/definitions/String'
        description: Network connection direction.
      LocalPortDetails:
        $ref: '#/definitions/LocalPortDetails'
        description: Local port information of the connection.
      Protocol:
        $ref: '#/definitions/String'
        description: Network connection protocol.
      RemoteIpDetails:
        $ref: '#/definitions/RemoteIpDetails'
        description: Remote IP information of the connection.
      RemotePortDetails:
        $ref: '#/definitions/RemotePortDetails'
        description: Remote port information of the connection.
  PortProbeAction:
    type: object
    properties:
      Blocked:
        $ref: '#/definitions/Boolean'
        description: Port probe blocked information.
      PortProbeDetails:
        $ref: '#/definitions/PortProbeDetails'
        description: A list of port probe details objects.
  Action:
    type: object
    properties:
      ActionType:
        $ref: '#/definitions/String'
        description: GuardDuty Finding activity type.
      AwsApiCallAction:
        $ref: '#/definitions/AwsApiCallAction'
        description: Information about the AWS_API_CALL action described in this finding.
      DnsRequestAction:
        $ref: '#/definitions/DnsRequestAction'
        description: Information about the DNS_REQUEST action described in this finding.
      NetworkConnectionAction:
        $ref: '#/definitions/NetworkConnectionAction'
        description: Information about the NETWORK_CONNECTION action described in this finding.
      PortProbeAction:
        $ref: '#/definitions/PortProbeAction'
        description: Information about the PORT_PROBE action described in this finding.
  FindingIds:
    type: array
    items:
      $ref: '#/definitions/FindingId'
    minItems: 0
    maxItems: 50
  ArchiveFindingsRequest:
    type: object
    required:
      - FindingIds
    properties:
      FindingIds:
        $ref: '#/definitions/FindingIds'
        description: IDs of the findings that you want to archive.
  DomainDetails:
    type: object
    properties:
      Domain:
        $ref: '#/definitions/String'
        description: Domain information for the AWS API call.
  RemoteIpDetails:
    type: object
    properties:
      City:
        $ref: '#/definitions/City'
        description: City information of the remote IP address.
      Country:
        $ref: '#/definitions/Country'
        description: Country code of the remote IP address.
      GeoLocation:
        $ref: '#/definitions/GeoLocation'
        description: Location information of the remote IP address.
      IpAddressV4:
        $ref: '#/definitions/String'
        description: IPV4 remote address of the connection.
      Organization:
        $ref: '#/definitions/Organization'
        description: ISP Organization information of the remote IP address.
  Boolean:
    type: boolean
  City:
    type: object
    properties:
      CityName:
        $ref: '#/definitions/String'
        description: City name of the remote IP address.
  ClientToken:
    type: string
    minLength: 0
    maxLength: 64
  Eq:
    type: array
    items:
      $ref: '#/definitions/String'
  Neq:
    type: array
    items:
      $ref: '#/definitions/String'
  Integer:
    type: integer
  Equals:
    type: array
    items:
      $ref: '#/definitions/String'
  NotEquals:
    type: array
    items:
      $ref: '#/definitions/String'
  Long:
    type: integer
  Condition:
    type: object
    properties:
      Eq:
        $ref: '#/definitions/Eq'
        description: Represents the equal condition to be applied to a single field when querying for findings.
      Neq:
        $ref: '#/definitions/Neq'
        description: Represents the not equal condition to be applied to a single field when querying for findings.
      Gt:
        $ref: '#/definitions/Integer'
        description: Represents a greater than condition to be applied to a single field when querying for findings.
      Gte:
        $ref: '#/definitions/Integer'
        description: Represents a greater than equal condition to be applied to a single field when querying for findings.
      Lt:
        $ref: '#/definitions/Integer'
        description: Represents a less than condition to be applied to a single field when querying for findings.
      Lte:
        $ref: '#/definitions/Integer'
        description: Represents a less than equal condition to be applied to a single field when querying for findings.
      Equals:
        $ref: '#/definitions/Equals'
      NotEquals:
        $ref: '#/definitions/NotEquals'
      GreaterThan:
        $ref: '#/definitions/Long'
        description: Represents a greater than condition to be applied to a single field when querying for findings.
      GreaterThanOrEqual:
        $ref: '#/definitions/Long'
        description: Represents a greater than equal condition to be applied to a single field when querying for findings.
      LessThan:
        $ref: '#/definitions/Long'
        description: Represents a less than condition to be applied to a single field when querying for findings.
      LessThanOrEqual:
        $ref: '#/definitions/Long'
        description: Represents a less than equal condition to be applied to a single field when querying for findings.
  CountBySeverity:
    type: object
    additionalProperties:
      $ref: '#/definitions/Integer'
  Country:
    type: object
    properties:
      CountryCode:
        $ref: '#/definitions/String'
        description: Country code of the remote IP address.
      CountryName:
        $ref: '#/definitions/String'
        description: Country name of the remote IP address.
  FindingPublishingFrequency:
    type: string
    enum:
      - FIFTEEN_MINUTES
      - ONE_HOUR
      - SIX_HOURS
  CreateDetectorRequest:
    type: object
    required:
      - Enable
    properties:
      Enable:
        $ref: '#/definitions/Boolean'
        description: A boolean value that specifies whether the detector is to be enabled.
      ClientToken:
        $ref: '#/definitions/ClientToken'
        description: The idempotency token for the create request.
      FindingPublishingFrequency:
        $ref: '#/definitions/FindingPublishingFrequency'
        description: A enum value that specifies how frequently customer got Finding updates published.
  FilterName:
    type: string
    minLength: 3
    maxLength: 64
  FilterDescription:
    type: string
    minLength: 0
    maxLength: 512
  FilterAction:
    type: string
    enum:
      - NOOP
      - ARCHIVE
    minLength: 1
    maxLength: 300
  FilterRank:
    type: integer
    minimum: 1
    maximum: 100
  FindingCriteria:
    type: object
    properties:
      Criterion:
        $ref: '#/definitions/Criterion'
        description: Represents a map of finding properties that match specified conditions and values when querying findings.
  CreateFilterRequest:
    type: object
    required:
      - Name
      - FindingCriteria
    properties:
      Name:
        $ref: '#/definitions/FilterName'
        description: The name of the filter.
      Description:
        $ref: '#/definitions/FilterDescription'
        description: The description of the filter.
      Action:
        $ref: '#/definitions/FilterAction'
        description: Specifies the action that is to be applied to the findings that match the filter.
      Rank:
        $ref: '#/definitions/FilterRank'
        description: Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.
      FindingCriteria:
        $ref: '#/definitions/FindingCriteria'
        description: Represents the criteria to be used in the filter for querying findings.
      ClientToken:
        $ref: '#/definitions/ClientToken'
        description: The idempotency token for the create request.
  Name:
    type: string
    minLength: 1
    maxLength: 300
  IpSetFormat:
    type: string
    enum:
      - TXT
      - STIX
      - OTX_CSV
      - ALIEN_VAULT
      - PROOF_POINT
      - FIRE_EYE
    minLength: 1
    maxLength: 300
  Location:
    type: string
    minLength: 1
    maxLength: 300
  CreateIPSetRequest:
    type: object
    required:
      - Name
      - Format
      - Location
      - Activate
    properties:
      Name:
        $ref: '#/definitions/Name'
        description: The user friendly name to identify the IPSet. This name is displayed in all findings that are triggered by activity that involves IP addresses included in this IPSet.
      Format:
        $ref: '#/definitions/IpSetFormat'
        description: The format of the file that contains the IPSet.
      Location:
        $ref: '#/definitions/Location'
        description: 'The URI of the file that contains the IPSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key)'
      Activate:
        $ref: '#/definitions/Boolean'
        description: A boolean value that indicates whether GuardDuty is to start using the uploaded IPSet.
      ClientToken:
        $ref: '#/definitions/ClientToken'
        description: The idempotency token for the create request.
  CreateMembersRequest:
    type: object
    required:
      - AccountDetails
    properties:
      AccountDetails:
        $ref: '#/definitions/AccountDetails'
        description: A list of account ID and email address pairs of the accounts that you want to associate with the master GuardDuty account.
  UnprocessedAccounts:
    type: array
    items:
      $ref: '#/definitions/UnprocessedAccount'
    minItems: 0
    maxItems: 50
  FindingTypes:
    type: array
    items:
      $ref: '#/definitions/FindingType'
    minItems: 0
    maxItems: 50
  CreateSampleFindingsRequest:
    type: object
    properties:
      FindingTypes:
        $ref: '#/definitions/FindingTypes'
        description: Types of sample findings that you want to generate.
  ThreatIntelSetFormat:
    type: string
    enum:
      - TXT
      - STIX
      - OTX_CSV
      - ALIEN_VAULT
      - PROOF_POINT
      - FIRE_EYE
    minLength: 1
    maxLength: 300
  CreateThreatIntelSetRequest:
    type: object
    required:
      - Name
      - Format
      - Location
      - Activate
    properties:
      Name:
        $ref: '#/definitions/Name'
        description: A user-friendly ThreatIntelSet name that is displayed in all finding generated by activity that involves IP addresses included in this ThreatIntelSet.
      Format:
        $ref: '#/definitions/ThreatIntelSetFormat'
        description: The format of the file that contains the ThreatIntelSet.
      Location:
        $ref: '#/definitions/Location'
        description: 'The URI of the file that contains the ThreatIntelSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key).'
      Activate:
        $ref: '#/definitions/Boolean'
        description: A boolean value that indicates whether GuardDuty is to start using the uploaded ThreatIntelSet.
      ClientToken:
        $ref: '#/definitions/ClientToken'
        description: The idempotency token for the create request.
  DeclineInvitationsRequest:
    type: object
    required:
      - AccountIds
    properties:
      AccountIds:
        $ref: '#/definitions/AccountIds'
        description: A list of account IDs of the AWS accounts that sent invitations to the current member account that you want to decline invitations from.
  DeleteDetectorRequest:
    type: object
    properties: {}
  DeleteFilterRequest:
    type: object
    properties: {}
  DeleteIPSetRequest:
    type: object
    properties: {}
  DeleteInvitationsRequest:
    type: object
    required:
      - AccountIds
    properties:
      AccountIds:
        $ref: '#/definitions/AccountIds'
        description: A list of account IDs of the AWS accounts that sent invitations to the current member account that you want to delete invitations from.
  DeleteMembersRequest:
    type: object
    required:
      - AccountIds
    properties:
      AccountIds:
        $ref: '#/definitions/AccountIds'
        description: A list of account IDs of the GuardDuty member accounts that you want to delete.
  DeleteThreatIntelSetRequest:
    type: object
    properties: {}
  DetectorIds:
    type: array
    items:
      $ref: '#/definitions/DetectorId'
    minItems: 0
    maxItems: 50
  DetectorStatus:
    type: string
    enum:
      - ENABLED
      - DISABLED
    minLength: 1
    maxLength: 300
  DisassociateFromMasterAccountRequest:
    type: object
    properties: {}
  DisassociateMembersRequest:
    type: object
    required:
      - AccountIds
    properties:
      AccountIds:
        $ref: '#/definitions/AccountIds'
        description: A list of account IDs of the GuardDuty member accounts that you want to disassociate from master.
  Double:
    type: number
    format: double
  Feedback:
    type: string
    enum:
      - USEFUL
      - NOT_USEFUL
  FilterNames:
    type: array
    items:
      $ref: '#/definitions/FilterName'
    minItems: 0
    maxItems: 50
  Resource:
    type: object
    properties:
      AccessKeyDetails:
        $ref: '#/definitions/AccessKeyDetails'
        description: The IAM access key details (IAM user information) of a user that engaged in the activity that prompted GuardDuty to generate a finding.
      InstanceDetails:
        $ref: '#/definitions/InstanceDetails'
        description: The information about the EC2 instance associated with the activity that prompted GuardDuty to generate a finding.
      ResourceType:
        $ref: '#/definitions/String'
        description: The type of the AWS resource.
  Service:
    type: object
    properties:
      Action:
        $ref: '#/definitions/Action'
        description: Information about the activity described in a finding.
      Archived:
        $ref: '#/definitions/Boolean'
        description: Indicates whether this finding is archived.
      Count:
        $ref: '#/definitions/Integer'
        description: Total count of the occurrences of this finding type.
      DetectorId:
        $ref: '#/definitions/DetectorId'
        description: Detector ID for the GuardDuty service.
      EventFirstSeen:
        $ref: '#/definitions/String'
        description: First seen timestamp of the activity that prompted GuardDuty to generate this finding.
      EventLastSeen:
        $ref: '#/definitions/String'
        description: Last seen timestamp of the activity that prompted GuardDuty to generate this finding.
      ResourceRole:
        $ref: '#/definitions/String'
        description: Resource role information for this finding.
      ServiceName:
        $ref: '#/definitions/String'
        description: The name of the AWS service (GuardDuty) that generated a finding.
      UserFeedback:
        $ref: '#/definitions/String'
        description: Feedback left about the finding.
  Finding:
    type: object
    required:
      - AccountId
      - Arn
      - CreatedAt
      - Id
      - Region
      - Resource
      - SchemaVersion
      - Severity
      - Type
      - UpdatedAt
    properties:
      AccountId:
        $ref: '#/definitions/String'
        description: AWS account ID where the activity occurred that prompted GuardDuty to generate a finding.
      Arn:
        $ref: '#/definitions/String'
        description: The ARN of a finding described by the action.
      Confidence:
        $ref: '#/definitions/Double'
        description: The confidence level of a finding.
      CreatedAt:
        $ref: '#/definitions/String'
        description: The time stamp at which a finding was generated.
      Description:
        $ref: '#/definitions/String'
        description: The description of a finding.
      Id:
        $ref: '#/definitions/String'
        description: The identifier that corresponds to a finding described by the action.
      Partition:
        $ref: '#/definitions/String'
        description: The AWS resource partition.
      Region:
        $ref: '#/definitions/String'
        description: The AWS region where the activity occurred that prompted GuardDuty to generate a finding.
      Resource:
        $ref: '#/definitions/Resource'
        description: The AWS resource associated with the activity that prompted GuardDuty to generate a finding.
      SchemaVersion:
        $ref: '#/definitions/String'
        description: Findings' schema version.
      Service:
        $ref: '#/definitions/Service'
        description: Additional information assigned to the generated finding by GuardDuty.
      Severity:
        $ref: '#/definitions/Double'
        description: The severity of a finding.
      Title:
        $ref: '#/definitions/String'
        description: The title of a finding.
      Type:
        $ref: '#/definitions/FindingType'
        description: The type of a finding described by the action.
      UpdatedAt:
        $ref: '#/definitions/String'
        description: The time stamp at which a finding was last updated.
  FindingStatisticTypes:
    type: array
    items:
      $ref: '#/definitions/FindingStatisticType'
    minItems: 0
    maxItems: 10
  FindingStatistics:
    type: object
    properties:
      CountBySeverity:
        $ref: '#/definitions/CountBySeverity'
        description: Represents a map of severity to count statistic for a set of findings
  Findings:
    type: array
    items:
      $ref: '#/definitions/Finding'
    minItems: 0
    maxItems: 50
  GeoLocation:
    type: object
    properties:
      Lat:
        $ref: '#/definitions/Double'
        description: Latitude information of remote IP address.
      Lon:
        $ref: '#/definitions/Double'
        description: Longitude information of remote IP address.
  GetDetectorRequest:
    type: object
    properties: {}
  GetFilterRequest:
    type: object
    properties: {}
  SortCriteria:
    type: object
    properties:
      AttributeName:
        $ref: '#/definitions/String'
        description: 'Represents the finding attribute (for example, accountId) by which to sort findings.'
      OrderBy:
        $ref: '#/definitions/OrderBy'
        description: Order by which the sorted findings are to be displayed.
  GetFindingsRequest:
    type: object
    required:
      - FindingIds
    properties:
      FindingIds:
        $ref: '#/definitions/FindingIds'
        description: IDs of the findings that you want to retrieve.
      SortCriteria:
        $ref: '#/definitions/SortCriteria'
        description: Represents the criteria used for sorting findings.
  GetFindingsStatisticsRequest:
    type: object
    required:
      - FindingStatisticTypes
    properties:
      FindingStatisticTypes:
        $ref: '#/definitions/FindingStatisticTypes'
        description: Types of finding statistics to retrieve.
      FindingCriteria:
        $ref: '#/definitions/FindingCriteria'
        description: Represents the criteria used for querying findings.
  GetIPSetRequest:
    type: object
    properties: {}
  IpSetStatus:
    type: string
    enum:
      - INACTIVE
      - ACTIVATING
      - ACTIVE
      - DEACTIVATING
      - ERROR
      - DELETE_PENDING
      - DELETED
    minLength: 1
    maxLength: 300
  GetInvitationsCountRequest:
    type: object
    properties: {}
  GetMasterAccountRequest:
    type: object
    properties: {}
  Master:
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: Master account ID
      InvitationId:
        $ref: '#/definitions/String'
        description: This value is used to validate the master account to the member account.
      RelationshipStatus:
        $ref: '#/definitions/String'
        description: The status of the relationship between the master and member accounts.
      InvitedAt:
        $ref: '#/definitions/String'
        description: Timestamp at which the invitation was sent
  GetMembersRequest:
    type: object
    required:
      - AccountIds
    properties:
      AccountIds:
        $ref: '#/definitions/AccountIds'
        description: A list of account IDs of the GuardDuty member accounts that you want to describe.
  Members:
    type: array
    items:
      $ref: '#/definitions/Member'
    minItems: 0
    maxItems: 50
  GetThreatIntelSetRequest:
    type: object
    properties: {}
  ThreatIntelSetStatus:
    type: string
    enum:
      - INACTIVE
      - ACTIVATING
      - ACTIVE
      - DEACTIVATING
      - ERROR
      - DELETE_PENDING
      - DELETED
    minLength: 1
    maxLength: 300
  IamInstanceProfile:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/String'
        description: AWS EC2 instance profile ARN.
      Id:
        $ref: '#/definitions/String'
        description: AWS EC2 instance profile ID.
  NetworkInterfaces:
    type: array
    items:
      $ref: '#/definitions/NetworkInterface'
  ProductCodes:
    type: array
    items:
      $ref: '#/definitions/ProductCode'
  Tags:
    type: array
    items:
      $ref: '#/definitions/Tag'
  InstanceDetails:
    type: object
    properties:
      AvailabilityZone:
        $ref: '#/definitions/String'
        description: The availability zone of the EC2 instance.
      IamInstanceProfile:
        $ref: '#/definitions/IamInstanceProfile'
        description: The profile information of the EC2 instance.
      ImageDescription:
        $ref: '#/definitions/String'
        description: The image description of the EC2 instance.
      ImageId:
        $ref: '#/definitions/String'
        description: The image ID of the EC2 instance.
      InstanceId:
        $ref: '#/definitions/String'
        description: The ID of the EC2 instance.
      InstanceState:
        $ref: '#/definitions/String'
        description: The state of the EC2 instance.
      InstanceType:
        $ref: '#/definitions/String'
        description: The type of the EC2 instance.
      LaunchTime:
        $ref: '#/definitions/String'
        description: The launch time of the EC2 instance.
      NetworkInterfaces:
        $ref: '#/definitions/NetworkInterfaces'
        description: The network interface information of the EC2 instance.
      Platform:
        $ref: '#/definitions/String'
        description: The platform of the EC2 instance.
      ProductCodes:
        $ref: '#/definitions/ProductCodes'
        description: The product code of the EC2 instance.
      Tags:
        $ref: '#/definitions/Tags'
        description: The tags of the EC2 instance.
  Invitation:
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: Inviter account ID
      InvitationId:
        $ref: '#/definitions/String'
        description: This value is used to validate the inviter account to the member account.
      RelationshipStatus:
        $ref: '#/definitions/String'
        description: The status of the relationship between the inviter and invitee accounts.
      InvitedAt:
        $ref: '#/definitions/String'
        description: Timestamp at which the invitation was sent
  Invitations:
    type: array
    items:
      $ref: '#/definitions/Invitation'
    minItems: 0
    maxItems: 50
  InviteMembersRequest:
    type: object
    required:
      - AccountIds
    properties:
      AccountIds:
        $ref: '#/definitions/AccountIds'
        description: A list of account IDs of the accounts that you want to invite to GuardDuty as members.
      DisableEmailNotification:
        $ref: '#/definitions/Boolean'
        description: A boolean value that specifies whether you want to disable email notification to the accounts that you’re inviting to GuardDuty as members.
      Message:
        $ref: '#/definitions/String'
        description: The invitation message that you want to send to the accounts that you’re inviting to GuardDuty as members.
  IpSetIds:
    type: array
    items:
      $ref: '#/definitions/String'
    minItems: 0
    maxItems: 50
  Ipv6Addresses:
    type: array
    items:
      $ref: '#/definitions/String'
  MaxResults:
    type: integer
    minimum: 1
    maximum: 50
  ListDetectorsRequest:
    type: object
    properties: {}
  ListFiltersRequest:
    type: object
    properties: {}
  ListFindingsRequest:
    type: object
    properties:
      FindingCriteria:
        $ref: '#/definitions/FindingCriteria'
        description: Represents the criteria used for querying findings.
      SortCriteria:
        $ref: '#/definitions/SortCriteria'
        description: Represents the criteria used for sorting findings.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 50. The maximum value is 50.
      NextToken:
        $ref: '#/definitions/String'
        description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action fill nextToken in the request with the value of NextToken from the previous response to continue listing data.
  ListIPSetsRequest:
    type: object
    properties: {}
  ListInvitationsRequest:
    type: object
    properties: {}
  ListMembersRequest:
    type: object
    properties: {}
  ListThreatIntelSetsRequest:
    type: object
    properties: {}
  ThreatIntelSetIds:
    type: array
    items:
      $ref: '#/definitions/String'
    minItems: 0
    maxItems: 50
  LocalPortDetails:
    type: object
    properties:
      Port:
        $ref: '#/definitions/Integer'
        description: Port number of the local connection.
      PortName:
        $ref: '#/definitions/String'
        description: Port name of the local connection.
  Member:
    type: object
    required:
      - AccountId
      - MasterId
      - Email
      - RelationshipStatus
      - UpdatedAt
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: Member account ID.
      DetectorId:
        $ref: '#/definitions/DetectorId'
        description: Member account's detector ID.
      MasterId:
        $ref: '#/definitions/String'
        description: Master account ID.
      Email:
        $ref: '#/definitions/Email'
        description: Member account's email address.
      RelationshipStatus:
        $ref: '#/definitions/String'
        description: The status of the relationship between the member and the master.
      InvitedAt:
        $ref: '#/definitions/String'
        description: Timestamp at which the invitation was sent
      UpdatedAt:
        $ref: '#/definitions/String'
        description: Member last updated timestamp.
  RemotePortDetails:
    type: object
    properties:
      Port:
        $ref: '#/definitions/Integer'
        description: Port number of the remote connection.
      PortName:
        $ref: '#/definitions/String'
        description: Port name of the remote connection.
  PrivateIpAddresses:
    type: array
    items:
      $ref: '#/definitions/PrivateIpAddressDetails'
  SecurityGroups:
    type: array
    items:
      $ref: '#/definitions/SecurityGroup'
  NetworkInterface:
    type: object
    properties:
      Ipv6Addresses:
        $ref: '#/definitions/Ipv6Addresses'
        description: A list of EC2 instance IPv6 address information.
      NetworkInterfaceId:
        $ref: '#/definitions/String'
        description: The ID of the network interface
      PrivateDnsName:
        $ref: '#/definitions/String'
        description: Private DNS name of the EC2 instance.
      PrivateIpAddress:
        $ref: '#/definitions/String'
        description: Private IP address of the EC2 instance.
      PrivateIpAddresses:
        $ref: '#/definitions/PrivateIpAddresses'
        description: Other private IP address information of the EC2 instance.
      PublicDnsName:
        $ref: '#/definitions/String'
        description: Public DNS name of the EC2 instance.
      PublicIp:
        $ref: '#/definitions/String'
        description: Public IP address of the EC2 instance.
      SecurityGroups:
        $ref: '#/definitions/SecurityGroups'
        description: Security groups associated with the EC2 instance.
      SubnetId:
        $ref: '#/definitions/String'
        description: The subnet ID of the EC2 instance.
      VpcId:
        $ref: '#/definitions/String'
        description: The VPC ID of the EC2 instance.
  Organization:
    type: object
    properties:
      Asn:
        $ref: '#/definitions/String'
        description: Autonomous system number of the internet provider of the remote IP address.
      AsnOrg:
        $ref: '#/definitions/String'
        description: Organization that registered this ASN.
      Isp:
        $ref: '#/definitions/String'
        description: ISP information for the internet provider.
      Org:
        $ref: '#/definitions/String'
        description: Name of the internet provider.
  PortProbeDetails:
    type: array
    items:
      $ref: '#/definitions/PortProbeDetail'
  PortProbeDetail:
    type: object
    properties:
      LocalPortDetails:
        $ref: '#/definitions/LocalPortDetails'
        description: Local port information of the connection.
      RemoteIpDetails:
        $ref: '#/definitions/RemoteIpDetails'
        description: Remote IP information of the connection.
  PrivateIpAddressDetails:
    type: object
    properties:
      PrivateDnsName:
        $ref: '#/definitions/String'
        description: Private DNS name of the EC2 instance.
      PrivateIpAddress:
        $ref: '#/definitions/String'
        description: Private IP address of the EC2 instance.
  ProductCode:
    type: object
    properties:
      Code:
        $ref: '#/definitions/String'
        description: Product code information.
      ProductType:
        $ref: '#/definitions/String'
        description: Product code type.
  SecurityGroup:
    type: object
    properties:
      GroupId:
        $ref: '#/definitions/String'
        description: EC2 instance's security group ID.
      GroupName:
        $ref: '#/definitions/String'
        description: EC2 instance's security group name.
  StartMonitoringMembersRequest:
    type: object
    required:
      - AccountIds
    properties:
      AccountIds:
        $ref: '#/definitions/AccountIds'
        description: A list of account IDs of the GuardDuty member accounts whose findings you want the master account to monitor.
  StopMonitoringMembersRequest:
    type: object
    required:
      - AccountIds
    properties:
      AccountIds:
        $ref: '#/definitions/AccountIds'
        description: A list of account IDs of the GuardDuty member accounts whose findings you want the master account to stop monitoring.
  Tag:
    type: object
    properties:
      Key:
        $ref: '#/definitions/String'
        description: EC2 instance tag key.
      Value:
        $ref: '#/definitions/String'
        description: EC2 instance tag value.
  UnarchiveFindingsRequest:
    type: object
    required:
      - FindingIds
    properties:
      FindingIds:
        $ref: '#/definitions/FindingIds'
        description: IDs of the findings that you want to unarchive.
  UnprocessedAccount:
    type: object
    required:
      - AccountId
      - Result
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: AWS Account ID.
      Result:
        $ref: '#/definitions/String'
        description: A reason why the account hasn't been processed.
  UpdateDetectorRequest:
    type: object
    properties:
      Enable:
        $ref: '#/definitions/Boolean'
        description: Updated boolean value for the detector that specifies whether the detector is enabled.
      FindingPublishingFrequency:
        $ref: '#/definitions/FindingPublishingFrequency'
        description: A enum value that specifies how frequently customer got Finding updates published.
  UpdateFilterRequest:
    type: object
    properties:
      Description:
        $ref: '#/definitions/FilterDescription'
        description: The description of the filter.
      Action:
        $ref: '#/definitions/FilterAction'
        description: Specifies the action that is to be applied to the findings that match the filter.
      Rank:
        $ref: '#/definitions/FilterRank'
        description: Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.
      FindingCriteria:
        $ref: '#/definitions/FindingCriteria'
        description: Represents the criteria to be used in the filter for querying findings.
  UpdateFindingsFeedbackRequest:
    type: object
    required:
      - FindingIds
      - Feedback
    properties:
      FindingIds:
        $ref: '#/definitions/FindingIds'
        description: IDs of the findings that you want to mark as useful or not useful.
      Feedback:
        $ref: '#/definitions/Feedback'
        description: 'Valid values: USEFUL | NOT_USEFUL'
      Comments:
        $ref: '#/definitions/String'
        description: Additional feedback about the GuardDuty findings.
  UpdateIPSetRequest:
    type: object
    properties:
      Name:
        $ref: '#/definitions/Name'
        description: The unique ID that specifies the IPSet that you want to update.
      Location:
        $ref: '#/definitions/Location'
        description: 'The updated URI of the file that contains the IPSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key).'
      Activate:
        $ref: '#/definitions/Boolean'
        description: The updated boolean value that specifies whether the IPSet is active or not.
  UpdateThreatIntelSetRequest:
    type: object
    properties:
      Name:
        $ref: '#/definitions/Name'
        description: The unique ID that specifies the ThreatIntelSet that you want to update.
      Location:
        $ref: '#/definitions/Location'
        description: 'The updated URI of the file that contains the ThreateIntelSet. For example (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key)'
      Activate:
        $ref: '#/definitions/Boolean'
        description: The updated boolean value that specifies whether the ThreateIntelSet is active or not.
