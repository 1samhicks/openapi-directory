swagger: '2.0'
info:
  version: '2018-06-29'
  x-release: v4
  title: AWS RoboMaker
  description: This section provides documentation for the AWS RoboMaker API operations.
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: robomaker
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/robomaker-2018-06-29.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/robomaker/'
host: robomaker.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://robomaker.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The RoboMaker multi-region endpoint
  - url: 'https://robomaker.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The RoboMaker multi-region endpoint
  - url: 'http://robomaker.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The RoboMaker endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://robomaker.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The RoboMaker endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
consumes:
  - application/json
produces:
  - application/json
parameters:
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /batchDescribeSimulationJob:
    post:
      operationId: BatchDescribeSimulationJob
      description: Describes one or more simulation jobs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchDescribeSimulationJobResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - jobs
            properties:
              jobs:
                description: A list of Amazon Resource Names (ARNs) of simulation jobs to describe.
                type: array
                items:
                  $ref: '#/definitions/Arn'
                minItems: 1
                maxItems: 100
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /cancelDeploymentJob:
    post:
      operationId: CancelDeploymentJob
      description: Cancels the specified deployment job.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelDeploymentJobResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - job
            properties:
              job:
                description: The deployment job ARN to cancel.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /cancelSimulationJob:
    post:
      operationId: CancelSimulationJob
      description: Cancels the specified simulation job.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelSimulationJobResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - job
            properties:
              job:
                description: The simulation job ARN to cancel.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /createDeploymentJob:
    post:
      operationId: CreateDeploymentJob
      description: '<p>Deploys a specific version of a robot application to robots in a fleet.</p> <p>The robot application must have a numbered <code>applicationVersion</code> for consistency reasons. To create a new version, use <code>CreateRobotApplicationVersion</code> or see <a href="https://docs.aws.amazon.com/robomaker/latest/dg/create-robot-application-version.html">Creating a Robot Application Version</a>. </p> <note> <p>After 90 days, deployment jobs expire and will be deleted. They will no longer be accessible. </p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDeploymentJobResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: ConcurrentDeploymentException
          schema:
            $ref: '#/definitions/ConcurrentDeploymentException'
        '486':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - clientRequestToken
              - fleet
              - deploymentApplicationConfigs
            properties:
              deploymentConfig:
                description: Information about a deployment configuration.
                type: object
                properties:
                  concurrentDeploymentPercentage:
                    $ref: '#/definitions/Percentage'
                    description: The percentage of robots receiving the deployment at the same time.
                  failureThresholdPercentage:
                    $ref: '#/definitions/Percentage'
                    description: The percentage of deployments that need to fail before stopping deployment.
              clientRequestToken:
                description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
                type: string
                pattern: '[a-zA-Z0-9_\-=]*'
                minLength: 1
                maxLength: 64
              fleet:
                description: The Amazon Resource Name (ARN) of the fleet to deploy.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
              deploymentApplicationConfigs:
                description: The deployment application configuration.
                type: array
                items:
                  $ref: '#/definitions/DeploymentApplicationConfig'
                minItems: 1
                maxItems: 1
              tags:
                description: A map that contains tag keys and tag values that are attached to the deployment job.
                type: object
                minProperties: 0
                maxProperties: 50
                additionalProperties:
                  $ref: '#/definitions/TagValue'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /createFleet:
    post:
      operationId: CreateFleet
      description: 'Creates a fleet, a logical group of robots running the same robot application.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateFleetResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - name
            properties:
              name:
                description: The name of the fleet.
                type: string
                pattern: '[a-zA-Z0-9_\-]*'
                minLength: 1
                maxLength: 255
              tags:
                description: A map that contains tag keys and tag values that are attached to the fleet.
                type: object
                minProperties: 0
                maxProperties: 50
                additionalProperties:
                  $ref: '#/definitions/TagValue'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /createRobot:
    post:
      operationId: CreateRobot
      description: Creates a robot.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateRobotResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - name
              - architecture
              - greengrassGroupId
            properties:
              name:
                description: The name for the robot.
                type: string
                pattern: '[a-zA-Z0-9_\-]*'
                minLength: 1
                maxLength: 255
              architecture:
                description: The target architecture of the robot.
                type: string
                enum:
                  - X86_64
                  - ARM64
                  - ARMHF
              greengrassGroupId:
                description: The Greengrass group id.
                type: string
                minLength: 1
                maxLength: 1224
              tags:
                description: A map that contains tag keys and tag values that are attached to the robot.
                type: object
                minProperties: 0
                maxProperties: 50
                additionalProperties:
                  $ref: '#/definitions/TagValue'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /createRobotApplication:
    post:
      operationId: CreateRobotApplication
      description: 'Creates a robot application. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateRobotApplicationResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '485':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - name
              - sources
              - robotSoftwareSuite
            properties:
              name:
                description: The name of the robot application.
                type: string
                pattern: '[a-zA-Z0-9_\-]*'
                minLength: 1
                maxLength: 255
              sources:
                description: The sources of the robot application.
                type: array
                items:
                  $ref: '#/definitions/SourceConfig'
              robotSoftwareSuite:
                description: Information about a robot software suite.
                type: object
                properties:
                  name:
                    $ref: '#/definitions/RobotSoftwareSuiteType'
                    description: The name of the robot software suite.
                  version:
                    $ref: '#/definitions/RobotSoftwareSuiteVersionType'
                    description: The version of the robot software suite.
              tags:
                description: A map that contains tag keys and tag values that are attached to the robot application.
                type: object
                minProperties: 0
                maxProperties: 50
                additionalProperties:
                  $ref: '#/definitions/TagValue'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /createRobotApplicationVersion:
    post:
      operationId: CreateRobotApplicationVersion
      description: Creates a version of a robot application.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateRobotApplicationVersionResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - application
            properties:
              application:
                description: The application information for the robot application.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
              currentRevisionId:
                description: 'The current revision id for the robot application. If you provide a value and it matches the latest revision ID, a new version will be created.'
                type: string
                pattern: '[a-zA-Z0-9_.\-]*'
                minLength: 1
                maxLength: 40
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /createSimulationApplication:
    post:
      operationId: CreateSimulationApplication
      description: Creates a simulation application.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSimulationApplicationResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '485':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - name
              - sources
              - simulationSoftwareSuite
              - robotSoftwareSuite
              - renderingEngine
            properties:
              name:
                description: The name of the simulation application.
                type: string
                pattern: '[a-zA-Z0-9_\-]*'
                minLength: 1
                maxLength: 255
              sources:
                description: The sources of the simulation application.
                type: array
                items:
                  $ref: '#/definitions/SourceConfig'
              simulationSoftwareSuite:
                description: Information about a simulation software suite.
                type: object
                properties:
                  name:
                    $ref: '#/definitions/SimulationSoftwareSuiteType'
                    description: The name of the simulation software suite.
                  version:
                    $ref: '#/definitions/SimulationSoftwareSuiteVersionType'
                    description: The version of the simulation software suite.
              robotSoftwareSuite:
                description: Information about a robot software suite.
                type: object
                properties:
                  name:
                    $ref: '#/definitions/RobotSoftwareSuiteType'
                    description: The name of the robot software suite.
                  version:
                    $ref: '#/definitions/RobotSoftwareSuiteVersionType'
                    description: The version of the robot software suite.
              renderingEngine:
                description: Information about a rendering engine.
                type: object
                properties:
                  name:
                    $ref: '#/definitions/RenderingEngineType'
                    description: The name of the rendering engine.
                  version:
                    $ref: '#/definitions/RenderingEngineVersionType'
                    description: The version of the rendering engine.
              tags:
                description: A map that contains tag keys and tag values that are attached to the simulation application.
                type: object
                minProperties: 0
                maxProperties: 50
                additionalProperties:
                  $ref: '#/definitions/TagValue'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /createSimulationApplicationVersion:
    post:
      operationId: CreateSimulationApplicationVersion
      description: Creates a simulation application with a specific revision id.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSimulationApplicationVersionResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - application
            properties:
              application:
                description: The application information for the simulation application.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
              currentRevisionId:
                description: 'The current revision id for the simulation application. If you provide a value and it matches the latest revision ID, a new version will be created.'
                type: string
                pattern: '[a-zA-Z0-9_.\-]*'
                minLength: 1
                maxLength: 40
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /createSimulationJob:
    post:
      operationId: CreateSimulationJob
      description: '<p>Creates a simulation job.</p> <note> <p>After 90 days, simulation jobs expire and will be deleted. They will no longer be accessible. </p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSimulationJobResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - maxJobDurationInSeconds
              - iamRole
              - vpcConfig
            properties:
              clientRequestToken:
                description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
                type: string
                pattern: '[a-zA-Z0-9_\-=]*'
                minLength: 1
                maxLength: 64
              outputLocation:
                description: The output location.
                type: object
                properties:
                  s3Bucket:
                    $ref: '#/definitions/S3Bucket'
                    description: The S3 bucket for output.
                  s3Prefix:
                    $ref: '#/definitions/S3Key'
                    description: The S3 folder in the <code>s3Bucket</code> where output files will be placed.
              maxJobDurationInSeconds:
                description: 'The maximum simulation job duration in seconds (up to 14 days or 1,209,600 seconds. When <code>maxJobDurationInSeconds</code> is reached, the simulation job will status will transition to <code>Completed</code>.'
                type: integer
              iamRole:
                description: 'The IAM role name that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job. '
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 255
              failureBehavior:
                description: <p>The failure behavior the simulation job.</p> <dl> <dt>Continue</dt> <dd> <p>Restart the simulation job in the same host instance.</p> </dd> <dt>Fail</dt> <dd> <p>Stop the simulation job and terminate the instance.</p> </dd> </dl>
                type: string
                enum:
                  - Fail
                  - Continue
              robotApplications:
                description: The robot application to use in the simulation job.
                type: array
                items:
                  $ref: '#/definitions/RobotApplicationConfig'
                minItems: 1
                maxItems: 1
              simulationApplications:
                description: The simulation application to use in the simulation job.
                type: array
                items:
                  $ref: '#/definitions/SimulationApplicationConfig'
                minItems: 1
                maxItems: 1
              tags:
                description: A map that contains tag keys and tag values that are attached to the simulation job.
                type: object
                minProperties: 0
                maxProperties: 50
                additionalProperties:
                  $ref: '#/definitions/TagValue'
              vpcConfig:
                description: 'If your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and two subnet IDs.'
                type: object
                properties:
                  subnets:
                    $ref: '#/definitions/Subnets'
                    description: A list of one or more subnet IDs in your VPC.
                  securityGroups:
                    $ref: '#/definitions/SecurityGroups'
                    description: A list of one or more security groups IDs in your VPC.
                  assignPublicIp:
                    $ref: '#/definitions/Boolean'
                    description: A boolean indicating whether to assign a public IP address.
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /deleteFleet:
    post:
      operationId: DeleteFleet
      description: Deletes a fleet.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteFleetResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - fleet
            properties:
              fleet:
                description: The Amazon Resource Name (ARN) of the fleet.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /deleteRobot:
    post:
      operationId: DeleteRobot
      description: Deletes a robot.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteRobotResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - robot
            properties:
              robot:
                description: The Amazon Resource Name (ARN) of the robot.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /deleteRobotApplication:
    post:
      operationId: DeleteRobotApplication
      description: Deletes a robot application.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteRobotApplicationResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - application
            properties:
              application:
                description: The Amazon Resource Name (ARN) of the the robot application.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
              applicationVersion:
                description: The version of the robot application to delete.
                type: string
                pattern: '(\$LATEST)|[0-9]*'
                minLength: 1
                maxLength: 255
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /deleteSimulationApplication:
    post:
      operationId: DeleteSimulationApplication
      description: Deletes a simulation application.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteSimulationApplicationResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - application
            properties:
              application:
                description: The application information for the simulation application to delete.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
              applicationVersion:
                description: The version of the simulation application to delete.
                type: string
                pattern: '(\$LATEST)|[0-9]*'
                minLength: 1
                maxLength: 255
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /deregisterRobot:
    post:
      operationId: DeregisterRobot
      description: Deregisters a robot.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterRobotResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - fleet
              - robot
            properties:
              fleet:
                description: The Amazon Resource Name (ARN) of the fleet.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
              robot:
                description: The Amazon Resource Name (ARN) of the robot.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /describeDeploymentJob:
    post:
      operationId: DescribeDeploymentJob
      description: 'Describes a deployment job. [Does it work regardless of deployment status, e.g. Failed?]'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDeploymentJobResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - job
            properties:
              job:
                description: The Amazon Resource Name (ARN) of the deployment job.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /describeFleet:
    post:
      operationId: DescribeFleet
      description: Describes a fleet.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeFleetResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - fleet
            properties:
              fleet:
                description: The Amazon Resource Name (ARN) of the fleet.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /describeRobot:
    post:
      operationId: DescribeRobot
      description: Describes a robot.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRobotResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - robot
            properties:
              robot:
                description: The Amazon Resource Name (ARN) of the robot to be described.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /describeRobotApplication:
    post:
      operationId: DescribeRobotApplication
      description: Describes a robot application.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRobotApplicationResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - application
            properties:
              application:
                description: The Amazon Resource Name (ARN) of the robot application.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
              applicationVersion:
                description: The version of the robot application to describe.
                type: string
                pattern: '(\$LATEST)|[0-9]*'
                minLength: 1
                maxLength: 255
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /describeSimulationApplication:
    post:
      operationId: DescribeSimulationApplication
      description: Describes a simulation application.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSimulationApplicationResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - application
            properties:
              application:
                description: The application information for the simulation application.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
              applicationVersion:
                description: The version of the simulation application to describe.
                type: string
                pattern: '(\$LATEST)|[0-9]*'
                minLength: 1
                maxLength: 255
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /describeSimulationJob:
    post:
      operationId: DescribeSimulationJob
      description: Describes a simulation job.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSimulationJobResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - job
            properties:
              job:
                description: The Amazon Resource Name (ARN) of the simulation job to be described.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /listDeploymentJobs:
    post:
      operationId: ListDeploymentJobs
      description: <p>Returns a list of deployment jobs for a fleet. You can optionally provide filters to retrieve specific deployment jobs. </p> <note> <p> </p> </note>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDeploymentJobsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              filters:
                description: '<p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>fleetName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>InProgress</code> or the status <code>Pending</code>.</p>'
                type: array
                items:
                  $ref: '#/definitions/Filter'
                minItems: 1
                maxItems: 1
              nextToken:
                description: <p>The <code>nextToken</code> value returned from a previous paginated <code>ListDeploymentJobs</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
                type: string
                pattern: '[a-zA-Z0-9_.\-\/+=]*'
                minLength: 1
                maxLength: 2048
              maxResults:
                description: 'The maximum number of deployment job results returned by <code>ListDeploymentJobs</code> in paginated output. When this parameter is used, <code>ListDeploymentJobs</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListDeploymentJobs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListDeploymentJobs</code> returns up to 100 results and a <code>nextToken</code> value if applicable. '
                type: integer
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /listFleets:
    post:
      operationId: ListFleets
      description: 'Returns a list of fleets. You can optionally provide filters to retrieve specific fleets. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFleetsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              nextToken:
                description: <p>The <code>nextToken</code> value returned from a previous paginated <code>ListFleets</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
                type: string
                pattern: '[a-zA-Z0-9_.\-\/+=]*'
                minLength: 1
                maxLength: 2048
              maxResults:
                description: 'The maximum number of deployment job results returned by <code>ListFleets</code> in paginated output. When this parameter is used, <code>ListFleets</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListFleets</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListFleets</code> returns up to 100 results and a <code>nextToken</code> value if applicable. '
                type: integer
              filters:
                description: '<p>Optional filters to limit results.</p> <p>The filter name <code>name</code> is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.</p>'
                type: array
                items:
                  $ref: '#/definitions/Filter'
                minItems: 1
                maxItems: 1
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /listRobotApplications:
    post:
      operationId: ListRobotApplications
      description: Returns a list of robot application. You can optionally provide filters to retrieve specific robot applications.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRobotApplicationsResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              versionQualifier:
                description: The version qualifier of the robot application.
                type: string
                pattern: ALL
              nextToken:
                description: <p>The <code>nextToken</code> value returned from a previous paginated <code>ListRobotApplications</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
                type: string
                pattern: '[a-zA-Z0-9_.\-\/+=]*'
                minLength: 1
                maxLength: 2048
              maxResults:
                description: 'The maximum number of deployment job results returned by <code>ListRobotApplications</code> in paginated output. When this parameter is used, <code>ListRobotApplications</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListRobotApplications</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListRobotApplications</code> returns up to 100 results and a <code>nextToken</code> value if applicable. '
                type: integer
              filters:
                description: '<p>Optional filters to limit results.</p> <p>The filter name <code>name</code> is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.</p>'
                type: array
                items:
                  $ref: '#/definitions/Filter'
                minItems: 1
                maxItems: 1
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /listRobots:
    post:
      operationId: ListRobots
      description: Returns a list of robots. You can optionally provide filters to retrieve specific robots.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRobotsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              nextToken:
                description: <p>The <code>nextToken</code> value returned from a previous paginated <code>ListRobots</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
                type: string
                pattern: '[a-zA-Z0-9_.\-\/+=]*'
                minLength: 1
                maxLength: 2048
              maxResults:
                description: 'The maximum number of deployment job results returned by <code>ListRobots</code> in paginated output. When this parameter is used, <code>ListRobots</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListRobots</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListRobots</code> returns up to 100 results and a <code>nextToken</code> value if applicable. '
                type: integer
              filters:
                description: '<p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>fleetName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>Registered</code> or the status <code>Available</code>.</p>'
                type: array
                items:
                  $ref: '#/definitions/Filter'
                minItems: 1
                maxItems: 1
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /listSimulationApplications:
    post:
      operationId: ListSimulationApplications
      description: 'Returns a list of simulation applications. You can optionally provide filters to retrieve specific simulation applications. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSimulationApplicationsResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              versionQualifier:
                description: The version qualifier of the simulation application.
                type: string
                pattern: ALL
              nextToken:
                description: <p>The <code>nextToken</code> value returned from a previous paginated <code>ListSimulationApplications</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
                type: string
                pattern: '[a-zA-Z0-9_.\-\/+=]*'
                minLength: 1
                maxLength: 2048
              maxResults:
                description: 'The maximum number of deployment job results returned by <code>ListSimulationApplications</code> in paginated output. When this parameter is used, <code>ListSimulationApplications</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListSimulationApplications</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListSimulationApplications</code> returns up to 100 results and a <code>nextToken</code> value if applicable. '
                type: integer
              filters:
                description: '<p>Optional list of filters to limit results.</p> <p>The filter name <code>name</code> is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.</p>'
                type: array
                items:
                  $ref: '#/definitions/Filter'
                minItems: 1
                maxItems: 1
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /listSimulationJobs:
    post:
      operationId: ListSimulationJobs
      description: 'Returns a list of simulation jobs. You can optionally provide filters to retrieve specific simulation jobs. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSimulationJobsResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              nextToken:
                description: <p>The <code>nextToken</code> value returned from a previous paginated <code>ListSimulationJobs</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
                type: string
                pattern: '[a-zA-Z0-9_.\-\/+=]*'
                minLength: 1
                maxLength: 2048
              maxResults:
                description: 'The maximum number of deployment job results returned by <code>ListSimulationJobs</code> in paginated output. When this parameter is used, <code>ListSimulationJobs</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListSimulationJobs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListSimulationJobs</code> returns up to 100 results and a <code>nextToken</code> value if applicable. '
                type: integer
              filters:
                description: '<p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>simulationApplicationName</code> and <code>robotApplicationName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>Preparing</code> or the status <code>Running</code>.</p>'
                type: array
                items:
                  $ref: '#/definitions/Filter'
                minItems: 1
                maxItems: 1
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: Lists all tags on a AWS RoboMaker resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The AWS RoboMaker Amazon Resource Name (ARN) with tags to be listed.
          type: string
          pattern: 'arn:.*'
          minLength: 1
          maxLength: 1224
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: '<p>Adds or edits tags for a AWS RoboMaker resource.</p> <p>Each tag consists of a tag key and a tag value. Tag keys and tag values are both required, but tag values can be empty strings. </p> <p>For information about the rules that apply to tag keys and tag values, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html">User-Defined Tag Restrictions</a> in the <i>AWS Billing and Cost Management User Guide</i>. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the AWS RoboMaker resource you are tagging.
          type: string
          pattern: 'arn:.*'
          minLength: 1
          maxLength: 1224
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - tags
            properties:
              tags:
                description: A map that contains tag keys and tag values that are attached to the resource.
                type: object
                minProperties: 0
                maxProperties: 50
                additionalProperties:
                  $ref: '#/definitions/TagValue'
  /registerRobot:
    post:
      operationId: RegisterRobot
      description: Registers a robot with a fleet.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterRobotResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - fleet
              - robot
            properties:
              fleet:
                description: The Amazon Resource Name (ARN) of the fleet.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
              robot:
                description: The Amazon Resource Name (ARN) of the robot.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /restartSimulationJob:
    post:
      operationId: RestartSimulationJob
      description: Restarts a running simulation job.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RestartSimulationJobResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - job
            properties:
              job:
                description: The Amazon Resource Name (ARN) of the simulation job.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /syncDeploymentJob:
    post:
      operationId: SyncDeploymentJob
      description: Syncrhonizes robots in a fleet to the latest deployment. This is helpful if robots were added after a deployment.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SyncDeploymentJobResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: ConcurrentDeploymentException
          schema:
            $ref: '#/definitions/ConcurrentDeploymentException'
        '486':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - clientRequestToken
              - fleet
            properties:
              clientRequestToken:
                description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
                type: string
                pattern: '[a-zA-Z0-9_\-=]*'
                minLength: 1
                maxLength: 64
              fleet:
                description: The target fleet for the synchronization.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: '<p>Removes the specified tags from the specified AWS RoboMaker resource.</p> <p>To remove a tag, specify the tag key. To change the tag value of an existing tag key, use <a href="https://docs.aws.amazon.com/robomaker/latest/dg/API_TagResource.html"> <code>TagResource</code> </a>. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the AWS RoboMaker resource you are removing tags.
          type: string
          pattern: 'arn:.*'
          minLength: 1
          maxLength: 1224
        - name: tagKeys
          in: query
          required: true
          description: A map that contains tag keys and tag values that will be unattached from the resource.
          type: array
          items:
            type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /updateRobotApplication:
    post:
      operationId: UpdateRobotApplication
      description: Updates a robot application.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateRobotApplicationResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - application
              - sources
              - robotSoftwareSuite
            properties:
              application:
                description: The application information for the robot application.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
              sources:
                description: The sources of the robot application.
                type: array
                items:
                  $ref: '#/definitions/SourceConfig'
              robotSoftwareSuite:
                description: Information about a robot software suite.
                type: object
                properties:
                  name:
                    $ref: '#/definitions/RobotSoftwareSuiteType'
                    description: The name of the robot software suite.
                  version:
                    $ref: '#/definitions/RobotSoftwareSuiteVersionType'
                    description: The version of the robot software suite.
              currentRevisionId:
                description: The revision id for the robot application.
                type: string
                pattern: '[a-zA-Z0-9_.\-]*'
                minLength: 1
                maxLength: 40
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /updateSimulationApplication:
    post:
      operationId: UpdateSimulationApplication
      description: Updates a simulation application.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateSimulationApplicationResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - application
              - sources
              - simulationSoftwareSuite
              - robotSoftwareSuite
              - renderingEngine
            properties:
              application:
                description: The application information for the simulation application.
                type: string
                pattern: 'arn:.*'
                minLength: 1
                maxLength: 1224
              sources:
                description: The sources of the simulation application.
                type: array
                items:
                  $ref: '#/definitions/SourceConfig'
              simulationSoftwareSuite:
                description: Information about a simulation software suite.
                type: object
                properties:
                  name:
                    $ref: '#/definitions/SimulationSoftwareSuiteType'
                    description: The name of the simulation software suite.
                  version:
                    $ref: '#/definitions/SimulationSoftwareSuiteVersionType'
                    description: The version of the simulation software suite.
              robotSoftwareSuite:
                description: Information about a robot software suite.
                type: object
                properties:
                  name:
                    $ref: '#/definitions/RobotSoftwareSuiteType'
                    description: The name of the robot software suite.
                  version:
                    $ref: '#/definitions/RobotSoftwareSuiteVersionType'
                    description: The version of the robot software suite.
              renderingEngine:
                description: Information about a rendering engine.
                type: object
                properties:
                  name:
                    $ref: '#/definitions/RenderingEngineType'
                    description: The name of the rendering engine.
                  version:
                    $ref: '#/definitions/RenderingEngineVersionType'
                    description: The version of the rendering engine.
              currentRevisionId:
                description: The revision id for the robot application.
                type: string
                pattern: '[a-zA-Z0-9_.\-]*'
                minLength: 1
                maxLength: 40
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  BatchDescribeSimulationJobResponse:
    type: object
    properties:
      jobs:
        $ref: '#/definitions/SimulationJobs'
        description: A list of simulation jobs.
      unprocessedJobs:
        $ref: '#/definitions/Arns'
        description: A list of unprocessed simulation job Amazon Resource Names (ARNs).
  Arn:
    type: string
    pattern: 'arn:.*'
    minLength: 1
    maxLength: 1224
  ResourceNotFoundException: {}
  InvalidParameterException: {}
  InternalServerException: {}
  ThrottlingException: {}
  CancelDeploymentJobResponse:
    type: object
    properties: {}
  CancelSimulationJobResponse:
    type: object
    properties: {}
  CreateDeploymentJobResponse:
    type: object
    properties:
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the deployment job.
      fleet:
        $ref: '#/definitions/Arn'
        description: The target fleet for the deployment job.
      status:
        $ref: '#/definitions/DeploymentStatus'
        description: The status of the deployment job.
      deploymentApplicationConfigs:
        $ref: '#/definitions/DeploymentApplicationConfigs'
        description: The deployment application configuration.
      failureReason:
        $ref: '#/definitions/GenericString'
        description: The failure reason of the deployment job if it failed.
      failureCode:
        $ref: '#/definitions/DeploymentJobErrorCode'
        description: '<p>The failure code of the simulation job if it failed:</p> <dl> <dt>BadPermissionError</dt> <dd> <p>AWS Greengrass requires a service-level role permission to access other services. The role must include the <a href="https://console.aws.amazon.com/iam/home?#/policies/arn:aws:iam::aws:policy/service-role/AWSGreengrassResourceAccessRolePolicy$jsonEditor"> <code>AWSGreengrassResourceAccessRolePolicy</code> managed policy</a>. </p> </dd> <dt>ExtractingBundleFailure</dt> <dd> <p>The robot application could not be extracted from the bundle.</p> </dd> <dt>FailureThresholdBreached</dt> <dd> <p>The percentage of robots that could not be updated exceeded the percentage set for the deployment.</p> </dd> <dt>GreengrassDeploymentFailed</dt> <dd> <p>The robot application could not be deployed to the robot.</p> </dd> <dt>GreengrassGroupVersionDoesNotExist</dt> <dd> <p>The AWS Greengrass group or version associated with a robot is missing.</p> </dd> <dt>InternalServerError</dt> <dd> <p>An internal error has occurred. Retry your request, but if the problem persists, contact us with details.</p> </dd> <dt>MissingRobotApplicationArchitecture</dt> <dd> <p>The robot application does not have a source that matches the architecture of the robot.</p> </dd> <dt>MissingRobotDeploymentResource</dt> <dd> <p>One or more of the resources specified for the robot application are missing. For example, does the robot application have the correct launch package and launch file?</p> </dd> <dt>PostLaunchFileFailure</dt> <dd> <p>The post-launch script failed.</p> </dd> <dt>PreLaunchFileFailure</dt> <dd> <p>The pre-launch script failed.</p> </dd> <dt>ResourceNotFound</dt> <dd> <p>One or more deployment resources are missing. For example, do robot application source bundles still exist? </p> </dd> <dt>RobotDeploymentNoResponse</dt> <dd> <p>There is no response from the robot. It might not be powered on or connected to the internet.</p> </dd> </dl>'
      createdAt:
        $ref: '#/definitions/CreatedAt'
        description: 'The time, in milliseconds since the epoch, when the fleet was created.'
      deploymentConfig:
        $ref: '#/definitions/DeploymentConfig'
        description: The deployment configuration.
      tags:
        $ref: '#/definitions/TagMap'
        description: The list of all tags added to the deployment job.
  Percentage:
    type: integer
    minimum: 1
    maximum: 100
  DeploymentApplicationConfig:
    type: object
    required:
      - application
      - applicationVersion
      - launchConfig
    properties:
      application:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the robot application.
      applicationVersion:
        $ref: '#/definitions/DeploymentVersion'
        description: The version of the application.
      launchConfig:
        $ref: '#/definitions/DeploymentLaunchConfig'
        description: The launch configuration.
    description: Information about a deployment application configuration.
  TagValue:
    type: string
    pattern: '[a-zA-Z0-9 _.\-\/+=:]*'
    minLength: 0
    maxLength: 256
  LimitExceededException: {}
  ConcurrentDeploymentException: {}
  IdempotentParameterMismatchException: {}
  CreateFleetResponse:
    type: object
    properties:
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the fleet.
      name:
        $ref: '#/definitions/Name'
        description: The name of the fleet.
      createdAt:
        $ref: '#/definitions/CreatedAt'
        description: 'The time, in milliseconds since the epoch, when the fleet was created.'
      tags:
        $ref: '#/definitions/TagMap'
        description: The list of all tags added to the fleet.
  CreateRobotResponse:
    type: object
    properties:
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the robot.
      name:
        $ref: '#/definitions/Name'
        description: The name of the robot.
      createdAt:
        $ref: '#/definitions/CreatedAt'
        description: 'The time, in milliseconds since the epoch, when the robot was created.'
      greengrassGroupId:
        $ref: '#/definitions/Id'
        description: The Amazon Resource Name (ARN) of the Greengrass group associated with the robot.
      architecture:
        $ref: '#/definitions/Architecture'
        description: The target architecture of the robot.
      tags:
        $ref: '#/definitions/TagMap'
        description: The list of all tags added to the robot.
  ResourceAlreadyExistsException: {}
  CreateRobotApplicationResponse:
    type: object
    properties:
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the robot application.
      name:
        $ref: '#/definitions/Name'
        description: The name of the robot application.
      version:
        $ref: '#/definitions/Version'
        description: The version of the robot application.
      sources:
        $ref: '#/definitions/Sources'
        description: The sources of the robot application.
      robotSoftwareSuite:
        $ref: '#/definitions/RobotSoftwareSuite'
        description: The robot software suite used by the robot application.
      lastUpdatedAt:
        $ref: '#/definitions/LastUpdatedAt'
        description: 'The time, in milliseconds since the epoch, when the robot application was last updated.'
      revisionId:
        $ref: '#/definitions/RevisionId'
        description: The revision id of the robot application.
      tags:
        $ref: '#/definitions/TagMap'
        description: The list of all tags added to the robot application.
  SourceConfig:
    type: object
    properties:
      s3Bucket:
        $ref: '#/definitions/S3Bucket'
        description: The Amazon S3 bucket name.
      s3Key:
        $ref: '#/definitions/S3Key'
        description: The s3 object key.
      architecture:
        $ref: '#/definitions/Architecture'
        description: The target processor architecture for the application.
    description: Information about a source configuration.
  RobotSoftwareSuiteType:
    type: string
    enum:
      - ROS
  RobotSoftwareSuiteVersionType:
    type: string
    enum:
      - Kinetic
  CreateRobotApplicationVersionResponse:
    type: object
    properties:
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the robot application.
      name:
        $ref: '#/definitions/Name'
        description: The name of the robot application.
      version:
        $ref: '#/definitions/Version'
        description: The version of the robot application.
      sources:
        $ref: '#/definitions/Sources'
        description: The sources of the robot application.
      robotSoftwareSuite:
        $ref: '#/definitions/RobotSoftwareSuite'
        description: The robot software suite used by the robot application.
      lastUpdatedAt:
        $ref: '#/definitions/LastUpdatedAt'
        description: 'The time, in milliseconds since the epoch, when the robot application was last updated.'
      revisionId:
        $ref: '#/definitions/RevisionId'
        description: The revision id of the robot application.
  CreateSimulationApplicationResponse:
    type: object
    properties:
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the simulation application.
      name:
        $ref: '#/definitions/Name'
        description: The name of the simulation application.
      version:
        $ref: '#/definitions/Version'
        description: The version of the simulation application.
      sources:
        $ref: '#/definitions/Sources'
        description: The sources of the simulation application.
      simulationSoftwareSuite:
        $ref: '#/definitions/SimulationSoftwareSuite'
        description: The simulation software suite used by the simulation application.
      robotSoftwareSuite:
        $ref: '#/definitions/RobotSoftwareSuite'
        description: Information about the robot software suite.
      renderingEngine:
        $ref: '#/definitions/RenderingEngine'
        description: The rendering engine for the simulation application.
      lastUpdatedAt:
        $ref: '#/definitions/LastUpdatedAt'
        description: 'The time, in milliseconds since the epoch, when the simulation application was last updated.'
      revisionId:
        $ref: '#/definitions/RevisionId'
        description: The revision id of the simulation application.
      tags:
        $ref: '#/definitions/TagMap'
        description: The list of all tags added to the simulation application.
  SimulationSoftwareSuiteType:
    type: string
    enum:
      - Gazebo
  SimulationSoftwareSuiteVersionType:
    type: string
    pattern: 7|9
  RenderingEngineType:
    type: string
    enum:
      - OGRE
  RenderingEngineVersionType:
    type: string
    pattern: 1.x
  CreateSimulationApplicationVersionResponse:
    type: object
    properties:
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the simulation application.
      name:
        $ref: '#/definitions/Name'
        description: The name of the simulation application.
      version:
        $ref: '#/definitions/Version'
        description: The version of the simulation application.
      sources:
        $ref: '#/definitions/Sources'
        description: The sources of the simulation application.
      simulationSoftwareSuite:
        $ref: '#/definitions/SimulationSoftwareSuite'
        description: The simulation software suite used by the simulation application.
      robotSoftwareSuite:
        $ref: '#/definitions/RobotSoftwareSuite'
        description: Information about the robot software suite.
      renderingEngine:
        $ref: '#/definitions/RenderingEngine'
        description: The rendering engine for the simulation application.
      lastUpdatedAt:
        $ref: '#/definitions/LastUpdatedAt'
        description: 'The time, in milliseconds since the epoch, when the simulation application was last updated.'
      revisionId:
        $ref: '#/definitions/RevisionId'
        description: The revision ID of the simulation application.
  CreateSimulationJobResponse:
    type: object
    properties:
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the simulation job.
      status:
        $ref: '#/definitions/SimulationJobStatus'
        description: The status of the simulation job.
      lastStartedAt:
        $ref: '#/definitions/LastStartedAt'
        description: 'The time, in milliseconds since the epoch, when the simulation job was last started.'
      lastUpdatedAt:
        $ref: '#/definitions/LastUpdatedAt'
        description: 'The time, in milliseconds since the epoch, when the simulation job was last updated.'
      failureBehavior:
        $ref: '#/definitions/FailureBehavior'
        description: the failure behavior for the simulation job.
      failureCode:
        $ref: '#/definitions/SimulationJobErrorCode'
        description: '<p>The failure code of the simulation job if it failed:</p> <dl> <dt>InternalServiceError</dt> <dd> <p>Internal service error.</p> </dd> <dt>RobotApplicationCrash</dt> <dd> <p>Robot application exited abnormally.</p> </dd> <dt>SimulationApplicationCrash</dt> <dd> <p> Simulation application exited abnormally.</p> </dd> <dt>BadPermissionsRobotApplication</dt> <dd> <p>Robot application bundle could not be downloaded.</p> </dd> <dt>BadPermissionsSimulationApplication</dt> <dd> <p>Simulation application bundle could not be downloaded.</p> </dd> <dt>BadPermissionsS3Output</dt> <dd> <p>Unable to publish outputs to customer-provided S3 bucket.</p> </dd> <dt>BadPermissionsCloudwatchLogs</dt> <dd> <p>Unable to publish logs to customer-provided CloudWatch Logs resource.</p> </dd> <dt>SubnetIpLimitExceeded</dt> <dd> <p>Subnet IP limit exceeded.</p> </dd> <dt>ENILimitExceeded</dt> <dd> <p>ENI limit exceeded.</p> </dd> <dt>BadPermissionsUserCredentials</dt> <dd> <p>Unable to use the Role provided.</p> </dd> <dt>InvalidBundleRobotApplication</dt> <dd> <p>Robot bundle cannot be extracted (invalid format, bundling error, or other issue).</p> </dd> <dt>InvalidBundleSimulationApplication</dt> <dd> <p>Simulation bundle cannot be extracted (invalid format, bundling error, or other issue).</p> </dd> <dt>RobotApplicationVersionMismatchedEtag</dt> <dd> <p>Etag for RobotApplication does not match value during version creation.</p> </dd> <dt>SimulationApplicationVersionMismatchedEtag</dt> <dd> <p>Etag for SimulationApplication does not match value during version creation.</p> </dd> </dl>'
      clientRequestToken:
        $ref: '#/definitions/ClientRequestToken'
        description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
      outputLocation:
        $ref: '#/definitions/OutputLocation'
        description: Simulation job output files location.
      maxJobDurationInSeconds:
        $ref: '#/definitions/JobDuration'
        description: 'The maximum simulation job duration in seconds. '
      simulationTimeMillis:
        $ref: '#/definitions/SimulationTimeMillis'
        description: The simulation job execution duration in milliseconds.
      iamRole:
        $ref: '#/definitions/IamRole'
        description: The IAM role that allows the simulation job to call the AWS APIs that are specified in its associated policies on your behalf.
      robotApplications:
        $ref: '#/definitions/RobotApplicationConfigs'
        description: The robot application used by the simulation job.
      simulationApplications:
        $ref: '#/definitions/SimulationApplicationConfigs'
        description: The simulation application used by the simulation job.
      tags:
        $ref: '#/definitions/TagMap'
        description: The list of all tags added to the simulation job.
      vpcConfig:
        $ref: '#/definitions/VPCConfigResponse'
        description: Information about the vpc configuration.
  S3Bucket:
    type: string
    pattern: '[a-z0-9][a-z0-9\-]*[a-z0-9]'
    minLength: 3
    maxLength: 63
  S3Key:
    type: string
    pattern: .*
    minLength: 1
    maxLength: 1024
  RobotApplicationConfig:
    type: object
    required:
      - application
      - launchConfig
    properties:
      application:
        $ref: '#/definitions/Arn'
        description: The application information for the robot application.
      applicationVersion:
        $ref: '#/definitions/Version'
        description: The version of the robot application.
      launchConfig:
        $ref: '#/definitions/LaunchConfig'
        description: The launch configuration for the robot application.
    description: Application configuration information for a robot.
  SimulationApplicationConfig:
    type: object
    required:
      - application
      - launchConfig
    properties:
      application:
        $ref: '#/definitions/Arn'
        description: The application information for the simulation application.
      applicationVersion:
        $ref: '#/definitions/Version'
        description: The version of the simulation application.
      launchConfig:
        $ref: '#/definitions/LaunchConfig'
        description: The launch configuration for the simulation application.
    description: Information about a simulation application configuration.
  Subnets:
    type: array
    items:
      $ref: '#/definitions/GenericString'
    minItems: 1
    maxItems: 16
  SecurityGroups:
    type: array
    items:
      $ref: '#/definitions/GenericString'
    minItems: 1
    maxItems: 5
  Boolean:
    type: boolean
  DeleteFleetResponse:
    type: object
    properties: {}
  DeleteRobotResponse:
    type: object
    properties: {}
  DeleteRobotApplicationResponse:
    type: object
    properties: {}
  DeleteSimulationApplicationResponse:
    type: object
    properties: {}
  DeregisterRobotResponse:
    type: object
    properties:
      fleet:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the fleet.
      robot:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the robot.
  DescribeDeploymentJobResponse:
    type: object
    properties:
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the deployment job.
      fleet:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the fleet.
      status:
        $ref: '#/definitions/DeploymentStatus'
        description: The status of the deployment job.
      deploymentConfig:
        $ref: '#/definitions/DeploymentConfig'
        description: The deployment configuration.
      deploymentApplicationConfigs:
        $ref: '#/definitions/DeploymentApplicationConfigs'
        description: The deployment application configuration.
      failureReason:
        $ref: '#/definitions/GenericString'
        description: A short description of the reason why the deployment job failed.
      failureCode:
        $ref: '#/definitions/DeploymentJobErrorCode'
        description: The deployment job failure code.
      createdAt:
        $ref: '#/definitions/CreatedAt'
        description: 'The time, in milliseconds since the epoch, when the deployment job was created.'
      robotDeploymentSummary:
        $ref: '#/definitions/RobotDeploymentSummary'
        description: A list of robot deployment summaries.
      tags:
        $ref: '#/definitions/TagMap'
        description: The list of all tags added to the specified deployment job.
  DescribeFleetResponse:
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the fleet.
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the fleet.
      robots:
        $ref: '#/definitions/Robots'
        description: A list of robots.
      createdAt:
        $ref: '#/definitions/CreatedAt'
        description: 'The time, in milliseconds since the epoch, when the fleet was created.'
      lastDeploymentStatus:
        $ref: '#/definitions/DeploymentStatus'
        description: The status of the last deployment.
      lastDeploymentJob:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the last deployment job.
      lastDeploymentTime:
        $ref: '#/definitions/CreatedAt'
        description: The time of the last deployment.
      tags:
        $ref: '#/definitions/TagMap'
        description: The list of all tags added to the specified fleet.
  DescribeRobotResponse:
    type: object
    properties:
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the robot.
      name:
        $ref: '#/definitions/Name'
        description: The name of the robot.
      fleetArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the fleet.
      status:
        $ref: '#/definitions/RobotStatus'
        description: The status of the fleet.
      greengrassGroupId:
        $ref: '#/definitions/Id'
        description: The Greengrass group id.
      createdAt:
        $ref: '#/definitions/CreatedAt'
        description: 'The time, in milliseconds since the epoch, when the robot was created.'
      architecture:
        $ref: '#/definitions/Architecture'
        description: The target architecture of the robot application.
      lastDeploymentJob:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the last deployment job.
      lastDeploymentTime:
        $ref: '#/definitions/CreatedAt'
        description: The time of the last deployment job.
      tags:
        $ref: '#/definitions/TagMap'
        description: The list of all tags added to the specified robot.
  DescribeRobotApplicationResponse:
    type: object
    properties:
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the robot application.
      name:
        $ref: '#/definitions/Name'
        description: The name of the robot application.
      version:
        $ref: '#/definitions/Version'
        description: The version of the robot application.
      sources:
        $ref: '#/definitions/Sources'
        description: The sources of the robot application.
      robotSoftwareSuite:
        $ref: '#/definitions/RobotSoftwareSuite'
        description: The robot software suite used by the robot application.
      revisionId:
        $ref: '#/definitions/RevisionId'
        description: The revision id of the robot application.
      lastUpdatedAt:
        $ref: '#/definitions/LastUpdatedAt'
        description: 'The time, in milliseconds since the epoch, when the robot application was last updated.'
      tags:
        $ref: '#/definitions/TagMap'
        description: The list of all tags added to the specified robot application.
  DescribeSimulationApplicationResponse:
    type: object
    properties:
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the robot simulation application.
      name:
        $ref: '#/definitions/Name'
        description: The name of the simulation application.
      version:
        $ref: '#/definitions/Version'
        description: The version of the simulation application.
      sources:
        $ref: '#/definitions/Sources'
        description: The sources of the simulation application.
      simulationSoftwareSuite:
        $ref: '#/definitions/SimulationSoftwareSuite'
        description: The simulation software suite used by the simulation application.
      robotSoftwareSuite:
        $ref: '#/definitions/RobotSoftwareSuite'
        description: Information about the robot software suite.
      renderingEngine:
        $ref: '#/definitions/RenderingEngine'
        description: The rendering engine for the simulation application.
      revisionId:
        $ref: '#/definitions/RevisionId'
        description: The revision id of the simulation application.
      lastUpdatedAt:
        $ref: '#/definitions/LastUpdatedAt'
        description: 'The time, in milliseconds since the epoch, when the simulation application was last updated.'
      tags:
        $ref: '#/definitions/TagMap'
        description: The list of all tags added to the specified simulation application.
  DescribeSimulationJobResponse:
    type: object
    properties:
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the simulation job.
      name:
        $ref: '#/definitions/Name'
        description: The name of the simulation job.
      status:
        $ref: '#/definitions/SimulationJobStatus'
        description: The status of the simulation job.
      lastStartedAt:
        $ref: '#/definitions/LastStartedAt'
        description: 'The time, in milliseconds since the epoch, when the simulation job was last started.'
      lastUpdatedAt:
        $ref: '#/definitions/LastUpdatedAt'
        description: 'The time, in milliseconds since the epoch, when the simulation job was last updated.'
      failureBehavior:
        $ref: '#/definitions/FailureBehavior'
        description: The failure behavior for the simulation job.
      failureCode:
        $ref: '#/definitions/SimulationJobErrorCode'
        description: '<p>The failure code of the simulation job if it failed:</p> <dl> <dt>InternalServiceError</dt> <dd> <p>Internal service error.</p> </dd> <dt>RobotApplicationCrash</dt> <dd> <p>Robot application exited abnormally.</p> </dd> <dt>SimulationApplicationCrash</dt> <dd> <p> Simulation application exited abnormally.</p> </dd> <dt>BadPermissionsRobotApplication</dt> <dd> <p>Robot application bundle could not be downloaded.</p> </dd> <dt>BadPermissionsSimulationApplication</dt> <dd> <p>Simulation application bundle could not be downloaded.</p> </dd> <dt>BadPermissionsS3Output</dt> <dd> <p>Unable to publish outputs to customer-provided S3 bucket.</p> </dd> <dt>BadPermissionsCloudwatchLogs</dt> <dd> <p>Unable to publish logs to customer-provided CloudWatch Logs resource.</p> </dd> <dt>SubnetIpLimitExceeded</dt> <dd> <p>Subnet IP limit exceeded.</p> </dd> <dt>ENILimitExceeded</dt> <dd> <p>ENI limit exceeded.</p> </dd> <dt>BadPermissionsUserCredentials</dt> <dd> <p>Unable to use the Role provided.</p> </dd> <dt>InvalidBundleRobotApplication</dt> <dd> <p>Robot bundle cannot be extracted (invalid format, bundling error, or other issue).</p> </dd> <dt>InvalidBundleSimulationApplication</dt> <dd> <p>Simulation bundle cannot be extracted (invalid format, bundling error, or other issue).</p> </dd> <dt>RobotApplicationVersionMismatchedEtag</dt> <dd> <p>Etag for RobotApplication does not match value during version creation.</p> </dd> <dt>SimulationApplicationVersionMismatchedEtag</dt> <dd> <p>Etag for SimulationApplication does not match value during version creation.</p> </dd> </dl>'
      failureReason:
        $ref: '#/definitions/GenericString'
        description: 'Details about why the simulation job failed. For more information about troubleshooting, see <a href="https://docs.aws.amazon.com/robomaker/latest/dg/troubleshooting.html">Troubleshooting</a>.'
      clientRequestToken:
        $ref: '#/definitions/ClientRequestToken'
        description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
      outputLocation:
        $ref: '#/definitions/OutputLocation'
        description: Location for output files generated by the simulation job.
      maxJobDurationInSeconds:
        $ref: '#/definitions/JobDuration'
        description: 'The maximum job duration in seconds. The value must be 8 days (691,200 seconds) or less.'
      simulationTimeMillis:
        $ref: '#/definitions/SimulationTimeMillis'
        description: The simulation job execution duration in milliseconds.
      iamRole:
        $ref: '#/definitions/IamRole'
        description: The IAM role that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf.
      robotApplications:
        $ref: '#/definitions/RobotApplicationConfigs'
        description: A list of robot applications.
      simulationApplications:
        $ref: '#/definitions/SimulationApplicationConfigs'
        description: A list of simulation applications.
      tags:
        $ref: '#/definitions/TagMap'
        description: The list of all tags added to the specified simulation job.
      vpcConfig:
        $ref: '#/definitions/VPCConfigResponse'
        description: The VPC configuration.
  ListDeploymentJobsResponse:
    type: object
    properties:
      deploymentJobs:
        $ref: '#/definitions/DeploymentJobs'
        description: A list of deployment jobs that meet the criteria of the request.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'The <code>nextToken</code> value to include in a future <code>ListDeploymentJobs</code> request. When the results of a <code>ListDeploymentJobs</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. '
  Filter:
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the filter.
      values:
        $ref: '#/definitions/FilterValues'
        description: A list of values.
    description: Information about a filter.
  ListFleetsResponse:
    type: object
    properties:
      fleetDetails:
        $ref: '#/definitions/Fleets'
        description: A list of fleet details meeting the request criteria.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'The <code>nextToken</code> value to include in a future <code>ListDeploymentJobs</code> request. When the results of a <code>ListFleets</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. '
  ListRobotApplicationsResponse:
    type: object
    properties:
      robotApplicationSummaries:
        $ref: '#/definitions/RobotApplicationSummaries'
        description: A list of robot application summaries that meet the criteria of the request.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'The <code>nextToken</code> value to include in a future <code>ListRobotApplications</code> request. When the results of a <code>ListRobotApplications</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. '
  ListRobotsResponse:
    type: object
    properties:
      robots:
        $ref: '#/definitions/Robots'
        description: A list of robots that meet the criteria of the request.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'The <code>nextToken</code> value to include in a future <code>ListRobots</code> request. When the results of a <code>ListRobot</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. '
  ListSimulationApplicationsResponse:
    type: object
    properties:
      simulationApplicationSummaries:
        $ref: '#/definitions/SimulationApplicationSummaries'
        description: A list of simulation application summaries that meet the criteria of the request.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'The <code>nextToken</code> value to include in a future <code>ListSimulationApplications</code> request. When the results of a <code>ListRobot</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. '
  ListSimulationJobsResponse:
    type: object
    required:
      - simulationJobSummaries
    properties:
      simulationJobSummaries:
        $ref: '#/definitions/SimulationJobSummaries'
        description: A list of simulation job summaries that meet the criteria of the request.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'The <code>nextToken</code> value to include in a future <code>ListSimulationJobs</code> request. When the results of a <code>ListRobot</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. '
  ListTagsForResourceResponse:
    type: object
    properties:
      tags:
        $ref: '#/definitions/TagMap'
        description: The list of all tags added to the specified resource.
  RegisterRobotResponse:
    type: object
    properties:
      fleet:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the fleet that the robot will join.
      robot:
        $ref: '#/definitions/Arn'
        description: Information about the robot registration.
  RestartSimulationJobResponse:
    type: object
    properties: {}
  SyncDeploymentJobResponse:
    type: object
    properties:
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the synchronization request.
      fleet:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the fleet.
      status:
        $ref: '#/definitions/DeploymentStatus'
        description: The status of the synchronization job.
      deploymentConfig:
        $ref: '#/definitions/DeploymentConfig'
        description: Information about the deployment configuration.
      deploymentApplicationConfigs:
        $ref: '#/definitions/DeploymentApplicationConfigs'
        description: Information about the deployment application configurations.
      failureReason:
        $ref: '#/definitions/GenericString'
        description: The failure reason if the job fails.
      failureCode:
        $ref: '#/definitions/DeploymentJobErrorCode'
        description: '<p>The failure code if the job fails:</p> <dl> <dt>InternalServiceError</dt> <dd> <p>Internal service error.</p> </dd> <dt>RobotApplicationCrash</dt> <dd> <p>Robot application exited abnormally.</p> </dd> <dt>SimulationApplicationCrash</dt> <dd> <p> Simulation application exited abnormally.</p> </dd> <dt>BadPermissionsRobotApplication</dt> <dd> <p>Robot application bundle could not be downloaded.</p> </dd> <dt>BadPermissionsSimulationApplication</dt> <dd> <p>Simulation application bundle could not be downloaded.</p> </dd> <dt>BadPermissionsS3Output</dt> <dd> <p>Unable to publish outputs to customer-provided S3 bucket.</p> </dd> <dt>BadPermissionsCloudwatchLogs</dt> <dd> <p>Unable to publish logs to customer-provided CloudWatch Logs resource.</p> </dd> <dt>SubnetIpLimitExceeded</dt> <dd> <p>Subnet IP limit exceeded.</p> </dd> <dt>ENILimitExceeded</dt> <dd> <p>ENI limit exceeded.</p> </dd> <dt>BadPermissionsUserCredentials</dt> <dd> <p>Unable to use the Role provided.</p> </dd> <dt>InvalidBundleRobotApplication</dt> <dd> <p>Robot bundle cannot be extracted (invalid format, bundling error, or other issue).</p> </dd> <dt>InvalidBundleSimulationApplication</dt> <dd> <p>Simulation bundle cannot be extracted (invalid format, bundling error, or other issue).</p> </dd> <dt>RobotApplicationVersionMismatchedEtag</dt> <dd> <p>Etag for RobotApplication does not match value during version creation.</p> </dd> <dt>SimulationApplicationVersionMismatchedEtag</dt> <dd> <p>Etag for SimulationApplication does not match value during version creation.</p> </dd> </dl>'
      createdAt:
        $ref: '#/definitions/CreatedAt'
        description: 'The time, in milliseconds since the epoch, when the fleet was created.'
  TagResourceResponse:
    type: object
    properties: {}
  UntagResourceResponse:
    type: object
    properties: {}
  TagKey:
    type: string
    pattern: '[a-zA-Z0-9 _.\-\/+=:]*'
    minLength: 1
    maxLength: 128
  UpdateRobotApplicationResponse:
    type: object
    properties:
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the updated robot application.
      name:
        $ref: '#/definitions/Name'
        description: The name of the robot application.
      version:
        $ref: '#/definitions/Version'
        description: The version of the robot application.
      sources:
        $ref: '#/definitions/Sources'
        description: The sources of the robot application.
      robotSoftwareSuite:
        $ref: '#/definitions/RobotSoftwareSuite'
        description: The robot software suite used by the robot application.
      lastUpdatedAt:
        $ref: '#/definitions/LastUpdatedAt'
        description: 'The time, in milliseconds since the epoch, when the robot application was last updated.'
      revisionId:
        $ref: '#/definitions/RevisionId'
        description: The revision id of the robot application.
  UpdateSimulationApplicationResponse:
    type: object
    properties:
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the updated simulation application.
      name:
        $ref: '#/definitions/Name'
        description: The name of the simulation application.
      version:
        $ref: '#/definitions/Version'
        description: The version of the robot application.
      sources:
        $ref: '#/definitions/Sources'
        description: The sources of the simulation application.
      simulationSoftwareSuite:
        $ref: '#/definitions/SimulationSoftwareSuite'
        description: The simulation software suite used by the simulation application.
      robotSoftwareSuite:
        $ref: '#/definitions/RobotSoftwareSuite'
        description: Information about the robot software suite.
      renderingEngine:
        $ref: '#/definitions/RenderingEngine'
        description: The rendering engine for the simulation application.
      lastUpdatedAt:
        $ref: '#/definitions/LastUpdatedAt'
        description: 'The time, in milliseconds since the epoch, when the simulation application was last updated.'
      revisionId:
        $ref: '#/definitions/RevisionId'
        description: The revision id of the simulation application.
  Architecture:
    type: string
    enum:
      - X86_64
      - ARM64
      - ARMHF
  Arns:
    type: array
    items:
      $ref: '#/definitions/Arn'
    minItems: 1
    maxItems: 100
  BatchDescribeSimulationJobRequest:
    type: object
    required:
      - jobs
    properties:
      jobs:
        $ref: '#/definitions/Arns'
        description: A list of Amazon Resource Names (ARNs) of simulation jobs to describe.
  SimulationJobs:
    type: array
    items:
      $ref: '#/definitions/SimulationJob'
  CancelDeploymentJobRequest:
    type: object
    required:
      - job
    properties:
      job:
        $ref: '#/definitions/Arn'
        description: The deployment job ARN to cancel.
  CancelSimulationJobRequest:
    type: object
    required:
      - job
    properties:
      job:
        $ref: '#/definitions/Arn'
        description: The simulation job ARN to cancel.
  ClientRequestToken:
    type: string
    pattern: '[a-zA-Z0-9_\-=]*'
    minLength: 1
    maxLength: 64
  Command:
    type: string
    pattern: '[a-zA-Z0-9_.\-]*'
    minLength: 1
    maxLength: 1024
  DeploymentConfig:
    type: object
    properties:
      concurrentDeploymentPercentage:
        $ref: '#/definitions/Percentage'
        description: The percentage of robots receiving the deployment at the same time.
      failureThresholdPercentage:
        $ref: '#/definitions/Percentage'
        description: The percentage of deployments that need to fail before stopping deployment.
    description: Information about a deployment configuration.
  DeploymentApplicationConfigs:
    type: array
    items:
      $ref: '#/definitions/DeploymentApplicationConfig'
    minItems: 1
    maxItems: 1
  TagMap:
    type: object
    minProperties: 0
    maxProperties: 50
    additionalProperties:
      $ref: '#/definitions/TagValue'
  CreateDeploymentJobRequest:
    type: object
    required:
      - clientRequestToken
      - fleet
      - deploymentApplicationConfigs
    properties:
      deploymentConfig:
        $ref: '#/definitions/DeploymentConfig'
        description: The requested deployment configuration.
      clientRequestToken:
        $ref: '#/definitions/ClientRequestToken'
        description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
      fleet:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the fleet to deploy.
      deploymentApplicationConfigs:
        $ref: '#/definitions/DeploymentApplicationConfigs'
        description: The deployment application configuration.
      tags:
        $ref: '#/definitions/TagMap'
        description: A map that contains tag keys and tag values that are attached to the deployment job.
  DeploymentStatus:
    type: string
    enum:
      - Pending
      - Preparing
      - InProgress
      - Failed
      - Succeeded
      - Canceled
  GenericString:
    type: string
  DeploymentJobErrorCode:
    type: string
    enum:
      - ResourceNotFound
      - EnvironmentSetupError
      - EtagMismatch
      - FailureThresholdBreached
      - RobotDeploymentNoResponse
      - RobotAgentConnectionTimeout
      - GreengrassDeploymentFailed
      - MissingRobotArchitecture
      - MissingRobotApplicationArchitecture
      - MissingRobotDeploymentResource
      - GreengrassGroupVersionDoesNotExist
      - ExtractingBundleFailure
      - PreLaunchFileFailure
      - PostLaunchFileFailure
      - BadPermissionError
      - InternalServerError
  CreatedAt:
    type: string
    format: date-time
  Name:
    type: string
    pattern: '[a-zA-Z0-9_\-]*'
    minLength: 1
    maxLength: 255
  CreateFleetRequest:
    type: object
    required:
      - name
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the fleet.
      tags:
        $ref: '#/definitions/TagMap'
        description: A map that contains tag keys and tag values that are attached to the fleet.
  SourceConfigs:
    type: array
    items:
      $ref: '#/definitions/SourceConfig'
  RobotSoftwareSuite:
    type: object
    properties:
      name:
        $ref: '#/definitions/RobotSoftwareSuiteType'
        description: The name of the robot software suite.
      version:
        $ref: '#/definitions/RobotSoftwareSuiteVersionType'
        description: The version of the robot software suite.
    description: Information about a robot software suite.
  CreateRobotApplicationRequest:
    type: object
    required:
      - name
      - sources
      - robotSoftwareSuite
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the robot application.
      sources:
        $ref: '#/definitions/SourceConfigs'
        description: The sources of the robot application.
      robotSoftwareSuite:
        $ref: '#/definitions/RobotSoftwareSuite'
        description: The robot software suite used by the robot application.
      tags:
        $ref: '#/definitions/TagMap'
        description: A map that contains tag keys and tag values that are attached to the robot application.
  Version:
    type: string
    pattern: '(\$LATEST)|[0-9]*'
    minLength: 1
    maxLength: 255
  Sources:
    type: array
    items:
      $ref: '#/definitions/Source'
  LastUpdatedAt:
    type: string
    format: date-time
  RevisionId:
    type: string
    pattern: '[a-zA-Z0-9_.\-]*'
    minLength: 1
    maxLength: 40
  CreateRobotApplicationVersionRequest:
    type: object
    required:
      - application
    properties:
      application:
        $ref: '#/definitions/Arn'
        description: The application information for the robot application.
      currentRevisionId:
        $ref: '#/definitions/RevisionId'
        description: 'The current revision id for the robot application. If you provide a value and it matches the latest revision ID, a new version will be created.'
  Id:
    type: string
    minLength: 1
    maxLength: 1224
  CreateRobotRequest:
    type: object
    required:
      - name
      - architecture
      - greengrassGroupId
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name for the robot.
      architecture:
        $ref: '#/definitions/Architecture'
        description: The target architecture of the robot.
      greengrassGroupId:
        $ref: '#/definitions/Id'
        description: The Greengrass group id.
      tags:
        $ref: '#/definitions/TagMap'
        description: A map that contains tag keys and tag values that are attached to the robot.
  SimulationSoftwareSuite:
    type: object
    properties:
      name:
        $ref: '#/definitions/SimulationSoftwareSuiteType'
        description: The name of the simulation software suite.
      version:
        $ref: '#/definitions/SimulationSoftwareSuiteVersionType'
        description: The version of the simulation software suite.
    description: Information about a simulation software suite.
  RenderingEngine:
    type: object
    properties:
      name:
        $ref: '#/definitions/RenderingEngineType'
        description: The name of the rendering engine.
      version:
        $ref: '#/definitions/RenderingEngineVersionType'
        description: The version of the rendering engine.
    description: Information about a rendering engine.
  CreateSimulationApplicationRequest:
    type: object
    required:
      - name
      - sources
      - simulationSoftwareSuite
      - robotSoftwareSuite
      - renderingEngine
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the simulation application.
      sources:
        $ref: '#/definitions/SourceConfigs'
        description: The sources of the simulation application.
      simulationSoftwareSuite:
        $ref: '#/definitions/SimulationSoftwareSuite'
        description: The simulation software suite used by the simulation application.
      robotSoftwareSuite:
        $ref: '#/definitions/RobotSoftwareSuite'
        description: The robot software suite of the simulation application.
      renderingEngine:
        $ref: '#/definitions/RenderingEngine'
        description: The rendering engine for the simulation application.
      tags:
        $ref: '#/definitions/TagMap'
        description: A map that contains tag keys and tag values that are attached to the simulation application.
  CreateSimulationApplicationVersionRequest:
    type: object
    required:
      - application
    properties:
      application:
        $ref: '#/definitions/Arn'
        description: The application information for the simulation application.
      currentRevisionId:
        $ref: '#/definitions/RevisionId'
        description: 'The current revision id for the simulation application. If you provide a value and it matches the latest revision ID, a new version will be created.'
  OutputLocation:
    type: object
    properties:
      s3Bucket:
        $ref: '#/definitions/S3Bucket'
        description: The S3 bucket for output.
      s3Prefix:
        $ref: '#/definitions/S3Key'
        description: The S3 folder in the <code>s3Bucket</code> where output files will be placed.
    description: The output location.
  JobDuration:
    type: integer
  IamRole:
    type: string
    pattern: 'arn:.*'
    minLength: 1
    maxLength: 255
  FailureBehavior:
    type: string
    enum:
      - Fail
      - Continue
  RobotApplicationConfigs:
    type: array
    items:
      $ref: '#/definitions/RobotApplicationConfig'
    minItems: 1
    maxItems: 1
  SimulationApplicationConfigs:
    type: array
    items:
      $ref: '#/definitions/SimulationApplicationConfig'
    minItems: 1
    maxItems: 1
  VPCConfig:
    type: object
    required:
      - subnets
    properties:
      subnets:
        $ref: '#/definitions/Subnets'
        description: A list of one or more subnet IDs in your VPC.
      securityGroups:
        $ref: '#/definitions/SecurityGroups'
        description: A list of one or more security groups IDs in your VPC.
      assignPublicIp:
        $ref: '#/definitions/Boolean'
        description: A boolean indicating whether to assign a public IP address.
    description: 'If your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and two subnet IDs.'
  CreateSimulationJobRequest:
    type: object
    required:
      - maxJobDurationInSeconds
      - iamRole
    properties:
      clientRequestToken:
        $ref: '#/definitions/ClientRequestToken'
        description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
      outputLocation:
        $ref: '#/definitions/OutputLocation'
        description: Location for output files generated by the simulation job.
      maxJobDurationInSeconds:
        $ref: '#/definitions/JobDuration'
        description: 'The maximum simulation job duration in seconds (up to 14 days or 1,209,600 seconds. When <code>maxJobDurationInSeconds</code> is reached, the simulation job will status will transition to <code>Completed</code>.'
      iamRole:
        $ref: '#/definitions/IamRole'
        description: 'The IAM role name that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job. '
      failureBehavior:
        $ref: '#/definitions/FailureBehavior'
        description: <p>The failure behavior the simulation job.</p> <dl> <dt>Continue</dt> <dd> <p>Restart the simulation job in the same host instance.</p> </dd> <dt>Fail</dt> <dd> <p>Stop the simulation job and terminate the instance.</p> </dd> </dl>
      robotApplications:
        $ref: '#/definitions/RobotApplicationConfigs'
        description: The robot application to use in the simulation job.
      simulationApplications:
        $ref: '#/definitions/SimulationApplicationConfigs'
        description: The simulation application to use in the simulation job.
      tags:
        $ref: '#/definitions/TagMap'
        description: A map that contains tag keys and tag values that are attached to the simulation job.
      vpcConfig:
        $ref: '#/definitions/VPCConfig'
        description: 'If your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and one subnet ID. '
  SimulationJobStatus:
    type: string
    enum:
      - Pending
      - Preparing
      - Running
      - Restarting
      - Completed
      - Failed
      - RunningFailed
      - Terminating
      - Terminated
      - Canceled
  LastStartedAt:
    type: string
    format: date-time
  SimulationJobErrorCode:
    type: string
    enum:
      - InternalServiceError
      - RobotApplicationCrash
      - SimulationApplicationCrash
      - BadPermissionsRobotApplication
      - BadPermissionsSimulationApplication
      - BadPermissionsS3Output
      - BadPermissionsCloudwatchLogs
      - SubnetIpLimitExceeded
      - ENILimitExceeded
      - BadPermissionsUserCredentials
      - InvalidBundleRobotApplication
      - InvalidBundleSimulationApplication
      - RobotApplicationVersionMismatchedEtag
      - SimulationApplicationVersionMismatchedEtag
      - WrongRegionS3Output
      - WrongRegionRobotApplication
      - WrongRegionSimulationApplication
  SimulationTimeMillis:
    type: integer
  VPCConfigResponse:
    type: object
    properties:
      subnets:
        $ref: '#/definitions/Subnets'
        description: A list of subnet IDs associated with the simulation job.
      securityGroups:
        $ref: '#/definitions/SecurityGroups'
        description: A list of security group IDs associated with the simulation job.
      vpcId:
        $ref: '#/definitions/GenericString'
        description: The VPC ID associated with your simulation job.
      assignPublicIp:
        $ref: '#/definitions/Boolean'
        description: A boolean indicating if a public IP was assigned.
    description: VPC configuration associated with your simulation job.
  DeleteFleetRequest:
    type: object
    required:
      - fleet
    properties:
      fleet:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the fleet.
  DeleteRobotApplicationRequest:
    type: object
    required:
      - application
    properties:
      application:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the the robot application.
      applicationVersion:
        $ref: '#/definitions/Version'
        description: The version of the robot application to delete.
  DeleteRobotRequest:
    type: object
    required:
      - robot
    properties:
      robot:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the robot.
  DeleteSimulationApplicationRequest:
    type: object
    required:
      - application
    properties:
      application:
        $ref: '#/definitions/Arn'
        description: The application information for the simulation application to delete.
      applicationVersion:
        $ref: '#/definitions/Version'
        description: The version of the simulation application to delete.
  DeploymentVersion:
    type: string
    pattern: '[0-9]*'
    minLength: 1
    maxLength: 255
  DeploymentLaunchConfig:
    type: object
    required:
      - packageName
      - launchFile
    properties:
      packageName:
        $ref: '#/definitions/Command'
        description: The package name.
      preLaunchFile:
        $ref: '#/definitions/Path'
        description: The deployment pre-launch file. This file will be executed prior to the launch file.
      launchFile:
        $ref: '#/definitions/Command'
        description: The launch file name.
      postLaunchFile:
        $ref: '#/definitions/Path'
        description: The deployment post-launch file. This file will be executed after the launch file.
      environmentVariables:
        $ref: '#/definitions/EnvironmentVariableMap'
        description: An array of key/value pairs specifying environment variables for the robot application
    description: Configuration information for a deployment launch.
  DeploymentJob:
    type: object
    properties:
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the deployment job.
      fleet:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the fleet.
      status:
        $ref: '#/definitions/DeploymentStatus'
        description: The status of the deployment job.
      deploymentApplicationConfigs:
        $ref: '#/definitions/DeploymentApplicationConfigs'
        description: The deployment application configuration.
      deploymentConfig:
        $ref: '#/definitions/DeploymentConfig'
        description: The deployment configuration.
      failureReason:
        $ref: '#/definitions/GenericString'
        description: A short description of the reason why the deployment job failed.
      failureCode:
        $ref: '#/definitions/DeploymentJobErrorCode'
        description: The deployment job failure code.
      createdAt:
        $ref: '#/definitions/CreatedAt'
        description: 'The time, in milliseconds since the epoch, when the deployment job was created.'
    description: Information about a deployment job.
  DeploymentJobs:
    type: array
    items:
      $ref: '#/definitions/DeploymentJob'
    minItems: 0
    maxItems: 200
  Path:
    type: string
    minLength: 1
    maxLength: 1024
  EnvironmentVariableMap:
    type: object
    minProperties: 0
    maxProperties: 16
    additionalProperties:
      $ref: '#/definitions/EnvironmentVariableValue'
  DeregisterRobotRequest:
    type: object
    required:
      - fleet
      - robot
    properties:
      fleet:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the fleet.
      robot:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the robot.
  DescribeDeploymentJobRequest:
    type: object
    required:
      - job
    properties:
      job:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the deployment job.
  RobotDeploymentSummary:
    type: array
    items:
      $ref: '#/definitions/RobotDeployment'
  DescribeFleetRequest:
    type: object
    required:
      - fleet
    properties:
      fleet:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the fleet.
  Robots:
    type: array
    items:
      $ref: '#/definitions/Robot'
    minItems: 0
    maxItems: 1000
  DescribeRobotApplicationRequest:
    type: object
    required:
      - application
    properties:
      application:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the robot application.
      applicationVersion:
        $ref: '#/definitions/Version'
        description: The version of the robot application to describe.
  DescribeRobotRequest:
    type: object
    required:
      - robot
    properties:
      robot:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the robot to be described.
  RobotStatus:
    type: string
    enum:
      - Available
      - Registered
      - PendingNewDeployment
      - Deploying
      - Failed
      - InSync
      - NoResponse
  DescribeSimulationApplicationRequest:
    type: object
    required:
      - application
    properties:
      application:
        $ref: '#/definitions/Arn'
        description: The application information for the simulation application.
      applicationVersion:
        $ref: '#/definitions/Version'
        description: The version of the simulation application to describe.
  DescribeSimulationJobRequest:
    type: object
    required:
      - job
    properties:
      job:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the simulation job to be described.
  EnvironmentVariableKey:
    type: string
    pattern: '[A-Z_][A-Z0-9_]*'
    minLength: 1
    maxLength: 1024
  EnvironmentVariableValue:
    type: string
    minLength: 1
    maxLength: 1024
  FilterValues:
    type: array
    items:
      $ref: '#/definitions/Name'
    minItems: 1
    maxItems: 1
  Filters:
    type: array
    items:
      $ref: '#/definitions/Filter'
    minItems: 1
    maxItems: 1
  Fleet:
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the fleet.
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the fleet.
      createdAt:
        $ref: '#/definitions/CreatedAt'
        description: 'The time, in milliseconds since the epoch, when the fleet was created.'
      lastDeploymentStatus:
        $ref: '#/definitions/DeploymentStatus'
        description: The status of the last fleet deployment.
      lastDeploymentJob:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the last deployment job.
      lastDeploymentTime:
        $ref: '#/definitions/CreatedAt'
        description: The time of the last deployment.
    description: Information about a fleet.
  Fleets:
    type: array
    items:
      $ref: '#/definitions/Fleet'
    minItems: 0
    maxItems: 200
  GenericInteger:
    type: integer
  LaunchConfig:
    type: object
    required:
      - packageName
      - launchFile
    properties:
      packageName:
        $ref: '#/definitions/Command'
        description: The package name.
      launchFile:
        $ref: '#/definitions/Command'
        description: The launch file name.
      environmentVariables:
        $ref: '#/definitions/EnvironmentVariableMap'
        description: The environment variables for the application launch.
    description: Information about a launch configuration.
  PaginationToken:
    type: string
    pattern: '[a-zA-Z0-9_.\-\/+=]*'
    minLength: 1
    maxLength: 2048
  MaxResults:
    type: integer
  ListDeploymentJobsRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/Filters'
        description: '<p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>fleetName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>InProgress</code> or the status <code>Pending</code>.</p>'
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: <p>The <code>nextToken</code> value returned from a previous paginated <code>ListDeploymentJobs</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: 'The maximum number of deployment job results returned by <code>ListDeploymentJobs</code> in paginated output. When this parameter is used, <code>ListDeploymentJobs</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListDeploymentJobs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListDeploymentJobs</code> returns up to 100 results and a <code>nextToken</code> value if applicable. '
  ListFleetsRequest:
    type: object
    properties:
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: <p>The <code>nextToken</code> value returned from a previous paginated <code>ListFleets</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: 'The maximum number of deployment job results returned by <code>ListFleets</code> in paginated output. When this parameter is used, <code>ListFleets</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListFleets</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListFleets</code> returns up to 100 results and a <code>nextToken</code> value if applicable. '
      filters:
        $ref: '#/definitions/Filters'
        description: '<p>Optional filters to limit results.</p> <p>The filter name <code>name</code> is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.</p>'
  VersionQualifier:
    type: string
    pattern: ALL
  ListRobotApplicationsRequest:
    type: object
    properties:
      versionQualifier:
        $ref: '#/definitions/VersionQualifier'
        description: The version qualifier of the robot application.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: <p>The <code>nextToken</code> value returned from a previous paginated <code>ListRobotApplications</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: 'The maximum number of deployment job results returned by <code>ListRobotApplications</code> in paginated output. When this parameter is used, <code>ListRobotApplications</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListRobotApplications</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListRobotApplications</code> returns up to 100 results and a <code>nextToken</code> value if applicable. '
      filters:
        $ref: '#/definitions/Filters'
        description: '<p>Optional filters to limit results.</p> <p>The filter name <code>name</code> is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.</p>'
  RobotApplicationSummaries:
    type: array
    items:
      $ref: '#/definitions/RobotApplicationSummary'
    minItems: 0
    maxItems: 100
  ListRobotsRequest:
    type: object
    properties:
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: <p>The <code>nextToken</code> value returned from a previous paginated <code>ListRobots</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: 'The maximum number of deployment job results returned by <code>ListRobots</code> in paginated output. When this parameter is used, <code>ListRobots</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListRobots</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListRobots</code> returns up to 100 results and a <code>nextToken</code> value if applicable. '
      filters:
        $ref: '#/definitions/Filters'
        description: '<p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>fleetName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>Registered</code> or the status <code>Available</code>.</p>'
  ListSimulationApplicationsRequest:
    type: object
    properties:
      versionQualifier:
        $ref: '#/definitions/VersionQualifier'
        description: The version qualifier of the simulation application.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: <p>The <code>nextToken</code> value returned from a previous paginated <code>ListSimulationApplications</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: 'The maximum number of deployment job results returned by <code>ListSimulationApplications</code> in paginated output. When this parameter is used, <code>ListSimulationApplications</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListSimulationApplications</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListSimulationApplications</code> returns up to 100 results and a <code>nextToken</code> value if applicable. '
      filters:
        $ref: '#/definitions/Filters'
        description: '<p>Optional list of filters to limit results.</p> <p>The filter name <code>name</code> is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.</p>'
  SimulationApplicationSummaries:
    type: array
    items:
      $ref: '#/definitions/SimulationApplicationSummary'
    minItems: 0
    maxItems: 100
  ListSimulationJobsRequest:
    type: object
    properties:
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: <p>The <code>nextToken</code> value returned from a previous paginated <code>ListSimulationJobs</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: 'The maximum number of deployment job results returned by <code>ListSimulationJobs</code> in paginated output. When this parameter is used, <code>ListSimulationJobs</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListSimulationJobs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListSimulationJobs</code> returns up to 100 results and a <code>nextToken</code> value if applicable. '
      filters:
        $ref: '#/definitions/Filters'
        description: '<p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>simulationApplicationName</code> and <code>robotApplicationName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>Preparing</code> or the status <code>Running</code>.</p>'
  SimulationJobSummaries:
    type: array
    items:
      $ref: '#/definitions/SimulationJobSummary'
    minItems: 0
    maxItems: 100
  ListTagsForResourceRequest:
    type: object
    properties: {}
  PercentDone:
    type: number
    format: float
    minimum: 0
    maximum: 100
  RobotDeploymentStep:
    type: string
    enum:
      - Validating
      - DownloadingExtracting
      - ExecutingPreLaunch
      - Launching
      - ExecutingPostLaunch
      - Finished
  ProgressDetail:
    type: object
    properties:
      currentProgress:
        $ref: '#/definitions/RobotDeploymentStep'
        description: <p>The current progress status.</p> <dl> <dt>Validating</dt> <dd> <p>Validating the deployment.</p> </dd> <dt>DownloadingExtracting</dt> <dd> <p>Downloading and extracting the bundle on the robot.</p> </dd> <dt>ExecutingPreLaunch</dt> <dd> <p>Executing pre-launch script(s) if provided.</p> </dd> <dt>Launching</dt> <dd> <p>Launching the robot application.</p> </dd> <dt>ExecutingPostLaunch</dt> <dd> <p>Executing post-launch script(s) if provided.</p> </dd> <dt>Finished</dt> <dd> <p>Deployment is complete.</p> </dd> </dl>
      percentDone:
        $ref: '#/definitions/PercentDone'
        description: Precentage of the step that is done. This currently only applies to the <code>Downloading/Extracting</code> step of the deployment. It is empty for other steps.
      estimatedTimeRemainingSeconds:
        $ref: '#/definitions/GenericInteger'
        description: Estimated amount of time in seconds remaining in the step. This currently only applies to the <code>Downloading/Extracting</code> step of the deployment. It is empty for other steps.
      targetResource:
        $ref: '#/definitions/GenericString'
        description: The Amazon Resource Name (ARN) of the deployment job.
    description: Information about the progress of a deployment job.
  RegisterRobotRequest:
    type: object
    required:
      - fleet
      - robot
    properties:
      fleet:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the fleet.
      robot:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the robot.
  RestartSimulationJobRequest:
    type: object
    required:
      - job
    properties:
      job:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the simulation job.
  Robot:
    type: object
    properties:
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the robot.
      name:
        $ref: '#/definitions/Name'
        description: The name of the robot.
      fleetArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the fleet.
      status:
        $ref: '#/definitions/RobotStatus'
        description: The status of the robot.
      greenGrassGroupId:
        $ref: '#/definitions/Id'
        description: The Greengrass group associated with the robot.
      createdAt:
        $ref: '#/definitions/CreatedAt'
        description: 'The time, in milliseconds since the epoch, when the robot was created.'
      architecture:
        $ref: '#/definitions/Architecture'
        description: The architecture of the robot.
      lastDeploymentJob:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the last deployment job.
      lastDeploymentTime:
        $ref: '#/definitions/CreatedAt'
        description: The time of the last deployment.
    description: Information about a robot.
  RobotApplicationNames:
    type: array
    items:
      $ref: '#/definitions/Name'
    minItems: 1
    maxItems: 1
  RobotApplicationSummary:
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the robot application.
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the robot.
      version:
        $ref: '#/definitions/Version'
        description: The version of the robot application.
      lastUpdatedAt:
        $ref: '#/definitions/LastUpdatedAt'
        description: 'The time, in milliseconds since the epoch, when the robot application was last updated.'
      robotSoftwareSuite:
        $ref: '#/definitions/RobotSoftwareSuite'
        description: Information about a robot software suite.
    description: Summary information for a robot application.
  RobotDeployment:
    type: object
    properties:
      arn:
        $ref: '#/definitions/Arn'
        description: The robot deployment Amazon Resource Name (ARN).
      deploymentStartTime:
        $ref: '#/definitions/CreatedAt'
        description: 'The time, in milliseconds since the epoch, when the deployment was started.'
      deploymentFinishTime:
        $ref: '#/definitions/CreatedAt'
        description: 'The time, in milliseconds since the epoch, when the deployment finished.'
      status:
        $ref: '#/definitions/RobotStatus'
        description: The status of the robot deployment.
      progressDetail:
        $ref: '#/definitions/ProgressDetail'
        description: Information about how the deployment is progressing.
      failureReason:
        $ref: '#/definitions/GenericString'
        description: A short description of the reason why the robot deployment failed.
      failureCode:
        $ref: '#/definitions/DeploymentJobErrorCode'
        description: The robot deployment failure code.
    description: Information about a robot deployment.
  S3Etag:
    type: string
  SimulationApplicationNames:
    type: array
    items:
      $ref: '#/definitions/Name'
    minItems: 1
    maxItems: 1
  SimulationApplicationSummary:
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the simulation application.
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the simulation application.
      version:
        $ref: '#/definitions/Version'
        description: The version of the simulation application.
      lastUpdatedAt:
        $ref: '#/definitions/LastUpdatedAt'
        description: 'The time, in milliseconds since the epoch, when the simulation application was last updated.'
      robotSoftwareSuite:
        $ref: '#/definitions/RobotSoftwareSuite'
        description: Information about a robot software suite.
      simulationSoftwareSuite:
        $ref: '#/definitions/SimulationSoftwareSuite'
        description: Information about a simulation software suite.
    description: Summary information for a simulation application.
  SimulationJob:
    type: object
    properties:
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the simulation job.
      name:
        $ref: '#/definitions/Name'
        description: The name of the simulation job.
      status:
        $ref: '#/definitions/SimulationJobStatus'
        description: Status of the simulation job.
      lastStartedAt:
        $ref: '#/definitions/LastStartedAt'
        description: 'The time, in milliseconds since the epoch, when the simulation job was last started.'
      lastUpdatedAt:
        $ref: '#/definitions/LastUpdatedAt'
        description: 'The time, in milliseconds since the epoch, when the simulation job was last updated.'
      failureBehavior:
        $ref: '#/definitions/FailureBehavior'
        description: <p>The failure behavior the simulation job.</p> <dl> <dt>Continue</dt> <dd> <p>Restart the simulation job in the same host instance.</p> </dd> <dt>Fail</dt> <dd> <p>Stop the simulation job and terminate the instance.</p> </dd> </dl>
      failureCode:
        $ref: '#/definitions/SimulationJobErrorCode'
        description: The failure code of the simulation job if it failed.
      failureReason:
        $ref: '#/definitions/GenericString'
        description: The reason why the simulation job failed.
      clientRequestToken:
        $ref: '#/definitions/ClientRequestToken'
        description: A unique identifier for this <code>SimulationJob</code> request.
      outputLocation:
        $ref: '#/definitions/OutputLocation'
        description: Location for output files generated by the simulation job.
      maxJobDurationInSeconds:
        $ref: '#/definitions/JobDuration'
        description: 'The maximum simulation job duration in seconds. The value must be 8 days (691,200 seconds) or less.'
      simulationTimeMillis:
        $ref: '#/definitions/SimulationTimeMillis'
        description: The simulation job execution duration in milliseconds.
      iamRole:
        $ref: '#/definitions/IamRole'
        description: 'The IAM role that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job. '
      robotApplications:
        $ref: '#/definitions/RobotApplicationConfigs'
        description: A list of robot applications.
      simulationApplications:
        $ref: '#/definitions/SimulationApplicationConfigs'
        description: A list of simulation applications.
      tags:
        $ref: '#/definitions/TagMap'
        description: A map that contains tag keys and tag values that are attached to the simulation job.
      vpcConfig:
        $ref: '#/definitions/VPCConfigResponse'
        description: VPC configuration information.
    description: Information about a simulation job.
  SimulationJobSummary:
    type: object
    properties:
      arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the simulation job.
      lastUpdatedAt:
        $ref: '#/definitions/LastUpdatedAt'
        description: 'The time, in milliseconds since the epoch, when the simulation job was last updated.'
      name:
        $ref: '#/definitions/Name'
        description: The name of the simulation job.
      status:
        $ref: '#/definitions/SimulationJobStatus'
        description: The status of the simulation job.
      simulationApplicationNames:
        $ref: '#/definitions/SimulationApplicationNames'
        description: A list of simulation job simulation application names.
      robotApplicationNames:
        $ref: '#/definitions/RobotApplicationNames'
        description: A list of simulation job robot application names.
    description: Summary information for a simulation job.
  Source:
    type: object
    properties:
      s3Bucket:
        $ref: '#/definitions/S3Bucket'
        description: The s3 bucket name.
      s3Key:
        $ref: '#/definitions/S3Key'
        description: The s3 object key.
      etag:
        $ref: '#/definitions/S3Etag'
        description: A hash of the object specified by <code>s3Bucket</code> and <code>s3Key</code>.
      architecture:
        $ref: '#/definitions/Architecture'
        description: The taget processor architecture for the application.
    description: Information about a source.
  SyncDeploymentJobRequest:
    type: object
    required:
      - clientRequestToken
      - fleet
    properties:
      clientRequestToken:
        $ref: '#/definitions/ClientRequestToken'
        description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
      fleet:
        $ref: '#/definitions/Arn'
        description: The target fleet for the synchronization.
  TagKeyList:
    type: array
    items:
      $ref: '#/definitions/TagKey'
  TagResourceRequest:
    type: object
    required:
      - tags
    properties:
      tags:
        $ref: '#/definitions/TagMap'
        description: A map that contains tag keys and tag values that are attached to the resource.
  UntagResourceRequest:
    type: object
    properties: {}
  UpdateRobotApplicationRequest:
    type: object
    required:
      - application
      - sources
      - robotSoftwareSuite
    properties:
      application:
        $ref: '#/definitions/Arn'
        description: The application information for the robot application.
      sources:
        $ref: '#/definitions/SourceConfigs'
        description: The sources of the robot application.
      robotSoftwareSuite:
        $ref: '#/definitions/RobotSoftwareSuite'
        description: The robot software suite used by the robot application.
      currentRevisionId:
        $ref: '#/definitions/RevisionId'
        description: The revision id for the robot application.
  UpdateSimulationApplicationRequest:
    type: object
    required:
      - application
      - sources
      - simulationSoftwareSuite
      - robotSoftwareSuite
      - renderingEngine
    properties:
      application:
        $ref: '#/definitions/Arn'
        description: The application information for the simulation application.
      sources:
        $ref: '#/definitions/SourceConfigs'
        description: The sources of the simulation application.
      simulationSoftwareSuite:
        $ref: '#/definitions/SimulationSoftwareSuite'
        description: The simulation software suite used by the simulation application.
      robotSoftwareSuite:
        $ref: '#/definitions/RobotSoftwareSuite'
        description: Information about the robot software suite.
      renderingEngine:
        $ref: '#/definitions/RenderingEngine'
        description: The rendering engine for the simulation application.
      currentRevisionId:
        $ref: '#/definitions/RevisionId'
        description: The revision id for the robot application.
