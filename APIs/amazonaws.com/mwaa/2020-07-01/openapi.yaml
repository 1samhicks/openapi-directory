openapi: 3.0.0
info:
  version: '2020-07-01'
  x-release: v4
  title: AmazonMWAA
  description: '<p><fullname>Amazon Managed Workflows for Apache Airflow</fullname> <p>This section contains the Amazon Managed Workflows for Apache Airflow (MWAA) API reference documentation. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/what-is-mwaa.html">What Is Amazon MWAA?</a>.</p></p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: mwaa
  x-aws-signingName: airflow
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mwaa-2020-07-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/airflow/'
servers:
  - url: 'http://airflow.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AmazonMWAA multi-region endpoint
  - url: 'https://airflow.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AmazonMWAA multi-region endpoint
  - url: 'http://airflow.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AmazonMWAA endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://airflow.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AmazonMWAA endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/clitoken/{Name}':
    post:
      operationId: CreateCliToken
      description: Create a CLI token to use Airflow CLI.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCliTokenResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: Name
          in: path
          required: true
          description: Create a CLI token request for a MWAA environment.
          schema:
            type: string
            pattern: '^[a-zA-Z][0-9a-zA-Z-_]*$'
            minLength: 1
            maxLength: 80
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/environments/{Name}':
    put:
      operationId: CreateEnvironment
      description: JSON blob that describes the environment to create.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEnvironmentOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: Name
          in: path
          required: true
          description: The name of your MWAA environment.
          schema:
            type: string
            pattern: '^[a-zA-Z][0-9a-zA-Z-_]*$'
            minLength: 1
            maxLength: 80
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DagS3Path
                - ExecutionRoleArn
                - NetworkConfiguration
                - SourceBucketArn
              properties:
                AirflowConfigurationOptions:
                  description: 'The Apache Airflow configuration setting you want to override in your environment. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-env-variables.html">Environment configuration</a>.'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/ConfigValue'
                AirflowVersion:
                  description: The Apache Airflow version you want to use for your environment.
                  type: string
                  pattern: '^[0-9a-z.]+$'
                  minLength: 1
                  maxLength: 32
                DagS3Path:
                  description: 'The relative path to the DAG folder on your Amazon S3 storage bucket. For example, <code>dags</code>. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import.html">Importing DAGs on Amazon MWAA</a>.'
                  type: string
                  pattern: .*
                  minLength: 1
                  maxLength: 1024
                EnvironmentClass:
                  description: The environment class you want to use for your environment. The environment class determines the size of the containers and database used for your Apache Airflow services.
                  type: string
                  minLength: 1
                  maxLength: 1024
                ExecutionRoleArn:
                  description: 'The Amazon Resource Name (ARN) of the execution role for your environment. An execution role is an AWS Identity and Access Management (IAM) role that grants MWAA permission to access AWS services and resources used by your environment. For example, <code>arn:aws:iam::123456789:role/my-execution-role</code>. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/manage-access.html">Managing access to Amazon Managed Workflows for Apache Airflow</a>.'
                  type: string
                  pattern: '^arn:aws(-[a-z]+)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$'
                  minLength: 1
                  maxLength: 1224
                KmsKey:
                  description: 'The AWS Key Management Service (KMS) key to encrypt and decrypt the data in your environment. You can use an AWS KMS key managed by MWAA, or a custom KMS key (advanced). For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html?icmpid=docs_console_unmapped#master_keys">Customer master keys (CMKs)</a> in the AWS KMS developer guide.'
                  type: string
                  pattern: '^(((arn:aws(-[a-z]+)?:kms:[a-z]{2}-[a-z]+-\d:\d+:)?key\/)?[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}|(arn:aws(-[a-z]+)?:kms:[a-z]{2}-[a-z]+-\d:\d+:)?alias/.+)$'
                  minLength: 1
                  maxLength: 1224
                LoggingConfiguration:
                  description: The Logging Configuration of your Amazon MWAA environment.
                  type: object
                  properties:
                    DagProcessingLogs:
                      $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
                    SchedulerLogs:
                      $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
                    TaskLogs:
                      $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
                    WebserverLogs:
                      $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
                    WorkerLogs:
                      $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
                MaxWorkers:
                  description: 'The maximum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers and the Fargate containers that run your tasks up to the number you specify in this field. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra containers leaving the one worker that is included with your environment.'
                  type: integer
                  minimum: 1
                MinWorkers:
                  description: 'The minimum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers and the Fargate containers that run your tasks up to the number you specify in the <code>MaxWorkers</code> field. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra containers leaving the worker count you specify in the <code>MinWorkers</code> field.'
                  type: integer
                  minimum: 1
                NetworkConfiguration:
                  description: Provide the security group and subnet IDs for the workers and scheduler.
                  type: object
                  properties:
                    SecurityGroupIds:
                      allOf:
                        - $ref: '#/components/schemas/SecurityGroupList'
                        - description: 'A JSON list of 1 or more security groups IDs by name, in the same VPC as the subnets.'
                    SubnetIds:
                      allOf:
                        - $ref: '#/components/schemas/SubnetList'
                        - description: 'Provide a JSON list of 2 subnet IDs by name. These must be private subnets, in the same VPC, in two different availability zones.'
                PluginsS3ObjectVersion:
                  description: The <code>plugins.zip</code> file version you want to use.
                  type: string
                  minLength: 1
                  maxLength: 1024
                PluginsS3Path:
                  description: 'The relative path to the <code>plugins.zip</code> file on your Amazon S3 storage bucket. For example, <code>plugins.zip</code>. If a relative path is provided in the request, then <code>PluginsS3ObjectVersion</code> is required. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import.html">Importing DAGs on Amazon MWAA</a>.'
                  type: string
                  pattern: .*
                  minLength: 1
                  maxLength: 1024
                RequirementsS3ObjectVersion:
                  description: The <code>requirements.txt</code> file version you want to use.
                  type: string
                  minLength: 1
                  maxLength: 1024
                RequirementsS3Path:
                  description: 'The relative path to the <code>requirements.txt</code> file on your Amazon S3 storage bucket. For example, <code>requirements.txt</code>. If a relative path is provided in the request, then <code>RequirementsS3ObjectVersion</code> is required. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import.html">Importing DAGs on Amazon MWAA</a>.'
                  type: string
                  pattern: .*
                  minLength: 1
                  maxLength: 1024
                SourceBucketArn:
                  description: 'The Amazon Resource Name (ARN) of your Amazon S3 storage bucket. For example, <code>arn:aws:s3:::airflow-mybucketname</code>.'
                  type: string
                  pattern: '^arn:aws(-[a-z]+)?:s3:::[a-z0-9.\-]+$'
                  minLength: 1
                  maxLength: 1224
                Tags:
                  description: 'The metadata tags you want to attach to your environment. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging AWS resources</a>.'
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                WebserverAccessMode:
                  description: 'The networking access of your Apache Airflow web server. A public network allows your Airflow UI to be accessed over the Internet by users granted access in your IAM policy. A private network limits access of your Airflow UI to users within your VPC. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/vpc-mwaa.html">Creating the VPC network for a MWAA environment</a>.'
                  type: string
                  enum:
                    - PRIVATE_ONLY
                    - PUBLIC_ONLY
                WeeklyMaintenanceWindowStart:
                  description: The day and time you want MWAA to start weekly maintenance updates on your environment.
                  type: string
                  pattern: '(MON|TUE|WED|THU|FRI|SAT|SUN):([01]\d|2[0-3]):(00|30)'
                  minLength: 1
                  maxLength: 9
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteEnvironment
      description: Delete an existing environment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEnvironmentOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: Name
          in: path
          required: true
          description: The name of the environment to delete.
          schema:
            type: string
            pattern: '^[a-zA-Z][0-9a-zA-Z-_]*$'
            minLength: 1
            maxLength: 80
    get:
      operationId: GetEnvironment
      description: Get details of an existing environment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEnvironmentOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: Name
          in: path
          required: true
          description: The name of the environment to retrieve.
          schema:
            type: string
            pattern: '^[a-zA-Z][0-9a-zA-Z-_]*$'
            minLength: 1
            maxLength: 80
    patch:
      operationId: UpdateEnvironment
      description: Update an MWAA environment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEnvironmentOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: Name
          in: path
          required: true
          description: The name of your Amazon MWAA environment that you wish to update.
          schema:
            type: string
            pattern: '^[a-zA-Z][0-9a-zA-Z-_]*$'
            minLength: 1
            maxLength: 80
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AirflowConfigurationOptions:
                  description: The Airflow Configuration Options to update of your Amazon MWAA environment.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/ConfigValue'
                AirflowVersion:
                  description: The Airflow Version to update of your Amazon MWAA environment.
                  type: string
                  pattern: '^[0-9a-z.]+$'
                  minLength: 1
                  maxLength: 32
                DagS3Path:
                  description: The Dags folder S3 Path to update of your Amazon MWAA environment.
                  type: string
                  pattern: .*
                  minLength: 1
                  maxLength: 1024
                EnvironmentClass:
                  description: The Environment Class to update of your Amazon MWAA environment.
                  type: string
                  minLength: 1
                  maxLength: 1024
                ExecutionRoleArn:
                  description: The Executio Role ARN to update of your Amazon MWAA environment.
                  type: string
                  pattern: '^arn:aws(-[a-z]+)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$'
                  minLength: 1
                  maxLength: 1224
                LoggingConfiguration:
                  description: The Logging Configuration of your Amazon MWAA environment.
                  type: object
                  properties:
                    DagProcessingLogs:
                      $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
                    SchedulerLogs:
                      $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
                    TaskLogs:
                      $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
                    WebserverLogs:
                      $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
                    WorkerLogs:
                      $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
                MaxWorkers:
                  description: The maximum number of workers to update of your Amazon MWAA environment.
                  type: integer
                  minimum: 1
                MinWorkers:
                  description: The minimum number of workers to update of your Amazon MWAA environment.
                  type: integer
                  minimum: 1
                NetworkConfiguration:
                  description: Provide the security group and subnet IDs for the workers and scheduler.
                  type: object
                  properties:
                    SecurityGroupIds:
                      allOf:
                        - $ref: '#/components/schemas/SecurityGroupList'
                        - description: 'Provide a JSON list of 1 or more security groups IDs by name, in the same VPC as the subnets.'
                PluginsS3ObjectVersion:
                  description: The Plugins.zip S3 Object Version to update of your Amazon MWAA environment.
                  type: string
                  minLength: 1
                  maxLength: 1024
                PluginsS3Path:
                  description: The Plugins.zip S3 Path to update of your Amazon MWAA environment.
                  type: string
                  pattern: .*
                  minLength: 1
                  maxLength: 1024
                RequirementsS3ObjectVersion:
                  description: The Requirements.txt S3 ObjectV ersion to update of your Amazon MWAA environment.
                  type: string
                  minLength: 1
                  maxLength: 1024
                RequirementsS3Path:
                  description: The Requirements.txt S3 Path to update of your Amazon MWAA environment.
                  type: string
                  pattern: .*
                  minLength: 1
                  maxLength: 1024
                SourceBucketArn:
                  description: The S3 Source Bucket ARN to update of your Amazon MWAA environment.
                  type: string
                  pattern: '^arn:aws(-[a-z]+)?:s3:::[a-z0-9.\-]+$'
                  minLength: 1
                  maxLength: 1224
                WebserverAccessMode:
                  description: The Webserver Access Mode to update of your Amazon MWAA environment.
                  type: string
                  enum:
                    - PRIVATE_ONLY
                    - PUBLIC_ONLY
                WeeklyMaintenanceWindowStart:
                  description: The Weekly Maintenance Window Start to update of your Amazon MWAA environment.
                  type: string
                  pattern: '(MON|TUE|WED|THU|FRI|SAT|SUN):([01]\d|2[0-3]):(00|30)'
                  minLength: 1
                  maxLength: 9
  '/webtoken/{Name}':
    post:
      operationId: CreateWebLoginToken
      description: Create a JWT token to be used to login to Airflow Web UI with claims based Authentication.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWebLoginTokenResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: Name
          in: path
          required: true
          description: Create an Airflow Web UI login token request for a MWAA environment.
          schema:
            type: string
            pattern: '^[a-zA-Z][0-9a-zA-Z-_]*$'
            minLength: 1
            maxLength: 80
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /environments:
    get:
      operationId: ListEnvironments
      description: List Amazon MWAA Environments.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentsOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: MaxResults
          in: query
          required: false
          description: The maximum results when listing MWAA environments.
          schema:
            type: integer
            minimum: 1
            maximum: 25
        - name: NextToken
          in: query
          required: false
          description: The Next Token when listing MWAA environments.
          schema:
            type: string
            minLength: 0
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{ResourceArn}':
    get:
      operationId: ListTagsForResource
      description: List the tags for MWAA environments.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The ARN of the MWAA environment.
          schema:
            type: string
            pattern: '^arn:aws(-[a-z]+)?:airflow:[a-z0-9\-]+:\d{12}:environment/\w+'
            minLength: 1
            maxLength: 1224
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: Add tag to the MWAA environments.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The tag resource ARN of the MWAA environments.
          schema:
            type: string
            pattern: '^arn:aws(-[a-z]+)?:airflow:[a-z0-9\-]+:\d{12}:environment/\w+'
            minLength: 1
            maxLength: 1224
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: The tag resource tag of the MWAA environments.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
  '/metrics/environments/{EnvironmentName}':
    post:
      operationId: PublishMetrics
      description: An operation for publishing metrics from the customers to the Ops plane.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishMetricsOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: EnvironmentName
          in: path
          required: true
          description: Publishes environment metric data to Amazon CloudWatch.
          schema:
            type: string
            pattern: '^[a-zA-Z][0-9a-zA-Z-_]*$'
            minLength: 1
            maxLength: 80
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - MetricData
              properties:
                MetricData:
                  description: Publishes metric data points to Amazon CloudWatch. CloudWatch associates the data points with the specified metrica.
                  type: array
                  items:
                    $ref: '#/components/schemas/MetricDatum'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{ResourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Remove a tag from the MWAA environments.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The tag resource ARN of the MWAA environments.
          schema:
            type: string
            pattern: '^arn:aws(-[a-z]+)?:airflow:[a-z0-9\-]+:\d{12}:environment/\w+'
            minLength: 1
            maxLength: 1224
        - name: tagKeys
          in: query
          required: true
          description: The tag resource key of the MWAA environments.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 0
            maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateCliTokenResponse:
      type: object
      properties:
        CliToken:
          allOf:
            - $ref: '#/components/schemas/SyntheticCreateCliTokenResponseToken'
            - description: Create an Airflow CLI login token response for the provided JWT token.
        WebServerHostname:
          allOf:
            - $ref: '#/components/schemas/Hostname'
            - description: Create an Airflow CLI login token response for the provided webserver hostname.
    ResourceNotFoundException: {}
    CreateEnvironmentOutput:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/EnvironmentArn'
            - description: The resulting Amazon MWAA envirnonment ARN.
    ConfigValue:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 256
    ModuleLoggingConfigurationInput:
      type: object
      required:
        - Enabled
        - LogLevel
      properties:
        Enabled:
          allOf:
            - $ref: '#/components/schemas/LoggingEnabled'
            - description: Defines that the logging module is enabled.
        LogLevel:
          allOf:
            - $ref: '#/components/schemas/LoggingLevel'
            - description: 'Defines the log level, which can be CRITICAL, ERROR, WARNING, or INFO.'
      description: 'A JSON blob that provides configuration to use for logging with respect to the various Apache Airflow services: DagProcessingLogs, SchedulerLogs, TaskLogs, WebserverLogs, and WorkerLogs.'
    SecurityGroupList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      minItems: 1
      maxItems: 5
    SubnetList:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
      minItems: 2
      maxItems: 2
    TagValue:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 1
      maxLength: 256
    ValidationException: {}
    InternalServerException: {}
    CreateWebLoginTokenResponse:
      type: object
      properties:
        WebServerHostname:
          allOf:
            - $ref: '#/components/schemas/Hostname'
            - description: Create an Airflow Web UI login token response for the provided webserver hostname.
        WebToken:
          allOf:
            - $ref: '#/components/schemas/SyntheticCreateWebLoginTokenResponseToken'
            - description: Create an Airflow Web UI login token response for the provided JWT token.
    AccessDeniedException: {}
    DeleteEnvironmentOutput:
      type: object
      properties: {}
    GetEnvironmentOutput:
      type: object
      properties:
        Environment:
          allOf:
            - $ref: '#/components/schemas/Environment'
            - description: A JSON blob with environment details.
    ListEnvironmentsOutput:
      type: object
      required:
        - Environments
      properties:
        Environments:
          allOf:
            - $ref: '#/components/schemas/EnvironmentList'
            - description: The list of Amazon MWAA Environments.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The Next Token when listing MWAA environments.
    ListTagsForResourceOutput:
      type: object
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The tags of the MWAA environments.
    PublishMetricsOutput:
      type: object
      properties: {}
    MetricDatum:
      type: object
      required:
        - MetricName
        - Timestamp
      properties:
        Dimensions:
          allOf:
            - $ref: '#/components/schemas/Dimensions'
            - description: Internal only API.
        MetricName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Internal only API.
        StatisticValues:
          allOf:
            - $ref: '#/components/schemas/StatisticSet'
            - description: Internal only API.
        Timestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: Internal only API.
        Unit:
          $ref: '#/components/schemas/Unit'
        Value:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: Internal only API.
      description: Internal only API.
    TagResourceOutput:
      type: object
      properties: {}
    UntagResourceOutput:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 1
      maxLength: 128
    UpdateEnvironmentOutput:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/EnvironmentArn'
            - description: The ARN to update of your Amazon MWAA environment.
    AirflowConfigurationOptions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ConfigValue'
    AirflowVersion:
      type: string
      pattern: '^[0-9a-z.]+$'
      minLength: 1
      maxLength: 32
    CloudWatchLogGroupArn:
      type: string
      pattern: '^arn:aws(-[a-z]+)?:logs:[a-z0-9\-]+:\d{12}:log-group:\w+'
      minLength: 1
      maxLength: 1224
    ConfigKey:
      type: string
      pattern: '^[a-z]+([a-z._]*[a-z]+)?$'
      minLength: 1
      maxLength: 64
    EnvironmentName:
      type: string
      pattern: '^[a-zA-Z][0-9a-zA-Z-_]*$'
      minLength: 1
      maxLength: 80
    CreateCliTokenRequest:
      type: object
      title: CreateCliTokenRequest
      properties: {}
    SyntheticCreateCliTokenResponseToken:
      type: string
      format: password
    Hostname:
      type: string
      pattern: '^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$'
      minLength: 1
      maxLength: 255
    SyntheticCreateEnvironmentInputAirflowConfigurationOptions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ConfigValue'
    RelativePath:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1024
    EnvironmentClass:
      type: string
      minLength: 1
      maxLength: 1024
    IamRoleArn:
      type: string
      pattern: '^arn:aws(-[a-z]+)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$'
      minLength: 1
      maxLength: 1224
    KmsKey:
      type: string
      pattern: '^(((arn:aws(-[a-z]+)?:kms:[a-z]{2}-[a-z]+-\d:\d+:)?key\/)?[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}|(arn:aws(-[a-z]+)?:kms:[a-z]{2}-[a-z]+-\d:\d+:)?alias/.+)$'
      minLength: 1
      maxLength: 1224
    LoggingConfigurationInput:
      type: object
      properties:
        DagProcessingLogs:
          $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
        SchedulerLogs:
          $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
        TaskLogs:
          $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
        WebserverLogs:
          $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
        WorkerLogs:
          $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
      description: The Logging Configuration of your Amazon MWAA environment.
    MaxWorkers:
      type: integer
      minimum: 1
    MinWorkers:
      type: integer
      minimum: 1
    NetworkConfiguration:
      type: object
      properties:
        SecurityGroupIds:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupList'
            - description: 'A JSON list of 1 or more security groups IDs by name, in the same VPC as the subnets.'
        SubnetIds:
          allOf:
            - $ref: '#/components/schemas/SubnetList'
            - description: 'Provide a JSON list of 2 subnet IDs by name. These must be private subnets, in the same VPC, in two different availability zones.'
      description: Provide the security group and subnet IDs for the workers and scheduler.
    S3ObjectVersion:
      type: string
      minLength: 1
      maxLength: 1024
    S3BucketArn:
      type: string
      pattern: '^arn:aws(-[a-z]+)?:s3:::[a-z0-9.\-]+$'
      minLength: 1
      maxLength: 1224
    TagMap:
      type: object
      minProperties: 1
      maxProperties: 50
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    WebserverAccessMode:
      type: string
      enum:
        - PRIVATE_ONLY
        - PUBLIC_ONLY
    WeeklyMaintenanceWindowStart:
      type: string
      pattern: '(MON|TUE|WED|THU|FRI|SAT|SUN):([01]\d|2[0-3]):(00|30)'
      minLength: 1
      maxLength: 9
    CreateEnvironmentInput:
      type: object
      required:
        - DagS3Path
        - ExecutionRoleArn
        - NetworkConfiguration
        - SourceBucketArn
      title: CreateEnvironmentInput
      properties:
        AirflowConfigurationOptions:
          allOf:
            - $ref: '#/components/schemas/SyntheticCreateEnvironmentInputAirflowConfigurationOptions'
            - description: 'The Apache Airflow configuration setting you want to override in your environment. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-env-variables.html">Environment configuration</a>.'
        AirflowVersion:
          allOf:
            - $ref: '#/components/schemas/AirflowVersion'
            - description: The Apache Airflow version you want to use for your environment.
        DagS3Path:
          allOf:
            - $ref: '#/components/schemas/RelativePath'
            - description: 'The relative path to the DAG folder on your Amazon S3 storage bucket. For example, <code>dags</code>. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import.html">Importing DAGs on Amazon MWAA</a>.'
        EnvironmentClass:
          allOf:
            - $ref: '#/components/schemas/EnvironmentClass'
            - description: The environment class you want to use for your environment. The environment class determines the size of the containers and database used for your Apache Airflow services.
        ExecutionRoleArn:
          allOf:
            - $ref: '#/components/schemas/IamRoleArn'
            - description: 'The Amazon Resource Name (ARN) of the execution role for your environment. An execution role is an AWS Identity and Access Management (IAM) role that grants MWAA permission to access AWS services and resources used by your environment. For example, <code>arn:aws:iam::123456789:role/my-execution-role</code>. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/manage-access.html">Managing access to Amazon Managed Workflows for Apache Airflow</a>.'
        KmsKey:
          allOf:
            - $ref: '#/components/schemas/KmsKey'
            - description: 'The AWS Key Management Service (KMS) key to encrypt and decrypt the data in your environment. You can use an AWS KMS key managed by MWAA, or a custom KMS key (advanced). For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html?icmpid=docs_console_unmapped#master_keys">Customer master keys (CMKs)</a> in the AWS KMS developer guide.'
        LoggingConfiguration:
          allOf:
            - $ref: '#/components/schemas/LoggingConfigurationInput'
            - description: The Apache Airflow logs you want to send to Amazon CloudWatch Logs.
        MaxWorkers:
          allOf:
            - $ref: '#/components/schemas/MaxWorkers'
            - description: 'The maximum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers and the Fargate containers that run your tasks up to the number you specify in this field. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra containers leaving the one worker that is included with your environment.'
        MinWorkers:
          allOf:
            - $ref: '#/components/schemas/MinWorkers'
            - description: 'The minimum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers and the Fargate containers that run your tasks up to the number you specify in the <code>MaxWorkers</code> field. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra containers leaving the worker count you specify in the <code>MinWorkers</code> field.'
        NetworkConfiguration:
          allOf:
            - $ref: '#/components/schemas/NetworkConfiguration'
            - description: 'The VPC networking components you want to use for your environment. At least two private subnet identifiers and one VPC security group identifier are required to create an environment. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/vpc-mwaa.html">Creating the VPC network for a MWAA environment</a>.'
        PluginsS3ObjectVersion:
          allOf:
            - $ref: '#/components/schemas/S3ObjectVersion'
            - description: The <code>plugins.zip</code> file version you want to use.
        PluginsS3Path:
          allOf:
            - $ref: '#/components/schemas/RelativePath'
            - description: 'The relative path to the <code>plugins.zip</code> file on your Amazon S3 storage bucket. For example, <code>plugins.zip</code>. If a relative path is provided in the request, then <code>PluginsS3ObjectVersion</code> is required. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import.html">Importing DAGs on Amazon MWAA</a>.'
        RequirementsS3ObjectVersion:
          allOf:
            - $ref: '#/components/schemas/S3ObjectVersion'
            - description: The <code>requirements.txt</code> file version you want to use.
        RequirementsS3Path:
          allOf:
            - $ref: '#/components/schemas/RelativePath'
            - description: 'The relative path to the <code>requirements.txt</code> file on your Amazon S3 storage bucket. For example, <code>requirements.txt</code>. If a relative path is provided in the request, then <code>RequirementsS3ObjectVersion</code> is required. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import.html">Importing DAGs on Amazon MWAA</a>.'
        SourceBucketArn:
          allOf:
            - $ref: '#/components/schemas/S3BucketArn'
            - description: 'The Amazon Resource Name (ARN) of your Amazon S3 storage bucket. For example, <code>arn:aws:s3:::airflow-mybucketname</code>.'
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: 'The metadata tags you want to attach to your environment. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging AWS resources</a>.'
        WebserverAccessMode:
          allOf:
            - $ref: '#/components/schemas/WebserverAccessMode'
            - description: 'The networking access of your Apache Airflow web server. A public network allows your Airflow UI to be accessed over the Internet by users granted access in your IAM policy. A private network limits access of your Airflow UI to users within your VPC. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/vpc-mwaa.html">Creating the VPC network for a MWAA environment</a>.'
        WeeklyMaintenanceWindowStart:
          allOf:
            - $ref: '#/components/schemas/WeeklyMaintenanceWindowStart'
            - description: The day and time you want MWAA to start weekly maintenance updates on your environment.
      description: 'This section contains the Amazon Managed Workflows for Apache Airflow (MWAA) API reference documentation to create an environment. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/get-started.html">Get started with Amazon Managed Workflows for Apache Airflow</a>.'
    EnvironmentArn:
      type: string
      pattern: '^arn:aws(-[a-z]+)?:airflow:[a-z0-9\-]+:\d{12}:environment/\w+'
      minLength: 1
      maxLength: 1224
    CreateWebLoginTokenRequest:
      type: object
      title: CreateWebLoginTokenRequest
      properties: {}
    SyntheticCreateWebLoginTokenResponseToken:
      type: string
      format: password
    CreatedAt:
      type: string
      format: date-time
    DeleteEnvironmentInput:
      type: object
      title: DeleteEnvironmentInput
      properties: {}
    String:
      type: string
    Dimension:
      type: object
      required:
        - Name
        - Value
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Internal only API.
        Value:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Internal only API.
      description: Internal only API.
    Dimensions:
      type: array
      items:
        $ref: '#/components/schemas/Dimension'
    Double:
      type: number
      format: double
    LastUpdate:
      type: object
      properties:
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/UpdateCreatedAt'
            - description: Time that last update occurred.
        Error:
          allOf:
            - $ref: '#/components/schemas/UpdateError'
            - description: 'Error string of last update, if applicable.'
        Status:
          allOf:
            - $ref: '#/components/schemas/UpdateStatus'
            - description: 'Status of last update of SUCCESS, FAILED, CREATING, DELETING.'
      description: Last update information for the environment.
    LoggingConfiguration:
      type: object
      properties:
        DagProcessingLogs:
          $ref: '#/components/schemas/ModuleLoggingConfiguration'
        SchedulerLogs:
          $ref: '#/components/schemas/ModuleLoggingConfiguration'
        TaskLogs:
          $ref: '#/components/schemas/ModuleLoggingConfiguration'
        WebserverLogs:
          $ref: '#/components/schemas/ModuleLoggingConfiguration'
        WorkerLogs:
          $ref: '#/components/schemas/ModuleLoggingConfiguration'
      description: The Logging Configuration of your Amazon MWAA environment.
    EnvironmentStatus:
      type: string
      enum:
        - CREATING
        - CREATE_FAILED
        - AVAILABLE
        - UPDATING
        - DELETING
        - DELETED
        - UNAVAILABLE
        - UPDATE_FAILED
    WebserverUrl:
      type: string
      pattern: '^https://.+$'
      minLength: 1
      maxLength: 256
    Environment:
      type: object
      properties:
        AirflowConfigurationOptions:
          allOf:
            - $ref: '#/components/schemas/AirflowConfigurationOptions'
            - description: The Airflow Configuration Options of the Amazon MWAA Environment.
        AirflowVersion:
          allOf:
            - $ref: '#/components/schemas/AirflowVersion'
            - description: The AirflowV ersion of the Amazon MWAA Environment.
        Arn:
          allOf:
            - $ref: '#/components/schemas/EnvironmentArn'
            - description: The ARN of the Amazon MWAA Environment.
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/CreatedAt'
            - description: The Created At date of the Amazon MWAA Environment.
        DagS3Path:
          allOf:
            - $ref: '#/components/schemas/RelativePath'
            - description: The Dags S3 Path of the Amazon MWAA Environment.
        EnvironmentClass:
          allOf:
            - $ref: '#/components/schemas/EnvironmentClass'
            - description: The Environment Class (size) of the Amazon MWAA Environment.
        ExecutionRoleArn:
          allOf:
            - $ref: '#/components/schemas/IamRoleArn'
            - description: The Execution Role ARN of the Amazon MWAA Environment.
        KmsKey:
          allOf:
            - $ref: '#/components/schemas/KmsKey'
            - description: The Kms Key of the Amazon MWAA Environment.
        LastUpdate:
          $ref: '#/components/schemas/LastUpdate'
        LoggingConfiguration:
          allOf:
            - $ref: '#/components/schemas/LoggingConfiguration'
            - description: The Logging Configuration of the Amazon MWAA Environment.
        MaxWorkers:
          allOf:
            - $ref: '#/components/schemas/MaxWorkers'
            - description: The maximum number of workers to run in your Amazon MWAA Environment.
        MinWorkers:
          allOf:
            - $ref: '#/components/schemas/MinWorkers'
            - description: The minimum number of workers to run in your Amazon MWAA Environment.
        Name:
          allOf:
            - $ref: '#/components/schemas/EnvironmentName'
            - description: The name of the Amazon MWAA Environment.
        NetworkConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration'
        PluginsS3ObjectVersion:
          allOf:
            - $ref: '#/components/schemas/S3ObjectVersion'
            - description: The Plugins.zip S3 Object Version of the Amazon MWAA Environment.
        PluginsS3Path:
          allOf:
            - $ref: '#/components/schemas/RelativePath'
            - description: The Plugins.zip S3 Path of the Amazon MWAA Environment.
        RequirementsS3ObjectVersion:
          allOf:
            - $ref: '#/components/schemas/S3ObjectVersion'
            - description: The Requirements.txt file S3 Object Version of the Amazon MWAA Environment.
        RequirementsS3Path:
          allOf:
            - $ref: '#/components/schemas/RelativePath'
            - description: The Requirement.txt S3 Path of the Amazon MWAA Environment.
        ServiceRoleArn:
          allOf:
            - $ref: '#/components/schemas/IamRoleArn'
            - description: The Service Role ARN of the Amazon MWAA Environment.
        SourceBucketArn:
          allOf:
            - $ref: '#/components/schemas/S3BucketArn'
            - description: The Source S3 Bucket ARN of the Amazon MWAA Environment.
        Status:
          allOf:
            - $ref: '#/components/schemas/EnvironmentStatus'
            - description: The status of the Amazon MWAA Environment.
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The Tags of the Amazon MWAA Environment.
        WebserverAccessMode:
          allOf:
            - $ref: '#/components/schemas/WebserverAccessMode'
            - description: The Webserver Access Mode of the Amazon MWAA Environment (public or private only).
        WebserverUrl:
          allOf:
            - $ref: '#/components/schemas/WebserverUrl'
            - description: The Webserver URL of the Amazon MWAA Environment.
        WeeklyMaintenanceWindowStart:
          allOf:
            - $ref: '#/components/schemas/WeeklyMaintenanceWindowStart'
            - description: The Weekly Maintenance Window Start of the Amazon MWAA Environment.
      description: An Amazon MWAA environment.
    EnvironmentList:
      type: array
      items:
        $ref: '#/components/schemas/EnvironmentName'
    ErrorCode:
      type: string
    ErrorMessage:
      type: string
      pattern: ^.+$
      minLength: 1
      maxLength: 1024
    GetEnvironmentInput:
      type: object
      title: GetEnvironmentInput
      properties: {}
    Integer:
      type: integer
    UpdateCreatedAt:
      type: string
      format: date-time
    UpdateError:
      type: object
      properties:
        ErrorCode:
          allOf:
            - $ref: '#/components/schemas/ErrorCode'
            - description: Error code of update.
        ErrorMessage:
          allOf:
            - $ref: '#/components/schemas/ErrorMessage'
            - description: Error message of update.
      description: 'Error information of update, if applicable.'
    UpdateStatus:
      type: string
      enum:
        - SUCCESS
        - PENDING
        - FAILED
    ListEnvironmentsInputMaxResultsInteger:
      type: integer
      minimum: 1
      maximum: 25
    NextToken:
      type: string
      minLength: 0
      maxLength: 2048
    ListEnvironmentsInput:
      type: object
      title: ListEnvironmentsInput
      properties: {}
    ListTagsForResourceInput:
      type: object
      title: ListTagsForResourceInput
      properties: {}
    ModuleLoggingConfiguration:
      type: object
      properties:
        CloudWatchLogGroupArn:
          allOf:
            - $ref: '#/components/schemas/CloudWatchLogGroupArn'
            - description: Provides the ARN for the CloudWatch group where the logs will be published.
        Enabled:
          allOf:
            - $ref: '#/components/schemas/LoggingEnabled'
            - description: Defines that the logging module is enabled.
        LogLevel:
          allOf:
            - $ref: '#/components/schemas/LoggingLevel'
            - description: 'Defines the log level, which can be CRITICAL, ERROR, WARNING, or INFO.'
      description: 'A JSON blob that provides configuration to use for logging with respect to the various Apache Airflow services: DagProcessingLogs, SchedulerLogs, TaskLogs, WebserverLogs, and WorkerLogs.'
    LoggingEnabled:
      type: boolean
    LoggingLevel:
      type: string
      enum:
        - CRITICAL
        - ERROR
        - WARNING
        - INFO
        - DEBUG
    MetricData:
      type: array
      items:
        $ref: '#/components/schemas/MetricDatum'
    StatisticSet:
      type: object
      properties:
        Maximum:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: Internal only API.
        Minimum:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: Internal only API.
        SampleCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: Internal only API.
        Sum:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: Internal only API.
      description: Internal only API.
    Timestamp:
      type: string
      format: date-time
    Unit:
      type: string
      enum:
        - Seconds
        - Microseconds
        - Milliseconds
        - Bytes
        - Kilobytes
        - Megabytes
        - Gigabytes
        - Terabytes
        - Bits
        - Kilobits
        - Megabits
        - Gigabits
        - Terabits
        - Percent
        - Count
        - Bytes/Second
        - Kilobytes/Second
        - Megabytes/Second
        - Gigabytes/Second
        - Terabytes/Second
        - Bits/Second
        - Kilobits/Second
        - Megabits/Second
        - Gigabits/Second
        - Terabits/Second
        - Count/Second
        - None
      description: Unit
    PublishMetricsInput:
      type: object
      required:
        - MetricData
      title: PublishMetricsInput
      properties:
        MetricData:
          allOf:
            - $ref: '#/components/schemas/MetricData'
            - description: Publishes metric data points to Amazon CloudWatch. CloudWatch associates the data points with the specified metrica.
    SecurityGroupId:
      type: string
      pattern: '^sg-[a-zA-Z0-9\-._]+$'
      minLength: 1
      maxLength: 1024
    SubnetId:
      type: string
      pattern: '^subnet-[a-zA-Z0-9\-._]+$'
      minLength: 1
      maxLength: 1024
    SyntheticUpdateEnvironmentInputAirflowConfigurationOptions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ConfigValue'
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 0
      maxItems: 50
    TagResourceInput:
      type: object
      required:
        - Tags
      title: TagResourceInput
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The tag resource tag of the MWAA environments.
    UntagResourceInput:
      type: object
      title: UntagResourceInput
      properties: {}
    UpdateNetworkConfigurationInput:
      type: object
      required:
        - SecurityGroupIds
      properties:
        SecurityGroupIds:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupList'
            - description: 'Provide a JSON list of 1 or more security groups IDs by name, in the same VPC as the subnets.'
      description: Provide the security group and subnet IDs for the workers and scheduler.
    UpdateEnvironmentInput:
      type: object
      title: UpdateEnvironmentInput
      properties:
        AirflowConfigurationOptions:
          allOf:
            - $ref: '#/components/schemas/SyntheticUpdateEnvironmentInputAirflowConfigurationOptions'
            - description: The Airflow Configuration Options to update of your Amazon MWAA environment.
        AirflowVersion:
          allOf:
            - $ref: '#/components/schemas/AirflowVersion'
            - description: The Airflow Version to update of your Amazon MWAA environment.
        DagS3Path:
          allOf:
            - $ref: '#/components/schemas/RelativePath'
            - description: The Dags folder S3 Path to update of your Amazon MWAA environment.
        EnvironmentClass:
          allOf:
            - $ref: '#/components/schemas/EnvironmentClass'
            - description: The Environment Class to update of your Amazon MWAA environment.
        ExecutionRoleArn:
          allOf:
            - $ref: '#/components/schemas/IamRoleArn'
            - description: The Executio Role ARN to update of your Amazon MWAA environment.
        LoggingConfiguration:
          allOf:
            - $ref: '#/components/schemas/LoggingConfigurationInput'
            - description: The Logging Configuration to update of your Amazon MWAA environment.
        MaxWorkers:
          allOf:
            - $ref: '#/components/schemas/MaxWorkers'
            - description: The maximum number of workers to update of your Amazon MWAA environment.
        MinWorkers:
          allOf:
            - $ref: '#/components/schemas/MinWorkers'
            - description: The minimum number of workers to update of your Amazon MWAA environment.
        NetworkConfiguration:
          allOf:
            - $ref: '#/components/schemas/UpdateNetworkConfigurationInput'
            - description: The Network Configuration to update of your Amazon MWAA environment.
        PluginsS3ObjectVersion:
          allOf:
            - $ref: '#/components/schemas/S3ObjectVersion'
            - description: The Plugins.zip S3 Object Version to update of your Amazon MWAA environment.
        PluginsS3Path:
          allOf:
            - $ref: '#/components/schemas/RelativePath'
            - description: The Plugins.zip S3 Path to update of your Amazon MWAA environment.
        RequirementsS3ObjectVersion:
          allOf:
            - $ref: '#/components/schemas/S3ObjectVersion'
            - description: The Requirements.txt S3 ObjectV ersion to update of your Amazon MWAA environment.
        RequirementsS3Path:
          allOf:
            - $ref: '#/components/schemas/RelativePath'
            - description: The Requirements.txt S3 Path to update of your Amazon MWAA environment.
        SourceBucketArn:
          allOf:
            - $ref: '#/components/schemas/S3BucketArn'
            - description: The S3 Source Bucket ARN to update of your Amazon MWAA environment.
        WebserverAccessMode:
          allOf:
            - $ref: '#/components/schemas/WebserverAccessMode'
            - description: The Webserver Access Mode to update of your Amazon MWAA environment.
        WeeklyMaintenanceWindowStart:
          allOf:
            - $ref: '#/components/schemas/WeeklyMaintenanceWindowStart'
            - description: The Weekly Maintenance Window Start to update of your Amazon MWAA environment.
security:
  - hmac: []
