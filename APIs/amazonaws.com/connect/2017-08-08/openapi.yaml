openapi: 3.0.0
info:
  version: '2017-08-08'
  x-release: v4
  title: Amazon Connect Service
  description: '<p>Amazon Connect is a cloud-based contact center solution that makes it easy to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides rich metrics and real-time reporting that allow you to optimize contact routing. You can also resolve customer issues more efficiently by putting customers in touch with the right agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create and limits to the number of requests that you can make per second. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>To connect programmatically to an AWS service, you use an endpoint. For a list of Amazon Connect endpoints, see <a href="https://docs.aws.amazon.com/general/latest/gr/connect_region.html">Amazon Connect Endpoints</a>.</p> <note> <p>Working with contact flows? Check out the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect Flow language</a>.</p> </note>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: connect
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/connect-2017-08-08.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/connect/'
servers:
  - url: 'http://connect.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Connect multi-region endpoint
  - url: 'https://connect.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Connect multi-region endpoint
  - url: 'http://connect.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Connect endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://connect.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Connect endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/routing-profiles/{InstanceId}/{RoutingProfileId}/associate-queues':
    post:
      operationId: AssociateRoutingProfileQueues
      description: Associates a set of queues with a routing profile.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: RoutingProfileId
          in: path
          required: true
          description: The identifier of the routing profile.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - QueueConfigs
              properties:
                QueueConfigs:
                  description: The queues to associate with this routing profile.
                  type: array
                  items:
                    $ref: '#/components/schemas/RoutingProfileQueueConfig'
                  minItems: 1
                  maxItems: 10
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/contact-flows/{InstanceId}':
    put:
      operationId: CreateContactFlow
      description: '<p>Creates a contact flow for the specified Amazon Connect instance.</p> <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect Flow language</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateContactFlowResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidContactFlowException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidContactFlowException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '486':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '487':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - Type
                - Content
              properties:
                Name:
                  description: The name of the contact flow.
                  type: string
                  minLength: 1
                Type:
                  description: 'The type of the contact flow. For descriptions of the available types, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#contact-flow-types">Choose a Contact Flow Type</a> in the <i>Amazon Connect Administrator Guide</i>.'
                  type: string
                  enum:
                    - CONTACT_FLOW
                    - CUSTOMER_QUEUE
                    - CUSTOMER_HOLD
                    - CUSTOMER_WHISPER
                    - AGENT_HOLD
                    - AGENT_WHISPER
                    - OUTBOUND_WHISPER
                    - AGENT_TRANSFER
                    - QUEUE_TRANSFER
                Description:
                  description: 'The description of the contact flow. '
                  type: string
                Content:
                  description: 'The content of the contact flow. '
                  type: string
                Tags:
                  description: One or more tags.
                  type: object
                  minProperties: 1
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/routing-profiles/{InstanceId}':
    put:
      operationId: CreateRoutingProfile
      description: Creates a new routing profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRoutingProfileResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - Description
                - DefaultOutboundQueueId
                - MediaConcurrencies
              properties:
                Name:
                  description: The name of the routing profile. Must not be more than 127 characters.
                  type: string
                  minLength: 1
                  maxLength: 127
                Description:
                  description: Description of the routing profile. Must not be more than 250 characters.
                  type: string
                  minLength: 1
                  maxLength: 250
                DefaultOutboundQueueId:
                  description: The default outbound queue for the routing profile.
                  type: string
                QueueConfigs:
                  description: 'The inbound queues associated with the routing profile. If no queue is added, the agent can only make outbound calls.'
                  type: array
                  items:
                    $ref: '#/components/schemas/RoutingProfileQueueConfig'
                  minItems: 1
                  maxItems: 10
                MediaConcurrencies:
                  description: The channels agents can handle in the Contact Control Panel (CCP) for this routing profile.
                  type: array
                  items:
                    $ref: '#/components/schemas/MediaConcurrency'
                Tags:
                  description: One or more tags.
                  type: object
                  minProperties: 1
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/users/{InstanceId}':
    put:
      operationId: CreateUser
      description: '<p>Creates a user account for the specified Amazon Connect instance.</p> <p>For information about how to create user accounts using the Amazon Connect console, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/user-management.html">Add Users</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Username
                - PhoneConfig
                - SecurityProfileIds
                - RoutingProfileId
              properties:
                Username:
                  description: 'The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from [a-zA-Z0-9_-.\@]+.'
                  type: string
                  minLength: 1
                  maxLength: 100
                Password:
                  description: 'The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.'
                  type: string
                  pattern: '/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d\S]{8,64}$/'
                IdentityInfo:
                  description: Contains information about the identity of a user.
                  type: object
                  properties:
                    FirstName:
                      allOf:
                        - $ref: '#/components/schemas/AgentFirstName'
                        - description: The first name. This is required if you are using Amazon Connect or SAML for identity management.
                    LastName:
                      allOf:
                        - $ref: '#/components/schemas/AgentLastName'
                        - description: The last name. This is required if you are using Amazon Connect or SAML for identity management.
                    Email:
                      allOf:
                        - $ref: '#/components/schemas/Email'
                        - description: 'The email address. If you are using SAML for identity management and include this parameter, an error is returned.'
                PhoneConfig:
                  description: Contains information about the phone configuration settings for a user.
                  type: object
                  properties:
                    PhoneType:
                      allOf:
                        - $ref: '#/components/schemas/PhoneType'
                        - description: The phone type.
                    AutoAccept:
                      allOf:
                        - $ref: '#/components/schemas/AutoAccept'
                        - description: The Auto accept setting.
                    AfterContactWorkTimeLimit:
                      allOf:
                        - $ref: '#/components/schemas/AfterContactWorkTimeLimit'
                        - description: 'The After Call Work (ACW) timeout setting, in seconds.'
                    DeskPhoneNumber:
                      allOf:
                        - $ref: '#/components/schemas/PhoneNumber'
                        - description: The phone number for the user's desk phone.
                DirectoryUserId:
                  description: '<p>The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory.</p> <p>This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.</p>'
                  type: string
                SecurityProfileIds:
                  description: The identifier of the security profile for the user.
                  type: array
                  items:
                    $ref: '#/components/schemas/SecurityProfileId'
                  minItems: 1
                  maxItems: 10
                RoutingProfileId:
                  description: The identifier of the routing profile for the user.
                  type: string
                HierarchyGroupId:
                  description: The identifier of the hierarchy group for the user.
                  type: string
                Tags:
                  description: One or more tags.
                  type: object
                  minProperties: 1
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/users/{InstanceId}/{UserId}':
    delete:
      operationId: DeleteUser
      description: '<p>Deletes a user account from the specified Amazon Connect instance.</p> <p>For information about what happens to a user''s data when their account is deleted, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/delete-users.html">Delete Users from Your Amazon Connect Instance</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: UserId
          in: path
          required: true
          description: The identifier of the user.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeUser
      description: 'Describes the specified user account. You can find the instance ID in the console (it’s the final part of the ARN). The console does not display the user IDs. Instead, list the users and note the IDs provided in the output.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: UserId
          in: path
          required: true
          description: The identifier of the user account.
          schema:
            type: string
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
  '/contact-flows/{InstanceId}/{ContactFlowId}':
    get:
      operationId: DescribeContactFlow
      description: '<p>Describes the specified contact flow.</p> <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect Flow language</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeContactFlowResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ContactFlowNotPublishedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactFlowNotPublishedException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: ContactFlowId
          in: path
          required: true
          description: The identifier of the contact flow.
          schema:
            type: string
            maxLength: 500
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/routing-profiles/{InstanceId}/{RoutingProfileId}':
    get:
      operationId: DescribeRoutingProfile
      description: Describes the specified routing profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRoutingProfileResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: RoutingProfileId
          in: path
          required: true
          description: The identifier of the routing profile.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/user-hierarchy-groups/{InstanceId}/{HierarchyGroupId}':
    get:
      operationId: DescribeUserHierarchyGroup
      description: Describes the specified hierarchy group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserHierarchyGroupResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: HierarchyGroupId
          in: path
          required: true
          description: The identifier of the hierarchy group.
          schema:
            type: string
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/user-hierarchy-structure/{InstanceId}':
    get:
      operationId: DescribeUserHierarchyStructure
      description: Describes the hierarchy structure of the specified Amazon Connect instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserHierarchyStructureResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/routing-profiles/{InstanceId}/{RoutingProfileId}/disassociate-queues':
    post:
      operationId: DisassociateRoutingProfileQueues
      description: Disassociates a set of queues from a routing profile.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: RoutingProfileId
          in: path
          required: true
          description: The identifier of the routing profile.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - QueueReferences
              properties:
                QueueReferences:
                  description: The queues to disassociate from this routing profile.
                  type: array
                  items:
                    $ref: '#/components/schemas/RoutingProfileQueueReference'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/contact/attributes/{InstanceId}/{InitialContactId}':
    get:
      operationId: GetContactAttributes
      description: Retrieves the contact attributes for the specified contact.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContactAttributesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: InitialContactId
          in: path
          required: true
          description: The identifier of the initial contact.
          schema:
            type: string
            minLength: 1
            maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/metrics/current/{InstanceId}':
    post:
      operationId: GetCurrentMetricData
      description: '<p>Gets the real-time metric data from the specified Amazon Connect instance.</p> <p>For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html">Real-time Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCurrentMetricDataResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Filters
                - CurrentMetrics
              properties:
                Filters:
                  description: Contains the filter to apply when retrieving metrics.
                  type: object
                  properties:
                    Queues:
                      allOf:
                        - $ref: '#/components/schemas/Queues'
                        - description: The queues to use to filter the metrics. You can specify up to 100 queues per request.
                    Channels:
                      allOf:
                        - $ref: '#/components/schemas/Channels'
                        - description: The channel to use to filter the metrics.
                Groupings:
                  description: '<p>The grouping applied to the metrics returned. For example, when grouped by <code>QUEUE</code>, the metrics returned apply to each queue rather than aggregated for all queues. If you group by <code>CHANNEL</code>, you should include a Channels filter. Both <code>VOICE</code> and <code>CHAT</code> channels are supported.</p> <p>If no <code>Grouping</code> is included in the request, a summary of metrics is returned.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Grouping'
                  maxItems: 2
                CurrentMetrics:
                  description: '<p>The metrics to retrieve. Specify the name and unit for each metric. The following metrics are available. For a description of all the metrics, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html">Real-time Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <dl> <dt>AGENTS_AFTER_CONTACT_WORK</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#aftercallwork-real-time">ACW</a> </p> </dd> <dt>AGENTS_AVAILABLE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#available-real-time">Available</a> </p> </dd> <dt>AGENTS_ERROR</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#error-real-time">Error</a> </p> </dd> <dt>AGENTS_NON_PRODUCTIVE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#non-productive-time-real-time">NPT (Non-Productive Time)</a> </p> </dd> <dt>AGENTS_ON_CALL</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#on-call-real-time">On contact</a> </p> </dd> <dt>AGENTS_ON_CONTACT</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#on-call-real-time">On contact</a> </p> </dd> <dt>AGENTS_ONLINE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#online-real-time">Online</a> </p> </dd> <dt>AGENTS_STAFFED</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#staffed-real-time">Staffed</a> </p> </dd> <dt>CONTACTS_IN_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#in-queue-real-time">In queue</a> </p> </dd> <dt>CONTACTS_SCHEDULED</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#scheduled-real-time">Scheduled</a> </p> </dd> <dt>OLDEST_CONTACT_AGE</dt> <dd> <p>Unit: SECONDS</p> <p>When you use groupings, Unit says SECONDS but the Value is returned in MILLISECONDS. For example, if you get a response like this:</p> <p> <code>{ "Metric": { "Name": "OLDEST_CONTACT_AGE", "Unit": "SECONDS" }, "Value": 24113.0 </code>}</p> <p>The actual OLDEST_CONTACT_AGE is 24 seconds.</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#oldest-real-time">Oldest</a> </p> </dd> <dt>SLOTS_ACTIVE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#active-real-time">Active</a> </p> </dd> <dt>SLOTS_AVAILABLE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#availability-real-time">Availability</a> </p> </dd> </dl>'
                  type: array
                  items:
                    $ref: '#/components/schemas/CurrentMetric'
                NextToken:
                  description: <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p> <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use the token must use the same request parameters as the request that generated the token.</p>
                  type: string
                MaxResults:
                  description: The maximimum number of results to return per page.
                  type: integer
                  minimum: 1
                  maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/user/federate/{InstanceId}':
    get:
      operationId: GetFederationToken
      description: Retrieves a token for federation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFederationTokenResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: UserNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '485':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/metrics/historical/{InstanceId}':
    post:
      operationId: GetMetricData
      description: '<p>Gets historical metric data from the specified Amazon Connect instance.</p> <p>For a description of each historical metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMetricDataResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - StartTime
                - EndTime
                - Filters
                - HistoricalMetrics
              properties:
                StartTime:
                  description: '<p>The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the retrieval of historical metrics data. The time must be specified using a multiple of 5 minutes, such as 10:05, 10:10, 10:15.</p> <p>The start time cannot be earlier than 24 hours before the time of the request. Historical metrics are available only for 24 hours.</p>'
                  type: string
                  format: date-time
                EndTime:
                  description: '<p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the retrieval of historical metrics data. The time must be specified using an interval of 5 minutes, such as 11:00, 11:05, 11:10, and must be later than the start time timestamp.</p> <p>The time range between the start and end time must be less than 24 hours.</p>'
                  type: string
                  format: date-time
                Filters:
                  description: Contains the filter to apply when retrieving metrics.
                  type: object
                  properties:
                    Queues:
                      allOf:
                        - $ref: '#/components/schemas/Queues'
                        - description: The queues to use to filter the metrics. You can specify up to 100 queues per request.
                    Channels:
                      allOf:
                        - $ref: '#/components/schemas/Channels'
                        - description: The channel to use to filter the metrics.
                Groupings:
                  description: '<p>The grouping applied to the metrics returned. For example, when results are grouped by queue, the metrics returned are grouped by queue. The values returned apply to the metrics for each queue rather than aggregated for all queues.</p> <p>The only supported grouping is <code>QUEUE</code>.</p> <p>If no grouping is specified, a summary of metrics for all queues is returned.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Grouping'
                  maxItems: 2
                HistoricalMetrics:
                  description: '<p>The metrics to retrieve. Specify the name, unit, and statistic for each metric. The following historical metrics are available. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <dl> <dt>ABANDON_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>AFTER_CONTACT_WORK_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>API_CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CALLBACK_CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_ABANDONED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_AGENT_HUNG_UP_FIRST</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_CONSULTED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED_INCOMING</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED_OUTBOUND</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HOLD_ABANDONS</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_MISSED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_QUEUED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_IN</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_IN_FROM_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_OUT</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_OUT_FROM_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>HANDLE_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>HOLD_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>INTERACTION_AND_HOLD_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>INTERACTION_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>OCCUPANCY</dt> <dd> <p>Unit: PERCENT</p> <p>Statistic: AVG</p> </dd> <dt>QUEUE_ANSWER_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>QUEUED_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: MAX</p> </dd> <dt>SERVICE_LEVEL</dt> <dd> <p>Unit: PERCENT</p> <p>Statistic: AVG</p> <p>Threshold: Only "Less than" comparisons are supported, with the following service level thresholds: 15, 20, 25, 30, 45, 60, 90, 120, 180, 240, 300, 600</p> </dd> </dl>'
                  type: array
                  items:
                    $ref: '#/components/schemas/HistoricalMetric'
                NextToken:
                  description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
                  type: string
                MaxResults:
                  description: The maximimum number of results to return per page.
                  type: integer
                  minimum: 1
                  maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/contact-flows-summary/{InstanceId}':
    get:
      operationId: ListContactFlows
      description: '<p>Provides information about the contact flows for the specified Amazon Connect instance.</p> <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect Flow language</a>.</p> <p>For more information about contact flows, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-contact-flows.html">Contact Flows</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactFlowsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: contactFlowTypes
          in: query
          required: false
          description: The type of contact flow.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ContactFlowType'
            maxItems: 10
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximimum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/hours-of-operations-summary/{InstanceId}':
    get:
      operationId: ListHoursOfOperations
      description: '<p>Provides information about the hours of operation for the specified Amazon Connect instance.</p> <p>For more information about hours of operation, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/set-hours-operation.html">Set the Hours of Operation for a Queue</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHoursOfOperationsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximimum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/phone-numbers-summary/{InstanceId}':
    get:
      operationId: ListPhoneNumbers
      description: '<p>Provides information about the phone numbers for the specified Amazon Connect instance. </p> <p>For more information about phone numbers, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/contact-center-phone-number.html">Set Up Phone Numbers for Your Contact Center</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPhoneNumbersResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: phoneNumberTypes
          in: query
          required: false
          description: The type of phone number.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PhoneNumberType'
            maxItems: 2
        - name: phoneNumberCountryCodes
          in: query
          required: false
          description: The ISO country code.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PhoneNumberCountryCode'
            maxItems: 10
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximimum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/prompts-summary/{InstanceId}':
    get:
      operationId: ListPrompts
      description: Provides information about the prompts for the specified Amazon Connect instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPromptsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/queues-summary/{InstanceId}':
    get:
      operationId: ListQueues
      description: '<p>Provides information about the queues for the specified Amazon Connect instance.</p> <p>For more information about queues, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-queues-standard-and-agent.html">Queues: Standard and Agent</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListQueuesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: queueTypes
          in: query
          required: false
          description: The type of queue.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/QueueType'
            maxItems: 2
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximimum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/routing-profiles/{InstanceId}/{RoutingProfileId}/queues':
    get:
      operationId: ListRoutingProfileQueues
      description: List the queues associated with a routing profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoutingProfileQueuesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: RoutingProfileId
          in: path
          required: true
          description: The identifier of the routing profile.
          schema:
            type: string
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximimum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateRoutingProfileQueues
      description: Updates the properties associated with a set of queues for a routing profile.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: RoutingProfileId
          in: path
          required: true
          description: The identifier of the routing profile.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - QueueConfigs
              properties:
                QueueConfigs:
                  description: The queues to be updated for this routing profile.
                  type: array
                  items:
                    $ref: '#/components/schemas/RoutingProfileQueueConfig'
                  minItems: 1
                  maxItems: 10
  '/routing-profiles-summary/{InstanceId}':
    get:
      operationId: ListRoutingProfiles
      description: '<p>Provides summary information about the routing profiles for the specified Amazon Connect instance.</p> <p>For more information about routing profiles, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing.html">Routing Profiles</a> and <a href="https://docs.aws.amazon.com/connect/latest/adminguide/routing-profiles.html">Create a Routing Profile</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoutingProfilesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximimum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/security-profiles-summary/{InstanceId}':
    get:
      operationId: ListSecurityProfiles
      description: '<p>Provides summary information about the security profiles for the specified Amazon Connect instance.</p> <p>For more information about security profiles, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/connect-security-profiles.html">Security Profiles</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSecurityProfilesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximimum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: '<p>Lists the tags for the specified resource.</p> <p>For sample policies that use tags, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security_iam_id-based-policy-examples.html">Amazon Connect Identity-Based Policy Examples</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: '<p>Adds the specified tags to the specified resource.</p> <p>The supported resource types are users, routing profiles, and contact flows.</p> <p>For sample policies that use tags, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security_iam_id-based-policy-examples.html">Amazon Connect Identity-Based Policy Examples</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: 'One or more tags. For example, { "tags": {"key1":"value1", "key2":"value2"} }.'
                  type: object
                  minProperties: 1
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
  '/user-hierarchy-groups-summary/{InstanceId}':
    get:
      operationId: ListUserHierarchyGroups
      description: '<p>Provides summary information about the hierarchy groups for the specified Amazon Connect instance.</p> <p>For more information about agent hierarchies, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/agent-hierarchy.html">Set Up Agent Hierarchies</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserHierarchyGroupsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximimum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/users-summary/{InstanceId}':
    get:
      operationId: ListUsers
      description: Provides summary information about the users for the specified Amazon Connect instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximimum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /contact/resume-recording:
    post:
      operationId: ResumeContactRecording
      description: '<p>When a contact is being recorded, and the recording has been suspended using SuspendContactRecording, this API resumes recording the call.</p> <p>Only voice recordings are supported at this time.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResumeContactRecordingResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - InstanceId
                - ContactId
                - InitialContactId
              properties:
                InstanceId:
                  description: The identifier of the Amazon Connect instance.
                  type: string
                  minLength: 1
                  maxLength: 100
                ContactId:
                  description: The identifier of the contact.
                  type: string
                  minLength: 1
                  maxLength: 256
                InitialContactId:
                  description: The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
                  type: string
                  minLength: 1
                  maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /contact/chat:
    put:
      operationId: StartChatContact
      description: '<p>Initiates a contact flow to start a new chat for the customer. Response of this API provides a token required to obtain credentials from the <a href="https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html">CreateParticipantConnection</a> API in the Amazon Connect Participant Service.</p> <p>When a new chat contact is successfully created, clients need to subscribe to the participant’s connection for the created chat within 5 minutes. This is achieved by invoking <a href="https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html">CreateParticipantConnection</a> with WEBSOCKET and CONNECTION_CREDENTIALS. </p> <p>A 429 error occurs in two situations:</p> <ul> <li> <p>API rate limit is exceeded. API TPS throttling returns a <code>TooManyRequests</code> exception from the API Gateway.</p> </li> <li> <p>The <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html">quota for concurrent active chats</a> is exceeded. Active chat throttling returns a <code>LimitExceededException</code>.</p> </li> </ul> <p>For more information about how chat works, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/chat.html">Chat</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartChatContactResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - InstanceId
                - ContactFlowId
                - ParticipantDetails
              properties:
                InstanceId:
                  description: The identifier of the Amazon Connect instance.
                  type: string
                  minLength: 1
                  maxLength: 100
                ContactFlowId:
                  description: '<p>The identifier of the contact flow for initiating the chat. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the contact flow. On the contact flow page, under the name of the contact flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>'
                  type: string
                  maxLength: 500
                Attributes:
                  description: '<p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes. </p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/AttributeValue'
                ParticipantDetails:
                  description: The customer's details.
                  type: object
                  properties:
                    DisplayName:
                      allOf:
                        - $ref: '#/components/schemas/DisplayName'
                        - description: Display name of the participant.
                InitialMessage:
                  description: A chat message.
                  type: object
                  properties:
                    ContentType:
                      allOf:
                        - $ref: '#/components/schemas/ChatContentType'
                        - description: The type of the content. Supported types are text/plain.
                    Content:
                      allOf:
                        - $ref: '#/components/schemas/ChatContent'
                        - description: The content of the chat message.
                ClientToken:
                  description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
                  type: string
                  maxLength: 500
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /contact/start-recording:
    post:
      operationId: StartContactRecording
      description: '<p>This API starts recording the contact when the agent joins the call. StartContactRecording is a one-time action. For example, if you use StopContactRecording to stop recording an ongoing call, you can''t use StartContactRecording to restart it. For scenarios where the recording has started and you want to suspend and resume it, such as when collecting sensitive information (for example, a credit card number), use SuspendContactRecording and ResumeContactRecording.</p> <p>You can use this API to override the recording behavior configured in the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/set-recording-behavior.html">Set recording behavior</a> block.</p> <p>Only voice recordings are supported at this time.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartContactRecordingResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - InstanceId
                - ContactId
                - InitialContactId
                - VoiceRecordingConfiguration
              properties:
                InstanceId:
                  description: The identifier of the Amazon Connect instance.
                  type: string
                  minLength: 1
                  maxLength: 100
                ContactId:
                  description: The identifier of the contact.
                  type: string
                  minLength: 1
                  maxLength: 256
                InitialContactId:
                  description: The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
                  type: string
                  minLength: 1
                  maxLength: 256
                VoiceRecordingConfiguration:
                  description: Contains information about the recording configuration settings.
                  type: object
                  properties:
                    VoiceRecordingTrack:
                      allOf:
                        - $ref: '#/components/schemas/VoiceRecordingTrack'
                        - description: Identifies which track is being recorded.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /contact/outbound-voice:
    put:
      operationId: StartOutboundVoiceContact
      description: '<p>This API places an outbound call to a contact, and then initiates the contact flow. It performs the actions in the contact flow that''s specified (in <code>ContactFlowId</code>).</p> <p>Agents are not involved in initiating the outbound API (that is, dialing the contact). If the contact flow places an outbound call to a contact, and then puts the contact in queue, that''s when the call is routed to the agent, like any other inbound case.</p> <p>There is a 60 second dialing timeout for this operation. If the call is not connected after 60 seconds, it fails.</p> <note> <p>UK numbers with a 447 prefix are not allowed by default. Before you can dial these UK mobile numbers, you must submit a service quota increase request. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>. </p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartOutboundVoiceContactResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: DestinationNotAllowedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationNotAllowedException'
        '486':
          description: OutboundContactNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundContactNotPermittedException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DestinationPhoneNumber
                - ContactFlowId
                - InstanceId
              properties:
                DestinationPhoneNumber:
                  description: 'The phone number of the customer, in E.164 format.'
                  type: string
                ContactFlowId:
                  description: '<p>The identifier of the contact flow for the outbound call. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the contact flow. On the contact flow page, under the name of the contact flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>'
                  type: string
                  maxLength: 500
                InstanceId:
                  description: The identifier of the Amazon Connect instance.
                  type: string
                  minLength: 1
                  maxLength: 100
                ClientToken:
                  description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. The token is valid for 7 days after creation. If a contact is already started, the contact ID is returned. If the contact is disconnected, a new contact is started.'
                  type: string
                  maxLength: 500
                SourcePhoneNumber:
                  description: 'The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.'
                  type: string
                QueueId:
                  description: 'The queue for the call. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue defined in the contact flow is used. If you do not specify a queue, you must specify a source phone number.'
                  type: string
                Attributes:
                  description: '<p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes.</p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/AttributeValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /contact/stop:
    post:
      operationId: StopContact
      description: Ends the specified contact.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopContactResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ContactNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactNotFoundException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ContactId
                - InstanceId
              properties:
                ContactId:
                  description: The ID of the contact.
                  type: string
                  minLength: 1
                  maxLength: 256
                InstanceId:
                  description: The identifier of the Amazon Connect instance.
                  type: string
                  minLength: 1
                  maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /contact/stop-recording:
    post:
      operationId: StopContactRecording
      description: '<p>When a contact is being recorded, this API stops recording the call. StopContactRecording is a one-time action. If you use StopContactRecording to stop recording an ongoing call, you can''t use StartContactRecording to restart it. For scenarios where the recording has started and you want to suspend it for sensitive information (for example, to collect a credit card number), and then restart it, use SuspendContactRecording and ResumeContactRecording.</p> <p>Only voice recordings are supported at this time.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopContactRecordingResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - InstanceId
                - ContactId
                - InitialContactId
              properties:
                InstanceId:
                  description: The identifier of the Amazon Connect instance.
                  type: string
                  minLength: 1
                  maxLength: 100
                ContactId:
                  description: The identifier of the contact.
                  type: string
                  minLength: 1
                  maxLength: 256
                InitialContactId:
                  description: The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
                  type: string
                  minLength: 1
                  maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /contact/suspend-recording:
    post:
      operationId: SuspendContactRecording
      description: '<p>When a contact is being recorded, this API suspends recording the call. For example, you might suspend the call recording while collecting sensitive information, such as a credit card number. Then use ResumeContactRecording to restart recording. </p> <p>The period of time that the recording is suspended is filled with silence in the final recording. </p> <p>Only voice recordings are supported at this time.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuspendContactRecordingResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - InstanceId
                - ContactId
                - InitialContactId
              properties:
                InstanceId:
                  description: The identifier of the Amazon Connect instance.
                  type: string
                  minLength: 1
                  maxLength: 100
                ContactId:
                  description: The identifier of the contact.
                  type: string
                  minLength: 1
                  maxLength: 256
                InitialContactId:
                  description: The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
                  type: string
                  minLength: 1
                  maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Removes the specified tags from the specified resource.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
        - name: tagKeys
          in: query
          required: true
          description: The tag keys.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 1
            maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /contact/attributes:
    post:
      operationId: UpdateContactAttributes
      description: '<p>Creates or updates the contact attributes associated with the specified contact.</p> <p>You can add or update attributes for both ongoing and completed contacts. For example, you can update the customer''s name or the reason the customer called while the call is active, or add notes about steps that the agent took during the call that are displayed to the next agent that takes the call. You can also update attributes for a contact using data from your CRM application and save the data with the contact in Amazon Connect. You could also flag calls for additional analysis, such as legal review or identifying abusive callers.</p> <p>Contact attributes are available in Amazon Connect for 24 months, and are then deleted.</p> <p>This operation is also available in the Amazon Connect Flow language. See <a href="https://docs.aws.amazon.com/connect/latest/adminguide/contact-actions-updatecontactattributes.html">UpdateContactAttributes</a>.</p> <p> <b>Important:</b> You cannot use the operation to update attributes for contacts that occurred prior to the release of the API, September 12, 2018. You can update attributes only for contacts that started after the release of the API. If you attempt to update attributes for a contact that occurred prior to the release of the API, a 400 error is returned. This applies also to queued callbacks that were initiated prior to the release of the API but are still active in your instance.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateContactAttributesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - InitialContactId
                - InstanceId
                - Attributes
              properties:
                InitialContactId:
                  description: The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
                  type: string
                  minLength: 1
                  maxLength: 256
                InstanceId:
                  description: The identifier of the Amazon Connect instance.
                  type: string
                  minLength: 1
                  maxLength: 100
                Attributes:
                  description: '<p>The Amazon Connect attributes. These attributes can be accessed in contact flows just like any other contact attributes.</p> <p>You can have up to 32,768 UTF-8 bytes across all attributes for a contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/AttributeValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/contact-flows/{InstanceId}/{ContactFlowId}/content':
    post:
      operationId: UpdateContactFlowContent
      description: '<p>Updates the specified contact flow.</p> <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect Flow language</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidContactFlowException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidContactFlowException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: ContactFlowId
          in: path
          required: true
          description: The identifier of the contact flow.
          schema:
            type: string
            maxLength: 500
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Content
              properties:
                Content:
                  description: 'The JSON string that represents contact flow’s content. For an example, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language-example.html">Example contact flow in Amazon Connect Flow language</a> in the <i>Amazon Connect Administrator Guide</i>. '
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/contact-flows/{InstanceId}/{ContactFlowId}/name':
    post:
      operationId: UpdateContactFlowName
      description: The name of the contact flow.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: ContactFlowId
          in: path
          required: true
          description: The identifier of the contact flow.
          schema:
            type: string
            maxLength: 500
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The name of the contact flow.
                  type: string
                  minLength: 1
                Description:
                  description: The description of the contact flow.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/routing-profiles/{InstanceId}/{RoutingProfileId}/concurrency':
    post:
      operationId: UpdateRoutingProfileConcurrency
      description: Updates the channels that agents can handle in the Contact Control Panel (CCP) for a routing profile.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: RoutingProfileId
          in: path
          required: true
          description: The identifier of the routing profile.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - MediaConcurrencies
              properties:
                MediaConcurrencies:
                  description: The channels agents can handle in the Contact Control Panel (CCP).
                  type: array
                  items:
                    $ref: '#/components/schemas/MediaConcurrency'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/routing-profiles/{InstanceId}/{RoutingProfileId}/default-outbound-queue':
    post:
      operationId: UpdateRoutingProfileDefaultOutboundQueue
      description: Updates the default outbound queue of a routing profile.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: RoutingProfileId
          in: path
          required: true
          description: The identifier of the routing profile.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DefaultOutboundQueueId
              properties:
                DefaultOutboundQueueId:
                  description: The identifier for the default outbound queue.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/routing-profiles/{InstanceId}/{RoutingProfileId}/name':
    post:
      operationId: UpdateRoutingProfileName
      description: Updates the name and description of a routing profile. The request accepts the following data in JSON format. At least <code>Name</code> or <code>Description</code> must be provided.
      responses:
        '200':
          description: Success
        '480':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: RoutingProfileId
          in: path
          required: true
          description: The identifier of the routing profile.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The name of the routing profile. Must not be more than 127 characters.
                  type: string
                  minLength: 1
                  maxLength: 127
                Description:
                  description: The description of the routing profile. Must not be more than 250 characters.
                  type: string
                  minLength: 1
                  maxLength: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/users/{InstanceId}/{UserId}/hierarchy':
    post:
      operationId: UpdateUserHierarchy
      description: Assigns the specified hierarchy group to the specified user.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: UserId
          in: path
          required: true
          description: The identifier of the user account.
          schema:
            type: string
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                HierarchyGroupId:
                  description: The identifier of the hierarchy group.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/users/{InstanceId}/{UserId}/identity-info':
    post:
      operationId: UpdateUserIdentityInfo
      description: '<p>Updates the identity information for the specified user.</p> <important> <p>Someone with the ability to invoke <code>UpdateUserIndentityInfo</code> can change the login credentials of other users by changing their email address. This poses a security risk to your organization. They can change the email address of a user to the attacker''s email address, and then reset the password through email. We strongly recommend limiting who has the ability to invoke <code>UpdateUserIndentityInfo</code>. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html">Best Practices for Security Profiles</a> in the <i>Amazon Connect Administrator Guide</i>.</p> </important>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: UserId
          in: path
          required: true
          description: The identifier of the user account.
          schema:
            type: string
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - IdentityInfo
              properties:
                IdentityInfo:
                  description: Contains information about the identity of a user.
                  type: object
                  properties:
                    FirstName:
                      allOf:
                        - $ref: '#/components/schemas/AgentFirstName'
                        - description: The first name. This is required if you are using Amazon Connect or SAML for identity management.
                    LastName:
                      allOf:
                        - $ref: '#/components/schemas/AgentLastName'
                        - description: The last name. This is required if you are using Amazon Connect or SAML for identity management.
                    Email:
                      allOf:
                        - $ref: '#/components/schemas/Email'
                        - description: 'The email address. If you are using SAML for identity management and include this parameter, an error is returned.'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/users/{InstanceId}/{UserId}/phone-config':
    post:
      operationId: UpdateUserPhoneConfig
      description: Updates the phone configuration settings for the specified user.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: UserId
          in: path
          required: true
          description: The identifier of the user account.
          schema:
            type: string
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PhoneConfig
              properties:
                PhoneConfig:
                  description: Contains information about the phone configuration settings for a user.
                  type: object
                  properties:
                    PhoneType:
                      allOf:
                        - $ref: '#/components/schemas/PhoneType'
                        - description: The phone type.
                    AutoAccept:
                      allOf:
                        - $ref: '#/components/schemas/AutoAccept'
                        - description: The Auto accept setting.
                    AfterContactWorkTimeLimit:
                      allOf:
                        - $ref: '#/components/schemas/AfterContactWorkTimeLimit'
                        - description: 'The After Call Work (ACW) timeout setting, in seconds.'
                    DeskPhoneNumber:
                      allOf:
                        - $ref: '#/components/schemas/PhoneNumber'
                        - description: The phone number for the user's desk phone.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/users/{InstanceId}/{UserId}/routing-profile':
    post:
      operationId: UpdateUserRoutingProfile
      description: Assigns the specified routing profile to the specified user.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: UserId
          in: path
          required: true
          description: The identifier of the user account.
          schema:
            type: string
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - RoutingProfileId
              properties:
                RoutingProfileId:
                  description: The identifier of the routing profile for the user.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/users/{InstanceId}/{UserId}/security-profiles':
    post:
      operationId: UpdateUserSecurityProfiles
      description: Assigns the specified security profiles to the specified user.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: UserId
          in: path
          required: true
          description: The identifier of the user account.
          schema:
            type: string
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - SecurityProfileIds
              properties:
                SecurityProfileIds:
                  description: The identifiers of the security profiles for the user.
                  type: array
                  items:
                    $ref: '#/components/schemas/SecurityProfileId'
                  minItems: 1
                  maxItems: 10
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    RoutingProfileQueueConfig:
      type: object
      required:
        - QueueReference
        - Priority
        - Delay
      properties:
        QueueReference:
          allOf:
            - $ref: '#/components/schemas/RoutingProfileQueueReference'
            - description: Contains information about a queue resource.
        Priority:
          allOf:
            - $ref: '#/components/schemas/Priority'
            - description: 'The order in which contacts are to be handled for the queue. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and delay</a>.'
        Delay:
          allOf:
            - $ref: '#/components/schemas/Delay'
            - description: 'The delay, in seconds, a contact should be in the queue before they are routed to an available agent. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and delay</a> in the <i>Amazon Connect Administrator Guide</i>.'
      description: Contains information about the queue and channel for which priority and delay can be set.
    InvalidRequestException: {}
    InvalidParameterException: {}
    ResourceNotFoundException: {}
    ThrottlingException: {}
    InternalServiceException: {}
    CreateContactFlowResponse:
      type: object
      properties:
        ContactFlowId:
          allOf:
            - $ref: '#/components/schemas/ContactFlowId'
            - description: The identifier of the contact flow.
        ContactFlowArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Amazon Resource Name (ARN) of the contact flow.
    TagValue:
      type: string
      maxLength: 256
    InvalidContactFlowException: {}
    DuplicateResourceException: {}
    LimitExceededException: {}
    CreateRoutingProfileResponse:
      type: object
      properties:
        RoutingProfileArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Amazon Resource Name (ARN) of the routing profile.
        RoutingProfileId:
          allOf:
            - $ref: '#/components/schemas/RoutingProfileId'
            - description: The identifier of the routing profile.
    MediaConcurrency:
      type: object
      required:
        - Channel
        - Concurrency
      properties:
        Channel:
          allOf:
            - $ref: '#/components/schemas/Channel'
            - description: The channels that agents can handle in the Contact Control Panel (CCP).
        Concurrency:
          allOf:
            - $ref: '#/components/schemas/Concurrency'
            - description: The number of contacts an agent can have on a channel simultaneously.
      description: 'Contains information about which channels are supported, and how many contacts an agent can have on a channel simultaneously.'
    CreateUserResponse:
      type: object
      properties:
        UserId:
          allOf:
            - $ref: '#/components/schemas/UserId'
            - description: The identifier of the user account.
        UserArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Amazon Resource Name (ARN) of the user account.
    AgentFirstName:
      type: string
      minLength: 1
      maxLength: 100
    AgentLastName:
      type: string
      minLength: 1
      maxLength: 100
    Email:
      type: string
    PhoneType:
      type: string
      enum:
        - SOFT_PHONE
        - DESK_PHONE
    AutoAccept:
      type: boolean
    AfterContactWorkTimeLimit:
      type: integer
      minimum: 0
    PhoneNumber:
      type: string
    SecurityProfileId:
      type: string
    DescribeContactFlowResponse:
      type: object
      properties:
        ContactFlow:
          allOf:
            - $ref: '#/components/schemas/ContactFlow'
            - description: Information about the contact flow.
    ContactFlowNotPublishedException: {}
    DescribeRoutingProfileResponse:
      type: object
      properties:
        RoutingProfile:
          allOf:
            - $ref: '#/components/schemas/RoutingProfile'
            - description: The routing profile.
    DescribeUserResponse:
      type: object
      properties:
        User:
          allOf:
            - $ref: '#/components/schemas/User'
            - description: Information about the user account and configuration settings.
    DescribeUserHierarchyGroupResponse:
      type: object
      properties:
        HierarchyGroup:
          allOf:
            - $ref: '#/components/schemas/HierarchyGroup'
            - description: Information about the hierarchy group.
    DescribeUserHierarchyStructureResponse:
      type: object
      properties:
        HierarchyStructure:
          allOf:
            - $ref: '#/components/schemas/HierarchyStructure'
            - description: Information about the hierarchy structure.
    RoutingProfileQueueReference:
      type: object
      required:
        - QueueId
        - Channel
      properties:
        QueueId:
          allOf:
            - $ref: '#/components/schemas/QueueId'
            - description: The identifier of the queue.
        Channel:
          allOf:
            - $ref: '#/components/schemas/Channel'
            - description: The channels agents can handle in the Contact Control Panel (CCP) for this routing profile.
      description: Contains the channel and queue identifier for a routing profile.
    GetContactAttributesResponse:
      type: object
      properties:
        Attributes:
          allOf:
            - $ref: '#/components/schemas/Attributes'
            - description: Information about the attributes.
    GetCurrentMetricDataResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: '<p>If there are additional results, this is the token for the next set of results.</p> <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use the token must use the same request parameters as the request that generated the token.</p>'
        MetricResults:
          allOf:
            - $ref: '#/components/schemas/CurrentMetricResults'
            - description: Information about the real-time metrics.
        DataSnapshotTime:
          allOf:
            - $ref: '#/components/schemas/timestamp'
            - description: The time at which the metrics were retrieved and cached for pagination.
    Queues:
      type: array
      items:
        $ref: '#/components/schemas/QueueId'
      minItems: 1
      maxItems: 100
    Channels:
      type: array
      items:
        $ref: '#/components/schemas/Channel'
      maxItems: 1
    Grouping:
      type: string
      enum:
        - QUEUE
        - CHANNEL
    CurrentMetric:
      type: object
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/CurrentMetricName'
            - description: The name of the metric.
        Unit:
          allOf:
            - $ref: '#/components/schemas/Unit'
            - description: The unit for the metric.
      description: 'Contains information about a real-time metric. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html">Real-time Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.'
    GetFederationTokenResponse:
      type: object
      properties:
        Credentials:
          allOf:
            - $ref: '#/components/schemas/Credentials'
            - description: The credentials to use for federation.
    UserNotFoundException: {}
    GetMetricDataResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: '<p>If there are additional results, this is the token for the next set of results.</p> <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use the token must use the same request parameters as the request that generated the token.</p>'
        MetricResults:
          allOf:
            - $ref: '#/components/schemas/HistoricalMetricResults'
            - description: '<p>Information about the historical metrics.</p> <p>If no grouping is specified, a summary of metric data is returned.</p>'
    HistoricalMetric:
      type: object
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/HistoricalMetricName'
            - description: The name of the metric.
        Threshold:
          allOf:
            - $ref: '#/components/schemas/Threshold'
            - description: 'The threshold for the metric, used with service level metrics.'
        Statistic:
          allOf:
            - $ref: '#/components/schemas/Statistic'
            - description: The statistic for the metric.
        Unit:
          allOf:
            - $ref: '#/components/schemas/Unit'
            - description: The unit for the metric.
      description: 'Contains information about a historical metric. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.'
    ListContactFlowsResponse:
      type: object
      properties:
        ContactFlowSummaryList:
          allOf:
            - $ref: '#/components/schemas/ContactFlowSummaryList'
            - description: Information about the contact flows.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If there are additional results, this is the token for the next set of results.'
    ContactFlowType:
      type: string
      enum:
        - CONTACT_FLOW
        - CUSTOMER_QUEUE
        - CUSTOMER_HOLD
        - CUSTOMER_WHISPER
        - AGENT_HOLD
        - AGENT_WHISPER
        - OUTBOUND_WHISPER
        - AGENT_TRANSFER
        - QUEUE_TRANSFER
    ListHoursOfOperationsResponse:
      type: object
      properties:
        HoursOfOperationSummaryList:
          allOf:
            - $ref: '#/components/schemas/HoursOfOperationSummaryList'
            - description: Information about the hours of operation.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If there are additional results, this is the token for the next set of results.'
    ListPhoneNumbersResponse:
      type: object
      properties:
        PhoneNumberSummaryList:
          allOf:
            - $ref: '#/components/schemas/PhoneNumberSummaryList'
            - description: Information about the phone numbers.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If there are additional results, this is the token for the next set of results.'
    PhoneNumberType:
      type: string
      enum:
        - TOLL_FREE
        - DID
    PhoneNumberCountryCode:
      type: string
      enum:
        - AF
        - AL
        - DZ
        - AS
        - AD
        - AO
        - AI
        - AQ
        - AG
        - AR
        - AM
        - AW
        - AU
        - AT
        - AZ
        - BS
        - BH
        - BD
        - BB
        - BY
        - BE
        - BZ
        - BJ
        - BM
        - BT
        - BO
        - BA
        - BW
        - BR
        - IO
        - VG
        - BN
        - BG
        - BF
        - BI
        - KH
        - CM
        - CA
        - CV
        - KY
        - CF
        - TD
        - CL
        - CN
        - CX
        - CC
        - CO
        - KM
        - CK
        - CR
        - HR
        - CU
        - CW
        - CY
        - CZ
        - CD
        - DK
        - DJ
        - DM
        - DO
        - TL
        - EC
        - EG
        - SV
        - GQ
        - ER
        - EE
        - ET
        - FK
        - FO
        - FJ
        - FI
        - FR
        - PF
        - GA
        - GM
        - GE
        - DE
        - GH
        - GI
        - GR
        - GL
        - GD
        - GU
        - GT
        - GG
        - GN
        - GW
        - GY
        - HT
        - HN
        - HK
        - HU
        - IS
        - IN
        - ID
        - IR
        - IQ
        - IE
        - IM
        - IL
        - IT
        - CI
        - JM
        - JP
        - JE
        - JO
        - KZ
        - KE
        - KI
        - KW
        - KG
        - LA
        - LV
        - LB
        - LS
        - LR
        - LY
        - LI
        - LT
        - LU
        - MO
        - MK
        - MG
        - MW
        - MY
        - MV
        - ML
        - MT
        - MH
        - MR
        - MU
        - YT
        - MX
        - FM
        - MD
        - MC
        - MN
        - ME
        - MS
        - MA
        - MZ
        - MM
        - NA
        - NR
        - NP
        - NL
        - AN
        - NC
        - NZ
        - NI
        - NE
        - NG
        - NU
        - KP
        - MP
        - 'NO'
        - OM
        - PK
        - PW
        - PA
        - PG
        - PY
        - PE
        - PH
        - PN
        - PL
        - PT
        - PR
        - QA
        - CG
        - RE
        - RO
        - RU
        - RW
        - BL
        - SH
        - KN
        - LC
        - MF
        - PM
        - VC
        - WS
        - SM
        - ST
        - SA
        - SN
        - RS
        - SC
        - SL
        - SG
        - SX
        - SK
        - SI
        - SB
        - SO
        - ZA
        - KR
        - ES
        - LK
        - SD
        - SR
        - SJ
        - SZ
        - SE
        - CH
        - SY
        - TW
        - TJ
        - TZ
        - TH
        - TG
        - TK
        - TO
        - TT
        - TN
        - TR
        - TM
        - TC
        - TV
        - VI
        - UG
        - UA
        - AE
        - GB
        - US
        - UY
        - UZ
        - VU
        - VA
        - VE
        - VN
        - WF
        - EH
        - YE
        - ZM
        - ZW
    ListPromptsResponse:
      type: object
      properties:
        PromptSummaryList:
          allOf:
            - $ref: '#/components/schemas/PromptSummaryList'
            - description: Information about the prompts.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If there are additional results, this is the token for the next set of results.'
    ListQueuesResponse:
      type: object
      properties:
        QueueSummaryList:
          allOf:
            - $ref: '#/components/schemas/QueueSummaryList'
            - description: Information about the queues.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If there are additional results, this is the token for the next set of results.'
    QueueType:
      type: string
      enum:
        - STANDARD
        - AGENT
    ListRoutingProfileQueuesResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If there are additional results, this is the token for the next set of results.'
        RoutingProfileQueueConfigSummaryList:
          allOf:
            - $ref: '#/components/schemas/RoutingProfileQueueConfigSummaryList'
            - description: Information about the routing profiles.
    ListRoutingProfilesResponse:
      type: object
      properties:
        RoutingProfileSummaryList:
          allOf:
            - $ref: '#/components/schemas/RoutingProfileSummaryList'
            - description: Information about the routing profiles.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If there are additional results, this is the token for the next set of results.'
    ListSecurityProfilesResponse:
      type: object
      properties:
        SecurityProfileSummaryList:
          allOf:
            - $ref: '#/components/schemas/SecurityProfileSummaryList'
            - description: Information about the security profiles.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If there are additional results, this is the token for the next set of results.'
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: Information about the tags.
    ListUserHierarchyGroupsResponse:
      type: object
      properties:
        UserHierarchyGroupSummaryList:
          allOf:
            - $ref: '#/components/schemas/HierarchyGroupSummaryList'
            - description: Information about the hierarchy groups.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If there are additional results, this is the token for the next set of results.'
    ListUsersResponse:
      type: object
      properties:
        UserSummaryList:
          allOf:
            - $ref: '#/components/schemas/UserSummaryList'
            - description: Information about the users.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If there are additional results, this is the token for the next set of results.'
    ResumeContactRecordingResponse:
      type: object
      properties: {}
    StartChatContactResponse:
      type: object
      properties:
        ContactId:
          allOf:
            - $ref: '#/components/schemas/ContactId'
            - description: 'The identifier of this contact within the Amazon Connect instance. '
        ParticipantId:
          allOf:
            - $ref: '#/components/schemas/ParticipantId'
            - description: The identifier for a chat participant. The participantId for a chat participant is the same throughout the chat lifecycle.
        ParticipantToken:
          allOf:
            - $ref: '#/components/schemas/ParticipantToken'
            - description: 'The token used by the chat participant to call <a href="https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html">CreateParticipantConnection</a>. The participant token is valid for the lifetime of a chat participant.'
    AttributeValue:
      type: string
      minLength: 0
      maxLength: 32767
    DisplayName:
      type: string
      minLength: 1
      maxLength: 256
    ChatContentType:
      type: string
      minLength: 1
      maxLength: 100
    ChatContent:
      type: string
      minLength: 1
      maxLength: 1024
    StartContactRecordingResponse:
      type: object
      properties: {}
    VoiceRecordingTrack:
      type: string
      enum:
        - FROM_AGENT
        - TO_AGENT
        - ALL
    StartOutboundVoiceContactResponse:
      type: object
      properties:
        ContactId:
          allOf:
            - $ref: '#/components/schemas/ContactId'
            - description: The identifier of this contact within the Amazon Connect instance.
    DestinationNotAllowedException: {}
    OutboundContactNotPermittedException: {}
    StopContactResponse:
      type: object
      properties: {}
    ContactNotFoundException: {}
    StopContactRecordingResponse:
      type: object
      properties: {}
    SuspendContactRecordingResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'
      minLength: 1
      maxLength: 128
    UpdateContactAttributesResponse:
      type: object
      properties: {}
    ARN:
      type: string
    AgentUsername:
      type: string
      minLength: 1
      maxLength: 100
    InstanceId:
      type: string
      minLength: 1
      maxLength: 100
    RoutingProfileId:
      type: string
    RoutingProfileQueueConfigList:
      type: array
      items:
        $ref: '#/components/schemas/RoutingProfileQueueConfig'
      minItems: 1
      maxItems: 10
    AssociateRoutingProfileQueuesRequest:
      type: object
      required:
        - QueueConfigs
      title: AssociateRoutingProfileQueuesRequest
      properties:
        QueueConfigs:
          allOf:
            - $ref: '#/components/schemas/RoutingProfileQueueConfigList'
            - description: The queues to associate with this routing profile.
    AttributeName:
      type: string
      minLength: 1
      maxLength: 32767
    Attributes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AttributeValue'
    Channel:
      type: string
      enum:
        - VOICE
        - CHAT
    ChatMessage:
      type: object
      required:
        - ContentType
        - Content
      properties:
        ContentType:
          allOf:
            - $ref: '#/components/schemas/ChatContentType'
            - description: The type of the content. Supported types are text/plain.
        Content:
          allOf:
            - $ref: '#/components/schemas/ChatContent'
            - description: The content of the chat message.
      description: A chat message.
    ClientToken:
      type: string
      maxLength: 500
    Comparison:
      type: string
      enum:
        - LT
    Concurrency:
      type: integer
      minimum: 1
      maximum: 5
    ContactFlowId:
      type: string
      maxLength: 500
    ContactFlowName:
      type: string
      minLength: 1
    ContactFlowDescription:
      type: string
    ContactFlowContent:
      type: string
    TagMap:
      type: object
      minProperties: 1
      maxProperties: 200
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    ContactFlow:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Amazon Resource Name (ARN) of the contact flow.
        Id:
          allOf:
            - $ref: '#/components/schemas/ContactFlowId'
            - description: The identifier of the contact flow.
        Name:
          allOf:
            - $ref: '#/components/schemas/ContactFlowName'
            - description: The name of the contact flow.
        Type:
          allOf:
            - $ref: '#/components/schemas/ContactFlowType'
            - description: 'The type of the contact flow. For descriptions of the available types, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#contact-flow-types">Choose a Contact Flow Type</a> in the <i>Amazon Connect Administrator Guide</i>.'
        Description:
          allOf:
            - $ref: '#/components/schemas/ContactFlowDescription'
            - description: The description of the contact flow.
        Content:
          allOf:
            - $ref: '#/components/schemas/ContactFlowContent'
            - description: The content of the contact flow.
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: One or more tags.
      description: Contains information about a contact flow.
    ContactFlowSummary:
      type: object
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/ContactFlowId'
            - description: The identifier of the contact flow.
        Arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Amazon Resource Name (ARN) of the contact flow.
        Name:
          allOf:
            - $ref: '#/components/schemas/ContactFlowName'
            - description: The name of the contact flow.
        ContactFlowType:
          allOf:
            - $ref: '#/components/schemas/ContactFlowType'
            - description: The type of contact flow.
      description: '<p>Contains summary information about a contact flow.</p> <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect Flow language</a>.</p>'
    ContactFlowSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ContactFlowSummary'
    ContactFlowTypes:
      type: array
      items:
        $ref: '#/components/schemas/ContactFlowType'
      maxItems: 10
    ContactId:
      type: string
      minLength: 1
      maxLength: 256
    CreateContactFlowRequest:
      type: object
      required:
        - Name
        - Type
        - Content
      title: CreateContactFlowRequest
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/ContactFlowName'
            - description: The name of the contact flow.
        Type:
          allOf:
            - $ref: '#/components/schemas/ContactFlowType'
            - description: 'The type of the contact flow. For descriptions of the available types, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#contact-flow-types">Choose a Contact Flow Type</a> in the <i>Amazon Connect Administrator Guide</i>.'
        Description:
          allOf:
            - $ref: '#/components/schemas/ContactFlowDescription'
            - description: 'The description of the contact flow. '
        Content:
          allOf:
            - $ref: '#/components/schemas/ContactFlowContent'
            - description: 'The content of the contact flow. '
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: One or more tags.
    RoutingProfileName:
      type: string
      minLength: 1
      maxLength: 127
    RoutingProfileDescription:
      type: string
      minLength: 1
      maxLength: 250
    QueueId:
      type: string
    MediaConcurrencies:
      type: array
      items:
        $ref: '#/components/schemas/MediaConcurrency'
    CreateRoutingProfileRequest:
      type: object
      required:
        - Name
        - Description
        - DefaultOutboundQueueId
        - MediaConcurrencies
      title: CreateRoutingProfileRequest
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/RoutingProfileName'
            - description: The name of the routing profile. Must not be more than 127 characters.
        Description:
          allOf:
            - $ref: '#/components/schemas/RoutingProfileDescription'
            - description: Description of the routing profile. Must not be more than 250 characters.
        DefaultOutboundQueueId:
          allOf:
            - $ref: '#/components/schemas/QueueId'
            - description: The default outbound queue for the routing profile.
        QueueConfigs:
          allOf:
            - $ref: '#/components/schemas/RoutingProfileQueueConfigList'
            - description: 'The inbound queues associated with the routing profile. If no queue is added, the agent can only make outbound calls.'
        MediaConcurrencies:
          allOf:
            - $ref: '#/components/schemas/MediaConcurrencies'
            - description: The channels agents can handle in the Contact Control Panel (CCP) for this routing profile.
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: One or more tags.
    Password:
      type: string
      pattern: '/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d\S]{8,64}$/'
    UserIdentityInfo:
      type: object
      properties:
        FirstName:
          allOf:
            - $ref: '#/components/schemas/AgentFirstName'
            - description: The first name. This is required if you are using Amazon Connect or SAML for identity management.
        LastName:
          allOf:
            - $ref: '#/components/schemas/AgentLastName'
            - description: The last name. This is required if you are using Amazon Connect or SAML for identity management.
        Email:
          allOf:
            - $ref: '#/components/schemas/Email'
            - description: 'The email address. If you are using SAML for identity management and include this parameter, an error is returned.'
      description: Contains information about the identity of a user.
    UserPhoneConfig:
      type: object
      required:
        - PhoneType
      properties:
        PhoneType:
          allOf:
            - $ref: '#/components/schemas/PhoneType'
            - description: The phone type.
        AutoAccept:
          allOf:
            - $ref: '#/components/schemas/AutoAccept'
            - description: The Auto accept setting.
        AfterContactWorkTimeLimit:
          allOf:
            - $ref: '#/components/schemas/AfterContactWorkTimeLimit'
            - description: 'The After Call Work (ACW) timeout setting, in seconds.'
        DeskPhoneNumber:
          allOf:
            - $ref: '#/components/schemas/PhoneNumber'
            - description: The phone number for the user's desk phone.
      description: Contains information about the phone configuration settings for a user.
    DirectoryUserId:
      type: string
    SecurityProfileIds:
      type: array
      items:
        $ref: '#/components/schemas/SecurityProfileId'
      minItems: 1
      maxItems: 10
    HierarchyGroupId:
      type: string
    CreateUserRequest:
      type: object
      required:
        - Username
        - PhoneConfig
        - SecurityProfileIds
        - RoutingProfileId
      title: CreateUserRequest
      properties:
        Username:
          allOf:
            - $ref: '#/components/schemas/AgentUsername'
            - description: 'The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from [a-zA-Z0-9_-.\@]+.'
        Password:
          allOf:
            - $ref: '#/components/schemas/Password'
            - description: 'The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.'
        IdentityInfo:
          allOf:
            - $ref: '#/components/schemas/UserIdentityInfo'
            - description: The information about the identity of the user.
        PhoneConfig:
          allOf:
            - $ref: '#/components/schemas/UserPhoneConfig'
            - description: The phone settings for the user.
        DirectoryUserId:
          allOf:
            - $ref: '#/components/schemas/DirectoryUserId'
            - description: '<p>The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory.</p> <p>This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.</p>'
        SecurityProfileIds:
          allOf:
            - $ref: '#/components/schemas/SecurityProfileIds'
            - description: The identifier of the security profile for the user.
        RoutingProfileId:
          allOf:
            - $ref: '#/components/schemas/RoutingProfileId'
            - description: The identifier of the routing profile for the user.
        HierarchyGroupId:
          allOf:
            - $ref: '#/components/schemas/HierarchyGroupId'
            - description: The identifier of the hierarchy group for the user.
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: One or more tags.
    UserId:
      type: string
    SecurityToken:
      type: string
      format: password
    timestamp:
      type: string
      format: date-time
    Credentials:
      type: object
      properties:
        AccessToken:
          allOf:
            - $ref: '#/components/schemas/SecurityToken'
            - description: An access token generated for a federated user to access Amazon Connect.
        AccessTokenExpiration:
          allOf:
            - $ref: '#/components/schemas/timestamp'
            - description: A token generated with an expiration time for the session a user is logged in to Amazon Connect.
        RefreshToken:
          allOf:
            - $ref: '#/components/schemas/SecurityToken'
            - description: Renews a token generated for a user to access the Amazon Connect instance.
        RefreshTokenExpiration:
          allOf:
            - $ref: '#/components/schemas/timestamp'
            - description: Renews the expiration timer for a generated token.
      description: Contains credentials to use for federation.
    CurrentMetricName:
      type: string
      enum:
        - AGENTS_ONLINE
        - AGENTS_AVAILABLE
        - AGENTS_ON_CALL
        - AGENTS_NON_PRODUCTIVE
        - AGENTS_AFTER_CONTACT_WORK
        - AGENTS_ERROR
        - AGENTS_STAFFED
        - CONTACTS_IN_QUEUE
        - OLDEST_CONTACT_AGE
        - CONTACTS_SCHEDULED
        - AGENTS_ON_CONTACT
        - SLOTS_ACTIVE
        - SLOTS_AVAILABLE
      description: The current metric names.
    Unit:
      type: string
      enum:
        - SECONDS
        - COUNT
        - PERCENT
    Value:
      type: number
      format: double
    CurrentMetricData:
      type: object
      properties:
        Metric:
          allOf:
            - $ref: '#/components/schemas/CurrentMetric'
            - description: Information about the metric.
        Value:
          allOf:
            - $ref: '#/components/schemas/Value'
            - description: The value of the metric.
      description: Contains the data for a real-time metric.
    CurrentMetricDataCollections:
      type: array
      items:
        $ref: '#/components/schemas/CurrentMetricData'
    Dimensions:
      type: object
      properties:
        Queue:
          allOf:
            - $ref: '#/components/schemas/QueueReference'
            - description: Information about the queue for which metrics are returned.
        Channel:
          allOf:
            - $ref: '#/components/schemas/Channel'
            - description: The channel used for grouping and filters.
      description: Contains information about the dimensions for a set of metrics.
    CurrentMetricResult:
      type: object
      properties:
        Dimensions:
          allOf:
            - $ref: '#/components/schemas/Dimensions'
            - description: The dimensions for the metrics.
        Collections:
          allOf:
            - $ref: '#/components/schemas/CurrentMetricDataCollections'
            - description: The set of metrics.
      description: Contains information about a set of real-time metrics.
    CurrentMetricResults:
      type: array
      items:
        $ref: '#/components/schemas/CurrentMetricResult'
    CurrentMetrics:
      type: array
      items:
        $ref: '#/components/schemas/CurrentMetric'
    Delay:
      type: integer
      minimum: 0
      maximum: 9999
    DeleteUserRequest:
      type: object
      title: DeleteUserRequest
      properties: {}
    DescribeContactFlowRequest:
      type: object
      title: DescribeContactFlowRequest
      properties: {}
    DescribeRoutingProfileRequest:
      type: object
      title: DescribeRoutingProfileRequest
      properties: {}
    RoutingProfile:
      type: object
      properties:
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The identifier of the Amazon Connect instance.
        Name:
          allOf:
            - $ref: '#/components/schemas/RoutingProfileName'
            - description: The name of the routing profile.
        RoutingProfileArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Amazon Resource Name (ARN) of the routing profile.
        RoutingProfileId:
          allOf:
            - $ref: '#/components/schemas/RoutingProfileId'
            - description: The identifier of the routing profile.
        Description:
          allOf:
            - $ref: '#/components/schemas/RoutingProfileDescription'
            - description: The description of the routing profile.
        MediaConcurrencies:
          allOf:
            - $ref: '#/components/schemas/MediaConcurrencies'
            - description: The channels agents can handle in the Contact Control Panel (CCP) for this routing profile.
        DefaultOutboundQueueId:
          allOf:
            - $ref: '#/components/schemas/QueueId'
            - description: The identifier of the default outbound queue for this routing profile.
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: One or more tags.
      description: Contains information about a routing profile.
    DescribeUserHierarchyGroupRequest:
      type: object
      title: DescribeUserHierarchyGroupRequest
      properties: {}
    HierarchyGroup:
      type: object
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/HierarchyGroupId'
            - description: The identifier of the hierarchy group.
        Arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Amazon Resource Name (ARN) of the hierarchy group.
        Name:
          allOf:
            - $ref: '#/components/schemas/HierarchyGroupName'
            - description: The name of the hierarchy group.
        LevelId:
          allOf:
            - $ref: '#/components/schemas/HierarchyLevelId'
            - description: The identifier of the level in the hierarchy group.
        HierarchyPath:
          allOf:
            - $ref: '#/components/schemas/HierarchyPath'
            - description: Information about the levels in the hierarchy group.
      description: Contains information about a hierarchy group.
    DescribeUserHierarchyStructureRequest:
      type: object
      title: DescribeUserHierarchyStructureRequest
      properties: {}
    HierarchyStructure:
      type: object
      properties:
        LevelOne:
          allOf:
            - $ref: '#/components/schemas/HierarchyLevel'
            - description: Information about level one.
        LevelTwo:
          allOf:
            - $ref: '#/components/schemas/HierarchyLevel'
            - description: Information about level two.
        LevelThree:
          allOf:
            - $ref: '#/components/schemas/HierarchyLevel'
            - description: Information about level three.
        LevelFour:
          allOf:
            - $ref: '#/components/schemas/HierarchyLevel'
            - description: Information about level four.
        LevelFive:
          allOf:
            - $ref: '#/components/schemas/HierarchyLevel'
            - description: Information about level five.
      description: Contains information about a hierarchy structure.
    DescribeUserRequest:
      type: object
      title: DescribeUserRequest
      properties: {}
    User:
      type: object
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/UserId'
            - description: The identifier of the user account.
        Arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Amazon Resource Name (ARN) of the user account.
        Username:
          allOf:
            - $ref: '#/components/schemas/AgentUsername'
            - description: The user name assigned to the user account.
        IdentityInfo:
          allOf:
            - $ref: '#/components/schemas/UserIdentityInfo'
            - description: Information about the user identity.
        PhoneConfig:
          allOf:
            - $ref: '#/components/schemas/UserPhoneConfig'
            - description: Information about the phone configuration for the user.
        DirectoryUserId:
          allOf:
            - $ref: '#/components/schemas/DirectoryUserId'
            - description: The identifier of the user account in the directory used for identity management.
        SecurityProfileIds:
          allOf:
            - $ref: '#/components/schemas/SecurityProfileIds'
            - description: The identifiers of the security profiles for the user.
        RoutingProfileId:
          allOf:
            - $ref: '#/components/schemas/RoutingProfileId'
            - description: The identifier of the routing profile for the user.
        HierarchyGroupId:
          allOf:
            - $ref: '#/components/schemas/HierarchyGroupId'
            - description: The identifier of the hierarchy group for the user.
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The tags.
      description: Contains information about a user account for a Amazon Connect instance.
    QueueReference:
      type: object
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/QueueId'
            - description: The identifier of the queue.
        Arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Amazon Resource Name (ARN) of the queue.
      description: Contains information about a queue resource for which metrics are returned.
    RoutingProfileQueueReferenceList:
      type: array
      items:
        $ref: '#/components/schemas/RoutingProfileQueueReference'
    DisassociateRoutingProfileQueuesRequest:
      type: object
      required:
        - QueueReferences
      title: DisassociateRoutingProfileQueuesRequest
      properties:
        QueueReferences:
          allOf:
            - $ref: '#/components/schemas/RoutingProfileQueueReferenceList'
            - description: The queues to disassociate from this routing profile.
    Filters:
      type: object
      properties:
        Queues:
          allOf:
            - $ref: '#/components/schemas/Queues'
            - description: The queues to use to filter the metrics. You can specify up to 100 queues per request.
        Channels:
          allOf:
            - $ref: '#/components/schemas/Channels'
            - description: The channel to use to filter the metrics.
      description: Contains the filter to apply when retrieving metrics.
    GetContactAttributesRequest:
      type: object
      title: GetContactAttributesRequest
      properties: {}
    Groupings:
      type: array
      items:
        $ref: '#/components/schemas/Grouping'
      maxItems: 2
    NextToken:
      type: string
    MaxResult100:
      type: integer
      minimum: 1
      maximum: 100
    GetCurrentMetricDataRequest:
      type: object
      required:
        - Filters
        - CurrentMetrics
      title: GetCurrentMetricDataRequest
      properties:
        Filters:
          allOf:
            - $ref: '#/components/schemas/Filters'
            - description: 'The queues, up to 100, or channels, to use to filter the metrics returned. Metric data is retrieved only for the resources associated with the queues or channels included in the filter. You can include both queue IDs and queue ARNs in the same request. Both <code>VOICE</code> and <code>CHAT</code> channels are supported.'
        Groupings:
          allOf:
            - $ref: '#/components/schemas/Groupings'
            - description: '<p>The grouping applied to the metrics returned. For example, when grouped by <code>QUEUE</code>, the metrics returned apply to each queue rather than aggregated for all queues. If you group by <code>CHANNEL</code>, you should include a Channels filter. Both <code>VOICE</code> and <code>CHAT</code> channels are supported.</p> <p>If no <code>Grouping</code> is included in the request, a summary of metrics is returned.</p>'
        CurrentMetrics:
          allOf:
            - $ref: '#/components/schemas/CurrentMetrics'
            - description: '<p>The metrics to retrieve. Specify the name and unit for each metric. The following metrics are available. For a description of all the metrics, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html">Real-time Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <dl> <dt>AGENTS_AFTER_CONTACT_WORK</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#aftercallwork-real-time">ACW</a> </p> </dd> <dt>AGENTS_AVAILABLE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#available-real-time">Available</a> </p> </dd> <dt>AGENTS_ERROR</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#error-real-time">Error</a> </p> </dd> <dt>AGENTS_NON_PRODUCTIVE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#non-productive-time-real-time">NPT (Non-Productive Time)</a> </p> </dd> <dt>AGENTS_ON_CALL</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#on-call-real-time">On contact</a> </p> </dd> <dt>AGENTS_ON_CONTACT</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#on-call-real-time">On contact</a> </p> </dd> <dt>AGENTS_ONLINE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#online-real-time">Online</a> </p> </dd> <dt>AGENTS_STAFFED</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#staffed-real-time">Staffed</a> </p> </dd> <dt>CONTACTS_IN_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#in-queue-real-time">In queue</a> </p> </dd> <dt>CONTACTS_SCHEDULED</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#scheduled-real-time">Scheduled</a> </p> </dd> <dt>OLDEST_CONTACT_AGE</dt> <dd> <p>Unit: SECONDS</p> <p>When you use groupings, Unit says SECONDS but the Value is returned in MILLISECONDS. For example, if you get a response like this:</p> <p> <code>{ "Metric": { "Name": "OLDEST_CONTACT_AGE", "Unit": "SECONDS" }, "Value": 24113.0 </code>}</p> <p>The actual OLDEST_CONTACT_AGE is 24 seconds.</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#oldest-real-time">Oldest</a> </p> </dd> <dt>SLOTS_ACTIVE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#active-real-time">Active</a> </p> </dd> <dt>SLOTS_AVAILABLE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#availability-real-time">Availability</a> </p> </dd> </dl>'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p> <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use the token must use the same request parameters as the request that generated the token.</p>
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/MaxResult100'
            - description: The maximimum number of results to return per page.
    GetFederationTokenRequest:
      type: object
      title: GetFederationTokenRequest
      properties: {}
    HistoricalMetrics:
      type: array
      items:
        $ref: '#/components/schemas/HistoricalMetric'
    GetMetricDataRequest:
      type: object
      required:
        - StartTime
        - EndTime
        - Filters
        - HistoricalMetrics
      title: GetMetricDataRequest
      properties:
        StartTime:
          allOf:
            - $ref: '#/components/schemas/timestamp'
            - description: '<p>The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the retrieval of historical metrics data. The time must be specified using a multiple of 5 minutes, such as 10:05, 10:10, 10:15.</p> <p>The start time cannot be earlier than 24 hours before the time of the request. Historical metrics are available only for 24 hours.</p>'
        EndTime:
          allOf:
            - $ref: '#/components/schemas/timestamp'
            - description: '<p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the retrieval of historical metrics data. The time must be specified using an interval of 5 minutes, such as 11:00, 11:05, 11:10, and must be later than the start time timestamp.</p> <p>The time range between the start and end time must be less than 24 hours.</p>'
        Filters:
          allOf:
            - $ref: '#/components/schemas/Filters'
            - description: 'The queues, up to 100, or channels, to use to filter the metrics returned. Metric data is retrieved only for the resources associated with the queues or channels included in the filter. You can include both queue IDs and queue ARNs in the same request. Both <code>VOICE</code> and <code>CHAT</code> channels are supported.'
        Groupings:
          allOf:
            - $ref: '#/components/schemas/Groupings'
            - description: '<p>The grouping applied to the metrics returned. For example, when results are grouped by queue, the metrics returned are grouped by queue. The values returned apply to the metrics for each queue rather than aggregated for all queues.</p> <p>The only supported grouping is <code>QUEUE</code>.</p> <p>If no grouping is specified, a summary of metrics for all queues is returned.</p>'
        HistoricalMetrics:
          allOf:
            - $ref: '#/components/schemas/HistoricalMetrics'
            - description: '<p>The metrics to retrieve. Specify the name, unit, and statistic for each metric. The following historical metrics are available. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <dl> <dt>ABANDON_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>AFTER_CONTACT_WORK_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>API_CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CALLBACK_CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_ABANDONED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_AGENT_HUNG_UP_FIRST</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_CONSULTED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED_INCOMING</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED_OUTBOUND</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HOLD_ABANDONS</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_MISSED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_QUEUED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_IN</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_IN_FROM_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_OUT</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_OUT_FROM_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>HANDLE_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>HOLD_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>INTERACTION_AND_HOLD_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>INTERACTION_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>OCCUPANCY</dt> <dd> <p>Unit: PERCENT</p> <p>Statistic: AVG</p> </dd> <dt>QUEUE_ANSWER_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>QUEUED_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: MAX</p> </dd> <dt>SERVICE_LEVEL</dt> <dd> <p>Unit: PERCENT</p> <p>Statistic: AVG</p> <p>Threshold: Only "Less than" comparisons are supported, with the following service level thresholds: 15, 20, 25, 30, 45, 60, 90, 120, 180, 240, 300, 600</p> </dd> </dl>'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/MaxResult100'
            - description: The maximimum number of results to return per page.
    HistoricalMetricResults:
      type: array
      items:
        $ref: '#/components/schemas/HistoricalMetricResult'
    HierarchyGroupName:
      type: string
    HierarchyLevelId:
      type: string
    HierarchyPath:
      type: object
      properties:
        LevelOne:
          allOf:
            - $ref: '#/components/schemas/HierarchyGroupSummary'
            - description: Information about level one.
        LevelTwo:
          allOf:
            - $ref: '#/components/schemas/HierarchyGroupSummary'
            - description: Information about level two.
        LevelThree:
          allOf:
            - $ref: '#/components/schemas/HierarchyGroupSummary'
            - description: Information about level three.
        LevelFour:
          allOf:
            - $ref: '#/components/schemas/HierarchyGroupSummary'
            - description: Information about level four.
        LevelFive:
          allOf:
            - $ref: '#/components/schemas/HierarchyGroupSummary'
            - description: Information about level five.
      description: Contains information about the levels of a hierarchy group.
    HierarchyGroupSummary:
      type: object
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/HierarchyGroupId'
            - description: The identifier of the hierarchy group.
        Arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Amazon Resource Name (ARN) of the hierarchy group.
        Name:
          allOf:
            - $ref: '#/components/schemas/HierarchyGroupName'
            - description: The name of the hierarchy group.
      description: Contains summary information about a hierarchy group.
    HierarchyGroupSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/HierarchyGroupSummary'
    HierarchyLevelName:
      type: string
    HierarchyLevel:
      type: object
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/HierarchyLevelId'
            - description: The identifier of the hierarchy level.
        Arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Amazon Resource Name (ARN) of the hierarchy level.
        Name:
          allOf:
            - $ref: '#/components/schemas/HierarchyLevelName'
            - description: The name of the hierarchy level.
      description: Contains information about a hierarchy level.
    HistoricalMetricName:
      type: string
      enum:
        - CONTACTS_QUEUED
        - CONTACTS_HANDLED
        - CONTACTS_ABANDONED
        - CONTACTS_CONSULTED
        - CONTACTS_AGENT_HUNG_UP_FIRST
        - CONTACTS_HANDLED_INCOMING
        - CONTACTS_HANDLED_OUTBOUND
        - CONTACTS_HOLD_ABANDONS
        - CONTACTS_TRANSFERRED_IN
        - CONTACTS_TRANSFERRED_OUT
        - CONTACTS_TRANSFERRED_IN_FROM_QUEUE
        - CONTACTS_TRANSFERRED_OUT_FROM_QUEUE
        - CONTACTS_MISSED
        - CALLBACK_CONTACTS_HANDLED
        - API_CONTACTS_HANDLED
        - OCCUPANCY
        - HANDLE_TIME
        - AFTER_CONTACT_WORK_TIME
        - QUEUED_TIME
        - ABANDON_TIME
        - QUEUE_ANSWER_TIME
        - HOLD_TIME
        - INTERACTION_TIME
        - INTERACTION_AND_HOLD_TIME
        - SERVICE_LEVEL
      description: The historical metric names.
    Threshold:
      type: object
      properties:
        Comparison:
          allOf:
            - $ref: '#/components/schemas/Comparison'
            - description: The type of comparison. Only "less than" (LT) comparisons are supported.
        ThresholdValue:
          allOf:
            - $ref: '#/components/schemas/ThresholdValue'
            - description: The threshold value to compare.
      description: Contains information about the threshold for service level metrics.
    Statistic:
      type: string
      enum:
        - SUM
        - MAX
        - AVG
    HistoricalMetricData:
      type: object
      properties:
        Metric:
          allOf:
            - $ref: '#/components/schemas/HistoricalMetric'
            - description: Information about the metric.
        Value:
          allOf:
            - $ref: '#/components/schemas/Value'
            - description: The value of the metric.
      description: Contains the data for a historical metric.
    HistoricalMetricDataCollections:
      type: array
      items:
        $ref: '#/components/schemas/HistoricalMetricData'
    HistoricalMetricResult:
      type: object
      properties:
        Dimensions:
          allOf:
            - $ref: '#/components/schemas/Dimensions'
            - description: The dimension for the metrics.
        Collections:
          allOf:
            - $ref: '#/components/schemas/HistoricalMetricDataCollections'
            - description: The set of metrics.
      description: Contains information about the historical metrics retrieved.
    HoursOfOperationId:
      type: string
    HoursOfOperationName:
      type: string
    HoursOfOperationSummary:
      type: object
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/HoursOfOperationId'
            - description: The identifier of the hours of operation.
        Arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Amazon Resource Name (ARN) of the hours of operation.
        Name:
          allOf:
            - $ref: '#/components/schemas/HoursOfOperationName'
            - description: The name of the hours of operation.
      description: Contains summary information about hours of operation for a contact center.
    HoursOfOperationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/HoursOfOperationSummary'
    MaxResult1000:
      type: integer
      minimum: 1
      maximum: 1000
    ListContactFlowsRequest:
      type: object
      title: ListContactFlowsRequest
      properties: {}
    ListHoursOfOperationsRequest:
      type: object
      title: ListHoursOfOperationsRequest
      properties: {}
    PhoneNumberTypes:
      type: array
      items:
        $ref: '#/components/schemas/PhoneNumberType'
      maxItems: 2
    PhoneNumberCountryCodes:
      type: array
      items:
        $ref: '#/components/schemas/PhoneNumberCountryCode'
      maxItems: 10
    ListPhoneNumbersRequest:
      type: object
      title: ListPhoneNumbersRequest
      properties: {}
    PhoneNumberSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/PhoneNumberSummary'
    ListPromptsRequest:
      type: object
      title: ListPromptsRequest
      properties: {}
    PromptSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/PromptSummary'
    QueueTypes:
      type: array
      items:
        $ref: '#/components/schemas/QueueType'
      maxItems: 2
    ListQueuesRequest:
      type: object
      title: ListQueuesRequest
      properties: {}
    QueueSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/QueueSummary'
    ListRoutingProfileQueuesRequest:
      type: object
      title: ListRoutingProfileQueuesRequest
      properties: {}
    RoutingProfileQueueConfigSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/RoutingProfileQueueConfigSummary'
    ListRoutingProfilesRequest:
      type: object
      title: ListRoutingProfilesRequest
      properties: {}
    RoutingProfileSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/RoutingProfileSummary'
    ListSecurityProfilesRequest:
      type: object
      title: ListSecurityProfilesRequest
      properties: {}
    SecurityProfileSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityProfileSummary'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    ListUserHierarchyGroupsRequest:
      type: object
      title: ListUserHierarchyGroupsRequest
      properties: {}
    ListUsersRequest:
      type: object
      title: ListUsersRequest
      properties: {}
    UserSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/UserSummary'
    ParticipantDetails:
      type: object
      required:
        - DisplayName
      properties:
        DisplayName:
          allOf:
            - $ref: '#/components/schemas/DisplayName'
            - description: Display name of the participant.
      description: The customer's details.
    ParticipantId:
      type: string
      minLength: 1
      maxLength: 256
    ParticipantToken:
      type: string
      minLength: 1
      maxLength: 1000
    PhoneNumberId:
      type: string
    PhoneNumberSummary:
      type: object
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/PhoneNumberId'
            - description: The identifier of the phone number.
        Arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Amazon Resource Name (ARN) of the phone number.
        PhoneNumber:
          allOf:
            - $ref: '#/components/schemas/PhoneNumber'
            - description: The phone number.
        PhoneNumberType:
          allOf:
            - $ref: '#/components/schemas/PhoneNumberType'
            - description: The type of phone number.
        PhoneNumberCountryCode:
          allOf:
            - $ref: '#/components/schemas/PhoneNumberCountryCode'
            - description: The ISO country code.
      description: Contains summary information about a phone number for a contact center.
    Priority:
      type: integer
      minimum: 1
      maximum: 99
    PromptId:
      type: string
      minLength: 1
      maxLength: 256
    PromptName:
      type: string
      minLength: 1
      maxLength: 256
    PromptSummary:
      type: object
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/PromptId'
            - description: The identifier of the prompt.
        Arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Amazon Resource Name (ARN) of the prompt.
        Name:
          allOf:
            - $ref: '#/components/schemas/PromptName'
            - description: The name of the prompt.
      description: Contains information about the prompt.
    QueueName:
      type: string
      minLength: 1
      maxLength: 256
    QueueSummary:
      type: object
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/QueueId'
            - description: The identifier of the queue.
        Arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Amazon Resource Name (ARN) of the queue.
        Name:
          allOf:
            - $ref: '#/components/schemas/QueueName'
            - description: The name of the queue.
        QueueType:
          allOf:
            - $ref: '#/components/schemas/QueueType'
            - description: The type of queue.
      description: Contains summary information about a queue.
    ResumeContactRecordingRequest:
      type: object
      required:
        - InstanceId
        - ContactId
        - InitialContactId
      title: ResumeContactRecordingRequest
      properties:
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The identifier of the Amazon Connect instance.
        ContactId:
          allOf:
            - $ref: '#/components/schemas/ContactId'
            - description: The identifier of the contact.
        InitialContactId:
          allOf:
            - $ref: '#/components/schemas/ContactId'
            - description: The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
    RoutingProfileQueueConfigSummary:
      type: object
      required:
        - QueueId
        - QueueArn
        - QueueName
        - Priority
        - Delay
        - Channel
      properties:
        QueueId:
          allOf:
            - $ref: '#/components/schemas/QueueId'
            - description: The identifier of the queue.
        QueueArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Amazon Resource Name (ARN) of the queue.
        QueueName:
          allOf:
            - $ref: '#/components/schemas/QueueName'
            - description: The name of the queue.
        Priority:
          allOf:
            - $ref: '#/components/schemas/Priority'
            - description: 'The order in which contacts are to be handled for the queue. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and delay</a>.'
        Delay:
          allOf:
            - $ref: '#/components/schemas/Delay'
            - description: 'The delay, in seconds, that a contact should be in the queue before they are routed to an available agent. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and delay</a> in the <i>Amazon Connect Administrator Guide</i>.'
        Channel:
          allOf:
            - $ref: '#/components/schemas/Channel'
            - description: The channels this queue supports.
      description: Contains summary information about a routing profile queue.
    RoutingProfileSummary:
      type: object
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/RoutingProfileId'
            - description: The identifier of the routing profile.
        Arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Amazon Resource Name (ARN) of the routing profile.
        Name:
          allOf:
            - $ref: '#/components/schemas/RoutingProfileName'
            - description: The name of the routing profile.
      description: Contains summary information about a routing profile.
    SecurityProfileName:
      type: string
    SecurityProfileSummary:
      type: object
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/SecurityProfileId'
            - description: The identifier of the security profile.
        Arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Amazon Resource Name (ARN) of the security profile.
        Name:
          allOf:
            - $ref: '#/components/schemas/SecurityProfileName'
            - description: The name of the security profile.
      description: Contains information about a security profile.
    StartChatContactRequest:
      type: object
      required:
        - InstanceId
        - ContactFlowId
        - ParticipantDetails
      title: StartChatContactRequest
      properties:
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The identifier of the Amazon Connect instance.
        ContactFlowId:
          allOf:
            - $ref: '#/components/schemas/ContactFlowId'
            - description: '<p>The identifier of the contact flow for initiating the chat. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the contact flow. On the contact flow page, under the name of the contact flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>'
        Attributes:
          allOf:
            - $ref: '#/components/schemas/Attributes'
            - description: '<p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes. </p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>'
        ParticipantDetails:
          allOf:
            - $ref: '#/components/schemas/ParticipantDetails'
            - description: Information identifying the participant.
        InitialMessage:
          allOf:
            - $ref: '#/components/schemas/ChatMessage'
            - description: The initial message to be sent to the newly created chat.
        ClientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
    VoiceRecordingConfiguration:
      type: object
      properties:
        VoiceRecordingTrack:
          allOf:
            - $ref: '#/components/schemas/VoiceRecordingTrack'
            - description: Identifies which track is being recorded.
      description: Contains information about the recording configuration settings.
    StartContactRecordingRequest:
      type: object
      required:
        - InstanceId
        - ContactId
        - InitialContactId
        - VoiceRecordingConfiguration
      title: StartContactRecordingRequest
      properties:
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The identifier of the Amazon Connect instance.
        ContactId:
          allOf:
            - $ref: '#/components/schemas/ContactId'
            - description: The identifier of the contact.
        InitialContactId:
          allOf:
            - $ref: '#/components/schemas/ContactId'
            - description: The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
        VoiceRecordingConfiguration:
          allOf:
            - $ref: '#/components/schemas/VoiceRecordingConfiguration'
            - description: Who is being recorded.
    StartOutboundVoiceContactRequest:
      type: object
      required:
        - DestinationPhoneNumber
        - ContactFlowId
        - InstanceId
      title: StartOutboundVoiceContactRequest
      properties:
        DestinationPhoneNumber:
          allOf:
            - $ref: '#/components/schemas/PhoneNumber'
            - description: 'The phone number of the customer, in E.164 format.'
        ContactFlowId:
          allOf:
            - $ref: '#/components/schemas/ContactFlowId'
            - description: '<p>The identifier of the contact flow for the outbound call. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the contact flow. On the contact flow page, under the name of the contact flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>'
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The identifier of the Amazon Connect instance.
        ClientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. The token is valid for 7 days after creation. If a contact is already started, the contact ID is returned. If the contact is disconnected, a new contact is started.'
        SourcePhoneNumber:
          allOf:
            - $ref: '#/components/schemas/PhoneNumber'
            - description: 'The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.'
        QueueId:
          allOf:
            - $ref: '#/components/schemas/QueueId'
            - description: 'The queue for the call. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue defined in the contact flow is used. If you do not specify a queue, you must specify a source phone number.'
        Attributes:
          allOf:
            - $ref: '#/components/schemas/Attributes'
            - description: '<p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes.</p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>'
    StopContactRecordingRequest:
      type: object
      required:
        - InstanceId
        - ContactId
        - InitialContactId
      title: StopContactRecordingRequest
      properties:
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The identifier of the Amazon Connect instance.
        ContactId:
          allOf:
            - $ref: '#/components/schemas/ContactId'
            - description: The identifier of the contact.
        InitialContactId:
          allOf:
            - $ref: '#/components/schemas/ContactId'
            - description: The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
    StopContactRequest:
      type: object
      required:
        - ContactId
        - InstanceId
      title: StopContactRequest
      properties:
        ContactId:
          allOf:
            - $ref: '#/components/schemas/ContactId'
            - description: The ID of the contact.
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The identifier of the Amazon Connect instance.
    SuspendContactRecordingRequest:
      type: object
      required:
        - InstanceId
        - ContactId
        - InitialContactId
      title: SuspendContactRecordingRequest
      properties:
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The identifier of the Amazon Connect instance.
        ContactId:
          allOf:
            - $ref: '#/components/schemas/ContactId'
            - description: The identifier of the contact.
        InitialContactId:
          allOf:
            - $ref: '#/components/schemas/ContactId'
            - description: The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 200
    TagResourceRequest:
      type: object
      required:
        - tags
      title: TagResourceRequest
      properties:
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: 'One or more tags. For example, { "tags": {"key1":"value1", "key2":"value2"} }.'
    ThresholdValue:
      type: number
      format: double
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateContactAttributesRequest:
      type: object
      required:
        - InitialContactId
        - InstanceId
        - Attributes
      title: UpdateContactAttributesRequest
      properties:
        InitialContactId:
          allOf:
            - $ref: '#/components/schemas/ContactId'
            - description: The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceId'
            - description: The identifier of the Amazon Connect instance.
        Attributes:
          allOf:
            - $ref: '#/components/schemas/Attributes'
            - description: '<p>The Amazon Connect attributes. These attributes can be accessed in contact flows just like any other contact attributes.</p> <p>You can have up to 32,768 UTF-8 bytes across all attributes for a contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>'
    UpdateContactFlowContentRequest:
      type: object
      required:
        - Content
      title: UpdateContactFlowContentRequest
      properties:
        Content:
          allOf:
            - $ref: '#/components/schemas/ContactFlowContent'
            - description: 'The JSON string that represents contact flow’s content. For an example, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language-example.html">Example contact flow in Amazon Connect Flow language</a> in the <i>Amazon Connect Administrator Guide</i>. '
    UpdateContactFlowNameRequest:
      type: object
      title: UpdateContactFlowNameRequest
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/ContactFlowName'
            - description: The name of the contact flow.
        Description:
          allOf:
            - $ref: '#/components/schemas/ContactFlowDescription'
            - description: The description of the contact flow.
    UpdateRoutingProfileConcurrencyRequest:
      type: object
      required:
        - MediaConcurrencies
      title: UpdateRoutingProfileConcurrencyRequest
      properties:
        MediaConcurrencies:
          allOf:
            - $ref: '#/components/schemas/MediaConcurrencies'
            - description: The channels agents can handle in the Contact Control Panel (CCP).
    UpdateRoutingProfileDefaultOutboundQueueRequest:
      type: object
      required:
        - DefaultOutboundQueueId
      title: UpdateRoutingProfileDefaultOutboundQueueRequest
      properties:
        DefaultOutboundQueueId:
          allOf:
            - $ref: '#/components/schemas/QueueId'
            - description: The identifier for the default outbound queue.
    UpdateRoutingProfileNameRequest:
      type: object
      title: UpdateRoutingProfileNameRequest
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/RoutingProfileName'
            - description: The name of the routing profile. Must not be more than 127 characters.
        Description:
          allOf:
            - $ref: '#/components/schemas/RoutingProfileDescription'
            - description: The description of the routing profile. Must not be more than 250 characters.
    UpdateRoutingProfileQueuesRequest:
      type: object
      required:
        - QueueConfigs
      title: UpdateRoutingProfileQueuesRequest
      properties:
        QueueConfigs:
          allOf:
            - $ref: '#/components/schemas/RoutingProfileQueueConfigList'
            - description: The queues to be updated for this routing profile.
    UpdateUserHierarchyRequest:
      type: object
      title: UpdateUserHierarchyRequest
      properties:
        HierarchyGroupId:
          allOf:
            - $ref: '#/components/schemas/HierarchyGroupId'
            - description: The identifier of the hierarchy group.
    UpdateUserIdentityInfoRequest:
      type: object
      required:
        - IdentityInfo
      title: UpdateUserIdentityInfoRequest
      properties:
        IdentityInfo:
          allOf:
            - $ref: '#/components/schemas/UserIdentityInfo'
            - description: The identity information for the user.
    UpdateUserPhoneConfigRequest:
      type: object
      required:
        - PhoneConfig
      title: UpdateUserPhoneConfigRequest
      properties:
        PhoneConfig:
          allOf:
            - $ref: '#/components/schemas/UserPhoneConfig'
            - description: Information about phone configuration settings for the user.
    UpdateUserRoutingProfileRequest:
      type: object
      required:
        - RoutingProfileId
      title: UpdateUserRoutingProfileRequest
      properties:
        RoutingProfileId:
          allOf:
            - $ref: '#/components/schemas/RoutingProfileId'
            - description: The identifier of the routing profile for the user.
    UpdateUserSecurityProfilesRequest:
      type: object
      required:
        - SecurityProfileIds
      title: UpdateUserSecurityProfilesRequest
      properties:
        SecurityProfileIds:
          allOf:
            - $ref: '#/components/schemas/SecurityProfileIds'
            - description: The identifiers of the security profiles for the user.
    UserSummary:
      type: object
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/UserId'
            - description: The identifier of the user account.
        Arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Amazon Resource Name (ARN) of the user account.
        Username:
          allOf:
            - $ref: '#/components/schemas/AgentUsername'
            - description: The Amazon Connect user name of the user account.
      description: Contains summary information about a user.
security:
  - hmac: []
