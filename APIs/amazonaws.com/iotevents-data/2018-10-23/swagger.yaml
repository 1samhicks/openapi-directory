swagger: '2.0'
schemes:
  - https
  - http
host: data.iotevents.amazonaws.com
basePath: /
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: 'AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. AWS IoT Events Data API commands enable you to send inputs to detectors, list detectors, and view or update a detector''s status.'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS IoT Events Data
  version: '2018-10-23'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iotevents-data-2018-10-23.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: iotevents-data
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/iotevents/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /detectors:
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Updates the state, variable values, and timer settings of one or more detectors (instances) of a specified detector model.'
      operationId: BatchUpdateDetector
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              detectors:
                description: 'The list of detectors (instances) to update, along with the values to update.'
                items:
                  $ref: '#/definitions/UpdateDetectorRequest'
                minItems: 1
                type: array
            required:
              - detectors
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchUpdateDetectorResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
  '/detectors/{detectorModelName}':
    get:
      description: Lists detectors (the instances of a detector model).
      operationId: ListDetectors
      parameters:
        - description: The name of the detector model whose detectors (instances) are listed.
          in: path
          maxLength: 128
          minLength: 1
          name: detectorModelName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - description: A filter that limits results to those detectors (instances) in the given state.
          in: query
          maxLength: 128
          minLength: 1
          name: stateName
          required: false
          type: string
        - description: The token for the next set of results.
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of results to return at one time.
          in: query
          maximum: 250
          minimum: 1
          name: maxResults
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDetectorsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/detectors/{detectorModelName}/keyValues/':
    get:
      description: Returns information about the specified detector (instance).
      operationId: DescribeDetector
      parameters:
        - description: The name of the detector model whose detectors (instances) you want information about.
          in: path
          maxLength: 128
          minLength: 1
          name: detectorModelName
          pattern: '^[a-zA-Z0-9_-]+$'
          required: true
          type: string
        - description: A filter used to limit results to detectors (instances) created because of the given key ID.
          in: query
          maxLength: 128
          minLength: 1
          name: keyValue
          pattern: '^[a-zA-Z0-9\-_:]+$'
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDetectorResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /inputs/messages:
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Sends a set of messages to the AWS IoT Events system. Each message payload is transformed into the input you specify (<code>"inputName"</code>) and ingested into any detectors that monitor that input. If multiple messages are sent, the order in which the messages are processed isn''t guaranteed. To guarantee ordering, you must send messages one at a time and wait for a successful response.'
      operationId: BatchPutMessage
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              messages:
                description: 'The list of messages to send. Each message has the following format: <code>''{ "messageId": "string", "inputName": "string", "payload": "string"}''</code> '
                items:
                  $ref: '#/definitions/Message'
                minItems: 1
                type: array
            required:
              - messages
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchPutMessageResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
definitions:
  BatchPutMessageErrorEntries:
    items:
      $ref: '#/definitions/BatchPutMessageErrorEntry'
    type: array
  BatchPutMessageErrorEntry:
    description: Contains information about the errors encountered.
    properties:
      errorCode:
        $ref: '#/definitions/ErrorCode'
        description: The code associated with the error.
      errorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: More information about the error.
      messageId:
        $ref: '#/definitions/MessageId'
        description: The ID of the message that caused the error. (See the value corresponding to the <code>"messageId"</code> key in the <code>"message"</code> object.)
    type: object
  BatchPutMessageRequest:
    properties:
      messages:
        $ref: '#/definitions/Messages'
        description: 'The list of messages to send. Each message has the following format: <code>''{ "messageId": "string", "inputName": "string", "payload": "string"}''</code> '
    required:
      - messages
    type: object
  BatchPutMessageResponse:
    properties:
      BatchPutMessageErrorEntries:
        $ref: '#/definitions/BatchPutMessageErrorEntries'
        description: A list of any errors encountered when sending the messages.
    type: object
  BatchUpdateDetectorErrorEntries:
    items:
      $ref: '#/definitions/BatchUpdateDetectorErrorEntry'
    type: array
  BatchUpdateDetectorErrorEntry:
    description: Information about the error that occured when attempting to update a detector.
    properties:
      errorCode:
        $ref: '#/definitions/ErrorCode'
        description: The code of the error.
      errorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: A message describing the error.
      messageId:
        $ref: '#/definitions/MessageId'
        description: The <code>"messageId"</code> of the update request that caused the error. (The value of the <code>"messageId"</code> in the update request <code>"Detector"</code> object.)
    type: object
  BatchUpdateDetectorRequest:
    properties:
      detectors:
        $ref: '#/definitions/UpdateDetectorRequests'
        description: 'The list of detectors (instances) to update, along with the values to update.'
    required:
      - detectors
    type: object
  BatchUpdateDetectorResponse:
    properties:
      batchUpdateDetectorErrorEntries:
        $ref: '#/definitions/BatchUpdateDetectorErrorEntries'
        description: 'A list of those detector updates that resulted in errors. (If an error is listed here, the specific update did not occur.)'
    type: object
  DescribeDetectorRequest:
    properties: {}
    type: object
  DescribeDetectorResponse:
    properties:
      detector:
        $ref: '#/definitions/Detector'
        description: Information about the detector (instance).
    type: object
  Detector:
    description: Information about the detector (instance).
    properties:
      creationTime:
        $ref: '#/definitions/Timestamp'
        description: The time the detector (instance) was created.
      detectorModelName:
        $ref: '#/definitions/DetectorModelName'
        description: The name of the detector model that created this detector (instance).
      detectorModelVersion:
        $ref: '#/definitions/DetectorModelVersion'
        description: The version of the detector model that created this detector (instance).
      keyValue:
        $ref: '#/definitions/KeyValue'
        description: The value of the key (identifying the device or system) that caused the creation of this detector (instance).
      lastUpdateTime:
        $ref: '#/definitions/Timestamp'
        description: The time the detector (instance) was last updated.
      state:
        $ref: '#/definitions/DetectorState'
        description: The current state of the detector (instance).
    type: object
  DetectorModelName:
    maxLength: 128
    minLength: 1
    pattern: '^[a-zA-Z0-9_-]+$'
    type: string
  DetectorModelVersion:
    maxLength: 128
    minLength: 1
    type: string
  DetectorState:
    description: Information about the current state of the detector instance.
    properties:
      stateName:
        $ref: '#/definitions/StateName'
        description: The name of the state.
      timers:
        $ref: '#/definitions/Timers'
        description: The current state of the detector's timers.
      variables:
        $ref: '#/definitions/Variables'
        description: The current values of the detector's variables.
    required:
      - stateName
      - variables
      - timers
    type: object
  DetectorStateDefinition:
    description: 'The new state, variable values, and timer settings of the detector (instance).'
    properties:
      stateName:
        $ref: '#/definitions/StateName'
        description: The name of the new state of the detector (instance).
      timers:
        $ref: '#/definitions/TimerDefinitions'
        description: 'The new values of the detector''s timers. Any timer whose value isn''t specified is cleared, and its timeout event won''t occur.'
      variables:
        $ref: '#/definitions/VariableDefinitions'
        description: The new values of the detector's variables. Any variable whose value isn't specified is cleared.
    required:
      - stateName
      - variables
      - timers
    type: object
  DetectorStateSummary:
    description: Information about the detector state.
    properties:
      stateName:
        $ref: '#/definitions/StateName'
        description: The name of the state.
    type: object
  DetectorSummaries:
    items:
      $ref: '#/definitions/DetectorSummary'
    type: array
  DetectorSummary:
    description: Information about the detector (instance).
    properties:
      creationTime:
        $ref: '#/definitions/Timestamp'
        description: The time the detector (instance) was created.
      detectorModelName:
        $ref: '#/definitions/DetectorModelName'
        description: The name of the detector model that created this detector (instance).
      detectorModelVersion:
        $ref: '#/definitions/DetectorModelVersion'
        description: The version of the detector model that created this detector (instance).
      keyValue:
        $ref: '#/definitions/KeyValue'
        description: The value of the key (identifying the device or system) that caused the creation of this detector (instance).
      lastUpdateTime:
        $ref: '#/definitions/Timestamp'
        description: The time the detector (instance) was last updated.
      state:
        $ref: '#/definitions/DetectorStateSummary'
        description: The current state of the detector (instance).
    type: object
  ErrorCode:
    enum:
      - ResourceNotFoundException
      - InvalidRequestException
      - InternalFailureException
      - ServiceUnavailableException
      - ThrottlingException
    type: string
  ErrorMessage:
    type: string
  InputName:
    maxLength: 128
    minLength: 1
    pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'
    type: string
  InternalFailureException: {}
  InvalidRequestException: {}
  KeyValue:
    maxLength: 128
    minLength: 1
    pattern: '^[a-zA-Z0-9\-_:]+$'
    type: string
  ListDetectorsRequest:
    properties: {}
    type: object
  ListDetectorsResponse:
    properties:
      detectorSummaries:
        $ref: '#/definitions/DetectorSummaries'
        description: A list of summary information about the detectors (instances).
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token to retrieve the next set of results, or <code>null</code> if there are no additional results.'
    type: object
  MaxResults:
    maximum: 250
    minimum: 1
    type: integer
  Message:
    description: Information about a message.
    properties:
      inputName:
        $ref: '#/definitions/InputName'
        description: The name of the input into which the message payload is transformed.
      messageId:
        $ref: '#/definitions/MessageId'
        description: 'The ID to assign to the message. Within each batch sent, each <code>"messageId"</code> must be unique.'
      payload:
        $ref: '#/definitions/Payload'
        description: The payload of the message. This can be a JSON string or a Base-64-encoded string representing binary data (in which case you must decode it).
    required:
      - messageId
      - inputName
      - payload
    type: object
  MessageId:
    maxLength: 64
    minLength: 1
    pattern: '^[a-zA-Z0-9_-]+$'
    type: string
  Messages:
    items:
      $ref: '#/definitions/Message'
    minItems: 1
    type: array
  NextToken:
    type: string
  Payload:
    type: string
  ResourceNotFoundException: {}
  Seconds:
    type: integer
  ServiceUnavailableException: {}
  StateName:
    maxLength: 128
    minLength: 1
    type: string
  ThrottlingException: {}
  Timer:
    description: The current state of a timer.
    properties:
      name:
        $ref: '#/definitions/TimerName'
        description: The name of the timer.
      timestamp:
        $ref: '#/definitions/Timestamp'
        description: The number of seconds which have elapsed on the timer.
    required:
      - name
      - timestamp
    type: object
  TimerDefinition:
    description: The new setting of a timer.
    properties:
      name:
        $ref: '#/definitions/TimerName'
        description: The name of the timer.
      seconds:
        $ref: '#/definitions/Seconds'
        description: The new setting of the timer (the number of seconds before the timer elapses).
    required:
      - name
      - seconds
    type: object
  TimerDefinitions:
    items:
      $ref: '#/definitions/TimerDefinition'
    type: array
  TimerName:
    maxLength: 128
    minLength: 1
    type: string
  Timers:
    items:
      $ref: '#/definitions/Timer'
    type: array
  Timestamp:
    format: date-time
    type: string
  UpdateDetectorRequest:
    description: Information used to update the detector (instance).
    properties:
      detectorModelName:
        $ref: '#/definitions/DetectorModelName'
        description: The name of the detector model that created the detectors (instances).
      keyValue:
        $ref: '#/definitions/KeyValue'
        description: The value of the input key attribute (identifying the device or system) that caused the creation of this detector (instance).
      messageId:
        $ref: '#/definitions/MessageId'
        description: The ID to assign to the detector update <code>"message"</code>. Each <code>"messageId"</code> must be unique within each batch sent.
      state:
        $ref: '#/definitions/DetectorStateDefinition'
        description: 'The new state, variable values, and timer settings of the detector (instance).'
    required:
      - messageId
      - detectorModelName
      - state
    type: object
  UpdateDetectorRequests:
    items:
      $ref: '#/definitions/UpdateDetectorRequest'
    minItems: 1
    type: array
  Variable:
    description: The current state of the variable.
    properties:
      name:
        $ref: '#/definitions/VariableName'
        description: The name of the variable.
      value:
        $ref: '#/definitions/VariableValue'
        description: The current value of the variable.
    required:
      - name
      - value
    type: object
  VariableDefinition:
    description: The new value of the variable.
    properties:
      name:
        $ref: '#/definitions/VariableName'
        description: The name of the variable.
      value:
        $ref: '#/definitions/VariableValue'
        description: The new value of the variable.
    required:
      - name
      - value
    type: object
  VariableDefinitions:
    items:
      $ref: '#/definitions/VariableDefinition'
    type: array
  VariableName:
    maxLength: 128
    minLength: 1
    pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'
    type: string
  VariableValue:
    maxLength: 1024
    minLength: 1
    type: string
  Variables:
    items:
      $ref: '#/definitions/Variable'
    type: array
x-servers:
  - description: The AWS IoT Events Data multi-region endpoint
    url: 'http://data.iotevents.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The AWS IoT Events Data multi-region endpoint
    url: 'https://data.iotevents.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The AWS IoT Events Data endpoint for China (Beijing) and China (Ningxia)
    url: 'http://data.iotevents.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
  - description: The AWS IoT Events Data endpoint for China (Beijing) and China (Ningxia)
    url: 'https://data.iotevents.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
