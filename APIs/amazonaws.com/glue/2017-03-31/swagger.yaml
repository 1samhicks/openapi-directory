swagger: '2.0'
schemes:
  - https
  - http
host: glue.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: <fullname>AWS Glue</fullname> <p>Defines the public endpoint for the AWS Glue service.</p>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS Glue
  version: '2017-03-31'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/glue-2017-03-31.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: glue
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/glue/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  '/#X-Amz-Target=AWSGlue.BatchCreatePartition':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates one or more partitions in a batch operation.
      operationId: BatchCreatePartition
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BatchCreatePartitionRequest'
        - enum:
            - AWSGlue.BatchCreatePartition
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchCreatePartitionResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '482':
          description: ResourceNumberLimitExceededException
          schema:
            $ref: '#/definitions/ResourceNumberLimitExceededException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '484':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '485':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '486':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.BatchDeleteConnection':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes a list of connection definitions from the Data Catalog.
      operationId: BatchDeleteConnection
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BatchDeleteConnectionRequest'
        - enum:
            - AWSGlue.BatchDeleteConnection
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchDeleteConnectionResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.BatchDeletePartition':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes one or more partitions in a batch operation.
      operationId: BatchDeletePartition
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BatchDeletePartitionRequest'
        - enum:
            - AWSGlue.BatchDeletePartition
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchDeletePartitionResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.BatchDeleteTable':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Deletes multiple tables at once.</p> <note> <p>After completing this operation, you no longer have access to the table versions and partitions that belong to the deleted table. AWS Glue deletes these "orphaned" resources asynchronously in a timely manner, at the discretion of the service.</p> <p>To ensure the immediate deletion of all related resources, before calling <code>BatchDeleteTable</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, and <code>DeletePartition</code> or <code>BatchDeletePartition</code>, to delete any resources that belong to the table.</p> </note>'
      operationId: BatchDeleteTable
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BatchDeleteTableRequest'
        - enum:
            - AWSGlue.BatchDeleteTable
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchDeleteTableResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.BatchDeleteTableVersion':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes a specified batch of versions of a table.
      operationId: BatchDeleteTableVersion
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BatchDeleteTableVersionRequest'
        - enum:
            - AWSGlue.BatchDeleteTableVersion
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchDeleteTableVersionResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.BatchGetCrawlers':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a list of resource metadata for a given list of crawler names. After calling the <code>ListCrawlers</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.'
      operationId: BatchGetCrawlers
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BatchGetCrawlersRequest'
        - enum:
            - AWSGlue.BatchGetCrawlers
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchGetCrawlersResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.BatchGetDevEndpoints':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a list of resource metadata for a given list of development endpoint names. After calling the <code>ListDevEndpoints</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.'
      operationId: BatchGetDevEndpoints
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BatchGetDevEndpointsRequest'
        - enum:
            - AWSGlue.BatchGetDevEndpoints
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchGetDevEndpointsResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
  '/#X-Amz-Target=AWSGlue.BatchGetJobs':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a list of resource metadata for a given list of job names. After calling the <code>ListJobs</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags. '
      operationId: BatchGetJobs
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BatchGetJobsRequest'
        - enum:
            - AWSGlue.BatchGetJobs
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchGetJobsResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '482':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
  '/#X-Amz-Target=AWSGlue.BatchGetPartition':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves partitions in a batch request.
      operationId: BatchGetPartition
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BatchGetPartitionRequest'
        - enum:
            - AWSGlue.BatchGetPartition
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchGetPartitionResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '484':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.BatchGetTriggers':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a list of resource metadata for a given list of trigger names. After calling the <code>ListTriggers</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.'
      operationId: BatchGetTriggers
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BatchGetTriggersRequest'
        - enum:
            - AWSGlue.BatchGetTriggers
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchGetTriggersResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '482':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
  '/#X-Amz-Target=AWSGlue.BatchGetWorkflows':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a list of resource metadata for a given list of workflow names. After calling the <code>ListWorkflows</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.'
      operationId: BatchGetWorkflows
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BatchGetWorkflowsRequest'
        - enum:
            - AWSGlue.BatchGetWorkflows
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchGetWorkflowsResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '482':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
  '/#X-Amz-Target=AWSGlue.BatchStopJobRun':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Stops one or more job runs for a specified job definition.
      operationId: BatchStopJobRun
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BatchStopJobRunRequest'
        - enum:
            - AWSGlue.BatchStopJobRun
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchStopJobRunResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.CancelMLTaskRun':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Cancels (stops) a task run. Machine learning task runs are asynchronous tasks that AWS Glue runs on your behalf as part of various machine learning workflows. You can cancel a machine learning task run at any time by calling <code>CancelMLTaskRun</code> with a task run''s parent transform''s <code>TransformID</code> and the task run''s <code>TaskRunId</code>. '
      operationId: CancelMLTaskRun
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CancelMLTaskRunRequest'
        - enum:
            - AWSGlue.CancelMLTaskRun
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelMLTaskRunResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
  '/#X-Amz-Target=AWSGlue.CreateClassifier':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Creates a classifier in the user''s account. This can be a <code>GrokClassifier</code>, an <code>XMLClassifier</code>, a <code>JsonClassifier</code>, or a <code>CsvClassifier</code>, depending on which field of the request is present.'
      operationId: CreateClassifier
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateClassifierRequest'
        - enum:
            - AWSGlue.CreateClassifier
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateClassifierResponse'
        '480':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.CreateConnection':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a connection definition in the Data Catalog.
      operationId: CreateConnection
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateConnectionRequest'
        - enum:
            - AWSGlue.CreateConnection
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateConnectionResponse'
        '480':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: ResourceNumberLimitExceededException
          schema:
            $ref: '#/definitions/ResourceNumberLimitExceededException'
        '484':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.CreateCrawler':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Creates a new crawler with specified targets, role, configuration, and optional schedule. At least one crawl target must be specified, in the <code>s3Targets</code> field, the <code>jdbcTargets</code> field, or the <code>DynamoDBTargets</code> field.'
      operationId: CreateCrawler
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateCrawlerRequest'
        - enum:
            - AWSGlue.CreateCrawler
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateCrawlerResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: ResourceNumberLimitExceededException
          schema:
            $ref: '#/definitions/ResourceNumberLimitExceededException'
  '/#X-Amz-Target=AWSGlue.CreateDatabase':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a new database in a Data Catalog.
      operationId: CreateDatabase
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateDatabaseRequest'
        - enum:
            - AWSGlue.CreateDatabase
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDatabaseResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '482':
          description: ResourceNumberLimitExceededException
          schema:
            $ref: '#/definitions/ResourceNumberLimitExceededException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '484':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '485':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.CreateDevEndpoint':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a new development endpoint.
      operationId: CreateDevEndpoint
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateDevEndpointRequest'
        - enum:
            - AWSGlue.CreateDevEndpoint
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDevEndpointResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '482':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '484':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '485':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '486':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '487':
          description: ResourceNumberLimitExceededException
          schema:
            $ref: '#/definitions/ResourceNumberLimitExceededException'
  '/#X-Amz-Target=AWSGlue.CreateJob':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a new job definition.
      operationId: CreateJob
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateJobRequest'
        - enum:
            - AWSGlue.CreateJob
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateJobResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '482':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '484':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '485':
          description: ResourceNumberLimitExceededException
          schema:
            $ref: '#/definitions/ResourceNumberLimitExceededException'
        '486':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
  '/#X-Amz-Target=AWSGlue.CreateMLTransform':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates an AWS Glue machine learning transform. This operation creates the transform and all the necessary parameters to train it.</p> <p>Call this operation as the first step in the process of using a machine learning transform (such as the <code>FindMatches</code> transform) for deduplicating data. You can provide an optional <code>Description</code>, in addition to the parameters that you want to use for your algorithm.</p> <p>You must also specify certain parameters for the tasks that AWS Glue runs on your behalf as part of learning from your data and creating a high-quality machine learning transform. These parameters include <code>Role</code>, and optionally, <code>AllocatedCapacity</code>, <code>Timeout</code>, and <code>MaxRetries</code>. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-jobs-job.html">Jobs</a>.</p>'
      operationId: CreateMLTransform
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateMLTransformRequest'
        - enum:
            - AWSGlue.CreateMLTransform
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateMLTransformResponse'
        '480':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: ResourceNumberLimitExceededException
          schema:
            $ref: '#/definitions/ResourceNumberLimitExceededException'
        '486':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
  '/#X-Amz-Target=AWSGlue.CreatePartition':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a new partition.
      operationId: CreatePartition
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreatePartitionRequest'
        - enum:
            - AWSGlue.CreatePartition
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePartitionResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '482':
          description: ResourceNumberLimitExceededException
          schema:
            $ref: '#/definitions/ResourceNumberLimitExceededException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '484':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '485':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '486':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.CreateScript':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Transforms a directed acyclic graph (DAG) into code.
      operationId: CreateScript
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateScriptRequest'
        - enum:
            - AWSGlue.CreateScript
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateScriptResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.CreateSecurityConfiguration':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Creates a new security configuration. A security configuration is a set of security properties that can be used by AWS Glue. You can use a security configuration to encrypt data at rest. For information about using security configurations in AWS Glue, see <a href="https://docs.aws.amazon.com/glue/latest/dg/encryption-security-configuration.html">Encrypting Data Written by Crawlers, Jobs, and Development Endpoints</a>.'
      operationId: CreateSecurityConfiguration
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateSecurityConfigurationRequest'
        - enum:
            - AWSGlue.CreateSecurityConfiguration
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSecurityConfigurationResponse'
        '480':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '484':
          description: ResourceNumberLimitExceededException
          schema:
            $ref: '#/definitions/ResourceNumberLimitExceededException'
  '/#X-Amz-Target=AWSGlue.CreateTable':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a new table definition in the Data Catalog.
      operationId: CreateTable
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateTableRequest'
        - enum:
            - AWSGlue.CreateTable
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTableResponse'
        '480':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '483':
          description: ResourceNumberLimitExceededException
          schema:
            $ref: '#/definitions/ResourceNumberLimitExceededException'
        '484':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '485':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '486':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.CreateTrigger':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a new trigger.
      operationId: CreateTrigger
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateTriggerRequest'
        - enum:
            - AWSGlue.CreateTrigger
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTriggerResponse'
        '480':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '483':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '484':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '485':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '486':
          description: ResourceNumberLimitExceededException
          schema:
            $ref: '#/definitions/ResourceNumberLimitExceededException'
        '487':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
  '/#X-Amz-Target=AWSGlue.CreateUserDefinedFunction':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a new function definition in the Data Catalog.
      operationId: CreateUserDefinedFunction
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateUserDefinedFunctionRequest'
        - enum:
            - AWSGlue.CreateUserDefinedFunction
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateUserDefinedFunctionResponse'
        '480':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '484':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '485':
          description: ResourceNumberLimitExceededException
          schema:
            $ref: '#/definitions/ResourceNumberLimitExceededException'
        '486':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.CreateWorkflow':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a new workflow.
      operationId: CreateWorkflow
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateWorkflowRequest'
        - enum:
            - AWSGlue.CreateWorkflow
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateWorkflowResponse'
        '480':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '484':
          description: ResourceNumberLimitExceededException
          schema:
            $ref: '#/definitions/ResourceNumberLimitExceededException'
        '485':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
  '/#X-Amz-Target=AWSGlue.DeleteClassifier':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Removes a classifier from the Data Catalog.
      operationId: DeleteClassifier
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteClassifierRequest'
        - enum:
            - AWSGlue.DeleteClassifier
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteClassifierResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.DeleteConnection':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes a connection from the Data Catalog.
      operationId: DeleteConnection
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteConnectionRequest'
        - enum:
            - AWSGlue.DeleteConnection
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteConnectionResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.DeleteCrawler':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Removes a specified crawler from the AWS Glue Data Catalog, unless the crawler state is <code>RUNNING</code>.'
      operationId: DeleteCrawler
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteCrawlerRequest'
        - enum:
            - AWSGlue.DeleteCrawler
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteCrawlerResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: CrawlerRunningException
          schema:
            $ref: '#/definitions/CrawlerRunningException'
        '482':
          description: SchedulerTransitioningException
          schema:
            $ref: '#/definitions/SchedulerTransitioningException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.DeleteDatabase':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Removes a specified database from a Data Catalog.</p> <note> <p>After completing this operation, you no longer have access to the tables (and all table versions and partitions that might belong to the tables) and the user-defined functions in the deleted database. AWS Glue deletes these "orphaned" resources asynchronously in a timely manner, at the discretion of the service.</p> <p>To ensure the immediate deletion of all related resources, before calling <code>DeleteDatabase</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, <code>DeletePartition</code> or <code>BatchDeletePartition</code>, <code>DeleteUserDefinedFunction</code>, and <code>DeleteTable</code> or <code>BatchDeleteTable</code>, to delete any resources that belong to the database.</p> </note>'
      operationId: DeleteDatabase
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDatabaseRequest'
        - enum:
            - AWSGlue.DeleteDatabase
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDatabaseResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.DeleteDevEndpoint':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes a specified development endpoint.
      operationId: DeleteDevEndpoint
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDevEndpointRequest'
        - enum:
            - AWSGlue.DeleteDevEndpoint
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDevEndpointResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
  '/#X-Amz-Target=AWSGlue.DeleteJob':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Deletes a specified job definition. If the job definition is not found, no exception is thrown.'
      operationId: DeleteJob
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteJobRequest'
        - enum:
            - AWSGlue.DeleteJob
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteJobResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.DeleteMLTransform':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Deletes an AWS Glue machine learning transform. Machine learning transforms are a special type of transform that use machine learning to learn the details of the transformation to be performed by learning from examples provided by humans. These transformations are then saved by AWS Glue. If you no longer need a transform, you can delete it by calling <code>DeleteMLTransforms</code>. However, any AWS Glue jobs that still reference the deleted transform will no longer succeed.'
      operationId: DeleteMLTransform
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteMLTransformRequest'
        - enum:
            - AWSGlue.DeleteMLTransform
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteMLTransformResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
  '/#X-Amz-Target=AWSGlue.DeletePartition':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes a specified partition.
      operationId: DeletePartition
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeletePartitionRequest'
        - enum:
            - AWSGlue.DeletePartition
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeletePartitionResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.DeleteResourcePolicy':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes a specified policy.
      operationId: DeleteResourcePolicy
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteResourcePolicyRequest'
        - enum:
            - AWSGlue.DeleteResourcePolicy
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteResourcePolicyResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '484':
          description: ConditionCheckFailureException
          schema:
            $ref: '#/definitions/ConditionCheckFailureException'
  '/#X-Amz-Target=AWSGlue.DeleteSecurityConfiguration':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes a specified security configuration.
      operationId: DeleteSecurityConfiguration
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteSecurityConfigurationRequest'
        - enum:
            - AWSGlue.DeleteSecurityConfiguration
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteSecurityConfigurationResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.DeleteTable':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Removes a table definition from the Data Catalog.</p> <note> <p>After completing this operation, you no longer have access to the table versions and partitions that belong to the deleted table. AWS Glue deletes these "orphaned" resources asynchronously in a timely manner, at the discretion of the service.</p> <p>To ensure the immediate deletion of all related resources, before calling <code>DeleteTable</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, and <code>DeletePartition</code> or <code>BatchDeletePartition</code>, to delete any resources that belong to the table.</p> </note>'
      operationId: DeleteTable
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteTableRequest'
        - enum:
            - AWSGlue.DeleteTable
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTableResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.DeleteTableVersion':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes a specified version of a table.
      operationId: DeleteTableVersion
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteTableVersionRequest'
        - enum:
            - AWSGlue.DeleteTableVersion
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTableVersionResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.DeleteTrigger':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Deletes a specified trigger. If the trigger is not found, no exception is thrown.'
      operationId: DeleteTrigger
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteTriggerRequest'
        - enum:
            - AWSGlue.DeleteTrigger
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTriggerResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
  '/#X-Amz-Target=AWSGlue.DeleteUserDefinedFunction':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes an existing function definition from the Data Catalog.
      operationId: DeleteUserDefinedFunction
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteUserDefinedFunctionRequest'
        - enum:
            - AWSGlue.DeleteUserDefinedFunction
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteUserDefinedFunctionResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.DeleteWorkflow':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes a workflow.
      operationId: DeleteWorkflow
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteWorkflowRequest'
        - enum:
            - AWSGlue.DeleteWorkflow
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteWorkflowResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
  '/#X-Amz-Target=AWSGlue.GetCatalogImportStatus':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves the status of a migration operation.
      operationId: GetCatalogImportStatus
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetCatalogImportStatusRequest'
        - enum:
            - AWSGlue.GetCatalogImportStatus
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCatalogImportStatusResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.GetClassifier':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieve a classifier by name.
      operationId: GetClassifier
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetClassifierRequest'
        - enum:
            - AWSGlue.GetClassifier
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetClassifierResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.GetClassifiers':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists all classifier objects in the Data Catalog.
      operationId: GetClassifiers
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetClassifiersRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.GetClassifiers
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetClassifiersResponse'
        '480':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.GetConnection':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves a connection definition from the Data Catalog.
      operationId: GetConnection
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetConnectionRequest'
        - enum:
            - AWSGlue.GetConnection
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetConnectionResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '482':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '483':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.GetConnections':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves a list of connection definitions from the Data Catalog.
      operationId: GetConnections
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetConnectionsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.GetConnections
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetConnectionsResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '482':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '483':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.GetCrawler':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves metadata for a specified crawler.
      operationId: GetCrawler
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetCrawlerRequest'
        - enum:
            - AWSGlue.GetCrawler
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCrawlerResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.GetCrawlerMetrics':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves metrics about specified crawlers.
      operationId: GetCrawlerMetrics
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetCrawlerMetricsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.GetCrawlerMetrics
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCrawlerMetricsResponse'
        '480':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.GetCrawlers':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves metadata for all crawlers defined in the customer account.
      operationId: GetCrawlers
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetCrawlersRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.GetCrawlers
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCrawlersResponse'
        '480':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.GetDataCatalogEncryptionSettings':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves the security configuration for a specified catalog.
      operationId: GetDataCatalogEncryptionSettings
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetDataCatalogEncryptionSettingsRequest'
        - enum:
            - AWSGlue.GetDataCatalogEncryptionSettings
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDataCatalogEncryptionSettingsResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.GetDatabase':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves the definition of a specified database.
      operationId: GetDatabase
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetDatabaseRequest'
        - enum:
            - AWSGlue.GetDatabase
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDatabaseResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '484':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.GetDatabases':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves all databases defined in a given Data Catalog.
      operationId: GetDatabases
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetDatabasesRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.GetDatabases
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDatabasesResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.GetDataflowGraph':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Transforms a Python script into a directed acyclic graph (DAG). '
      operationId: GetDataflowGraph
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetDataflowGraphRequest'
        - enum:
            - AWSGlue.GetDataflowGraph
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDataflowGraphResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.GetDevEndpoint':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Retrieves information about a specified development endpoint.</p> <note> <p>When you create a development endpoint in a virtual private cloud (VPC), AWS Glue returns only a private IP address, and the public IP address field is not populated. When you create a non-VPC development endpoint, AWS Glue returns only a public IP address.</p> </note>'
      operationId: GetDevEndpoint
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetDevEndpointRequest'
        - enum:
            - AWSGlue.GetDevEndpoint
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDevEndpointResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
  '/#X-Amz-Target=AWSGlue.GetDevEndpoints':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Retrieves all the development endpoints in this AWS account.</p> <note> <p>When you create a development endpoint in a virtual private cloud (VPC), AWS Glue returns only a private IP address and the public IP address field is not populated. When you create a non-VPC development endpoint, AWS Glue returns only a public IP address.</p> </note>'
      operationId: GetDevEndpoints
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetDevEndpointsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.GetDevEndpoints
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDevEndpointsResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
  '/#X-Amz-Target=AWSGlue.GetJob':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves an existing job definition.
      operationId: GetJob
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetJobRequest'
        - enum:
            - AWSGlue.GetJob
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetJobResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.GetJobBookmark':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns information on a job bookmark entry.
      operationId: GetJobBookmark
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetJobBookmarkRequest'
        - enum:
            - AWSGlue.GetJobBookmark
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetJobBookmarkResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '484':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/#X-Amz-Target=AWSGlue.GetJobRun':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves the metadata for a given job run.
      operationId: GetJobRun
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetJobRunRequest'
        - enum:
            - AWSGlue.GetJobRun
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetJobRunResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.GetJobRuns':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves metadata for all runs of a given job definition.
      operationId: GetJobRuns
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetJobRunsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.GetJobRuns
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetJobRunsResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.GetJobs':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves all current job definitions.
      operationId: GetJobs
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetJobsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.GetJobs
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetJobsResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.GetMLTaskRun':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets details for a specific task run on a machine learning transform. Machine learning task runs are asynchronous tasks that AWS Glue runs on your behalf as part of various machine learning workflows. You can check the stats of any task run by calling <code>GetMLTaskRun</code> with the <code>TaskRunID</code> and its parent transform's <code>TransformID</code>.
      operationId: GetMLTaskRun
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetMLTaskRunRequest'
        - enum:
            - AWSGlue.GetMLTaskRun
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMLTaskRunResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
  '/#X-Amz-Target=AWSGlue.GetMLTaskRuns':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Gets a list of runs for a machine learning transform. Machine learning task runs are asynchronous tasks that AWS Glue runs on your behalf as part of various machine learning workflows. You can get a sortable, filterable list of machine learning task runs by calling <code>GetMLTaskRuns</code> with their parent transform''s <code>TransformID</code> and other optional parameters as documented in this section.</p> <p>This operation returns a list of historic runs and must be paginated.</p>'
      operationId: GetMLTaskRuns
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetMLTaskRunsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.GetMLTaskRuns
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMLTaskRunsResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
  '/#X-Amz-Target=AWSGlue.GetMLTransform':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets an AWS Glue machine learning transform artifact and all its corresponding metadata. Machine learning transforms are a special type of transform that use machine learning to learn the details of the transformation to be performed by learning from examples provided by humans. These transformations are then saved by AWS Glue. You can retrieve their metadata by calling <code>GetMLTransform</code>.
      operationId: GetMLTransform
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetMLTransformRequest'
        - enum:
            - AWSGlue.GetMLTransform
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMLTransformResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
  '/#X-Amz-Target=AWSGlue.GetMLTransforms':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Gets a sortable, filterable list of existing AWS Glue machine learning transforms. Machine learning transforms are a special type of transform that use machine learning to learn the details of the transformation to be performed by learning from examples provided by humans. These transformations are then saved by AWS Glue, and you can retrieve their metadata by calling <code>GetMLTransforms</code>.'
      operationId: GetMLTransforms
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetMLTransformsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.GetMLTransforms
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMLTransformsResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
  '/#X-Amz-Target=AWSGlue.GetMapping':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates mappings.
      operationId: GetMapping
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetMappingRequest'
        - enum:
            - AWSGlue.GetMapping
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMappingResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
  '/#X-Amz-Target=AWSGlue.GetPartition':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves information about a specified partition.
      operationId: GetPartition
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetPartitionRequest'
        - enum:
            - AWSGlue.GetPartition
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPartitionResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '484':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.GetPartitions':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves information about the partitions in a table.
      operationId: GetPartitions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetPartitionsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.GetPartitions
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPartitionsResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '484':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.GetPlan':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets code to perform a specified mapping.
      operationId: GetPlan
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetPlanRequest'
        - enum:
            - AWSGlue.GetPlan
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPlanResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.GetResourcePolicy':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves a specified resource policy.
      operationId: GetResourcePolicy
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetResourcePolicyRequest'
        - enum:
            - AWSGlue.GetResourcePolicy
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetResourcePolicyResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
  '/#X-Amz-Target=AWSGlue.GetSecurityConfiguration':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves a specified security configuration.
      operationId: GetSecurityConfiguration
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetSecurityConfigurationRequest'
        - enum:
            - AWSGlue.GetSecurityConfiguration
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSecurityConfigurationResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.GetSecurityConfigurations':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves a list of all security configurations.
      operationId: GetSecurityConfigurations
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetSecurityConfigurationsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.GetSecurityConfigurations
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSecurityConfigurationsResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.GetTable':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves the <code>Table</code> definition in a Data Catalog for a specified table.
      operationId: GetTable
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetTableRequest'
        - enum:
            - AWSGlue.GetTable
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTableResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '484':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.GetTableVersion':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves a specified version of a table.
      operationId: GetTableVersion
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetTableVersionRequest'
        - enum:
            - AWSGlue.GetTableVersion
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTableVersionResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '484':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.GetTableVersions':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves a list of strings that identify available versions of a specified table.
      operationId: GetTableVersions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetTableVersionsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.GetTableVersions
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTableVersionsResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '484':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.GetTables':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves the definitions of some or all of the tables in a given <code>Database</code>.
      operationId: GetTables
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetTablesRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.GetTables
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTablesResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '484':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.GetTags':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves a list of tags associated with a resource.
      operationId: GetTags
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetTagsRequest'
        - enum:
            - AWSGlue.GetTags
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTagsResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
  '/#X-Amz-Target=AWSGlue.GetTrigger':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves the definition of a trigger.
      operationId: GetTrigger
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetTriggerRequest'
        - enum:
            - AWSGlue.GetTrigger
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTriggerResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.GetTriggers':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets all the triggers associated with a job.
      operationId: GetTriggers
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetTriggersRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.GetTriggers
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTriggersResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.GetUserDefinedFunction':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves a specified function definition from the Data Catalog.
      operationId: GetUserDefinedFunction
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetUserDefinedFunctionRequest'
        - enum:
            - AWSGlue.GetUserDefinedFunction
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetUserDefinedFunctionResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '484':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.GetUserDefinedFunctions':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves multiple function definitions from the Data Catalog.
      operationId: GetUserDefinedFunctions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetUserDefinedFunctionsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.GetUserDefinedFunctions
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetUserDefinedFunctionsResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '484':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.GetWorkflow':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves resource metadata for a workflow.
      operationId: GetWorkflow
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetWorkflowRequest'
        - enum:
            - AWSGlue.GetWorkflow
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetWorkflowResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.GetWorkflowRun':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Retrieves the metadata for a given workflow run. '
      operationId: GetWorkflowRun
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetWorkflowRunRequest'
        - enum:
            - AWSGlue.GetWorkflowRun
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetWorkflowRunResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.GetWorkflowRunProperties':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves the workflow run properties which were set during the run.
      operationId: GetWorkflowRunProperties
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetWorkflowRunPropertiesRequest'
        - enum:
            - AWSGlue.GetWorkflowRunProperties
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetWorkflowRunPropertiesResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.GetWorkflowRuns':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves metadata for all runs of a given workflow.
      operationId: GetWorkflowRuns
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetWorkflowRunsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.GetWorkflowRuns
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetWorkflowRunsResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.ImportCatalogToGlue':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Imports an existing Amazon Athena Data Catalog to AWS Glue
      operationId: ImportCatalogToGlue
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ImportCatalogToGlueRequest'
        - enum:
            - AWSGlue.ImportCatalogToGlue
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ImportCatalogToGlueResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.ListCrawlers':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Retrieves the names of all crawler resources in this AWS account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.</p>'
      operationId: ListCrawlers
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListCrawlersRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.ListCrawlers
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCrawlersResponse'
        '480':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.ListDevEndpoints':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Retrieves the names of all <code>DevEndpoint</code> resources in this AWS account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.</p>'
      operationId: ListDevEndpoints
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListDevEndpointsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.ListDevEndpoints
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDevEndpointsResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.ListJobs':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Retrieves the names of all job resources in this AWS account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.</p>'
      operationId: ListJobs
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListJobsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.ListJobs
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListJobsResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.ListTriggers':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Retrieves the names of all trigger resources in this AWS account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.</p>'
      operationId: ListTriggers
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTriggersRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.ListTriggers
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTriggersResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.ListWorkflows':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists names of workflows created in the account.
      operationId: ListWorkflows
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListWorkflowsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.ListWorkflows
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListWorkflowsResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.PutDataCatalogEncryptionSettings':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Sets the security configuration for a specified catalog. After the configuration has been set, the specified encryption is applied to every catalog write thereafter.'
      operationId: PutDataCatalogEncryptionSettings
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutDataCatalogEncryptionSettingsRequest'
        - enum:
            - AWSGlue.PutDataCatalogEncryptionSettings
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutDataCatalogEncryptionSettingsResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.PutResourcePolicy':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Sets the Data Catalog resource policy for access control.
      operationId: PutResourcePolicy
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutResourcePolicyRequest'
        - enum:
            - AWSGlue.PutResourcePolicy
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutResourcePolicyResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '484':
          description: ConditionCheckFailureException
          schema:
            $ref: '#/definitions/ConditionCheckFailureException'
  '/#X-Amz-Target=AWSGlue.PutWorkflowRunProperties':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Puts the specified workflow run properties for the given workflow run. If a property already exists for the specified run, then it overrides the value otherwise adds the property to existing properties.'
      operationId: PutWorkflowRunProperties
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutWorkflowRunPropertiesRequest'
        - enum:
            - AWSGlue.PutWorkflowRunProperties
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutWorkflowRunPropertiesResponse'
        '480':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '484':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '485':
          description: ResourceNumberLimitExceededException
          schema:
            $ref: '#/definitions/ResourceNumberLimitExceededException'
        '486':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
  '/#X-Amz-Target=AWSGlue.ResetJobBookmark':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Resets a bookmark entry.
      operationId: ResetJobBookmark
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ResetJobBookmarkRequest'
        - enum:
            - AWSGlue.ResetJobBookmark
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResetJobBookmarkResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.SearchTables':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Searches a set of tables based on properties in the table metadata as well as on the parent database. You can search against text or filter conditions. </p> <p>You can only get tables that you have access to based on the security policies defined in Lake Formation. You need at least a read-only access to the table for it to be returned. If you do not have access to all the columns in the table, these columns will not be searched against when returning the list of tables back to you. If you have access to the columns but not the data in the columns, those columns and the associated metadata for those columns will be included in the search. </p>'
      operationId: SearchTables
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SearchTablesRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AWSGlue.SearchTables
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchTablesResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.StartCrawler':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Starts a crawl using the specified crawler, regardless of what is scheduled. If the crawler is already running, returns a <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-exceptions.html#aws-glue-api-exceptions-CrawlerRunningException">CrawlerRunningException</a>.'
      operationId: StartCrawler
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartCrawlerRequest'
        - enum:
            - AWSGlue.StartCrawler
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartCrawlerResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: CrawlerRunningException
          schema:
            $ref: '#/definitions/CrawlerRunningException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.StartCrawlerSchedule':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Changes the schedule state of the specified crawler to <code>SCHEDULED</code>, unless the crawler is already running or the schedule state is already <code>SCHEDULED</code>.'
      operationId: StartCrawlerSchedule
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartCrawlerScheduleRequest'
        - enum:
            - AWSGlue.StartCrawlerSchedule
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartCrawlerScheduleResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: SchedulerRunningException
          schema:
            $ref: '#/definitions/SchedulerRunningException'
        '482':
          description: SchedulerTransitioningException
          schema:
            $ref: '#/definitions/SchedulerTransitioningException'
        '483':
          description: NoScheduleException
          schema:
            $ref: '#/definitions/NoScheduleException'
        '484':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.StartExportLabelsTaskRun':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Begins an asynchronous task to export all labeled data for a particular transform. This task is the only label-related API call that is not part of the typical active learning workflow. You typically use <code>StartExportLabelsTaskRun</code> when you want to work with all of your existing labels at the same time, such as when you want to remove or change labels that were previously submitted as truth. This API operation accepts the <code>TransformId</code> whose labels you want to export and an Amazon Simple Storage Service (Amazon S3) path to export the labels to. The operation returns a <code>TaskRunId</code>. You can check on the status of your task run by calling the <code>GetMLTaskRun</code> API.'
      operationId: StartExportLabelsTaskRun
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartExportLabelsTaskRunRequest'
        - enum:
            - AWSGlue.StartExportLabelsTaskRun
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartExportLabelsTaskRunResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
  '/#X-Amz-Target=AWSGlue.StartImportLabelsTaskRun':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Enables you to provide additional labels (examples of truth) to be used to teach the machine learning transform and improve its quality. This API operation is generally used as part of the active learning workflow that starts with the <code>StartMLLabelingSetGenerationTaskRun</code> call and that ultimately results in improving the quality of your machine learning transform. </p> <p>After the <code>StartMLLabelingSetGenerationTaskRun</code> finishes, AWS Glue machine learning will have generated a series of questions for humans to answer. (Answering these questions is often called ''labeling'' in the machine learning workflows). In the case of the <code>FindMatches</code> transform, these questions are of the form, “What is the correct way to group these rows together into groups composed entirely of matching records?” After the labeling process is finished, users upload their answers/labels with a call to <code>StartImportLabelsTaskRun</code>. After <code>StartImportLabelsTaskRun</code> finishes, all future runs of the machine learning transform use the new and improved labels and perform a higher-quality transformation.</p> <p>By default, <code>StartMLLabelingSetGenerationTaskRun</code> continually learns from and combines all labels that you upload unless you set <code>Replace</code> to true. If you set <code>Replace</code> to true, <code>StartImportLabelsTaskRun</code> deletes and forgets all previously uploaded labels and learns only from the exact set that you upload. Replacing labels can be helpful if you realize that you previously uploaded incorrect labels, and you believe that they are having a negative effect on your transform quality.</p> <p>You can check on the status of your task run by calling the <code>GetMLTaskRun</code> operation. </p>'
      operationId: StartImportLabelsTaskRun
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartImportLabelsTaskRunRequest'
        - enum:
            - AWSGlue.StartImportLabelsTaskRun
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartImportLabelsTaskRunResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: ResourceNumberLimitExceededException
          schema:
            $ref: '#/definitions/ResourceNumberLimitExceededException'
        '484':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
  '/#X-Amz-Target=AWSGlue.StartJobRun':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Starts a job run using a job definition.
      operationId: StartJobRun
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartJobRunRequest'
        - enum:
            - AWSGlue.StartJobRun
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartJobRunResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '484':
          description: ResourceNumberLimitExceededException
          schema:
            $ref: '#/definitions/ResourceNumberLimitExceededException'
        '485':
          description: ConcurrentRunsExceededException
          schema:
            $ref: '#/definitions/ConcurrentRunsExceededException'
  '/#X-Amz-Target=AWSGlue.StartMLEvaluationTaskRun':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Starts a task to estimate the quality of the transform. </p> <p>When you provide label sets as examples of truth, AWS Glue machine learning uses some of those examples to learn from them. The rest of the labels are used as a test to estimate quality.</p> <p>Returns a unique identifier for the run. You can call <code>GetMLTaskRun</code> to get more information about the stats of the <code>EvaluationTaskRun</code>.</p>'
      operationId: StartMLEvaluationTaskRun
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartMLEvaluationTaskRunRequest'
        - enum:
            - AWSGlue.StartMLEvaluationTaskRun
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartMLEvaluationTaskRunResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '484':
          description: ConcurrentRunsExceededException
          schema:
            $ref: '#/definitions/ConcurrentRunsExceededException'
        '485':
          description: MLTransformNotReadyException
          schema:
            $ref: '#/definitions/MLTransformNotReadyException'
  '/#X-Amz-Target=AWSGlue.StartMLLabelingSetGenerationTaskRun':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Starts the active learning workflow for your machine learning transform to improve the transform''s quality by generating label sets and adding labels.</p> <p>When the <code>StartMLLabelingSetGenerationTaskRun</code> finishes, AWS Glue will have generated a "labeling set" or a set of questions for humans to answer.</p> <p>In the case of the <code>FindMatches</code> transform, these questions are of the form, “What is the correct way to group these rows together into groups composed entirely of matching records?” </p> <p>After the labeling process is finished, you can upload your labels with a call to <code>StartImportLabelsTaskRun</code>. After <code>StartImportLabelsTaskRun</code> finishes, all future runs of the machine learning transform will use the new and improved labels and perform a higher-quality transformation.</p>'
      operationId: StartMLLabelingSetGenerationTaskRun
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartMLLabelingSetGenerationTaskRunRequest'
        - enum:
            - AWSGlue.StartMLLabelingSetGenerationTaskRun
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartMLLabelingSetGenerationTaskRunResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '484':
          description: ConcurrentRunsExceededException
          schema:
            $ref: '#/definitions/ConcurrentRunsExceededException'
  '/#X-Amz-Target=AWSGlue.StartTrigger':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Starts an existing trigger. See <a href="https://docs.aws.amazon.com/glue/latest/dg/trigger-job.html">Triggering Jobs</a> for information about how different types of trigger are started.'
      operationId: StartTrigger
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartTriggerRequest'
        - enum:
            - AWSGlue.StartTrigger
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartTriggerResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '484':
          description: ResourceNumberLimitExceededException
          schema:
            $ref: '#/definitions/ResourceNumberLimitExceededException'
        '485':
          description: ConcurrentRunsExceededException
          schema:
            $ref: '#/definitions/ConcurrentRunsExceededException'
  '/#X-Amz-Target=AWSGlue.StartWorkflowRun':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Starts a new run of the specified workflow.
      operationId: StartWorkflowRun
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartWorkflowRunRequest'
        - enum:
            - AWSGlue.StartWorkflowRun
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartWorkflowRunResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '484':
          description: ResourceNumberLimitExceededException
          schema:
            $ref: '#/definitions/ResourceNumberLimitExceededException'
        '485':
          description: ConcurrentRunsExceededException
          schema:
            $ref: '#/definitions/ConcurrentRunsExceededException'
  '/#X-Amz-Target=AWSGlue.StopCrawler':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'If the specified crawler is running, stops the crawl.'
      operationId: StopCrawler
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StopCrawlerRequest'
        - enum:
            - AWSGlue.StopCrawler
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopCrawlerResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: CrawlerNotRunningException
          schema:
            $ref: '#/definitions/CrawlerNotRunningException'
        '482':
          description: CrawlerStoppingException
          schema:
            $ref: '#/definitions/CrawlerStoppingException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.StopCrawlerSchedule':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Sets the schedule state of the specified crawler to <code>NOT_SCHEDULED</code>, but does not stop the crawler if it is already running.'
      operationId: StopCrawlerSchedule
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StopCrawlerScheduleRequest'
        - enum:
            - AWSGlue.StopCrawlerSchedule
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopCrawlerScheduleResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: SchedulerNotRunningException
          schema:
            $ref: '#/definitions/SchedulerNotRunningException'
        '482':
          description: SchedulerTransitioningException
          schema:
            $ref: '#/definitions/SchedulerTransitioningException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.StopTrigger':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Stops a specified trigger.
      operationId: StopTrigger
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StopTriggerRequest'
        - enum:
            - AWSGlue.StopTrigger
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopTriggerResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '484':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
  '/#X-Amz-Target=AWSGlue.TagResource':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Adds tags to a resource. A tag is a label you can assign to an AWS resource. In AWS Glue, you can tag only certain resources. For information about what resources you can tag, see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html">AWS Tags in AWS Glue</a>.'
      operationId: TagResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagResourceRequest'
        - enum:
            - AWSGlue.TagResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
  '/#X-Amz-Target=AWSGlue.UntagResource':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Removes tags from a resource.
      operationId: UntagResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UntagResourceRequest'
        - enum:
            - AWSGlue.UntagResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
  '/#X-Amz-Target=AWSGlue.UpdateClassifier':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Modifies an existing classifier (a <code>GrokClassifier</code>, an <code>XMLClassifier</code>, a <code>JsonClassifier</code>, or a <code>CsvClassifier</code>, depending on which field is present).'
      operationId: UpdateClassifier
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateClassifierRequest'
        - enum:
            - AWSGlue.UpdateClassifier
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateClassifierResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: VersionMismatchException
          schema:
            $ref: '#/definitions/VersionMismatchException'
        '482':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.UpdateConnection':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates a connection definition in the Data Catalog.
      operationId: UpdateConnection
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateConnectionRequest'
        - enum:
            - AWSGlue.UpdateConnection
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateConnectionResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '484':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.UpdateCrawler':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Updates a crawler. If a crawler is running, you must stop it using <code>StopCrawler</code> before updating it.'
      operationId: UpdateCrawler
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateCrawlerRequest'
        - enum:
            - AWSGlue.UpdateCrawler
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateCrawlerResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: VersionMismatchException
          schema:
            $ref: '#/definitions/VersionMismatchException'
        '482':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '483':
          description: CrawlerRunningException
          schema:
            $ref: '#/definitions/CrawlerRunningException'
        '484':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.UpdateCrawlerSchedule':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Updates the schedule of a crawler using a <code>cron</code> expression. '
      operationId: UpdateCrawlerSchedule
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateCrawlerScheduleRequest'
        - enum:
            - AWSGlue.UpdateCrawlerSchedule
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateCrawlerScheduleResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: VersionMismatchException
          schema:
            $ref: '#/definitions/VersionMismatchException'
        '483':
          description: SchedulerTransitioningException
          schema:
            $ref: '#/definitions/SchedulerTransitioningException'
        '484':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
  '/#X-Amz-Target=AWSGlue.UpdateDatabase':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates an existing database definition in a Data Catalog.
      operationId: UpdateDatabase
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDatabaseRequest'
        - enum:
            - AWSGlue.UpdateDatabase
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDatabaseResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '484':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.UpdateDevEndpoint':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates a specified development endpoint.
      operationId: UpdateDevEndpoint
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDevEndpointRequest'
        - enum:
            - AWSGlue.UpdateDevEndpoint
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDevEndpointResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '484':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/#X-Amz-Target=AWSGlue.UpdateJob':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates an existing job definition.
      operationId: UpdateJob
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateJobRequest'
        - enum:
            - AWSGlue.UpdateJob
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateJobResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '484':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
  '/#X-Amz-Target=AWSGlue.UpdateMLTransform':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Updates an existing machine learning transform. Call this operation to tune the algorithm parameters to achieve better results.</p> <p>After calling this operation, you can call the <code>StartMLEvaluationTaskRun</code> operation to assess how well your new parameters achieved your goals (such as improving the quality of your machine learning transform, or making it more cost-effective).</p>'
      operationId: UpdateMLTransform
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateMLTransformRequest'
        - enum:
            - AWSGlue.UpdateMLTransform
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateMLTransformResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  '/#X-Amz-Target=AWSGlue.UpdatePartition':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates a partition.
      operationId: UpdatePartition
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePartitionRequest'
        - enum:
            - AWSGlue.UpdatePartition
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdatePartitionResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '484':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.UpdateTable':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates a metadata table in the Data Catalog.
      operationId: UpdateTable
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTableRequest'
        - enum:
            - AWSGlue.UpdateTable
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateTableResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '484':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '485':
          description: ResourceNumberLimitExceededException
          schema:
            $ref: '#/definitions/ResourceNumberLimitExceededException'
        '486':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.UpdateTrigger':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates a trigger definition.
      operationId: UpdateTrigger
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTriggerRequest'
        - enum:
            - AWSGlue.UpdateTrigger
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateTriggerResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '484':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
  '/#X-Amz-Target=AWSGlue.UpdateUserDefinedFunction':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates an existing function definition in the Data Catalog.
      operationId: UpdateUserDefinedFunction
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateUserDefinedFunctionRequest'
        - enum:
            - AWSGlue.UpdateUserDefinedFunction
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateUserDefinedFunctionResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '484':
          description: GlueEncryptionException
          schema:
            $ref: '#/definitions/GlueEncryptionException'
  '/#X-Amz-Target=AWSGlue.UpdateWorkflow':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates an existing workflow.
      operationId: UpdateWorkflow
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateWorkflowRequest'
        - enum:
            - AWSGlue.UpdateWorkflow
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateWorkflowResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: OperationTimeoutException
          schema:
            $ref: '#/definitions/OperationTimeoutException'
        '484':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
definitions:
  AccessDeniedException: {}
  Action:
    description: Defines an action to be initiated by a trigger.
    properties:
      Arguments:
        $ref: '#/definitions/GenericMap'
        description: '<p>The job arguments used when this trigger fires. For this job run, they replace the default arguments set in the job definition itself.</p> <p>You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes.</p> <p>For information about how to specify and consume your own Job arguments, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html">Calling AWS Glue APIs in Python</a> topic in the developer guide.</p> <p>For information about the key-value pairs that AWS Glue consumes to set up your job, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html">Special Parameters Used by AWS Glue</a> topic in the developer guide.</p>'
      CrawlerName:
        $ref: '#/definitions/NameString'
        description: The name of the crawler to be used with this action.
      JobName:
        $ref: '#/definitions/NameString'
        description: The name of a job to be executed.
      NotificationProperty:
        $ref: '#/definitions/NotificationProperty'
        description: Specifies configuration properties of a job run notification.
      SecurityConfiguration:
        $ref: '#/definitions/NameString'
        description: The name of the <code>SecurityConfiguration</code> structure to be used with this action.
      Timeout:
        $ref: '#/definitions/Timeout'
        description: 'The <code>JobRun</code> timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.'
    type: object
  ActionList:
    items:
      $ref: '#/definitions/Action'
    type: array
  AlreadyExistsException: {}
  AttemptCount:
    type: integer
  BatchCreatePartitionRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the catalog in which the partition is to be created. Currently, this should be the AWS account ID.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: The name of the metadata database in which the partition is to be created.
      PartitionInputList:
        $ref: '#/definitions/PartitionInputList'
        description: A list of <code>PartitionInput</code> structures that define the partitions to be created.
      TableName:
        $ref: '#/definitions/NameString'
        description: The name of the metadata table in which the partition is to be created.
    required:
      - DatabaseName
      - TableName
      - PartitionInputList
    type: object
  BatchCreatePartitionResponse:
    properties:
      Errors:
        $ref: '#/definitions/PartitionErrors'
        description: The errors encountered when trying to create the requested partitions.
    type: object
  BatchDeleteConnectionRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog in which the connections reside. If none is provided, the AWS account ID is used by default.'
      ConnectionNameList:
        $ref: '#/definitions/DeleteConnectionNameList'
        description: A list of names of the connections to delete.
    required:
      - ConnectionNameList
    type: object
  BatchDeleteConnectionResponse:
    properties:
      Errors:
        $ref: '#/definitions/ErrorByName'
        description: A map of the names of connections that were not successfully deleted to error details.
      Succeeded:
        $ref: '#/definitions/NameStringList'
        description: A list of names of the connection definitions that were successfully deleted.
    type: object
  BatchDeletePartitionRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog where the partition to be deleted resides. If none is provided, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: The name of the catalog database in which the table in question resides.
      PartitionsToDelete:
        $ref: '#/definitions/BatchDeletePartitionValueList'
        description: A list of <code>PartitionInput</code> structures that define the partitions to be deleted.
      TableName:
        $ref: '#/definitions/NameString'
        description: The name of the table that contains the partitions to be deleted.
    required:
      - DatabaseName
      - TableName
      - PartitionsToDelete
    type: object
  BatchDeletePartitionResponse:
    properties:
      Errors:
        $ref: '#/definitions/PartitionErrors'
        description: The errors encountered when trying to delete the requested partitions.
    type: object
  BatchDeletePartitionValueList:
    items:
      $ref: '#/definitions/PartitionValueList'
    maxItems: 25
    minItems: 0
    type: array
  BatchDeleteTableNameList:
    items:
      $ref: '#/definitions/NameString'
    maxItems: 100
    minItems: 0
    type: array
  BatchDeleteTableRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog where the table resides. If none is provided, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: 'The name of the catalog database in which the tables to delete reside. For Hive compatibility, this name is entirely lowercase.'
      TablesToDelete:
        $ref: '#/definitions/BatchDeleteTableNameList'
        description: A list of the table to delete.
    required:
      - DatabaseName
      - TablesToDelete
    type: object
  BatchDeleteTableResponse:
    properties:
      Errors:
        $ref: '#/definitions/TableErrors'
        description: A list of errors encountered in attempting to delete the specified tables.
    type: object
  BatchDeleteTableVersionList:
    items:
      $ref: '#/definitions/VersionString'
    maxItems: 100
    minItems: 0
    type: array
  BatchDeleteTableVersionRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog where the tables reside. If none is provided, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: 'The database in the catalog in which the table resides. For Hive compatibility, this name is entirely lowercase.'
      TableName:
        $ref: '#/definitions/NameString'
        description: 'The name of the table. For Hive compatibility, this name is entirely lowercase.'
      VersionIds:
        $ref: '#/definitions/BatchDeleteTableVersionList'
        description: A list of the IDs of versions to be deleted. A <code>VersionId</code> is a string representation of an integer. Each version is incremented by 1.
    required:
      - DatabaseName
      - TableName
      - VersionIds
    type: object
  BatchDeleteTableVersionResponse:
    properties:
      Errors:
        $ref: '#/definitions/TableVersionErrors'
        description: A list of errors encountered while trying to delete the specified table versions.
    type: object
  BatchGetCrawlersRequest:
    properties:
      CrawlerNames:
        $ref: '#/definitions/CrawlerNameList'
        description: 'A list of crawler names, which might be the names returned from the <code>ListCrawlers</code> operation.'
    required:
      - CrawlerNames
    type: object
  BatchGetCrawlersResponse:
    properties:
      Crawlers:
        $ref: '#/definitions/CrawlerList'
        description: A list of crawler definitions.
      CrawlersNotFound:
        $ref: '#/definitions/CrawlerNameList'
        description: A list of names of crawlers that were not found.
    type: object
  BatchGetDevEndpointsRequest:
    properties:
      DevEndpointNames:
        $ref: '#/definitions/DevEndpointNames'
        description: 'The list of <code>DevEndpoint</code> names, which might be the names returned from the <code>ListDevEndpoint</code> operation.'
    required:
      - DevEndpointNames
    type: object
  BatchGetDevEndpointsResponse:
    properties:
      DevEndpoints:
        $ref: '#/definitions/DevEndpointList'
        description: A list of <code>DevEndpoint</code> definitions.
      DevEndpointsNotFound:
        $ref: '#/definitions/DevEndpointNames'
        description: A list of <code>DevEndpoints</code> not found.
    type: object
  BatchGetJobsRequest:
    properties:
      JobNames:
        $ref: '#/definitions/JobNameList'
        description: 'A list of job names, which might be the names returned from the <code>ListJobs</code> operation.'
    required:
      - JobNames
    type: object
  BatchGetJobsResponse:
    properties:
      Jobs:
        $ref: '#/definitions/JobList'
        description: A list of job definitions.
      JobsNotFound:
        $ref: '#/definitions/JobNameList'
        description: A list of names of jobs not found.
    type: object
  BatchGetPartitionRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog where the partitions in question reside. If none is supplied, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: The name of the catalog database where the partitions reside.
      PartitionsToGet:
        $ref: '#/definitions/BatchGetPartitionValueList'
        description: A list of partition values identifying the partitions to retrieve.
      TableName:
        $ref: '#/definitions/NameString'
        description: The name of the partitions' table.
    required:
      - DatabaseName
      - TableName
      - PartitionsToGet
    type: object
  BatchGetPartitionResponse:
    properties:
      Partitions:
        $ref: '#/definitions/PartitionList'
        description: A list of the requested partitions.
      UnprocessedKeys:
        $ref: '#/definitions/BatchGetPartitionValueList'
        description: A list of the partition values in the request for which partitions were not returned.
    type: object
  BatchGetPartitionValueList:
    items:
      $ref: '#/definitions/PartitionValueList'
    maxItems: 1000
    minItems: 0
    type: array
  BatchGetTriggersRequest:
    properties:
      TriggerNames:
        $ref: '#/definitions/TriggerNameList'
        description: 'A list of trigger names, which may be the names returned from the <code>ListTriggers</code> operation.'
    required:
      - TriggerNames
    type: object
  BatchGetTriggersResponse:
    properties:
      Triggers:
        $ref: '#/definitions/TriggerList'
        description: A list of trigger definitions.
      TriggersNotFound:
        $ref: '#/definitions/TriggerNameList'
        description: A list of names of triggers not found.
    type: object
  BatchGetWorkflowsRequest:
    properties:
      IncludeGraph:
        $ref: '#/definitions/NullableBoolean'
        description: Specifies whether to include a graph when returning the workflow resource metadata.
      Names:
        $ref: '#/definitions/WorkflowNames'
        description: 'A list of workflow names, which may be the names returned from the <code>ListWorkflows</code> operation.'
    required:
      - Names
    type: object
  BatchGetWorkflowsResponse:
    properties:
      MissingWorkflows:
        $ref: '#/definitions/WorkflowNames'
        description: A list of names of workflows not found.
      Workflows:
        $ref: '#/definitions/Workflows'
        description: A list of workflow resource metadata.
    type: object
  BatchStopJobRunError:
    description: Records an error that occurred when attempting to stop a specified job run.
    properties:
      ErrorDetail:
        $ref: '#/definitions/ErrorDetail'
        description: Specifies details about the error that was encountered.
      JobName:
        $ref: '#/definitions/NameString'
        description: The name of the job definition that is used in the job run in question.
      JobRunId:
        $ref: '#/definitions/IdString'
        description: The <code>JobRunId</code> of the job run in question.
    type: object
  BatchStopJobRunErrorList:
    items:
      $ref: '#/definitions/BatchStopJobRunError'
    type: array
  BatchStopJobRunJobRunIdList:
    items:
      $ref: '#/definitions/IdString'
    maxItems: 25
    minItems: 1
    type: array
  BatchStopJobRunRequest:
    properties:
      JobName:
        $ref: '#/definitions/NameString'
        description: The name of the job definition for which to stop job runs.
      JobRunIds:
        $ref: '#/definitions/BatchStopJobRunJobRunIdList'
        description: A list of the <code>JobRunIds</code> that should be stopped for that job definition.
    required:
      - JobName
      - JobRunIds
    type: object
  BatchStopJobRunResponse:
    properties:
      Errors:
        $ref: '#/definitions/BatchStopJobRunErrorList'
        description: 'A list of the errors that were encountered in trying to stop <code>JobRuns</code>, including the <code>JobRunId</code> for which each error was encountered and details about the error.'
      SuccessfulSubmissions:
        $ref: '#/definitions/BatchStopJobRunSuccessfulSubmissionList'
        description: A list of the JobRuns that were successfully submitted for stopping.
    type: object
  BatchStopJobRunSuccessfulSubmission:
    description: Records a successful request to stop a specified <code>JobRun</code>.
    properties:
      JobName:
        $ref: '#/definitions/NameString'
        description: The name of the job definition used in the job run that was stopped.
      JobRunId:
        $ref: '#/definitions/IdString'
        description: The <code>JobRunId</code> of the job run that was stopped.
    type: object
  BatchStopJobRunSuccessfulSubmissionList:
    items:
      $ref: '#/definitions/BatchStopJobRunSuccessfulSubmission'
    type: array
  Boolean:
    type: boolean
  BooleanNullable:
    type: boolean
  BooleanValue:
    type: boolean
  BoundedPartitionValueList:
    items:
      $ref: '#/definitions/ValueString'
    maxItems: 100
    minItems: 0
    type: array
  CancelMLTaskRunRequest:
    properties:
      TaskRunId:
        $ref: '#/definitions/HashString'
        description: A unique identifier for the task run.
      TransformId:
        $ref: '#/definitions/HashString'
        description: The unique identifier of the machine learning transform.
    required:
      - TransformId
      - TaskRunId
    type: object
  CancelMLTaskRunResponse:
    properties:
      Status:
        $ref: '#/definitions/TaskStatusType'
        description: The status for this run.
      TaskRunId:
        $ref: '#/definitions/HashString'
        description: The unique identifier for the task run.
      TransformId:
        $ref: '#/definitions/HashString'
        description: The unique identifier of the machine learning transform.
    type: object
  CatalogEncryptionMode:
    enum:
      - DISABLED
      - SSE-KMS
    type: string
  CatalogEntries:
    items:
      $ref: '#/definitions/CatalogEntry'
    type: array
  CatalogEntry:
    description: Specifies a table definition in the AWS Glue Data Catalog.
    properties:
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: The database in which the table metadata resides.
      TableName:
        $ref: '#/definitions/NameString'
        description: The name of the table in question.
    required:
      - DatabaseName
      - TableName
    type: object
  CatalogIdString:
    maxLength: 255
    minLength: 1
    type: string
    x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*'
  CatalogImportStatus:
    description: A structure containing migration status information.
    properties:
      ImportCompleted:
        $ref: '#/definitions/Boolean'
        description: ' <code>True</code> if the migration has completed, or <code>False</code> otherwise.'
      ImportTime:
        $ref: '#/definitions/Timestamp'
        description: The time that the migration was started.
      ImportedBy:
        $ref: '#/definitions/NameString'
        description: The name of the person who initiated the migration.
    type: object
  CatalogTablesList:
    items:
      $ref: '#/definitions/NameString'
    minItems: 1
    type: array
  CatalogTarget:
    description: Specifies an AWS Glue Data Catalog target.
    properties:
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: The name of the database to be synchronized.
      Tables:
        $ref: '#/definitions/CatalogTablesList'
        description: A list of the tables to be synchronized.
    required:
      - DatabaseName
      - Tables
    type: object
  CatalogTargetList:
    items:
      $ref: '#/definitions/CatalogTarget'
    type: array
  Classification:
    type: string
  Classifier:
    description: '<p>Classifiers are triggered during a crawl task. A classifier checks whether a given file is in a format it can handle. If it is, the classifier creates a schema in the form of a <code>StructType</code> object that matches that data format.</p> <p>You can use the standard classifiers that AWS Glue provides, or you can write your own classifiers to best categorize your data sources and specify the appropriate schemas to use for them. A classifier can be a <code>grok</code> classifier, an <code>XML</code> classifier, a <code>JSON</code> classifier, or a custom <code>CSV</code> classifier, as specified in one of the fields in the <code>Classifier</code> object.</p>'
    properties:
      CsvClassifier:
        $ref: '#/definitions/CsvClassifier'
        description: A classifier for comma-separated values (CSV).
      GrokClassifier:
        $ref: '#/definitions/GrokClassifier'
        description: A classifier that uses <code>grok</code>.
      JsonClassifier:
        $ref: '#/definitions/JsonClassifier'
        description: A classifier for JSON content.
      XMLClassifier:
        $ref: '#/definitions/XMLClassifier'
        description: A classifier for XML content.
    type: object
  ClassifierList:
    items:
      $ref: '#/definitions/Classifier'
    type: array
  ClassifierNameList:
    items:
      $ref: '#/definitions/NameString'
    type: array
  CloudWatchEncryption:
    description: Specifies how Amazon CloudWatch data should be encrypted.
    properties:
      CloudWatchEncryptionMode:
        $ref: '#/definitions/CloudWatchEncryptionMode'
        description: The encryption mode to use for CloudWatch data.
      KmsKeyArn:
        $ref: '#/definitions/KmsKeyArn'
        description: The Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.
    type: object
  CloudWatchEncryptionMode:
    enum:
      - DISABLED
      - SSE-KMS
    type: string
  CodeGenArgName:
    type: string
  CodeGenArgValue:
    type: string
  CodeGenEdge:
    description: Represents a directional edge in a directed acyclic graph (DAG).
    properties:
      Source:
        $ref: '#/definitions/CodeGenIdentifier'
        description: The ID of the node at which the edge starts.
      Target:
        $ref: '#/definitions/CodeGenIdentifier'
        description: The ID of the node at which the edge ends.
      TargetParameter:
        $ref: '#/definitions/CodeGenArgName'
        description: The target of the edge.
    required:
      - Source
      - Target
    type: object
  CodeGenIdentifier:
    maxLength: 255
    minLength: 1
    pattern: '[A-Za-z_][A-Za-z0-9_]*'
    type: string
  CodeGenNode:
    description: Represents a node in a directed acyclic graph (DAG)
    properties:
      Args:
        $ref: '#/definitions/CodeGenNodeArgs'
        description: 'Properties of the node, in the form of name-value pairs.'
      Id:
        $ref: '#/definitions/CodeGenIdentifier'
        description: A node identifier that is unique within the node's graph.
      LineNumber:
        $ref: '#/definitions/Integer'
        description: The line number of the node.
      NodeType:
        $ref: '#/definitions/CodeGenNodeType'
        description: The type of node that this is.
    required:
      - Id
      - NodeType
      - Args
    type: object
  CodeGenNodeArg:
    description: An argument or property of a node.
    properties:
      Name:
        $ref: '#/definitions/CodeGenArgName'
        description: The name of the argument or property.
      Param:
        $ref: '#/definitions/Boolean'
        description: True if the value is used as a parameter.
      Value:
        $ref: '#/definitions/CodeGenArgValue'
        description: The value of the argument or property.
    required:
      - Name
      - Value
    type: object
  CodeGenNodeArgs:
    items:
      $ref: '#/definitions/CodeGenNodeArg'
    maxItems: 50
    minItems: 0
    type: array
  CodeGenNodeType:
    type: string
  Column:
    description: A column in a <code>Table</code>.
    properties:
      Comment:
        $ref: '#/definitions/CommentString'
        description: A free-form text comment.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the <code>Column</code>.
      Parameters:
        $ref: '#/definitions/ParametersMap'
        description: These key-value pairs define properties associated with the column.
      Type:
        $ref: '#/definitions/ColumnTypeString'
        description: The data type of the <code>Column</code>.
    required:
      - Name
    type: object
  ColumnList:
    items:
      $ref: '#/definitions/Column'
    type: array
  ColumnNameString:
    maxLength: 1024
    minLength: 1
    type: string
    x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*'
  ColumnTypeString:
    maxLength: 131072
    minLength: 0
    type: string
    x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*'
  ColumnValueStringList:
    items:
      $ref: '#/definitions/ColumnValuesString'
    type: array
  ColumnValuesString:
    type: string
  CommentString:
    maxLength: 255
    minLength: 0
    type: string
    x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*'
  Comparator:
    enum:
      - EQUALS
      - GREATER_THAN
      - LESS_THAN
      - GREATER_THAN_EQUALS
      - LESS_THAN_EQUALS
    type: string
  ConcurrentModificationException: {}
  ConcurrentRunsExceededException: {}
  Condition:
    description: Defines a condition under which a trigger fires.
    properties:
      CrawlState:
        $ref: '#/definitions/CrawlState'
        description: The state of the crawler to which this condition applies.
      CrawlerName:
        $ref: '#/definitions/NameString'
        description: The name of the crawler to which this condition applies.
      JobName:
        $ref: '#/definitions/NameString'
        description: 'The name of the job whose <code>JobRuns</code> this condition applies to, and on which this trigger waits.'
      LogicalOperator:
        $ref: '#/definitions/LogicalOperator'
        description: A logical operator.
      State:
        $ref: '#/definitions/JobRunState'
        description: 'The condition state. Currently, the values supported are <code>SUCCEEDED</code>, <code>STOPPED</code>, <code>TIMEOUT</code>, and <code>FAILED</code>.'
    type: object
  ConditionCheckFailureException: {}
  ConditionList:
    items:
      $ref: '#/definitions/Condition'
    type: array
  ConfusionMatrix:
    description: '<p>The confusion matrix shows you what your transform is predicting accurately and what types of errors it is making.</p> <p>For more information, see <a href="https://en.wikipedia.org/wiki/Confusion_matrix">Confusion matrix</a> in Wikipedia.</p>'
    properties:
      NumFalseNegatives:
        $ref: '#/definitions/RecordsCount'
        description: 'The number of matches in the data that the transform didn''t find, in the confusion matrix for your transform.'
      NumFalsePositives:
        $ref: '#/definitions/RecordsCount'
        description: 'The number of nonmatches in the data that the transform incorrectly classified as a match, in the confusion matrix for your transform.'
      NumTrueNegatives:
        $ref: '#/definitions/RecordsCount'
        description: 'The number of nonmatches in the data that the transform correctly rejected, in the confusion matrix for your transform.'
      NumTruePositives:
        $ref: '#/definitions/RecordsCount'
        description: 'The number of matches in the data that the transform correctly found, in the confusion matrix for your transform.'
    type: object
  Connection:
    description: Defines a connection to a data source.
    properties:
      ConnectionProperties:
        $ref: '#/definitions/ConnectionProperties'
        description: '<p>These key-value pairs define parameters for the connection:</p> <ul> <li> <p> <code>HOST</code> - The host URI: either the fully qualified domain name (FQDN) or the IPv4 address of the database host.</p> </li> <li> <p> <code>PORT</code> - The port number, between 1024 and 65535, of the port on which the database host is listening for database connections.</p> </li> <li> <p> <code>USER_NAME</code> - The name under which to log in to the database. The value string for <code>USER_NAME</code> is "<code>USERNAME</code>".</p> </li> <li> <p> <code>PASSWORD</code> - A password, if one is used, for the user name.</p> </li> <li> <p> <code>ENCRYPTED_PASSWORD</code> - When you enable connection password protection by setting <code>ConnectionPasswordEncryption</code> in the Data Catalog encryption settings, this field stores the encrypted password.</p> </li> <li> <p> <code>JDBC_DRIVER_JAR_URI</code> - The Amazon Simple Storage Service (Amazon S3) path of the JAR file that contains the JDBC driver to use.</p> </li> <li> <p> <code>JDBC_DRIVER_CLASS_NAME</code> - The class name of the JDBC driver to use.</p> </li> <li> <p> <code>JDBC_ENGINE</code> - The name of the JDBC engine to use.</p> </li> <li> <p> <code>JDBC_ENGINE_VERSION</code> - The version of the JDBC engine to use.</p> </li> <li> <p> <code>CONFIG_FILES</code> - (Reserved for future use.)</p> </li> <li> <p> <code>INSTANCE_ID</code> - The instance ID to use.</p> </li> <li> <p> <code>JDBC_CONNECTION_URL</code> - The URL for the JDBC connection.</p> </li> <li> <p> <code>JDBC_ENFORCE_SSL</code> - A Boolean string (true, false) specifying whether Secure Sockets Layer (SSL) with hostname matching is enforced for the JDBC connection on the client. The default is false.</p> </li> </ul>'
      ConnectionType:
        $ref: '#/definitions/ConnectionType'
        description: 'The type of the connection. Currently, only JDBC is supported; SFTP is not supported.'
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: The time that this connection definition was created.
      Description:
        $ref: '#/definitions/DescriptionString'
        description: The description of the connection.
      LastUpdatedBy:
        $ref: '#/definitions/NameString'
        description: 'The user, group, or role that last updated this connection definition.'
      LastUpdatedTime:
        $ref: '#/definitions/Timestamp'
        description: The last time that this connection definition was updated.
      MatchCriteria:
        $ref: '#/definitions/MatchCriteria'
        description: A list of criteria that can be used in selecting this connection.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the connection definition.
      PhysicalConnectionRequirements:
        $ref: '#/definitions/PhysicalConnectionRequirements'
        description: 'A map of physical connection requirements, such as virtual private cloud (VPC) and <code>SecurityGroup</code>, that are needed to make this connection successfully.'
    type: object
  ConnectionInput:
    description: A structure that is used to specify a connection to create or update.
    properties:
      ConnectionProperties:
        $ref: '#/definitions/ConnectionProperties'
        description: These key-value pairs define parameters for the connection.
      ConnectionType:
        $ref: '#/definitions/ConnectionType'
        description: 'The type of the connection. Currently, only JDBC is supported; SFTP is not supported.'
      Description:
        $ref: '#/definitions/DescriptionString'
        description: The description of the connection.
      MatchCriteria:
        $ref: '#/definitions/MatchCriteria'
        description: A list of criteria that can be used in selecting this connection.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the connection.
      PhysicalConnectionRequirements:
        $ref: '#/definitions/PhysicalConnectionRequirements'
        description: 'A map of physical connection requirements, such as virtual private cloud (VPC) and <code>SecurityGroup</code>, that are needed to successfully make this connection.'
    required:
      - Name
      - ConnectionType
      - ConnectionProperties
    type: object
  ConnectionList:
    items:
      $ref: '#/definitions/Connection'
    type: array
  ConnectionName:
    type: string
  ConnectionPasswordEncryption:
    description: '<p>The data structure used by the Data Catalog to encrypt the password as part of <code>CreateConnection</code> or <code>UpdateConnection</code> and store it in the <code>ENCRYPTED_PASSWORD</code> field in the connection properties. You can enable catalog encryption or only password encryption.</p> <p>When a <code>CreationConnection</code> request arrives containing a password, the Data Catalog first encrypts the password using your AWS KMS key. It then encrypts the whole connection object again if catalog encryption is also enabled.</p> <p>This encryption requires that you set AWS KMS key permissions to enable or restrict access on the password key according to your security requirements. For example, you might want only administrators to have decrypt permission on the password key.</p>'
    properties:
      AwsKmsKeyId:
        $ref: '#/definitions/NameString'
        description: '<p>An AWS KMS key that is used to encrypt the connection password. </p> <p>If connection password protection is enabled, the caller of <code>CreateConnection</code> and <code>UpdateConnection</code> needs at least <code>kms:Encrypt</code> permission on the specified AWS KMS key, to encrypt passwords before storing them in the Data Catalog. </p> <p>You can set the decrypt permission to enable or restrict access on the password key according to your security requirements.</p>'
      ReturnConnectionPasswordEncrypted:
        $ref: '#/definitions/Boolean'
        description: 'When the <code>ReturnConnectionPasswordEncrypted</code> flag is set to "true", passwords remain encrypted in the responses of <code>GetConnection</code> and <code>GetConnections</code>. This encryption takes effect independently from catalog encryption. '
    required:
      - ReturnConnectionPasswordEncrypted
    type: object
  ConnectionProperties:
    additionalProperties:
      $ref: '#/definitions/ValueString'
    maxProperties: 100
    minProperties: 0
    type: object
  ConnectionPropertyKey:
    enum:
      - HOST
      - PORT
      - USERNAME
      - PASSWORD
      - ENCRYPTED_PASSWORD
      - JDBC_DRIVER_JAR_URI
      - JDBC_DRIVER_CLASS_NAME
      - JDBC_ENGINE
      - JDBC_ENGINE_VERSION
      - CONFIG_FILES
      - INSTANCE_ID
      - JDBC_CONNECTION_URL
      - JDBC_ENFORCE_SSL
    type: string
  ConnectionType:
    enum:
      - JDBC
      - SFTP
    type: string
  ConnectionsList:
    description: Specifies the connections used by a job.
    properties:
      Connections:
        $ref: '#/definitions/OrchestrationStringList'
        description: A list of connections used by the job.
    type: object
  Crawl:
    description: The details of a crawl in the workflow.
    properties:
      CompletedOn:
        $ref: '#/definitions/TimestampValue'
        description: The date and time on which the crawl completed.
      ErrorMessage:
        $ref: '#/definitions/DescriptionString'
        description: The error message associated with the crawl.
      LogGroup:
        $ref: '#/definitions/LogGroup'
        description: The log group associated with the crawl.
      LogStream:
        $ref: '#/definitions/LogStream'
        description: The log stream associated with the crawl.
      StartedOn:
        $ref: '#/definitions/TimestampValue'
        description: The date and time on which the crawl started.
      State:
        $ref: '#/definitions/CrawlState'
        description: The state of the crawler.
    type: object
  CrawlList:
    items:
      $ref: '#/definitions/Crawl'
    type: array
  CrawlState:
    enum:
      - RUNNING
      - SUCCEEDED
      - CANCELLED
      - FAILED
    type: string
  Crawler:
    description: 'Specifies a crawler program that examines a data source and uses classifiers to try to determine its schema. If successful, the crawler records metadata concerning the data source in the AWS Glue Data Catalog.'
    properties:
      Classifiers:
        $ref: '#/definitions/ClassifierNameList'
        description: A list of UTF-8 strings that specify the custom classifiers that are associated with the crawler.
      Configuration:
        $ref: '#/definitions/CrawlerConfiguration'
        description: 'Crawler configuration information. This versioned JSON string allows users to specify aspects of a crawler''s behavior. For more information, see <a href="http://docs.aws.amazon.com/glue/latest/dg/crawler-configuration.html">Configuring a Crawler</a>.'
      CrawlElapsedTime:
        $ref: '#/definitions/MillisecondsCount'
        description: 'If the crawler is running, contains the total time elapsed since the last crawl began.'
      CrawlerSecurityConfiguration:
        $ref: '#/definitions/CrawlerSecurityConfiguration'
        description: The name of the <code>SecurityConfiguration</code> structure to be used by this crawler.
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: The time that the crawler was created.
      DatabaseName:
        $ref: '#/definitions/DatabaseName'
        description: The name of the database in which the crawler's output is stored.
      Description:
        $ref: '#/definitions/DescriptionString'
        description: A description of the crawler.
      LastCrawl:
        $ref: '#/definitions/LastCrawlInfo'
        description: 'The status of the last crawl, and potentially error information if an error occurred.'
      LastUpdated:
        $ref: '#/definitions/Timestamp'
        description: The time that the crawler was last updated.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the crawler.
      Role:
        $ref: '#/definitions/Role'
        description: 'The Amazon Resource Name (ARN) of an IAM role that''s used to access customer resources, such as Amazon Simple Storage Service (Amazon S3) data.'
      Schedule:
        $ref: '#/definitions/Schedule'
        description: 'For scheduled crawlers, the schedule when the crawler runs.'
      SchemaChangePolicy:
        $ref: '#/definitions/SchemaChangePolicy'
        description: The policy that specifies update and delete behaviors for the crawler.
      State:
        $ref: '#/definitions/CrawlerState'
        description: 'Indicates whether the crawler is running, or whether a run is pending.'
      TablePrefix:
        $ref: '#/definitions/TablePrefix'
        description: The prefix added to the names of tables that are created.
      Targets:
        $ref: '#/definitions/CrawlerTargets'
        description: A collection of targets to crawl.
      Version:
        $ref: '#/definitions/VersionId'
        description: The version of the crawler.
    type: object
  CrawlerConfiguration:
    type: string
  CrawlerList:
    items:
      $ref: '#/definitions/Crawler'
    type: array
  CrawlerMetrics:
    description: Metrics for a specified crawler.
    properties:
      CrawlerName:
        $ref: '#/definitions/NameString'
        description: The name of the crawler.
      LastRuntimeSeconds:
        $ref: '#/definitions/NonNegativeDouble'
        description: 'The duration of the crawler''s most recent run, in seconds.'
      MedianRuntimeSeconds:
        $ref: '#/definitions/NonNegativeDouble'
        description: 'The median duration of this crawler''s runs, in seconds.'
      StillEstimating:
        $ref: '#/definitions/Boolean'
        description: True if the crawler is still estimating how long it will take to complete this run.
      TablesCreated:
        $ref: '#/definitions/NonNegativeInteger'
        description: The number of tables created by this crawler.
      TablesDeleted:
        $ref: '#/definitions/NonNegativeInteger'
        description: The number of tables deleted by this crawler.
      TablesUpdated:
        $ref: '#/definitions/NonNegativeInteger'
        description: The number of tables updated by this crawler.
      TimeLeftSeconds:
        $ref: '#/definitions/NonNegativeDouble'
        description: The estimated time left to complete a running crawl.
    type: object
  CrawlerMetricsList:
    items:
      $ref: '#/definitions/CrawlerMetrics'
    type: array
  CrawlerNameList:
    items:
      $ref: '#/definitions/NameString'
    maxItems: 100
    minItems: 0
    type: array
  CrawlerNodeDetails:
    description: The details of a Crawler node present in the workflow.
    properties:
      Crawls:
        $ref: '#/definitions/CrawlList'
        description: A list of crawls represented by the crawl node.
    type: object
  CrawlerNotRunningException: {}
  CrawlerRunningException: {}
  CrawlerSecurityConfiguration:
    maxLength: 128
    minLength: 0
    type: string
  CrawlerState:
    enum:
      - READY
      - RUNNING
      - STOPPING
    type: string
  CrawlerStoppingException: {}
  CrawlerTargets:
    description: Specifies data stores to crawl.
    properties:
      CatalogTargets:
        $ref: '#/definitions/CatalogTargetList'
        description: Specifies AWS Glue Data Catalog targets.
      DynamoDBTargets:
        $ref: '#/definitions/DynamoDBTargetList'
        description: Specifies Amazon DynamoDB targets.
      JdbcTargets:
        $ref: '#/definitions/JdbcTargetList'
        description: Specifies JDBC targets.
      S3Targets:
        $ref: '#/definitions/S3TargetList'
        description: Specifies Amazon Simple Storage Service (Amazon S3) targets.
    type: object
  CreateClassifierRequest:
    properties:
      CsvClassifier:
        $ref: '#/definitions/CreateCsvClassifierRequest'
        description: A <code>CsvClassifier</code> object specifying the classifier to create.
      GrokClassifier:
        $ref: '#/definitions/CreateGrokClassifierRequest'
        description: A <code>GrokClassifier</code> object specifying the classifier to create.
      JsonClassifier:
        $ref: '#/definitions/CreateJsonClassifierRequest'
        description: A <code>JsonClassifier</code> object specifying the classifier to create.
      XMLClassifier:
        $ref: '#/definitions/CreateXMLClassifierRequest'
        description: An <code>XMLClassifier</code> object specifying the classifier to create.
    type: object
  CreateClassifierResponse:
    properties: {}
    type: object
  CreateConnectionRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog in which to create the connection. If none is provided, the AWS account ID is used by default.'
      ConnectionInput:
        $ref: '#/definitions/ConnectionInput'
        description: A <code>ConnectionInput</code> object defining the connection to create.
    required:
      - ConnectionInput
    type: object
  CreateConnectionResponse:
    properties: {}
    type: object
  CreateCrawlerRequest:
    properties:
      Classifiers:
        $ref: '#/definitions/ClassifierNameList'
        description: 'A list of custom classifiers that the user has registered. By default, all built-in classifiers are included in a crawl, but these custom classifiers always override the default classifiers for a given classification.'
      Configuration:
        $ref: '#/definitions/CrawlerConfiguration'
        description: 'The crawler configuration information. This versioned JSON string allows users to specify aspects of a crawler''s behavior. For more information, see <a href="http://docs.aws.amazon.com/glue/latest/dg/crawler-configuration.html">Configuring a Crawler</a>.'
      CrawlerSecurityConfiguration:
        $ref: '#/definitions/CrawlerSecurityConfiguration'
        description: The name of the <code>SecurityConfiguration</code> structure to be used by this crawler.
      DatabaseName:
        $ref: '#/definitions/DatabaseName'
        description: 'The AWS Glue database where results are written, such as: <code>arn:aws:daylight:us-east-1::database/sometable/*</code>.'
      Description:
        $ref: '#/definitions/DescriptionString'
        description: A description of the new crawler.
      Name:
        $ref: '#/definitions/NameString'
        description: Name of the new crawler.
      Role:
        $ref: '#/definitions/Role'
        description: The IAM role or Amazon Resource Name (ARN) of an IAM role used by the new crawler to access customer resources.
      Schedule:
        $ref: '#/definitions/CronExpression'
        description: 'A <code>cron</code> expression used to specify the schedule. For more information, see <a href="http://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html">Time-Based Schedules for Jobs and Crawlers</a>. For example, to run something every day at 12:15 UTC, specify <code>cron(15 12 * * ? *)</code>.'
      SchemaChangePolicy:
        $ref: '#/definitions/SchemaChangePolicy'
        description: The policy for the crawler's update and deletion behavior.
      TablePrefix:
        $ref: '#/definitions/TablePrefix'
        description: The table prefix used for catalog tables that are created.
      Tags:
        $ref: '#/definitions/TagsMap'
        description: 'The tags to use with this crawler request. You can use tags to limit access to the crawler. For more information, see <a href="http://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html">AWS Tags in AWS Glue</a>.'
      Targets:
        $ref: '#/definitions/CrawlerTargets'
        description: A list of collection of targets to crawl.
    required:
      - Name
      - Role
      - Targets
    type: object
  CreateCrawlerResponse:
    properties: {}
    type: object
  CreateCsvClassifierRequest:
    description: Specifies a custom CSV classifier for <code>CreateClassifier</code> to create.
    properties:
      AllowSingleColumn:
        $ref: '#/definitions/NullableBoolean'
        description: Enables the processing of files that contain only one column.
      ContainsHeader:
        $ref: '#/definitions/CsvHeaderOption'
        description: Indicates whether the CSV file contains a header.
      Delimiter:
        $ref: '#/definitions/CsvColumnDelimiter'
        description: A custom symbol to denote what separates each column entry in the row.
      DisableValueTrimming:
        $ref: '#/definitions/NullableBoolean'
        description: Specifies not to trim values before identifying the type of column values. The default value is true.
      Header:
        $ref: '#/definitions/CsvHeader'
        description: A list of strings representing column names.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the classifier.
      QuoteSymbol:
        $ref: '#/definitions/CsvQuoteSymbol'
        description: A custom symbol to denote what combines content into a single column value. Must be different from the column delimiter.
    required:
      - Name
    type: object
  CreateDatabaseRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog in which to create the database. If none is provided, the AWS account ID is used by default.'
      DatabaseInput:
        $ref: '#/definitions/DatabaseInput'
        description: The metadata for the database.
    required:
      - DatabaseInput
    type: object
  CreateDatabaseResponse:
    properties: {}
    type: object
  CreateDevEndpointRequest:
    properties:
      Arguments:
        $ref: '#/definitions/MapValue'
        description: A map of arguments used to configure the <code>DevEndpoint</code>.
      EndpointName:
        $ref: '#/definitions/GenericString'
        description: The name to be assigned to the new <code>DevEndpoint</code>.
      ExtraJarsS3Path:
        $ref: '#/definitions/GenericString'
        description: The path to one or more Java <code>.jar</code> files in an S3 bucket that should be loaded in your <code>DevEndpoint</code>.
      ExtraPythonLibsS3Path:
        $ref: '#/definitions/GenericString'
        description: '<p>The paths to one or more Python libraries in an Amazon S3 bucket that should be loaded in your <code>DevEndpoint</code>. Multiple values must be complete paths separated by a comma.</p> <note> <p>You can only use pure Python libraries with a <code>DevEndpoint</code>. Libraries that rely on C extensions, such as the <a href="http://pandas.pydata.org/">pandas</a> Python data analysis library, are not yet supported.</p> </note>'
      NumberOfNodes:
        $ref: '#/definitions/IntegerValue'
        description: The number of AWS Glue Data Processing Units (DPUs) to allocate to this <code>DevEndpoint</code>.
      NumberOfWorkers:
        $ref: '#/definitions/NullableInteger'
        description: '<p>The number of workers of a defined <code>workerType</code> that are allocated to the development endpoint.</p> <p>The maximum number of workers you can define are 299 for <code>G.1X</code>, and 149 for <code>G.2X</code>. </p>'
      PublicKey:
        $ref: '#/definitions/GenericString'
        description: The public key to be used by this <code>DevEndpoint</code> for authentication. This attribute is provided for backward compatibility because the recommended attribute to use is public keys.
      PublicKeys:
        $ref: '#/definitions/PublicKeysList'
        description: '<p>A list of public keys to be used by the development endpoints for authentication. The use of this attribute is preferred over a single public key because the public keys allow you to have a different private key per client.</p> <note> <p>If you previously created an endpoint with a public key, you must remove that key to be able to set a list of public keys. Call the <code>UpdateDevEndpoint</code> API with the public key content in the <code>deletePublicKeys</code> attribute, and the list of new keys in the <code>addPublicKeys</code> attribute.</p> </note>'
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: The IAM role for the <code>DevEndpoint</code>.
      SecurityConfiguration:
        $ref: '#/definitions/NameString'
        description: The name of the <code>SecurityConfiguration</code> structure to be used with this <code>DevEndpoint</code>.
      SecurityGroupIds:
        $ref: '#/definitions/StringList'
        description: Security group IDs for the security groups to be used by the new <code>DevEndpoint</code>.
      SubnetId:
        $ref: '#/definitions/GenericString'
        description: The subnet ID for the new <code>DevEndpoint</code> to use.
      Tags:
        $ref: '#/definitions/TagsMap'
        description: 'The tags to use with this DevEndpoint. You may use tags to limit access to the DevEndpoint. For more information about tags in AWS Glue, see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html">AWS Tags in AWS Glue</a> in the developer guide.'
      WorkerType:
        $ref: '#/definitions/WorkerType'
        description: '<p>The type of predefined worker that is allocated to the development endpoint. Accepts a value of Standard, G.1X, or G.2X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> </ul> <p>Known issue: when a development endpoint is created with the <code>G.2X</code> <code>WorkerType</code> configuration, the Spark drivers for the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64 GB disk. </p>'
    required:
      - EndpointName
      - RoleArn
    type: object
  CreateDevEndpointResponse:
    properties:
      Arguments:
        $ref: '#/definitions/MapValue'
        description: The map of arguments used to configure this <code>DevEndpoint</code>.
      AvailabilityZone:
        $ref: '#/definitions/GenericString'
        description: The AWS Availability Zone where this <code>DevEndpoint</code> is located.
      CreatedTimestamp:
        $ref: '#/definitions/TimestampValue'
        description: The point in time at which this <code>DevEndpoint</code> was created.
      EndpointName:
        $ref: '#/definitions/GenericString'
        description: The name assigned to the new <code>DevEndpoint</code>.
      ExtraJarsS3Path:
        $ref: '#/definitions/GenericString'
        description: Path to one or more Java <code>.jar</code> files in an S3 bucket that will be loaded in your <code>DevEndpoint</code>.
      ExtraPythonLibsS3Path:
        $ref: '#/definitions/GenericString'
        description: The paths to one or more Python libraries in an S3 bucket that will be loaded in your <code>DevEndpoint</code>.
      FailureReason:
        $ref: '#/definitions/GenericString'
        description: The reason for a current failure in this <code>DevEndpoint</code>.
      NumberOfNodes:
        $ref: '#/definitions/IntegerValue'
        description: The number of AWS Glue Data Processing Units (DPUs) allocated to this DevEndpoint.
      NumberOfWorkers:
        $ref: '#/definitions/NullableInteger'
        description: The number of workers of a defined <code>workerType</code> that are allocated to the development endpoint.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) of the role assigned to the new <code>DevEndpoint</code>.
      SecurityConfiguration:
        $ref: '#/definitions/NameString'
        description: The name of the <code>SecurityConfiguration</code> structure being used with this <code>DevEndpoint</code>.
      SecurityGroupIds:
        $ref: '#/definitions/StringList'
        description: The security groups assigned to the new <code>DevEndpoint</code>.
      Status:
        $ref: '#/definitions/GenericString'
        description: The current status of the new <code>DevEndpoint</code>.
      SubnetId:
        $ref: '#/definitions/GenericString'
        description: The subnet ID assigned to the new <code>DevEndpoint</code>.
      VpcId:
        $ref: '#/definitions/GenericString'
        description: The ID of the virtual private cloud (VPC) used by this <code>DevEndpoint</code>.
      WorkerType:
        $ref: '#/definitions/WorkerType'
        description: 'The type of predefined worker that is allocated to the development endpoint. May be a value of Standard, G.1X, or G.2X.'
      YarnEndpointAddress:
        $ref: '#/definitions/GenericString'
        description: The address of the YARN endpoint used by this <code>DevEndpoint</code>.
      ZeppelinRemoteSparkInterpreterPort:
        $ref: '#/definitions/IntegerValue'
        description: The Apache Zeppelin port for the remote Apache Spark interpreter.
    type: object
  CreateGrokClassifierRequest:
    description: Specifies a <code>grok</code> classifier for <code>CreateClassifier</code> to create.
    properties:
      Classification:
        $ref: '#/definitions/Classification'
        description: 'An identifier of the data format that the classifier matches, such as Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on.'
      CustomPatterns:
        $ref: '#/definitions/CustomPatterns'
        description: Optional custom grok patterns used by this classifier.
      GrokPattern:
        $ref: '#/definitions/GrokPattern'
        description: The grok pattern used by this classifier.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the new classifier.
    required:
      - Classification
      - Name
      - GrokPattern
    type: object
  CreateJobRequest:
    properties:
      AllocatedCapacity:
        $ref: '#/definitions/IntegerValue'
        description: '<p>This parameter is deprecated. Use <code>MaxCapacity</code> instead.</p> <p>The number of AWS Glue data processing units (DPUs) to allocate to this Job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">AWS Glue pricing page</a>.</p>This property is deprecated, use MaxCapacity instead.'
      Command:
        $ref: '#/definitions/JobCommand'
        description: The <code>JobCommand</code> that executes this job.
      Connections:
        $ref: '#/definitions/ConnectionsList'
        description: The connections used for this job.
      DefaultArguments:
        $ref: '#/definitions/GenericMap'
        description: '<p>The default arguments for this job.</p> <p>You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes.</p> <p>For information about how to specify and consume your own Job arguments, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html">Calling AWS Glue APIs in Python</a> topic in the developer guide.</p> <p>For information about the key-value pairs that AWS Glue consumes to set up your job, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html">Special Parameters Used by AWS Glue</a> topic in the developer guide.</p>'
      Description:
        $ref: '#/definitions/DescriptionString'
        description: Description of the job being defined.
      ExecutionProperty:
        $ref: '#/definitions/ExecutionProperty'
        description: An <code>ExecutionProperty</code> specifying the maximum number of concurrent runs allowed for this job.
      GlueVersion:
        $ref: '#/definitions/GlueVersionString'
        description: '<p>Glue version determines the versions of Apache Spark and Python that AWS Glue supports. The Python version indicates the version supported for jobs of type Spark. </p> <p>For more information about the available AWS Glue versions and corresponding Spark and Python versions, see <a href="https://docs.aws.amazon.com/glue/latest/dg/add-job.html">Glue version</a> in the developer guide.</p> <p>Jobs that are created without specifying a Glue version default to Glue 0.9.</p>'
      LogUri:
        $ref: '#/definitions/UriString'
        description: This field is reserved for future use.
      MaxCapacity:
        $ref: '#/definitions/NullableDouble'
        description: '<p>The number of AWS Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">AWS Glue pricing page</a>.</p> <p>Do not set <code>Max Capacity</code> if using <code>WorkerType</code> and <code>NumberOfWorkers</code>.</p> <p>The value that can be allocated for <code>MaxCapacity</code> depends on whether you are running a Python shell job or an Apache Spark ETL job:</p> <ul> <li> <p>When you specify a Python shell job (<code>JobCommand.Name</code>="pythonshell"), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.</p> </li> <li> <p>When you specify an Apache Spark ETL job (<code>JobCommand.Name</code>="glueetl"), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.</p> </li> </ul>'
      MaxRetries:
        $ref: '#/definitions/MaxRetries'
        description: The maximum number of times to retry this job if it fails.
      Name:
        $ref: '#/definitions/NameString'
        description: The name you assign to this job definition. It must be unique in your account.
      NotificationProperty:
        $ref: '#/definitions/NotificationProperty'
        description: Specifies configuration properties of a job notification.
      NumberOfWorkers:
        $ref: '#/definitions/NullableInteger'
        description: '<p>The number of workers of a defined <code>workerType</code> that are allocated when a job runs.</p> <p>The maximum number of workers you can define are 299 for <code>G.1X</code>, and 149 for <code>G.2X</code>. </p>'
      Role:
        $ref: '#/definitions/RoleString'
        description: The name or Amazon Resource Name (ARN) of the IAM role associated with this job.
      SecurityConfiguration:
        $ref: '#/definitions/NameString'
        description: The name of the <code>SecurityConfiguration</code> structure to be used with this job.
      Tags:
        $ref: '#/definitions/TagsMap'
        description: 'The tags to use with this job. You may use tags to limit access to the job. For more information about tags in AWS Glue, see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html">AWS Tags in AWS Glue</a> in the developer guide.'
      Timeout:
        $ref: '#/definitions/Timeout'
        description: 'The job timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours).'
      WorkerType:
        $ref: '#/definitions/WorkerType'
        description: '<p>The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> </ul>'
    required:
      - Name
      - Role
      - Command
    type: object
  CreateJobResponse:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: The unique name that was provided for this job definition.
    type: object
  CreateJsonClassifierRequest:
    description: Specifies a JSON classifier for <code>CreateClassifier</code> to create.
    properties:
      JsonPath:
        $ref: '#/definitions/JsonPath'
        description: 'A <code>JsonPath</code> string defining the JSON data for the classifier to classify. AWS Glue supports a subset of <code>JsonPath</code>, as described in <a href="https://docs.aws.amazon.com/glue/latest/dg/custom-classifier.html#custom-classifier-json">Writing JsonPath Custom Classifiers</a>.'
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the classifier.
    required:
      - Name
      - JsonPath
    type: object
  CreateMLTransformRequest:
    properties:
      Description:
        $ref: '#/definitions/DescriptionString'
        description: A description of the machine learning transform that is being defined. The default is an empty string.
      InputRecordTables:
        $ref: '#/definitions/GlueTables'
        description: A list of AWS Glue table definitions used by the transform.
      MaxCapacity:
        $ref: '#/definitions/NullableDouble'
        description: '<p>The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">AWS Glue pricing page</a>. </p> <p>When the <code>WorkerType</code> field is set to a value other than <code>Standard</code>, the <code>MaxCapacity</code> field is set automatically and becomes read-only.</p>'
      MaxRetries:
        $ref: '#/definitions/NullableInteger'
        description: The maximum number of times to retry a task for this transform after a task run fails.
      Name:
        $ref: '#/definitions/NameString'
        description: The unique name that you give the transform when you create it.
      NumberOfWorkers:
        $ref: '#/definitions/NullableInteger'
        description: The number of workers of a defined <code>workerType</code> that are allocated when this task runs.
      Parameters:
        $ref: '#/definitions/TransformParameters'
        description: The algorithmic parameters that are specific to the transform type used. Conditionally dependent on the transform type.
      Role:
        $ref: '#/definitions/RoleString'
        description: 'The name or Amazon Resource Name (ARN) of the IAM role with the required permissions. Ensure that this role has permission to your Amazon Simple Storage Service (Amazon S3) sources, targets, temporary directory, scripts, and any libraries that are used by the task run for this transform.'
      Timeout:
        $ref: '#/definitions/Timeout'
        description: 'The timeout of the task run for this transform in minutes. This is the maximum time that a task run for this transform can consume resources before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours).'
      WorkerType:
        $ref: '#/definitions/WorkerType'
        description: '<p>The type of predefined worker that is allocated when this task runs. Accepts a value of Standard, G.1X, or G.2X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.</p> </li> </ul>'
    required:
      - Name
      - InputRecordTables
      - Parameters
      - Role
    type: object
  CreateMLTransformResponse:
    properties:
      TransformId:
        $ref: '#/definitions/HashString'
        description: A unique identifier that is generated for the transform.
    type: object
  CreatePartitionRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: The AWS account ID of the catalog in which the partition is to be created.
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: The name of the metadata database in which the partition is to be created.
      PartitionInput:
        $ref: '#/definitions/PartitionInput'
        description: A <code>PartitionInput</code> structure defining the partition to be created.
      TableName:
        $ref: '#/definitions/NameString'
        description: The name of the metadata table in which the partition is to be created.
    required:
      - DatabaseName
      - TableName
      - PartitionInput
    type: object
  CreatePartitionResponse:
    properties: {}
    type: object
  CreateScriptRequest:
    properties:
      DagEdges:
        $ref: '#/definitions/DagEdges'
        description: A list of the edges in the DAG.
      DagNodes:
        $ref: '#/definitions/DagNodes'
        description: A list of the nodes in the DAG.
      Language:
        $ref: '#/definitions/Language'
        description: The programming language of the resulting code from the DAG.
    type: object
  CreateScriptResponse:
    properties:
      PythonScript:
        $ref: '#/definitions/PythonScript'
        description: The Python script generated from the DAG.
      ScalaCode:
        $ref: '#/definitions/ScalaCode'
        description: The Scala code generated from the DAG.
    type: object
  CreateSecurityConfigurationRequest:
    properties:
      EncryptionConfiguration:
        $ref: '#/definitions/EncryptionConfiguration'
        description: The encryption configuration for the new security configuration.
      Name:
        $ref: '#/definitions/NameString'
        description: The name for the new security configuration.
    required:
      - Name
      - EncryptionConfiguration
    type: object
  CreateSecurityConfigurationResponse:
    properties:
      CreatedTimestamp:
        $ref: '#/definitions/TimestampValue'
        description: The time at which the new security configuration was created.
      Name:
        $ref: '#/definitions/NameString'
        description: The name assigned to the new security configuration.
    type: object
  CreateTableRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog in which to create the <code>Table</code>. If none is supplied, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: 'The catalog database in which to create the new table. For Hive compatibility, this name is entirely lowercase.'
      TableInput:
        $ref: '#/definitions/TableInput'
        description: The <code>TableInput</code> object that defines the metadata table to create in the catalog.
    required:
      - DatabaseName
      - TableInput
    type: object
  CreateTableResponse:
    properties: {}
    type: object
  CreateTriggerRequest:
    properties:
      Actions:
        $ref: '#/definitions/ActionList'
        description: The actions initiated by this trigger when it fires.
      Description:
        $ref: '#/definitions/DescriptionString'
        description: A description of the new trigger.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the trigger.
      Predicate:
        $ref: '#/definitions/Predicate'
        description: <p>A predicate to specify when the new trigger should fire.</p> <p>This field is required when the trigger type is <code>CONDITIONAL</code>.</p>
      Schedule:
        $ref: '#/definitions/GenericString'
        description: '<p>A <code>cron</code> expression used to specify the schedule (see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html">Time-Based Schedules for Jobs and Crawlers</a>. For example, to run something every day at 12:15 UTC, you would specify: <code>cron(15 12 * * ? *)</code>.</p> <p>This field is required when the trigger type is SCHEDULED.</p>'
      StartOnCreation:
        $ref: '#/definitions/BooleanValue'
        description: Set to <code>true</code> to start <code>SCHEDULED</code> and <code>CONDITIONAL</code> triggers when created. True is not supported for <code>ON_DEMAND</code> triggers.
      Tags:
        $ref: '#/definitions/TagsMap'
        description: 'The tags to use with this trigger. You may use tags to limit access to the trigger. For more information about tags in AWS Glue, see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html">AWS Tags in AWS Glue</a> in the developer guide. '
      Type:
        $ref: '#/definitions/TriggerType'
        description: The type of the new trigger.
      WorkflowName:
        $ref: '#/definitions/NameString'
        description: The name of the workflow associated with the trigger.
    required:
      - Name
      - Type
      - Actions
    type: object
  CreateTriggerResponse:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the trigger.
    type: object
  CreateUserDefinedFunctionRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog in which to create the function. If none is provided, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: The name of the catalog database in which to create the function.
      FunctionInput:
        $ref: '#/definitions/UserDefinedFunctionInput'
        description: A <code>FunctionInput</code> object that defines the function to create in the Data Catalog.
    required:
      - DatabaseName
      - FunctionInput
    type: object
  CreateUserDefinedFunctionResponse:
    properties: {}
    type: object
  CreateWorkflowRequest:
    properties:
      DefaultRunProperties:
        $ref: '#/definitions/WorkflowRunProperties'
        description: A collection of properties to be used as part of each execution of the workflow.
      Description:
        $ref: '#/definitions/GenericString'
        description: A description of the workflow.
      Name:
        $ref: '#/definitions/NameString'
        description: The name to be assigned to the workflow. It should be unique within your account.
      Tags:
        $ref: '#/definitions/TagsMap'
        description: The tags to be used with this workflow.
    required:
      - Name
    type: object
  CreateWorkflowResponse:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the workflow which was provided as part of the request.
    type: object
  CreateXMLClassifierRequest:
    description: Specifies an XML classifier for <code>CreateClassifier</code> to create.
    properties:
      Classification:
        $ref: '#/definitions/Classification'
        description: An identifier of the data format that the classifier matches.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the classifier.
      RowTag:
        $ref: '#/definitions/RowTag'
        description: 'The XML tag designating the element that contains each record in an XML document being parsed. This can''t identify a self-closing element (closed by <code>/&gt;</code>). An empty row element that contains only attributes can be parsed as long as it ends with a closing tag (for example, <code>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</code> is okay, but <code>&lt;row item_a="A" item_b="B" /&gt;</code> is not).'
    required:
      - Classification
      - Name
    type: object
  CronExpression:
    type: string
  CsvClassifier:
    description: A classifier for custom <code>CSV</code> content.
    properties:
      AllowSingleColumn:
        $ref: '#/definitions/NullableBoolean'
        description: Enables the processing of files that contain only one column.
      ContainsHeader:
        $ref: '#/definitions/CsvHeaderOption'
        description: Indicates whether the CSV file contains a header.
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: The time that this classifier was registered.
      Delimiter:
        $ref: '#/definitions/CsvColumnDelimiter'
        description: A custom symbol to denote what separates each column entry in the row.
      DisableValueTrimming:
        $ref: '#/definitions/NullableBoolean'
        description: Specifies not to trim values before identifying the type of column values. The default value is <code>true</code>.
      Header:
        $ref: '#/definitions/CsvHeader'
        description: A list of strings representing column names.
      LastUpdated:
        $ref: '#/definitions/Timestamp'
        description: The time that this classifier was last updated.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the classifier.
      QuoteSymbol:
        $ref: '#/definitions/CsvQuoteSymbol'
        description: A custom symbol to denote what combines content into a single column value. It must be different from the column delimiter.
      Version:
        $ref: '#/definitions/VersionId'
        description: The version of this classifier.
    required:
      - Name
    type: object
  CsvColumnDelimiter:
    maxLength: 1
    minLength: 1
    pattern: '[^\r\n]'
    type: string
  CsvHeader:
    items:
      $ref: '#/definitions/NameString'
    type: array
  CsvHeaderOption:
    enum:
      - UNKNOWN
      - PRESENT
      - ABSENT
    type: string
  CsvQuoteSymbol:
    maxLength: 1
    minLength: 1
    pattern: '[^\r\n]'
    type: string
  CustomPatterns:
    maxLength: 16000
    minLength: 0
    type: string
    x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\r\n\t]*'
  DagEdges:
    items:
      $ref: '#/definitions/CodeGenEdge'
    type: array
  DagNodes:
    items:
      $ref: '#/definitions/CodeGenNode'
    type: array
  DataCatalogEncryptionSettings:
    description: Contains configuration information for maintaining Data Catalog security.
    properties:
      ConnectionPasswordEncryption:
        $ref: '#/definitions/ConnectionPasswordEncryption'
        description: 'When connection password protection is enabled, the Data Catalog uses a customer-provided key to encrypt the password as part of <code>CreateConnection</code> or <code>UpdateConnection</code> and store it in the <code>ENCRYPTED_PASSWORD</code> field in the connection properties. You can enable catalog encryption or only password encryption.'
      EncryptionAtRest:
        $ref: '#/definitions/EncryptionAtRest'
        description: Specifies the encryption-at-rest configuration for the Data Catalog.
    type: object
  DataLakePrincipal:
    description: The AWS Lake Formation principal.
    properties:
      DataLakePrincipalIdentifier:
        $ref: '#/definitions/DataLakePrincipalString'
        description: An identifier for the AWS Lake Formation principal.
    type: object
  DataLakePrincipalString:
    maxLength: 255
    minLength: 1
    type: string
  Database:
    description: The <code>Database</code> object represents a logical grouping of tables that might reside in a Hive metastore or an RDBMS.
    properties:
      CreateTableDefaultPermissions:
        $ref: '#/definitions/PrincipalPermissionsList'
        description: 'Creates a set of default permissions on the table for principals. '
      CreateTime:
        $ref: '#/definitions/Timestamp'
        description: The time at which the metadata database was created in the catalog.
      Description:
        $ref: '#/definitions/DescriptionString'
        description: A description of the database.
      LocationUri:
        $ref: '#/definitions/URI'
        description: 'The location of the database (for example, an HDFS path).'
      Name:
        $ref: '#/definitions/NameString'
        description: 'The name of the database. For Hive compatibility, this is folded to lowercase when it is stored.'
      Parameters:
        $ref: '#/definitions/ParametersMap'
        description: These key-value pairs define parameters and properties of the database.
    required:
      - Name
    type: object
  DatabaseInput:
    description: The structure used to create or update a database.
    properties:
      CreateTableDefaultPermissions:
        $ref: '#/definitions/PrincipalPermissionsList'
        description: 'Creates a set of default permissions on the table for principals. '
      Description:
        $ref: '#/definitions/DescriptionString'
        description: A description of the database.
      LocationUri:
        $ref: '#/definitions/URI'
        description: 'The location of the database (for example, an HDFS path). '
      Name:
        $ref: '#/definitions/NameString'
        description: 'The name of the database. For Hive compatibility, this is folded to lowercase when it is stored.'
      Parameters:
        $ref: '#/definitions/ParametersMap'
        description: <p>These key-value pairs define parameters and properties of the database.</p> <p>These key-value pairs define parameters and properties of the database.</p>
    required:
      - Name
    type: object
  DatabaseList:
    items:
      $ref: '#/definitions/Database'
    type: array
  DatabaseName:
    type: string
  DeleteBehavior:
    enum:
      - LOG
      - DELETE_FROM_DATABASE
      - DEPRECATE_IN_DATABASE
    type: string
  DeleteClassifierRequest:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: Name of the classifier to remove.
    required:
      - Name
    type: object
  DeleteClassifierResponse:
    properties: {}
    type: object
  DeleteConnectionNameList:
    items:
      $ref: '#/definitions/NameString'
    maxItems: 25
    minItems: 0
    type: array
  DeleteConnectionRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog in which the connection resides. If none is provided, the AWS account ID is used by default.'
      ConnectionName:
        $ref: '#/definitions/NameString'
        description: The name of the connection to delete.
    required:
      - ConnectionName
    type: object
  DeleteConnectionResponse:
    properties: {}
    type: object
  DeleteCrawlerRequest:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the crawler to remove.
    required:
      - Name
    type: object
  DeleteCrawlerResponse:
    properties: {}
    type: object
  DeleteDatabaseRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog in which the database resides. If none is provided, the AWS account ID is used by default.'
      Name:
        $ref: '#/definitions/NameString'
        description: 'The name of the database to delete. For Hive compatibility, this must be all lowercase.'
    required:
      - Name
    type: object
  DeleteDatabaseResponse:
    properties: {}
    type: object
  DeleteDevEndpointRequest:
    properties:
      EndpointName:
        $ref: '#/definitions/GenericString'
        description: The name of the <code>DevEndpoint</code>.
    required:
      - EndpointName
    type: object
  DeleteDevEndpointResponse:
    properties: {}
    type: object
  DeleteJobRequest:
    properties:
      JobName:
        $ref: '#/definitions/NameString'
        description: The name of the job definition to delete.
    required:
      - JobName
    type: object
  DeleteJobResponse:
    properties:
      JobName:
        $ref: '#/definitions/NameString'
        description: The name of the job definition that was deleted.
    type: object
  DeleteMLTransformRequest:
    properties:
      TransformId:
        $ref: '#/definitions/HashString'
        description: The unique identifier of the transform to delete.
    required:
      - TransformId
    type: object
  DeleteMLTransformResponse:
    properties:
      TransformId:
        $ref: '#/definitions/HashString'
        description: The unique identifier of the transform that was deleted.
    type: object
  DeletePartitionRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog where the partition to be deleted resides. If none is provided, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: The name of the catalog database in which the table in question resides.
      PartitionValues:
        $ref: '#/definitions/ValueStringList'
        description: The values that define the partition.
      TableName:
        $ref: '#/definitions/NameString'
        description: The name of the table that contains the partition to be deleted.
    required:
      - DatabaseName
      - TableName
      - PartitionValues
    type: object
  DeletePartitionResponse:
    properties: {}
    type: object
  DeleteResourcePolicyRequest:
    properties:
      PolicyHashCondition:
        $ref: '#/definitions/HashString'
        description: The hash value returned when this policy was set.
    type: object
  DeleteResourcePolicyResponse:
    properties: {}
    type: object
  DeleteSecurityConfigurationRequest:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the security configuration to delete.
    required:
      - Name
    type: object
  DeleteSecurityConfigurationResponse:
    properties: {}
    type: object
  DeleteTableRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog where the table resides. If none is provided, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: 'The name of the catalog database in which the table resides. For Hive compatibility, this name is entirely lowercase.'
      Name:
        $ref: '#/definitions/NameString'
        description: 'The name of the table to be deleted. For Hive compatibility, this name is entirely lowercase.'
    required:
      - DatabaseName
      - Name
    type: object
  DeleteTableResponse:
    properties: {}
    type: object
  DeleteTableVersionRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog where the tables reside. If none is provided, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: 'The database in the catalog in which the table resides. For Hive compatibility, this name is entirely lowercase.'
      TableName:
        $ref: '#/definitions/NameString'
        description: 'The name of the table. For Hive compatibility, this name is entirely lowercase.'
      VersionId:
        $ref: '#/definitions/VersionString'
        description: The ID of the table version to be deleted. A <code>VersionID</code> is a string representation of an integer. Each version is incremented by 1.
    required:
      - DatabaseName
      - TableName
      - VersionId
    type: object
  DeleteTableVersionResponse:
    properties: {}
    type: object
  DeleteTriggerRequest:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the trigger to delete.
    required:
      - Name
    type: object
  DeleteTriggerResponse:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the trigger that was deleted.
    type: object
  DeleteUserDefinedFunctionRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog where the function to be deleted is located. If none is supplied, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: The name of the catalog database where the function is located.
      FunctionName:
        $ref: '#/definitions/NameString'
        description: The name of the function definition to be deleted.
    required:
      - DatabaseName
      - FunctionName
    type: object
  DeleteUserDefinedFunctionResponse:
    properties: {}
    type: object
  DeleteWorkflowRequest:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: Name of the workflow to be deleted.
    required:
      - Name
    type: object
  DeleteWorkflowResponse:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: Name of the workflow specified in input.
    type: object
  DescriptionString:
    maxLength: 2048
    minLength: 0
    type: string
    x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\r\n\t]*'
  DescriptionStringRemovable:
    maxLength: 2048
    minLength: 0
    type: string
    x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\r\n\t]*'
  DevEndpoint:
    description: 'A development endpoint where a developer can remotely debug extract, transform, and load (ETL) scripts.'
    properties:
      Arguments:
        $ref: '#/definitions/MapValue'
        description: '<p>A map of arguments used to configure the <code>DevEndpoint</code>.</p> <p>Currently, only <code>"--enable-glue-datacatalog": ""</code> is supported as a valid argument.</p>'
      AvailabilityZone:
        $ref: '#/definitions/GenericString'
        description: The AWS Availability Zone where this <code>DevEndpoint</code> is located.
      CreatedTimestamp:
        $ref: '#/definitions/TimestampValue'
        description: The point in time at which this DevEndpoint was created.
      EndpointName:
        $ref: '#/definitions/GenericString'
        description: The name of the <code>DevEndpoint</code>.
      ExtraJarsS3Path:
        $ref: '#/definitions/GenericString'
        description: <p>The path to one or more Java <code>.jar</code> files in an S3 bucket that should be loaded in your <code>DevEndpoint</code>.</p> <note> <p>You can only use pure Java/Scala libraries with a <code>DevEndpoint</code>.</p> </note>
      ExtraPythonLibsS3Path:
        $ref: '#/definitions/GenericString'
        description: '<p>The paths to one or more Python libraries in an Amazon S3 bucket that should be loaded in your <code>DevEndpoint</code>. Multiple values must be complete paths separated by a comma.</p> <note> <p>You can only use pure Python libraries with a <code>DevEndpoint</code>. Libraries that rely on C extensions, such as the <a href="http://pandas.pydata.org/">pandas</a> Python data analysis library, are not currently supported.</p> </note>'
      FailureReason:
        $ref: '#/definitions/GenericString'
        description: The reason for a current failure in this <code>DevEndpoint</code>.
      LastModifiedTimestamp:
        $ref: '#/definitions/TimestampValue'
        description: The point in time at which this <code>DevEndpoint</code> was last modified.
      LastUpdateStatus:
        $ref: '#/definitions/GenericString'
        description: The status of the last update.
      NumberOfNodes:
        $ref: '#/definitions/IntegerValue'
        description: The number of AWS Glue Data Processing Units (DPUs) allocated to this <code>DevEndpoint</code>.
      NumberOfWorkers:
        $ref: '#/definitions/NullableInteger'
        description: '<p>The number of workers of a defined <code>workerType</code> that are allocated to the development endpoint.</p> <p>The maximum number of workers you can define are 299 for <code>G.1X</code>, and 149 for <code>G.2X</code>. </p>'
      PrivateAddress:
        $ref: '#/definitions/GenericString'
        description: A private IP address to access the <code>DevEndpoint</code> within a VPC if the <code>DevEndpoint</code> is created within one. The <code>PrivateAddress</code> field is present only when you create the <code>DevEndpoint</code> within your VPC.
      PublicAddress:
        $ref: '#/definitions/GenericString'
        description: The public IP address used by this <code>DevEndpoint</code>. The <code>PublicAddress</code> field is present only when you create a non-virtual private cloud (VPC) <code>DevEndpoint</code>.
      PublicKey:
        $ref: '#/definitions/GenericString'
        description: The public key to be used by this <code>DevEndpoint</code> for authentication. This attribute is provided for backward compatibility because the recommended attribute to use is public keys.
      PublicKeys:
        $ref: '#/definitions/PublicKeysList'
        description: '<p>A list of public keys to be used by the <code>DevEndpoints</code> for authentication. Using this attribute is preferred over a single public key because the public keys allow you to have a different private key per client.</p> <note> <p>If you previously created an endpoint with a public key, you must remove that key to be able to set a list of public keys. Call the <code>UpdateDevEndpoint</code> API operation with the public key content in the <code>deletePublicKeys</code> attribute, and the list of new keys in the <code>addPublicKeys</code> attribute.</p> </note>'
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) of the IAM role used in this <code>DevEndpoint</code>.
      SecurityConfiguration:
        $ref: '#/definitions/NameString'
        description: The name of the <code>SecurityConfiguration</code> structure to be used with this <code>DevEndpoint</code>.
      SecurityGroupIds:
        $ref: '#/definitions/StringList'
        description: A list of security group identifiers used in this <code>DevEndpoint</code>.
      Status:
        $ref: '#/definitions/GenericString'
        description: The current status of this <code>DevEndpoint</code>.
      SubnetId:
        $ref: '#/definitions/GenericString'
        description: The subnet ID for this <code>DevEndpoint</code>.
      VpcId:
        $ref: '#/definitions/GenericString'
        description: The ID of the virtual private cloud (VPC) used by this <code>DevEndpoint</code>.
      WorkerType:
        $ref: '#/definitions/WorkerType'
        description: '<p>The type of predefined worker that is allocated to the development endpoint. Accepts a value of Standard, G.1X, or G.2X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> </ul> <p>Known issue: when a development endpoint is created with the <code>G.2X</code> <code>WorkerType</code> configuration, the Spark drivers for the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64 GB disk. </p>'
      YarnEndpointAddress:
        $ref: '#/definitions/GenericString'
        description: The YARN endpoint address used by this <code>DevEndpoint</code>.
      ZeppelinRemoteSparkInterpreterPort:
        $ref: '#/definitions/IntegerValue'
        description: The Apache Zeppelin port for the remote Apache Spark interpreter.
    type: object
  DevEndpointCustomLibraries:
    description: Custom libraries to be loaded into a development endpoint.
    properties:
      ExtraJarsS3Path:
        $ref: '#/definitions/GenericString'
        description: <p>The path to one or more Java <code>.jar</code> files in an S3 bucket that should be loaded in your <code>DevEndpoint</code>.</p> <note> <p>You can only use pure Java/Scala libraries with a <code>DevEndpoint</code>.</p> </note>
      ExtraPythonLibsS3Path:
        $ref: '#/definitions/GenericString'
        description: '<p>The paths to one or more Python libraries in an Amazon Simple Storage Service (Amazon S3) bucket that should be loaded in your <code>DevEndpoint</code>. Multiple values must be complete paths separated by a comma.</p> <note> <p>You can only use pure Python libraries with a <code>DevEndpoint</code>. Libraries that rely on C extensions, such as the <a href="http://pandas.pydata.org/">pandas</a> Python data analysis library, are not currently supported.</p> </note>'
    type: object
  DevEndpointList:
    items:
      $ref: '#/definitions/DevEndpoint'
    type: array
  DevEndpointNameList:
    items:
      $ref: '#/definitions/NameString'
    type: array
  DevEndpointNames:
    items:
      $ref: '#/definitions/GenericString'
    maxItems: 25
    minItems: 1
    type: array
  DynamoDBTarget:
    description: Specifies an Amazon DynamoDB table to crawl.
    properties:
      Path:
        $ref: '#/definitions/Path'
        description: The name of the DynamoDB table to crawl.
    type: object
  DynamoDBTargetList:
    items:
      $ref: '#/definitions/DynamoDBTarget'
    type: array
  Edge:
    description: An edge represents a directed connection between two AWS Glue components which are part of the workflow the edge belongs to.
    properties:
      DestinationId:
        $ref: '#/definitions/NameString'
        description: The unique of the node within the workflow where the edge ends.
      SourceId:
        $ref: '#/definitions/NameString'
        description: The unique of the node within the workflow where the edge starts.
    type: object
  EdgeList:
    items:
      $ref: '#/definitions/Edge'
    type: array
  EncryptionAtRest:
    description: Specifies the encryption-at-rest configuration for the Data Catalog.
    properties:
      CatalogEncryptionMode:
        $ref: '#/definitions/CatalogEncryptionMode'
        description: The encryption-at-rest mode for encrypting Data Catalog data.
      SseAwsKmsKeyId:
        $ref: '#/definitions/NameString'
        description: The ID of the AWS KMS key to use for encryption at rest.
    required:
      - CatalogEncryptionMode
    type: object
  EncryptionConfiguration:
    description: Specifies an encryption configuration.
    properties:
      CloudWatchEncryption:
        $ref: '#/definitions/CloudWatchEncryption'
        description: The encryption configuration for Amazon CloudWatch.
      JobBookmarksEncryption:
        $ref: '#/definitions/JobBookmarksEncryption'
        description: The encryption configuration for job bookmarks.
      S3Encryption:
        $ref: '#/definitions/S3EncryptionList'
        description: The encryption configuration for Amazon Simple Storage Service (Amazon S3) data.
    type: object
  EntityNotFoundException: {}
  ErrorByName:
    additionalProperties:
      $ref: '#/definitions/ErrorDetail'
    type: object
  ErrorDetail:
    description: Contains details about an error.
    properties:
      ErrorCode:
        $ref: '#/definitions/NameString'
        description: The code associated with this error.
      ErrorMessage:
        $ref: '#/definitions/DescriptionString'
        description: A message describing the error.
    type: object
  ErrorString:
    type: string
  EvaluationMetrics:
    description: Evaluation metrics provide an estimate of the quality of your machine learning transform.
    properties:
      FindMatchesMetrics:
        $ref: '#/definitions/FindMatchesMetrics'
        description: The evaluation metrics for the find matches algorithm.
      TransformType:
        $ref: '#/definitions/TransformType'
        description: The type of machine learning transform.
    required:
      - TransformType
    type: object
  ExecutionProperty:
    description: An execution property of a job.
    properties:
      MaxConcurrentRuns:
        $ref: '#/definitions/MaxConcurrentRuns'
        description: The maximum number of concurrent runs allowed for the job. The default is 1. An error is returned when this threshold is reached. The maximum value you can specify is controlled by a service limit.
    type: object
  ExecutionTime:
    type: integer
  ExistCondition:
    enum:
      - MUST_EXIST
      - NOT_EXIST
      - NONE
    type: string
  ExportLabelsTaskRunProperties:
    description: Specifies configuration properties for an exporting labels task run.
    properties:
      OutputS3Path:
        $ref: '#/definitions/UriString'
        description: The Amazon Simple Storage Service (Amazon S3) path where you will export the labels.
    type: object
  FieldType:
    type: string
  FilterString:
    maxLength: 2048
    minLength: 0
    type: string
    x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*'
  FindMatchesMetrics:
    description: 'The evaluation metrics for the find matches algorithm. The quality of your machine learning transform is measured by getting your transform to predict some matches and comparing the results to known matches from the same dataset. The quality metrics are based on a subset of your data, so they are not precise.'
    properties:
      AreaUnderPRCurve:
        $ref: '#/definitions/GenericBoundedDouble'
        description: '<p>The area under the precision/recall curve (AUPRC) is a single number measuring the overall quality of the transform, that is independent of the choice made for precision vs. recall. Higher values indicate that you have a more attractive precision vs. recall tradeoff.</p> <p>For more information, see <a href="https://en.wikipedia.org/wiki/Precision_and_recall">Precision and recall</a> in Wikipedia.</p>'
      ConfusionMatrix:
        $ref: '#/definitions/ConfusionMatrix'
        description: '<p>The confusion matrix shows you what your transform is predicting accurately and what types of errors it is making.</p> <p>For more information, see <a href="https://en.wikipedia.org/wiki/Confusion_matrix">Confusion matrix</a> in Wikipedia.</p>'
      F1:
        $ref: '#/definitions/GenericBoundedDouble'
        description: '<p>The maximum F1 metric indicates the transform''s accuracy between 0 and 1, where 1 is the best accuracy.</p> <p>For more information, see <a href="https://en.wikipedia.org/wiki/F1_score">F1 score</a> in Wikipedia.</p>'
      Precision:
        $ref: '#/definitions/GenericBoundedDouble'
        description: '<p>The precision metric indicates when often your transform is correct when it predicts a match. Specifically, it measures how well the transform finds true positives from the total true positives possible.</p> <p>For more information, see <a href="https://en.wikipedia.org/wiki/Precision_and_recall">Precision and recall</a> in Wikipedia.</p>'
      Recall:
        $ref: '#/definitions/GenericBoundedDouble'
        description: '<p>The recall metric indicates that for an actual match, how often your transform predicts the match. Specifically, it measures how well the transform finds true positives from the total records in the source data.</p> <p>For more information, see <a href="https://en.wikipedia.org/wiki/Precision_and_recall">Precision and recall</a> in Wikipedia.</p>'
    type: object
  FindMatchesParameters:
    description: The parameters to configure the find matches transform.
    properties:
      AccuracyCostTradeoff:
        $ref: '#/definitions/GenericBoundedDouble'
        description: '<p>The value that is selected when tuning your transform for a balance between accuracy and cost. A value of 0.5 means that the system balances accuracy and cost concerns. A value of 1.0 means a bias purely for accuracy, which typically results in a higher cost, sometimes substantially higher. A value of 0.0 means a bias purely for cost, which results in a less accurate <code>FindMatches</code> transform, sometimes with unacceptable accuracy.</p> <p>Accuracy measures how well the transform finds true positives and true negatives. Increasing accuracy requires more machine resources and cost. But it also results in increased recall. </p> <p>Cost measures how many compute resources, and thus money, are consumed to run the transform.</p>'
      EnforceProvidedLabels:
        $ref: '#/definitions/NullableBoolean'
        description: '<p>The value to switch on or off to force the output to match the provided labels from users. If the value is <code>True</code>, the <code>find matches</code> transform forces the output to match the provided labels. The results override the normal conflation results. If the value is <code>False</code>, the <code>find matches</code> transform does not ensure all the labels provided are respected, and the results rely on the trained model.</p> <p>Note that setting this value to true may increase the conflation execution time.</p>'
      PrecisionRecallTradeoff:
        $ref: '#/definitions/GenericBoundedDouble'
        description: '<p>The value selected when tuning your transform for a balance between precision and recall. A value of 0.5 means no preference; a value of 1.0 means a bias purely for precision, and a value of 0.0 means a bias for recall. Because this is a tradeoff, choosing values close to 1.0 means very low recall, and choosing values close to 0.0 results in very low precision.</p> <p>The precision metric indicates how often your model is correct when it predicts a match. </p> <p>The recall metric indicates that for an actual match, how often your model predicts the match.</p>'
      PrimaryKeyColumnName:
        $ref: '#/definitions/ColumnNameString'
        description: The name of a column that uniquely identifies rows in the source table. Used to help identify matching records.
    type: object
  FindMatchesTaskRunProperties:
    description: Specifies configuration properties for a Find Matches task run.
    properties:
      JobId:
        $ref: '#/definitions/HashString'
        description: The job ID for the Find Matches task run.
      JobName:
        $ref: '#/definitions/NameString'
        description: The name assigned to the job for the Find Matches task run.
      JobRunId:
        $ref: '#/definitions/HashString'
        description: The job run ID for the Find Matches task run.
    type: object
  FormatString:
    maxLength: 128
    type: string
    x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*'
  GenericBoundedDouble:
    format: double
    maximum: 1
    minimum: 0
    type: number
  GenericMap:
    additionalProperties:
      $ref: '#/definitions/GenericString'
    type: object
  GenericString:
    type: string
  GetCatalogImportStatusRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the catalog to migrate. Currently, this should be the AWS account ID.'
    type: object
  GetCatalogImportStatusResponse:
    properties:
      ImportStatus:
        $ref: '#/definitions/CatalogImportStatus'
        description: The status of the specified catalog migration.
    type: object
  GetClassifierRequest:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: Name of the classifier to retrieve.
    required:
      - Name
    type: object
  GetClassifierResponse:
    properties:
      Classifier:
        $ref: '#/definitions/Classifier'
        description: The requested classifier.
    type: object
  GetClassifiersRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The size of the list to return (optional).
      NextToken:
        $ref: '#/definitions/Token'
        description: An optional continuation token.
    type: object
  GetClassifiersResponse:
    properties:
      Classifiers:
        $ref: '#/definitions/ClassifierList'
        description: The requested list of classifier objects.
      NextToken:
        $ref: '#/definitions/Token'
        description: A continuation token.
    type: object
  GetConnectionRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog in which the connection resides. If none is provided, the AWS account ID is used by default.'
      HidePassword:
        $ref: '#/definitions/Boolean'
        description: 'Allows you to retrieve the connection metadata without returning the password. For instance, the AWS Glue console uses this flag to retrieve the connection, and does not display the password. Set this parameter when the caller might not have permission to use the AWS KMS key to decrypt the password, but it does have permission to access the rest of the connection properties.'
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the connection definition to retrieve.
    required:
      - Name
    type: object
  GetConnectionResponse:
    properties:
      Connection:
        $ref: '#/definitions/Connection'
        description: The requested connection definition.
    type: object
  GetConnectionsFilter:
    description: Filters the connection definitions that are returned by the <code>GetConnections</code> API operation.
    properties:
      ConnectionType:
        $ref: '#/definitions/ConnectionType'
        description: 'The type of connections to return. Currently, only JDBC is supported; SFTP is not supported.'
      MatchCriteria:
        $ref: '#/definitions/MatchCriteria'
        description: A criteria string that must match the criteria recorded in the connection definition for that connection definition to be returned.
    type: object
  GetConnectionsRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog in which the connections reside. If none is provided, the AWS account ID is used by default.'
      Filter:
        $ref: '#/definitions/GetConnectionsFilter'
        description: A filter that controls which connections are returned.
      HidePassword:
        $ref: '#/definitions/Boolean'
        description: 'Allows you to retrieve the connection metadata without returning the password. For instance, the AWS Glue console uses this flag to retrieve the connection, and does not display the password. Set this parameter when the caller might not have permission to use the AWS KMS key to decrypt the password, but it does have permission to access the rest of the connection properties.'
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The maximum number of connections to return in one response.
      NextToken:
        $ref: '#/definitions/Token'
        description: 'A continuation token, if this is a continuation call.'
    type: object
  GetConnectionsResponse:
    properties:
      ConnectionList:
        $ref: '#/definitions/ConnectionList'
        description: A list of requested connection definitions.
      NextToken:
        $ref: '#/definitions/Token'
        description: 'A continuation token, if the list of connections returned does not include the last of the filtered connections.'
    type: object
  GetCrawlerMetricsRequest:
    properties:
      CrawlerNameList:
        $ref: '#/definitions/CrawlerNameList'
        description: A list of the names of crawlers about which to retrieve metrics.
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The maximum size of a list to return.
      NextToken:
        $ref: '#/definitions/Token'
        description: 'A continuation token, if this is a continuation call.'
    type: object
  GetCrawlerMetricsResponse:
    properties:
      CrawlerMetricsList:
        $ref: '#/definitions/CrawlerMetricsList'
        description: A list of metrics for the specified crawler.
      NextToken:
        $ref: '#/definitions/Token'
        description: 'A continuation token, if the returned list does not contain the last metric available.'
    type: object
  GetCrawlerRequest:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the crawler to retrieve metadata for.
    required:
      - Name
    type: object
  GetCrawlerResponse:
    properties:
      Crawler:
        $ref: '#/definitions/Crawler'
        description: The metadata for the specified crawler.
    type: object
  GetCrawlersRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The number of crawlers to return on each call.
      NextToken:
        $ref: '#/definitions/Token'
        description: 'A continuation token, if this is a continuation request.'
    type: object
  GetCrawlersResponse:
    properties:
      Crawlers:
        $ref: '#/definitions/CrawlerList'
        description: A list of crawler metadata.
      NextToken:
        $ref: '#/definitions/Token'
        description: 'A continuation token, if the returned list has not reached the end of those defined in this customer account.'
    type: object
  GetDataCatalogEncryptionSettingsRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog to retrieve the security configuration for. If none is provided, the AWS account ID is used by default.'
    type: object
  GetDataCatalogEncryptionSettingsResponse:
    properties:
      DataCatalogEncryptionSettings:
        $ref: '#/definitions/DataCatalogEncryptionSettings'
        description: The requested security configuration.
    type: object
  GetDatabaseRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog in which the database resides. If none is provided, the AWS account ID is used by default.'
      Name:
        $ref: '#/definitions/NameString'
        description: 'The name of the database to retrieve. For Hive compatibility, this should be all lowercase.'
    required:
      - Name
    type: object
  GetDatabaseResponse:
    properties:
      Database:
        $ref: '#/definitions/Database'
        description: The definition of the specified database in the Data Catalog.
    type: object
  GetDatabasesRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog from which to retrieve <code>Databases</code>. If none is provided, the AWS account ID is used by default.'
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The maximum number of databases to return in one response.
      NextToken:
        $ref: '#/definitions/Token'
        description: 'A continuation token, if this is a continuation call.'
    type: object
  GetDatabasesResponse:
    properties:
      DatabaseList:
        $ref: '#/definitions/DatabaseList'
        description: A list of <code>Database</code> objects from the specified catalog.
      NextToken:
        $ref: '#/definitions/Token'
        description: 'A continuation token for paginating the returned list of tokens, returned if the current segment of the list is not the last.'
    required:
      - DatabaseList
    type: object
  GetDataflowGraphRequest:
    properties:
      PythonScript:
        $ref: '#/definitions/PythonScript'
        description: The Python script to transform.
    type: object
  GetDataflowGraphResponse:
    properties:
      DagEdges:
        $ref: '#/definitions/DagEdges'
        description: A list of the edges in the resulting DAG.
      DagNodes:
        $ref: '#/definitions/DagNodes'
        description: A list of the nodes in the resulting DAG.
    type: object
  GetDevEndpointRequest:
    properties:
      EndpointName:
        $ref: '#/definitions/GenericString'
        description: Name of the <code>DevEndpoint</code> to retrieve information for.
    required:
      - EndpointName
    type: object
  GetDevEndpointResponse:
    properties:
      DevEndpoint:
        $ref: '#/definitions/DevEndpoint'
        description: A <code>DevEndpoint</code> definition.
    type: object
  GetDevEndpointsRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The maximum size of information to return.
      NextToken:
        $ref: '#/definitions/GenericString'
        description: 'A continuation token, if this is a continuation call.'
    type: object
  GetDevEndpointsResponse:
    properties:
      DevEndpoints:
        $ref: '#/definitions/DevEndpointList'
        description: A list of <code>DevEndpoint</code> definitions.
      NextToken:
        $ref: '#/definitions/GenericString'
        description: 'A continuation token, if not all <code>DevEndpoint</code> definitions have yet been returned.'
    type: object
  GetJobBookmarkRequest:
    properties:
      JobName:
        $ref: '#/definitions/JobName'
        description: The name of the job in question.
      RunId:
        $ref: '#/definitions/RunId'
        description: The unique run identifier associated with this job run.
    required:
      - JobName
    type: object
  GetJobBookmarkResponse:
    properties:
      JobBookmarkEntry:
        $ref: '#/definitions/JobBookmarkEntry'
        description: A structure that defines a point that a job can resume processing.
    type: object
  GetJobRequest:
    properties:
      JobName:
        $ref: '#/definitions/NameString'
        description: The name of the job definition to retrieve.
    required:
      - JobName
    type: object
  GetJobResponse:
    properties:
      Job:
        $ref: '#/definitions/Job'
        description: The requested job definition.
    type: object
  GetJobRunRequest:
    properties:
      JobName:
        $ref: '#/definitions/NameString'
        description: Name of the job definition being run.
      PredecessorsIncluded:
        $ref: '#/definitions/BooleanValue'
        description: True if a list of predecessor runs should be returned.
      RunId:
        $ref: '#/definitions/IdString'
        description: The ID of the job run.
    required:
      - JobName
      - RunId
    type: object
  GetJobRunResponse:
    properties:
      JobRun:
        $ref: '#/definitions/JobRun'
        description: The requested job-run metadata.
    type: object
  GetJobRunsRequest:
    properties:
      JobName:
        $ref: '#/definitions/NameString'
        description: The name of the job definition for which to retrieve all job runs.
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The maximum size of the response.
      NextToken:
        $ref: '#/definitions/GenericString'
        description: 'A continuation token, if this is a continuation call.'
    required:
      - JobName
    type: object
  GetJobRunsResponse:
    properties:
      JobRuns:
        $ref: '#/definitions/JobRunList'
        description: A list of job-run metadata objects.
      NextToken:
        $ref: '#/definitions/GenericString'
        description: 'A continuation token, if not all requested job runs have been returned.'
    type: object
  GetJobsRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The maximum size of the response.
      NextToken:
        $ref: '#/definitions/GenericString'
        description: 'A continuation token, if this is a continuation call.'
    type: object
  GetJobsResponse:
    properties:
      Jobs:
        $ref: '#/definitions/JobList'
        description: A list of job definitions.
      NextToken:
        $ref: '#/definitions/GenericString'
        description: 'A continuation token, if not all job definitions have yet been returned.'
    type: object
  GetMLTaskRunRequest:
    properties:
      TaskRunId:
        $ref: '#/definitions/HashString'
        description: The unique identifier of the task run.
      TransformId:
        $ref: '#/definitions/HashString'
        description: The unique identifier of the machine learning transform.
    required:
      - TransformId
      - TaskRunId
    type: object
  GetMLTaskRunResponse:
    properties:
      CompletedOn:
        $ref: '#/definitions/Timestamp'
        description: The date and time when this task run was completed.
      ErrorString:
        $ref: '#/definitions/GenericString'
        description: The error strings that are associated with the task run.
      ExecutionTime:
        $ref: '#/definitions/ExecutionTime'
        description: The amount of time (in seconds) that the task run consumed resources.
      LastModifiedOn:
        $ref: '#/definitions/Timestamp'
        description: The date and time when this task run was last modified.
      LogGroupName:
        $ref: '#/definitions/GenericString'
        description: The names of the log groups that are associated with the task run.
      Properties:
        $ref: '#/definitions/TaskRunProperties'
        description: The list of properties that are associated with the task run.
      StartedOn:
        $ref: '#/definitions/Timestamp'
        description: The date and time when this task run started.
      Status:
        $ref: '#/definitions/TaskStatusType'
        description: The status for this task run.
      TaskRunId:
        $ref: '#/definitions/HashString'
        description: The unique run identifier associated with this run.
      TransformId:
        $ref: '#/definitions/HashString'
        description: The unique identifier of the task run.
    type: object
  GetMLTaskRunsRequest:
    properties:
      Filter:
        $ref: '#/definitions/TaskRunFilterCriteria'
        description: 'The filter criteria, in the <code>TaskRunFilterCriteria</code> structure, for the task run.'
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: 'The maximum number of results to return. '
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: A token for pagination of the results. The default is empty.
      Sort:
        $ref: '#/definitions/TaskRunSortCriteria'
        description: 'The sorting criteria, in the <code>TaskRunSortCriteria</code> structure, for the task run.'
      TransformId:
        $ref: '#/definitions/HashString'
        description: The unique identifier of the machine learning transform.
    required:
      - TransformId
    type: object
  GetMLTaskRunsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'A pagination token, if more results are available.'
      TaskRuns:
        $ref: '#/definitions/TaskRunList'
        description: A list of task runs that are associated with the transform.
    type: object
  GetMLTransformRequest:
    properties:
      TransformId:
        $ref: '#/definitions/HashString'
        description: 'The unique identifier of the transform, generated at the time that the transform was created.'
    required:
      - TransformId
    type: object
  GetMLTransformResponse:
    properties:
      CreatedOn:
        $ref: '#/definitions/Timestamp'
        description: The date and time when the transform was created.
      Description:
        $ref: '#/definitions/DescriptionString'
        description: A description of the transform.
      EvaluationMetrics:
        $ref: '#/definitions/EvaluationMetrics'
        description: The latest evaluation metrics.
      InputRecordTables:
        $ref: '#/definitions/GlueTables'
        description: A list of AWS Glue table definitions used by the transform.
      LabelCount:
        $ref: '#/definitions/LabelCount'
        description: The number of labels available for this transform.
      LastModifiedOn:
        $ref: '#/definitions/Timestamp'
        description: The date and time when the transform was last modified.
      MaxCapacity:
        $ref: '#/definitions/NullableDouble'
        description: '<p>The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">AWS Glue pricing page</a>. </p> <p>When the <code>WorkerType</code> field is set to a value other than <code>Standard</code>, the <code>MaxCapacity</code> field is set automatically and becomes read-only.</p>'
      MaxRetries:
        $ref: '#/definitions/NullableInteger'
        description: The maximum number of times to retry a task for this transform after a task run fails.
      Name:
        $ref: '#/definitions/NameString'
        description: The unique name given to the transform when it was created.
      NumberOfWorkers:
        $ref: '#/definitions/NullableInteger'
        description: The number of workers of a defined <code>workerType</code> that are allocated when this task runs.
      Parameters:
        $ref: '#/definitions/TransformParameters'
        description: The configuration parameters that are specific to the algorithm used.
      Role:
        $ref: '#/definitions/RoleString'
        description: The name or Amazon Resource Name (ARN) of the IAM role with the required permissions.
      Schema:
        $ref: '#/definitions/TransformSchema'
        description: 'The <code>Map&lt;Column, Type&gt;</code> object that represents the schema that this transform accepts. Has an upper bound of 100 columns.'
      Status:
        $ref: '#/definitions/TransformStatusType'
        description: 'The last known status of the transform (to indicate whether it can be used or not). One of "NOT_READY", "READY", or "DELETING".'
      Timeout:
        $ref: '#/definitions/Timeout'
        description: 'The timeout for a task run for this transform in minutes. This is the maximum time that a task run for this transform can consume resources before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours).'
      TransformId:
        $ref: '#/definitions/HashString'
        description: 'The unique identifier of the transform, generated at the time that the transform was created.'
      WorkerType:
        $ref: '#/definitions/WorkerType'
        description: '<p>The type of predefined worker that is allocated when this task runs. Accepts a value of Standard, G.1X, or G.2X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.</p> </li> </ul>'
    type: object
  GetMLTransformsRequest:
    properties:
      Filter:
        $ref: '#/definitions/TransformFilterCriteria'
        description: The filter transformation criteria.
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return.
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: A paginated token to offset the results.
      Sort:
        $ref: '#/definitions/TransformSortCriteria'
        description: The sorting criteria.
    type: object
  GetMLTransformsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'A pagination token, if more results are available.'
      Transforms:
        $ref: '#/definitions/TransformList'
        description: A list of machine learning transforms.
    required:
      - Transforms
    type: object
  GetMappingRequest:
    properties:
      Location:
        $ref: '#/definitions/Location'
        description: Parameters for the mapping.
      Sinks:
        $ref: '#/definitions/CatalogEntries'
        description: A list of target tables.
      Source:
        $ref: '#/definitions/CatalogEntry'
        description: Specifies the source table.
    required:
      - Source
    type: object
  GetMappingResponse:
    properties:
      Mapping:
        $ref: '#/definitions/MappingList'
        description: A list of mappings to the specified targets.
    required:
      - Mapping
    type: object
  GetPartitionRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog where the partition in question resides. If none is provided, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: The name of the catalog database where the partition resides.
      PartitionValues:
        $ref: '#/definitions/ValueStringList'
        description: The values that define the partition.
      TableName:
        $ref: '#/definitions/NameString'
        description: The name of the partition's table.
    required:
      - DatabaseName
      - TableName
      - PartitionValues
    type: object
  GetPartitionResponse:
    properties:
      Partition:
        $ref: '#/definitions/Partition'
        description: 'The requested information, in the form of a <code>Partition</code> object.'
    type: object
  GetPartitionsRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog where the partitions in question reside. If none is provided, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: The name of the catalog database where the partitions reside.
      Expression:
        $ref: '#/definitions/PredicateString'
        description: '<p>An expression that filters the partitions to be returned.</p> <p>The expression uses SQL syntax similar to the SQL <code>WHERE</code> filter clause. The SQL statement parser <a href="http://jsqlparser.sourceforge.net/home.php">JSQLParser</a> parses the expression. </p> <p> <i>Operators</i>: The following are the operators that you can use in the <code>Expression</code> API call:</p> <dl> <dt>=</dt> <dd> <p>Checks whether the values of the two operands are equal; if yes, then the condition becomes true.</p> <p>Example: Assume ''variable a'' holds 10 and ''variable b'' holds 20. </p> <p>(a = b) is not true.</p> </dd> <dt>&lt; &gt;</dt> <dd> <p>Checks whether the values of two operands are equal; if the values are not equal, then the condition becomes true.</p> <p>Example: (a &lt; &gt; b) is true.</p> </dd> <dt>&gt;</dt> <dd> <p>Checks whether the value of the left operand is greater than the value of the right operand; if yes, then the condition becomes true.</p> <p>Example: (a &gt; b) is not true.</p> </dd> <dt>&lt;</dt> <dd> <p>Checks whether the value of the left operand is less than the value of the right operand; if yes, then the condition becomes true.</p> <p>Example: (a &lt; b) is true.</p> </dd> <dt>&gt;=</dt> <dd> <p>Checks whether the value of the left operand is greater than or equal to the value of the right operand; if yes, then the condition becomes true.</p> <p>Example: (a &gt;= b) is not true.</p> </dd> <dt>&lt;=</dt> <dd> <p>Checks whether the value of the left operand is less than or equal to the value of the right operand; if yes, then the condition becomes true.</p> <p>Example: (a &lt;= b) is true.</p> </dd> <dt>AND, OR, IN, BETWEEN, LIKE, NOT, IS NULL</dt> <dd> <p>Logical operators.</p> </dd> </dl> <p> <i>Supported Partition Key Types</i>: The following are the supported partition keys.</p> <ul> <li> <p> <code>string</code> </p> </li> <li> <p> <code>date</code> </p> </li> <li> <p> <code>timestamp</code> </p> </li> <li> <p> <code>int</code> </p> </li> <li> <p> <code>bigint</code> </p> </li> <li> <p> <code>long</code> </p> </li> <li> <p> <code>tinyint</code> </p> </li> <li> <p> <code>smallint</code> </p> </li> <li> <p> <code>decimal</code> </p> </li> </ul> <p>If an invalid type is encountered, an exception is thrown. </p> <p>The following list shows the valid operators on each type. When you define a crawler, the <code>partitionKey</code> type is created as a <code>STRING</code>, to be compatible with the catalog partitions. </p> <p> <i>Sample API Call</i>: </p>'
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The maximum number of partitions to return in a single response.
      NextToken:
        $ref: '#/definitions/Token'
        description: 'A continuation token, if this is not the first call to retrieve these partitions.'
      Segment:
        $ref: '#/definitions/Segment'
        description: The segment of the table's partitions to scan in this request.
      TableName:
        $ref: '#/definitions/NameString'
        description: The name of the partitions' table.
    required:
      - DatabaseName
      - TableName
    type: object
  GetPartitionsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/Token'
        description: 'A continuation token, if the returned list of partitions does not include the last one.'
      Partitions:
        $ref: '#/definitions/PartitionList'
        description: A list of requested partitions.
    type: object
  GetPlanRequest:
    properties:
      Language:
        $ref: '#/definitions/Language'
        description: The programming language of the code to perform the mapping.
      Location:
        $ref: '#/definitions/Location'
        description: The parameters for the mapping.
      Mapping:
        $ref: '#/definitions/MappingList'
        description: The list of mappings from a source table to target tables.
      Sinks:
        $ref: '#/definitions/CatalogEntries'
        description: The target tables.
      Source:
        $ref: '#/definitions/CatalogEntry'
        description: The source table.
    required:
      - Mapping
      - Source
    type: object
  GetPlanResponse:
    properties:
      PythonScript:
        $ref: '#/definitions/PythonScript'
        description: A Python script to perform the mapping.
      ScalaCode:
        $ref: '#/definitions/ScalaCode'
        description: The Scala code to perform the mapping.
    type: object
  GetResourcePolicyRequest:
    properties: {}
    type: object
  GetResourcePolicyResponse:
    properties:
      CreateTime:
        $ref: '#/definitions/Timestamp'
        description: The date and time at which the policy was created.
      PolicyHash:
        $ref: '#/definitions/HashString'
        description: Contains the hash value associated with this policy.
      PolicyInJson:
        $ref: '#/definitions/PolicyJsonString'
        description: 'Contains the requested policy document, in JSON format.'
      UpdateTime:
        $ref: '#/definitions/Timestamp'
        description: The date and time at which the policy was last updated.
    type: object
  GetSecurityConfigurationRequest:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the security configuration to retrieve.
    required:
      - Name
    type: object
  GetSecurityConfigurationResponse:
    properties:
      SecurityConfiguration:
        $ref: '#/definitions/SecurityConfiguration'
        description: The requested security configuration.
    type: object
  GetSecurityConfigurationsRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return.
      NextToken:
        $ref: '#/definitions/GenericString'
        description: 'A continuation token, if this is a continuation call.'
    type: object
  GetSecurityConfigurationsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/GenericString'
        description: 'A continuation token, if there are more security configurations to return.'
      SecurityConfigurations:
        $ref: '#/definitions/SecurityConfigurationList'
        description: A list of security configurations.
    type: object
  GetTableRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog where the table resides. If none is provided, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: 'The name of the database in the catalog in which the table resides. For Hive compatibility, this name is entirely lowercase.'
      Name:
        $ref: '#/definitions/NameString'
        description: 'The name of the table for which to retrieve the definition. For Hive compatibility, this name is entirely lowercase.'
    required:
      - DatabaseName
      - Name
    type: object
  GetTableResponse:
    properties:
      Table:
        $ref: '#/definitions/Table'
        description: The <code>Table</code> object that defines the specified table.
    type: object
  GetTableVersionRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog where the tables reside. If none is provided, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: 'The database in the catalog in which the table resides. For Hive compatibility, this name is entirely lowercase.'
      TableName:
        $ref: '#/definitions/NameString'
        description: 'The name of the table. For Hive compatibility, this name is entirely lowercase.'
      VersionId:
        $ref: '#/definitions/VersionString'
        description: 'The ID value of the table version to be retrieved. A <code>VersionID</code> is a string representation of an integer. Each version is incremented by 1. '
    required:
      - DatabaseName
      - TableName
    type: object
  GetTableVersionResponse:
    properties:
      TableVersion:
        $ref: '#/definitions/TableVersion'
        description: The requested table version.
    type: object
  GetTableVersionsList:
    items:
      $ref: '#/definitions/TableVersion'
    type: array
  GetTableVersionsRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog where the tables reside. If none is provided, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: 'The database in the catalog in which the table resides. For Hive compatibility, this name is entirely lowercase.'
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The maximum number of table versions to return in one response.
      NextToken:
        $ref: '#/definitions/Token'
        description: 'A continuation token, if this is not the first call.'
      TableName:
        $ref: '#/definitions/NameString'
        description: 'The name of the table. For Hive compatibility, this name is entirely lowercase.'
    required:
      - DatabaseName
      - TableName
    type: object
  GetTableVersionsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/Token'
        description: 'A continuation token, if the list of available versions does not include the last one.'
      TableVersions:
        $ref: '#/definitions/GetTableVersionsList'
        description: A list of strings identifying available versions of the specified table.
    type: object
  GetTablesRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog where the tables reside. If none is provided, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: 'The database in the catalog whose tables to list. For Hive compatibility, this name is entirely lowercase.'
      Expression:
        $ref: '#/definitions/FilterString'
        description: 'A regular expression pattern. If present, only those tables whose names match the pattern are returned.'
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The maximum number of tables to return in a single response.
      NextToken:
        $ref: '#/definitions/Token'
        description: 'A continuation token, included if this is a continuation call.'
    required:
      - DatabaseName
    type: object
  GetTablesResponse:
    properties:
      NextToken:
        $ref: '#/definitions/Token'
        description: 'A continuation token, present if the current list segment is not the last.'
      TableList:
        $ref: '#/definitions/TableList'
        description: A list of the requested <code>Table</code> objects.
    type: object
  GetTagsRequest:
    properties:
      ResourceArn:
        $ref: '#/definitions/GlueResourceArn'
        description: The Amazon Resource Name (ARN) of the resource for which to retrieve tags.
    required:
      - ResourceArn
    type: object
  GetTagsResponse:
    properties:
      Tags:
        $ref: '#/definitions/TagsMap'
        description: The requested tags.
    type: object
  GetTriggerRequest:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the trigger to retrieve.
    required:
      - Name
    type: object
  GetTriggerResponse:
    properties:
      Trigger:
        $ref: '#/definitions/Trigger'
        description: The requested trigger definition.
    type: object
  GetTriggersRequest:
    properties:
      DependentJobName:
        $ref: '#/definitions/NameString'
        description: 'The name of the job to retrieve triggers for. The trigger that can start this job is returned, and if there is no such trigger, all triggers are returned.'
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The maximum size of the response.
      NextToken:
        $ref: '#/definitions/GenericString'
        description: 'A continuation token, if this is a continuation call.'
    type: object
  GetTriggersResponse:
    properties:
      NextToken:
        $ref: '#/definitions/GenericString'
        description: 'A continuation token, if not all the requested triggers have yet been returned.'
      Triggers:
        $ref: '#/definitions/TriggerList'
        description: A list of triggers for the specified job.
    type: object
  GetUserDefinedFunctionRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog where the function to be retrieved is located. If none is provided, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: The name of the catalog database where the function is located.
      FunctionName:
        $ref: '#/definitions/NameString'
        description: The name of the function.
    required:
      - DatabaseName
      - FunctionName
    type: object
  GetUserDefinedFunctionResponse:
    properties:
      UserDefinedFunction:
        $ref: '#/definitions/UserDefinedFunction'
        description: The requested function definition.
    type: object
  GetUserDefinedFunctionsRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog where the functions to be retrieved are located. If none is provided, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: The name of the catalog database where the functions are located.
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The maximum number of functions to return in one response.
      NextToken:
        $ref: '#/definitions/Token'
        description: 'A continuation token, if this is a continuation call.'
      Pattern:
        $ref: '#/definitions/NameString'
        description: An optional function-name pattern string that filters the function definitions returned.
    required:
      - DatabaseName
      - Pattern
    type: object
  GetUserDefinedFunctionsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/Token'
        description: 'A continuation token, if the list of functions returned does not include the last requested function.'
      UserDefinedFunctions:
        $ref: '#/definitions/UserDefinedFunctionList'
        description: A list of requested function definitions.
    type: object
  GetWorkflowRequest:
    properties:
      IncludeGraph:
        $ref: '#/definitions/NullableBoolean'
        description: Specifies whether to include a graph when returning the workflow resource metadata.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the workflow to retrieve.
    required:
      - Name
    type: object
  GetWorkflowResponse:
    properties:
      Workflow:
        $ref: '#/definitions/Workflow'
        description: The resource metadata for the workflow.
    type: object
  GetWorkflowRunPropertiesRequest:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: Name of the workflow which was run.
      RunId:
        $ref: '#/definitions/IdString'
        description: The ID of the workflow run whose run properties should be returned.
    required:
      - Name
      - RunId
    type: object
  GetWorkflowRunPropertiesResponse:
    properties:
      RunProperties:
        $ref: '#/definitions/WorkflowRunProperties'
        description: The workflow run properties which were set during the specified run.
    type: object
  GetWorkflowRunRequest:
    properties:
      IncludeGraph:
        $ref: '#/definitions/NullableBoolean'
        description: Specifies whether to include the workflow graph in response or not.
      Name:
        $ref: '#/definitions/NameString'
        description: Name of the workflow being run.
      RunId:
        $ref: '#/definitions/IdString'
        description: The ID of the workflow run.
    required:
      - Name
      - RunId
    type: object
  GetWorkflowRunResponse:
    properties:
      Run:
        $ref: '#/definitions/WorkflowRun'
        description: The requested workflow run metadata.
    type: object
  GetWorkflowRunsRequest:
    properties:
      IncludeGraph:
        $ref: '#/definitions/NullableBoolean'
        description: Specifies whether to include the workflow graph in response or not.
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The maximum number of workflow runs to be included in the response.
      Name:
        $ref: '#/definitions/NameString'
        description: Name of the workflow whose metadata of runs should be returned.
      NextToken:
        $ref: '#/definitions/GenericString'
        description: The maximum size of the response.
    required:
      - Name
    type: object
  GetWorkflowRunsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/GenericString'
        description: 'A continuation token, if not all requested workflow runs have been returned.'
      Runs:
        $ref: '#/definitions/WorkflowRuns'
        description: A list of workflow run metadata objects.
    type: object
  GlueEncryptionException: {}
  GlueResourceArn:
    maxLength: 10240
    minLength: 1
    pattern: 'arn:aws:glue:.*'
    type: string
  GlueTable:
    description: The database and table in the AWS Glue Data Catalog that is used for input or output data.
    properties:
      CatalogId:
        $ref: '#/definitions/NameString'
        description: A unique identifier for the AWS Glue Data Catalog.
      ConnectionName:
        $ref: '#/definitions/NameString'
        description: The name of the connection to the AWS Glue Data Catalog.
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: A database name in the AWS Glue Data Catalog.
      TableName:
        $ref: '#/definitions/NameString'
        description: A table name in the AWS Glue Data Catalog.
    required:
      - DatabaseName
      - TableName
    type: object
  GlueTables:
    items:
      $ref: '#/definitions/GlueTable'
    maxItems: 10
    minItems: 0
    type: array
  GlueVersionString:
    maxLength: 255
    minLength: 1
    pattern: ^\w+\.\w+$
    type: string
  GrokClassifier:
    description: A classifier that uses <code>grok</code> patterns.
    properties:
      Classification:
        $ref: '#/definitions/Classification'
        description: 'An identifier of the data format that the classifier matches, such as Twitter, JSON, Omniture logs, and so on.'
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: The time that this classifier was registered.
      CustomPatterns:
        $ref: '#/definitions/CustomPatterns'
        description: 'Optional custom grok patterns defined by this classifier. For more information, see custom patterns in <a href="http://docs.aws.amazon.com/glue/latest/dg/custom-classifier.html">Writing Custom Classifiers</a>.'
      GrokPattern:
        $ref: '#/definitions/GrokPattern'
        description: 'The grok pattern applied to a data store by this classifier. For more information, see built-in patterns in <a href="http://docs.aws.amazon.com/glue/latest/dg/custom-classifier.html">Writing Custom Classifiers</a>.'
      LastUpdated:
        $ref: '#/definitions/Timestamp'
        description: The time that this classifier was last updated.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the classifier.
      Version:
        $ref: '#/definitions/VersionId'
        description: The version of this classifier.
    required:
      - Name
      - Classification
      - GrokPattern
    type: object
  GrokPattern:
    maxLength: 2048
    minLength: 1
    type: string
    x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\r\t]*'
  HashString:
    maxLength: 255
    minLength: 1
    type: string
    x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*'
  IdString:
    maxLength: 255
    minLength: 1
    type: string
    x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*'
  IdempotentParameterMismatchException: {}
  ImportCatalogToGlueRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the catalog to import. Currently, this should be the AWS account ID.'
    type: object
  ImportCatalogToGlueResponse:
    properties: {}
    type: object
  ImportLabelsTaskRunProperties:
    description: Specifies configuration properties for an importing labels task run.
    properties:
      InputS3Path:
        $ref: '#/definitions/UriString'
        description: The Amazon Simple Storage Service (Amazon S3) path from where you will import the labels.
      Replace:
        $ref: '#/definitions/ReplaceBoolean'
        description: Indicates whether to overwrite your existing labels.
    type: object
  Integer:
    type: integer
  IntegerFlag:
    maximum: 1
    minimum: 0
    type: integer
  IntegerValue:
    type: integer
  InternalServiceException: {}
  InvalidInputException: {}
  JdbcTarget:
    description: Specifies a JDBC data store to crawl.
    properties:
      ConnectionName:
        $ref: '#/definitions/ConnectionName'
        description: The name of the connection to use to connect to the JDBC target.
      Exclusions:
        $ref: '#/definitions/PathList'
        description: 'A list of glob patterns used to exclude from the crawl. For more information, see <a href="http://docs.aws.amazon.com/glue/latest/dg/add-crawler.html">Catalog Tables with a Crawler</a>.'
      Path:
        $ref: '#/definitions/Path'
        description: The path of the JDBC target.
    type: object
  JdbcTargetList:
    items:
      $ref: '#/definitions/JdbcTarget'
    type: array
  Job:
    description: Specifies a job definition.
    properties:
      AllocatedCapacity:
        $ref: '#/definitions/IntegerValue'
        description: '<p>This field is deprecated. Use <code>MaxCapacity</code> instead.</p> <p>The number of AWS Glue data processing units (DPUs) allocated to runs of this job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">AWS Glue pricing page</a>.</p> <p/>This property is deprecated, use MaxCapacity instead.'
      Command:
        $ref: '#/definitions/JobCommand'
        description: The <code>JobCommand</code> that executes this job.
      Connections:
        $ref: '#/definitions/ConnectionsList'
        description: The connections used for this job.
      CreatedOn:
        $ref: '#/definitions/TimestampValue'
        description: The time and date that this job definition was created.
      DefaultArguments:
        $ref: '#/definitions/GenericMap'
        description: '<p>The default arguments for this job, specified as name-value pairs.</p> <p>You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes.</p> <p>For information about how to specify and consume your own Job arguments, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html">Calling AWS Glue APIs in Python</a> topic in the developer guide.</p> <p>For information about the key-value pairs that AWS Glue consumes to set up your job, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html">Special Parameters Used by AWS Glue</a> topic in the developer guide.</p>'
      Description:
        $ref: '#/definitions/DescriptionString'
        description: A description of the job.
      ExecutionProperty:
        $ref: '#/definitions/ExecutionProperty'
        description: An <code>ExecutionProperty</code> specifying the maximum number of concurrent runs allowed for this job.
      GlueVersion:
        $ref: '#/definitions/GlueVersionString'
        description: '<p>Glue version determines the versions of Apache Spark and Python that AWS Glue supports. The Python version indicates the version supported for jobs of type Spark. </p> <p>For more information about the available AWS Glue versions and corresponding Spark and Python versions, see <a href="https://docs.aws.amazon.com/glue/latest/dg/add-job.html">Glue version</a> in the developer guide.</p> <p>Jobs that are created without specifying a Glue version default to Glue 0.9.</p>'
      LastModifiedOn:
        $ref: '#/definitions/TimestampValue'
        description: The last point in time when this job definition was modified.
      LogUri:
        $ref: '#/definitions/UriString'
        description: This field is reserved for future use.
      MaxCapacity:
        $ref: '#/definitions/NullableDouble'
        description: '<p>The number of AWS Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">AWS Glue pricing page</a>.</p> <p>Do not set <code>Max Capacity</code> if using <code>WorkerType</code> and <code>NumberOfWorkers</code>.</p> <p>The value that can be allocated for <code>MaxCapacity</code> depends on whether you are running a Python shell job or an Apache Spark ETL job:</p> <ul> <li> <p>When you specify a Python shell job (<code>JobCommand.Name</code>="pythonshell"), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.</p> </li> <li> <p>When you specify an Apache Spark ETL job (<code>JobCommand.Name</code>="glueetl"), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.</p> </li> </ul>'
      MaxRetries:
        $ref: '#/definitions/MaxRetries'
        description: The maximum number of times to retry this job after a JobRun fails.
      Name:
        $ref: '#/definitions/NameString'
        description: The name you assign to this job definition.
      NotificationProperty:
        $ref: '#/definitions/NotificationProperty'
        description: Specifies configuration properties of a job notification.
      NumberOfWorkers:
        $ref: '#/definitions/NullableInteger'
        description: '<p>The number of workers of a defined <code>workerType</code> that are allocated when a job runs.</p> <p>The maximum number of workers you can define are 299 for <code>G.1X</code>, and 149 for <code>G.2X</code>. </p>'
      Role:
        $ref: '#/definitions/RoleString'
        description: The name or Amazon Resource Name (ARN) of the IAM role associated with this job.
      SecurityConfiguration:
        $ref: '#/definitions/NameString'
        description: The name of the <code>SecurityConfiguration</code> structure to be used with this job.
      Timeout:
        $ref: '#/definitions/Timeout'
        description: 'The job timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours).'
      WorkerType:
        $ref: '#/definitions/WorkerType'
        description: '<p>The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> </ul>'
    type: object
  JobBookmarkEntry:
    description: Defines a point that a job can resume processing.
    properties:
      Attempt:
        $ref: '#/definitions/IntegerValue'
        description: The attempt ID number.
      JobBookmark:
        $ref: '#/definitions/JsonValue'
        description: The bookmark itself.
      JobName:
        $ref: '#/definitions/JobName'
        description: The name of the job in question.
      PreviousRunId:
        $ref: '#/definitions/RunId'
        description: The unique run identifier associated with the previous job run.
      Run:
        $ref: '#/definitions/IntegerValue'
        description: The run ID number.
      RunId:
        $ref: '#/definitions/RunId'
        description: The run ID number.
      Version:
        $ref: '#/definitions/IntegerValue'
        description: The version of the job.
    type: object
  JobBookmarksEncryption:
    description: Specifies how job bookmark data should be encrypted.
    properties:
      JobBookmarksEncryptionMode:
        $ref: '#/definitions/JobBookmarksEncryptionMode'
        description: The encryption mode to use for job bookmarks data.
      KmsKeyArn:
        $ref: '#/definitions/KmsKeyArn'
        description: The Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.
    type: object
  JobBookmarksEncryptionMode:
    enum:
      - DISABLED
      - CSE-KMS
    type: string
  JobCommand:
    description: Specifies code executed when a job is run.
    properties:
      Name:
        $ref: '#/definitions/GenericString'
        description: 'The name of the job command. For an Apache Spark ETL job, this must be <code>glueetl</code>. For a Python shell job, it must be <code>pythonshell</code>.'
      PythonVersion:
        $ref: '#/definitions/PythonVersionString'
        description: The Python version being used to execute a Python shell job. Allowed values are 2 or 3.
      ScriptLocation:
        $ref: '#/definitions/ScriptLocationString'
        description: Specifies the Amazon Simple Storage Service (Amazon S3) path to a script that executes a job.
    type: object
  JobList:
    items:
      $ref: '#/definitions/Job'
    type: array
  JobName:
    type: string
  JobNameList:
    items:
      $ref: '#/definitions/NameString'
    type: array
  JobNodeDetails:
    description: The details of a Job node present in the workflow.
    properties:
      JobRuns:
        $ref: '#/definitions/JobRunList'
        description: The information for the job runs represented by the job node.
    type: object
  JobRun:
    description: Contains information about a job run.
    properties:
      AllocatedCapacity:
        $ref: '#/definitions/IntegerValue'
        description: '<p>This field is deprecated. Use <code>MaxCapacity</code> instead.</p> <p>The number of AWS Glue data processing units (DPUs) allocated to this JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">AWS Glue pricing page</a>.</p>This property is deprecated, use MaxCapacity instead.'
      Arguments:
        $ref: '#/definitions/GenericMap'
        description: '<p>The job arguments associated with this run. For this job run, they replace the default arguments set in the job definition itself.</p> <p>You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes.</p> <p>For information about how to specify and consume your own job arguments, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html">Calling AWS Glue APIs in Python</a> topic in the developer guide.</p> <p>For information about the key-value pairs that AWS Glue consumes to set up your job, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html">Special Parameters Used by AWS Glue</a> topic in the developer guide.</p>'
      Attempt:
        $ref: '#/definitions/AttemptCount'
        description: The number of the attempt to run this job.
      CompletedOn:
        $ref: '#/definitions/TimestampValue'
        description: The date and time that this job run completed.
      ErrorMessage:
        $ref: '#/definitions/ErrorString'
        description: An error message associated with this job run.
      ExecutionTime:
        $ref: '#/definitions/ExecutionTime'
        description: The amount of time (in seconds) that the job run consumed resources.
      GlueVersion:
        $ref: '#/definitions/GlueVersionString'
        description: '<p>Glue version determines the versions of Apache Spark and Python that AWS Glue supports. The Python version indicates the version supported for jobs of type Spark. </p> <p>For more information about the available AWS Glue versions and corresponding Spark and Python versions, see <a href="https://docs.aws.amazon.com/glue/latest/dg/add-job.html">Glue version</a> in the developer guide.</p> <p>Jobs that are created without specifying a Glue version default to Glue 0.9.</p>'
      Id:
        $ref: '#/definitions/IdString'
        description: The ID of this job run.
      JobName:
        $ref: '#/definitions/NameString'
        description: The name of the job definition being used in this run.
      JobRunState:
        $ref: '#/definitions/JobRunState'
        description: The current state of the job run.
      LastModifiedOn:
        $ref: '#/definitions/TimestampValue'
        description: The last time that this job run was modified.
      LogGroupName:
        $ref: '#/definitions/GenericString'
        description: 'The name of the log group for secure logging that can be server-side encrypted in Amazon CloudWatch using AWS KMS. This name can be <code>/aws-glue/jobs/</code>, in which case the default encryption is <code>NONE</code>. If you add a role name and <code>SecurityConfiguration</code> name (in other words, <code>/aws-glue/jobs-yourRoleName-yourSecurityConfigurationName/</code>), then that security configuration is used to encrypt the log group.'
      MaxCapacity:
        $ref: '#/definitions/NullableDouble'
        description: '<p>The number of AWS Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://docs.aws.amazon.com/https:/aws.amazon.com/glue/pricing/">AWS Glue pricing page</a>.</p> <p>Do not set <code>Max Capacity</code> if using <code>WorkerType</code> and <code>NumberOfWorkers</code>.</p> <p>The value that can be allocated for <code>MaxCapacity</code> depends on whether you are running a Python shell job or an Apache Spark ETL job:</p> <ul> <li> <p>When you specify a Python shell job (<code>JobCommand.Name</code>="pythonshell"), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.</p> </li> <li> <p>When you specify an Apache Spark ETL job (<code>JobCommand.Name</code>="glueetl"), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.</p> </li> </ul>'
      NotificationProperty:
        $ref: '#/definitions/NotificationProperty'
        description: Specifies configuration properties of a job run notification.
      NumberOfWorkers:
        $ref: '#/definitions/NullableInteger'
        description: '<p>The number of workers of a defined <code>workerType</code> that are allocated when a job runs.</p> <p>The maximum number of workers you can define are 299 for <code>G.1X</code>, and 149 for <code>G.2X</code>. </p>'
      PredecessorRuns:
        $ref: '#/definitions/PredecessorList'
        description: A list of predecessors to this job run.
      PreviousRunId:
        $ref: '#/definitions/IdString'
        description: 'The ID of the previous run of this job. For example, the <code>JobRunId</code> specified in the <code>StartJobRun</code> action.'
      SecurityConfiguration:
        $ref: '#/definitions/NameString'
        description: The name of the <code>SecurityConfiguration</code> structure to be used with this job run.
      StartedOn:
        $ref: '#/definitions/TimestampValue'
        description: The date and time at which this job run was started.
      Timeout:
        $ref: '#/definitions/Timeout'
        description: 'The <code>JobRun</code> timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.'
      TriggerName:
        $ref: '#/definitions/NameString'
        description: The name of the trigger that started this job run.
      WorkerType:
        $ref: '#/definitions/WorkerType'
        description: '<p>The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.</p> </li> </ul>'
    type: object
  JobRunList:
    items:
      $ref: '#/definitions/JobRun'
    type: array
  JobRunState:
    enum:
      - STARTING
      - RUNNING
      - STOPPING
      - STOPPED
      - SUCCEEDED
      - FAILED
      - TIMEOUT
    type: string
  JobUpdate:
    description: Specifies information used to update an existing job definition. The previous job definition is completely overwritten by this information.
    properties:
      AllocatedCapacity:
        $ref: '#/definitions/IntegerValue'
        description: '<p>This field is deprecated. Use <code>MaxCapacity</code> instead.</p> <p>The number of AWS Glue data processing units (DPUs) to allocate to this job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">AWS Glue pricing page</a>.</p>This property is deprecated, use MaxCapacity instead.'
      Command:
        $ref: '#/definitions/JobCommand'
        description: The <code>JobCommand</code> that executes this job (required).
      Connections:
        $ref: '#/definitions/ConnectionsList'
        description: The connections used for this job.
      DefaultArguments:
        $ref: '#/definitions/GenericMap'
        description: '<p>The default arguments for this job.</p> <p>You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes.</p> <p>For information about how to specify and consume your own Job arguments, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html">Calling AWS Glue APIs in Python</a> topic in the developer guide.</p> <p>For information about the key-value pairs that AWS Glue consumes to set up your job, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html">Special Parameters Used by AWS Glue</a> topic in the developer guide.</p>'
      Description:
        $ref: '#/definitions/DescriptionString'
        description: Description of the job being defined.
      ExecutionProperty:
        $ref: '#/definitions/ExecutionProperty'
        description: An <code>ExecutionProperty</code> specifying the maximum number of concurrent runs allowed for this job.
      GlueVersion:
        $ref: '#/definitions/GlueVersionString'
        description: '<p>Glue version determines the versions of Apache Spark and Python that AWS Glue supports. The Python version indicates the version supported for jobs of type Spark. </p> <p>For more information about the available AWS Glue versions and corresponding Spark and Python versions, see <a href="https://docs.aws.amazon.com/glue/latest/dg/add-job.html">Glue version</a> in the developer guide.</p>'
      LogUri:
        $ref: '#/definitions/UriString'
        description: This field is reserved for future use.
      MaxCapacity:
        $ref: '#/definitions/NullableDouble'
        description: '<p>The number of AWS Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">AWS Glue pricing page</a>.</p> <p>Do not set <code>Max Capacity</code> if using <code>WorkerType</code> and <code>NumberOfWorkers</code>.</p> <p>The value that can be allocated for <code>MaxCapacity</code> depends on whether you are running a Python shell job or an Apache Spark ETL job:</p> <ul> <li> <p>When you specify a Python shell job (<code>JobCommand.Name</code>="pythonshell"), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.</p> </li> <li> <p>When you specify an Apache Spark ETL job (<code>JobCommand.Name</code>="glueetl"), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.</p> </li> </ul>'
      MaxRetries:
        $ref: '#/definitions/MaxRetries'
        description: The maximum number of times to retry this job if it fails.
      NotificationProperty:
        $ref: '#/definitions/NotificationProperty'
        description: Specifies the configuration properties of a job notification.
      NumberOfWorkers:
        $ref: '#/definitions/NullableInteger'
        description: '<p>The number of workers of a defined <code>workerType</code> that are allocated when a job runs.</p> <p>The maximum number of workers you can define are 299 for <code>G.1X</code>, and 149 for <code>G.2X</code>. </p>'
      Role:
        $ref: '#/definitions/RoleString'
        description: The name or Amazon Resource Name (ARN) of the IAM role associated with this job (required).
      SecurityConfiguration:
        $ref: '#/definitions/NameString'
        description: The name of the <code>SecurityConfiguration</code> structure to be used with this job.
      Timeout:
        $ref: '#/definitions/Timeout'
        description: 'The job timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours).'
      WorkerType:
        $ref: '#/definitions/WorkerType'
        description: '<p>The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> </ul>'
    type: object
  JsonClassifier:
    description: A classifier for <code>JSON</code> content.
    properties:
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: The time that this classifier was registered.
      JsonPath:
        $ref: '#/definitions/JsonPath'
        description: 'A <code>JsonPath</code> string defining the JSON data for the classifier to classify. AWS Glue supports a subset of <code>JsonPath</code>, as described in <a href="https://docs.aws.amazon.com/glue/latest/dg/custom-classifier.html#custom-classifier-json">Writing JsonPath Custom Classifiers</a>.'
      LastUpdated:
        $ref: '#/definitions/Timestamp'
        description: The time that this classifier was last updated.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the classifier.
      Version:
        $ref: '#/definitions/VersionId'
        description: The version of this classifier.
    required:
      - Name
      - JsonPath
    type: object
  JsonPath:
    type: string
  JsonValue:
    type: string
  KeyString:
    maxLength: 255
    minLength: 1
    type: string
    x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*'
  KmsKeyArn:
    pattern: 'arn:aws:kms:.*'
    type: string
  LabelCount:
    type: integer
  LabelingSetGenerationTaskRunProperties:
    description: Specifies configuration properties for a labeling set generation task run.
    properties:
      OutputS3Path:
        $ref: '#/definitions/UriString'
        description: The Amazon Simple Storage Service (Amazon S3) path where you will generate the labeling set.
    type: object
  Language:
    enum:
      - PYTHON
      - SCALA
    type: string
  LastCrawlInfo:
    description: Status and error information about the most recent crawl.
    properties:
      ErrorMessage:
        $ref: '#/definitions/DescriptionString'
        description: 'If an error occurred, the error information about the last crawl.'
      LogGroup:
        $ref: '#/definitions/LogGroup'
        description: The log group for the last crawl.
      LogStream:
        $ref: '#/definitions/LogStream'
        description: The log stream for the last crawl.
      MessagePrefix:
        $ref: '#/definitions/MessagePrefix'
        description: The prefix for a message about this crawl.
      StartTime:
        $ref: '#/definitions/Timestamp'
        description: The time at which the crawl started.
      Status:
        $ref: '#/definitions/LastCrawlStatus'
        description: Status of the last crawl.
    type: object
  LastCrawlStatus:
    enum:
      - SUCCEEDED
      - CANCELLED
      - FAILED
    type: string
  ListCrawlersRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The maximum size of a list to return.
      NextToken:
        $ref: '#/definitions/Token'
        description: 'A continuation token, if this is a continuation request.'
      Tags:
        $ref: '#/definitions/TagsMap'
        description: Specifies to return only these tagged resources.
    type: object
  ListCrawlersResponse:
    properties:
      CrawlerNames:
        $ref: '#/definitions/CrawlerNameList'
        description: 'The names of all crawlers in the account, or the crawlers with the specified tags.'
      NextToken:
        $ref: '#/definitions/Token'
        description: 'A continuation token, if the returned list does not contain the last metric available.'
    type: object
  ListDevEndpointsRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The maximum size of a list to return.
      NextToken:
        $ref: '#/definitions/GenericString'
        description: 'A continuation token, if this is a continuation request.'
      Tags:
        $ref: '#/definitions/TagsMap'
        description: Specifies to return only these tagged resources.
    type: object
  ListDevEndpointsResponse:
    properties:
      DevEndpointNames:
        $ref: '#/definitions/DevEndpointNameList'
        description: 'The names of all the <code>DevEndpoint</code>s in the account, or the <code>DevEndpoint</code>s with the specified tags.'
      NextToken:
        $ref: '#/definitions/GenericString'
        description: 'A continuation token, if the returned list does not contain the last metric available.'
    type: object
  ListJobsRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The maximum size of a list to return.
      NextToken:
        $ref: '#/definitions/GenericString'
        description: 'A continuation token, if this is a continuation request.'
      Tags:
        $ref: '#/definitions/TagsMap'
        description: Specifies to return only these tagged resources.
    type: object
  ListJobsResponse:
    properties:
      JobNames:
        $ref: '#/definitions/JobNameList'
        description: 'The names of all jobs in the account, or the jobs with the specified tags.'
      NextToken:
        $ref: '#/definitions/GenericString'
        description: 'A continuation token, if the returned list does not contain the last metric available.'
    type: object
  ListTriggersRequest:
    properties:
      DependentJobName:
        $ref: '#/definitions/NameString'
        description: ' The name of the job for which to retrieve triggers. The trigger that can start this job is returned. If there is no such trigger, all triggers are returned.'
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The maximum size of a list to return.
      NextToken:
        $ref: '#/definitions/GenericString'
        description: 'A continuation token, if this is a continuation request.'
      Tags:
        $ref: '#/definitions/TagsMap'
        description: Specifies to return only these tagged resources.
    type: object
  ListTriggersResponse:
    properties:
      NextToken:
        $ref: '#/definitions/GenericString'
        description: 'A continuation token, if the returned list does not contain the last metric available.'
      TriggerNames:
        $ref: '#/definitions/TriggerNameList'
        description: 'The names of all triggers in the account, or the triggers with the specified tags.'
    type: object
  ListWorkflowsRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The maximum size of a list to return.
      NextToken:
        $ref: '#/definitions/GenericString'
        description: 'A continuation token, if this is a continuation request.'
    type: object
  ListWorkflowsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/GenericString'
        description: 'A continuation token, if not all workflow names have been returned.'
      Workflows:
        $ref: '#/definitions/WorkflowNames'
        description: List of names of workflows in the account.
    type: object
  Location:
    description: The location of resources.
    properties:
      DynamoDB:
        $ref: '#/definitions/CodeGenNodeArgs'
        description: An Amazon DynamoDB table location.
      Jdbc:
        $ref: '#/definitions/CodeGenNodeArgs'
        description: A JDBC location.
      S3:
        $ref: '#/definitions/CodeGenNodeArgs'
        description: An Amazon Simple Storage Service (Amazon S3) location.
    type: object
  LocationMap:
    additionalProperties:
      $ref: '#/definitions/ColumnValuesString'
    type: object
  LocationString:
    maxLength: 2056
    type: string
    x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\r\n\t]*'
  LogGroup:
    maxLength: 512
    minLength: 1
    pattern: '[\.\-_/#A-Za-z0-9]+'
    type: string
  LogStream:
    maxLength: 512
    minLength: 1
    pattern: '[^:*]*'
    type: string
  Logical:
    enum:
      - AND
      - ANY
    type: string
  LogicalOperator:
    enum:
      - EQUALS
    type: string
  MLTransform:
    description: A structure for a machine learning transform.
    properties:
      CreatedOn:
        $ref: '#/definitions/Timestamp'
        description: A timestamp. The time and date that this machine learning transform was created.
      Description:
        $ref: '#/definitions/DescriptionString'
        description: 'A user-defined, long-form description text for the machine learning transform. Descriptions are not guaranteed to be unique and can be changed at any time.'
      EvaluationMetrics:
        $ref: '#/definitions/EvaluationMetrics'
        description: An <code>EvaluationMetrics</code> object. Evaluation metrics provide an estimate of the quality of your machine learning transform.
      InputRecordTables:
        $ref: '#/definitions/GlueTables'
        description: A list of AWS Glue table definitions used by the transform.
      LabelCount:
        $ref: '#/definitions/LabelCount'
        description: 'A count identifier for the labeling files generated by AWS Glue for this transform. As you create a better transform, you can iteratively download, label, and upload the labeling file.'
      LastModifiedOn:
        $ref: '#/definitions/Timestamp'
        description: A timestamp. The last point in time when this machine learning transform was modified.
      MaxCapacity:
        $ref: '#/definitions/NullableDouble'
        description: '<p>The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">AWS Glue pricing page</a>. </p> <p>When the <code>WorkerType</code> field is set to a value other than <code>Standard</code>, the <code>MaxCapacity</code> field is set automatically and becomes read-only.</p>'
      MaxRetries:
        $ref: '#/definitions/NullableInteger'
        description: The maximum number of times to retry after an <code>MLTaskRun</code> of the machine learning transform fails.
      Name:
        $ref: '#/definitions/NameString'
        description: A user-defined name for the machine learning transform. Names are not guaranteed unique and can be changed at any time.
      NumberOfWorkers:
        $ref: '#/definitions/NullableInteger'
        description: The number of workers of a defined <code>workerType</code> that are allocated when a task of the transform runs.
      Parameters:
        $ref: '#/definitions/TransformParameters'
        description: 'A <code>TransformParameters</code> object. You can use parameters to tune (customize) the behavior of the machine learning transform by specifying what data it learns from and your preference on various tradeoffs (such as precious vs. recall, or accuracy vs. cost).'
      Role:
        $ref: '#/definitions/RoleString'
        description: 'The name or Amazon Resource Name (ARN) of the IAM role with the required permissions. This role needs permission to your Amazon Simple Storage Service (Amazon S3) sources, targets, temporary directory, scripts, and any libraries used by the task run for this transform.'
      Schema:
        $ref: '#/definitions/TransformSchema'
        description: A map of key-value pairs representing the columns and data types that this transform can run against. Has an upper bound of 100 columns.
      Status:
        $ref: '#/definitions/TransformStatusType'
        description: The current status of the machine learning transform.
      Timeout:
        $ref: '#/definitions/Timeout'
        description: The timeout in minutes of the machine learning transform.
      TransformId:
        $ref: '#/definitions/HashString'
        description: The unique transform ID that is generated for the machine learning transform. The ID is guaranteed to be unique and does not change.
      WorkerType:
        $ref: '#/definitions/WorkerType'
        description: '<p>The type of predefined worker that is allocated when a task of this transform runs. Accepts a value of Standard, G.1X, or G.2X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.</p> </li> </ul>'
    type: object
  MLTransformNotReadyException: {}
  MapValue:
    additionalProperties:
      $ref: '#/definitions/GenericString'
    maxProperties: 100
    minProperties: 0
    type: object
  MappingEntry:
    description: Defines a mapping.
    properties:
      SourcePath:
        $ref: '#/definitions/SchemaPathString'
        description: The source path.
      SourceTable:
        $ref: '#/definitions/TableName'
        description: The name of the source table.
      SourceType:
        $ref: '#/definitions/FieldType'
        description: The source type.
      TargetPath:
        $ref: '#/definitions/SchemaPathString'
        description: The target path.
      TargetTable:
        $ref: '#/definitions/TableName'
        description: The target table.
      TargetType:
        $ref: '#/definitions/FieldType'
        description: The target type.
    type: object
  MappingList:
    items:
      $ref: '#/definitions/MappingEntry'
    type: array
  MatchCriteria:
    items:
      $ref: '#/definitions/NameString'
    maxItems: 10
    minItems: 0
    type: array
  MaxConcurrentRuns:
    type: integer
  MaxRetries:
    type: integer
  MessagePrefix:
    maxLength: 255
    minLength: 1
    type: string
    x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*'
  MillisecondsCount:
    type: integer
  NameString:
    maxLength: 255
    minLength: 1
    type: string
    x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*'
  NameStringList:
    items:
      $ref: '#/definitions/NameString'
    type: array
  NoScheduleException: {}
  Node:
    description: 'A node represents an AWS Glue component like Trigger, Job etc. which is part of a workflow.'
    properties:
      CrawlerDetails:
        $ref: '#/definitions/CrawlerNodeDetails'
        description: Details of the crawler when the node represents a crawler.
      JobDetails:
        $ref: '#/definitions/JobNodeDetails'
        description: Details of the Job when the node represents a Job.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the AWS Glue component represented by the node.
      TriggerDetails:
        $ref: '#/definitions/TriggerNodeDetails'
        description: Details of the Trigger when the node represents a Trigger.
      Type:
        $ref: '#/definitions/NodeType'
        description: The type of AWS Glue component represented by the node.
      UniqueId:
        $ref: '#/definitions/NameString'
        description: The unique Id assigned to the node within the workflow.
    type: object
  NodeList:
    items:
      $ref: '#/definitions/Node'
    type: array
  NodeType:
    enum:
      - CRAWLER
      - JOB
      - TRIGGER
    type: string
  NonNegativeDouble:
    format: double
    minimum: 0
    type: number
  NonNegativeInteger:
    minimum: 0
    type: integer
  NotificationProperty:
    description: Specifies configuration properties of a notification.
    properties:
      NotifyDelayAfter:
        $ref: '#/definitions/NotifyDelayAfter'
        description: 'After a job run starts, the number of minutes to wait before sending a job run delay notification.'
    type: object
  NotifyDelayAfter:
    minimum: 1
    type: integer
  NullableBoolean:
    type: boolean
  NullableDouble:
    format: double
    type: number
  NullableInteger:
    type: integer
  OperationTimeoutException: {}
  OrchestrationStringList:
    items:
      $ref: '#/definitions/GenericString'
    type: array
  Order:
    description: Specifies the sort order of a sorted column.
    properties:
      Column:
        $ref: '#/definitions/NameString'
        description: The name of the column.
      SortOrder:
        $ref: '#/definitions/IntegerFlag'
        description: 'Indicates that the column is sorted in ascending order (<code>== 1</code>), or in descending order (<code>==0</code>).'
    required:
      - Column
      - SortOrder
    type: object
  OrderList:
    items:
      $ref: '#/definitions/Order'
    type: array
  PageSize:
    maximum: 1000
    minimum: 1
    type: integer
  PaginationToken:
    type: string
  ParametersMap:
    additionalProperties:
      $ref: '#/definitions/ParametersMapValue'
    type: object
  ParametersMapValue:
    maxLength: 512000
    type: string
  Partition:
    description: Represents a slice of table data.
    properties:
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: The time at which the partition was created.
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: The name of the catalog database in which to create the partition.
      LastAccessTime:
        $ref: '#/definitions/Timestamp'
        description: The last time at which the partition was accessed.
      LastAnalyzedTime:
        $ref: '#/definitions/Timestamp'
        description: The last time at which column statistics were computed for this partition.
      Parameters:
        $ref: '#/definitions/ParametersMap'
        description: These key-value pairs define partition parameters.
      StorageDescriptor:
        $ref: '#/definitions/StorageDescriptor'
        description: Provides information about the physical location where the partition is stored.
      TableName:
        $ref: '#/definitions/NameString'
        description: The name of the database table in which to create the partition.
      Values:
        $ref: '#/definitions/ValueStringList'
        description: The values of the partition.
    type: object
  PartitionError:
    description: Contains information about a partition error.
    properties:
      ErrorDetail:
        $ref: '#/definitions/ErrorDetail'
        description: The details about the partition error.
      PartitionValues:
        $ref: '#/definitions/ValueStringList'
        description: The values that define the partition.
    type: object
  PartitionErrors:
    items:
      $ref: '#/definitions/PartitionError'
    type: array
  PartitionInput:
    description: The structure used to create and update a partition.
    properties:
      LastAccessTime:
        $ref: '#/definitions/Timestamp'
        description: The last time at which the partition was accessed.
      LastAnalyzedTime:
        $ref: '#/definitions/Timestamp'
        description: The last time at which column statistics were computed for this partition.
      Parameters:
        $ref: '#/definitions/ParametersMap'
        description: These key-value pairs define partition parameters.
      StorageDescriptor:
        $ref: '#/definitions/StorageDescriptor'
        description: Provides information about the physical location where the partition is stored.
      Values:
        $ref: '#/definitions/ValueStringList'
        description: 'The values of the partition. Although this parameter is not required by the SDK, you must specify this parameter for a valid input.'
    type: object
  PartitionInputList:
    items:
      $ref: '#/definitions/PartitionInput'
    maxItems: 100
    minItems: 0
    type: array
  PartitionList:
    items:
      $ref: '#/definitions/Partition'
    type: array
  PartitionValueList:
    description: Contains a list of values defining partitions.
    properties:
      Values:
        $ref: '#/definitions/ValueStringList'
        description: The list of values.
    required:
      - Values
    type: object
  Path:
    type: string
  PathList:
    items:
      $ref: '#/definitions/Path'
    type: array
  Permission:
    enum:
      - ALL
      - SELECT
      - ALTER
      - DROP
      - DELETE
      - INSERT
      - CREATE_DATABASE
      - CREATE_TABLE
      - DATA_LOCATION_ACCESS
    type: string
  PermissionList:
    items:
      $ref: '#/definitions/Permission'
    type: array
  PhysicalConnectionRequirements:
    description: Specifies the physical requirements for a connection.
    properties:
      AvailabilityZone:
        $ref: '#/definitions/NameString'
        description: 'The connection''s Availability Zone. This field is redundant because the specified subnet implies the Availability Zone to be used. Currently the field must be populated, but it will be deprecated in the future.'
      SecurityGroupIdList:
        $ref: '#/definitions/SecurityGroupIdList'
        description: The security group ID list used by the connection.
      SubnetId:
        $ref: '#/definitions/NameString'
        description: The subnet ID used by the connection.
    type: object
  PolicyJsonString:
    maxLength: 10240
    minLength: 2
    type: string
  Predecessor:
    description: A job run that was used in the predicate of a conditional trigger that triggered this job run.
    properties:
      JobName:
        $ref: '#/definitions/NameString'
        description: The name of the job definition used by the predecessor job run.
      RunId:
        $ref: '#/definitions/IdString'
        description: The job-run ID of the predecessor job run.
    type: object
  PredecessorList:
    items:
      $ref: '#/definitions/Predecessor'
    type: array
  Predicate:
    description: 'Defines the predicate of the trigger, which determines when it fires.'
    properties:
      Conditions:
        $ref: '#/definitions/ConditionList'
        description: A list of the conditions that determine when the trigger will fire.
      Logical:
        $ref: '#/definitions/Logical'
        description: 'An optional field if only one condition is listed. If multiple conditions are listed, then this field is required.'
    type: object
  PredicateString:
    maxLength: 2048
    minLength: 0
    type: string
    x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\r\n\t]*'
  PrincipalPermissions:
    description: Permissions granted to a principal.
    properties:
      Permissions:
        $ref: '#/definitions/PermissionList'
        description: The permissions that are granted to the principal.
      Principal:
        $ref: '#/definitions/DataLakePrincipal'
        description: The principal who is granted permissions.
    type: object
  PrincipalPermissionsList:
    items:
      $ref: '#/definitions/PrincipalPermissions'
    type: array
  PrincipalType:
    enum:
      - USER
      - ROLE
      - GROUP
    type: string
  PropertyPredicate:
    description: Defines a property predicate.
    properties:
      Comparator:
        $ref: '#/definitions/Comparator'
        description: The comparator used to compare this property to others.
      Key:
        $ref: '#/definitions/ValueString'
        description: The key of the property.
      Value:
        $ref: '#/definitions/ValueString'
        description: The value of the property.
    type: object
  PublicKeysList:
    items:
      $ref: '#/definitions/GenericString'
    maxItems: 5
    type: array
  PutDataCatalogEncryptionSettingsRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog to set the security configuration for. If none is provided, the AWS account ID is used by default.'
      DataCatalogEncryptionSettings:
        $ref: '#/definitions/DataCatalogEncryptionSettings'
        description: The security configuration to set.
    required:
      - DataCatalogEncryptionSettings
    type: object
  PutDataCatalogEncryptionSettingsResponse:
    properties: {}
    type: object
  PutResourcePolicyRequest:
    properties:
      PolicyExistsCondition:
        $ref: '#/definitions/ExistCondition'
        description: 'A value of <code>MUST_EXIST</code> is used to update a policy. A value of <code>NOT_EXIST</code> is used to create a new policy. If a value of <code>NONE</code> or a null value is used, the call will not depend on the existence of a policy.'
      PolicyHashCondition:
        $ref: '#/definitions/HashString'
        description: The hash value returned when the previous policy was set using <code>PutResourcePolicy</code>. Its purpose is to prevent concurrent modifications of a policy. Do not use this parameter if no previous policy has been set.
      PolicyInJson:
        $ref: '#/definitions/PolicyJsonString'
        description: 'Contains the policy document to set, in JSON format.'
    required:
      - PolicyInJson
    type: object
  PutResourcePolicyResponse:
    properties:
      PolicyHash:
        $ref: '#/definitions/HashString'
        description: A hash of the policy that has just been set. This must be included in a subsequent call that overwrites or updates this policy.
    type: object
  PutWorkflowRunPropertiesRequest:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: Name of the workflow which was run.
      RunId:
        $ref: '#/definitions/IdString'
        description: The ID of the workflow run for which the run properties should be updated.
      RunProperties:
        $ref: '#/definitions/WorkflowRunProperties'
        description: The properties to put for the specified run.
    required:
      - Name
      - RunId
      - RunProperties
    type: object
  PutWorkflowRunPropertiesResponse:
    properties: {}
    type: object
  PythonScript:
    type: string
  PythonVersionString:
    pattern: '^[2-3]$'
    type: string
  RecordsCount:
    type: integer
  ReplaceBoolean:
    type: boolean
  ResetJobBookmarkRequest:
    properties:
      JobName:
        $ref: '#/definitions/JobName'
        description: The name of the job in question.
      RunId:
        $ref: '#/definitions/RunId'
        description: The unique run identifier associated with this job run.
    required:
      - JobName
    type: object
  ResetJobBookmarkResponse:
    properties:
      JobBookmarkEntry:
        $ref: '#/definitions/JobBookmarkEntry'
        description: The reset bookmark entry.
    type: object
  ResourceNumberLimitExceededException: {}
  ResourceType:
    enum:
      - JAR
      - FILE
      - ARCHIVE
    type: string
  ResourceUri:
    description: The URIs for function resources.
    properties:
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: The type of the resource.
      Uri:
        $ref: '#/definitions/URI'
        description: The URI for accessing the resource.
    type: object
  ResourceUriList:
    items:
      $ref: '#/definitions/ResourceUri'
    maxItems: 1000
    minItems: 0
    type: array
  Role:
    type: string
  RoleArn:
    pattern: 'arn:aws:iam::\d{12}:role/.*'
    type: string
  RoleString:
    type: string
  RowTag:
    type: string
  RunId:
    type: string
  S3Encryption:
    description: Specifies how Amazon Simple Storage Service (Amazon S3) data should be encrypted.
    properties:
      KmsKeyArn:
        $ref: '#/definitions/KmsKeyArn'
        description: The Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.
      S3EncryptionMode:
        $ref: '#/definitions/S3EncryptionMode'
        description: The encryption mode to use for Amazon S3 data.
    type: object
  S3EncryptionList:
    items:
      $ref: '#/definitions/S3Encryption'
    type: array
  S3EncryptionMode:
    enum:
      - DISABLED
      - SSE-KMS
      - SSE-S3
    type: string
  S3Target:
    description: Specifies a data store in Amazon Simple Storage Service (Amazon S3).
    properties:
      Exclusions:
        $ref: '#/definitions/PathList'
        description: 'A list of glob patterns used to exclude from the crawl. For more information, see <a href="http://docs.aws.amazon.com/glue/latest/dg/add-crawler.html">Catalog Tables with a Crawler</a>.'
      Path:
        $ref: '#/definitions/Path'
        description: The path to the Amazon S3 target.
    type: object
  S3TargetList:
    items:
      $ref: '#/definitions/S3Target'
    type: array
  ScalaCode:
    type: string
  Schedule:
    description: A scheduling object using a <code>cron</code> statement to schedule an event.
    properties:
      ScheduleExpression:
        $ref: '#/definitions/CronExpression'
        description: 'A <code>cron</code> expression used to specify the schedule. For more information, see <a href="http://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html">Time-Based Schedules for Jobs and Crawlers</a>. For example, to run something every day at 12:15 UTC, specify <code>cron(15 12 * * ? *)</code>.'
      State:
        $ref: '#/definitions/ScheduleState'
        description: The state of the schedule.
    type: object
  ScheduleState:
    enum:
      - SCHEDULED
      - NOT_SCHEDULED
      - TRANSITIONING
    type: string
  SchedulerNotRunningException: {}
  SchedulerRunningException: {}
  SchedulerTransitioningException: {}
  SchemaChangePolicy:
    description: A policy that specifies update and deletion behaviors for the crawler.
    properties:
      DeleteBehavior:
        $ref: '#/definitions/DeleteBehavior'
        description: The deletion behavior when the crawler finds a deleted object.
      UpdateBehavior:
        $ref: '#/definitions/UpdateBehavior'
        description: The update behavior when the crawler finds a changed schema.
    type: object
  SchemaColumn:
    description: A key-value pair representing a column and data type that this transform can run against. The <code>Schema</code> parameter of the <code>MLTransform</code> may contain up to 100 of these structures.
    properties:
      DataType:
        $ref: '#/definitions/ColumnTypeString'
        description: The type of data in the column.
      Name:
        $ref: '#/definitions/ColumnNameString'
        description: The name of the column.
    type: object
  SchemaPathString:
    type: string
  ScriptLocationString:
    type: string
  SearchPropertyPredicates:
    items:
      $ref: '#/definitions/PropertyPredicate'
    type: array
  SearchTablesRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'A unique identifier, consisting of <code> <i>account_id</i>/datalake</code>.'
      Filters:
        $ref: '#/definitions/SearchPropertyPredicates'
        description: 'A list of key-value pairs, and a comparator used to filter the search results. Returns all entities matching the predicate.'
      MaxResults:
        $ref: '#/definitions/PageSize'
        description: The maximum number of tables to return in a single response.
      NextToken:
        $ref: '#/definitions/Token'
        description: 'A continuation token, included if this is a continuation call.'
      SearchText:
        $ref: '#/definitions/ValueString'
        description: <p>A string used for a text search.</p> <p>Specifying a value in quotes filters based on an exact match to the value.</p>
      SortCriteria:
        $ref: '#/definitions/SortCriteria'
        description: 'A list of criteria for sorting the results by a field name, in an ascending or descending order.'
    type: object
  SearchTablesResponse:
    properties:
      NextToken:
        $ref: '#/definitions/Token'
        description: 'A continuation token, present if the current list segment is not the last.'
      TableList:
        $ref: '#/definitions/TableList'
        description: A list of the requested <code>Table</code> objects. The <code>SearchTables</code> response returns only the tables that you have access to.
    type: object
  SecurityConfiguration:
    description: Specifies a security configuration.
    properties:
      CreatedTimeStamp:
        $ref: '#/definitions/TimestampValue'
        description: The time at which this security configuration was created.
      EncryptionConfiguration:
        $ref: '#/definitions/EncryptionConfiguration'
        description: The encryption configuration associated with this security configuration.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the security configuration.
    type: object
  SecurityConfigurationList:
    items:
      $ref: '#/definitions/SecurityConfiguration'
    type: array
  SecurityGroupIdList:
    items:
      $ref: '#/definitions/NameString'
    maxItems: 50
    minItems: 0
    type: array
  Segment:
    description: 'Defines a non-overlapping region of a table''s partitions, allowing multiple requests to be executed in parallel.'
    properties:
      SegmentNumber:
        $ref: '#/definitions/NonNegativeInteger'
        description: 'The zero-based index number of the segment. For example, if the total number of segments is 4, <code>SegmentNumber</code> values range from 0 through 3.'
      TotalSegments:
        $ref: '#/definitions/TotalSegmentsInteger'
        description: The total number of segments.
    required:
      - SegmentNumber
      - TotalSegments
    type: object
  SerDeInfo:
    description: Information about a serialization/deserialization program (SerDe) that serves as an extractor and loader.
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: Name of the SerDe.
      Parameters:
        $ref: '#/definitions/ParametersMap'
        description: These key-value pairs define initialization parameters for the SerDe.
      SerializationLibrary:
        $ref: '#/definitions/NameString'
        description: Usually the class that implements the SerDe. An example is <code>org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe</code>.
    type: object
  SkewedInfo:
    description: Specifies skewed values in a table. Skewed values are those that occur with very high frequency.
    properties:
      SkewedColumnNames:
        $ref: '#/definitions/NameStringList'
        description: A list of names of columns that contain skewed values.
      SkewedColumnValueLocationMaps:
        $ref: '#/definitions/LocationMap'
        description: A mapping of skewed values to the columns that contain them.
      SkewedColumnValues:
        $ref: '#/definitions/ColumnValueStringList'
        description: A list of values that appear so frequently as to be considered skewed.
    type: object
  Sort:
    enum:
      - ASC
      - DESC
    type: string
  SortCriteria:
    items:
      $ref: '#/definitions/SortCriterion'
    maxItems: 1
    minItems: 0
    type: array
  SortCriterion:
    properties:
      FieldName:
        $ref: '#/definitions/ValueString'
      Sort:
        $ref: '#/definitions/Sort'
    type: object
  SortDirectionType:
    enum:
      - DESCENDING
      - ASCENDING
    type: string
  StartCrawlerRequest:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: Name of the crawler to start.
    required:
      - Name
    type: object
  StartCrawlerResponse:
    properties: {}
    type: object
  StartCrawlerScheduleRequest:
    properties:
      CrawlerName:
        $ref: '#/definitions/NameString'
        description: Name of the crawler to schedule.
    required:
      - CrawlerName
    type: object
  StartCrawlerScheduleResponse:
    properties: {}
    type: object
  StartExportLabelsTaskRunRequest:
    properties:
      OutputS3Path:
        $ref: '#/definitions/UriString'
        description: The Amazon S3 path where you export the labels.
      TransformId:
        $ref: '#/definitions/HashString'
        description: The unique identifier of the machine learning transform.
    required:
      - TransformId
      - OutputS3Path
    type: object
  StartExportLabelsTaskRunResponse:
    properties:
      TaskRunId:
        $ref: '#/definitions/HashString'
        description: The unique identifier for the task run.
    type: object
  StartImportLabelsTaskRunRequest:
    properties:
      InputS3Path:
        $ref: '#/definitions/UriString'
        description: The Amazon Simple Storage Service (Amazon S3) path from where you import the labels.
      ReplaceAllLabels:
        $ref: '#/definitions/ReplaceBoolean'
        description: Indicates whether to overwrite your existing labels.
      TransformId:
        $ref: '#/definitions/HashString'
        description: The unique identifier of the machine learning transform.
    required:
      - TransformId
      - InputS3Path
    type: object
  StartImportLabelsTaskRunResponse:
    properties:
      TaskRunId:
        $ref: '#/definitions/HashString'
        description: The unique identifier for the task run.
    type: object
  StartJobRunRequest:
    properties:
      AllocatedCapacity:
        $ref: '#/definitions/IntegerValue'
        description: '<p>This field is deprecated. Use <code>MaxCapacity</code> instead.</p> <p>The number of AWS Glue data processing units (DPUs) to allocate to this JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://docs.aws.amazon.com/https:/aws.amazon.com/glue/pricing/">AWS Glue pricing page</a>.</p>This property is deprecated, use MaxCapacity instead.'
      Arguments:
        $ref: '#/definitions/GenericMap'
        description: '<p>The job arguments specifically for this run. For this job run, they replace the default arguments set in the job definition itself.</p> <p>You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes.</p> <p>For information about how to specify and consume your own Job arguments, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html">Calling AWS Glue APIs in Python</a> topic in the developer guide.</p> <p>For information about the key-value pairs that AWS Glue consumes to set up your job, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html">Special Parameters Used by AWS Glue</a> topic in the developer guide.</p>'
      JobName:
        $ref: '#/definitions/NameString'
        description: The name of the job definition to use.
      JobRunId:
        $ref: '#/definitions/IdString'
        description: The ID of a previous <code>JobRun</code> to retry.
      MaxCapacity:
        $ref: '#/definitions/NullableDouble'
        description: '<p>The number of AWS Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://docs.aws.amazon.com/https:/aws.amazon.com/glue/pricing/">AWS Glue pricing page</a>.</p> <p>Do not set <code>Max Capacity</code> if using <code>WorkerType</code> and <code>NumberOfWorkers</code>.</p> <p>The value that can be allocated for <code>MaxCapacity</code> depends on whether you are running a Python shell job, or an Apache Spark ETL job:</p> <ul> <li> <p>When you specify a Python shell job (<code>JobCommand.Name</code>="pythonshell"), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.</p> </li> <li> <p>When you specify an Apache Spark ETL job (<code>JobCommand.Name</code>="glueetl"), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.</p> </li> </ul>'
      NotificationProperty:
        $ref: '#/definitions/NotificationProperty'
        description: Specifies configuration properties of a job run notification.
      NumberOfWorkers:
        $ref: '#/definitions/NullableInteger'
        description: '<p>The number of workers of a defined <code>workerType</code> that are allocated when a job runs.</p> <p>The maximum number of workers you can define are 299 for <code>G.1X</code>, and 149 for <code>G.2X</code>. </p>'
      SecurityConfiguration:
        $ref: '#/definitions/NameString'
        description: The name of the <code>SecurityConfiguration</code> structure to be used with this job run.
      Timeout:
        $ref: '#/definitions/Timeout'
        description: 'The <code>JobRun</code> timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.'
      WorkerType:
        $ref: '#/definitions/WorkerType'
        description: '<p>The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.</p> </li> </ul>'
    required:
      - JobName
    type: object
  StartJobRunResponse:
    properties:
      JobRunId:
        $ref: '#/definitions/IdString'
        description: The ID assigned to this job run.
    type: object
  StartMLEvaluationTaskRunRequest:
    properties:
      TransformId:
        $ref: '#/definitions/HashString'
        description: The unique identifier of the machine learning transform.
    required:
      - TransformId
    type: object
  StartMLEvaluationTaskRunResponse:
    properties:
      TaskRunId:
        $ref: '#/definitions/HashString'
        description: The unique identifier associated with this run.
    type: object
  StartMLLabelingSetGenerationTaskRunRequest:
    properties:
      OutputS3Path:
        $ref: '#/definitions/UriString'
        description: The Amazon Simple Storage Service (Amazon S3) path where you generate the labeling set.
      TransformId:
        $ref: '#/definitions/HashString'
        description: The unique identifier of the machine learning transform.
    required:
      - TransformId
      - OutputS3Path
    type: object
  StartMLLabelingSetGenerationTaskRunResponse:
    properties:
      TaskRunId:
        $ref: '#/definitions/HashString'
        description: The unique run identifier that is associated with this task run.
    type: object
  StartTriggerRequest:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the trigger to start.
    required:
      - Name
    type: object
  StartTriggerResponse:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the trigger that was started.
    type: object
  StartWorkflowRunRequest:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the workflow to start.
    required:
      - Name
    type: object
  StartWorkflowRunResponse:
    properties:
      RunId:
        $ref: '#/definitions/IdString'
        description: An Id for the new run.
    type: object
  StopCrawlerRequest:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: Name of the crawler to stop.
    required:
      - Name
    type: object
  StopCrawlerResponse:
    properties: {}
    type: object
  StopCrawlerScheduleRequest:
    properties:
      CrawlerName:
        $ref: '#/definitions/NameString'
        description: Name of the crawler whose schedule state to set.
    required:
      - CrawlerName
    type: object
  StopCrawlerScheduleResponse:
    properties: {}
    type: object
  StopTriggerRequest:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the trigger to stop.
    required:
      - Name
    type: object
  StopTriggerResponse:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the trigger that was stopped.
    type: object
  StorageDescriptor:
    description: Describes the physical storage of table data.
    properties:
      BucketColumns:
        $ref: '#/definitions/NameStringList'
        description: 'A list of reducer grouping columns, clustering columns, and bucketing columns in the table.'
      Columns:
        $ref: '#/definitions/ColumnList'
        description: A list of the <code>Columns</code> in the table.
      Compressed:
        $ref: '#/definitions/Boolean'
        description: ' <code>True</code> if the data in the table is compressed, or <code>False</code> if not.'
      InputFormat:
        $ref: '#/definitions/FormatString'
        description: 'The input format: <code>SequenceFileInputFormat</code> (binary), or <code>TextInputFormat</code>, or a custom format.'
      Location:
        $ref: '#/definitions/LocationString'
        description: 'The physical location of the table. By default, this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.'
      NumberOfBuckets:
        $ref: '#/definitions/Integer'
        description: Must be specified if the table contains any dimension columns.
      OutputFormat:
        $ref: '#/definitions/FormatString'
        description: 'The output format: <code>SequenceFileOutputFormat</code> (binary), or <code>IgnoreKeyTextOutputFormat</code>, or a custom format.'
      Parameters:
        $ref: '#/definitions/ParametersMap'
        description: The user-supplied properties in key-value form.
      SerdeInfo:
        $ref: '#/definitions/SerDeInfo'
        description: The serialization/deserialization (SerDe) information.
      SkewedInfo:
        $ref: '#/definitions/SkewedInfo'
        description: The information about values that appear frequently in a column (skewed values).
      SortColumns:
        $ref: '#/definitions/OrderList'
        description: A list specifying the sort order of each bucket in the table.
      StoredAsSubDirectories:
        $ref: '#/definitions/Boolean'
        description: ' <code>True</code> if the table data is stored in subdirectories, or <code>False</code> if not.'
    type: object
  StringList:
    items:
      $ref: '#/definitions/GenericString'
    type: array
  Table:
    description: Represents a collection of related data organized in columns and rows.
    properties:
      CreateTime:
        $ref: '#/definitions/Timestamp'
        description: The time when the table definition was created in the Data Catalog.
      CreatedBy:
        $ref: '#/definitions/NameString'
        description: The person or entity who created the table.
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: 'The name of the database where the table metadata resides. For Hive compatibility, this must be all lowercase.'
      Description:
        $ref: '#/definitions/DescriptionString'
        description: A description of the table.
      IsRegisteredWithLakeFormation:
        $ref: '#/definitions/Boolean'
        description: Indicates whether the table has been registered with AWS Lake Formation.
      LastAccessTime:
        $ref: '#/definitions/Timestamp'
        description: 'The last time that the table was accessed. This is usually taken from HDFS, and might not be reliable.'
      LastAnalyzedTime:
        $ref: '#/definitions/Timestamp'
        description: The last time that column statistics were computed for this table.
      Name:
        $ref: '#/definitions/NameString'
        description: 'The table name. For Hive compatibility, this must be entirely lowercase.'
      Owner:
        $ref: '#/definitions/NameString'
        description: The owner of the table.
      Parameters:
        $ref: '#/definitions/ParametersMap'
        description: These key-value pairs define properties associated with the table.
      PartitionKeys:
        $ref: '#/definitions/ColumnList'
        description: '<p>A list of columns by which the table is partitioned. Only primitive types are supported as partition keys.</p> <p>When you create a table used by Amazon Athena, and you do not specify any <code>partitionKeys</code>, you must at least set the value of <code>partitionKeys</code> to an empty list. For example:</p> <p> <code>"PartitionKeys": []</code> </p>'
      Retention:
        $ref: '#/definitions/NonNegativeInteger'
        description: The retention time for this table.
      StorageDescriptor:
        $ref: '#/definitions/StorageDescriptor'
        description: A storage descriptor containing information about the physical storage of this table.
      TableType:
        $ref: '#/definitions/TableTypeString'
        description: 'The type of this table (<code>EXTERNAL_TABLE</code>, <code>VIRTUAL_VIEW</code>, etc.).'
      UpdateTime:
        $ref: '#/definitions/Timestamp'
        description: The last time that the table was updated.
      ViewExpandedText:
        $ref: '#/definitions/ViewTextString'
        description: 'If the table is a view, the expanded text of the view; otherwise <code>null</code>.'
      ViewOriginalText:
        $ref: '#/definitions/ViewTextString'
        description: 'If the table is a view, the original text of the view; otherwise <code>null</code>.'
    required:
      - Name
    type: object
  TableError:
    description: An error record for table operations.
    properties:
      ErrorDetail:
        $ref: '#/definitions/ErrorDetail'
        description: The details about the error.
      TableName:
        $ref: '#/definitions/NameString'
        description: 'The name of the table. For Hive compatibility, this must be entirely lowercase.'
    type: object
  TableErrors:
    items:
      $ref: '#/definitions/TableError'
    type: array
  TableInput:
    description: A structure used to define a table.
    properties:
      Description:
        $ref: '#/definitions/DescriptionString'
        description: A description of the table.
      LastAccessTime:
        $ref: '#/definitions/Timestamp'
        description: The last time that the table was accessed.
      LastAnalyzedTime:
        $ref: '#/definitions/Timestamp'
        description: The last time that column statistics were computed for this table.
      Name:
        $ref: '#/definitions/NameString'
        description: 'The table name. For Hive compatibility, this is folded to lowercase when it is stored.'
      Owner:
        $ref: '#/definitions/NameString'
        description: The table owner.
      Parameters:
        $ref: '#/definitions/ParametersMap'
        description: These key-value pairs define properties associated with the table.
      PartitionKeys:
        $ref: '#/definitions/ColumnList'
        description: '<p>A list of columns by which the table is partitioned. Only primitive types are supported as partition keys.</p> <p>When you create a table used by Amazon Athena, and you do not specify any <code>partitionKeys</code>, you must at least set the value of <code>partitionKeys</code> to an empty list. For example:</p> <p> <code>"PartitionKeys": []</code> </p>'
      Retention:
        $ref: '#/definitions/NonNegativeInteger'
        description: The retention time for this table.
      StorageDescriptor:
        $ref: '#/definitions/StorageDescriptor'
        description: A storage descriptor containing information about the physical storage of this table.
      TableType:
        $ref: '#/definitions/TableTypeString'
        description: 'The type of this table (<code>EXTERNAL_TABLE</code>, <code>VIRTUAL_VIEW</code>, etc.).'
      ViewExpandedText:
        $ref: '#/definitions/ViewTextString'
        description: 'If the table is a view, the expanded text of the view; otherwise <code>null</code>.'
      ViewOriginalText:
        $ref: '#/definitions/ViewTextString'
        description: 'If the table is a view, the original text of the view; otherwise <code>null</code>.'
    required:
      - Name
    type: object
  TableList:
    items:
      $ref: '#/definitions/Table'
    type: array
  TableName:
    type: string
  TablePrefix:
    maxLength: 128
    minLength: 0
    type: string
  TableTypeString:
    maxLength: 255
    type: string
  TableVersion:
    description: Specifies a version of a table.
    properties:
      Table:
        $ref: '#/definitions/Table'
        description: The table in question.
      VersionId:
        $ref: '#/definitions/VersionString'
        description: The ID value that identifies this table version. A <code>VersionId</code> is a string representation of an integer. Each version is incremented by 1.
    type: object
  TableVersionError:
    description: An error record for table-version operations.
    properties:
      ErrorDetail:
        $ref: '#/definitions/ErrorDetail'
        description: The details about the error.
      TableName:
        $ref: '#/definitions/NameString'
        description: The name of the table in question.
      VersionId:
        $ref: '#/definitions/VersionString'
        description: The ID value of the version in question. A <code>VersionID</code> is a string representation of an integer. Each version is incremented by 1.
    type: object
  TableVersionErrors:
    items:
      $ref: '#/definitions/TableVersionError'
    type: array
  TagKey:
    maxLength: 128
    minLength: 1
    type: string
  TagKeysList:
    items:
      $ref: '#/definitions/TagKey'
    maxItems: 50
    minItems: 0
    type: array
  TagResourceRequest:
    properties:
      ResourceArn:
        $ref: '#/definitions/GlueResourceArn'
        description: 'The ARN of the AWS Glue resource to which to add the tags. For more information about AWS Glue resource ARNs, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-common.html#aws-glue-api-regex-aws-glue-arn-id">AWS Glue ARN string pattern</a>.'
      TagsToAdd:
        $ref: '#/definitions/TagsMap'
        description: Tags to add to this resource.
    required:
      - ResourceArn
      - TagsToAdd
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    minLength: 0
    type: string
  TagsMap:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    maxProperties: 50
    minProperties: 0
    type: object
  TaskRun:
    description: The sampling parameters that are associated with the machine learning transform.
    properties:
      CompletedOn:
        $ref: '#/definitions/Timestamp'
        description: The last point in time that the requested task run was completed.
      ErrorString:
        $ref: '#/definitions/GenericString'
        description: The list of error strings associated with this task run.
      ExecutionTime:
        $ref: '#/definitions/ExecutionTime'
        description: The amount of time (in seconds) that the task run consumed resources.
      LastModifiedOn:
        $ref: '#/definitions/Timestamp'
        description: The last point in time that the requested task run was updated.
      LogGroupName:
        $ref: '#/definitions/GenericString'
        description: 'The names of the log group for secure logging, associated with this task run.'
      Properties:
        $ref: '#/definitions/TaskRunProperties'
        description: Specifies configuration properties associated with this task run.
      StartedOn:
        $ref: '#/definitions/Timestamp'
        description: The date and time that this task run started.
      Status:
        $ref: '#/definitions/TaskStatusType'
        description: The current status of the requested task run.
      TaskRunId:
        $ref: '#/definitions/HashString'
        description: The unique identifier for this task run.
      TransformId:
        $ref: '#/definitions/HashString'
        description: The unique identifier for the transform.
    type: object
  TaskRunFilterCriteria:
    description: The criteria that are used to filter the task runs for the machine learning transform.
    properties:
      StartedAfter:
        $ref: '#/definitions/Timestamp'
        description: Filter on task runs started after this date.
      StartedBefore:
        $ref: '#/definitions/Timestamp'
        description: Filter on task runs started before this date.
      Status:
        $ref: '#/definitions/TaskStatusType'
        description: The current status of the task run.
      TaskRunType:
        $ref: '#/definitions/TaskType'
        description: The type of task run.
    type: object
  TaskRunList:
    items:
      $ref: '#/definitions/TaskRun'
    type: array
  TaskRunProperties:
    description: The configuration properties for the task run.
    properties:
      ExportLabelsTaskRunProperties:
        $ref: '#/definitions/ExportLabelsTaskRunProperties'
        description: The configuration properties for an exporting labels task run.
      FindMatchesTaskRunProperties:
        $ref: '#/definitions/FindMatchesTaskRunProperties'
        description: The configuration properties for a find matches task run.
      ImportLabelsTaskRunProperties:
        $ref: '#/definitions/ImportLabelsTaskRunProperties'
        description: The configuration properties for an importing labels task run.
      LabelingSetGenerationTaskRunProperties:
        $ref: '#/definitions/LabelingSetGenerationTaskRunProperties'
        description: The configuration properties for a labeling set generation task run.
      TaskType:
        $ref: '#/definitions/TaskType'
        description: The type of task run.
    type: object
  TaskRunSortColumnType:
    enum:
      - TASK_RUN_TYPE
      - STATUS
      - STARTED
    type: string
  TaskRunSortCriteria:
    description: The sorting criteria that are used to sort the list of task runs for the machine learning transform.
    properties:
      Column:
        $ref: '#/definitions/TaskRunSortColumnType'
        description: The column to be used to sort the list of task runs for the machine learning transform.
      SortDirection:
        $ref: '#/definitions/SortDirectionType'
        description: The sort direction to be used to sort the list of task runs for the machine learning transform.
    required:
      - Column
      - SortDirection
    type: object
  TaskStatusType:
    enum:
      - STARTING
      - RUNNING
      - STOPPING
      - STOPPED
      - SUCCEEDED
      - FAILED
      - TIMEOUT
    type: string
  TaskType:
    enum:
      - EVALUATION
      - LABELING_SET_GENERATION
      - IMPORT_LABELS
      - EXPORT_LABELS
      - FIND_MATCHES
    type: string
  Timeout:
    minimum: 1
    type: integer
  Timestamp:
    format: date-time
    type: string
  TimestampValue:
    format: date-time
    type: string
  Token:
    type: string
  TotalSegmentsInteger:
    maximum: 10
    minimum: 1
    type: integer
  TransformFilterCriteria:
    description: The criteria used to filter the machine learning transforms.
    properties:
      CreatedAfter:
        $ref: '#/definitions/Timestamp'
        description: The time and date after which the transforms were created.
      CreatedBefore:
        $ref: '#/definitions/Timestamp'
        description: The time and date before which the transforms were created.
      LastModifiedAfter:
        $ref: '#/definitions/Timestamp'
        description: Filter on transforms last modified after this date.
      LastModifiedBefore:
        $ref: '#/definitions/Timestamp'
        description: Filter on transforms last modified before this date.
      Name:
        $ref: '#/definitions/NameString'
        description: A unique transform name that is used to filter the machine learning transforms.
      Schema:
        $ref: '#/definitions/TransformSchema'
        description: 'Filters on datasets with a specific schema. The <code>Map&lt;Column, Type&gt;</code> object is an array of key-value pairs representing the schema this transform accepts, where <code>Column</code> is the name of a column, and <code>Type</code> is the type of the data such as an integer or string. Has an upper bound of 100 columns.'
      Status:
        $ref: '#/definitions/TransformStatusType'
        description: 'Filters the list of machine learning transforms by the last known status of the transforms (to indicate whether a transform can be used or not). One of "NOT_READY", "READY", or "DELETING".'
      TransformType:
        $ref: '#/definitions/TransformType'
        description: The type of machine learning transform that is used to filter the machine learning transforms.
    type: object
  TransformList:
    items:
      $ref: '#/definitions/MLTransform'
    type: array
  TransformParameters:
    description: The algorithm-specific parameters that are associated with the machine learning transform.
    properties:
      FindMatchesParameters:
        $ref: '#/definitions/FindMatchesParameters'
        description: The parameters for the find matches algorithm.
      TransformType:
        $ref: '#/definitions/TransformType'
        description: '<p>The type of machine learning transform.</p> <p>For information about the types of machine learning transforms, see <a href="http://docs.aws.amazon.com/glue/latest/dg/add-job-machine-learning-transform.html">Creating Machine Learning Transforms</a>.</p>'
    required:
      - TransformType
    type: object
  TransformSchema:
    items:
      $ref: '#/definitions/SchemaColumn'
    maxItems: 100
    type: array
  TransformSortColumnType:
    enum:
      - NAME
      - TRANSFORM_TYPE
      - STATUS
      - CREATED
      - LAST_MODIFIED
    type: string
  TransformSortCriteria:
    description: The sorting criteria that are associated with the machine learning transform.
    properties:
      Column:
        $ref: '#/definitions/TransformSortColumnType'
        description: The column to be used in the sorting criteria that are associated with the machine learning transform.
      SortDirection:
        $ref: '#/definitions/SortDirectionType'
        description: The sort direction to be used in the sorting criteria that are associated with the machine learning transform.
    required:
      - Column
      - SortDirection
    type: object
  TransformStatusType:
    enum:
      - NOT_READY
      - READY
      - DELETING
    type: string
  TransformType:
    enum:
      - FIND_MATCHES
    type: string
  Trigger:
    description: Information about a specific trigger.
    properties:
      Actions:
        $ref: '#/definitions/ActionList'
        description: The actions initiated by this trigger.
      Description:
        $ref: '#/definitions/DescriptionString'
        description: A description of this trigger.
      Id:
        $ref: '#/definitions/IdString'
        description: Reserved for future use.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the trigger.
      Predicate:
        $ref: '#/definitions/Predicate'
        description: 'The predicate of this trigger, which defines when it will fire.'
      Schedule:
        $ref: '#/definitions/GenericString'
        description: 'A <code>cron</code> expression used to specify the schedule (see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html">Time-Based Schedules for Jobs and Crawlers</a>. For example, to run something every day at 12:15 UTC, you would specify: <code>cron(15 12 * * ? *)</code>.'
      State:
        $ref: '#/definitions/TriggerState'
        description: The current state of the trigger.
      Type:
        $ref: '#/definitions/TriggerType'
        description: The type of trigger that this is.
      WorkflowName:
        $ref: '#/definitions/NameString'
        description: The name of the workflow associated with the trigger.
    type: object
  TriggerList:
    items:
      $ref: '#/definitions/Trigger'
    type: array
  TriggerNameList:
    items:
      $ref: '#/definitions/NameString'
    type: array
  TriggerNodeDetails:
    description: The details of a Trigger node present in the workflow.
    properties:
      Trigger:
        $ref: '#/definitions/Trigger'
        description: The information of the trigger represented by the trigger node.
    type: object
  TriggerState:
    enum:
      - CREATING
      - CREATED
      - ACTIVATING
      - ACTIVATED
      - DEACTIVATING
      - DEACTIVATED
      - DELETING
      - UPDATING
    type: string
  TriggerType:
    enum:
      - SCHEDULED
      - CONDITIONAL
      - ON_DEMAND
    type: string
  TriggerUpdate:
    description: A structure used to provide information used to update a trigger. This object updates the previous trigger definition by overwriting it completely.
    properties:
      Actions:
        $ref: '#/definitions/ActionList'
        description: The actions initiated by this trigger.
      Description:
        $ref: '#/definitions/DescriptionString'
        description: A description of this trigger.
      Name:
        $ref: '#/definitions/NameString'
        description: Reserved for future use.
      Predicate:
        $ref: '#/definitions/Predicate'
        description: 'The predicate of this trigger, which defines when it will fire.'
      Schedule:
        $ref: '#/definitions/GenericString'
        description: 'A <code>cron</code> expression used to specify the schedule (see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html">Time-Based Schedules for Jobs and Crawlers</a>. For example, to run something every day at 12:15 UTC, you would specify: <code>cron(15 12 * * ? *)</code>.'
    type: object
  URI:
    maxLength: 1024
    minLength: 1
    type: string
    x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\r\n\t]*'
  UntagResourceRequest:
    properties:
      ResourceArn:
        $ref: '#/definitions/GlueResourceArn'
        description: The Amazon Resource Name (ARN) of the resource from which to remove the tags.
      TagsToRemove:
        $ref: '#/definitions/TagKeysList'
        description: Tags to remove from this resource.
    required:
      - ResourceArn
      - TagsToRemove
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateBehavior:
    enum:
      - LOG
      - UPDATE_IN_DATABASE
    type: string
  UpdateClassifierRequest:
    properties:
      CsvClassifier:
        $ref: '#/definitions/UpdateCsvClassifierRequest'
        description: A <code>CsvClassifier</code> object with updated fields.
      GrokClassifier:
        $ref: '#/definitions/UpdateGrokClassifierRequest'
        description: A <code>GrokClassifier</code> object with updated fields.
      JsonClassifier:
        $ref: '#/definitions/UpdateJsonClassifierRequest'
        description: A <code>JsonClassifier</code> object with updated fields.
      XMLClassifier:
        $ref: '#/definitions/UpdateXMLClassifierRequest'
        description: An <code>XMLClassifier</code> object with updated fields.
    type: object
  UpdateClassifierResponse:
    properties: {}
    type: object
  UpdateConnectionRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog in which the connection resides. If none is provided, the AWS account ID is used by default.'
      ConnectionInput:
        $ref: '#/definitions/ConnectionInput'
        description: A <code>ConnectionInput</code> object that redefines the connection in question.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the connection definition to update.
    required:
      - Name
      - ConnectionInput
    type: object
  UpdateConnectionResponse:
    properties: {}
    type: object
  UpdateCrawlerRequest:
    properties:
      Classifiers:
        $ref: '#/definitions/ClassifierNameList'
        description: 'A list of custom classifiers that the user has registered. By default, all built-in classifiers are included in a crawl, but these custom classifiers always override the default classifiers for a given classification.'
      Configuration:
        $ref: '#/definitions/CrawlerConfiguration'
        description: 'The crawler configuration information. This versioned JSON string allows users to specify aspects of a crawler''s behavior. For more information, see <a href="http://docs.aws.amazon.com/glue/latest/dg/crawler-configuration.html">Configuring a Crawler</a>.'
      CrawlerSecurityConfiguration:
        $ref: '#/definitions/CrawlerSecurityConfiguration'
        description: The name of the <code>SecurityConfiguration</code> structure to be used by this crawler.
      DatabaseName:
        $ref: '#/definitions/DatabaseName'
        description: 'The AWS Glue database where results are stored, such as: <code>arn:aws:daylight:us-east-1::database/sometable/*</code>.'
      Description:
        $ref: '#/definitions/DescriptionStringRemovable'
        description: A description of the new crawler.
      Name:
        $ref: '#/definitions/NameString'
        description: Name of the new crawler.
      Role:
        $ref: '#/definitions/Role'
        description: The IAM role or Amazon Resource Name (ARN) of an IAM role that is used by the new crawler to access customer resources.
      Schedule:
        $ref: '#/definitions/CronExpression'
        description: 'A <code>cron</code> expression used to specify the schedule. For more information, see <a href="http://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html">Time-Based Schedules for Jobs and Crawlers</a>. For example, to run something every day at 12:15 UTC, specify <code>cron(15 12 * * ? *)</code>.'
      SchemaChangePolicy:
        $ref: '#/definitions/SchemaChangePolicy'
        description: The policy for the crawler's update and deletion behavior.
      TablePrefix:
        $ref: '#/definitions/TablePrefix'
        description: The table prefix used for catalog tables that are created.
      Targets:
        $ref: '#/definitions/CrawlerTargets'
        description: A list of targets to crawl.
    required:
      - Name
    type: object
  UpdateCrawlerResponse:
    properties: {}
    type: object
  UpdateCrawlerScheduleRequest:
    properties:
      CrawlerName:
        $ref: '#/definitions/NameString'
        description: The name of the crawler whose schedule to update.
      Schedule:
        $ref: '#/definitions/CronExpression'
        description: 'The updated <code>cron</code> expression used to specify the schedule. For more information, see <a href="http://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html">Time-Based Schedules for Jobs and Crawlers</a>. For example, to run something every day at 12:15 UTC, specify <code>cron(15 12 * * ? *)</code>.'
    required:
      - CrawlerName
    type: object
  UpdateCrawlerScheduleResponse:
    properties: {}
    type: object
  UpdateCsvClassifierRequest:
    description: Specifies a custom CSV classifier to be updated.
    properties:
      AllowSingleColumn:
        $ref: '#/definitions/NullableBoolean'
        description: Enables the processing of files that contain only one column.
      ContainsHeader:
        $ref: '#/definitions/CsvHeaderOption'
        description: Indicates whether the CSV file contains a header.
      Delimiter:
        $ref: '#/definitions/CsvColumnDelimiter'
        description: A custom symbol to denote what separates each column entry in the row.
      DisableValueTrimming:
        $ref: '#/definitions/NullableBoolean'
        description: Specifies not to trim values before identifying the type of column values. The default value is true.
      Header:
        $ref: '#/definitions/CsvHeader'
        description: A list of strings representing column names.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the classifier.
      QuoteSymbol:
        $ref: '#/definitions/CsvQuoteSymbol'
        description: A custom symbol to denote what combines content into a single column value. It must be different from the column delimiter.
    required:
      - Name
    type: object
  UpdateDatabaseRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog in which the metadata database resides. If none is provided, the AWS account ID is used by default.'
      DatabaseInput:
        $ref: '#/definitions/DatabaseInput'
        description: A <code>DatabaseInput</code> object specifying the new definition of the metadata database in the catalog.
      Name:
        $ref: '#/definitions/NameString'
        description: 'The name of the database to update in the catalog. For Hive compatibility, this is folded to lowercase.'
    required:
      - Name
      - DatabaseInput
    type: object
  UpdateDatabaseResponse:
    properties: {}
    type: object
  UpdateDevEndpointRequest:
    properties:
      AddArguments:
        $ref: '#/definitions/MapValue'
        description: The map of arguments to add the map of arguments used to configure the <code>DevEndpoint</code>.
      AddPublicKeys:
        $ref: '#/definitions/PublicKeysList'
        description: The list of public keys for the <code>DevEndpoint</code> to use.
      CustomLibraries:
        $ref: '#/definitions/DevEndpointCustomLibraries'
        description: Custom Python or Java libraries to be loaded in the <code>DevEndpoint</code>.
      DeleteArguments:
        $ref: '#/definitions/StringList'
        description: The list of argument keys to be deleted from the map of arguments used to configure the <code>DevEndpoint</code>.
      DeletePublicKeys:
        $ref: '#/definitions/PublicKeysList'
        description: The list of public keys to be deleted from the <code>DevEndpoint</code>.
      EndpointName:
        $ref: '#/definitions/GenericString'
        description: The name of the <code>DevEndpoint</code> to be updated.
      PublicKey:
        $ref: '#/definitions/GenericString'
        description: The public key for the <code>DevEndpoint</code> to use.
      UpdateEtlLibraries:
        $ref: '#/definitions/BooleanValue'
        description: ' <code>True</code> if the list of custom libraries to be loaded in the development endpoint needs to be updated, or <code>False</code> if otherwise.'
    required:
      - EndpointName
    type: object
  UpdateDevEndpointResponse:
    properties: {}
    type: object
  UpdateGrokClassifierRequest:
    description: Specifies a grok classifier to update when passed to <code>UpdateClassifier</code>.
    properties:
      Classification:
        $ref: '#/definitions/Classification'
        description: 'An identifier of the data format that the classifier matches, such as Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on.'
      CustomPatterns:
        $ref: '#/definitions/CustomPatterns'
        description: Optional custom grok patterns used by this classifier.
      GrokPattern:
        $ref: '#/definitions/GrokPattern'
        description: The grok pattern used by this classifier.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the <code>GrokClassifier</code>.
    required:
      - Name
    type: object
  UpdateJobRequest:
    properties:
      JobName:
        $ref: '#/definitions/NameString'
        description: The name of the job definition to update.
      JobUpdate:
        $ref: '#/definitions/JobUpdate'
        description: Specifies the values with which to update the job definition.
    required:
      - JobName
      - JobUpdate
    type: object
  UpdateJobResponse:
    properties:
      JobName:
        $ref: '#/definitions/NameString'
        description: Returns the name of the updated job definition.
    type: object
  UpdateJsonClassifierRequest:
    description: Specifies a JSON classifier to be updated.
    properties:
      JsonPath:
        $ref: '#/definitions/JsonPath'
        description: 'A <code>JsonPath</code> string defining the JSON data for the classifier to classify. AWS Glue supports a subset of <code>JsonPath</code>, as described in <a href="https://docs.aws.amazon.com/glue/latest/dg/custom-classifier.html#custom-classifier-json">Writing JsonPath Custom Classifiers</a>.'
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the classifier.
    required:
      - Name
    type: object
  UpdateMLTransformRequest:
    properties:
      Description:
        $ref: '#/definitions/DescriptionString'
        description: A description of the transform. The default is an empty string.
      MaxCapacity:
        $ref: '#/definitions/NullableDouble'
        description: '<p>The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">AWS Glue pricing page</a>. </p> <p>When the <code>WorkerType</code> field is set to a value other than <code>Standard</code>, the <code>MaxCapacity</code> field is set automatically and becomes read-only.</p>'
      MaxRetries:
        $ref: '#/definitions/NullableInteger'
        description: The maximum number of times to retry a task for this transform after a task run fails.
      Name:
        $ref: '#/definitions/NameString'
        description: The unique name that you gave the transform when you created it.
      NumberOfWorkers:
        $ref: '#/definitions/NullableInteger'
        description: The number of workers of a defined <code>workerType</code> that are allocated when this task runs.
      Parameters:
        $ref: '#/definitions/TransformParameters'
        description: The configuration parameters that are specific to the transform type (algorithm) used. Conditionally dependent on the transform type.
      Role:
        $ref: '#/definitions/RoleString'
        description: The name or Amazon Resource Name (ARN) of the IAM role with the required permissions.
      Timeout:
        $ref: '#/definitions/Timeout'
        description: 'The timeout for a task run for this transform in minutes. This is the maximum time that a task run for this transform can consume resources before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours).'
      TransformId:
        $ref: '#/definitions/HashString'
        description: A unique identifier that was generated when the transform was created.
      WorkerType:
        $ref: '#/definitions/WorkerType'
        description: '<p>The type of predefined worker that is allocated when this task runs. Accepts a value of Standard, G.1X, or G.2X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.</p> </li> </ul>'
    required:
      - TransformId
    type: object
  UpdateMLTransformResponse:
    properties:
      TransformId:
        $ref: '#/definitions/HashString'
        description: The unique identifier for the transform that was updated.
    type: object
  UpdatePartitionRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog where the partition to be updated resides. If none is provided, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: The name of the catalog database in which the table in question resides.
      PartitionInput:
        $ref: '#/definitions/PartitionInput'
        description: The new partition object to update the partition to.
      PartitionValueList:
        $ref: '#/definitions/BoundedPartitionValueList'
        description: A list of the values defining the partition.
      TableName:
        $ref: '#/definitions/NameString'
        description: The name of the table in which the partition to be updated is located.
    required:
      - DatabaseName
      - TableName
      - PartitionValueList
      - PartitionInput
    type: object
  UpdatePartitionResponse:
    properties: {}
    type: object
  UpdateTableRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog where the table resides. If none is provided, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: 'The name of the catalog database in which the table resides. For Hive compatibility, this name is entirely lowercase.'
      SkipArchive:
        $ref: '#/definitions/BooleanNullable'
        description: 'By default, <code>UpdateTable</code> always creates an archived version of the table before updating it. However, if <code>skipArchive</code> is set to true, <code>UpdateTable</code> does not create the archived version.'
      TableInput:
        $ref: '#/definitions/TableInput'
        description: An updated <code>TableInput</code> object to define the metadata table in the catalog.
    required:
      - DatabaseName
      - TableInput
    type: object
  UpdateTableResponse:
    properties: {}
    type: object
  UpdateTriggerRequest:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the trigger to update.
      TriggerUpdate:
        $ref: '#/definitions/TriggerUpdate'
        description: The new values with which to update the trigger.
    required:
      - Name
      - TriggerUpdate
    type: object
  UpdateTriggerResponse:
    properties:
      Trigger:
        $ref: '#/definitions/Trigger'
        description: The resulting trigger definition.
    type: object
  UpdateUserDefinedFunctionRequest:
    properties:
      CatalogId:
        $ref: '#/definitions/CatalogIdString'
        description: 'The ID of the Data Catalog where the function to be updated is located. If none is provided, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NameString'
        description: The name of the catalog database where the function to be updated is located.
      FunctionInput:
        $ref: '#/definitions/UserDefinedFunctionInput'
        description: A <code>FunctionInput</code> object that redefines the function in the Data Catalog.
      FunctionName:
        $ref: '#/definitions/NameString'
        description: The name of the function.
    required:
      - DatabaseName
      - FunctionName
      - FunctionInput
    type: object
  UpdateUserDefinedFunctionResponse:
    properties: {}
    type: object
  UpdateWorkflowRequest:
    properties:
      DefaultRunProperties:
        $ref: '#/definitions/WorkflowRunProperties'
        description: A collection of properties to be used as part of each execution of the workflow.
      Description:
        $ref: '#/definitions/GenericString'
        description: The description of the workflow.
      Name:
        $ref: '#/definitions/NameString'
        description: Name of the workflow to be updated.
    required:
      - Name
    type: object
  UpdateWorkflowResponse:
    properties:
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the workflow which was specified in input.
    type: object
  UpdateXMLClassifierRequest:
    description: Specifies an XML classifier to be updated.
    properties:
      Classification:
        $ref: '#/definitions/Classification'
        description: An identifier of the data format that the classifier matches.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the classifier.
      RowTag:
        $ref: '#/definitions/RowTag'
        description: 'The XML tag designating the element that contains each record in an XML document being parsed. This cannot identify a self-closing element (closed by <code>/&gt;</code>). An empty row element that contains only attributes can be parsed as long as it ends with a closing tag (for example, <code>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</code> is okay, but <code>&lt;row item_a="A" item_b="B" /&gt;</code> is not).'
    required:
      - Name
    type: object
  UriString:
    type: string
  UserDefinedFunction:
    description: Represents the equivalent of a Hive user-defined function (<code>UDF</code>) definition.
    properties:
      ClassName:
        $ref: '#/definitions/NameString'
        description: The Java class that contains the function code.
      CreateTime:
        $ref: '#/definitions/Timestamp'
        description: The time at which the function was created.
      FunctionName:
        $ref: '#/definitions/NameString'
        description: The name of the function.
      OwnerName:
        $ref: '#/definitions/NameString'
        description: The owner of the function.
      OwnerType:
        $ref: '#/definitions/PrincipalType'
        description: The owner type.
      ResourceUris:
        $ref: '#/definitions/ResourceUriList'
        description: The resource URIs for the function.
    type: object
  UserDefinedFunctionInput:
    description: A structure used to create or update a user-defined function.
    properties:
      ClassName:
        $ref: '#/definitions/NameString'
        description: The Java class that contains the function code.
      FunctionName:
        $ref: '#/definitions/NameString'
        description: The name of the function.
      OwnerName:
        $ref: '#/definitions/NameString'
        description: The owner of the function.
      OwnerType:
        $ref: '#/definitions/PrincipalType'
        description: The owner type.
      ResourceUris:
        $ref: '#/definitions/ResourceUriList'
        description: The resource URIs for the function.
    type: object
  UserDefinedFunctionList:
    items:
      $ref: '#/definitions/UserDefinedFunction'
    type: array
  ValidationException: {}
  ValueString:
    maxLength: 1024
    type: string
  ValueStringList:
    items:
      $ref: '#/definitions/ValueString'
    type: array
  VersionId:
    type: integer
  VersionMismatchException: {}
  VersionString:
    maxLength: 255
    minLength: 1
    type: string
    x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*'
  ViewTextString:
    maxLength: 409600
    type: string
  WorkerType:
    enum:
      - Standard
      - G.1X
      - G.2X
    type: string
  Workflow:
    description: A workflow represents a flow in which AWS Glue components should be executed to complete a logical task.
    properties:
      CreatedOn:
        $ref: '#/definitions/TimestampValue'
        description: The date and time when the workflow was created.
      DefaultRunProperties:
        $ref: '#/definitions/WorkflowRunProperties'
        description: A collection of properties to be used as part of each execution of the workflow.
      Description:
        $ref: '#/definitions/GenericString'
        description: A description of the workflow.
      Graph:
        $ref: '#/definitions/WorkflowGraph'
        description: The graph representing all the AWS Glue components that belong to the workflow as nodes and directed connections between them as edges.
      LastModifiedOn:
        $ref: '#/definitions/TimestampValue'
        description: The date and time when the workflow was last modified.
      LastRun:
        $ref: '#/definitions/WorkflowRun'
        description: The information about the last execution of the workflow.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the workflow representing the flow.
    type: object
  WorkflowGraph:
    description: A workflow graph represents the complete workflow containing all the AWS Glue components present in the workflow and all the directed connections between them.
    properties:
      Edges:
        $ref: '#/definitions/EdgeList'
        description: A list of all the directed connections between the nodes belonging to the workflow.
      Nodes:
        $ref: '#/definitions/NodeList'
        description: A list of the the AWS Glue components belong to the workflow represented as nodes.
    type: object
  WorkflowNames:
    items:
      $ref: '#/definitions/NameString'
    maxItems: 25
    minItems: 1
    type: array
  WorkflowRun:
    description: A workflow run is an execution of a workflow providing all the runtime information.
    properties:
      CompletedOn:
        $ref: '#/definitions/TimestampValue'
        description: The date and time when the workflow run completed.
      Graph:
        $ref: '#/definitions/WorkflowGraph'
        description: The graph representing all the AWS Glue components that belong to the workflow as nodes and directed connections between them as edges.
      Name:
        $ref: '#/definitions/NameString'
        description: Name of the workflow which was executed.
      StartedOn:
        $ref: '#/definitions/TimestampValue'
        description: The date and time when the workflow run was started.
      Statistics:
        $ref: '#/definitions/WorkflowRunStatistics'
        description: The statistics of the run.
      Status:
        $ref: '#/definitions/WorkflowRunStatus'
        description: The status of the workflow run.
      WorkflowRunId:
        $ref: '#/definitions/IdString'
        description: The ID of this workflow run.
      WorkflowRunProperties:
        $ref: '#/definitions/WorkflowRunProperties'
        description: The workflow run properties which were set during the run.
    type: object
  WorkflowRunProperties:
    additionalProperties:
      $ref: '#/definitions/GenericString'
    type: object
  WorkflowRunStatistics:
    description: Workflow run statistics provides statistics about the workflow run.
    properties:
      FailedActions:
        $ref: '#/definitions/IntegerValue'
        description: Total number of Actions which have failed.
      RunningActions:
        $ref: '#/definitions/IntegerValue'
        description: Total number Actions in running state.
      StoppedActions:
        $ref: '#/definitions/IntegerValue'
        description: Total number of Actions which have stopped.
      SucceededActions:
        $ref: '#/definitions/IntegerValue'
        description: Total number of Actions which have succeeded.
      TimeoutActions:
        $ref: '#/definitions/IntegerValue'
        description: Total number of Actions which timed out.
      TotalActions:
        $ref: '#/definitions/IntegerValue'
        description: Total number of Actions in the workflow run.
    type: object
  WorkflowRunStatus:
    enum:
      - RUNNING
      - COMPLETED
    type: string
  WorkflowRuns:
    items:
      $ref: '#/definitions/WorkflowRun'
    maxItems: 1000
    minItems: 1
    type: array
  Workflows:
    items:
      $ref: '#/definitions/Workflow'
    maxItems: 25
    minItems: 1
    type: array
  XMLClassifier:
    description: A classifier for <code>XML</code> content.
    properties:
      Classification:
        $ref: '#/definitions/Classification'
        description: An identifier of the data format that the classifier matches.
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: The time that this classifier was registered.
      LastUpdated:
        $ref: '#/definitions/Timestamp'
        description: The time that this classifier was last updated.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the classifier.
      RowTag:
        $ref: '#/definitions/RowTag'
        description: 'The XML tag designating the element that contains each record in an XML document being parsed. This can''t identify a self-closing element (closed by <code>/&gt;</code>). An empty row element that contains only attributes can be parsed as long as it ends with a closing tag (for example, <code>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</code> is okay, but <code>&lt;row item_a="A" item_b="B" /&gt;</code> is not).'
      Version:
        $ref: '#/definitions/VersionId'
        description: The version of this classifier.
    required:
      - Name
      - Classification
    type: object
x-servers:
  - description: The AWS Glue multi-region endpoint
    url: 'http://glue.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The AWS Glue multi-region endpoint
    url: 'https://glue.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The AWS Glue endpoint for China (Beijing) and China (Ningxia)
    url: 'http://glue.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
  - description: The AWS Glue endpoint for China (Beijing) and China (Ningxia)
    url: 'https://glue.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
