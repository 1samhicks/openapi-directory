swagger: '2.0'
schemes:
  - https
  - http
host: session.qldb.amazonaws.com
basePath: /
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: The transactional data APIs for Amazon QLDB
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon QLDB Session
  version: '2019-07-11'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/qldb-session-2019-07-11.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: qldb-session
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/qldb/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  '/#X-Amz-Target=QLDBSession.SendCommand':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Sends a command to an Amazon QLDB ledger.
      operationId: SendCommand
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SendCommandRequest'
        - enum:
            - QLDBSession.SendCommand
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SendCommandResult'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InvalidSessionException
          schema:
            $ref: '#/definitions/InvalidSessionException'
        '482':
          description: OccConflictException
          schema:
            $ref: '#/definitions/OccConflictException'
        '483':
          description: RateExceededException
          schema:
            $ref: '#/definitions/RateExceededException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
definitions:
  AbortTransactionRequest:
    description: Contains the details of the transaction to abort.
    properties: {}
    type: object
  AbortTransactionResult:
    description: Contains the details of the aborted transaction.
    properties: {}
    type: object
  BadRequestException: {}
  CommitDigest:
    type: string
  CommitTransactionRequest:
    description: Contains the details of the transaction to commit.
    properties:
      CommitDigest:
        $ref: '#/definitions/CommitDigest'
        description: 'Specifies the commit digest for the transaction to commit. For every active transaction, the commit digest must be passed. QLDB validates <code>CommitDigest</code> and rejects the commit with an error if the digest computed on the client does not match the digest computed by QLDB.'
      TransactionId:
        $ref: '#/definitions/TransactionId'
        description: Specifies the transaction id of the transaction to commit.
    required:
      - TransactionId
      - CommitDigest
    type: object
  CommitTransactionResult:
    description: Contains the details of the committed transaction.
    properties:
      CommitDigest:
        $ref: '#/definitions/CommitDigest'
        description: The commit digest of the committed transaction.
      TransactionId:
        $ref: '#/definitions/TransactionId'
        description: The transaction id of the committed transaction.
    type: object
  EndSessionRequest:
    description: Specifies a request to end the session.
    properties: {}
    type: object
  EndSessionResult:
    description: Contains the details of the ended session.
    properties: {}
    type: object
  ExecuteStatementRequest:
    description: Specifies a request to execute a statement.
    properties:
      Parameters:
        $ref: '#/definitions/StatementParameters'
        description: Specifies the parameters for the parameterized statement in the request.
      Statement:
        $ref: '#/definitions/Statement'
        description: Specifies the statement of the request.
      TransactionId:
        $ref: '#/definitions/TransactionId'
        description: Specifies the transaction id of the request.
    required:
      - TransactionId
      - Statement
    type: object
  ExecuteStatementResult:
    description: Contains the details of the executed statement.
    properties:
      FirstPage:
        $ref: '#/definitions/Page'
        description: Contains the details of the first fetched page.
    type: object
  FetchPageRequest:
    description: Specifies the details of the page to be fetched.
    properties:
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: Specifies the next page token of the page to be fetched.
      TransactionId:
        $ref: '#/definitions/TransactionId'
        description: Specifies the transaction id of the page to be fetched.
    required:
      - TransactionId
      - NextPageToken
    type: object
  FetchPageResult:
    description: Contains the page that was fetched.
    properties:
      Page:
        $ref: '#/definitions/Page'
        description: Contains details of the fetched page.
    type: object
  InvalidSessionException: {}
  IonBinary:
    maxLength: 131072
    minLength: 1
    type: string
  IonText:
    maxLength: 1048576
    minLength: 1
    type: string
  LedgerName:
    maxLength: 32
    minLength: 1
    pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
    type: string
  LimitExceededException: {}
  OccConflictException: {}
  Page:
    description: Contains details of the fetched page.
    properties:
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: The token of the next page.
      Values:
        $ref: '#/definitions/ValueHolders'
        description: A structure that contains values in multiple encoding formats.
    type: object
  PageToken:
    maxLength: 1024
    minLength: 4
    pattern: '^[A-Za-z-0-9+/=]+$'
    type: string
  RateExceededException: {}
  SendCommandRequest:
    properties:
      AbortTransaction:
        $ref: '#/definitions/AbortTransactionRequest'
        description: Command to abort the current transaction.
      CommitTransaction:
        $ref: '#/definitions/CommitTransactionRequest'
        description: Command to commit the specified transaction.
      EndSession:
        $ref: '#/definitions/EndSessionRequest'
        description: Command to end the current session.
      ExecuteStatement:
        $ref: '#/definitions/ExecuteStatementRequest'
        description: Command to execute a statement in the specified transaction.
      FetchPage:
        $ref: '#/definitions/FetchPageRequest'
        description: Command to fetch a page.
      SessionToken:
        $ref: '#/definitions/SessionToken'
        description: '<p>Specifies the session token for the current command. A session token is constant throughout the life of the session.</p> <p>To obtain a session token, run the <code>StartSession</code> command. This <code>SessionToken</code> is required for every subsequent command that is issued during the current session.</p>'
      StartSession:
        $ref: '#/definitions/StartSessionRequest'
        description: Command to start a new session. A session token is obtained as part of the response.
      StartTransaction:
        $ref: '#/definitions/StartTransactionRequest'
        description: Command to start a new transaction.
    type: object
  SendCommandResult:
    properties:
      AbortTransaction:
        $ref: '#/definitions/AbortTransactionResult'
        description: Contains the details of the aborted transaction.
      CommitTransaction:
        $ref: '#/definitions/CommitTransactionResult'
        description: Contains the details of the committed transaction.
      EndSession:
        $ref: '#/definitions/EndSessionResult'
        description: Contains the details of the ended session.
      ExecuteStatement:
        $ref: '#/definitions/ExecuteStatementResult'
        description: Contains the details of the executed statement.
      FetchPage:
        $ref: '#/definitions/FetchPageResult'
        description: Contains the details of the fetched page.
      StartSession:
        $ref: '#/definitions/StartSessionResult'
        description: Contains the details of the started session that includes a session token. This <code>SessionToken</code> is required for every subsequent command that is issued during the current session.
      StartTransaction:
        $ref: '#/definitions/StartTransactionResult'
        description: Contains the details of the started transaction.
    type: object
  SessionToken:
    maxLength: 1024
    minLength: 4
    pattern: '^[A-Za-z-0-9+/=]+$'
    type: string
  StartSessionRequest:
    description: Specifies a request to start a a new session.
    properties:
      LedgerName:
        $ref: '#/definitions/LedgerName'
        description: The name of the ledger to start a new session against.
    required:
      - LedgerName
    type: object
  StartSessionResult:
    description: Contains the details of the started session.
    properties:
      SessionToken:
        $ref: '#/definitions/SessionToken'
        description: Session token of the started session. This <code>SessionToken</code> is required for every subsequent command that is issued during the current session.
    type: object
  StartTransactionRequest:
    description: Specifies a request to start a transaction.
    properties: {}
    type: object
  StartTransactionResult:
    description: Contains the details of the started transaction.
    properties:
      TransactionId:
        $ref: '#/definitions/TransactionId'
        description: The transaction id of the started transaction.
    type: object
  Statement:
    maxLength: 100000
    minLength: 1
    type: string
  StatementParameters:
    items:
      $ref: '#/definitions/ValueHolder'
    type: array
  TransactionId:
    maxLength: 22
    minLength: 22
    pattern: '^[A-Za-z-0-9]+$'
    type: string
  ValueHolder:
    description: A structure that can contains values in multiple encoding formats.
    properties:
      IonBinary:
        $ref: '#/definitions/IonBinary'
        description: 'An Amazon Ion binary value contained in a <code>ValueHolder</code> structure. '
      IonText:
        $ref: '#/definitions/IonText'
        description: 'An Amazon Ion plaintext value contained in a <code>ValueHolder</code> structure. '
    type: object
  ValueHolders:
    items:
      $ref: '#/definitions/ValueHolder'
    type: array
x-servers:
  - description: The QLDB Session multi-region endpoint
    url: 'http://session.qldb.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The QLDB Session multi-region endpoint
    url: 'https://session.qldb.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The QLDB Session endpoint for China (Beijing) and China (Ningxia)
    url: 'http://session.qldb.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
  - description: The QLDB Session endpoint for China (Beijing) and China (Ningxia)
    url: 'https://session.qldb.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
