openapi: 3.0.0
info:
  version: '2019-11-01'
  x-release: v4
  title: Access Analyzer
  description: '<p>AWS IAM Access Analyzer helps identify potential resource-access risks by enabling you to identify any policies that grant access to an external principal. It does this by using logic-based reasoning to analyze resource-based policies in your AWS environment. An external principal can be another AWS account, a root user, an IAM user or role, a federated user, an AWS service, or an anonymous user. This guide describes the AWS IAM Access Analyzer operations that you can call programmatically. For general information about Access Analyzer, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html">AWS IAM Access Analyzer</a> in the <b>IAM User Guide</b>.</p> <p>To start using Access Analyzer, you first need to create an analyzer.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: accessanalyzer
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/accessanalyzer-2019-11-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/access-analyzer/'
servers:
  - url: 'http://access-analyzer.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Access Analyzer multi-region endpoint
  - url: 'https://access-analyzer.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Access Analyzer multi-region endpoint
  - url: 'http://access-analyzer.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Access Analyzer endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://access-analyzer.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Access Analyzer endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /archive-rule:
    put:
      operationId: ApplyArchiveRule
      description: Retroactively applies the archive rule to existing findings that meet the archive rule criteria.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - analyzerArn
                - ruleName
              properties:
                analyzerArn:
                  description: The Amazon resource name (ARN) of the analyzer.
                  type: string
                  pattern: '^[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:analyzer/.{1,255}$'
                clientToken:
                  description: A client token.
                  type: string
                ruleName:
                  description: The name of the rule to apply.
                  type: string
                  pattern: '^[A-Za-z][A-Za-z0-9_.-]*$'
                  minLength: 1
                  maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /analyzer:
    put:
      operationId: CreateAnalyzer
      description: Creates an analyzer for your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAnalyzerResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - analyzerName
                - type
              properties:
                analyzerName:
                  description: The name of the analyzer to create.
                  type: string
                  pattern: '^[A-Za-z][A-Za-z0-9_.-]*$'
                  minLength: 1
                  maxLength: 255
                archiveRules:
                  description: Specifies the archive rules to add for the analyzer. Archive rules automatically archive findings that meet the criteria you define for the rule.
                  type: array
                  items:
                    $ref: '#/components/schemas/InlineArchiveRule'
                clientToken:
                  description: A client token.
                  type: string
                tags:
                  description: The tags to apply to the analyzer.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/String'
                type:
                  description: The type of analyzer to create. Only ACCOUNT and ORGANIZATION analyzers are supported. You can create only one analyzer per account per Region. You can create up to 5 analyzers per organization per Region.
                  type: string
                  enum:
                    - ACCOUNT
                    - ORGANIZATION
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListAnalyzers
      description: Retrieves a list of analyzers.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnalyzersResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in the response.
          schema:
            type: integer
        - name: nextToken
          in: query
          required: false
          description: A token used for pagination of results returned.
          schema:
            type: string
        - name: type
          in: query
          required: false
          description: The type of analyzer.
          schema:
            type: string
            enum:
              - ACCOUNT
              - ORGANIZATION
  '/analyzer/{analyzerName}/archive-rule':
    put:
      operationId: CreateArchiveRule
      description: Creates an archive rule for the specified analyzer. Archive rules automatically archive new findings that meet the criteria you define when you create the rule.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: analyzerName
          in: path
          required: true
          description: The name of the created analyzer.
          schema:
            type: string
            pattern: '^[A-Za-z][A-Za-z0-9_.-]*$'
            minLength: 1
            maxLength: 255
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - ruleName
              properties:
                clientToken:
                  description: A client token.
                  type: string
                filter:
                  description: The criteria for the rule.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Criterion'
                ruleName:
                  description: The name of the rule to create.
                  type: string
                  pattern: '^[A-Za-z][A-Za-z0-9_.-]*$'
                  minLength: 1
                  maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListArchiveRules
      description: Retrieves a list of archive rules created for the specified analyzer.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListArchiveRulesResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: analyzerName
          in: path
          required: true
          description: The name of the analyzer to retrieve rules from.
          schema:
            type: string
            pattern: '^[A-Za-z][A-Za-z0-9_.-]*$'
            minLength: 1
            maxLength: 255
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in the request.
          schema:
            type: integer
        - name: nextToken
          in: query
          required: false
          description: A token used for pagination of results returned.
          schema:
            type: string
  '/analyzer/{analyzerName}':
    delete:
      operationId: DeleteAnalyzer
      description: 'Deletes the specified analyzer. When you delete an analyzer, Access Analyzer is disabled for the account or organization in the current or specific Region. All findings that were generated by the analyzer are deleted. You cannot undo this action.'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: analyzerName
          in: path
          required: true
          description: The name of the analyzer to delete.
          schema:
            type: string
            pattern: '^[A-Za-z][A-Za-z0-9_.-]*$'
            minLength: 1
            maxLength: 255
        - name: clientToken
          in: query
          required: false
          description: A client token.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetAnalyzer
      description: Retrieves information about the specified analyzer.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAnalyzerResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: analyzerName
          in: path
          required: true
          description: The name of the analyzer retrieved.
          schema:
            type: string
            pattern: '^[A-Za-z][A-Za-z0-9_.-]*$'
            minLength: 1
            maxLength: 255
  '/analyzer/{analyzerName}/archive-rule/{ruleName}':
    delete:
      operationId: DeleteArchiveRule
      description: Deletes the specified archive rule.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: analyzerName
          in: path
          required: true
          description: The name of the analyzer that associated with the archive rule to delete.
          schema:
            type: string
            pattern: '^[A-Za-z][A-Za-z0-9_.-]*$'
            minLength: 1
            maxLength: 255
        - name: clientToken
          in: query
          required: false
          description: A client token.
          schema:
            type: string
        - name: ruleName
          in: path
          required: true
          description: The name of the rule to delete.
          schema:
            type: string
            pattern: '^[A-Za-z][A-Za-z0-9_.-]*$'
            minLength: 1
            maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetArchiveRule
      description: '<p>Retrieves information about an archive rule.</p> <p>To learn about filter keys that you can use to create an archive rule, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-filter-keys.html">Access Analyzer filter keys</a> in the <b>IAM User Guide</b>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArchiveRuleResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: analyzerName
          in: path
          required: true
          description: The name of the analyzer to retrieve rules from.
          schema:
            type: string
            pattern: '^[A-Za-z][A-Za-z0-9_.-]*$'
            minLength: 1
            maxLength: 255
        - name: ruleName
          in: path
          required: true
          description: The name of the rule to retrieve.
          schema:
            type: string
            pattern: '^[A-Za-z][A-Za-z0-9_.-]*$'
            minLength: 1
            maxLength: 255
    put:
      operationId: UpdateArchiveRule
      description: Updates the criteria and values for the specified archive rule.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: analyzerName
          in: path
          required: true
          description: The name of the analyzer to update the archive rules for.
          schema:
            type: string
            pattern: '^[A-Za-z][A-Za-z0-9_.-]*$'
            minLength: 1
            maxLength: 255
        - name: ruleName
          in: path
          required: true
          description: The name of the rule to update.
          schema:
            type: string
            pattern: '^[A-Za-z][A-Za-z0-9_.-]*$'
            minLength: 1
            maxLength: 255
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
              properties:
                clientToken:
                  description: A client token.
                  type: string
                filter:
                  description: A filter to match for the rules to update. Only rules that match the filter are updated.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Criterion'
  /analyzed-resource#analyzerArn&resourceArn:
    get:
      operationId: GetAnalyzedResource
      description: Retrieves information about a resource that was analyzed.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAnalyzedResourceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: analyzerArn
          in: query
          required: true
          description: The ARN of the analyzer to retrieve information from.
          schema:
            type: string
            pattern: '^[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:analyzer/.{1,255}$'
        - name: resourceArn
          in: query
          required: true
          description: The ARN of the resource to retrieve information about.
          schema:
            type: string
            pattern: 'arn:[^:]*:[^:]*:[^:]*:[^:]*:.*$'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/finding/{id}#analyzerArn':
    get:
      operationId: GetFinding
      description: Retrieves information about the specified finding.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFindingResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: analyzerArn
          in: query
          required: true
          description: The ARN of the analyzer that generated the finding.
          schema:
            type: string
            pattern: '^[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:analyzer/.{1,255}$'
        - name: id
          in: path
          required: true
          description: The ID of the finding to retrieve.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /analyzed-resource:
    post:
      operationId: ListAnalyzedResources
      description: Retrieves a list of resources of the specified type that have been analyzed by the specified analyzer..
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnalyzedResourcesResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - analyzerArn
              properties:
                analyzerArn:
                  description: The ARN of the analyzer to retrieve a list of analyzed resources from.
                  type: string
                  pattern: '^[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:analyzer/.{1,255}$'
                maxResults:
                  description: The maximum number of results to return in the response.
                  type: integer
                nextToken:
                  description: A token used for pagination of results returned.
                  type: string
                resourceType:
                  description: The type of resource.
                  type: string
                  enum:
                    - 'AWS::S3::Bucket'
                    - 'AWS::IAM::Role'
                    - 'AWS::SQS::Queue'
                    - 'AWS::Lambda::Function'
                    - 'AWS::Lambda::LayerVersion'
                    - 'AWS::KMS::Key'
                    - 'AWS::SecretsManager::Secret'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /finding:
    post:
      operationId: ListFindings
      description: '<p>Retrieves a list of findings generated by the specified analyzer.</p> <p>To learn about filter keys that you can use to create an archive rule, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-filter-keys.html">Access Analyzer filter keys</a> in the <b>IAM User Guide</b>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFindingsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - analyzerArn
              properties:
                analyzerArn:
                  description: The ARN of the analyzer to retrieve findings from.
                  type: string
                  pattern: '^[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:analyzer/.{1,255}$'
                filter:
                  description: A filter to match for the findings to return.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Criterion'
                maxResults:
                  description: The maximum number of results to return in the response.
                  type: integer
                nextToken:
                  description: A token used for pagination of results returned.
                  type: string
                sort:
                  description: The criteria used to sort.
                  type: object
                  properties:
                    attributeName:
                      allOf:
                        - $ref: '#/components/schemas/String'
                        - description: The name of the attribute to sort on.
                    orderBy:
                      allOf:
                        - $ref: '#/components/schemas/OrderBy'
                        - description: 'The sort order, ascending or descending.'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateFindings
      description: Updates the status for the specified findings.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - analyzerArn
                - status
              properties:
                analyzerArn:
                  description: The ARN of the analyzer that generated the findings to update.
                  type: string
                  pattern: '^[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:analyzer/.{1,255}$'
                clientToken:
                  description: A client token.
                  type: string
                ids:
                  description: The IDs of the findings to update.
                  type: array
                  items:
                    $ref: '#/components/schemas/FindingId'
                resourceArn:
                  description: The ARN of the resource identified in the finding.
                  type: string
                  pattern: 'arn:[^:]*:[^:]*:[^:]*:[^:]*:.*$'
                status:
                  description: The state represents the action to take to update the finding Status. Use <code>ARCHIVE</code> to change an Active finding to an Archived finding. Use <code>ACTIVE</code> to change an Archived finding to an Active finding.
                  type: string
                  enum:
                    - ACTIVE
                    - ARCHIVED
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: Retrieves a list of tags applied to the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The ARN of the resource to retrieve tags from.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: Adds a tag to the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The ARN of the resource to add the tag to.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: The tags to add to the resource.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/String'
  /resource/scan:
    post:
      operationId: StartResourceScan
      description: Immediately starts a scan of the policies applied to the specified resource.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - analyzerArn
                - resourceArn
              properties:
                analyzerArn:
                  description: The ARN of the analyzer to use to scan the policies applied to the specified resource.
                  type: string
                  pattern: '^[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:analyzer/.{1,255}$'
                resourceArn:
                  description: The ARN of the resource to scan.
                  type: string
                  pattern: 'arn:[^:]*:[^:]*:[^:]*:[^:]*:.*$'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Removes a tag from the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The ARN of the resource to remove the tag from.
          schema:
            type: string
        - name: tagKeys
          in: query
          required: true
          description: The key for the tag to add.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/String'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    ResourceNotFoundException: {}
    ValidationException: {}
    InternalServerException: {}
    ThrottlingException: {}
    AccessDeniedException: {}
    CreateAnalyzerResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/AnalyzerArn'
            - description: The ARN of the analyzer that was created by the request.
      description: The response to the request to create an analyzer.
    InlineArchiveRule:
      type: object
      required:
        - filter
        - ruleName
      properties:
        filter:
          allOf:
            - $ref: '#/components/schemas/FilterCriteriaMap'
            - description: The condition and values for a criterion.
        ruleName:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The name of the rule.
      description: An criterion statement in an archive rule. Each archive rule may have multiple criteria.
    String:
      type: string
    ConflictException: {}
    ServiceQuotaExceededException: {}
    Criterion:
      type: object
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/ValueList'
            - description: A "contains" operator to match for the filter used to create the rule.
        eq:
          allOf:
            - $ref: '#/components/schemas/ValueList'
            - description: An "equals" operator to match for the filter used to create the rule.
        exists:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'An "exists" operator to match for the filter used to create the rule. '
        neq:
          allOf:
            - $ref: '#/components/schemas/ValueList'
            - description: A "not equals" operator to match for the filter used to create the rule.
      description: The criteria to use in the filter that defines the archive rule.
    GetAnalyzedResourceResponse:
      type: object
      properties:
        resource:
          allOf:
            - $ref: '#/components/schemas/AnalyzedResource'
            - description: An <code>AnalyedResource</code> object that contains information that Access Analyzer found when it analyzed the resource.
      description: The response to the request.
    GetAnalyzerResponse:
      type: object
      required:
        - analyzer
      properties:
        analyzer:
          allOf:
            - $ref: '#/components/schemas/AnalyzerSummary'
            - description: An <code>AnalyzerSummary</code> object that contains information about the analyzer.
      description: The response to the request.
    GetArchiveRuleResponse:
      type: object
      required:
        - archiveRule
      properties:
        archiveRule:
          $ref: '#/components/schemas/ArchiveRuleSummary'
      description: The response to the request.
    GetFindingResponse:
      type: object
      properties:
        finding:
          allOf:
            - $ref: '#/components/schemas/Finding'
            - description: A <code>finding</code> object that contains finding details.
      description: The response to the request.
    ListAnalyzedResourcesResponse:
      type: object
      required:
        - analyzedResources
      properties:
        analyzedResources:
          allOf:
            - $ref: '#/components/schemas/AnalyzedResourcesList'
            - description: A list of resources that were analyzed.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: A token used for pagination of results returned.
      description: The response to the request.
    ListAnalyzersResponse:
      type: object
      required:
        - analyzers
      properties:
        analyzers:
          allOf:
            - $ref: '#/components/schemas/AnalyzersList'
            - description: The analyzers retrieved.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: A token used for pagination of results returned.
      description: The response to the request.
    ListArchiveRulesResponse:
      type: object
      required:
        - archiveRules
      properties:
        archiveRules:
          allOf:
            - $ref: '#/components/schemas/ArchiveRulesList'
            - description: A list of archive rules created for the specified analyzer.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: A token used for pagination of results returned.
      description: The response to the request.
    ListFindingsResponse:
      type: object
      required:
        - findings
      properties:
        findings:
          allOf:
            - $ref: '#/components/schemas/FindingsList'
            - description: 'A list of findings retrieved from the analyzer that match the filter criteria specified, if any.'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: A token used for pagination of results returned.
      description: The response to the request.
    OrderBy:
      type: string
      enum:
        - ASC
        - DESC
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: The tags that are applied to the specified resource.
      description: The response to the request.
    TagResourceResponse:
      type: object
      properties: {}
      description: The response to the request.
    UntagResourceResponse:
      type: object
      properties: {}
      description: The response to the request.
    FindingId:
      type: string
    ActionList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    Timestamp:
      type: string
      format: date-time
    Boolean:
      type: boolean
    ResourceArn:
      type: string
      pattern: 'arn:[^:]*:[^:]*:[^:]*:[^:]*:.*$'
    ResourceType:
      type: string
      enum:
        - 'AWS::S3::Bucket'
        - 'AWS::IAM::Role'
        - 'AWS::SQS::Queue'
        - 'AWS::Lambda::Function'
        - 'AWS::Lambda::LayerVersion'
        - 'AWS::KMS::Key'
        - 'AWS::SecretsManager::Secret'
    SharedViaList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    FindingStatus:
      type: string
      enum:
        - ACTIVE
        - ARCHIVED
        - RESOLVED
    AnalyzedResource:
      type: object
      required:
        - analyzedAt
        - createdAt
        - isPublic
        - resourceArn
        - resourceOwnerAccount
        - resourceType
        - updatedAt
      properties:
        actions:
          allOf:
            - $ref: '#/components/schemas/ActionList'
            - description: The actions that an external principal is granted permission to use by the policy that generated the finding.
        analyzedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which the resource was analyzed.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which the finding was created.
        error:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: An error message.
        isPublic:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the policy that generated the finding grants public access to the resource.
        resourceArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The ARN of the resource that was analyzed.
        resourceOwnerAccount:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The AWS account ID that owns the resource.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - description: The type of the resource that was analyzed.
        sharedVia:
          allOf:
            - $ref: '#/components/schemas/SharedViaList'
            - description: Indicates how the access that generated the finding is granted. This is populated for Amazon S3 bucket findings.
        status:
          allOf:
            - $ref: '#/components/schemas/FindingStatus'
            - description: The current status of the finding generated from the analyzed resource.
        updatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which the finding was updated.
      description: Contains details about the analyzed resource.
    AnalyzedResourceSummary:
      type: object
      required:
        - resourceArn
        - resourceOwnerAccount
        - resourceType
      properties:
        resourceArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The ARN of the analyzed resource.
        resourceOwnerAccount:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The AWS account ID that owns the resource.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - description: The type of resource that was analyzed.
      description: Contains the ARN of the analyzed resource.
    AnalyzedResourcesList:
      type: array
      items:
        $ref: '#/components/schemas/AnalyzedResourceSummary'
    AnalyzerArn:
      type: string
      pattern: '^[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:analyzer/.{1,255}$'
    AnalyzerStatus:
      type: string
      enum:
        - ACTIVE
        - CREATING
        - DISABLED
        - FAILED
    Name:
      type: string
      pattern: '^[A-Za-z][A-Za-z0-9_.-]*$'
      minLength: 1
      maxLength: 255
    StatusReason:
      type: object
      required:
        - code
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/ReasonCode'
            - description: The reason code for the current status of the analyzer.
      description: 'Provides more details about the current status of the analyzer. For example, if the creation for the analyzer fails, a <code>Failed</code> status is displayed. For an analyzer with organization as the type, this failure can be due to an issue with creating the service-linked roles required in the member accounts of the AWS organization.'
    TagsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    Type:
      type: string
      enum:
        - ACCOUNT
        - ORGANIZATION
    AnalyzerSummary:
      type: object
      required:
        - arn
        - createdAt
        - name
        - status
        - type
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/AnalyzerArn'
            - description: The ARN of the analyzer.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: A timestamp for the time at which the analyzer was created.
        lastResourceAnalyzed:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The resource that was most recently analyzed by the analyzer.
        lastResourceAnalyzedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which the most recently analyzed resource was analyzed.
        name:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The name of the analyzer.
        status:
          allOf:
            - $ref: '#/components/schemas/AnalyzerStatus'
            - description: 'The status of the analyzer. An <code>Active</code> analyzer successfully monitors supported resources and generates new findings. The analyzer is <code>Disabled</code> when a user action, such as removing trusted access for AWS IAM Access Analyzer from AWS Organizations, causes the analyzer to stop generating new findings. The status is <code>Creating</code> when the analyzer creation is in progress and <code>Failed</code> when the analyzer creation has failed. '
        statusReason:
          allOf:
            - $ref: '#/components/schemas/StatusReason'
            - description: 'The <code>statusReason</code> provides more details about the current status of the analyzer. For example, if the creation for the analyzer fails, a <code>Failed</code> status is displayed. For an analyzer with organization as the type, this failure can be due to an issue with creating the service-linked roles required in the member accounts of the AWS organization.'
        tags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: The tags added to the analyzer.
        type:
          allOf:
            - $ref: '#/components/schemas/Type'
            - description: 'The type of analyzer, which corresponds to the zone of trust chosen for the analyzer.'
      description: Contains information about the analyzer.
    AnalyzersList:
      type: array
      items:
        $ref: '#/components/schemas/AnalyzerSummary'
    ApplyArchiveRuleRequest:
      type: object
      required:
        - analyzerArn
        - ruleName
      title: ApplyArchiveRuleRequest
      properties:
        analyzerArn:
          allOf:
            - $ref: '#/components/schemas/AnalyzerArn'
            - description: The Amazon resource name (ARN) of the analyzer.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A client token.
        ruleName:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The name of the rule to apply.
      description: Retroactively applies an archive rule.
    FilterCriteriaMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Criterion'
    ArchiveRuleSummary:
      type: object
      required:
        - createdAt
        - filter
        - ruleName
        - updatedAt
      properties:
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which the archive rule was created.
        filter:
          allOf:
            - $ref: '#/components/schemas/FilterCriteriaMap'
            - description: A filter used to define the archive rule.
        ruleName:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The name of the archive rule.
        updatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which the archive rule was last updated.
      description: Contains information about an archive rule.
    ArchiveRulesList:
      type: array
      items:
        $ref: '#/components/schemas/ArchiveRuleSummary'
    ConditionKeyMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    InlineArchiveRulesList:
      type: array
      items:
        $ref: '#/components/schemas/InlineArchiveRule'
    CreateAnalyzerRequest:
      type: object
      required:
        - analyzerName
        - type
      title: CreateAnalyzerRequest
      properties:
        analyzerName:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The name of the analyzer to create.
        archiveRules:
          allOf:
            - $ref: '#/components/schemas/InlineArchiveRulesList'
            - description: Specifies the archive rules to add for the analyzer. Archive rules automatically archive findings that meet the criteria you define for the rule.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A client token.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: The tags to apply to the analyzer.
        type:
          allOf:
            - $ref: '#/components/schemas/Type'
            - description: The type of analyzer to create. Only ACCOUNT and ORGANIZATION analyzers are supported. You can create only one analyzer per account per Region. You can create up to 5 analyzers per organization per Region.
      description: Creates an analyzer.
    CreateArchiveRuleRequest:
      type: object
      required:
        - filter
        - ruleName
      title: CreateArchiveRuleRequest
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A client token.
        filter:
          allOf:
            - $ref: '#/components/schemas/FilterCriteriaMap'
            - description: The criteria for the rule.
        ruleName:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The name of the rule to create.
      description: Creates an archive rule.
    ValueList:
      type: array
      items:
        $ref: '#/components/schemas/String'
      minItems: 1
      maxItems: 20
    DeleteAnalyzerRequest:
      type: object
      title: DeleteAnalyzerRequest
      properties: {}
      description: Deletes an analyzer.
    DeleteArchiveRuleRequest:
      type: object
      title: DeleteArchiveRuleRequest
      properties: {}
      description: Deletes an archive rule.
    PrincipalMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    FindingSourceList:
      type: array
      items:
        $ref: '#/components/schemas/FindingSource'
    Finding:
      type: object
      required:
        - analyzedAt
        - condition
        - createdAt
        - id
        - resourceOwnerAccount
        - resourceType
        - status
        - updatedAt
      properties:
        action:
          allOf:
            - $ref: '#/components/schemas/ActionList'
            - description: The action in the analyzed policy statement that an external principal has permission to use.
        analyzedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which the resource was analyzed.
        condition:
          allOf:
            - $ref: '#/components/schemas/ConditionKeyMap'
            - description: The condition in the analyzed policy statement that resulted in a finding.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which the finding was generated.
        error:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: An error.
        id:
          allOf:
            - $ref: '#/components/schemas/FindingId'
            - description: The ID of the finding.
        isPublic:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the policy that generated the finding allows public access to the resource.
        principal:
          allOf:
            - $ref: '#/components/schemas/PrincipalMap'
            - description: The external principal that access to a resource within the zone of trust.
        resource:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The resource that an external principal has access to.
        resourceOwnerAccount:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The AWS account ID that owns the resource.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - description: The type of the resource reported in the finding.
        sources:
          allOf:
            - $ref: '#/components/schemas/FindingSourceList'
            - description: The sources of the finding. This indicates how the access that generated the finding is granted. It is populated for Amazon S3 bucket findings.
        status:
          allOf:
            - $ref: '#/components/schemas/FindingStatus'
            - description: The current status of the finding.
        updatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which the finding was updated.
      description: Contains information about a finding.
    FindingIdList:
      type: array
      items:
        $ref: '#/components/schemas/FindingId'
    FindingSourceDetail:
      type: object
      properties:
        accessPointArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ARN of the access point that generated the finding.
      description: Includes details about how the access that generated the finding is granted. This is populated for Amazon S3 bucket findings.
    FindingSourceType:
      type: string
      enum:
        - POLICY
        - BUCKET_ACL
        - S3_ACCESS_POINT
    FindingSource:
      type: object
      required:
        - type
      properties:
        detail:
          allOf:
            - $ref: '#/components/schemas/FindingSourceDetail'
            - description: Includes details about how the access that generated the finding is granted. This is populated for Amazon S3 bucket findings.
        type:
          allOf:
            - $ref: '#/components/schemas/FindingSourceType'
            - description: Indicates the type of access that generated the finding.
      description: The source of the finding. This indicates how the access that generated the finding is granted. It is populated for Amazon S3 bucket findings.
    FindingStatusUpdate:
      type: string
      enum:
        - ACTIVE
        - ARCHIVED
    FindingSummary:
      type: object
      required:
        - analyzedAt
        - condition
        - createdAt
        - id
        - resourceOwnerAccount
        - resourceType
        - status
        - updatedAt
      properties:
        action:
          allOf:
            - $ref: '#/components/schemas/ActionList'
            - description: The action in the analyzed policy statement that an external principal has permission to use.
        analyzedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which the resource-based policy that generated the finding was analyzed.
        condition:
          allOf:
            - $ref: '#/components/schemas/ConditionKeyMap'
            - description: The condition in the analyzed policy statement that resulted in a finding.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which the finding was created.
        error:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error that resulted in an Error finding.
        id:
          allOf:
            - $ref: '#/components/schemas/FindingId'
            - description: The ID of the finding.
        isPublic:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the finding reports a resource that has a policy that allows public access.
        principal:
          allOf:
            - $ref: '#/components/schemas/PrincipalMap'
            - description: The external principal that has access to a resource within the zone of trust.
        resource:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The resource that the external principal has access to.
        resourceOwnerAccount:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The AWS account ID that owns the resource.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - description: The type of the resource that the external principal has access to.
        sources:
          allOf:
            - $ref: '#/components/schemas/FindingSourceList'
            - description: The sources of the finding. This indicates how the access that generated the finding is granted. It is populated for Amazon S3 bucket findings.
        status:
          allOf:
            - $ref: '#/components/schemas/FindingStatus'
            - description: The status of the finding.
        updatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which the finding was most recently updated.
      description: Contains information about a finding.
    FindingsList:
      type: array
      items:
        $ref: '#/components/schemas/FindingSummary'
    GetAnalyzedResourceRequest:
      type: object
      title: GetAnalyzedResourceRequest
      properties: {}
      description: Retrieves an analyzed resource.
    GetAnalyzerRequest:
      type: object
      title: GetAnalyzerRequest
      properties: {}
      description: Retrieves an analyzer.
    GetArchiveRuleRequest:
      type: object
      title: GetArchiveRuleRequest
      properties: {}
      description: Retrieves an archive rule.
    GetFindingRequest:
      type: object
      title: GetFindingRequest
      properties: {}
      description: Retrieves a finding.
    Integer:
      type: integer
    Token:
      type: string
    ListAnalyzedResourcesRequest:
      type: object
      required:
        - analyzerArn
      title: ListAnalyzedResourcesRequest
      properties:
        analyzerArn:
          allOf:
            - $ref: '#/components/schemas/AnalyzerArn'
            - description: The ARN of the analyzer to retrieve a list of analyzed resources from.
        maxResults:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The maximum number of results to return in the response.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: A token used for pagination of results returned.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - description: The type of resource.
      description: Retrieves a list of resources that have been analyzed.
    ListAnalyzersRequest:
      type: object
      title: ListAnalyzersRequest
      properties: {}
      description: Retrieves a list of analyzers.
    ListArchiveRulesRequest:
      type: object
      title: ListArchiveRulesRequest
      properties: {}
      description: Retrieves a list of archive rules created for the specified analyzer.
    SortCriteria:
      type: object
      properties:
        attributeName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the attribute to sort on.
        orderBy:
          allOf:
            - $ref: '#/components/schemas/OrderBy'
            - description: 'The sort order, ascending or descending.'
      description: The criteria used to sort.
    ListFindingsRequest:
      type: object
      required:
        - analyzerArn
      title: ListFindingsRequest
      properties:
        analyzerArn:
          allOf:
            - $ref: '#/components/schemas/AnalyzerArn'
            - description: The ARN of the analyzer to retrieve findings from.
        filter:
          allOf:
            - $ref: '#/components/schemas/FilterCriteriaMap'
            - description: A filter to match for the findings to return.
        maxResults:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The maximum number of results to return in the response.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/Token'
            - description: A token used for pagination of results returned.
        sort:
          allOf:
            - $ref: '#/components/schemas/SortCriteria'
            - description: The sort order for the findings returned.
      description: Retrieves a list of findings generated by the specified analyzer.
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
      description: Retrieves a list of tags applied to the specified resource.
    ReasonCode:
      type: string
      enum:
        - AWS_SERVICE_ACCESS_DISABLED
        - DELEGATED_ADMINISTRATOR_DEREGISTERED
        - ORGANIZATION_DELETED
        - SERVICE_LINKED_ROLE_CREATION_FAILED
    StartResourceScanRequest:
      type: object
      required:
        - analyzerArn
        - resourceArn
      title: StartResourceScanRequest
      properties:
        analyzerArn:
          allOf:
            - $ref: '#/components/schemas/AnalyzerArn'
            - description: The ARN of the analyzer to use to scan the policies applied to the specified resource.
        resourceArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The ARN of the resource to scan.
      description: Starts a scan of the policies applied to the specified resource.
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/String'
    TagResourceRequest:
      type: object
      required:
        - tags
      title: TagResourceRequest
      properties:
        tags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: The tags to add to the resource.
      description: Adds a tag to the specified resource.
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
      description: Removes a tag from the specified resource.
    UpdateArchiveRuleRequest:
      type: object
      required:
        - filter
      title: UpdateArchiveRuleRequest
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A client token.
        filter:
          allOf:
            - $ref: '#/components/schemas/FilterCriteriaMap'
            - description: A filter to match for the rules to update. Only rules that match the filter are updated.
      description: Updates the specified archive rule.
    UpdateFindingsRequest:
      type: object
      required:
        - analyzerArn
        - status
      title: UpdateFindingsRequest
      properties:
        analyzerArn:
          allOf:
            - $ref: '#/components/schemas/AnalyzerArn'
            - description: The ARN of the analyzer that generated the findings to update.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A client token.
        ids:
          allOf:
            - $ref: '#/components/schemas/FindingIdList'
            - description: The IDs of the findings to update.
        resourceArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The ARN of the resource identified in the finding.
        status:
          allOf:
            - $ref: '#/components/schemas/FindingStatusUpdate'
            - description: The state represents the action to take to update the finding Status. Use <code>ARCHIVE</code> to change an Active finding to an Archived finding. Use <code>ACTIVE</code> to change an Archived finding to an Active finding.
      description: Updates findings with the new values provided in the request.
security:
  - hmac: []
