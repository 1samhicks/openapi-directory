swagger: '2.0'
schemes:
  - https
  - http
host: ec2-instance-connect.amazonaws.com
basePath: /
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: AWS EC2 Connect Service is a service that enables system administrators to publish temporary SSH keys to their EC2 instances in order to establish connections to their instances without leaving a permanent authentication option.
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS EC2 Instance Connect
  version: '2018-04-02'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ec2-instance-connect-2018-04-02.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: ec2-instance-connect
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/ec2-instance-connect/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  '/#X-Amz-Target=AWSEC2InstanceConnectService.SendSSHPublicKey':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Pushes an SSH public key to a particular OS user on a given EC2 instance for 60 seconds.
      operationId: SendSSHPublicKey
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SendSSHPublicKeyRequest'
        - enum:
            - AWSEC2InstanceConnectService.SendSSHPublicKey
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SendSSHPublicKeyResponse'
        '480':
          description: AuthException
          schema:
            $ref: '#/definitions/AuthException'
        '481':
          description: InvalidArgsException
          schema:
            $ref: '#/definitions/InvalidArgsException'
        '482':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: EC2InstanceNotFoundException
          schema:
            $ref: '#/definitions/EC2InstanceNotFoundException'
definitions:
  AuthException: {}
  AvailabilityZone:
    maxLength: 32
    minLength: 6
    pattern: '^(\w+-){2,3}\d+\w+$'
    type: string
  EC2InstanceNotFoundException: {}
  InstanceId:
    maxLength: 32
    minLength: 10
    pattern: '^i-[a-f0-9]+$'
    type: string
  InstanceOSUser:
    maxLength: 32
    minLength: 1
    pattern: '^[A-Za-z_][A-Za-z0-9\@\._-]{0,30}[A-Za-z0-9\$_-]?$'
    type: string
  InvalidArgsException: {}
  RequestId:
    type: string
  SSHPublicKey:
    maxLength: 4096
    minLength: 256
    type: string
  SendSSHPublicKeyRequest:
    properties:
      AvailabilityZone:
        $ref: '#/definitions/AvailabilityZone'
        description: The availability zone the EC2 instance was launched in.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The EC2 instance you wish to publish the SSH key to.
      InstanceOSUser:
        $ref: '#/definitions/InstanceOSUser'
        description: The OS user on the EC2 instance whom the key may be used to authenticate as.
      SSHPublicKey:
        $ref: '#/definitions/SSHPublicKey'
        description: The public key to be published to the instance. To use it after publication you must have the matching private key.
    required:
      - InstanceId
      - InstanceOSUser
      - SSHPublicKey
      - AvailabilityZone
    type: object
  SendSSHPublicKeyResponse:
    example:
      RequestId: abcd1234-abcd-1234-abcd-1234abcd1234
      Success: true
    properties:
      RequestId:
        $ref: '#/definitions/RequestId'
        description: The request ID as logged by EC2 Connect. Please provide this when contacting AWS Support.
      Success:
        $ref: '#/definitions/Success'
        description: Indicates request success.
    type: object
  ServiceException: {}
  Success:
    type: boolean
  ThrottlingException: {}
x-servers:
  - description: The EC2 Instance Connect multi-region endpoint
    url: 'http://ec2-instance-connect.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The EC2 Instance Connect multi-region endpoint
    url: 'https://ec2-instance-connect.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The EC2 Instance Connect endpoint for China (Beijing) and China (Ningxia)
    url: 'http://ec2-instance-connect.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
  - description: The EC2 Instance Connect endpoint for China (Beijing) and China (Ningxia)
    url: 'https://ec2-instance-connect.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
