swagger: '2.0'
schemes:
  - https
  - http
host: backup.amazonaws.com
basePath: /
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: '<fullname>AWS Backup</fullname> <p>AWS Backup is a unified backup service designed to protect AWS services and their associated data. AWS Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS Backup
  version: '2018-11-15'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/backup-2018-11-15.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: backup
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/backup/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /backup-jobs:
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Starts a job to create a one-time backup of the specified resource.
      operationId: StartBackupJob
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              BackupVaultName:
                description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
                pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
                type: string
              CompleteWindowMinutes:
                description: The amount of time AWS Backup attempts a backup before canceling the job and returning an error.
                type: integer
              IamRoleArn:
                description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
                type: string
              IdempotencyToken:
                description: 'A customer chosen string that can be used to distinguish between calls to <code>StartBackupJob</code>. Idempotency tokens time out after one hour. Therefore, if you call <code>StartBackupJob</code> multiple times with the same idempotency token within one hour, AWS Backup recognizes that you are requesting only one backup job and initiates only one. If you change the idempotency token for each call, AWS Backup recognizes that you are requesting to start multiple backups.'
                type: string
              Lifecycle:
                description: Contains an array of <code>Transition</code> objects specifying how long in days before a recovery point transitions to cold storage or is deleted.
                properties:
                  DeleteAfterDays:
                    $ref: '#/definitions/Long'
                    description: Specifies the number of days after creation that a recovery point is deleted. Must be greater than <code>MoveToColdStorageAfterDays</code>.
                  MoveToColdStorageAfterDays:
                    $ref: '#/definitions/Long'
                    description: Specifies the number of days after creation that a recovery point is moved to cold storage.
                type: object
              RecoveryPointTags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: 'To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair.'
                type: object
              ResourceArn:
                description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.
                type: string
              StartWindowMinutes:
                description: The amount of time in minutes before beginning a backup.
                type: integer
            required:
              - BackupVaultName
              - ResourceArn
              - IamRoleArn
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartBackupJobOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  /backup-jobs/:
    get:
      description: Returns metadata about your backup jobs.
      operationId: ListBackupJobs
      parameters:
        - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: Returns only backup jobs that match the specified resource Amazon Resource Name (ARN).
          in: query
          name: resourceArn
          required: false
          type: string
        - description: Returns only backup jobs that are in the specified state.
          enum:
            - CREATED
            - PENDING
            - RUNNING
            - ABORTING
            - ABORTED
            - COMPLETED
            - FAILED
            - EXPIRED
          in: query
          name: state
          required: false
          type: string
        - description: 'Returns only backup jobs that will be stored in the specified backup vault. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          in: query
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
          required: false
          type: string
        - description: Returns only backup jobs that were created before the specified date.
          format: date-time
          in: query
          name: createdBefore
          required: false
          type: string
        - description: Returns only backup jobs that were created after the specified date.
          format: date-time
          in: query
          name: createdAfter
          required: false
          type: string
        - description: '<p>Returns only backup jobs for the specified resources:</p> <ul> <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p> <code>SGW</code> for AWS Storage Gateway</p> </li> <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li> <li> <p> <code>DDB</code> for Amazon DynamoDB</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li> </ul>'
          in: query
          name: resourceType
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBackupJobsOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/backup-jobs/{backupJobId}':
    get:
      description: Returns metadata associated with creating a backup of a resource.
      operationId: DescribeBackupJob
      parameters:
        - description: Uniquely identifies a request to AWS Backup to back up a resource.
          in: path
          name: backupJobId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeBackupJobOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: DependencyFailureException
          schema:
            $ref: '#/definitions/DependencyFailureException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Attempts to cancel a job to create a one-time backup of a resource.
      operationId: StopBackupJob
      parameters:
        - description: Uniquely identifies a request to AWS Backup to back up a resource.
          in: path
          name: backupJobId
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  /backup-vaults/:
    get:
      description: Returns a list of recovery point storage containers along with information about them.
      operationId: ListBackupVaults
      parameters:
        - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBackupVaultsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/backup-vaults/{backupVaultName}':
    delete:
      description: Deletes the backup vault identified by its name. A vault can be deleted only if it is empty.
      operationId: DeleteBackupVault
      parameters:
        - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and theAWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          in: path
          name: backupVaultName
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
    get:
      description: Returns metadata about a backup vault specified by its name.
      operationId: DescribeBackupVault
      parameters:
        - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          in: path
          name: backupVaultName
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeBackupVaultOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: '<p>Creates a logical container where backups are stored. A <code>CreateBackupVault</code> request includes a name, optionally one or more resource tags, an encryption key, and a request ID.</p> <note> <p>Sensitive data, such as passport numbers, should not be included the name of a backup vault.</p> </note>'
      operationId: CreateBackupVault
      parameters:
        - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              BackupVaultTags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: Metadata that you can assign to help organize the resources that you create. Each tag is a key-value pair.
                type: object
              CreatorRequestId:
                description: A unique string that identifies the request and allows failed requests to be retried without the risk of executing the operation twice.
                type: string
              EncryptionKeyArn:
                description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'
                type: string
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateBackupVaultOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
  '/backup-vaults/{backupVaultName}/access-policy':
    delete:
      description: Deletes the policy document that manages permissions on a backup vault.
      operationId: DeleteBackupVaultAccessPolicy
      parameters:
        - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    get:
      description: Returns the access policy document that is associated with the named backup vault.
      operationId: GetBackupVaultAccessPolicy
      parameters:
        - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBackupVaultAccessPolicyOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Sets a resource-based policy that is used to manage access permissions on the target backup vault. Requires a backup vault name and an access policy document in JSON format.
      operationId: PutBackupVaultAccessPolicy
      parameters:
        - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Policy:
                description: The backup vault access policy document in JSON format.
                type: string
            type: object
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  '/backup-vaults/{backupVaultName}/notification-configuration':
    delete:
      description: Deletes event notifications for the specified backup vault.
      operationId: DeleteBackupVaultNotifications
      parameters:
        - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    get:
      description: Returns event notifications for the specified backup vault.
      operationId: GetBackupVaultNotifications
      parameters:
        - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBackupVaultNotificationsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Turns on notifications on a backup vault for the specified topic and events.
      operationId: PutBackupVaultNotifications
      parameters:
        - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              BackupVaultEvents:
                description: An array of events that indicate the status of jobs to back up resources to the backup vault.
                items:
                  $ref: '#/definitions/BackupVaultEvent'
                type: array
              SNSTopicArn:
                description: 'The Amazon Resource Name (ARN) that specifies the topic for a backup vault’s events; for example, <code>arn:aws:sns:us-west-2:111122223333:MyVaultTopic</code>.'
                type: string
            required:
              - SNSTopicArn
              - BackupVaultEvents
            type: object
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  '/backup-vaults/{backupVaultName}/recovery-points/':
    get:
      description: Returns detailed information about the recovery points stored in a backup vault.
      operationId: ListRecoveryPointsByBackupVault
      parameters:
        - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
          required: true
          type: string
        - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: Returns only recovery points that match the specified resource Amazon Resource Name (ARN).
          in: query
          name: resourceArn
          required: false
          type: string
        - description: Returns only recovery points that match the specified resource type.
          in: query
          name: resourceType
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
          required: false
          type: string
        - description: Returns only recovery points that match the specified backup plan ID.
          in: query
          name: backupPlanId
          required: false
          type: string
        - description: Returns only recovery points that were created before the specified timestamp.
          format: date-time
          in: query
          name: createdBefore
          required: false
          type: string
        - description: Returns only recovery points that were created after the specified timestamp.
          format: date-time
          in: query
          name: createdAfter
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRecoveryPointsByBackupVaultOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}':
    delete:
      description: Deletes the recovery point specified by a recovery point ID.
      operationId: DeleteRecoveryPoint
      parameters:
        - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
          required: true
          type: string
        - description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
          in: path
          name: recoveryPointArn
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
    get:
      description: 'Returns metadata associated with a recovery point, including ID, status, encryption, and lifecycle.'
      operationId: DescribeRecoveryPoint
      parameters:
        - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
          required: true
          type: string
        - description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
          in: path
          name: recoveryPointArn
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRecoveryPointOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Sets the transition lifecycle of a recovery point.</p> <p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
      operationId: UpdateRecoveryPointLifecycle
      parameters:
        - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
          required: true
          type: string
        - description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
          in: path
          name: recoveryPointArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Lifecycle:
                description: Contains an array of <code>Transition</code> objects specifying how long in days before a recovery point transitions to cold storage or is deleted.
                properties:
                  DeleteAfterDays:
                    $ref: '#/definitions/Long'
                    description: Specifies the number of days after creation that a recovery point is deleted. Must be greater than <code>MoveToColdStorageAfterDays</code>.
                  MoveToColdStorageAfterDays:
                    $ref: '#/definitions/Long'
                    description: Specifies the number of days after creation that a recovery point is moved to cold storage.
                type: object
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateRecoveryPointLifecycleOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  '/backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}/restore-metadata':
    get:
      description: '<p>Returns two sets of metadata key-value pairs. The first set lists the metadata that the recovery point was created with. The second set lists the metadata key-value pairs that are required to restore the recovery point.</p> <p>These sets can be the same, or the restore metadata set can contain different values if the target service to be restored has changed since the recovery point was created and now requires additional or different information in order to be restored.</p>'
      operationId: GetRecoveryPointRestoreMetadata
      parameters:
        - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          in: path
          name: backupVaultName
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
          required: true
          type: string
        - description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
          in: path
          name: recoveryPointArn
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetRecoveryPointRestoreMetadataOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /backup/plans/:
    get:
      description: 'Returns metadata of your saved backup plans, including Amazon Resource Names (ARNs), plan IDs, creation and deletion dates, version IDs, plan names, and creator request IDs.'
      operationId: ListBackupPlans
      parameters:
        - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: A Boolean value with a default value of <code>FALSE</code> that returns deleted backup plans when set to <code>TRUE</code>.
          in: query
          name: includeDeleted
          required: false
          type: boolean
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBackupPlansOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: '<p>Backup plans are documents that contain information that AWS Backup uses to schedule tasks that create recovery points of resources.</p> <p>If you call <code>CreateBackupPlan</code> with a plan that already exists, the existing <code>backupPlanId</code> is returned.</p>'
      operationId: CreateBackupPlan
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              BackupPlan:
                description: 'Contains an optional backup plan display name and an array of <code>BackupRule</code> objects, each of which specifies a backup rule. Each rule in a backup plan is a separate scheduled task and can back up a different selection of AWS resources.'
                properties:
                  BackupPlanName:
                    $ref: '#/definitions/BackupPlanName'
                    description: The display name of a backup plan.
                  Rules:
                    $ref: '#/definitions/BackupRulesInput'
                    description: 'An array of <code>BackupRule</code> objects, each of which specifies a scheduled task that is used to back up a selection of resources.'
                type: object
              BackupPlanTags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: 'To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair. The specified tags are assigned to all backups created with this plan.'
                type: object
              CreatorRequestId:
                description: 'Identifies the request and allows failed requests to be retried without the risk of executing the operation twice. If the request includes a <code>CreatorRequestId</code> that matches an existing backup plan, that plan is returned. This parameter is optional.'
                type: string
            required:
              - BackupPlan
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateBackupPlanOutput'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  '/backup/plans/{backupPlanId}':
    delete:
      description: 'Deletes a backup plan. A backup plan can only be deleted after all associated selections of resources have been deleted. Deleting a backup plan deletes the current version of a backup plan. Previous versions, if any, will still exist.'
      operationId: DeleteBackupPlan
      parameters:
        - description: Uniquely identifies a backup plan.
          in: path
          name: backupPlanId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteBackupPlanOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Replaces the body of a saved backup plan identified by its <code>backupPlanId</code> with the input document in JSON format. The new version is uniquely identified by a <code>VersionId</code>.
      operationId: UpdateBackupPlan
      parameters:
        - description: Uniquely identifies a backup plan.
          in: path
          name: backupPlanId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              BackupPlan:
                description: 'Contains an optional backup plan display name and an array of <code>BackupRule</code> objects, each of which specifies a backup rule. Each rule in a backup plan is a separate scheduled task and can back up a different selection of AWS resources.'
                properties:
                  BackupPlanName:
                    $ref: '#/definitions/BackupPlanName'
                    description: The display name of a backup plan.
                  Rules:
                    $ref: '#/definitions/BackupRulesInput'
                    description: 'An array of <code>BackupRule</code> objects, each of which specifies a scheduled task that is used to back up a selection of resources.'
                type: object
            required:
              - BackupPlan
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateBackupPlanOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  '/backup/plans/{backupPlanId}/':
    get:
      description: 'Returns the body of a backup plan in JSON format, in addition to plan metadata.'
      operationId: GetBackupPlan
      parameters:
        - description: Uniquely identifies a backup plan.
          in: path
          name: backupPlanId
          required: true
          type: string
        - description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version IDs cannot be edited.'
          in: query
          name: versionId
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBackupPlanOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/backup/plans/{backupPlanId}/selections/':
    get:
      description: Returns an array containing metadata of the resources associated with the target backup plan.
      operationId: ListBackupSelections
      parameters:
        - description: Uniquely identifies a backup plan.
          in: path
          name: backupPlanId
          required: true
          type: string
        - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBackupSelectionsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: '<p>Creates a JSON document that specifies a set of resources to assign to a backup plan. Resources can be included by specifying patterns for a <code>ListOfTags</code> and selected <code>Resources</code>. </p> <p>For example, consider the following patterns:</p> <ul> <li> <p> <code>Resources: "arn:aws:ec2:region:account-id:volume/volume-id"</code> </p> </li> <li> <p> <code>ConditionKey:"department"</code> </p> <p> <code>ConditionValue:"finance"</code> </p> <p> <code>ConditionType:"StringEquals"</code> </p> </li> <li> <p> <code>ConditionKey:"importance"</code> </p> <p> <code>ConditionValue:"critical"</code> </p> <p> <code>ConditionType:"StringEquals"</code> </p> </li> </ul> <p>Using these patterns would back up all Amazon Elastic Block Store (Amazon EBS) volumes that are tagged as <code>"department=finance"</code>, <code>"importance=critical"</code>, in addition to an EBS volume with the specified volume Id.</p> <p>Resources and conditions are additive in that all resources that match the pattern are selected. This shouldn''t be confused with a logical AND, where all conditions must match. The matching patterns are logically ''put together using the OR operator. In other words, all patterns that match are selected for backup.</p>'
      operationId: CreateBackupSelection
      parameters:
        - description: Uniquely identifies the backup plan to be associated with the selection of resources.
          in: path
          name: backupPlanId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              BackupSelection:
                description: Used to specify a set of resources to a backup plan.
                properties:
                  IamRoleArn:
                    $ref: '#/definitions/IAMRoleArn'
                    description: 'The ARN of the IAM role that AWS Backup uses to authenticate when restoring the target resource; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
                  ListOfTags:
                    $ref: '#/definitions/ListOfTags'
                    description: 'An array of conditions used to specify a set of resources to assign to a backup plan; for example, <code>"StringEquals": {"ec2:ResourceTag/Department": "accounting"</code>.'
                  Resources:
                    $ref: '#/definitions/ResourceArns'
                    description: 'An array of strings that either contain Amazon Resource Names (ARNs) or match patterns such as "<code>arn:aws:ec2:us-east-1:123456789012:volume/*</code>" of resources to assign to a backup plan.'
                  SelectionName:
                    $ref: '#/definitions/BackupSelectionName'
                    description: The display name of a resource selection document.
                type: object
              CreatorRequestId:
                description: A unique string that identifies the request and allows failed requests to be retried without the risk of executing the operation twice.
                type: string
            required:
              - BackupSelection
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateBackupSelectionOutput'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  '/backup/plans/{backupPlanId}/selections/{selectionId}':
    delete:
      description: Deletes the resource selection associated with a backup plan that is specified by the <code>SelectionId</code>.
      operationId: DeleteBackupSelection
      parameters:
        - description: Uniquely identifies a backup plan.
          in: path
          name: backupPlanId
          required: true
          type: string
        - description: Uniquely identifies the body of a request to assign a set of resources to a backup plan.
          in: path
          name: selectionId
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    get:
      description: Returns selection metadata and a document in JSON format that specifies a list of resources that are associated with a backup plan.
      operationId: GetBackupSelection
      parameters:
        - description: Uniquely identifies a backup plan.
          in: path
          name: backupPlanId
          required: true
          type: string
        - description: Uniquely identifies the body of a request to assign a set of resources to a backup plan.
          in: path
          name: selectionId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBackupSelectionOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/backup/plans/{backupPlanId}/toTemplate/':
    get:
      description: Returns the backup plan that is specified by the plan ID as a backup template.
      operationId: ExportBackupPlanTemplate
      parameters:
        - description: Uniquely identifies a backup plan.
          in: path
          name: backupPlanId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ExportBackupPlanTemplateOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/backup/plans/{backupPlanId}/versions/':
    get:
      description: 'Returns version metadata of your backup plans, including Amazon Resource Names (ARNs), backup plan IDs, creation and deletion dates, plan names, and version IDs.'
      operationId: ListBackupPlanVersions
      parameters:
        - description: Uniquely identifies a backup plan.
          in: path
          name: backupPlanId
          required: true
          type: string
        - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBackupPlanVersionsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /backup/template/json/toPlan:
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns a valid JSON document specifying a backup plan or an error.
      operationId: GetBackupPlanFromJSON
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              BackupPlanTemplateJson:
                description: A customer-supplied backup plan document in JSON format.
                type: string
            required:
              - BackupPlanTemplateJson
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBackupPlanFromJSONOutput'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
  /backup/template/plans:
    get:
      description: 'Returns metadata of your saved backup plan templates, including the template ID, name, and the creation and deletion dates.'
      operationId: ListBackupPlanTemplates
      parameters:
        - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBackupPlanTemplatesOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/backup/template/plans/{templateId}/toPlan':
    get:
      description: Returns the template specified by its <code>templateId</code> as a backup plan.
      operationId: GetBackupPlanFromTemplate
      parameters:
        - description: Uniquely identifies a stored backup plan template.
          in: path
          name: templateId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBackupPlanFromTemplateOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /resources/:
    get:
      description: 'Returns an array of resources successfully backed up by AWS Backup, including the time the resource was saved, an Amazon Resource Name (ARN) of the resource, and a resource type.'
      operationId: ListProtectedResources
      parameters:
        - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProtectedResourcesOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/resources/{resourceArn}':
    get:
      description: 'Returns information about a saved resource, including the last time it was backed-up, its Amazon Resource Name (ARN), and the AWS service type of the saved resource.'
      operationId: DescribeProtectedResource
      parameters:
        - description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.
          in: path
          name: resourceArn
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProtectedResourceOutput'
        '480':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/resources/{resourceArn}/recovery-points/':
    get:
      description: Returns detailed information about recovery points of the type specified by a resource Amazon Resource Name (ARN).
      operationId: ListRecoveryPointsByResource
      parameters:
        - description: An ARN that uniquely identifies a resource. The format of the ARN depends on the resource type.
          in: path
          name: resourceArn
          required: true
          type: string
        - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRecoveryPointsByResourceOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /restore-jobs:
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: '<p>Recovers the saved resource identified by an Amazon Resource Name (ARN). </p> <p>If the resource ARN is included in the request, then the last complete backup of that resource is recovered. If the ARN of a recovery point is supplied, then that recovery point is restored.</p>'
      operationId: StartRestoreJob
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              IamRoleArn:
                description: 'The Amazon Resource Name (ARN) of the IAM role that AWS Backup uses to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
                type: string
              IdempotencyToken:
                description: 'A customer chosen string that can be used to distinguish between calls to <code>StartRestoreJob</code>. Idempotency tokens time out after one hour. Therefore, if you call <code>StartRestoreJob</code> multiple times with the same idempotency token within one hour, AWS Backup recognizes that you are requesting only one restore job and initiates only one. If you change the idempotency token for each call, AWS Backup recognizes that you are requesting to start multiple restores. '
                type: string
              Metadata:
                additionalProperties:
                  $ref: '#/definitions/MetadataValue'
                description: A set of metadata key-value pairs. Lists the metadata that the recovery point was created with.
                type: object
              RecoveryPointArn:
                description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
                type: string
              ResourceType:
                description: '<p>Starts a job to restore a recovery point for one of the following resources:</p> <ul> <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p> <code>SGW</code> for AWS Storage Gateway</p> </li> <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li> <li> <p> <code>DDB</code> for Amazon DynamoDB</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li> </ul>'
                pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
                type: string
            required:
              - RecoveryPointArn
              - Metadata
              - IamRoleArn
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartRestoreJobOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  /restore-jobs/:
    get:
      description: 'Returns a list of jobs that AWS Backup initiated to restore a saved resource, including metadata about the recovery process.'
      operationId: ListRestoreJobs
      parameters:
        - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRestoreJobsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/restore-jobs/{restoreJobId}':
    get:
      description: Returns metadata associated with a restore job that is specified by a job ID.
      operationId: DescribeRestoreJob
      parameters:
        - description: Uniquely identifies the job that restores a recovery point.
          in: path
          name: restoreJobId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRestoreJobOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: DependencyFailureException
          schema:
            $ref: '#/definitions/DependencyFailureException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /supported-resource-types:
    get:
      description: Returns the AWS resource types supported by AWS Backup.
      operationId: GetSupportedResourceTypes
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSupportedResourceTypesOutput'
        '480':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Assigns a set of key-value pairs to a recovery point, backup plan, or backup vault identified by an Amazon Resource Name (ARN).'
      operationId: TagResource
      parameters:
        - description: An ARN that uniquely identifies a resource. The format of the ARN depends on the type of the tagged resource.
          in: path
          name: resourceArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: 'Key-value pairs that are used to help organize your resources. You can assign your own metadata to the resources you create. '
                type: object
            required:
              - Tags
            type: object
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  '/tags/{resourceArn}/':
    get:
      description: 'Returns a list of key-value pairs assigned to a target recovery point, backup plan, or backup vault.'
      operationId: ListTags
      parameters:
        - description: 'An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the type of resource. Valid targets for <code>ListTags</code> are recovery points, backup plans, and backup vaults.'
          in: path
          name: resourceArn
          required: true
          type: string
        - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          in: query
          name: nextToken
          required: false
          type: string
        - description: The maximum number of items to be returned.
          in: query
          maximum: 1000
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/untag/{resourceArn}':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Removes a set of key-value pairs from a recovery point, backup plan, or backup vault identified by an Amazon Resource Name (ARN)'
      operationId: UntagResource
      parameters:
        - description: An ARN that uniquely identifies a resource. The format of the ARN depends on the type of the tagged resource.
          in: path
          name: resourceArn
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              TagKeyList:
                description: A list of keys to identify which key-value tags to remove from a resource.
                items:
                  $ref: '#/definitions/string'
                type: array
            required:
              - TagKeyList
            type: object
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
definitions:
  ARN:
    type: string
  AlreadyExistsException: {}
  BackupJob:
    description: Contains detailed information about a backup job.
    properties:
      BackupJobId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a request to AWS Backup to back up a resource.
      BackupSizeInBytes:
        $ref: '#/definitions/Long'
        description: 'The size, in bytes, of a backup.'
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      BackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      BytesTransferred:
        $ref: '#/definitions/Long'
        description: The size in bytes transferred to a backup vault at the time that the job status was queried.
      CompletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a job to create a backup job is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      CreatedBy:
        $ref: '#/definitions/RecoveryPointCreator'
        description: 'Contains identifying information about the creation of a backup job, including the <code>BackupPlanArn</code>, <code>BackupPlanId</code>, <code>BackupPlanVersion</code>, and <code>BackupRuleId</code> of the backup plan used to create it.'
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a backup job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      ExpectedCompletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a job to back up resources is expected to be completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>ExpectedCompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
      PercentDone:
        $ref: '#/definitions/string'
        description: Contains an estimated percentage complete of a job at the time the job status was queried.
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
      ResourceArn:
        $ref: '#/definitions/ARN'
        description: An ARN that uniquely identifies a resource. The format of the ARN depends on the resource type.
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: 'The type of AWS resource to be backed-up; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.'
      StartBy:
        $ref: '#/definitions/timestamp'
        description: 'Specifies the time in Unix format and Coordinated Universal Time (UTC) when a backup job must be started before it is canceled. The value is calculated by adding the start window to the scheduled time. So if the scheduled time were 6:00 PM and the start window is 2 hours, the <code>StartBy</code> time would be 8:00 PM on the date specified. The value of <code>StartBy</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      State:
        $ref: '#/definitions/BackupJobState'
        description: The current state of a resource recovery point.
      StatusMessage:
        $ref: '#/definitions/string'
        description: A detailed message explaining the status of the job to back up a resource.
    type: object
  BackupJobState:
    enum:
      - CREATED
      - PENDING
      - RUNNING
      - ABORTING
      - ABORTED
      - COMPLETED
      - FAILED
      - EXPIRED
    type: string
  BackupJobsList:
    items:
      $ref: '#/definitions/BackupJob'
    type: array
  BackupPlan:
    description: 'Contains an optional backup plan display name and an array of <code>BackupRule</code> objects, each of which specifies a backup rule. Each rule in a backup plan is a separate scheduled task and can back up a different selection of AWS resources.'
    properties:
      BackupPlanName:
        $ref: '#/definitions/BackupPlanName'
        description: The display name of a backup plan.
      Rules:
        $ref: '#/definitions/BackupRules'
        description: 'An array of <code>BackupRule</code> objects, each of which specifies a scheduled task that is used to back up a selection of resources.'
    required:
      - BackupPlanName
      - Rules
    type: object
  BackupPlanInput:
    description: 'Contains an optional backup plan display name and an array of <code>BackupRule</code> objects, each of which specifies a backup rule. Each rule in a backup plan is a separate scheduled task and can back up a different selection of AWS resources.'
    properties:
      BackupPlanName:
        $ref: '#/definitions/BackupPlanName'
        description: The display name of a backup plan.
      Rules:
        $ref: '#/definitions/BackupRulesInput'
        description: 'An array of <code>BackupRule</code> objects, each of which specifies a scheduled task that is used to back up a selection of resources.'
    required:
      - BackupPlanName
      - Rules
    type: object
  BackupPlanName:
    type: string
  BackupPlanTemplatesList:
    items:
      $ref: '#/definitions/BackupPlanTemplatesListMember'
    type: array
  BackupPlanTemplatesListMember:
    description: An object specifying metadata associated with a backup plan template.
    properties:
      BackupPlanTemplateId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a stored backup plan template.
      BackupPlanTemplateName:
        $ref: '#/definitions/string'
        description: The optional display name of a backup plan template.
    type: object
  BackupPlanVersionsList:
    items:
      $ref: '#/definitions/BackupPlansListMember'
    type: array
  BackupPlansList:
    items:
      $ref: '#/definitions/BackupPlansListMember'
    type: array
  BackupPlansListMember:
    description: Contains metadata about a backup plan.
    properties:
      BackupPlanArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'
      BackupPlanId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a backup plan.
      BackupPlanName:
        $ref: '#/definitions/BackupPlanName'
        description: The display name of a saved backup plan.
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a resource backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      CreatorRequestId:
        $ref: '#/definitions/string'
        description: A unique string that identifies the request and allows failed requests to be retried without the risk of executing the operation twice.
      DeletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a backup plan is deleted, in Unix format and Coordinated Universal Time (UTC). The value of <code>DeletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      LastExecutionDate:
        $ref: '#/definitions/timestamp'
        description: 'The last time a job to back up resources was executed with this rule. A date and time, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastExecutionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      VersionId:
        $ref: '#/definitions/string'
        description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version IDs cannot be edited.'
    type: object
  BackupRule:
    description: Specifies a scheduled task used to back up a selection of resources.
    properties:
      CompletionWindowMinutes:
        $ref: '#/definitions/WindowMinutes'
        description: A value in minutes after a backup job is successfully started before it must be completed or it is canceled by AWS Backup. This value is optional.
      Lifecycle:
        $ref: '#/definitions/Lifecycle'
        description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
      RecoveryPointTags:
        $ref: '#/definitions/Tags'
        description: An array of key-value pair strings that are assigned to resources that are associated with this rule when restored from backup.
      RuleId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a rule that is used to schedule the backup of a selection of resources.
      RuleName:
        $ref: '#/definitions/BackupRuleName'
        description: An optional display name for a backup rule.
      ScheduleExpression:
        $ref: '#/definitions/CronExpression'
        description: A CRON expression specifying when AWS Backup initiates a backup job.
      StartWindowMinutes:
        $ref: '#/definitions/WindowMinutes'
        description: An optional value that specifies a period of time in minutes after a backup is scheduled before a job is canceled if it doesn't start successfully.
      TargetBackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
    required:
      - RuleName
      - TargetBackupVaultName
    type: object
  BackupRuleInput:
    description: Specifies a scheduled task used to back up a selection of resources.
    properties:
      CompletionWindowMinutes:
        $ref: '#/definitions/WindowMinutes'
        description: The amount of time AWS Backup attempts a backup before canceling the job and returning an error.
      Lifecycle:
        $ref: '#/definitions/Lifecycle'
        description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup will transition and expire backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days”. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
      RecoveryPointTags:
        $ref: '#/definitions/Tags'
        description: 'To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair.'
      RuleName:
        $ref: '#/definitions/BackupRuleName'
        description: '&gt;An optional display name for a backup rule.'
      ScheduleExpression:
        $ref: '#/definitions/CronExpression'
        description: A CRON expression specifying when AWS Backup initiates a backup job.
      StartWindowMinutes:
        $ref: '#/definitions/WindowMinutes'
        description: The amount of time in minutes before beginning a backup.
      TargetBackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
    required:
      - RuleName
      - TargetBackupVaultName
    type: object
  BackupRuleName:
    pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
    type: string
  BackupRules:
    items:
      $ref: '#/definitions/BackupRule'
    type: array
  BackupRulesInput:
    items:
      $ref: '#/definitions/BackupRuleInput'
    type: array
  BackupSelection:
    description: Used to specify a set of resources to a backup plan.
    properties:
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'The ARN of the IAM role that AWS Backup uses to authenticate when restoring the target resource; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
      ListOfTags:
        $ref: '#/definitions/ListOfTags'
        description: 'An array of conditions used to specify a set of resources to assign to a backup plan; for example, <code>"StringEquals": {"ec2:ResourceTag/Department": "accounting"</code>.'
      Resources:
        $ref: '#/definitions/ResourceArns'
        description: 'An array of strings that either contain Amazon Resource Names (ARNs) or match patterns such as "<code>arn:aws:ec2:us-east-1:123456789012:volume/*</code>" of resources to assign to a backup plan.'
      SelectionName:
        $ref: '#/definitions/BackupSelectionName'
        description: The display name of a resource selection document.
    required:
      - SelectionName
      - IamRoleArn
    type: object
  BackupSelectionName:
    pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
    type: string
  BackupSelectionsList:
    items:
      $ref: '#/definitions/BackupSelectionsListMember'
    type: array
  BackupSelectionsListMember:
    description: Contains metadata about a <code>BackupSelection</code> object.
    properties:
      BackupPlanId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a backup plan.
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      CreatorRequestId:
        $ref: '#/definitions/string'
        description: A unique string that identifies the request and allows failed requests to be retried without the risk of executing the operation twice.
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'Specifies the IAM role Amazon Resource Name (ARN) to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
      SelectionId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a request to assign a set of resources to a backup plan.
      SelectionName:
        $ref: '#/definitions/BackupSelectionName'
        description: The display name of a resource selection document.
    type: object
  BackupVaultEvent:
    enum:
      - BACKUP_JOB_STARTED
      - BACKUP_JOB_COMPLETED
      - RESTORE_JOB_STARTED
      - RESTORE_JOB_COMPLETED
      - RECOVERY_POINT_MODIFIED
      - BACKUP_PLAN_CREATED
      - BACKUP_PLAN_MODIFIED
    type: string
  BackupVaultEvents:
    items:
      $ref: '#/definitions/BackupVaultEvent'
    type: array
  BackupVaultList:
    items:
      $ref: '#/definitions/BackupVaultListMember'
    type: array
  BackupVaultListMember:
    description: Contains metadata about a backup vault.
    properties:
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      BackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a resource backup is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      CreatorRequestId:
        $ref: '#/definitions/string'
        description: A unique string that identifies the request and allows failed requests to be retried without the risk of executing the operation twice.
      EncryptionKeyArn:
        $ref: '#/definitions/ARN'
        description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'
      NumberOfRecoveryPoints:
        $ref: '#/definitions/long'
        description: The number of recovery points that are stored in a backup vault.
    type: object
  BackupVaultName:
    pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
    type: string
  Boolean:
    type: boolean
  CalculatedLifecycle:
    description: '<p>Contains <code>DeleteAt</code> and <code>MoveToColdStorageAt</code> timestamps, which are used to specify a lifecycle for a recovery point.</p> <p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
    properties:
      DeleteAt:
        $ref: '#/definitions/timestamp'
        description: A timestamp that specifies when to delete a recovery point.
      MoveToColdStorageAt:
        $ref: '#/definitions/timestamp'
        description: A timestamp that specifies when to transition a recovery point to cold storage.
    type: object
  Condition:
    description: 'Contains an array of triplets made up of a condition type (such as <code>StringEquals</code>), a key, and a value. Conditions are used to filter resources in a selection that is assigned to a backup plan.'
    properties:
      ConditionKey:
        $ref: '#/definitions/ConditionKey'
        description: 'The key in a key-value pair. For example, in <code>"ec2:ResourceTag/Department": "accounting"</code>, <code>"ec2:ResourceTag/Department"</code> is the key.'
      ConditionType:
        $ref: '#/definitions/ConditionType'
        description: 'An operation, such as <code>StringEquals</code>, that is applied to a key-value pair used to filter resources in a selection.'
      ConditionValue:
        $ref: '#/definitions/ConditionValue'
        description: 'The value in a key-value pair. For example, in <code>"ec2:ResourceTag/Department": "accounting"</code>, <code>"accounting"</code> is the value.'
    required:
      - ConditionType
      - ConditionKey
      - ConditionValue
    type: object
  ConditionKey:
    type: string
  ConditionType:
    enum:
      - STRINGEQUALS
    type: string
  ConditionValue:
    type: string
  CreateBackupPlanInput:
    properties:
      BackupPlan:
        $ref: '#/definitions/BackupPlanInput'
        description: Specifies the body of a backup plan. Includes a <code>BackupPlanName</code> and one or more sets of <code>Rules</code>.
      BackupPlanTags:
        $ref: '#/definitions/Tags'
        description: 'To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair. The specified tags are assigned to all backups created with this plan.'
      CreatorRequestId:
        $ref: '#/definitions/string'
        description: 'Identifies the request and allows failed requests to be retried without the risk of executing the operation twice. If the request includes a <code>CreatorRequestId</code> that matches an existing backup plan, that plan is returned. This parameter is optional.'
    required:
      - BackupPlan
    type: object
  CreateBackupPlanOutput:
    properties:
      BackupPlanArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'
      BackupPlanId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a backup plan.
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      VersionId:
        $ref: '#/definitions/string'
        description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1024 bytes long. They cannot be edited.'
    type: object
  CreateBackupSelectionInput:
    properties:
      BackupSelection:
        $ref: '#/definitions/BackupSelection'
        description: '<p>Specifies the body of a request to assign a set of resources to a backup plan.</p> <p>It includes an array of resources, an optional array of patterns to exclude resources, an optional role to provide access to the AWS service the resource belongs to, and an optional array of tags used to identify a set of resources.</p>'
      CreatorRequestId:
        $ref: '#/definitions/string'
        description: A unique string that identifies the request and allows failed requests to be retried without the risk of executing the operation twice.
    required:
      - BackupSelection
    type: object
  CreateBackupSelectionOutput:
    properties:
      BackupPlanId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a backup plan.
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a backup selection is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      SelectionId:
        $ref: '#/definitions/string'
        description: Uniquely identifies the body of a request to assign a set of resources to a backup plan.
    type: object
  CreateBackupVaultInput:
    properties:
      BackupVaultTags:
        $ref: '#/definitions/Tags'
        description: Metadata that you can assign to help organize the resources that you create. Each tag is a key-value pair.
      CreatorRequestId:
        $ref: '#/definitions/string'
        description: A unique string that identifies the request and allows failed requests to be retried without the risk of executing the operation twice.
      EncryptionKeyArn:
        $ref: '#/definitions/ARN'
        description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'
    type: object
  CreateBackupVaultOutput:
    properties:
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      BackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a backup vault is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
    type: object
  CronExpression:
    type: string
  DeleteBackupPlanInput:
    properties: {}
    type: object
  DeleteBackupPlanOutput:
    properties:
      BackupPlanArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'
      BackupPlanId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a backup plan.
      DeletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a backup plan is deleted, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      VersionId:
        $ref: '#/definitions/string'
        description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version Ids cannot be edited.'
    type: object
  DeleteBackupSelectionInput:
    properties: {}
    type: object
  DeleteBackupVaultAccessPolicyInput:
    properties: {}
    type: object
  DeleteBackupVaultInput:
    properties: {}
    type: object
  DeleteBackupVaultNotificationsInput:
    properties: {}
    type: object
  DeleteRecoveryPointInput:
    properties: {}
    type: object
  DependencyFailureException: {}
  DescribeBackupJobInput:
    properties: {}
    type: object
  DescribeBackupJobOutput:
    properties:
      BackupJobId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a request to AWS Backup to back up a resource.
      BackupSizeInBytes:
        $ref: '#/definitions/Long'
        description: 'The size, in bytes, of a backup.'
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      BackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      BytesTransferred:
        $ref: '#/definitions/Long'
        description: The size in bytes transferred to a backup vault at the time that the job status was queried.
      CompletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a job to create a backup job is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      CreatedBy:
        $ref: '#/definitions/RecoveryPointCreator'
        description: 'Contains identifying information about the creation of a backup job, including the <code>BackupPlanArn</code>, <code>BackupPlanId</code>, <code>BackupPlanVersion</code>, and <code>BackupRuleId</code> of the backup plan that is used to create it.'
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a backup job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      ExpectedCompletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a job to back up resources is expected to be completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>ExpectedCompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
      PercentDone:
        $ref: '#/definitions/string'
        description: Contains an estimated percentage that is complete of a job at the time the job status was queried.
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
      ResourceArn:
        $ref: '#/definitions/ARN'
        description: An ARN that uniquely identifies a saved resource. The format of the ARN depends on the resource type.
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: 'The type of AWS resource to be backed-up; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.'
      StartBy:
        $ref: '#/definitions/timestamp'
        description: 'Specifies the time in Unix format and Coordinated Universal Time (UTC) when a backup job must be started before it is canceled. The value is calculated by adding the start window to the scheduled time. So if the scheduled time were 6:00 PM and the start window is 2 hours, the <code>StartBy</code> time would be 8:00 PM on the date specified. The value of <code>StartBy</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      State:
        $ref: '#/definitions/BackupJobState'
        description: The current state of a resource recovery point.
      StatusMessage:
        $ref: '#/definitions/string'
        description: A detailed message explaining the status of the job to back up a resource.
    type: object
  DescribeBackupVaultInput:
    properties: {}
    type: object
  DescribeBackupVaultOutput:
    properties:
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      BackupVaultName:
        $ref: '#/definitions/string'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a backup vault is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      CreatorRequestId:
        $ref: '#/definitions/string'
        description: A unique string that identifies the request and allows failed requests to be retried without the risk of executing the operation twice.
      EncryptionKeyArn:
        $ref: '#/definitions/ARN'
        description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'
      NumberOfRecoveryPoints:
        $ref: '#/definitions/long'
        description: The number of recovery points that are stored in a backup vault.
    type: object
  DescribeProtectedResourceInput:
    properties: {}
    type: object
  DescribeProtectedResourceOutput:
    properties:
      LastBackupTime:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a resource was last backed up, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastBackupTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      ResourceArn:
        $ref: '#/definitions/ARN'
        description: An ARN that uniquely identifies a resource. The format of the ARN depends on the resource type.
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: 'The type of AWS resource saved as a recovery point; for example, an EBS volume or an Amazon RDS database.'
    type: object
  DescribeRecoveryPointInput:
    properties: {}
    type: object
  DescribeRecoveryPointOutput:
    properties:
      BackupSizeInBytes:
        $ref: '#/definitions/Long'
        description: 'The size, in bytes, of a backup.'
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      BackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      CalculatedLifecycle:
        $ref: '#/definitions/CalculatedLifecycle'
        description: A <code>CalculatedLifecycle</code> object containing <code>DeleteAt</code> and <code>MoveToColdStorageAt</code> timestamps.
      CompletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a job to create a recovery point is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      CreatedBy:
        $ref: '#/definitions/RecoveryPointCreator'
        description: 'Contains identifying information about the creation of a recovery point, including the <code>BackupPlanArn</code>, <code>BackupPlanId</code>, <code>BackupPlanVersion</code>, and <code>BackupRuleId</code> of the backup plan used to create it.'
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a recovery point is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      EncryptionKeyArn:
        $ref: '#/definitions/ARN'
        description: 'The server-side encryption key used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
      IsEncrypted:
        $ref: '#/definitions/boolean'
        description: 'A Boolean value that is returned as <code>TRUE</code> if the specified recovery point is encrypted, or <code>FALSE</code> if the recovery point is not encrypted.'
      LastRestoreTime:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a recovery point was last restored, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastRestoreTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      Lifecycle:
        $ref: '#/definitions/Lifecycle'
        description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups that are transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
      ResourceArn:
        $ref: '#/definitions/ARN'
        description: An ARN that uniquely identifies a saved resource. The format of the ARN depends on the resource type.
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: 'The type of AWS resource to save as a recovery point; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.'
      Status:
        $ref: '#/definitions/RecoveryPointStatus'
        description: <p>A status code specifying the state of the recovery point.</p> <note> <p>A partial status indicates that the recovery point was not successfully re-created and must be retried.</p> </note>
      StorageClass:
        $ref: '#/definitions/StorageClass'
        description: Specifies the storage class of the recovery point. Valid values are <code>WARM</code> or <code>COLD</code>.
    type: object
  DescribeRestoreJobInput:
    properties: {}
    type: object
  DescribeRestoreJobOutput:
    properties:
      BackupSizeInBytes:
        $ref: '#/definitions/Long'
        description: 'The size, in bytes, of the restored resource.'
      CompletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a job to restore a recovery point is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      CreatedResourceArn:
        $ref: '#/definitions/ARN'
        description: An Amazon Resource Name (ARN) that uniquely identifies a resource whose recovery point is being restored. The format of the ARN depends on the resource type of the backed-up resource.
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a restore job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      ExpectedCompletionTimeMinutes:
        $ref: '#/definitions/Long'
        description: The amount of time in minutes that a job restoring a recovery point is expected to take.
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
      PercentDone:
        $ref: '#/definitions/string'
        description: Contains an estimated percentage that is complete of a job at the time the job status was queried.
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
      RestoreJobId:
        $ref: '#/definitions/string'
        description: Uniquely identifies the job that restores a recovery point.
      Status:
        $ref: '#/definitions/RestoreJobStatus'
        description: Status code specifying the state of the job that is initiated by AWS Backup to restore a recovery point.
      StatusMessage:
        $ref: '#/definitions/string'
        description: A detailed message explaining the status of a job to restore a recovery point.
    type: object
  ExportBackupPlanTemplateInput:
    properties: {}
    type: object
  ExportBackupPlanTemplateOutput:
    properties:
      BackupPlanTemplateJson:
        $ref: '#/definitions/string'
        description: <p>The body of a backup plan template in JSON format.</p> <note> <p>This is a signed JSON document that cannot be modified before being passed to <code>GetBackupPlanFromJSON.</code> </p> </note>
    type: object
  GetBackupPlanFromJSONInput:
    properties:
      BackupPlanTemplateJson:
        $ref: '#/definitions/string'
        description: A customer-supplied backup plan document in JSON format.
    required:
      - BackupPlanTemplateJson
    type: object
  GetBackupPlanFromJSONOutput:
    properties:
      BackupPlan:
        $ref: '#/definitions/BackupPlan'
        description: Specifies the body of a backup plan. Includes a <code>BackupPlanName</code> and one or more sets of <code>Rules</code>.
    type: object
  GetBackupPlanFromTemplateInput:
    properties: {}
    type: object
  GetBackupPlanFromTemplateOutput:
    properties:
      BackupPlanDocument:
        $ref: '#/definitions/BackupPlan'
        description: 'Returns the body of a backup plan based on the target template, including the name, rules, and backup vault of the plan.'
    type: object
  GetBackupPlanInput:
    properties: {}
    type: object
  GetBackupPlanOutput:
    properties:
      BackupPlan:
        $ref: '#/definitions/BackupPlan'
        description: Specifies the body of a backup plan. Includes a <code>BackupPlanName</code> and one or more sets of <code>Rules</code>.
      BackupPlanArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'
      BackupPlanId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a backup plan.
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      CreatorRequestId:
        $ref: '#/definitions/string'
        description: A unique string that identifies the request and allows failed requests to be retried without the risk of executing the operation twice.
      DeletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a backup plan is deleted, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      LastExecutionDate:
        $ref: '#/definitions/timestamp'
        description: 'The last time a job to back up resources was executed with this backup plan. A date and time, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastExecutionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      VersionId:
        $ref: '#/definitions/string'
        description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version IDs cannot be edited.'
    type: object
  GetBackupSelectionInput:
    properties: {}
    type: object
  GetBackupSelectionOutput:
    properties:
      BackupPlanId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a backup plan.
      BackupSelection:
        $ref: '#/definitions/BackupSelection'
        description: '<p>Specifies the body of a request to assign a set of resources to a backup plan.</p> <p>It includes an array of resources, an optional array of patterns to exclude resources, an optional role to provide access to the AWS service that the resource belongs to, and an optional array of tags used to identify a set of resources.</p>'
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a backup selection is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      CreatorRequestId:
        $ref: '#/definitions/string'
        description: A unique string that identifies the request and allows failed requests to be retried without the risk of executing the operation twice.
      SelectionId:
        $ref: '#/definitions/string'
        description: Uniquely identifies the body of a request to assign a set of resources to a backup plan.
    type: object
  GetBackupVaultAccessPolicyInput:
    properties: {}
    type: object
  GetBackupVaultAccessPolicyOutput:
    properties:
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      BackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      Policy:
        $ref: '#/definitions/IAMPolicy'
        description: The backup vault access policy document in JSON format.
    type: object
  GetBackupVaultNotificationsInput:
    properties: {}
    type: object
  GetBackupVaultNotificationsOutput:
    properties:
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      BackupVaultEvents:
        $ref: '#/definitions/BackupVaultEvents'
        description: An array of events that indicate the status of jobs to back up resources to the backup vault.
      BackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      SNSTopicArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies an Amazon Simple Notification Service (Amazon SNS) topic; for example, <code>arn:aws:sns:us-west-2:111122223333:MyTopic</code>.'
    type: object
  GetRecoveryPointRestoreMetadataInput:
    properties: {}
    type: object
  GetRecoveryPointRestoreMetadataOutput:
    properties:
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
      RestoreMetadata:
        $ref: '#/definitions/Metadata'
        description: A set of metadata key-value pairs that lists the metadata key-value pairs that are required to restore the recovery point.
    type: object
  GetSupportedResourceTypesOutput:
    properties:
      ResourceTypes:
        $ref: '#/definitions/ResourceTypes'
        description: '<p>Contains a string with the supported AWS resource types:</p> <ul> <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p> <code>SGW</code> for AWS Storage Gateway</p> </li> <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li> <li> <p> <code>DDB</code> for Amazon DynamoDB</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li> </ul>'
    type: object
  IAMPolicy:
    type: string
  IAMRoleArn:
    type: string
  InvalidParameterValueException: {}
  InvalidRequestException: {}
  Lifecycle:
    description: Contains an array of <code>Transition</code> objects specifying how long in days before a recovery point transitions to cold storage or is deleted.
    properties:
      DeleteAfterDays:
        $ref: '#/definitions/Long'
        description: Specifies the number of days after creation that a recovery point is deleted. Must be greater than <code>MoveToColdStorageAfterDays</code>.
      MoveToColdStorageAfterDays:
        $ref: '#/definitions/Long'
        description: Specifies the number of days after creation that a recovery point is moved to cold storage.
    type: object
  LimitExceededException: {}
  ListBackupJobsInput:
    properties: {}
    type: object
  ListBackupJobsOutput:
    properties:
      BackupJobs:
        $ref: '#/definitions/BackupJobsList'
        description: An array of structures containing metadata about your backup jobs returned in JSON format.
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
    type: object
  ListBackupPlanTemplatesInput:
    properties: {}
    type: object
  ListBackupPlanTemplatesOutput:
    properties:
      BackupPlanTemplatesList:
        $ref: '#/definitions/BackupPlanTemplatesList'
        description: An array of template list items containing metadata about your saved templates.
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
    type: object
  ListBackupPlanVersionsInput:
    properties: {}
    type: object
  ListBackupPlanVersionsOutput:
    properties:
      BackupPlanVersionsList:
        $ref: '#/definitions/BackupPlanVersionsList'
        description: An array of version list items containing metadata about your backup plans.
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
    type: object
  ListBackupPlansInput:
    properties: {}
    type: object
  ListBackupPlansOutput:
    properties:
      BackupPlansList:
        $ref: '#/definitions/BackupPlansList'
        description: An array of backup plan list items containing metadata about your saved backup plans.
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
    type: object
  ListBackupSelectionsInput:
    properties: {}
    type: object
  ListBackupSelectionsOutput:
    properties:
      BackupSelectionsList:
        $ref: '#/definitions/BackupSelectionsList'
        description: An array of backup selection list items containing metadata about each resource in the list.
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
    type: object
  ListBackupVaultsInput:
    properties: {}
    type: object
  ListBackupVaultsOutput:
    properties:
      BackupVaultList:
        $ref: '#/definitions/BackupVaultList'
        description: 'An array of backup vault list members containing vault metadata, including Amazon Resource Name (ARN), display name, creation date, number of saved recovery points, and encryption information if the resources saved in the backup vault are encrypted.'
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
    type: object
  ListOfTags:
    items:
      $ref: '#/definitions/Condition'
    type: array
  ListProtectedResourcesInput:
    properties: {}
    type: object
  ListProtectedResourcesOutput:
    properties:
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
      Results:
        $ref: '#/definitions/ProtectedResourcesList'
        description: 'An array of resources successfully backed up by AWS Backup including the time the resource was saved, an Amazon Resource Name (ARN) of the resource, and a resource type.'
    type: object
  ListRecoveryPointsByBackupVaultInput:
    properties: {}
    type: object
  ListRecoveryPointsByBackupVaultOutput:
    properties:
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
      RecoveryPoints:
        $ref: '#/definitions/RecoveryPointByBackupVaultList'
        description: An array of objects that contain detailed information about recovery points saved in a backup vault.
    type: object
  ListRecoveryPointsByResourceInput:
    properties: {}
    type: object
  ListRecoveryPointsByResourceOutput:
    properties:
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
      RecoveryPoints:
        $ref: '#/definitions/RecoveryPointByResourceList'
        description: An array of objects that contain detailed information about recovery points of the specified resource type.
    type: object
  ListRestoreJobsInput:
    properties: {}
    type: object
  ListRestoreJobsOutput:
    properties:
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
      RestoreJobs:
        $ref: '#/definitions/RestoreJobsList'
        description: An array of objects that contain detailed information about jobs to restore saved resources.
    type: object
  ListTagsInput:
    properties: {}
    type: object
  ListTagsOutput:
    properties:
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
      Tags:
        $ref: '#/definitions/Tags'
        description: 'To help organize your resources, you can assign your own metadata to the resources you create. Each tag is a key-value pair.'
    type: object
  Long:
    type: integer
  MaxResults:
    maximum: 1000
    minimum: 1
    type: integer
  Metadata:
    additionalProperties:
      $ref: '#/definitions/MetadataValue'
    type: object
  MetadataKey:
    type: string
  MetadataValue:
    type: string
  MissingParameterValueException: {}
  ProtectedResource:
    description: A structure that contains information about a backed-up resource.
    properties:
      LastBackupTime:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a resource was last backed up, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastBackupTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      ResourceArn:
        $ref: '#/definitions/ARN'
        description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: 'The type of AWS resource; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.'
    type: object
  ProtectedResourcesList:
    items:
      $ref: '#/definitions/ProtectedResource'
    type: array
  PutBackupVaultAccessPolicyInput:
    properties:
      Policy:
        $ref: '#/definitions/IAMPolicy'
        description: The backup vault access policy document in JSON format.
    type: object
  PutBackupVaultNotificationsInput:
    properties:
      BackupVaultEvents:
        $ref: '#/definitions/BackupVaultEvents'
        description: An array of events that indicate the status of jobs to back up resources to the backup vault.
      SNSTopicArn:
        $ref: '#/definitions/ARN'
        description: 'The Amazon Resource Name (ARN) that specifies the topic for a backup vault’s events; for example, <code>arn:aws:sns:us-west-2:111122223333:MyVaultTopic</code>.'
    required:
      - SNSTopicArn
      - BackupVaultEvents
    type: object
  RecoveryPointByBackupVault:
    description: Contains detailed information about the recovery points stored in a backup vault.
    properties:
      BackupSizeInBytes:
        $ref: '#/definitions/Long'
        description: 'The size, in bytes, of a backup.'
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      BackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      CalculatedLifecycle:
        $ref: '#/definitions/CalculatedLifecycle'
        description: A <code>CalculatedLifecycle</code> object containing <code>DeleteAt</code> and <code>MoveToColdStorageAt</code> timestamps.
      CompletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a job to restore a recovery point is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      CreatedBy:
        $ref: '#/definitions/RecoveryPointCreator'
        description: 'Contains identifying information about the creation of a recovery point, including the <code>BackupPlanArn</code>, <code>BackupPlanId</code>, <code>BackupPlanVersion</code>, and <code>BackupRuleId</code> of the backup plan that is used to create it.'
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a recovery point is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      EncryptionKeyArn:
        $ref: '#/definitions/ARN'
        description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
      IsEncrypted:
        $ref: '#/definitions/boolean'
        description: 'A Boolean value that is returned as <code>TRUE</code> if the specified recovery point is encrypted, or <code>FALSE</code> if the recovery point is not encrypted.'
      LastRestoreTime:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a recovery point was last restored, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastRestoreTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      Lifecycle:
        $ref: '#/definitions/Lifecycle'
        description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
      ResourceArn:
        $ref: '#/definitions/ARN'
        description: An ARN that uniquely identifies a resource. The format of the ARN depends on the resource type.
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: 'The type of AWS resource saved as a recovery point; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.'
      Status:
        $ref: '#/definitions/RecoveryPointStatus'
        description: A status code specifying the state of the recovery point.
    type: object
  RecoveryPointByBackupVaultList:
    items:
      $ref: '#/definitions/RecoveryPointByBackupVault'
    type: array
  RecoveryPointByResource:
    description: Contains detailed information about a saved recovery point.
    properties:
      BackupSizeBytes:
        $ref: '#/definitions/Long'
        description: 'The size, in bytes, of a backup.'
      BackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a recovery point is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      EncryptionKeyArn:
        $ref: '#/definitions/ARN'
        description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
      Status:
        $ref: '#/definitions/RecoveryPointStatus'
        description: A status code specifying the state of the recovery point.
    type: object
  RecoveryPointByResourceList:
    items:
      $ref: '#/definitions/RecoveryPointByResource'
    type: array
  RecoveryPointCreator:
    description: Contains information about the backup plan and rule that AWS Backup used to initiate the recovery point backup.
    properties:
      BackupPlanArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'
      BackupPlanId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a backup plan.
      BackupPlanVersion:
        $ref: '#/definitions/string'
        description: 'Version IDs are unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. They cannot be edited.'
      BackupRuleId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a rule used to schedule the backup of a selection of resources.
    type: object
  RecoveryPointStatus:
    enum:
      - COMPLETED
      - PARTIAL
      - DELETING
      - EXPIRED
    type: string
  ResourceArns:
    items:
      $ref: '#/definitions/ARN'
    type: array
  ResourceNotFoundException: {}
  ResourceType:
    pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
    type: string
  ResourceTypes:
    items:
      $ref: '#/definitions/ResourceType'
    type: array
  RestoreJobId:
    type: string
  RestoreJobStatus:
    enum:
      - PENDING
      - RUNNING
      - COMPLETED
      - ABORTED
      - FAILED
    type: string
  RestoreJobsList:
    items:
      $ref: '#/definitions/RestoreJobsListMember'
    type: array
  RestoreJobsListMember:
    description: Contains metadata about a restore job.
    properties:
      BackupSizeInBytes:
        $ref: '#/definitions/Long'
        description: 'The size, in bytes, of the restored resource.'
      CompletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a job to restore a recovery point is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      CreatedResourceArn:
        $ref: '#/definitions/ARN'
        description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a restore job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      ExpectedCompletionTimeMinutes:
        $ref: '#/definitions/Long'
        description: The amount of time in minutes that a job restoring a recovery point is expected to take.
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
      PercentDone:
        $ref: '#/definitions/string'
        description: Contains an estimated percentage complete of a job at the time the job status was queried.
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
      RestoreJobId:
        $ref: '#/definitions/string'
        description: Uniquely identifies the job that restores a recovery point.
      Status:
        $ref: '#/definitions/RestoreJobStatus'
        description: A status code specifying the state of the job initiated by AWS Backup to restore a recovery point.
      StatusMessage:
        $ref: '#/definitions/string'
        description: A detailed message explaining the status of the job to restore a recovery point.
    type: object
  ServiceUnavailableException: {}
  StartBackupJobInput:
    properties:
      BackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      CompleteWindowMinutes:
        $ref: '#/definitions/WindowMinutes'
        description: The amount of time AWS Backup attempts a backup before canceling the job and returning an error.
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
      IdempotencyToken:
        $ref: '#/definitions/string'
        description: 'A customer chosen string that can be used to distinguish between calls to <code>StartBackupJob</code>. Idempotency tokens time out after one hour. Therefore, if you call <code>StartBackupJob</code> multiple times with the same idempotency token within one hour, AWS Backup recognizes that you are requesting only one backup job and initiates only one. If you change the idempotency token for each call, AWS Backup recognizes that you are requesting to start multiple backups.'
      Lifecycle:
        $ref: '#/definitions/Lifecycle'
        description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup will transition and expire backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
      RecoveryPointTags:
        $ref: '#/definitions/Tags'
        description: 'To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair.'
      ResourceArn:
        $ref: '#/definitions/ARN'
        description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.
      StartWindowMinutes:
        $ref: '#/definitions/WindowMinutes'
        description: The amount of time in minutes before beginning a backup.
    required:
      - BackupVaultName
      - ResourceArn
      - IamRoleArn
    type: object
  StartBackupJobOutput:
    properties:
      BackupJobId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a request to AWS Backup to back up a resource.
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a backup job is started, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
    type: object
  StartRestoreJobInput:
    properties:
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'The Amazon Resource Name (ARN) of the IAM role that AWS Backup uses to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
      IdempotencyToken:
        $ref: '#/definitions/string'
        description: 'A customer chosen string that can be used to distinguish between calls to <code>StartRestoreJob</code>. Idempotency tokens time out after one hour. Therefore, if you call <code>StartRestoreJob</code> multiple times with the same idempotency token within one hour, AWS Backup recognizes that you are requesting only one restore job and initiates only one. If you change the idempotency token for each call, AWS Backup recognizes that you are requesting to start multiple restores. '
      Metadata:
        $ref: '#/definitions/Metadata'
        description: A set of metadata key-value pairs. Lists the metadata that the recovery point was created with.
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: '<p>Starts a job to restore a recovery point for one of the following resources:</p> <ul> <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p> <code>SGW</code> for AWS Storage Gateway</p> </li> <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li> <li> <p> <code>DDB</code> for Amazon DynamoDB</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li> </ul>'
    required:
      - RecoveryPointArn
      - Metadata
      - IamRoleArn
    type: object
  StartRestoreJobOutput:
    properties:
      RestoreJobId:
        $ref: '#/definitions/RestoreJobId'
        description: Uniquely identifies the job that restores a recovery point.
    type: object
  StopBackupJobInput:
    properties: {}
    type: object
  StorageClass:
    enum:
      - WARM
      - COLD
      - DELETED
    type: string
  TagKey:
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/string'
    type: array
  TagResourceInput:
    properties:
      Tags:
        $ref: '#/definitions/Tags'
        description: 'Key-value pairs that are used to help organize your resources. You can assign your own metadata to the resources you create. '
    required:
      - Tags
    type: object
  TagValue:
    type: string
  Tags:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    type: object
  UntagResourceInput:
    properties:
      TagKeyList:
        $ref: '#/definitions/TagKeyList'
        description: A list of keys to identify which key-value tags to remove from a resource.
    required:
      - TagKeyList
    type: object
  UpdateBackupPlanInput:
    properties:
      BackupPlan:
        $ref: '#/definitions/BackupPlanInput'
        description: Specifies the body of a backup plan. Includes a <code>BackupPlanName</code> and one or more sets of <code>Rules</code>.
    required:
      - BackupPlan
    type: object
  UpdateBackupPlanOutput:
    properties:
      BackupPlanArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'
      BackupPlanId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a backup plan.
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a backup plan is updated, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      VersionId:
        $ref: '#/definitions/string'
        description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version Ids cannot be edited.'
    type: object
  UpdateRecoveryPointLifecycleInput:
    properties:
      Lifecycle:
        $ref: '#/definitions/Lifecycle'
        description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
    type: object
  UpdateRecoveryPointLifecycleOutput:
    properties:
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      CalculatedLifecycle:
        $ref: '#/definitions/CalculatedLifecycle'
        description: A <code>CalculatedLifecycle</code> object containing <code>DeleteAt</code> and <code>MoveToColdStorageAt</code> timestamps.
      Lifecycle:
        $ref: '#/definitions/Lifecycle'
        description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
    type: object
  WindowMinutes:
    type: integer
  boolean:
    type: boolean
  long:
    type: integer
  string:
    type: string
  timestamp:
    format: date-time
    type: string
x-servers:
  - description: The AWS Backup multi-region endpoint
    url: 'http://backup.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The AWS Backup multi-region endpoint
    url: 'https://backup.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The AWS Backup endpoint for China (Beijing) and China (Ningxia)
    url: 'http://backup.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
  - description: The AWS Backup endpoint for China (Beijing) and China (Ningxia)
    url: 'https://backup.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
