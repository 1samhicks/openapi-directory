swagger: '2.0'
schemes:
  - https
  - http
host: monitoring.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: '<p>Amazon CloudWatch monitors your Amazon Web Services (AWS) resources and the applications you run on AWS in real time. You can use CloudWatch to collect and track metrics, which are the variables you want to measure for your resources and applications.</p> <p>CloudWatch alarms send notifications or automatically change the resources you are monitoring based on rules that you define. For example, you can monitor the CPU usage and disk reads and writes of your Amazon EC2 instances. Then, use this data to determine whether you should launch additional instances to handle increased load. You can also use this data to stop under-used instances to save money.</p> <p>In addition to monitoring the built-in metrics that come with AWS, you can monitor your own custom metrics. With CloudWatch, you gain system-wide visibility into resource utilization, application performance, and operational health.</p>'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon CloudWatch
  version: '2010-08-01'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/monitoring-2010-08-01.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: monitoring
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/monitoring/'
consumes:
  - text/xml
produces:
  - text/xml
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  '/#Action=DeleteAlarms':
    get:
      description: 'Deletes the specified alarms. You can delete up to 50 alarms in one operation. In the event of an error, no alarms are deleted.'
      operationId: GET DeleteAlarms
      parameters:
        - description: The alarms to be deleted.
          in: query
          items:
            type: string
          name: AlarmNames
          required: true
          type: array
        - enum:
            - DeleteAlarms
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
      x-aws-operation-name: DeleteAlarms
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Deletes the specified alarms. You can delete up to 50 alarms in one operation. In the event of an error, no alarms are deleted.'
      operationId: POST DeleteAlarms
      parameters:
        - description: The alarms to be deleted.
          in: formData
          items:
            type: string
          name: AlarmNames
          required: true
          type: array
        - enum:
            - DeleteAlarms
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
      x-aws-operation-name: DeleteAlarms
  '/#Action=DeleteAnomalyDetector':
    get:
      description: Deletes the specified anomaly detection model from your account.
      operationId: GET DeleteAnomalyDetector
      parameters:
        - description: The namespace associated with the anomaly detection model to delete.
          in: query
          maxLength: 255
          minLength: 1
          name: Namespace
          pattern: '[^:].*'
          required: true
          type: string
        - description: The metric name associated with the anomaly detection model to delete.
          in: query
          maxLength: 255
          minLength: 1
          name: MetricName
          required: true
          type: string
        - description: The metric dimensions associated with the anomaly detection model to delete.
          in: query
          items:
            type: string
          name: Dimensions
          required: false
          type: array
        - description: The statistic associated with the anomaly detection model to delete.
          in: query
          name: Stat
          required: true
          type: string
        - enum:
            - DeleteAnomalyDetector
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteAnomalyDetectorOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
      x-aws-operation-name: DeleteAnomalyDetector
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes the specified anomaly detection model from your account.
      operationId: POST DeleteAnomalyDetector
      parameters:
        - description: The namespace associated with the anomaly detection model to delete.
          in: formData
          maxLength: 255
          minLength: 1
          name: Namespace
          pattern: '[^:].*'
          required: true
          type: string
        - description: The metric name associated with the anomaly detection model to delete.
          in: formData
          maxLength: 255
          minLength: 1
          name: MetricName
          required: true
          type: string
        - description: The metric dimensions associated with the anomaly detection model to delete.
          in: formData
          items:
            type: string
          name: Dimensions
          required: false
          type: array
        - description: The statistic associated with the anomaly detection model to delete.
          in: formData
          name: Stat
          required: true
          type: string
        - enum:
            - DeleteAnomalyDetector
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteAnomalyDetectorOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
      x-aws-operation-name: DeleteAnomalyDetector
  '/#Action=DeleteDashboards':
    get:
      description: 'Deletes all dashboards that you specify. You may specify up to 100 dashboards to delete. If there is an error during this call, no dashboards are deleted.'
      operationId: GET DeleteDashboards
      parameters:
        - description: The dashboards to be deleted. This parameter is required.
          in: query
          items:
            type: string
          name: DashboardNames
          required: true
          type: array
        - enum:
            - DeleteDashboards
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDashboardsOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: DashboardNotFoundError
          schema:
            $ref: '#/definitions/DashboardNotFoundError'
        '482':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      x-aws-operation-name: DeleteDashboards
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Deletes all dashboards that you specify. You may specify up to 100 dashboards to delete. If there is an error during this call, no dashboards are deleted.'
      operationId: POST DeleteDashboards
      parameters:
        - description: The dashboards to be deleted. This parameter is required.
          in: formData
          items:
            type: string
          name: DashboardNames
          required: true
          type: array
        - enum:
            - DeleteDashboards
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDashboardsOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: DashboardNotFoundError
          schema:
            $ref: '#/definitions/DashboardNotFoundError'
        '482':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      x-aws-operation-name: DeleteDashboards
  '/#Action=DescribeAlarmHistory':
    get:
      description: '<p>Retrieves the history for the specified alarm. You can filter the results by date range or item type. If an alarm name is not specified, the histories for all alarms are returned.</p> <p>CloudWatch retains the history of an alarm even if you delete the alarm.</p>'
      operationId: GET DescribeAlarmHistory
      parameters:
        - description: The name of the alarm.
          in: query
          maxLength: 255
          minLength: 1
          name: AlarmName
          required: false
          type: string
        - description: The type of alarm histories to retrieve.
          enum:
            - ConfigurationUpdate
            - StateUpdate
            - Action
          in: query
          name: HistoryItemType
          required: false
          type: string
        - description: The starting date to retrieve alarm history.
          format: date-time
          in: query
          name: StartDate
          required: false
          type: string
        - description: The ending date to retrieve alarm history.
          format: date-time
          in: query
          name: EndDate
          required: false
          type: string
        - description: The maximum number of alarm history records to retrieve.
          in: query
          maximum: 100
          minimum: 1
          name: MaxRecords
          required: false
          type: integer
        - description: The token returned by a previous call to indicate that there is more data available.
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - DescribeAlarmHistory
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAlarmHistoryOutput'
        '480':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      x-aws-operation-name: DescribeAlarmHistory
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Retrieves the history for the specified alarm. You can filter the results by date range or item type. If an alarm name is not specified, the histories for all alarms are returned.</p> <p>CloudWatch retains the history of an alarm even if you delete the alarm.</p>'
      operationId: POST DescribeAlarmHistory
      parameters:
        - description: The name of the alarm.
          in: formData
          maxLength: 255
          minLength: 1
          name: AlarmName
          required: false
          type: string
        - description: The type of alarm histories to retrieve.
          enum:
            - ConfigurationUpdate
            - StateUpdate
            - Action
          in: formData
          name: HistoryItemType
          required: false
          type: string
        - description: The starting date to retrieve alarm history.
          format: date-time
          in: formData
          name: StartDate
          required: false
          type: string
        - description: The ending date to retrieve alarm history.
          format: date-time
          in: formData
          name: EndDate
          required: false
          type: string
        - description: The maximum number of alarm history records to retrieve.
          in: formData
          maximum: 100
          minimum: 1
          name: MaxRecords
          required: false
          type: integer
        - description: The token returned by a previous call to indicate that there is more data available.
          in: formData
          name: NextToken
          required: false
          type: string
        - enum:
            - DescribeAlarmHistory
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAlarmHistoryOutput'
        '480':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      x-aws-operation-name: DescribeAlarmHistory
  '/#Action=DescribeAlarms':
    get:
      description: 'Retrieves the specified alarms. If no alarms are specified, all alarms are returned. Alarms can be retrieved by using only a prefix for the alarm name, the alarm state, or a prefix for any action.'
      operationId: GET DescribeAlarms
      parameters:
        - description: The names of the alarms.
          in: query
          items:
            type: string
          name: AlarmNames
          required: false
          type: array
        - description: 'The alarm name prefix. If this parameter is specified, you cannot specify <code>AlarmNames</code>.'
          in: query
          maxLength: 255
          minLength: 1
          name: AlarmNamePrefix
          required: false
          type: string
        - description: The state value to be used in matching alarms.
          enum:
            - OK
            - ALARM
            - INSUFFICIENT_DATA
          in: query
          name: StateValue
          required: false
          type: string
        - description: The action name prefix.
          in: query
          maxLength: 1024
          minLength: 1
          name: ActionPrefix
          required: false
          type: string
        - description: The maximum number of alarm descriptions to retrieve.
          in: query
          maximum: 100
          minimum: 1
          name: MaxRecords
          required: false
          type: integer
        - description: The token returned by a previous call to indicate that there is more data available.
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - DescribeAlarms
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAlarmsOutput'
        '480':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      x-aws-operation-name: DescribeAlarms
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Retrieves the specified alarms. If no alarms are specified, all alarms are returned. Alarms can be retrieved by using only a prefix for the alarm name, the alarm state, or a prefix for any action.'
      operationId: POST DescribeAlarms
      parameters:
        - description: The names of the alarms.
          in: formData
          items:
            type: string
          name: AlarmNames
          required: false
          type: array
        - description: 'The alarm name prefix. If this parameter is specified, you cannot specify <code>AlarmNames</code>.'
          in: formData
          maxLength: 255
          minLength: 1
          name: AlarmNamePrefix
          required: false
          type: string
        - description: The state value to be used in matching alarms.
          enum:
            - OK
            - ALARM
            - INSUFFICIENT_DATA
          in: formData
          name: StateValue
          required: false
          type: string
        - description: The action name prefix.
          in: formData
          maxLength: 1024
          minLength: 1
          name: ActionPrefix
          required: false
          type: string
        - description: The maximum number of alarm descriptions to retrieve.
          in: formData
          maximum: 100
          minimum: 1
          name: MaxRecords
          required: false
          type: integer
        - description: The token returned by a previous call to indicate that there is more data available.
          in: formData
          name: NextToken
          required: false
          type: string
        - enum:
            - DescribeAlarms
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAlarmsOutput'
        '480':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      x-aws-operation-name: DescribeAlarms
  '/#Action=DescribeAlarmsForMetric':
    get:
      description: 'Retrieves the alarms for the specified metric. To filter the results, specify a statistic, period, or unit.'
      operationId: GET DescribeAlarmsForMetric
      parameters:
        - description: The name of the metric.
          in: query
          maxLength: 255
          minLength: 1
          name: MetricName
          required: true
          type: string
        - description: The namespace of the metric.
          in: query
          maxLength: 255
          minLength: 1
          name: Namespace
          pattern: '[^:].*'
          required: true
          type: string
        - description: 'The statistic for the metric, other than percentiles. For percentile statistics, use <code>ExtendedStatistics</code>.'
          enum:
            - SampleCount
            - Average
            - Sum
            - Minimum
            - Maximum
          in: query
          name: Statistic
          required: false
          type: string
        - description: The percentile statistic for the metric. Specify a value between p0.0 and p100.
          in: query
          name: ExtendedStatistic
          pattern: 'p(\d{1,2}(\.\d{0,2})?|100)'
          required: false
          type: string
        - description: 'The dimensions associated with the metric. If the metric has any associated dimensions, you must specify them in order for the call to succeed.'
          in: query
          items:
            type: string
          name: Dimensions
          required: false
          type: array
        - description: 'The period, in seconds, over which the statistic is applied.'
          in: query
          minimum: 1
          name: Period
          required: false
          type: integer
        - description: The unit for the metric.
          enum:
            - Seconds
            - Microseconds
            - Milliseconds
            - Bytes
            - Kilobytes
            - Megabytes
            - Gigabytes
            - Terabytes
            - Bits
            - Kilobits
            - Megabits
            - Gigabits
            - Terabits
            - Percent
            - Count
            - Bytes/Second
            - Kilobytes/Second
            - Megabytes/Second
            - Gigabytes/Second
            - Terabytes/Second
            - Bits/Second
            - Kilobits/Second
            - Megabits/Second
            - Gigabits/Second
            - Terabits/Second
            - Count/Second
            - None
          in: query
          name: Unit
          required: false
          type: string
        - enum:
            - DescribeAlarmsForMetric
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAlarmsForMetricOutput'
      x-aws-operation-name: DescribeAlarmsForMetric
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Retrieves the alarms for the specified metric. To filter the results, specify a statistic, period, or unit.'
      operationId: POST DescribeAlarmsForMetric
      parameters:
        - description: The name of the metric.
          in: formData
          maxLength: 255
          minLength: 1
          name: MetricName
          required: true
          type: string
        - description: The namespace of the metric.
          in: formData
          maxLength: 255
          minLength: 1
          name: Namespace
          pattern: '[^:].*'
          required: true
          type: string
        - description: 'The statistic for the metric, other than percentiles. For percentile statistics, use <code>ExtendedStatistics</code>.'
          enum:
            - SampleCount
            - Average
            - Sum
            - Minimum
            - Maximum
          in: formData
          name: Statistic
          required: false
          type: string
        - description: The percentile statistic for the metric. Specify a value between p0.0 and p100.
          in: formData
          name: ExtendedStatistic
          pattern: 'p(\d{1,2}(\.\d{0,2})?|100)'
          required: false
          type: string
        - description: 'The dimensions associated with the metric. If the metric has any associated dimensions, you must specify them in order for the call to succeed.'
          in: formData
          items:
            type: string
          name: Dimensions
          required: false
          type: array
        - description: 'The period, in seconds, over which the statistic is applied.'
          in: formData
          minimum: 1
          name: Period
          required: false
          type: integer
        - description: The unit for the metric.
          enum:
            - Seconds
            - Microseconds
            - Milliseconds
            - Bytes
            - Kilobytes
            - Megabytes
            - Gigabytes
            - Terabytes
            - Bits
            - Kilobits
            - Megabits
            - Gigabits
            - Terabits
            - Percent
            - Count
            - Bytes/Second
            - Kilobytes/Second
            - Megabytes/Second
            - Gigabytes/Second
            - Terabytes/Second
            - Bits/Second
            - Kilobits/Second
            - Megabits/Second
            - Gigabits/Second
            - Terabits/Second
            - Count/Second
            - None
          in: formData
          name: Unit
          required: false
          type: string
        - enum:
            - DescribeAlarmsForMetric
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAlarmsForMetricOutput'
      x-aws-operation-name: DescribeAlarmsForMetric
  '/#Action=DescribeAnomalyDetectors':
    get:
      description: 'Lists the anomaly detection models that you have created in your account. You can list all models in your account or filter the results to only the models that are related to a certain namespace, metric name, or metric dimension.'
      operationId: GET DescribeAnomalyDetectors
      parameters:
        - description: Use the token returned by the previous operation to request the next page of results.
          in: query
          name: NextToken
          required: false
          type: string
        - description: '<p>The maximum number of results to return in one operation. The maximum value you can specify is 10.</p> <p>To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. </p>'
          in: query
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: Limits the results to only the anomaly detection models that are associated with the specified namespace.
          in: query
          maxLength: 255
          minLength: 1
          name: Namespace
          pattern: '[^:].*'
          required: false
          type: string
        - description: 'Limits the results to only the anomaly detection models that are associated with the specified metric name. If there are multiple metrics with this name in different namespaces that have anomaly detection models, they''re all returned.'
          in: query
          maxLength: 255
          minLength: 1
          name: MetricName
          required: false
          type: string
        - description: 'Limits the results to only the anomaly detection models that are associated with the specified metric dimensions. If there are multiple metrics that have these dimensions and have anomaly detection models associated, they''re all returned.'
          in: query
          items:
            type: string
          name: Dimensions
          required: false
          type: array
        - enum:
            - DescribeAnomalyDetectors
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAnomalyDetectorsOutput'
        '480':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '481':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
      x-aws-operation-name: DescribeAnomalyDetectors
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Lists the anomaly detection models that you have created in your account. You can list all models in your account or filter the results to only the models that are related to a certain namespace, metric name, or metric dimension.'
      operationId: POST DescribeAnomalyDetectors
      parameters:
        - description: Use the token returned by the previous operation to request the next page of results.
          in: formData
          name: NextToken
          required: false
          type: string
        - description: '<p>The maximum number of results to return in one operation. The maximum value you can specify is 10.</p> <p>To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. </p>'
          in: formData
          minimum: 1
          name: MaxResults
          required: false
          type: integer
        - description: Limits the results to only the anomaly detection models that are associated with the specified namespace.
          in: formData
          maxLength: 255
          minLength: 1
          name: Namespace
          pattern: '[^:].*'
          required: false
          type: string
        - description: 'Limits the results to only the anomaly detection models that are associated with the specified metric name. If there are multiple metrics with this name in different namespaces that have anomaly detection models, they''re all returned.'
          in: formData
          maxLength: 255
          minLength: 1
          name: MetricName
          required: false
          type: string
        - description: 'Limits the results to only the anomaly detection models that are associated with the specified metric dimensions. If there are multiple metrics that have these dimensions and have anomaly detection models associated, they''re all returned.'
          in: formData
          items:
            type: string
          name: Dimensions
          required: false
          type: array
        - enum:
            - DescribeAnomalyDetectors
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAnomalyDetectorsOutput'
        '480':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '481':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
      x-aws-operation-name: DescribeAnomalyDetectors
  '/#Action=DisableAlarmActions':
    get:
      description: 'Disables the actions for the specified alarms. When an alarm''s actions are disabled, the alarm actions do not execute when the alarm state changes.'
      operationId: GET DisableAlarmActions
      parameters:
        - description: The names of the alarms.
          in: query
          items:
            type: string
          name: AlarmNames
          required: true
          type: array
        - enum:
            - DisableAlarmActions
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
      x-aws-operation-name: DisableAlarmActions
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Disables the actions for the specified alarms. When an alarm''s actions are disabled, the alarm actions do not execute when the alarm state changes.'
      operationId: POST DisableAlarmActions
      parameters:
        - description: The names of the alarms.
          in: formData
          items:
            type: string
          name: AlarmNames
          required: true
          type: array
        - enum:
            - DisableAlarmActions
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
      x-aws-operation-name: DisableAlarmActions
  '/#Action=EnableAlarmActions':
    get:
      description: Enables the actions for the specified alarms.
      operationId: GET EnableAlarmActions
      parameters:
        - description: The names of the alarms.
          in: query
          items:
            type: string
          name: AlarmNames
          required: true
          type: array
        - enum:
            - EnableAlarmActions
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
      x-aws-operation-name: EnableAlarmActions
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Enables the actions for the specified alarms.
      operationId: POST EnableAlarmActions
      parameters:
        - description: The names of the alarms.
          in: formData
          items:
            type: string
          name: AlarmNames
          required: true
          type: array
        - enum:
            - EnableAlarmActions
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
      x-aws-operation-name: EnableAlarmActions
  '/#Action=GetDashboard':
    get:
      description: '<p>Displays the details of the dashboard that you specify.</p> <p>To copy an existing dashboard, use <code>GetDashboard</code>, and then use the data returned within <code>DashboardBody</code> as the template for the new dashboard when you call <code>PutDashboard</code> to create the copy.</p>'
      operationId: GET GetDashboard
      parameters:
        - description: The name of the dashboard to be described.
          in: query
          name: DashboardName
          required: true
          type: string
        - enum:
            - GetDashboard
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDashboardOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: DashboardNotFoundError
          schema:
            $ref: '#/definitions/DashboardNotFoundError'
        '482':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      x-aws-operation-name: GetDashboard
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Displays the details of the dashboard that you specify.</p> <p>To copy an existing dashboard, use <code>GetDashboard</code>, and then use the data returned within <code>DashboardBody</code> as the template for the new dashboard when you call <code>PutDashboard</code> to create the copy.</p>'
      operationId: POST GetDashboard
      parameters:
        - description: The name of the dashboard to be described.
          in: formData
          name: DashboardName
          required: true
          type: string
        - enum:
            - GetDashboard
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDashboardOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: DashboardNotFoundError
          schema:
            $ref: '#/definitions/DashboardNotFoundError'
        '482':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      x-aws-operation-name: GetDashboard
  '/#Action=GetMetricData':
    get:
      description: '<p>You can use the <code>GetMetricData</code> API to retrieve as many as 100 different metrics in a single request, with a total of as many as 100,800 datapoints. You can also optionally perform math expressions on the values of the returned statistics, to create new time series that represent new insights into your data. For example, using Lambda metrics, you could divide the Errors metric by the Invocations metric to get an error rate time series. For more information about metric math expressions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax">Metric Math Syntax and Functions</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Calls to the <code>GetMetricData</code> API have a different pricing structure than calls to <code>GetMetricStatistics</code>. For more information about pricing, see <a href="https://aws.amazon.com/cloudwatch/pricing/">Amazon CloudWatch Pricing</a>.</p> <p>Amazon CloudWatch retains metric data as follows:</p> <ul> <li> <p>Data points with a period of less than 60 seconds are available for 3 hours. These data points are high-resolution metrics and are available only for custom metrics that have been defined with a <code>StorageResolution</code> of 1.</p> </li> <li> <p>Data points with a period of 60 seconds (1-minute) are available for 15 days.</p> </li> <li> <p>Data points with a period of 300 seconds (5-minute) are available for 63 days.</p> </li> <li> <p>Data points with a period of 3600 seconds (1 hour) are available for 455 days (15 months).</p> </li> </ul> <p>Data points that are initially published with a shorter period are aggregated together for long-term storage. For example, if you collect data using a period of 1 minute, the data remains available for 15 days with 1-minute resolution. After 15 days, this data is still available, but is aggregated and retrievable only with a resolution of 5 minutes. After 63 days, the data is further aggregated and is available with a resolution of 1 hour.</p> <p>If you omit <code>Unit</code> in your request, all data that was collected with any unit is returned, along with the corresponding units that were specified when the data was reported to CloudWatch. If you specify a unit, the operation returns only data data that was collected with that unit specified. If you specify a unit that does not match the data collected, the results of the operation are null. CloudWatch does not perform unit conversions.</p>'
      operationId: GET GetMetricData
      parameters:
        - description: 'The metric queries to be returned. A single <code>GetMetricData</code> call can include as many as 100 <code>MetricDataQuery</code> structures. Each of these structures can specify either a metric to retrieve, or a math expression to perform on retrieved data. '
          in: query
          items:
            type: string
          name: MetricDataQueries
          required: true
          type: array
        - description: '<p>The time stamp indicating the earliest data to be returned.</p> <p>The value specified is inclusive; results include data points with the specified time stamp. </p> <p>CloudWatch rounds the specified time stamp as follows:</p> <ul> <li> <p>Start time less than 15 days ago - Round down to the nearest whole minute. For example, 12:32:34 is rounded down to 12:32:00.</p> </li> <li> <p>Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval. For example, 12:32:34 is rounded down to 12:30:00.</p> </li> <li> <p>Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval. For example, 12:32:34 is rounded down to 12:00:00.</p> </li> </ul> <p>If you set <code>Period</code> to 5, 10, or 30, the start time of your request is rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the start time of your request is rounded down and you receive data from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes of data, using a period of 5 seconds, you receive data timestamped between 15:02:15 and 15:07:15. </p> <p>For better performance, specify <code>StartTime</code> and <code>EndTime</code> values that align with the value of the metric''s <code>Period</code> and sync up with the beginning and end of an hour. For example, if the <code>Period</code> of a metric is 5 minutes, specifying 12:05 or 12:30 as <code>StartTime</code> can get a faster response from CloudWatch than setting 12:07 or 12:29 as the <code>StartTime</code>.</p>'
          format: date-time
          in: query
          name: StartTime
          required: true
          type: string
        - description: '<p>The time stamp indicating the latest data to be returned.</p> <p>The value specified is exclusive; results include data points up to the specified time stamp.</p> <p>For better performance, specify <code>StartTime</code> and <code>EndTime</code> values that align with the value of the metric''s <code>Period</code> and sync up with the beginning and end of an hour. For example, if the <code>Period</code> of a metric is 5 minutes, specifying 12:05 or 12:30 as <code>EndTime</code> can get a faster response from CloudWatch than setting 12:07 or 12:29 as the <code>EndTime</code>.</p>'
          format: date-time
          in: query
          name: EndTime
          required: true
          type: string
        - description: 'Include this value, if it was returned by the previous call, to get the next set of data points.'
          in: query
          name: NextToken
          required: false
          type: string
        - description: The order in which data points should be returned. <code>TimestampDescending</code> returns the newest data first and paginates when the <code>MaxDatapoints</code> limit is reached. <code>TimestampAscending</code> returns the oldest data first and paginates when the <code>MaxDatapoints</code> limit is reached.
          enum:
            - TimestampDescending
            - TimestampAscending
          in: query
          name: ScanBy
          required: false
          type: string
        - description: 'The maximum number of data points the request should return before paginating. If you omit this, the default of 100,800 is used.'
          in: query
          name: MaxDatapoints
          required: false
          type: integer
        - enum:
            - GetMetricData
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMetricDataOutput'
        '480':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      x-aws-operation-name: GetMetricData
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>You can use the <code>GetMetricData</code> API to retrieve as many as 100 different metrics in a single request, with a total of as many as 100,800 datapoints. You can also optionally perform math expressions on the values of the returned statistics, to create new time series that represent new insights into your data. For example, using Lambda metrics, you could divide the Errors metric by the Invocations metric to get an error rate time series. For more information about metric math expressions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax">Metric Math Syntax and Functions</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Calls to the <code>GetMetricData</code> API have a different pricing structure than calls to <code>GetMetricStatistics</code>. For more information about pricing, see <a href="https://aws.amazon.com/cloudwatch/pricing/">Amazon CloudWatch Pricing</a>.</p> <p>Amazon CloudWatch retains metric data as follows:</p> <ul> <li> <p>Data points with a period of less than 60 seconds are available for 3 hours. These data points are high-resolution metrics and are available only for custom metrics that have been defined with a <code>StorageResolution</code> of 1.</p> </li> <li> <p>Data points with a period of 60 seconds (1-minute) are available for 15 days.</p> </li> <li> <p>Data points with a period of 300 seconds (5-minute) are available for 63 days.</p> </li> <li> <p>Data points with a period of 3600 seconds (1 hour) are available for 455 days (15 months).</p> </li> </ul> <p>Data points that are initially published with a shorter period are aggregated together for long-term storage. For example, if you collect data using a period of 1 minute, the data remains available for 15 days with 1-minute resolution. After 15 days, this data is still available, but is aggregated and retrievable only with a resolution of 5 minutes. After 63 days, the data is further aggregated and is available with a resolution of 1 hour.</p> <p>If you omit <code>Unit</code> in your request, all data that was collected with any unit is returned, along with the corresponding units that were specified when the data was reported to CloudWatch. If you specify a unit, the operation returns only data data that was collected with that unit specified. If you specify a unit that does not match the data collected, the results of the operation are null. CloudWatch does not perform unit conversions.</p>'
      operationId: POST GetMetricData
      parameters:
        - description: 'The metric queries to be returned. A single <code>GetMetricData</code> call can include as many as 100 <code>MetricDataQuery</code> structures. Each of these structures can specify either a metric to retrieve, or a math expression to perform on retrieved data. '
          in: formData
          items:
            type: string
          name: MetricDataQueries
          required: true
          type: array
        - description: '<p>The time stamp indicating the earliest data to be returned.</p> <p>The value specified is inclusive; results include data points with the specified time stamp. </p> <p>CloudWatch rounds the specified time stamp as follows:</p> <ul> <li> <p>Start time less than 15 days ago - Round down to the nearest whole minute. For example, 12:32:34 is rounded down to 12:32:00.</p> </li> <li> <p>Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval. For example, 12:32:34 is rounded down to 12:30:00.</p> </li> <li> <p>Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval. For example, 12:32:34 is rounded down to 12:00:00.</p> </li> </ul> <p>If you set <code>Period</code> to 5, 10, or 30, the start time of your request is rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the start time of your request is rounded down and you receive data from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes of data, using a period of 5 seconds, you receive data timestamped between 15:02:15 and 15:07:15. </p> <p>For better performance, specify <code>StartTime</code> and <code>EndTime</code> values that align with the value of the metric''s <code>Period</code> and sync up with the beginning and end of an hour. For example, if the <code>Period</code> of a metric is 5 minutes, specifying 12:05 or 12:30 as <code>StartTime</code> can get a faster response from CloudWatch than setting 12:07 or 12:29 as the <code>StartTime</code>.</p>'
          format: date-time
          in: formData
          name: StartTime
          required: true
          type: string
        - description: '<p>The time stamp indicating the latest data to be returned.</p> <p>The value specified is exclusive; results include data points up to the specified time stamp.</p> <p>For better performance, specify <code>StartTime</code> and <code>EndTime</code> values that align with the value of the metric''s <code>Period</code> and sync up with the beginning and end of an hour. For example, if the <code>Period</code> of a metric is 5 minutes, specifying 12:05 or 12:30 as <code>EndTime</code> can get a faster response from CloudWatch than setting 12:07 or 12:29 as the <code>EndTime</code>.</p>'
          format: date-time
          in: formData
          name: EndTime
          required: true
          type: string
        - description: 'Include this value, if it was returned by the previous call, to get the next set of data points.'
          in: formData
          name: NextToken
          required: false
          type: string
        - description: The order in which data points should be returned. <code>TimestampDescending</code> returns the newest data first and paginates when the <code>MaxDatapoints</code> limit is reached. <code>TimestampAscending</code> returns the oldest data first and paginates when the <code>MaxDatapoints</code> limit is reached.
          enum:
            - TimestampDescending
            - TimestampAscending
          in: formData
          name: ScanBy
          required: false
          type: string
        - description: 'The maximum number of data points the request should return before paginating. If you omit this, the default of 100,800 is used.'
          in: formData
          name: MaxDatapoints
          required: false
          type: integer
        - enum:
            - GetMetricData
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMetricDataOutput'
        '480':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      x-aws-operation-name: GetMetricData
  '/#Action=GetMetricStatistics':
    get:
      description: '<p>Gets statistics for the specified metric.</p> <p>The maximum number of data points returned from a single call is 1,440. If you request more than 1,440 data points, CloudWatch returns an error. To reduce the number of data points, you can narrow the specified time range and make multiple requests across adjacent time ranges, or you can increase the specified period. Data points are not returned in chronological order.</p> <p>CloudWatch aggregates data points based on the length of the period that you specify. For example, if you request statistics with a one-hour period, CloudWatch aggregates all data points with time stamps that fall within each one-hour period. Therefore, the number of values aggregated by CloudWatch is larger than the number of data points returned.</p> <p>CloudWatch needs raw data points to calculate percentile statistics. If you publish data using a statistic set instead, you can only retrieve percentile statistics for this data if one of the following conditions is true:</p> <ul> <li> <p>The SampleCount value of the statistic set is 1.</p> </li> <li> <p>The Min and the Max values of the statistic set are equal.</p> </li> </ul> <p>Percentile statistics are not available for metrics when any of the metric values are negative numbers.</p> <p>Amazon CloudWatch retains metric data as follows:</p> <ul> <li> <p>Data points with a period of less than 60 seconds are available for 3 hours. These data points are high-resolution metrics and are available only for custom metrics that have been defined with a <code>StorageResolution</code> of 1.</p> </li> <li> <p>Data points with a period of 60 seconds (1-minute) are available for 15 days.</p> </li> <li> <p>Data points with a period of 300 seconds (5-minute) are available for 63 days.</p> </li> <li> <p>Data points with a period of 3600 seconds (1 hour) are available for 455 days (15 months).</p> </li> </ul> <p>Data points that are initially published with a shorter period are aggregated together for long-term storage. For example, if you collect data using a period of 1 minute, the data remains available for 15 days with 1-minute resolution. After 15 days, this data is still available, but is aggregated and retrievable only with a resolution of 5 minutes. After 63 days, the data is further aggregated and is available with a resolution of 1 hour.</p> <p>CloudWatch started retaining 5-minute and 1-hour metric data as of July 9, 2016.</p> <p>For information about metrics and dimensions supported by AWS services, see the <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CW_Support_For_AWS.html">Amazon CloudWatch Metrics and Dimensions Reference</a> in the <i>Amazon CloudWatch User Guide</i>.</p>'
      operationId: GET GetMetricStatistics
      parameters:
        - description: 'The namespace of the metric, with or without spaces.'
          in: query
          maxLength: 255
          minLength: 1
          name: Namespace
          pattern: '[^:].*'
          required: true
          type: string
        - description: 'The name of the metric, with or without spaces.'
          in: query
          maxLength: 255
          minLength: 1
          name: MetricName
          required: true
          type: string
        - description: 'The dimensions. If the metric contains multiple dimensions, you must include a value for each dimension. CloudWatch treats each unique combination of dimensions as a separate metric. If a specific combination of dimensions was not published, you can''t retrieve statistics for it. You must specify the same dimensions that were used when the metrics were created. For an example, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#dimension-combinations">Dimension Combinations</a> in the <i>Amazon CloudWatch User Guide</i>. For more information about specifying dimensions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publishing Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.'
          in: query
          items:
            type: string
          name: Dimensions
          required: false
          type: array
        - description: '<p>The time stamp that determines the first data point to return. Start times are evaluated relative to the time that CloudWatch receives the request.</p> <p>The value specified is inclusive; results include data points with the specified time stamp. The time stamp must be in ISO 8601 UTC format (for example, 2016-10-03T23:00:00Z).</p> <p>CloudWatch rounds the specified time stamp as follows:</p> <ul> <li> <p>Start time less than 15 days ago - Round down to the nearest whole minute. For example, 12:32:34 is rounded down to 12:32:00.</p> </li> <li> <p>Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval. For example, 12:32:34 is rounded down to 12:30:00.</p> </li> <li> <p>Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval. For example, 12:32:34 is rounded down to 12:00:00.</p> </li> </ul> <p>If you set <code>Period</code> to 5, 10, or 30, the start time of your request is rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the start time of your request is rounded down and you receive data from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes of data, using a period of 5 seconds, you receive data timestamped between 15:02:15 and 15:07:15. </p>'
          format: date-time
          in: query
          name: StartTime
          required: true
          type: string
        - description: '<p>The time stamp that determines the last data point to return.</p> <p>The value specified is exclusive; results include data points up to the specified time stamp. The time stamp must be in ISO 8601 UTC format (for example, 2016-10-10T23:00:00Z).</p>'
          format: date-time
          in: query
          name: EndTime
          required: true
          type: string
        - description: '<p>The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a <code>PutMetricData</code> call that includes a <code>StorageResolution</code> of 1 second.</p> <p>If the <code>StartTime</code> parameter specifies a time stamp that is greater than 3 hours ago, you must specify the period as follows or no data points in that time range is returned:</p> <ul> <li> <p>Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).</p> </li> <li> <p>Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).</p> </li> <li> <p>Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).</p> </li> </ul>'
          in: query
          minimum: 1
          name: Period
          required: true
          type: integer
        - description: 'The metric statistics, other than percentile. For percentile statistics, use <code>ExtendedStatistics</code>. When calling <code>GetMetricStatistics</code>, you must specify either <code>Statistics</code> or <code>ExtendedStatistics</code>, but not both.'
          in: query
          items:
            type: string
          name: Statistics
          required: false
          type: array
        - description: 'The percentile statistics. Specify values between p0.0 and p100. When calling <code>GetMetricStatistics</code>, you must specify either <code>Statistics</code> or <code>ExtendedStatistics</code>, but not both. Percentile statistics are not available for metrics when any of the metric values are negative numbers.'
          in: query
          items:
            type: string
          name: ExtendedStatistics
          required: false
          type: array
        - description: 'The unit for a given metric. If you omit <code>Unit</code>, all data that was collected with any unit is returned, along with the corresponding units that were specified when the data was reported to CloudWatch. If you specify a unit, the operation returns only data data that was collected with that unit specified. If you specify a unit that does not match the data collected, the results of the operation are null. CloudWatch does not perform unit conversions.'
          enum:
            - Seconds
            - Microseconds
            - Milliseconds
            - Bytes
            - Kilobytes
            - Megabytes
            - Gigabytes
            - Terabytes
            - Bits
            - Kilobits
            - Megabits
            - Gigabits
            - Terabits
            - Percent
            - Count
            - Bytes/Second
            - Kilobytes/Second
            - Megabytes/Second
            - Gigabytes/Second
            - Terabytes/Second
            - Bits/Second
            - Kilobits/Second
            - Megabits/Second
            - Gigabits/Second
            - Terabits/Second
            - Count/Second
            - None
          in: query
          name: Unit
          required: false
          type: string
        - enum:
            - GetMetricStatistics
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMetricStatisticsOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '482':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '483':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      x-aws-operation-name: GetMetricStatistics
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Gets statistics for the specified metric.</p> <p>The maximum number of data points returned from a single call is 1,440. If you request more than 1,440 data points, CloudWatch returns an error. To reduce the number of data points, you can narrow the specified time range and make multiple requests across adjacent time ranges, or you can increase the specified period. Data points are not returned in chronological order.</p> <p>CloudWatch aggregates data points based on the length of the period that you specify. For example, if you request statistics with a one-hour period, CloudWatch aggregates all data points with time stamps that fall within each one-hour period. Therefore, the number of values aggregated by CloudWatch is larger than the number of data points returned.</p> <p>CloudWatch needs raw data points to calculate percentile statistics. If you publish data using a statistic set instead, you can only retrieve percentile statistics for this data if one of the following conditions is true:</p> <ul> <li> <p>The SampleCount value of the statistic set is 1.</p> </li> <li> <p>The Min and the Max values of the statistic set are equal.</p> </li> </ul> <p>Percentile statistics are not available for metrics when any of the metric values are negative numbers.</p> <p>Amazon CloudWatch retains metric data as follows:</p> <ul> <li> <p>Data points with a period of less than 60 seconds are available for 3 hours. These data points are high-resolution metrics and are available only for custom metrics that have been defined with a <code>StorageResolution</code> of 1.</p> </li> <li> <p>Data points with a period of 60 seconds (1-minute) are available for 15 days.</p> </li> <li> <p>Data points with a period of 300 seconds (5-minute) are available for 63 days.</p> </li> <li> <p>Data points with a period of 3600 seconds (1 hour) are available for 455 days (15 months).</p> </li> </ul> <p>Data points that are initially published with a shorter period are aggregated together for long-term storage. For example, if you collect data using a period of 1 minute, the data remains available for 15 days with 1-minute resolution. After 15 days, this data is still available, but is aggregated and retrievable only with a resolution of 5 minutes. After 63 days, the data is further aggregated and is available with a resolution of 1 hour.</p> <p>CloudWatch started retaining 5-minute and 1-hour metric data as of July 9, 2016.</p> <p>For information about metrics and dimensions supported by AWS services, see the <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CW_Support_For_AWS.html">Amazon CloudWatch Metrics and Dimensions Reference</a> in the <i>Amazon CloudWatch User Guide</i>.</p>'
      operationId: POST GetMetricStatistics
      parameters:
        - description: 'The namespace of the metric, with or without spaces.'
          in: formData
          maxLength: 255
          minLength: 1
          name: Namespace
          pattern: '[^:].*'
          required: true
          type: string
        - description: 'The name of the metric, with or without spaces.'
          in: formData
          maxLength: 255
          minLength: 1
          name: MetricName
          required: true
          type: string
        - description: 'The dimensions. If the metric contains multiple dimensions, you must include a value for each dimension. CloudWatch treats each unique combination of dimensions as a separate metric. If a specific combination of dimensions was not published, you can''t retrieve statistics for it. You must specify the same dimensions that were used when the metrics were created. For an example, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#dimension-combinations">Dimension Combinations</a> in the <i>Amazon CloudWatch User Guide</i>. For more information about specifying dimensions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publishing Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.'
          in: formData
          items:
            type: string
          name: Dimensions
          required: false
          type: array
        - description: '<p>The time stamp that determines the first data point to return. Start times are evaluated relative to the time that CloudWatch receives the request.</p> <p>The value specified is inclusive; results include data points with the specified time stamp. The time stamp must be in ISO 8601 UTC format (for example, 2016-10-03T23:00:00Z).</p> <p>CloudWatch rounds the specified time stamp as follows:</p> <ul> <li> <p>Start time less than 15 days ago - Round down to the nearest whole minute. For example, 12:32:34 is rounded down to 12:32:00.</p> </li> <li> <p>Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval. For example, 12:32:34 is rounded down to 12:30:00.</p> </li> <li> <p>Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval. For example, 12:32:34 is rounded down to 12:00:00.</p> </li> </ul> <p>If you set <code>Period</code> to 5, 10, or 30, the start time of your request is rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the start time of your request is rounded down and you receive data from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes of data, using a period of 5 seconds, you receive data timestamped between 15:02:15 and 15:07:15. </p>'
          format: date-time
          in: formData
          name: StartTime
          required: true
          type: string
        - description: '<p>The time stamp that determines the last data point to return.</p> <p>The value specified is exclusive; results include data points up to the specified time stamp. The time stamp must be in ISO 8601 UTC format (for example, 2016-10-10T23:00:00Z).</p>'
          format: date-time
          in: formData
          name: EndTime
          required: true
          type: string
        - description: '<p>The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a <code>PutMetricData</code> call that includes a <code>StorageResolution</code> of 1 second.</p> <p>If the <code>StartTime</code> parameter specifies a time stamp that is greater than 3 hours ago, you must specify the period as follows or no data points in that time range is returned:</p> <ul> <li> <p>Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).</p> </li> <li> <p>Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).</p> </li> <li> <p>Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).</p> </li> </ul>'
          in: formData
          minimum: 1
          name: Period
          required: true
          type: integer
        - description: 'The metric statistics, other than percentile. For percentile statistics, use <code>ExtendedStatistics</code>. When calling <code>GetMetricStatistics</code>, you must specify either <code>Statistics</code> or <code>ExtendedStatistics</code>, but not both.'
          in: formData
          items:
            type: string
          name: Statistics
          required: false
          type: array
        - description: 'The percentile statistics. Specify values between p0.0 and p100. When calling <code>GetMetricStatistics</code>, you must specify either <code>Statistics</code> or <code>ExtendedStatistics</code>, but not both. Percentile statistics are not available for metrics when any of the metric values are negative numbers.'
          in: formData
          items:
            type: string
          name: ExtendedStatistics
          required: false
          type: array
        - description: 'The unit for a given metric. If you omit <code>Unit</code>, all data that was collected with any unit is returned, along with the corresponding units that were specified when the data was reported to CloudWatch. If you specify a unit, the operation returns only data data that was collected with that unit specified. If you specify a unit that does not match the data collected, the results of the operation are null. CloudWatch does not perform unit conversions.'
          enum:
            - Seconds
            - Microseconds
            - Milliseconds
            - Bytes
            - Kilobytes
            - Megabytes
            - Gigabytes
            - Terabytes
            - Bits
            - Kilobits
            - Megabits
            - Gigabits
            - Terabits
            - Percent
            - Count
            - Bytes/Second
            - Kilobytes/Second
            - Megabytes/Second
            - Gigabytes/Second
            - Terabytes/Second
            - Bits/Second
            - Kilobits/Second
            - Megabits/Second
            - Gigabits/Second
            - Terabits/Second
            - Count/Second
            - None
          in: formData
          name: Unit
          required: false
          type: string
        - enum:
            - GetMetricStatistics
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMetricStatisticsOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '482':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '483':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      x-aws-operation-name: GetMetricStatistics
  '/#Action=GetMetricWidgetImage':
    get:
      description: '<p>You can use the <code>GetMetricWidgetImage</code> API to retrieve a snapshot graph of one or more Amazon CloudWatch metrics as a bitmap image. You can then embed this image into your services and products, such as wiki pages, reports, and documents. You could also retrieve images regularly, such as every minute, and create your own custom live dashboard.</p> <p>The graph you retrieve can include all CloudWatch metric graph features, including metric math and horizontal and vertical annotations.</p> <p>There is a limit of 20 transactions per second for this API. Each <code>GetMetricWidgetImage</code> action has the following limits:</p> <ul> <li> <p>As many as 100 metrics in the graph.</p> </li> <li> <p>Up to 100 KB uncompressed payload.</p> </li> </ul>'
      operationId: GET GetMetricWidgetImage
      parameters:
        - description: '<p>A JSON string that defines the bitmap graph to be retrieved. The string includes the metrics to include in the graph, statistics, annotations, title, axis limits, and so on. You can include only one <code>MetricWidget</code> parameter in each <code>GetMetricWidgetImage</code> call.</p> <p>For more information about the syntax of <code>MetricWidget</code> see <a>CloudWatch-Metric-Widget-Structure</a>.</p> <p>If any metric on the graph could not load all the requested data points, an orange triangle with an exclamation point appears next to the graph legend.</p>'
          in: query
          name: MetricWidget
          required: true
          type: string
        - description: '<p>The format of the resulting image. Only PNG images are supported.</p> <p>The default is <code>png</code>. If you specify <code>png</code>, the API returns an HTTP response with the content-type set to <code>text/xml</code>. The image data is in a <code>MetricWidgetImage</code> field. For example:</p> <p> <code> &lt;GetMetricWidgetImageResponse xmlns=&lt;URLstring&gt;&gt;</code> </p> <p> <code> &lt;GetMetricWidgetImageResult&gt;</code> </p> <p> <code> &lt;MetricWidgetImage&gt;</code> </p> <p> <code> iVBORw0KGgoAAAANSUhEUgAAAlgAAAGQEAYAAAAip...</code> </p> <p> <code> &lt;/MetricWidgetImage&gt;</code> </p> <p> <code> &lt;/GetMetricWidgetImageResult&gt;</code> </p> <p> <code> &lt;ResponseMetadata&gt;</code> </p> <p> <code> &lt;RequestId&gt;6f0d4192-4d42-11e8-82c1-f539a07e0e3b&lt;/RequestId&gt;</code> </p> <p> <code> &lt;/ResponseMetadata&gt;</code> </p> <p> <code>&lt;/GetMetricWidgetImageResponse&gt;</code> </p> <p>The <code>image/png</code> setting is intended only for custom HTTP requests. For most use cases, and all actions using an AWS SDK, you should use <code>png</code>. If you specify <code>image/png</code>, the HTTP response has a content-type set to <code>image/png</code>, and the body of the response is a PNG image. </p>'
          in: query
          name: OutputFormat
          required: false
          type: string
        - enum:
            - GetMetricWidgetImage
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMetricWidgetImageOutput'
      x-aws-operation-name: GetMetricWidgetImage
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>You can use the <code>GetMetricWidgetImage</code> API to retrieve a snapshot graph of one or more Amazon CloudWatch metrics as a bitmap image. You can then embed this image into your services and products, such as wiki pages, reports, and documents. You could also retrieve images regularly, such as every minute, and create your own custom live dashboard.</p> <p>The graph you retrieve can include all CloudWatch metric graph features, including metric math and horizontal and vertical annotations.</p> <p>There is a limit of 20 transactions per second for this API. Each <code>GetMetricWidgetImage</code> action has the following limits:</p> <ul> <li> <p>As many as 100 metrics in the graph.</p> </li> <li> <p>Up to 100 KB uncompressed payload.</p> </li> </ul>'
      operationId: POST GetMetricWidgetImage
      parameters:
        - description: '<p>A JSON string that defines the bitmap graph to be retrieved. The string includes the metrics to include in the graph, statistics, annotations, title, axis limits, and so on. You can include only one <code>MetricWidget</code> parameter in each <code>GetMetricWidgetImage</code> call.</p> <p>For more information about the syntax of <code>MetricWidget</code> see <a>CloudWatch-Metric-Widget-Structure</a>.</p> <p>If any metric on the graph could not load all the requested data points, an orange triangle with an exclamation point appears next to the graph legend.</p>'
          in: formData
          name: MetricWidget
          required: true
          type: string
        - description: '<p>The format of the resulting image. Only PNG images are supported.</p> <p>The default is <code>png</code>. If you specify <code>png</code>, the API returns an HTTP response with the content-type set to <code>text/xml</code>. The image data is in a <code>MetricWidgetImage</code> field. For example:</p> <p> <code> &lt;GetMetricWidgetImageResponse xmlns=&lt;URLstring&gt;&gt;</code> </p> <p> <code> &lt;GetMetricWidgetImageResult&gt;</code> </p> <p> <code> &lt;MetricWidgetImage&gt;</code> </p> <p> <code> iVBORw0KGgoAAAANSUhEUgAAAlgAAAGQEAYAAAAip...</code> </p> <p> <code> &lt;/MetricWidgetImage&gt;</code> </p> <p> <code> &lt;/GetMetricWidgetImageResult&gt;</code> </p> <p> <code> &lt;ResponseMetadata&gt;</code> </p> <p> <code> &lt;RequestId&gt;6f0d4192-4d42-11e8-82c1-f539a07e0e3b&lt;/RequestId&gt;</code> </p> <p> <code> &lt;/ResponseMetadata&gt;</code> </p> <p> <code>&lt;/GetMetricWidgetImageResponse&gt;</code> </p> <p>The <code>image/png</code> setting is intended only for custom HTTP requests. For most use cases, and all actions using an AWS SDK, you should use <code>png</code>. If you specify <code>image/png</code>, the HTTP response has a content-type set to <code>image/png</code>, and the body of the response is a PNG image. </p>'
          in: formData
          name: OutputFormat
          required: false
          type: string
        - enum:
            - GetMetricWidgetImage
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMetricWidgetImageOutput'
      x-aws-operation-name: GetMetricWidgetImage
  '/#Action=ListDashboards':
    get:
      description: '<p>Returns a list of the dashboards for your account. If you include <code>DashboardNamePrefix</code>, only those dashboards with names starting with the prefix are listed. Otherwise, all dashboards in your account are listed. </p> <p> <code>ListDashboards</code> returns up to 1000 results on one page. If there are more than 1000 dashboards, you can call <code>ListDashboards</code> again and include the value you received for <code>NextToken</code> in the first call, to receive the next 1000 results.</p>'
      operationId: GET ListDashboards
      parameters:
        - description: 'If you specify this parameter, only the dashboards with names starting with the specified string are listed. The maximum length is 255, and valid characters are A-Z, a-z, 0-9, ".", "-", and "_". '
          in: query
          name: DashboardNamePrefix
          required: false
          type: string
        - description: The token returned by a previous call to indicate that there is more data available.
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - ListDashboards
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDashboardsOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      x-aws-operation-name: ListDashboards
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Returns a list of the dashboards for your account. If you include <code>DashboardNamePrefix</code>, only those dashboards with names starting with the prefix are listed. Otherwise, all dashboards in your account are listed. </p> <p> <code>ListDashboards</code> returns up to 1000 results on one page. If there are more than 1000 dashboards, you can call <code>ListDashboards</code> again and include the value you received for <code>NextToken</code> in the first call, to receive the next 1000 results.</p>'
      operationId: POST ListDashboards
      parameters:
        - description: 'If you specify this parameter, only the dashboards with names starting with the specified string are listed. The maximum length is 255, and valid characters are A-Z, a-z, 0-9, ".", "-", and "_". '
          in: formData
          name: DashboardNamePrefix
          required: false
          type: string
        - description: The token returned by a previous call to indicate that there is more data available.
          in: formData
          name: NextToken
          required: false
          type: string
        - enum:
            - ListDashboards
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDashboardsOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      x-aws-operation-name: ListDashboards
  '/#Action=ListMetrics':
    get:
      description: '<p>List the specified metrics. You can use the returned metrics with <a>GetMetricData</a> or <a>GetMetricStatistics</a> to obtain statistical data.</p> <p>Up to 500 results are returned for any one call. To retrieve additional results, use the returned token with subsequent calls.</p> <p>After you create a metric, allow up to fifteen minutes before the metric appears. Statistics about the metric, however, are available sooner using <a>GetMetricData</a> or <a>GetMetricStatistics</a>.</p>'
      operationId: GET ListMetrics
      parameters:
        - description: The namespace to filter against.
          in: query
          maxLength: 255
          minLength: 1
          name: Namespace
          pattern: '[^:].*'
          required: false
          type: string
        - description: The name of the metric to filter against.
          in: query
          maxLength: 255
          minLength: 1
          name: MetricName
          required: false
          type: string
        - description: The dimensions to filter against.
          in: query
          items:
            type: string
          name: Dimensions
          required: false
          type: array
        - description: The token returned by a previous call to indicate that there is more data available.
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - ListMetrics
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListMetricsOutput'
        '480':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
      x-aws-operation-name: ListMetrics
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>List the specified metrics. You can use the returned metrics with <a>GetMetricData</a> or <a>GetMetricStatistics</a> to obtain statistical data.</p> <p>Up to 500 results are returned for any one call. To retrieve additional results, use the returned token with subsequent calls.</p> <p>After you create a metric, allow up to fifteen minutes before the metric appears. Statistics about the metric, however, are available sooner using <a>GetMetricData</a> or <a>GetMetricStatistics</a>.</p>'
      operationId: POST ListMetrics
      parameters:
        - description: The namespace to filter against.
          in: formData
          maxLength: 255
          minLength: 1
          name: Namespace
          pattern: '[^:].*'
          required: false
          type: string
        - description: The name of the metric to filter against.
          in: formData
          maxLength: 255
          minLength: 1
          name: MetricName
          required: false
          type: string
        - description: The dimensions to filter against.
          in: formData
          items:
            type: string
          name: Dimensions
          required: false
          type: array
        - description: The token returned by a previous call to indicate that there is more data available.
          in: formData
          name: NextToken
          required: false
          type: string
        - enum:
            - ListMetrics
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListMetricsOutput'
        '480':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
      x-aws-operation-name: ListMetrics
  '/#Action=ListTagsForResource':
    get:
      description: Displays the tags associated with a CloudWatch resource. Alarms support tagging.
      operationId: GET ListTagsForResource
      parameters:
        - description: 'The ARN of the CloudWatch resource that you want to view tags for. For more information on ARN format, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-cloudwatch">Example ARNs</a> in the <i>Amazon Web Services General Reference</i>.'
          in: query
          maxLength: 1024
          minLength: 1
          name: ResourceARN
          required: true
          type: string
        - enum:
            - ListTagsForResource
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      x-aws-operation-name: ListTagsForResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Displays the tags associated with a CloudWatch resource. Alarms support tagging.
      operationId: POST ListTagsForResource
      parameters:
        - description: 'The ARN of the CloudWatch resource that you want to view tags for. For more information on ARN format, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-cloudwatch">Example ARNs</a> in the <i>Amazon Web Services General Reference</i>.'
          in: formData
          maxLength: 1024
          minLength: 1
          name: ResourceARN
          required: true
          type: string
        - enum:
            - ListTagsForResource
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      x-aws-operation-name: ListTagsForResource
  '/#Action=PutAnomalyDetector':
    get:
      description: '<p>Creates an anomaly detection model for a CloudWatch metric. You can use the model to display a band of expected normal values when the metric is graphed.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Anomaly_Detection.html">CloudWatch Anomaly Detection</a>.</p>'
      operationId: GET PutAnomalyDetector
      parameters:
        - description: The namespace of the metric to create the anomaly detection model for.
          in: query
          maxLength: 255
          minLength: 1
          name: Namespace
          pattern: '[^:].*'
          required: true
          type: string
        - description: The name of the metric to create the anomaly detection model for.
          in: query
          maxLength: 255
          minLength: 1
          name: MetricName
          required: true
          type: string
        - description: The metric dimensions to create the anomaly detection model for.
          in: query
          items:
            type: string
          name: Dimensions
          required: false
          type: array
        - description: The statistic to use for the metric and the anomaly detection model.
          in: query
          name: Stat
          required: true
          type: string
        - description: |-
            The configuration specifies details about how the anomaly detection model is to be trained, including time ranges to exclude from use for training the model and the time zone to use for the metric.
            An array of time ranges to exclude from use when the anomaly detection model is trained. Use this to make sure that events that could cause unusual values for the metric, such as deployments, aren't used when CloudWatch creates the model.
          in: query
          items:
            type: string
          name: Configuration.ExcludedTimeRanges
          type: array
        - description: |-
            The configuration specifies details about how the anomaly detection model is to be trained, including time ranges to exclude from use for training the model and the time zone to use for the metric.
            <p>The time zone to use for the metric. This is useful to enable the model to automatically account for daylight savings time changes if the metric is sensitive to such time changes.</p> <p>To specify a time zone, use the name of the time zone as specified in the standard tz database. For more information, see <a href="https://en.wikipedia.org/wiki/Tz_database">tz database</a>.</p>
          in: query
          name: Configuration.MetricTimezone
          type: string
        - enum:
            - PutAnomalyDetector
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutAnomalyDetectorOutput'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
      x-aws-operation-name: PutAnomalyDetector
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates an anomaly detection model for a CloudWatch metric. You can use the model to display a band of expected normal values when the metric is graphed.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Anomaly_Detection.html">CloudWatch Anomaly Detection</a>.</p>'
      operationId: POST PutAnomalyDetector
      parameters:
        - description: The namespace of the metric to create the anomaly detection model for.
          in: formData
          maxLength: 255
          minLength: 1
          name: Namespace
          pattern: '[^:].*'
          required: true
          type: string
        - description: The name of the metric to create the anomaly detection model for.
          in: formData
          maxLength: 255
          minLength: 1
          name: MetricName
          required: true
          type: string
        - description: The metric dimensions to create the anomaly detection model for.
          in: formData
          items:
            type: string
          name: Dimensions
          required: false
          type: array
        - description: The statistic to use for the metric and the anomaly detection model.
          in: formData
          name: Stat
          required: true
          type: string
        - description: |-
            The configuration specifies details about how the anomaly detection model is to be trained, including time ranges to exclude from use for training the model and the time zone to use for the metric.
            An array of time ranges to exclude from use when the anomaly detection model is trained. Use this to make sure that events that could cause unusual values for the metric, such as deployments, aren't used when CloudWatch creates the model.
          in: formData
          items:
            type: string
          name: Configuration.ExcludedTimeRanges
          type: array
        - description: |-
            The configuration specifies details about how the anomaly detection model is to be trained, including time ranges to exclude from use for training the model and the time zone to use for the metric.
            <p>The time zone to use for the metric. This is useful to enable the model to automatically account for daylight savings time changes if the metric is sensitive to such time changes.</p> <p>To specify a time zone, use the name of the time zone as specified in the standard tz database. For more information, see <a href="https://en.wikipedia.org/wiki/Tz_database">tz database</a>.</p>
          in: formData
          name: Configuration.MetricTimezone
          type: string
        - enum:
            - PutAnomalyDetector
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutAnomalyDetectorOutput'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
      x-aws-operation-name: PutAnomalyDetector
  '/#Action=PutDashboard':
    get:
      description: '<p>Creates a dashboard if it does not already exist, or updates an existing dashboard. If you update a dashboard, the entire contents are replaced with what you specify here.</p> <p>All dashboards in your account are global, not region-specific.</p> <p>A simple way to create a dashboard using <code>PutDashboard</code> is to copy an existing dashboard. To copy an existing dashboard using the console, you can load the dashboard and then use the View/edit source command in the Actions menu to display the JSON block for that dashboard. Another way to copy a dashboard is to use <code>GetDashboard</code>, and then use the data returned within <code>DashboardBody</code> as the template for the new dashboard when you call <code>PutDashboard</code>.</p> <p>When you create a dashboard with <code>PutDashboard</code>, a good practice is to add a text widget at the top of the dashboard with a message that the dashboard was created by script and should not be changed in the console. This message could also point console users to the location of the <code>DashboardBody</code> script or the CloudFormation template used to create the dashboard.</p>'
      operationId: GET PutDashboard
      parameters:
        - description: 'The name of the dashboard. If a dashboard with this name already exists, this call modifies that dashboard, replacing its current contents. Otherwise, a new dashboard is created. The maximum length is 255, and valid characters are A-Z, a-z, 0-9, "-", and "_". This parameter is required.'
          in: query
          name: DashboardName
          required: true
          type: string
        - description: '<p>The detailed information about the dashboard in JSON format, including the widgets to include and their location on the dashboard. This parameter is required.</p> <p>For more information about the syntax, see <a>CloudWatch-Dashboard-Body-Structure</a>.</p>'
          in: query
          name: DashboardBody
          required: true
          type: string
        - enum:
            - PutDashboard
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutDashboardOutput'
        '480':
          description: DashboardInvalidInputError
          schema:
            $ref: '#/definitions/DashboardInvalidInputError'
        '481':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      x-aws-operation-name: PutDashboard
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a dashboard if it does not already exist, or updates an existing dashboard. If you update a dashboard, the entire contents are replaced with what you specify here.</p> <p>All dashboards in your account are global, not region-specific.</p> <p>A simple way to create a dashboard using <code>PutDashboard</code> is to copy an existing dashboard. To copy an existing dashboard using the console, you can load the dashboard and then use the View/edit source command in the Actions menu to display the JSON block for that dashboard. Another way to copy a dashboard is to use <code>GetDashboard</code>, and then use the data returned within <code>DashboardBody</code> as the template for the new dashboard when you call <code>PutDashboard</code>.</p> <p>When you create a dashboard with <code>PutDashboard</code>, a good practice is to add a text widget at the top of the dashboard with a message that the dashboard was created by script and should not be changed in the console. This message could also point console users to the location of the <code>DashboardBody</code> script or the CloudFormation template used to create the dashboard.</p>'
      operationId: POST PutDashboard
      parameters:
        - description: 'The name of the dashboard. If a dashboard with this name already exists, this call modifies that dashboard, replacing its current contents. Otherwise, a new dashboard is created. The maximum length is 255, and valid characters are A-Z, a-z, 0-9, "-", and "_". This parameter is required.'
          in: formData
          name: DashboardName
          required: true
          type: string
        - description: '<p>The detailed information about the dashboard in JSON format, including the widgets to include and their location on the dashboard. This parameter is required.</p> <p>For more information about the syntax, see <a>CloudWatch-Dashboard-Body-Structure</a>.</p>'
          in: formData
          name: DashboardBody
          required: true
          type: string
        - enum:
            - PutDashboard
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutDashboardOutput'
        '480':
          description: DashboardInvalidInputError
          schema:
            $ref: '#/definitions/DashboardInvalidInputError'
        '481':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      x-aws-operation-name: PutDashboard
  '/#Action=PutMetricAlarm':
    get:
      description: '<p>Creates or updates an alarm and associates it with the specified metric, metric math expression, or anomaly detection model.</p> <p>Alarms based on anomaly detection models cannot have Auto Scaling actions.</p> <p>When this operation creates an alarm, the alarm state is immediately set to <code>INSUFFICIENT_DATA</code>. The alarm is then evaluated and its state is set appropriately. Any actions associated with the new state are then executed.</p> <p>When you update an existing alarm, its state is left unchanged, but the update completely overwrites the previous configuration of the alarm.</p> <p>If you are an IAM user, you must have Amazon EC2 permissions for some alarm operations:</p> <ul> <li> <p> <code>iam:CreateServiceLinkedRole</code> for all alarms with EC2 actions</p> </li> <li> <p> <code>ec2:DescribeInstanceStatus</code> and <code>ec2:DescribeInstances</code> for all alarms on EC2 instance status metrics</p> </li> <li> <p> <code>ec2:StopInstances</code> for alarms with stop actions</p> </li> <li> <p> <code>ec2:TerminateInstances</code> for alarms with terminate actions</p> </li> <li> <p>No specific permissions are needed for alarms with recover actions</p> </li> </ul> <p>If you have read/write permissions for Amazon CloudWatch but not for Amazon EC2, you can still create an alarm, but the stop or terminate actions are not performed. However, if you are later granted the required permissions, the alarm actions that you created earlier are performed.</p> <p>If you are using an IAM role (for example, an EC2 instance profile), you cannot stop or terminate the instance using alarm actions. However, you can still see the alarm state and perform any other actions such as Amazon SNS notifications or Auto Scaling policies.</p> <p>If you are using temporary security credentials granted using AWS STS, you cannot stop or terminate an EC2 instance using alarm actions.</p> <p>The first time you create an alarm in the AWS Management Console, the CLI, or by using the PutMetricAlarm API, CloudWatch creates the necessary service-linked role for you. The service-linked role is called <code>AWSServiceRoleForCloudWatchEvents</code>. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html#iam-term-service-linked-role">AWS service-linked role</a>.</p>'
      operationId: GET PutMetricAlarm
      parameters:
        - description: The name for the alarm. This name must be unique within your AWS account.
          in: query
          maxLength: 255
          minLength: 1
          name: AlarmName
          required: true
          type: string
        - description: The description for the alarm.
          in: query
          maxLength: 1024
          minLength: 0
          name: AlarmDescription
          required: false
          type: string
        - description: Indicates whether actions should be executed during any changes to the alarm state. The default is <code>TRUE</code>.
          in: query
          name: ActionsEnabled
          required: false
          type: boolean
        - description: '<p>The actions to execute when this alarm transitions to an <code>OK</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code> | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code> | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i> </code> </p> <p>Valid Values (for use with IAM roles): <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code> </p>'
          in: query
          items:
            type: string
          name: OKActions
          required: false
          type: array
        - description: '<p>The actions to execute when this alarm transitions to the <code>ALARM</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code> | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code> | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i> </code> </p> <p>Valid Values (for use with IAM roles): <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code> </p>'
          in: query
          items:
            type: string
          name: AlarmActions
          required: false
          type: array
        - description: '<p>The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code> | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code> | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i> </code> </p> <p>Valid Values (for use with IAM roles): <code>&gt;arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code> </p>'
          in: query
          items:
            type: string
          name: InsufficientDataActions
          required: false
          type: array
        - description: '<p>The name for the metric associated with the alarm. For each <code>PutMetricAlarm</code> operation, you must specify either <code>MetricName</code> or a <code>Metrics</code> array.</p> <p>If you are creating an alarm based on a math expression, you cannot specify this parameter, or any of the <code>Dimensions</code>, <code>Period</code>, <code>Namespace</code>, <code>Statistic</code>, or <code>ExtendedStatistic</code> parameters. Instead, you specify all this information in the <code>Metrics</code> array.</p>'
          in: query
          maxLength: 255
          minLength: 1
          name: MetricName
          required: false
          type: string
        - description: The namespace for the metric associated specified in <code>MetricName</code>.
          in: query
          maxLength: 255
          minLength: 1
          name: Namespace
          pattern: '[^:].*'
          required: false
          type: string
        - description: 'The statistic for the metric specified in <code>MetricName</code>, other than percentile. For percentile statistics, use <code>ExtendedStatistic</code>. When you call <code>PutMetricAlarm</code> and specify a <code>MetricName</code>, you must specify either <code>Statistic</code> or <code>ExtendedStatistic,</code> but not both.'
          enum:
            - SampleCount
            - Average
            - Sum
            - Minimum
            - Maximum
          in: query
          name: Statistic
          required: false
          type: string
        - description: 'The percentile statistic for the metric specified in <code>MetricName</code>. Specify a value between p0.0 and p100. When you call <code>PutMetricAlarm</code> and specify a <code>MetricName</code>, you must specify either <code>Statistic</code> or <code>ExtendedStatistic,</code> but not both.'
          in: query
          name: ExtendedStatistic
          pattern: 'p(\d{1,2}(\.\d{0,2})?|100)'
          required: false
          type: string
        - description: The dimensions for the metric specified in <code>MetricName</code>.
          in: query
          items:
            type: string
          name: Dimensions
          required: false
          type: array
        - description: '<p>The length, in seconds, used each time the metric specified in <code>MetricName</code> is evaluated. Valid values are 10, 30, and any multiple of 60.</p> <p> <code>Period</code> is required for alarms based on static thresholds. If you are creating an alarm based on a metric math expression, you specify the period for each metric within the objects in the <code>Metrics</code> array.</p> <p>Be sure to specify 10 or 30 only for metrics that are stored by a <code>PutMetricData</code> call with a <code>StorageResolution</code> of 1. If you specify a period of 10 or 30 for a metric that does not have sub-minute resolution, the alarm still attempts to gather data at the period rate that you specify. In this case, it does not receive data for the attempts that do not correspond to a one-minute data resolution, and the alarm may often lapse into INSUFFICENT_DATA status. Specifying 10 or 30 also sets this alarm as a high-resolution alarm, which has a higher charge than other alarms. For more information about pricing, see <a href="https://aws.amazon.com/cloudwatch/pricing/">Amazon CloudWatch Pricing</a>.</p> <p>An alarm''s total current evaluation period can be no longer than one day, so <code>Period</code> multiplied by <code>EvaluationPeriods</code> cannot be more than 86,400 seconds.</p>'
          in: query
          minimum: 1
          name: Period
          required: false
          type: integer
        - description: '<p>The unit of measure for the statistic. For example, the units for the Amazon EC2 NetworkIn metric are Bytes because NetworkIn tracks the number of bytes that an instance receives on all network interfaces. You can also specify a unit when you create a custom metric. Units help provide conceptual meaning to your data. Metric data points that specify a unit of measure, such as Percent, are aggregated separately.</p> <p>If you don''t specify <code>Unit</code>, CloudWatch retrieves all unit types that have been published for the metric and attempts to evaluate the alarm. Usually metrics are published with only one unit, so the alarm will work as intended.</p> <p>However, if the metric is published with multiple types of units and you don''t specify a unit, the alarm''s behavior is not defined and will behave un-predictably.</p> <p>We recommend omitting <code>Unit</code> so that you don''t inadvertently specify an incorrect unit that is not published for this metric. Doing so causes the alarm to be stuck in the <code>INSUFFICIENT DATA</code> state.</p>'
          enum:
            - Seconds
            - Microseconds
            - Milliseconds
            - Bytes
            - Kilobytes
            - Megabytes
            - Gigabytes
            - Terabytes
            - Bits
            - Kilobits
            - Megabits
            - Gigabits
            - Terabits
            - Percent
            - Count
            - Bytes/Second
            - Kilobytes/Second
            - Megabytes/Second
            - Gigabytes/Second
            - Terabytes/Second
            - Bits/Second
            - Kilobits/Second
            - Megabits/Second
            - Gigabits/Second
            - Terabits/Second
            - Count/Second
            - None
          in: query
          name: Unit
          required: false
          type: string
        - description: '<p>The number of periods over which data is compared to the specified threshold. If you are setting an alarm that requires that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are setting an "M out of N" alarm, this value is the N.</p> <p>An alarm''s total current evaluation period can be no longer than one day, so this number multiplied by <code>Period</code> cannot be more than 86,400 seconds.</p>'
          in: query
          minimum: 1
          name: EvaluationPeriods
          required: true
          type: integer
        - description: 'The number of datapoints that must be breaching to trigger the alarm. This is used only if you are setting an "M out of N" alarm. In that case, this value is the M. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation">Evaluating an Alarm</a> in the <i>Amazon CloudWatch User Guide</i>.'
          in: query
          minimum: 1
          name: DatapointsToAlarm
          required: false
          type: integer
        - description: '<p>The value against which the specified statistic is compared.</p> <p>This parameter is required for alarms based on static thresholds, but should not be used for alarms based on anomaly detection models.</p>'
          format: double
          in: query
          name: Threshold
          required: false
          type: number
        - description: '<p> The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand.</p> <p>The values <code>LessThanLowerOrGreaterThanUpperThreshold</code>, <code>LessThanLowerThreshold</code>, and <code>GreaterThanUpperThreshold</code> are used only for alarms based on anomaly detection models.</p>'
          enum:
            - GreaterThanOrEqualToThreshold
            - GreaterThanThreshold
            - LessThanThreshold
            - LessThanOrEqualToThreshold
            - LessThanLowerOrGreaterThanUpperThreshold
            - LessThanLowerThreshold
            - GreaterThanUpperThreshold
          in: query
          name: ComparisonOperator
          required: true
          type: string
        - description: '<p> Sets how this alarm is to handle missing data points. If <code>TreatMissingData</code> is omitted, the default behavior of <code>missing</code> is used. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data">Configuring How CloudWatch Alarms Treats Missing Data</a>.</p> <p>Valid Values: <code>breaching | notBreaching | ignore | missing</code> </p>'
          in: query
          maxLength: 255
          minLength: 1
          name: TreatMissingData
          required: false
          type: string
        - description: '<p> Used only for alarms based on percentiles. If you specify <code>ignore</code>, the alarm state does not change during periods with too few data points to be statistically significant. If you specify <code>evaluate</code> or omit this parameter, the alarm is always evaluated and possibly changes state no matter how many data points are available. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#percentiles-with-low-samples">Percentile-Based CloudWatch Alarms and Low Data Samples</a>.</p> <p>Valid Values: <code>evaluate | ignore</code> </p>'
          in: query
          maxLength: 255
          minLength: 1
          name: EvaluateLowSampleCountPercentile
          required: false
          type: string
        - description: '<p>An array of <code>MetricDataQuery</code> structures that enable you to create an alarm based on the result of a metric math expression. For each <code>PutMetricAlarm</code> operation, you must specify either <code>MetricName</code> or a <code>Metrics</code> array.</p> <p>Each item in the <code>Metrics</code> array either retrieves a metric or performs a math expression.</p> <p>One item in the <code>Metrics</code> array is the expression that the alarm watches. You designate this expression by setting <code>ReturnValue</code> to true for this object in the array. For more information, see <a>MetricDataQuery</a>.</p> <p>If you use the <code>Metrics</code> parameter, you cannot include the <code>MetricName</code>, <code>Dimensions</code>, <code>Period</code>, <code>Namespace</code>, <code>Statistic</code>, or <code>ExtendedStatistic</code> parameters of <code>PutMetricAlarm</code> in the same operation. Instead, you retrieve the metrics you are using in your math expression as part of the <code>Metrics</code> array.</p>'
          in: query
          items:
            type: string
          name: Metrics
          required: false
          type: array
        - description: '<p>A list of key-value pairs to associate with the alarm. You can associate as many as 50 tags with an alarm.</p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values.</p>'
          in: query
          items:
            type: string
          name: Tags
          required: false
          type: array
        - description: '<p>If this is an alarm based on an anomaly detection model, make this value match the ID of the <code>ANOMALY_DETECTION_BAND</code> function.</p> <p>For an example of how to use this parameter, see the <b>Anomaly Detection Model Alarm</b> example on this page.</p> <p>If your alarm uses this parameter, it cannot have Auto Scaling actions.</p>'
          in: query
          maxLength: 255
          minLength: 1
          name: ThresholdMetricId
          required: false
          type: string
        - enum:
            - PutMetricAlarm
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: LimitExceededFault
          schema:
            $ref: '#/definitions/LimitExceededFault'
      x-aws-operation-name: PutMetricAlarm
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates or updates an alarm and associates it with the specified metric, metric math expression, or anomaly detection model.</p> <p>Alarms based on anomaly detection models cannot have Auto Scaling actions.</p> <p>When this operation creates an alarm, the alarm state is immediately set to <code>INSUFFICIENT_DATA</code>. The alarm is then evaluated and its state is set appropriately. Any actions associated with the new state are then executed.</p> <p>When you update an existing alarm, its state is left unchanged, but the update completely overwrites the previous configuration of the alarm.</p> <p>If you are an IAM user, you must have Amazon EC2 permissions for some alarm operations:</p> <ul> <li> <p> <code>iam:CreateServiceLinkedRole</code> for all alarms with EC2 actions</p> </li> <li> <p> <code>ec2:DescribeInstanceStatus</code> and <code>ec2:DescribeInstances</code> for all alarms on EC2 instance status metrics</p> </li> <li> <p> <code>ec2:StopInstances</code> for alarms with stop actions</p> </li> <li> <p> <code>ec2:TerminateInstances</code> for alarms with terminate actions</p> </li> <li> <p>No specific permissions are needed for alarms with recover actions</p> </li> </ul> <p>If you have read/write permissions for Amazon CloudWatch but not for Amazon EC2, you can still create an alarm, but the stop or terminate actions are not performed. However, if you are later granted the required permissions, the alarm actions that you created earlier are performed.</p> <p>If you are using an IAM role (for example, an EC2 instance profile), you cannot stop or terminate the instance using alarm actions. However, you can still see the alarm state and perform any other actions such as Amazon SNS notifications or Auto Scaling policies.</p> <p>If you are using temporary security credentials granted using AWS STS, you cannot stop or terminate an EC2 instance using alarm actions.</p> <p>The first time you create an alarm in the AWS Management Console, the CLI, or by using the PutMetricAlarm API, CloudWatch creates the necessary service-linked role for you. The service-linked role is called <code>AWSServiceRoleForCloudWatchEvents</code>. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html#iam-term-service-linked-role">AWS service-linked role</a>.</p>'
      operationId: POST PutMetricAlarm
      parameters:
        - description: The name for the alarm. This name must be unique within your AWS account.
          in: formData
          maxLength: 255
          minLength: 1
          name: AlarmName
          required: true
          type: string
        - description: The description for the alarm.
          in: formData
          maxLength: 1024
          minLength: 0
          name: AlarmDescription
          required: false
          type: string
        - description: Indicates whether actions should be executed during any changes to the alarm state. The default is <code>TRUE</code>.
          in: formData
          name: ActionsEnabled
          required: false
          type: boolean
        - description: '<p>The actions to execute when this alarm transitions to an <code>OK</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code> | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code> | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i> </code> </p> <p>Valid Values (for use with IAM roles): <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code> </p>'
          in: formData
          items:
            type: string
          name: OKActions
          required: false
          type: array
        - description: '<p>The actions to execute when this alarm transitions to the <code>ALARM</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code> | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code> | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i> </code> </p> <p>Valid Values (for use with IAM roles): <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code> </p>'
          in: formData
          items:
            type: string
          name: AlarmActions
          required: false
          type: array
        - description: '<p>The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code> | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code> | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i> </code> </p> <p>Valid Values (for use with IAM roles): <code>&gt;arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code> </p>'
          in: formData
          items:
            type: string
          name: InsufficientDataActions
          required: false
          type: array
        - description: '<p>The name for the metric associated with the alarm. For each <code>PutMetricAlarm</code> operation, you must specify either <code>MetricName</code> or a <code>Metrics</code> array.</p> <p>If you are creating an alarm based on a math expression, you cannot specify this parameter, or any of the <code>Dimensions</code>, <code>Period</code>, <code>Namespace</code>, <code>Statistic</code>, or <code>ExtendedStatistic</code> parameters. Instead, you specify all this information in the <code>Metrics</code> array.</p>'
          in: formData
          maxLength: 255
          minLength: 1
          name: MetricName
          required: false
          type: string
        - description: The namespace for the metric associated specified in <code>MetricName</code>.
          in: formData
          maxLength: 255
          minLength: 1
          name: Namespace
          pattern: '[^:].*'
          required: false
          type: string
        - description: 'The statistic for the metric specified in <code>MetricName</code>, other than percentile. For percentile statistics, use <code>ExtendedStatistic</code>. When you call <code>PutMetricAlarm</code> and specify a <code>MetricName</code>, you must specify either <code>Statistic</code> or <code>ExtendedStatistic,</code> but not both.'
          enum:
            - SampleCount
            - Average
            - Sum
            - Minimum
            - Maximum
          in: formData
          name: Statistic
          required: false
          type: string
        - description: 'The percentile statistic for the metric specified in <code>MetricName</code>. Specify a value between p0.0 and p100. When you call <code>PutMetricAlarm</code> and specify a <code>MetricName</code>, you must specify either <code>Statistic</code> or <code>ExtendedStatistic,</code> but not both.'
          in: formData
          name: ExtendedStatistic
          pattern: 'p(\d{1,2}(\.\d{0,2})?|100)'
          required: false
          type: string
        - description: The dimensions for the metric specified in <code>MetricName</code>.
          in: formData
          items:
            type: string
          name: Dimensions
          required: false
          type: array
        - description: '<p>The length, in seconds, used each time the metric specified in <code>MetricName</code> is evaluated. Valid values are 10, 30, and any multiple of 60.</p> <p> <code>Period</code> is required for alarms based on static thresholds. If you are creating an alarm based on a metric math expression, you specify the period for each metric within the objects in the <code>Metrics</code> array.</p> <p>Be sure to specify 10 or 30 only for metrics that are stored by a <code>PutMetricData</code> call with a <code>StorageResolution</code> of 1. If you specify a period of 10 or 30 for a metric that does not have sub-minute resolution, the alarm still attempts to gather data at the period rate that you specify. In this case, it does not receive data for the attempts that do not correspond to a one-minute data resolution, and the alarm may often lapse into INSUFFICENT_DATA status. Specifying 10 or 30 also sets this alarm as a high-resolution alarm, which has a higher charge than other alarms. For more information about pricing, see <a href="https://aws.amazon.com/cloudwatch/pricing/">Amazon CloudWatch Pricing</a>.</p> <p>An alarm''s total current evaluation period can be no longer than one day, so <code>Period</code> multiplied by <code>EvaluationPeriods</code> cannot be more than 86,400 seconds.</p>'
          in: formData
          minimum: 1
          name: Period
          required: false
          type: integer
        - description: '<p>The unit of measure for the statistic. For example, the units for the Amazon EC2 NetworkIn metric are Bytes because NetworkIn tracks the number of bytes that an instance receives on all network interfaces. You can also specify a unit when you create a custom metric. Units help provide conceptual meaning to your data. Metric data points that specify a unit of measure, such as Percent, are aggregated separately.</p> <p>If you don''t specify <code>Unit</code>, CloudWatch retrieves all unit types that have been published for the metric and attempts to evaluate the alarm. Usually metrics are published with only one unit, so the alarm will work as intended.</p> <p>However, if the metric is published with multiple types of units and you don''t specify a unit, the alarm''s behavior is not defined and will behave un-predictably.</p> <p>We recommend omitting <code>Unit</code> so that you don''t inadvertently specify an incorrect unit that is not published for this metric. Doing so causes the alarm to be stuck in the <code>INSUFFICIENT DATA</code> state.</p>'
          enum:
            - Seconds
            - Microseconds
            - Milliseconds
            - Bytes
            - Kilobytes
            - Megabytes
            - Gigabytes
            - Terabytes
            - Bits
            - Kilobits
            - Megabits
            - Gigabits
            - Terabits
            - Percent
            - Count
            - Bytes/Second
            - Kilobytes/Second
            - Megabytes/Second
            - Gigabytes/Second
            - Terabytes/Second
            - Bits/Second
            - Kilobits/Second
            - Megabits/Second
            - Gigabits/Second
            - Terabits/Second
            - Count/Second
            - None
          in: formData
          name: Unit
          required: false
          type: string
        - description: '<p>The number of periods over which data is compared to the specified threshold. If you are setting an alarm that requires that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are setting an "M out of N" alarm, this value is the N.</p> <p>An alarm''s total current evaluation period can be no longer than one day, so this number multiplied by <code>Period</code> cannot be more than 86,400 seconds.</p>'
          in: formData
          minimum: 1
          name: EvaluationPeriods
          required: true
          type: integer
        - description: 'The number of datapoints that must be breaching to trigger the alarm. This is used only if you are setting an "M out of N" alarm. In that case, this value is the M. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation">Evaluating an Alarm</a> in the <i>Amazon CloudWatch User Guide</i>.'
          in: formData
          minimum: 1
          name: DatapointsToAlarm
          required: false
          type: integer
        - description: '<p>The value against which the specified statistic is compared.</p> <p>This parameter is required for alarms based on static thresholds, but should not be used for alarms based on anomaly detection models.</p>'
          format: double
          in: formData
          name: Threshold
          required: false
          type: number
        - description: '<p> The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand.</p> <p>The values <code>LessThanLowerOrGreaterThanUpperThreshold</code>, <code>LessThanLowerThreshold</code>, and <code>GreaterThanUpperThreshold</code> are used only for alarms based on anomaly detection models.</p>'
          enum:
            - GreaterThanOrEqualToThreshold
            - GreaterThanThreshold
            - LessThanThreshold
            - LessThanOrEqualToThreshold
            - LessThanLowerOrGreaterThanUpperThreshold
            - LessThanLowerThreshold
            - GreaterThanUpperThreshold
          in: formData
          name: ComparisonOperator
          required: true
          type: string
        - description: '<p> Sets how this alarm is to handle missing data points. If <code>TreatMissingData</code> is omitted, the default behavior of <code>missing</code> is used. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data">Configuring How CloudWatch Alarms Treats Missing Data</a>.</p> <p>Valid Values: <code>breaching | notBreaching | ignore | missing</code> </p>'
          in: formData
          maxLength: 255
          minLength: 1
          name: TreatMissingData
          required: false
          type: string
        - description: '<p> Used only for alarms based on percentiles. If you specify <code>ignore</code>, the alarm state does not change during periods with too few data points to be statistically significant. If you specify <code>evaluate</code> or omit this parameter, the alarm is always evaluated and possibly changes state no matter how many data points are available. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#percentiles-with-low-samples">Percentile-Based CloudWatch Alarms and Low Data Samples</a>.</p> <p>Valid Values: <code>evaluate | ignore</code> </p>'
          in: formData
          maxLength: 255
          minLength: 1
          name: EvaluateLowSampleCountPercentile
          required: false
          type: string
        - description: '<p>An array of <code>MetricDataQuery</code> structures that enable you to create an alarm based on the result of a metric math expression. For each <code>PutMetricAlarm</code> operation, you must specify either <code>MetricName</code> or a <code>Metrics</code> array.</p> <p>Each item in the <code>Metrics</code> array either retrieves a metric or performs a math expression.</p> <p>One item in the <code>Metrics</code> array is the expression that the alarm watches. You designate this expression by setting <code>ReturnValue</code> to true for this object in the array. For more information, see <a>MetricDataQuery</a>.</p> <p>If you use the <code>Metrics</code> parameter, you cannot include the <code>MetricName</code>, <code>Dimensions</code>, <code>Period</code>, <code>Namespace</code>, <code>Statistic</code>, or <code>ExtendedStatistic</code> parameters of <code>PutMetricAlarm</code> in the same operation. Instead, you retrieve the metrics you are using in your math expression as part of the <code>Metrics</code> array.</p>'
          in: formData
          items:
            type: string
          name: Metrics
          required: false
          type: array
        - description: '<p>A list of key-value pairs to associate with the alarm. You can associate as many as 50 tags with an alarm.</p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values.</p>'
          in: formData
          items:
            type: string
          name: Tags
          required: false
          type: array
        - description: '<p>If this is an alarm based on an anomaly detection model, make this value match the ID of the <code>ANOMALY_DETECTION_BAND</code> function.</p> <p>For an example of how to use this parameter, see the <b>Anomaly Detection Model Alarm</b> example on this page.</p> <p>If your alarm uses this parameter, it cannot have Auto Scaling actions.</p>'
          in: formData
          maxLength: 255
          minLength: 1
          name: ThresholdMetricId
          required: false
          type: string
        - enum:
            - PutMetricAlarm
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: LimitExceededFault
          schema:
            $ref: '#/definitions/LimitExceededFault'
      x-aws-operation-name: PutMetricAlarm
  '/#Action=PutMetricData':
    get:
      description: '<p>Publishes metric data points to Amazon CloudWatch. CloudWatch associates the data points with the specified metric. If the specified metric does not exist, CloudWatch creates the metric. When CloudWatch creates a metric, it can take up to fifteen minutes for the metric to appear in calls to <a>ListMetrics</a>.</p> <p>You can publish either individual data points in the <code>Value</code> field, or arrays of values and the number of times each value occurred during the period by using the <code>Values</code> and <code>Counts</code> fields in the <code>MetricDatum</code> structure. Using the <code>Values</code> and <code>Counts</code> method enables you to publish up to 150 values per metric with one <code>PutMetricData</code> request, and supports retrieving percentile statistics on this data.</p> <p>Each <code>PutMetricData</code> request is limited to 40 KB in size for HTTP POST requests. You can send a payload compressed by gzip. Each request is also limited to no more than 20 different metrics.</p> <p>Although the <code>Value</code> parameter accepts numbers of type <code>Double</code>, CloudWatch rejects values that are either too small or too large. Values must be in the range of 8.515920e-109 to 1.174271e+108 (Base 10) or 2e-360 to 2e360 (Base 2). In addition, special values (for example, NaN, +Infinity, -Infinity) are not supported.</p> <p>You can use up to 10 dimensions per metric to further clarify what data the metric collects. Each dimension consists of a Name and Value pair. For more information about specifying dimensions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publishing Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Data points with time stamps from 24 hours ago or longer can take at least 48 hours to become available for <a>GetMetricData</a> or <a>GetMetricStatistics</a> from the time they are submitted.</p> <p>CloudWatch needs raw data points to calculate percentile statistics. If you publish data using a statistic set instead, you can only retrieve percentile statistics for this data if one of the following conditions is true:</p> <ul> <li> <p>The <code>SampleCount</code> value of the statistic set is 1 and <code>Min</code>, <code>Max</code>, and <code>Sum</code> are all equal.</p> </li> <li> <p>The <code>Min</code> and <code>Max</code> are equal, and <code>Sum</code> is equal to <code>Min</code> multiplied by <code>SampleCount</code>.</p> </li> </ul>'
      operationId: GET PutMetricData
      parameters:
        - description: '<p>The namespace for the metric data.</p> <p>To avoid conflicts with AWS service namespaces, you should not specify a namespace that begins with <code>AWS/</code> </p>'
          in: query
          maxLength: 255
          minLength: 1
          name: Namespace
          pattern: '[^:].*'
          required: true
          type: string
        - description: The data for the metric. The array can include no more than 20 metrics per call.
          in: query
          items:
            type: string
          name: MetricData
          required: true
          type: array
        - enum:
            - PutMetricData
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '482':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '483':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      x-aws-operation-name: PutMetricData
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Publishes metric data points to Amazon CloudWatch. CloudWatch associates the data points with the specified metric. If the specified metric does not exist, CloudWatch creates the metric. When CloudWatch creates a metric, it can take up to fifteen minutes for the metric to appear in calls to <a>ListMetrics</a>.</p> <p>You can publish either individual data points in the <code>Value</code> field, or arrays of values and the number of times each value occurred during the period by using the <code>Values</code> and <code>Counts</code> fields in the <code>MetricDatum</code> structure. Using the <code>Values</code> and <code>Counts</code> method enables you to publish up to 150 values per metric with one <code>PutMetricData</code> request, and supports retrieving percentile statistics on this data.</p> <p>Each <code>PutMetricData</code> request is limited to 40 KB in size for HTTP POST requests. You can send a payload compressed by gzip. Each request is also limited to no more than 20 different metrics.</p> <p>Although the <code>Value</code> parameter accepts numbers of type <code>Double</code>, CloudWatch rejects values that are either too small or too large. Values must be in the range of 8.515920e-109 to 1.174271e+108 (Base 10) or 2e-360 to 2e360 (Base 2). In addition, special values (for example, NaN, +Infinity, -Infinity) are not supported.</p> <p>You can use up to 10 dimensions per metric to further clarify what data the metric collects. Each dimension consists of a Name and Value pair. For more information about specifying dimensions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publishing Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Data points with time stamps from 24 hours ago or longer can take at least 48 hours to become available for <a>GetMetricData</a> or <a>GetMetricStatistics</a> from the time they are submitted.</p> <p>CloudWatch needs raw data points to calculate percentile statistics. If you publish data using a statistic set instead, you can only retrieve percentile statistics for this data if one of the following conditions is true:</p> <ul> <li> <p>The <code>SampleCount</code> value of the statistic set is 1 and <code>Min</code>, <code>Max</code>, and <code>Sum</code> are all equal.</p> </li> <li> <p>The <code>Min</code> and <code>Max</code> are equal, and <code>Sum</code> is equal to <code>Min</code> multiplied by <code>SampleCount</code>.</p> </li> </ul>'
      operationId: POST PutMetricData
      parameters:
        - description: '<p>The namespace for the metric data.</p> <p>To avoid conflicts with AWS service namespaces, you should not specify a namespace that begins with <code>AWS/</code> </p>'
          in: formData
          maxLength: 255
          minLength: 1
          name: Namespace
          pattern: '[^:].*'
          required: true
          type: string
        - description: The data for the metric. The array can include no more than 20 metrics per call.
          in: formData
          items:
            type: string
          name: MetricData
          required: true
          type: array
        - enum:
            - PutMetricData
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '482':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '483':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      x-aws-operation-name: PutMetricData
  '/#Action=SetAlarmState':
    get:
      description: 'Temporarily sets the state of an alarm for testing purposes. When the updated state differs from the previous value, the action configured for the appropriate state is invoked. For example, if your alarm is configured to send an Amazon SNS message when an alarm is triggered, temporarily changing the alarm state to <code>ALARM</code> sends an SNS message. The alarm returns to its actual state (often within seconds). Because the alarm state change happens quickly, it is typically only visible in the alarm''s <b>History</b> tab in the Amazon CloudWatch console or through <a>DescribeAlarmHistory</a>.'
      operationId: GET SetAlarmState
      parameters:
        - description: The name for the alarm. This name must be unique within the AWS account. The maximum length is 255 characters.
          in: query
          maxLength: 255
          minLength: 1
          name: AlarmName
          required: true
          type: string
        - description: The value of the state.
          enum:
            - OK
            - ALARM
            - INSUFFICIENT_DATA
          in: query
          name: StateValue
          required: true
          type: string
        - description: 'The reason that this alarm is set to this specific state, in text format.'
          in: query
          maxLength: 1023
          minLength: 0
          name: StateReason
          required: true
          type: string
        - description: 'The reason that this alarm is set to this specific state, in JSON format.'
          in: query
          maxLength: 4000
          minLength: 0
          name: StateReasonData
          required: false
          type: string
        - enum:
            - SetAlarmState
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
        '481':
          description: InvalidFormatFault
          schema:
            $ref: '#/definitions/InvalidFormatFault'
      x-aws-operation-name: SetAlarmState
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Temporarily sets the state of an alarm for testing purposes. When the updated state differs from the previous value, the action configured for the appropriate state is invoked. For example, if your alarm is configured to send an Amazon SNS message when an alarm is triggered, temporarily changing the alarm state to <code>ALARM</code> sends an SNS message. The alarm returns to its actual state (often within seconds). Because the alarm state change happens quickly, it is typically only visible in the alarm''s <b>History</b> tab in the Amazon CloudWatch console or through <a>DescribeAlarmHistory</a>.'
      operationId: POST SetAlarmState
      parameters:
        - description: The name for the alarm. This name must be unique within the AWS account. The maximum length is 255 characters.
          in: formData
          maxLength: 255
          minLength: 1
          name: AlarmName
          required: true
          type: string
        - description: The value of the state.
          enum:
            - OK
            - ALARM
            - INSUFFICIENT_DATA
          in: formData
          name: StateValue
          required: true
          type: string
        - description: 'The reason that this alarm is set to this specific state, in text format.'
          in: formData
          maxLength: 1023
          minLength: 0
          name: StateReason
          required: true
          type: string
        - description: 'The reason that this alarm is set to this specific state, in JSON format.'
          in: formData
          maxLength: 4000
          minLength: 0
          name: StateReasonData
          required: false
          type: string
        - enum:
            - SetAlarmState
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
        '481':
          description: InvalidFormatFault
          schema:
            $ref: '#/definitions/InvalidFormatFault'
      x-aws-operation-name: SetAlarmState
  '/#Action=TagResource':
    get:
      description: '<p>Assigns one or more tags (key-value pairs) to the specified CloudWatch resource. Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values. In CloudWatch, alarms can be tagged.</p> <p>Tags don''t have any semantic meaning to AWS and are interpreted strictly as strings of characters.</p> <p>You can use the <code>TagResource</code> action with a resource that already has tags. If you specify a new tag key for the resource, this tag is appended to the list of tags associated with the resource. If you specify a tag key that is already associated with the resource, the new tag value that you specify replaces the previous value for that tag.</p> <p>You can associate as many as 50 tags with a resource.</p>'
      operationId: GET TagResource
      parameters:
        - description: 'The ARN of the CloudWatch resource that you''re adding tags to. For more information on ARN format, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-cloudwatch">Example ARNs</a> in the <i>Amazon Web Services General Reference</i>.'
          in: query
          maxLength: 1024
          minLength: 1
          name: ResourceARN
          required: true
          type: string
        - description: The list of key-value pairs to associate with the resource.
          in: query
          items:
            type: string
          name: Tags
          required: true
          type: array
        - enum:
            - TagResource
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '483':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      x-aws-operation-name: TagResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Assigns one or more tags (key-value pairs) to the specified CloudWatch resource. Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values. In CloudWatch, alarms can be tagged.</p> <p>Tags don''t have any semantic meaning to AWS and are interpreted strictly as strings of characters.</p> <p>You can use the <code>TagResource</code> action with a resource that already has tags. If you specify a new tag key for the resource, this tag is appended to the list of tags associated with the resource. If you specify a tag key that is already associated with the resource, the new tag value that you specify replaces the previous value for that tag.</p> <p>You can associate as many as 50 tags with a resource.</p>'
      operationId: POST TagResource
      parameters:
        - description: 'The ARN of the CloudWatch resource that you''re adding tags to. For more information on ARN format, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-cloudwatch">Example ARNs</a> in the <i>Amazon Web Services General Reference</i>.'
          in: formData
          maxLength: 1024
          minLength: 1
          name: ResourceARN
          required: true
          type: string
        - description: The list of key-value pairs to associate with the resource.
          in: formData
          items:
            type: string
          name: Tags
          required: true
          type: array
        - enum:
            - TagResource
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '483':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      x-aws-operation-name: TagResource
  '/#Action=UntagResource':
    get:
      description: Removes one or more tags from the specified resource.
      operationId: GET UntagResource
      parameters:
        - description: 'The ARN of the CloudWatch resource that you''re removing tags from. For more information on ARN format, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-cloudwatch">Example ARNs</a> in the <i>Amazon Web Services General Reference</i>.'
          in: query
          maxLength: 1024
          minLength: 1
          name: ResourceARN
          required: true
          type: string
        - description: The list of tag keys to remove from the resource.
          in: query
          items:
            type: string
          name: TagKeys
          required: true
          type: array
        - enum:
            - UntagResource
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '483':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      x-aws-operation-name: UntagResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Removes one or more tags from the specified resource.
      operationId: POST UntagResource
      parameters:
        - description: 'The ARN of the CloudWatch resource that you''re removing tags from. For more information on ARN format, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-cloudwatch">Example ARNs</a> in the <i>Amazon Web Services General Reference</i>.'
          in: formData
          maxLength: 1024
          minLength: 1
          name: ResourceARN
          required: true
          type: string
        - description: The list of tag keys to remove from the resource.
          in: formData
          items:
            type: string
          name: TagKeys
          required: true
          type: array
        - enum:
            - UntagResource
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2010-08-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '483':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      x-aws-operation-name: UntagResource
definitions:
  ActionPrefix:
    maxLength: 1024
    minLength: 1
    type: string
  ActionsEnabled:
    type: boolean
  AlarmArn:
    maxLength: 1600
    minLength: 1
    type: string
  AlarmDescription:
    maxLength: 1024
    minLength: 0
    type: string
  AlarmHistoryItem:
    description: Represents the history of a specific alarm.
    properties:
      AlarmName:
        $ref: '#/definitions/AlarmName'
        description: The descriptive name for the alarm.
      HistoryData:
        $ref: '#/definitions/HistoryData'
        description: 'Data about the alarm, in JSON format.'
      HistoryItemType:
        $ref: '#/definitions/HistoryItemType'
        description: The type of alarm history item.
      HistorySummary:
        $ref: '#/definitions/HistorySummary'
        description: 'A summary of the alarm history, in text format.'
      Timestamp:
        $ref: '#/definitions/Timestamp'
        description: The time stamp for the alarm history item.
    type: object
  AlarmHistoryItems:
    items:
      $ref: '#/definitions/AlarmHistoryItem'
    type: array
  AlarmName:
    maxLength: 255
    minLength: 1
    type: string
  AlarmNamePrefix:
    maxLength: 255
    minLength: 1
    type: string
  AlarmNames:
    items:
      $ref: '#/definitions/AlarmName'
    maxItems: 100
    type: array
  AmazonResourceName:
    maxLength: 1024
    minLength: 1
    type: string
  AnomalyDetector:
    description: An anomaly detection model associated with a particular CloudWatch metric athresnd statistic. You can use the model to display a band of expected normal values when the metric is graphed.
    properties:
      Configuration:
        $ref: '#/definitions/AnomalyDetectorConfiguration'
        description: 'The configuration specifies details about how the anomaly detection model is to be trained, including time ranges to exclude from use for training the model, and the time zone to use for the metric.'
      Dimensions:
        $ref: '#/definitions/Dimensions'
        description: The metric dimensions associated with the anomaly detection model.
      MetricName:
        $ref: '#/definitions/MetricName'
        description: The name of the metric associated with the anomaly detection model.
      Namespace:
        $ref: '#/definitions/Namespace'
        description: The namespace of the metric associated with the anomaly detection model.
      Stat:
        $ref: '#/definitions/Stat'
        description: The statistic associated with the anomaly detection model.
    type: object
  AnomalyDetectorConfiguration:
    description: 'The configuration specifies details about how the anomaly detection model is to be trained, including time ranges to exclude from use for training the model and the time zone to use for the metric.'
    properties:
      ExcludedTimeRanges:
        $ref: '#/definitions/AnomalyDetectorExcludedTimeRanges'
        description: 'An array of time ranges to exclude from use when the anomaly detection model is trained. Use this to make sure that events that could cause unusual values for the metric, such as deployments, aren''t used when CloudWatch creates the model.'
      MetricTimezone:
        $ref: '#/definitions/AnomalyDetectorMetricTimezone'
        description: '<p>The time zone to use for the metric. This is useful to enable the model to automatically account for daylight savings time changes if the metric is sensitive to such time changes.</p> <p>To specify a time zone, use the name of the time zone as specified in the standard tz database. For more information, see <a href="https://en.wikipedia.org/wiki/Tz_database">tz database</a>.</p>'
    type: object
  AnomalyDetectorExcludedTimeRanges:
    items:
      $ref: '#/definitions/Range'
    type: array
  AnomalyDetectorMetricTimezone:
    type: string
  AnomalyDetectors:
    items:
      $ref: '#/definitions/AnomalyDetector'
    type: array
  ComparisonOperator:
    enum:
      - GreaterThanOrEqualToThreshold
      - GreaterThanThreshold
      - LessThanThreshold
      - LessThanOrEqualToThreshold
      - LessThanLowerOrGreaterThanUpperThreshold
      - LessThanLowerThreshold
      - GreaterThanUpperThreshold
    type: string
  ConcurrentModificationException: {}
  Counts:
    items:
      $ref: '#/definitions/DatapointValue'
    type: array
  DashboardArn:
    type: string
  DashboardBody:
    type: string
  DashboardEntries:
    items:
      $ref: '#/definitions/DashboardEntry'
    type: array
  DashboardEntry:
    description: Represents a specific dashboard.
    properties:
      DashboardArn:
        $ref: '#/definitions/DashboardArn'
        description: The Amazon Resource Name (ARN) of the dashboard.
      DashboardName:
        $ref: '#/definitions/DashboardName'
        description: The name of the dashboard.
      LastModified:
        $ref: '#/definitions/LastModified'
        description: 'The time stamp of when the dashboard was last modified, either by an API call or through the console. This number is expressed as the number of milliseconds since Jan 1, 1970 00:00:00 UTC.'
      Size:
        $ref: '#/definitions/Size'
        description: 'The size of the dashboard, in bytes.'
    type: object
  DashboardInvalidInputError: {}
  DashboardName:
    type: string
  DashboardNamePrefix:
    type: string
  DashboardNames:
    items:
      $ref: '#/definitions/DashboardName'
    type: array
  DashboardNotFoundError: {}
  DashboardValidationMessage:
    description: An error or warning for the operation.
    properties:
      DataPath:
        $ref: '#/definitions/DataPath'
        description: The data path related to the message.
      Message:
        $ref: '#/definitions/Message'
        description: A message describing the error or warning.
    type: object
  DashboardValidationMessages:
    items:
      $ref: '#/definitions/DashboardValidationMessage'
    type: array
  DataPath:
    type: string
  Datapoint:
    description: Encapsulates the statistical data that CloudWatch computes from metric data.
    properties:
      Average:
        $ref: '#/definitions/DatapointValue'
        description: The average of the metric values that correspond to the data point.
      ExtendedStatistics:
        $ref: '#/definitions/DatapointValueMap'
        description: The percentile statistic for the data point.
      Maximum:
        $ref: '#/definitions/DatapointValue'
        description: The maximum metric value for the data point.
      Minimum:
        $ref: '#/definitions/DatapointValue'
        description: The minimum metric value for the data point.
      SampleCount:
        $ref: '#/definitions/DatapointValue'
        description: The number of metric values that contributed to the aggregate value of this data point.
      Sum:
        $ref: '#/definitions/DatapointValue'
        description: The sum of the metric values for the data point.
      Timestamp:
        $ref: '#/definitions/Timestamp'
        description: The time stamp used for the data point.
      Unit:
        $ref: '#/definitions/StandardUnit'
        description: The standard unit for the data point.
    type: object
  DatapointValue:
    format: double
    type: number
  DatapointValueMap:
    additionalProperties:
      $ref: '#/definitions/DatapointValue'
    type: object
  DatapointValues:
    items:
      $ref: '#/definitions/DatapointValue'
    type: array
  Datapoints:
    items:
      $ref: '#/definitions/Datapoint'
    type: array
  DatapointsToAlarm:
    minimum: 1
    type: integer
  DeleteAlarmsInput:
    properties:
      AlarmNames:
        $ref: '#/definitions/AlarmNames'
        description: The alarms to be deleted.
    required:
      - AlarmNames
    type: object
  DeleteAnomalyDetectorInput:
    properties:
      Dimensions:
        $ref: '#/definitions/Dimensions'
        description: The metric dimensions associated with the anomaly detection model to delete.
      MetricName:
        $ref: '#/definitions/MetricName'
        description: The metric name associated with the anomaly detection model to delete.
      Namespace:
        $ref: '#/definitions/Namespace'
        description: The namespace associated with the anomaly detection model to delete.
      Stat:
        $ref: '#/definitions/Stat'
        description: The statistic associated with the anomaly detection model to delete.
    required:
      - Namespace
      - MetricName
      - Stat
    type: object
  DeleteAnomalyDetectorOutput:
    properties: {}
    type: object
  DeleteDashboardsInput:
    properties:
      DashboardNames:
        $ref: '#/definitions/DashboardNames'
        description: The dashboards to be deleted. This parameter is required.
    required:
      - DashboardNames
    type: object
  DeleteDashboardsOutput:
    properties: {}
    type: object
  DescribeAlarmHistoryInput:
    properties:
      AlarmName:
        $ref: '#/definitions/AlarmName'
        description: The name of the alarm.
      EndDate:
        $ref: '#/definitions/Timestamp'
        description: The ending date to retrieve alarm history.
      HistoryItemType:
        $ref: '#/definitions/HistoryItemType'
        description: The type of alarm histories to retrieve.
      MaxRecords:
        $ref: '#/definitions/MaxRecords'
        description: The maximum number of alarm history records to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token returned by a previous call to indicate that there is more data available.
      StartDate:
        $ref: '#/definitions/Timestamp'
        description: The starting date to retrieve alarm history.
    type: object
  DescribeAlarmHistoryOutput:
    properties:
      AlarmHistoryItems:
        $ref: '#/definitions/AlarmHistoryItems'
        description: 'The alarm histories, in JSON format.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token that marks the start of the next batch of returned results.
    type: object
  DescribeAlarmsForMetricInput:
    properties:
      Dimensions:
        $ref: '#/definitions/Dimensions'
        description: 'The dimensions associated with the metric. If the metric has any associated dimensions, you must specify them in order for the call to succeed.'
      ExtendedStatistic:
        $ref: '#/definitions/ExtendedStatistic'
        description: The percentile statistic for the metric. Specify a value between p0.0 and p100.
      MetricName:
        $ref: '#/definitions/MetricName'
        description: The name of the metric.
      Namespace:
        $ref: '#/definitions/Namespace'
        description: The namespace of the metric.
      Period:
        $ref: '#/definitions/Period'
        description: 'The period, in seconds, over which the statistic is applied.'
      Statistic:
        $ref: '#/definitions/Statistic'
        description: 'The statistic for the metric, other than percentiles. For percentile statistics, use <code>ExtendedStatistics</code>.'
      Unit:
        $ref: '#/definitions/StandardUnit'
        description: The unit for the metric.
    required:
      - MetricName
      - Namespace
    type: object
  DescribeAlarmsForMetricOutput:
    properties:
      MetricAlarms:
        $ref: '#/definitions/MetricAlarms'
        description: The information for each alarm with the specified metric.
    type: object
  DescribeAlarmsInput:
    properties:
      ActionPrefix:
        $ref: '#/definitions/ActionPrefix'
        description: The action name prefix.
      AlarmNamePrefix:
        $ref: '#/definitions/AlarmNamePrefix'
        description: 'The alarm name prefix. If this parameter is specified, you cannot specify <code>AlarmNames</code>.'
      AlarmNames:
        $ref: '#/definitions/AlarmNames'
        description: The names of the alarms.
      MaxRecords:
        $ref: '#/definitions/MaxRecords'
        description: The maximum number of alarm descriptions to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token returned by a previous call to indicate that there is more data available.
      StateValue:
        $ref: '#/definitions/StateValue'
        description: The state value to be used in matching alarms.
    type: object
  DescribeAlarmsOutput:
    properties:
      MetricAlarms:
        $ref: '#/definitions/MetricAlarms'
        description: The information for the specified alarms.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token that marks the start of the next batch of returned results.
    type: object
  DescribeAnomalyDetectorsInput:
    properties:
      Dimensions:
        $ref: '#/definitions/Dimensions'
        description: 'Limits the results to only the anomaly detection models that are associated with the specified metric dimensions. If there are multiple metrics that have these dimensions and have anomaly detection models associated, they''re all returned.'
      MaxResults:
        $ref: '#/definitions/MaxReturnedResultsCount'
        description: '<p>The maximum number of results to return in one operation. The maximum value you can specify is 10.</p> <p>To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. </p>'
      MetricName:
        $ref: '#/definitions/MetricName'
        description: 'Limits the results to only the anomaly detection models that are associated with the specified metric name. If there are multiple metrics with this name in different namespaces that have anomaly detection models, they''re all returned.'
      Namespace:
        $ref: '#/definitions/Namespace'
        description: Limits the results to only the anomaly detection models that are associated with the specified namespace.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: Use the token returned by the previous operation to request the next page of results.
    type: object
  DescribeAnomalyDetectorsOutput:
    properties:
      AnomalyDetectors:
        $ref: '#/definitions/AnomalyDetectors'
        description: The list of anomaly detection models returned by the operation.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: A token that you can use in a subsequent operation to retrieve the next set of results.
    type: object
  Dimension:
    description: Expands the identity of a metric.
    properties:
      Name:
        $ref: '#/definitions/DimensionName'
        description: The name of the dimension.
      Value:
        $ref: '#/definitions/DimensionValue'
        description: The value representing the dimension measurement.
    required:
      - Name
      - Value
    type: object
  DimensionFilter:
    description: Represents filters for a dimension.
    properties:
      Name:
        $ref: '#/definitions/DimensionName'
        description: The dimension name to be matched.
      Value:
        $ref: '#/definitions/DimensionValue'
        description: The value of the dimension to be matched.
    required:
      - Name
    type: object
  DimensionFilters:
    items:
      $ref: '#/definitions/DimensionFilter'
    maxItems: 10
    type: array
  DimensionName:
    maxLength: 255
    minLength: 1
    type: string
  DimensionValue:
    maxLength: 255
    minLength: 1
    type: string
  Dimensions:
    items:
      $ref: '#/definitions/Dimension'
    maxItems: 10
    type: array
  DisableAlarmActionsInput:
    properties:
      AlarmNames:
        $ref: '#/definitions/AlarmNames'
        description: The names of the alarms.
    required:
      - AlarmNames
    type: object
  EnableAlarmActionsInput:
    properties:
      AlarmNames:
        $ref: '#/definitions/AlarmNames'
        description: The names of the alarms.
    required:
      - AlarmNames
    type: object
  EvaluateLowSampleCountPercentile:
    maxLength: 255
    minLength: 1
    type: string
  EvaluationPeriods:
    minimum: 1
    type: integer
  ExtendedStatistic:
    pattern: 'p(\d{1,2}(\.\d{0,2})?|100)'
    type: string
  ExtendedStatistics:
    items:
      $ref: '#/definitions/ExtendedStatistic'
    maxItems: 10
    minItems: 1
    type: array
  GetDashboardInput:
    properties:
      DashboardName:
        $ref: '#/definitions/DashboardName'
        description: The name of the dashboard to be described.
    required:
      - DashboardName
    type: object
  GetDashboardOutput:
    properties:
      DashboardArn:
        $ref: '#/definitions/DashboardArn'
        description: The Amazon Resource Name (ARN) of the dashboard.
      DashboardBody:
        $ref: '#/definitions/DashboardBody'
        description: 'The detailed information about the dashboard, including what widgets are included and their location on the dashboard. For more information about the <code>DashboardBody</code> syntax, see <a>CloudWatch-Dashboard-Body-Structure</a>. '
      DashboardName:
        $ref: '#/definitions/DashboardName'
        description: The name of the dashboard.
    type: object
  GetMetricDataInput:
    properties:
      EndTime:
        $ref: '#/definitions/Timestamp'
        description: '<p>The time stamp indicating the latest data to be returned.</p> <p>The value specified is exclusive; results include data points up to the specified time stamp.</p> <p>For better performance, specify <code>StartTime</code> and <code>EndTime</code> values that align with the value of the metric''s <code>Period</code> and sync up with the beginning and end of an hour. For example, if the <code>Period</code> of a metric is 5 minutes, specifying 12:05 or 12:30 as <code>EndTime</code> can get a faster response from CloudWatch than setting 12:07 or 12:29 as the <code>EndTime</code>.</p>'
      MaxDatapoints:
        $ref: '#/definitions/GetMetricDataMaxDatapoints'
        description: 'The maximum number of data points the request should return before paginating. If you omit this, the default of 100,800 is used.'
      MetricDataQueries:
        $ref: '#/definitions/MetricDataQueries'
        description: 'The metric queries to be returned. A single <code>GetMetricData</code> call can include as many as 100 <code>MetricDataQuery</code> structures. Each of these structures can specify either a metric to retrieve, or a math expression to perform on retrieved data. '
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'Include this value, if it was returned by the previous call, to get the next set of data points.'
      ScanBy:
        $ref: '#/definitions/ScanBy'
        description: The order in which data points should be returned. <code>TimestampDescending</code> returns the newest data first and paginates when the <code>MaxDatapoints</code> limit is reached. <code>TimestampAscending</code> returns the oldest data first and paginates when the <code>MaxDatapoints</code> limit is reached.
      StartTime:
        $ref: '#/definitions/Timestamp'
        description: '<p>The time stamp indicating the earliest data to be returned.</p> <p>The value specified is inclusive; results include data points with the specified time stamp. </p> <p>CloudWatch rounds the specified time stamp as follows:</p> <ul> <li> <p>Start time less than 15 days ago - Round down to the nearest whole minute. For example, 12:32:34 is rounded down to 12:32:00.</p> </li> <li> <p>Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval. For example, 12:32:34 is rounded down to 12:30:00.</p> </li> <li> <p>Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval. For example, 12:32:34 is rounded down to 12:00:00.</p> </li> </ul> <p>If you set <code>Period</code> to 5, 10, or 30, the start time of your request is rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the start time of your request is rounded down and you receive data from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes of data, using a period of 5 seconds, you receive data timestamped between 15:02:15 and 15:07:15. </p> <p>For better performance, specify <code>StartTime</code> and <code>EndTime</code> values that align with the value of the metric''s <code>Period</code> and sync up with the beginning and end of an hour. For example, if the <code>Period</code> of a metric is 5 minutes, specifying 12:05 or 12:30 as <code>StartTime</code> can get a faster response from CloudWatch than setting 12:07 or 12:29 as the <code>StartTime</code>.</p>'
    required:
      - MetricDataQueries
      - StartTime
      - EndTime
    type: object
  GetMetricDataMaxDatapoints:
    type: integer
  GetMetricDataOutput:
    properties:
      Messages:
        $ref: '#/definitions/MetricDataResultMessages'
        description: '<p>Contains a message about this <code>GetMetricData</code> operation, if the operation results in such a message. An example of a message that may be returned is <code>Maximum number of allowed metrics exceeded</code>. If there is a message, as much of the operation as possible is still executed.</p> <p>A message appears here only if it is related to the global <code>GetMetricData</code> operation. Any message about a specific metric returned by the operation appears in the <code>MetricDataResult</code> object returned for that metric.</p>'
      MetricDataResults:
        $ref: '#/definitions/MetricDataResults'
        description: 'The metrics that are returned, including the metric name, namespace, and dimensions.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: A token that marks the next batch of returned results.
    type: object
  GetMetricStatisticsInput:
    properties:
      Dimensions:
        $ref: '#/definitions/Dimensions'
        description: 'The dimensions. If the metric contains multiple dimensions, you must include a value for each dimension. CloudWatch treats each unique combination of dimensions as a separate metric. If a specific combination of dimensions was not published, you can''t retrieve statistics for it. You must specify the same dimensions that were used when the metrics were created. For an example, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#dimension-combinations">Dimension Combinations</a> in the <i>Amazon CloudWatch User Guide</i>. For more information about specifying dimensions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publishing Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.'
      EndTime:
        $ref: '#/definitions/Timestamp'
        description: '<p>The time stamp that determines the last data point to return.</p> <p>The value specified is exclusive; results include data points up to the specified time stamp. The time stamp must be in ISO 8601 UTC format (for example, 2016-10-10T23:00:00Z).</p>'
      ExtendedStatistics:
        $ref: '#/definitions/ExtendedStatistics'
        description: 'The percentile statistics. Specify values between p0.0 and p100. When calling <code>GetMetricStatistics</code>, you must specify either <code>Statistics</code> or <code>ExtendedStatistics</code>, but not both. Percentile statistics are not available for metrics when any of the metric values are negative numbers.'
      MetricName:
        $ref: '#/definitions/MetricName'
        description: 'The name of the metric, with or without spaces.'
      Namespace:
        $ref: '#/definitions/Namespace'
        description: 'The namespace of the metric, with or without spaces.'
      Period:
        $ref: '#/definitions/Period'
        description: '<p>The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a <code>PutMetricData</code> call that includes a <code>StorageResolution</code> of 1 second.</p> <p>If the <code>StartTime</code> parameter specifies a time stamp that is greater than 3 hours ago, you must specify the period as follows or no data points in that time range is returned:</p> <ul> <li> <p>Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).</p> </li> <li> <p>Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).</p> </li> <li> <p>Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).</p> </li> </ul>'
      StartTime:
        $ref: '#/definitions/Timestamp'
        description: '<p>The time stamp that determines the first data point to return. Start times are evaluated relative to the time that CloudWatch receives the request.</p> <p>The value specified is inclusive; results include data points with the specified time stamp. The time stamp must be in ISO 8601 UTC format (for example, 2016-10-03T23:00:00Z).</p> <p>CloudWatch rounds the specified time stamp as follows:</p> <ul> <li> <p>Start time less than 15 days ago - Round down to the nearest whole minute. For example, 12:32:34 is rounded down to 12:32:00.</p> </li> <li> <p>Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval. For example, 12:32:34 is rounded down to 12:30:00.</p> </li> <li> <p>Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval. For example, 12:32:34 is rounded down to 12:00:00.</p> </li> </ul> <p>If you set <code>Period</code> to 5, 10, or 30, the start time of your request is rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the start time of your request is rounded down and you receive data from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes of data, using a period of 5 seconds, you receive data timestamped between 15:02:15 and 15:07:15. </p>'
      Statistics:
        $ref: '#/definitions/Statistics'
        description: 'The metric statistics, other than percentile. For percentile statistics, use <code>ExtendedStatistics</code>. When calling <code>GetMetricStatistics</code>, you must specify either <code>Statistics</code> or <code>ExtendedStatistics</code>, but not both.'
      Unit:
        $ref: '#/definitions/StandardUnit'
        description: 'The unit for a given metric. If you omit <code>Unit</code>, all data that was collected with any unit is returned, along with the corresponding units that were specified when the data was reported to CloudWatch. If you specify a unit, the operation returns only data data that was collected with that unit specified. If you specify a unit that does not match the data collected, the results of the operation are null. CloudWatch does not perform unit conversions.'
    required:
      - Namespace
      - MetricName
      - StartTime
      - EndTime
      - Period
    type: object
  GetMetricStatisticsOutput:
    properties:
      Datapoints:
        $ref: '#/definitions/Datapoints'
        description: The data points for the specified metric.
      Label:
        $ref: '#/definitions/MetricLabel'
        description: A label for the specified metric.
    type: object
  GetMetricWidgetImageInput:
    properties:
      MetricWidget:
        $ref: '#/definitions/MetricWidget'
        description: '<p>A JSON string that defines the bitmap graph to be retrieved. The string includes the metrics to include in the graph, statistics, annotations, title, axis limits, and so on. You can include only one <code>MetricWidget</code> parameter in each <code>GetMetricWidgetImage</code> call.</p> <p>For more information about the syntax of <code>MetricWidget</code> see <a>CloudWatch-Metric-Widget-Structure</a>.</p> <p>If any metric on the graph could not load all the requested data points, an orange triangle with an exclamation point appears next to the graph legend.</p>'
      OutputFormat:
        $ref: '#/definitions/OutputFormat'
        description: '<p>The format of the resulting image. Only PNG images are supported.</p> <p>The default is <code>png</code>. If you specify <code>png</code>, the API returns an HTTP response with the content-type set to <code>text/xml</code>. The image data is in a <code>MetricWidgetImage</code> field. For example:</p> <p> <code> &lt;GetMetricWidgetImageResponse xmlns=&lt;URLstring&gt;&gt;</code> </p> <p> <code> &lt;GetMetricWidgetImageResult&gt;</code> </p> <p> <code> &lt;MetricWidgetImage&gt;</code> </p> <p> <code> iVBORw0KGgoAAAANSUhEUgAAAlgAAAGQEAYAAAAip...</code> </p> <p> <code> &lt;/MetricWidgetImage&gt;</code> </p> <p> <code> &lt;/GetMetricWidgetImageResult&gt;</code> </p> <p> <code> &lt;ResponseMetadata&gt;</code> </p> <p> <code> &lt;RequestId&gt;6f0d4192-4d42-11e8-82c1-f539a07e0e3b&lt;/RequestId&gt;</code> </p> <p> <code> &lt;/ResponseMetadata&gt;</code> </p> <p> <code>&lt;/GetMetricWidgetImageResponse&gt;</code> </p> <p>The <code>image/png</code> setting is intended only for custom HTTP requests. For most use cases, and all actions using an AWS SDK, you should use <code>png</code>. If you specify <code>image/png</code>, the HTTP response has a content-type set to <code>image/png</code>, and the body of the response is a PNG image. </p>'
    required:
      - MetricWidget
    type: object
  GetMetricWidgetImageOutput:
    properties:
      MetricWidgetImage:
        $ref: '#/definitions/MetricWidgetImage'
        description: 'The image of the graph, in the output format specified.'
    type: object
  HistoryData:
    maxLength: 4095
    minLength: 1
    type: string
  HistoryItemType:
    enum:
      - ConfigurationUpdate
      - StateUpdate
      - Action
    type: string
  HistorySummary:
    maxLength: 255
    minLength: 1
    type: string
  InternalServiceFault: {}
  InvalidFormatFault: {}
  InvalidNextToken: {}
  InvalidParameterCombinationException: {}
  InvalidParameterValueException: {}
  LastModified:
    format: date-time
    type: string
  LimitExceededException: {}
  LimitExceededFault: {}
  ListDashboardsInput:
    properties:
      DashboardNamePrefix:
        $ref: '#/definitions/DashboardNamePrefix'
        description: 'If you specify this parameter, only the dashboards with names starting with the specified string are listed. The maximum length is 255, and valid characters are A-Z, a-z, 0-9, ".", "-", and "_". '
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token returned by a previous call to indicate that there is more data available.
    type: object
  ListDashboardsOutput:
    properties:
      DashboardEntries:
        $ref: '#/definitions/DashboardEntries'
        description: The list of matching dashboards.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token that marks the start of the next batch of returned results.
    type: object
  ListMetricsInput:
    properties:
      Dimensions:
        $ref: '#/definitions/DimensionFilters'
        description: The dimensions to filter against.
      MetricName:
        $ref: '#/definitions/MetricName'
        description: The name of the metric to filter against.
      Namespace:
        $ref: '#/definitions/Namespace'
        description: The namespace to filter against.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token returned by a previous call to indicate that there is more data available.
    type: object
  ListMetricsOutput:
    properties:
      Metrics:
        $ref: '#/definitions/Metrics'
        description: The metrics.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token that marks the start of the next batch of returned results.
    type: object
  ListTagsForResourceInput:
    properties:
      ResourceARN:
        $ref: '#/definitions/AmazonResourceName'
        description: 'The ARN of the CloudWatch resource that you want to view tags for. For more information on ARN format, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-cloudwatch">Example ARNs</a> in the <i>Amazon Web Services General Reference</i>.'
    required:
      - ResourceARN
    type: object
  ListTagsForResourceOutput:
    properties:
      Tags:
        $ref: '#/definitions/TagList'
        description: The list of tag keys and values associated with the resource you specified.
    type: object
  MaxRecords:
    maximum: 100
    minimum: 1
    type: integer
  MaxReturnedResultsCount:
    minimum: 1
    type: integer
  Message:
    type: string
  MessageData:
    description: 'A message returned by the <code>GetMetricData</code>API, including a code and a description.'
    properties:
      Code:
        $ref: '#/definitions/MessageDataCode'
        description: The error code or status code associated with the message.
      Value:
        $ref: '#/definitions/MessageDataValue'
        description: The message text.
    type: object
  MessageDataCode:
    type: string
  MessageDataValue:
    type: string
  Metric:
    description: Represents a specific metric.
    properties:
      Dimensions:
        $ref: '#/definitions/Dimensions'
        description: The dimensions for the metric.
      MetricName:
        $ref: '#/definitions/MetricName'
        description: The name of the metric. This is a required field.
      Namespace:
        $ref: '#/definitions/Namespace'
        description: The namespace of the metric.
    type: object
  MetricAlarm:
    description: Represents an alarm.
    properties:
      ActionsEnabled:
        $ref: '#/definitions/ActionsEnabled'
        description: Indicates whether actions should be executed during any changes to the alarm state.
      AlarmActions:
        $ref: '#/definitions/ResourceList'
        description: The actions to execute when this alarm transitions to the <code>ALARM</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).
      AlarmArn:
        $ref: '#/definitions/AlarmArn'
        description: The Amazon Resource Name (ARN) of the alarm.
      AlarmConfigurationUpdatedTimestamp:
        $ref: '#/definitions/Timestamp'
        description: The time stamp of the last update to the alarm configuration.
      AlarmDescription:
        $ref: '#/definitions/AlarmDescription'
        description: The description of the alarm.
      AlarmName:
        $ref: '#/definitions/AlarmName'
        description: The name of the alarm.
      ComparisonOperator:
        $ref: '#/definitions/ComparisonOperator'
        description: The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand.
      DatapointsToAlarm:
        $ref: '#/definitions/DatapointsToAlarm'
        description: The number of datapoints that must be breaching to trigger the alarm.
      Dimensions:
        $ref: '#/definitions/Dimensions'
        description: The dimensions for the metric associated with the alarm.
      EvaluateLowSampleCountPercentile:
        $ref: '#/definitions/EvaluateLowSampleCountPercentile'
        description: 'Used only for alarms based on percentiles. If <code>ignore</code>, the alarm state does not change during periods with too few data points to be statistically significant. If <code>evaluate</code> or this parameter is not used, the alarm is always evaluated and possibly changes state no matter how many data points are available.'
      EvaluationPeriods:
        $ref: '#/definitions/EvaluationPeriods'
        description: The number of periods over which data is compared to the specified threshold.
      ExtendedStatistic:
        $ref: '#/definitions/ExtendedStatistic'
        description: The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100.
      InsufficientDataActions:
        $ref: '#/definitions/ResourceList'
        description: The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).
      MetricName:
        $ref: '#/definitions/MetricName'
        description: 'The name of the metric associated with the alarm, if this is an alarm based on a single metric.'
      Metrics:
        $ref: '#/definitions/MetricDataQueries'
        description: 'An array of MetricDataQuery structures, used in an alarm based on a metric math expression. Each structure either retrieves a metric or performs a math expression. One item in the Metrics array is the math expression that the alarm watches. This expression by designated by having <code>ReturnValue</code> set to true.'
      Namespace:
        $ref: '#/definitions/Namespace'
        description: The namespace of the metric associated with the alarm.
      OKActions:
        $ref: '#/definitions/ResourceList'
        description: The actions to execute when this alarm transitions to the <code>OK</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).
      Period:
        $ref: '#/definitions/Period'
        description: 'The period, in seconds, over which the statistic is applied.'
      StateReason:
        $ref: '#/definitions/StateReason'
        description: 'An explanation for the alarm state, in text format.'
      StateReasonData:
        $ref: '#/definitions/StateReasonData'
        description: 'An explanation for the alarm state, in JSON format.'
      StateUpdatedTimestamp:
        $ref: '#/definitions/Timestamp'
        description: The time stamp of the last update to the alarm state.
      StateValue:
        $ref: '#/definitions/StateValue'
        description: The state value for the alarm.
      Statistic:
        $ref: '#/definitions/Statistic'
        description: 'The statistic for the metric associated with the alarm, other than percentile. For percentile statistics, use <code>ExtendedStatistic</code>.'
      Threshold:
        $ref: '#/definitions/Threshold'
        description: The value to compare with the specified statistic.
      ThresholdMetricId:
        $ref: '#/definitions/MetricId'
        description: 'In an alarm based on an anomaly detection model, this is the ID of the <code>ANOMALY_DETECTION_BAND</code> function used as the threshold for the alarm.'
      TreatMissingData:
        $ref: '#/definitions/TreatMissingData'
        description: 'Sets how this alarm is to handle missing data points. If this parameter is omitted, the default behavior of <code>missing</code> is used.'
      Unit:
        $ref: '#/definitions/StandardUnit'
        description: The unit of the metric associated with the alarm.
    type: object
  MetricAlarms:
    items:
      $ref: '#/definitions/MetricAlarm'
    type: array
  MetricData:
    items:
      $ref: '#/definitions/MetricDatum'
    type: array
  MetricDataQueries:
    items:
      $ref: '#/definitions/MetricDataQuery'
    type: array
  MetricDataQuery:
    description: '<p>This structure is used in both <code>GetMetricData</code> and <code>PutMetricAlarm</code>. The supported use of this structure is different for those two operations.</p> <p>When used in <code>GetMetricData</code>, it indicates the metric data to return, and whether this call is just retrieving a batch set of data for one metric, or is performing a math expression on metric data. A single <code>GetMetricData</code> call can include up to 100 <code>MetricDataQuery</code> structures.</p> <p>When used in <code>PutMetricAlarm</code>, it enables you to create an alarm based on a metric math expression. Each <code>MetricDataQuery</code> in the array specifies either a metric to retrieve, or a math expression to be performed on retrieved metrics. A single <code>PutMetricAlarm</code> call can include up to 20 <code>MetricDataQuery</code> structures in the array. The 20 structures can include as many as 10 structures that contain a <code>MetricStat</code> parameter to retrieve a metric, and as many as 10 structures that contain the <code>Expression</code> parameter to perform a math expression. Of those <code>Expression</code> structures, one must have <code>True</code> as the value for <code>ReturnData</code>. The result of this expression is the value the alarm watches.</p> <p>Any expression used in a <code>PutMetricAlarm</code> operation must return a single time series. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax">Metric Math Syntax and Functions</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Some of the parameters of this structure also have different uses whether you are using this structure in a <code>GetMetricData</code> operation or a <code>PutMetricAlarm</code> operation. These differences are explained in the following parameter list.</p>'
    properties:
      Expression:
        $ref: '#/definitions/MetricExpression'
        description: '<p>The math expression to be performed on the returned data, if this object is performing a math expression. This expression can use the <code>Id</code> of the other metrics to refer to those metrics, and can also use the <code>Id</code> of other expressions to use the result of those expressions. For more information about metric math expressions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax">Metric Math Syntax and Functions</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Within each MetricDataQuery object, you must specify either <code>Expression</code> or <code>MetricStat</code> but not both.</p>'
      Id:
        $ref: '#/definitions/MetricId'
        description: 'A short name used to tie this object to the results in the response. This name must be unique within a single call to <code>GetMetricData</code>. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.'
      Label:
        $ref: '#/definitions/MetricLabel'
        description: 'A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents. If the metric or expression is shown in a CloudWatch dashboard widget, the label is shown. If Label is omitted, CloudWatch generates a default.'
      MetricStat:
        $ref: '#/definitions/MetricStat'
        description: '<p>The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.</p> <p>Within one MetricDataQuery object, you must specify either <code>Expression</code> or <code>MetricStat</code> but not both.</p>'
      ReturnData:
        $ref: '#/definitions/ReturnData'
        description: '<p>When used in <code>GetMetricData</code>, this option indicates whether to return the timestamps and raw data values of this metric. If you are performing this call just to do math expressions and do not also need the raw data returned, you can specify <code>False</code>. If you omit this, the default of <code>True</code> is used.</p> <p>When used in <code>PutMetricAlarm</code>, specify <code>True</code> for the one expression result to use as the alarm. For all other metrics and expressions in the same <code>PutMetricAlarm</code> operation, specify <code>ReturnData</code> as False.</p>'
    required:
      - Id
    type: object
  MetricDataResult:
    description: 'A <code>GetMetricData</code> call returns an array of <code>MetricDataResult</code> structures. Each of these structures includes the data points for that metric, along with the timestamps of those data points and other identifying information.'
    properties:
      Id:
        $ref: '#/definitions/MetricId'
        description: The short name you specified to represent this metric.
      Label:
        $ref: '#/definitions/MetricLabel'
        description: The human-readable label associated with the data.
      Messages:
        $ref: '#/definitions/MetricDataResultMessages'
        description: A list of messages with additional information about the data returned.
      StatusCode:
        $ref: '#/definitions/StatusCode'
        description: 'The status of the returned data. <code>Complete</code> indicates that all data points in the requested time range were returned. <code>PartialData</code> means that an incomplete set of data points were returned. You can use the <code>NextToken</code> value that was returned and repeat your request to get more data points. <code>NextToken</code> is not returned if you are performing a math expression. <code>InternalError</code> indicates that an error occurred. Retry your request using <code>NextToken</code>, if present.'
      Timestamps:
        $ref: '#/definitions/Timestamps'
        description: 'The timestamps for the data points, formatted in Unix timestamp format. The number of timestamps always matches the number of values and the value for Timestamps[x] is Values[x].'
      Values:
        $ref: '#/definitions/DatapointValues'
        description: 'The data points for the metric corresponding to <code>Timestamps</code>. The number of values always matches the number of timestamps and the timestamp for Values[x] is Timestamps[x].'
    type: object
  MetricDataResultMessages:
    items:
      $ref: '#/definitions/MessageData'
    type: array
  MetricDataResults:
    items:
      $ref: '#/definitions/MetricDataResult'
    type: array
  MetricDatum:
    description: Encapsulates the information sent to either create a metric or add new values to be aggregated into an existing metric.
    properties:
      Counts:
        $ref: '#/definitions/Counts'
        description: '<p>Array of numbers that is used along with the <code>Values</code> array. Each number in the <code>Count</code> array is the number of times the corresponding value in the <code>Values</code> array occurred during the period. </p> <p>If you omit the <code>Counts</code> array, the default of 1 is used as the value for each count. If you include a <code>Counts</code> array, it must include the same amount of values as the <code>Values</code> array.</p>'
      Dimensions:
        $ref: '#/definitions/Dimensions'
        description: The dimensions associated with the metric.
      MetricName:
        $ref: '#/definitions/MetricName'
        description: The name of the metric.
      StatisticValues:
        $ref: '#/definitions/StatisticSet'
        description: The statistical values for the metric.
      StorageResolution:
        $ref: '#/definitions/StorageResolution'
        description: '<p>Valid values are 1 and 60. Setting this to 1 specifies this metric as a high-resolution metric, so that CloudWatch stores the metric with sub-minute resolution down to one second. Setting this to 60 specifies this metric as a regular-resolution metric, which CloudWatch stores at 1-minute resolution. Currently, high resolution is available only for custom metrics. For more information about high-resolution metrics, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html#high-resolution-metrics">High-Resolution Metrics</a> in the <i>Amazon CloudWatch User Guide</i>. </p> <p>This field is optional, if you do not specify it the default of 60 is used.</p>'
      Timestamp:
        $ref: '#/definitions/Timestamp'
        description: 'The time the metric data was received, expressed as the number of milliseconds since Jan 1, 1970 00:00:00 UTC.'
      Unit:
        $ref: '#/definitions/StandardUnit'
        description: '<p>When you are using a <code>Put</code> operation, this defines what unit you want to use when storing the metric.</p> <p>In a <code>Get</code> operation, this displays the unit that is used for the metric.</p>'
      Value:
        $ref: '#/definitions/DatapointValue'
        description: '<p>The value for the metric.</p> <p>Although the parameter accepts numbers of type Double, CloudWatch rejects values that are either too small or too large. Values must be in the range of 8.515920e-109 to 1.174271e+108 (Base 10) or 2e-360 to 2e360 (Base 2). In addition, special values (for example, NaN, +Infinity, -Infinity) are not supported.</p>'
      Values:
        $ref: '#/definitions/Values'
        description: '<p>Array of numbers representing the values for the metric during the period. Each unique value is listed just once in this array, and the corresponding number in the <code>Counts</code> array specifies the number of times that value occurred during the period. You can include up to 150 unique values in each <code>PutMetricData</code> action that specifies a <code>Values</code> array.</p> <p>Although the <code>Values</code> array accepts numbers of type <code>Double</code>, CloudWatch rejects values that are either too small or too large. Values must be in the range of 8.515920e-109 to 1.174271e+108 (Base 10) or 2e-360 to 2e360 (Base 2). In addition, special values (for example, NaN, +Infinity, -Infinity) are not supported.</p>'
    required:
      - MetricName
    type: object
  MetricExpression:
    maxLength: 1024
    minLength: 1
    type: string
  MetricId:
    maxLength: 255
    minLength: 1
    type: string
  MetricLabel:
    type: string
  MetricName:
    maxLength: 255
    minLength: 1
    type: string
  MetricStat:
    description: 'This structure defines the metric to be returned, along with the statistics, period, and units.'
    properties:
      Metric:
        $ref: '#/definitions/Metric'
        description: 'The metric to return, including the metric name, namespace, and dimensions.'
      Period:
        $ref: '#/definitions/Period'
        description: 'The period, in seconds, to use when retrieving the metric.'
      Stat:
        $ref: '#/definitions/Stat'
        description: The statistic to return. It can include any CloudWatch statistic or extended statistic.
      Unit:
        $ref: '#/definitions/StandardUnit'
        description: '<p>When you are using a <code>Put</code> operation, this defines what unit you want to use when storing the metric.</p> <p>In a <code>Get</code> operation, if you omit <code>Unit</code> then all data that was collected with any unit is returned, along with the corresponding units that were specified when the data was reported to CloudWatch. If you specify a unit, the operation returns only data data that was collected with that unit specified. If you specify a unit that does not match the data collected, the results of the operation are null. CloudWatch does not perform unit conversions.</p>'
    required:
      - Metric
      - Period
      - Stat
    type: object
  MetricWidget:
    type: string
  MetricWidgetImage:
    type: string
  Metrics:
    items:
      $ref: '#/definitions/Metric'
    type: array
  MissingRequiredParameterException: {}
  Namespace:
    maxLength: 255
    minLength: 1
    pattern: '[^:].*'
    type: string
  NextToken:
    type: string
  OutputFormat:
    type: string
  Period:
    minimum: 1
    type: integer
  PutAnomalyDetectorInput:
    properties:
      Configuration:
        $ref: '#/definitions/AnomalyDetectorConfiguration'
        description: '<p>The configuration specifies details about how the anomaly detection model is to be trained, including time ranges to exclude when training and updating the model. You can specify as many as 10 time ranges.</p> <p>The configuration can also include the time zone to use for the metric.</p> <p>You can in</p>'
      Dimensions:
        $ref: '#/definitions/Dimensions'
        description: The metric dimensions to create the anomaly detection model for.
      MetricName:
        $ref: '#/definitions/MetricName'
        description: The name of the metric to create the anomaly detection model for.
      Namespace:
        $ref: '#/definitions/Namespace'
        description: The namespace of the metric to create the anomaly detection model for.
      Stat:
        $ref: '#/definitions/Stat'
        description: The statistic to use for the metric and the anomaly detection model.
    required:
      - Namespace
      - MetricName
      - Stat
    type: object
  PutAnomalyDetectorOutput:
    properties: {}
    type: object
  PutDashboardInput:
    properties:
      DashboardBody:
        $ref: '#/definitions/DashboardBody'
        description: '<p>The detailed information about the dashboard in JSON format, including the widgets to include and their location on the dashboard. This parameter is required.</p> <p>For more information about the syntax, see <a>CloudWatch-Dashboard-Body-Structure</a>.</p>'
      DashboardName:
        $ref: '#/definitions/DashboardName'
        description: 'The name of the dashboard. If a dashboard with this name already exists, this call modifies that dashboard, replacing its current contents. Otherwise, a new dashboard is created. The maximum length is 255, and valid characters are A-Z, a-z, 0-9, "-", and "_". This parameter is required.'
    required:
      - DashboardName
      - DashboardBody
    type: object
  PutDashboardOutput:
    properties:
      DashboardValidationMessages:
        $ref: '#/definitions/DashboardValidationMessages'
        description: '<p>If the input for <code>PutDashboard</code> was correct and the dashboard was successfully created or modified, this result is empty.</p> <p>If this result includes only warning messages, then the input was valid enough for the dashboard to be created or modified, but some elements of the dashboard may not render.</p> <p>If this result includes error messages, the input was not valid and the operation failed.</p>'
    type: object
  PutMetricAlarmInput:
    properties:
      ActionsEnabled:
        $ref: '#/definitions/ActionsEnabled'
        description: Indicates whether actions should be executed during any changes to the alarm state. The default is <code>TRUE</code>.
      AlarmActions:
        $ref: '#/definitions/ResourceList'
        description: '<p>The actions to execute when this alarm transitions to the <code>ALARM</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code> | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code> | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i> </code> </p> <p>Valid Values (for use with IAM roles): <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code> </p>'
      AlarmDescription:
        $ref: '#/definitions/AlarmDescription'
        description: The description for the alarm.
      AlarmName:
        $ref: '#/definitions/AlarmName'
        description: The name for the alarm. This name must be unique within your AWS account.
      ComparisonOperator:
        $ref: '#/definitions/ComparisonOperator'
        description: '<p> The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand.</p> <p>The values <code>LessThanLowerOrGreaterThanUpperThreshold</code>, <code>LessThanLowerThreshold</code>, and <code>GreaterThanUpperThreshold</code> are used only for alarms based on anomaly detection models.</p>'
      DatapointsToAlarm:
        $ref: '#/definitions/DatapointsToAlarm'
        description: 'The number of datapoints that must be breaching to trigger the alarm. This is used only if you are setting an "M out of N" alarm. In that case, this value is the M. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation">Evaluating an Alarm</a> in the <i>Amazon CloudWatch User Guide</i>.'
      Dimensions:
        $ref: '#/definitions/Dimensions'
        description: The dimensions for the metric specified in <code>MetricName</code>.
      EvaluateLowSampleCountPercentile:
        $ref: '#/definitions/EvaluateLowSampleCountPercentile'
        description: '<p> Used only for alarms based on percentiles. If you specify <code>ignore</code>, the alarm state does not change during periods with too few data points to be statistically significant. If you specify <code>evaluate</code> or omit this parameter, the alarm is always evaluated and possibly changes state no matter how many data points are available. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#percentiles-with-low-samples">Percentile-Based CloudWatch Alarms and Low Data Samples</a>.</p> <p>Valid Values: <code>evaluate | ignore</code> </p>'
      EvaluationPeriods:
        $ref: '#/definitions/EvaluationPeriods'
        description: '<p>The number of periods over which data is compared to the specified threshold. If you are setting an alarm that requires that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are setting an "M out of N" alarm, this value is the N.</p> <p>An alarm''s total current evaluation period can be no longer than one day, so this number multiplied by <code>Period</code> cannot be more than 86,400 seconds.</p>'
      ExtendedStatistic:
        $ref: '#/definitions/ExtendedStatistic'
        description: 'The percentile statistic for the metric specified in <code>MetricName</code>. Specify a value between p0.0 and p100. When you call <code>PutMetricAlarm</code> and specify a <code>MetricName</code>, you must specify either <code>Statistic</code> or <code>ExtendedStatistic,</code> but not both.'
      InsufficientDataActions:
        $ref: '#/definitions/ResourceList'
        description: '<p>The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code> | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code> | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i> </code> </p> <p>Valid Values (for use with IAM roles): <code>&gt;arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code> </p>'
      MetricName:
        $ref: '#/definitions/MetricName'
        description: '<p>The name for the metric associated with the alarm. For each <code>PutMetricAlarm</code> operation, you must specify either <code>MetricName</code> or a <code>Metrics</code> array.</p> <p>If you are creating an alarm based on a math expression, you cannot specify this parameter, or any of the <code>Dimensions</code>, <code>Period</code>, <code>Namespace</code>, <code>Statistic</code>, or <code>ExtendedStatistic</code> parameters. Instead, you specify all this information in the <code>Metrics</code> array.</p>'
      Metrics:
        $ref: '#/definitions/MetricDataQueries'
        description: '<p>An array of <code>MetricDataQuery</code> structures that enable you to create an alarm based on the result of a metric math expression. For each <code>PutMetricAlarm</code> operation, you must specify either <code>MetricName</code> or a <code>Metrics</code> array.</p> <p>Each item in the <code>Metrics</code> array either retrieves a metric or performs a math expression.</p> <p>One item in the <code>Metrics</code> array is the expression that the alarm watches. You designate this expression by setting <code>ReturnValue</code> to true for this object in the array. For more information, see <a>MetricDataQuery</a>.</p> <p>If you use the <code>Metrics</code> parameter, you cannot include the <code>MetricName</code>, <code>Dimensions</code>, <code>Period</code>, <code>Namespace</code>, <code>Statistic</code>, or <code>ExtendedStatistic</code> parameters of <code>PutMetricAlarm</code> in the same operation. Instead, you retrieve the metrics you are using in your math expression as part of the <code>Metrics</code> array.</p>'
      Namespace:
        $ref: '#/definitions/Namespace'
        description: The namespace for the metric associated specified in <code>MetricName</code>.
      OKActions:
        $ref: '#/definitions/ResourceList'
        description: '<p>The actions to execute when this alarm transitions to an <code>OK</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code> | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code> | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i> </code> </p> <p>Valid Values (for use with IAM roles): <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code> </p>'
      Period:
        $ref: '#/definitions/Period'
        description: '<p>The length, in seconds, used each time the metric specified in <code>MetricName</code> is evaluated. Valid values are 10, 30, and any multiple of 60.</p> <p> <code>Period</code> is required for alarms based on static thresholds. If you are creating an alarm based on a metric math expression, you specify the period for each metric within the objects in the <code>Metrics</code> array.</p> <p>Be sure to specify 10 or 30 only for metrics that are stored by a <code>PutMetricData</code> call with a <code>StorageResolution</code> of 1. If you specify a period of 10 or 30 for a metric that does not have sub-minute resolution, the alarm still attempts to gather data at the period rate that you specify. In this case, it does not receive data for the attempts that do not correspond to a one-minute data resolution, and the alarm may often lapse into INSUFFICENT_DATA status. Specifying 10 or 30 also sets this alarm as a high-resolution alarm, which has a higher charge than other alarms. For more information about pricing, see <a href="https://aws.amazon.com/cloudwatch/pricing/">Amazon CloudWatch Pricing</a>.</p> <p>An alarm''s total current evaluation period can be no longer than one day, so <code>Period</code> multiplied by <code>EvaluationPeriods</code> cannot be more than 86,400 seconds.</p>'
      Statistic:
        $ref: '#/definitions/Statistic'
        description: 'The statistic for the metric specified in <code>MetricName</code>, other than percentile. For percentile statistics, use <code>ExtendedStatistic</code>. When you call <code>PutMetricAlarm</code> and specify a <code>MetricName</code>, you must specify either <code>Statistic</code> or <code>ExtendedStatistic,</code> but not both.'
      Tags:
        $ref: '#/definitions/TagList'
        description: '<p>A list of key-value pairs to associate with the alarm. You can associate as many as 50 tags with an alarm.</p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values.</p>'
      Threshold:
        $ref: '#/definitions/Threshold'
        description: '<p>The value against which the specified statistic is compared.</p> <p>This parameter is required for alarms based on static thresholds, but should not be used for alarms based on anomaly detection models.</p>'
      ThresholdMetricId:
        $ref: '#/definitions/MetricId'
        description: '<p>If this is an alarm based on an anomaly detection model, make this value match the ID of the <code>ANOMALY_DETECTION_BAND</code> function.</p> <p>For an example of how to use this parameter, see the <b>Anomaly Detection Model Alarm</b> example on this page.</p> <p>If your alarm uses this parameter, it cannot have Auto Scaling actions.</p>'
      TreatMissingData:
        $ref: '#/definitions/TreatMissingData'
        description: '<p> Sets how this alarm is to handle missing data points. If <code>TreatMissingData</code> is omitted, the default behavior of <code>missing</code> is used. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data">Configuring How CloudWatch Alarms Treats Missing Data</a>.</p> <p>Valid Values: <code>breaching | notBreaching | ignore | missing</code> </p>'
      Unit:
        $ref: '#/definitions/StandardUnit'
        description: '<p>The unit of measure for the statistic. For example, the units for the Amazon EC2 NetworkIn metric are Bytes because NetworkIn tracks the number of bytes that an instance receives on all network interfaces. You can also specify a unit when you create a custom metric. Units help provide conceptual meaning to your data. Metric data points that specify a unit of measure, such as Percent, are aggregated separately.</p> <p>If you don''t specify <code>Unit</code>, CloudWatch retrieves all unit types that have been published for the metric and attempts to evaluate the alarm. Usually metrics are published with only one unit, so the alarm will work as intended.</p> <p>However, if the metric is published with multiple types of units and you don''t specify a unit, the alarm''s behavior is not defined and will behave un-predictably.</p> <p>We recommend omitting <code>Unit</code> so that you don''t inadvertently specify an incorrect unit that is not published for this metric. Doing so causes the alarm to be stuck in the <code>INSUFFICIENT DATA</code> state.</p>'
    required:
      - AlarmName
      - EvaluationPeriods
      - ComparisonOperator
    type: object
  PutMetricDataInput:
    properties:
      MetricData:
        $ref: '#/definitions/MetricData'
        description: The data for the metric. The array can include no more than 20 metrics per call.
      Namespace:
        $ref: '#/definitions/Namespace'
        description: '<p>The namespace for the metric data.</p> <p>To avoid conflicts with AWS service namespaces, you should not specify a namespace that begins with <code>AWS/</code> </p>'
    required:
      - Namespace
      - MetricData
    type: object
  Range:
    description: Specifies one range of days or times to exclude from use for training an anomaly detection model.
    properties:
      EndTime:
        $ref: '#/definitions/Timestamp'
        description: 'The end time of the range to exclude. The format is <code>yyyy-MM-dd''T''HH:mm:ss</code>. For example, <code>2019-07-01T23:59:59</code>.'
      StartTime:
        $ref: '#/definitions/Timestamp'
        description: 'The start time of the range to exclude. The format is <code>yyyy-MM-dd''T''HH:mm:ss</code>. For example, <code>2019-07-01T23:59:59</code>.'
    required:
      - StartTime
      - EndTime
    type: object
  ResourceList:
    items:
      $ref: '#/definitions/ResourceName'
    maxItems: 5
    type: array
  ResourceName:
    maxLength: 1024
    minLength: 1
    type: string
  ResourceNotFound: {}
  ResourceNotFoundException: {}
  ReturnData:
    type: boolean
  ScanBy:
    enum:
      - TimestampDescending
      - TimestampAscending
    type: string
  SetAlarmStateInput:
    properties:
      AlarmName:
        $ref: '#/definitions/AlarmName'
        description: The name for the alarm. This name must be unique within the AWS account. The maximum length is 255 characters.
      StateReason:
        $ref: '#/definitions/StateReason'
        description: 'The reason that this alarm is set to this specific state, in text format.'
      StateReasonData:
        $ref: '#/definitions/StateReasonData'
        description: 'The reason that this alarm is set to this specific state, in JSON format.'
      StateValue:
        $ref: '#/definitions/StateValue'
        description: The value of the state.
    required:
      - AlarmName
      - StateValue
      - StateReason
    type: object
  Size:
    type: integer
  StandardUnit:
    enum:
      - Seconds
      - Microseconds
      - Milliseconds
      - Bytes
      - Kilobytes
      - Megabytes
      - Gigabytes
      - Terabytes
      - Bits
      - Kilobits
      - Megabits
      - Gigabits
      - Terabits
      - Percent
      - Count
      - Bytes/Second
      - Kilobytes/Second
      - Megabytes/Second
      - Gigabytes/Second
      - Terabytes/Second
      - Bits/Second
      - Kilobits/Second
      - Megabits/Second
      - Gigabits/Second
      - Terabits/Second
      - Count/Second
      - None
    type: string
  Stat:
    type: string
  StateReason:
    maxLength: 1023
    minLength: 0
    type: string
  StateReasonData:
    maxLength: 4000
    minLength: 0
    type: string
  StateValue:
    enum:
      - OK
      - ALARM
      - INSUFFICIENT_DATA
    type: string
  Statistic:
    enum:
      - SampleCount
      - Average
      - Sum
      - Minimum
      - Maximum
    type: string
  StatisticSet:
    description: 'Represents a set of statistics that describes a specific metric. '
    properties:
      Maximum:
        $ref: '#/definitions/DatapointValue'
        description: The maximum value of the sample set.
      Minimum:
        $ref: '#/definitions/DatapointValue'
        description: The minimum value of the sample set.
      SampleCount:
        $ref: '#/definitions/DatapointValue'
        description: The number of samples used for the statistic set.
      Sum:
        $ref: '#/definitions/DatapointValue'
        description: The sum of values for the sample set.
    required:
      - SampleCount
      - Sum
      - Minimum
      - Maximum
    type: object
  Statistics:
    items:
      $ref: '#/definitions/Statistic'
    maxItems: 5
    minItems: 1
    type: array
  StatusCode:
    enum:
      - Complete
      - InternalError
      - PartialData
    type: string
  StorageResolution:
    minimum: 1
    type: integer
  Tag:
    description: A key-value pair associated with a CloudWatch resource.
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: A string that you can use to assign a value. The combination of tag keys and values can help you organize and categorize your resources.
      Value:
        $ref: '#/definitions/TagValue'
        description: The value for the specified tag key.
    required:
      - Key
      - Value
    type: object
  TagKey:
    maxLength: 128
    minLength: 1
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    type: array
  TagList:
    items:
      $ref: '#/definitions/Tag'
    type: array
  TagResourceInput:
    properties:
      ResourceARN:
        $ref: '#/definitions/AmazonResourceName'
        description: 'The ARN of the CloudWatch resource that you''re adding tags to. For more information on ARN format, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-cloudwatch">Example ARNs</a> in the <i>Amazon Web Services General Reference</i>.'
      Tags:
        $ref: '#/definitions/TagList'
        description: The list of key-value pairs to associate with the resource.
    required:
      - ResourceARN
      - Tags
    type: object
  TagResourceOutput:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    minLength: 0
    type: string
  Threshold:
    format: double
    type: number
  Timestamp:
    format: date-time
    type: string
  Timestamps:
    items:
      $ref: '#/definitions/Timestamp'
    type: array
  TreatMissingData:
    maxLength: 255
    minLength: 1
    type: string
  UntagResourceInput:
    properties:
      ResourceARN:
        $ref: '#/definitions/AmazonResourceName'
        description: 'The ARN of the CloudWatch resource that you''re removing tags from. For more information on ARN format, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-cloudwatch">Example ARNs</a> in the <i>Amazon Web Services General Reference</i>.'
      TagKeys:
        $ref: '#/definitions/TagKeyList'
        description: The list of tag keys to remove from the resource.
    required:
      - ResourceARN
      - TagKeys
    type: object
  UntagResourceOutput:
    properties: {}
    type: object
  Values:
    items:
      $ref: '#/definitions/DatapointValue'
    type: array
x-servers:
  - description: The CloudWatch multi-region endpoint
    url: 'http://monitoring.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The CloudWatch multi-region endpoint
    url: 'https://monitoring.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The CloudWatch endpoint for China (Beijing) and China (Ningxia)
    url: 'http://monitoring.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
  - description: The CloudWatch endpoint for China (Beijing) and China (Ningxia)
    url: 'https://monitoring.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
