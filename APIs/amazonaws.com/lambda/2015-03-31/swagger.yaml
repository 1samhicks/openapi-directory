swagger: '2.0'
schemes:
  - https
  - http
host: lambda.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: '<fullname>AWS Lambda</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Lambda API Reference</i>. The AWS Lambda Developer Guide provides additional information. For the service overview, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/welcome.html">What is AWS Lambda</a>, and for information about how the service works, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-introduction.html">AWS Lambda: How it Works</a> in the <b>AWS Lambda Developer Guide</b>.</p>'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS Lambda
  version: '2015-03-31'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/lambda-2015-03-31.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: lambda
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/lambda/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  '/2014-11-13/functions/{FunctionName}/invoke-async/':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      deprecated: true
      description: '<important> <p>For asynchronous function invocation, use <a>Invoke</a>.</p> </important> <p>Invokes a function asynchronously.</p>'
      operationId: InvokeAsync
      parameters:
        - description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
          in: path
          maxLength: 170
          minLength: 1
          name: FunctionName
          pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_\.]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              InvokeArgs:
                description: The JSON that you want to provide to your Lambda function as input.
                type: string
            required:
              - InvokeArgs
            type: object
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/InvokeAsyncResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidRequestContentException
          schema:
            $ref: '#/definitions/InvalidRequestContentException'
        '483':
          description: InvalidRuntimeException
          schema:
            $ref: '#/definitions/InvalidRuntimeException'
  /2015-03-31/event-source-mappings/:
    get:
      description: Lists event source mappings. Specify an <code>EventSourceArn</code> to only show event source mappings for a single event source.
      operationId: ListEventSourceMappings
      parameters:
        - description: <p>The Amazon Resource Name (ARN) of the event source.</p> <ul> <li> <p> <b>Amazon Kinesis</b> - The ARN of the data stream or a stream consumer.</p> </li> <li> <p> <b>Amazon DynamoDB Streams</b> - The ARN of the stream.</p> </li> <li> <p> <b>Amazon Simple Queue Service</b> - The ARN of the queue.</p> </li> </ul>
          in: query
          name: EventSourceArn
          pattern: 'arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-])+:([a-z]{2}(-gov)?-[a-z]+-\d{1})?:(\d{12})?:(.*)'
          required: false
          type: string
        - description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Version or Alias ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it''s limited to 64 characters in length.</p>'
          in: query
          maxLength: 140
          minLength: 1
          name: FunctionName
          pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: false
          type: string
        - description: A pagination token returned by a previous call.
          in: query
          name: Marker
          required: false
          type: string
        - description: The maximum number of event source mappings to return.
          in: query
          maximum: 10000
          minimum: 1
          name: MaxItems
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListEventSourceMappingsResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a mapping between an event source and an AWS Lambda function. Lambda reads items from the event source and triggers the function.</p> <p>For details about each event source type, see the following topics.</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html">Using AWS Lambda with Amazon Kinesis</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html">Using AWS Lambda with Amazon SQS</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html">Using AWS Lambda with Amazon DynamoDB</a> </p> </li> </ul>'
      operationId: CreateEventSourceMapping
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              BatchSize:
                description: '<p>The maximum number of items to retrieve in a single batch.</p> <ul> <li> <p> <b>Amazon Kinesis</b> - Default 100. Max 10,000.</p> </li> <li> <p> <b>Amazon DynamoDB Streams</b> - Default 100. Max 1,000.</p> </li> <li> <p> <b>Amazon Simple Queue Service</b> - Default 10. Max 10.</p> </li> </ul>'
                maximum: 10000
                minimum: 1
                type: integer
              Enabled:
                description: Disables the event source mapping to pause polling and invocation.
                type: boolean
              EventSourceArn:
                description: <p>The Amazon Resource Name (ARN) of the event source.</p> <ul> <li> <p> <b>Amazon Kinesis</b> - The ARN of the data stream or a stream consumer.</p> </li> <li> <p> <b>Amazon DynamoDB Streams</b> - The ARN of the stream.</p> </li> <li> <p> <b>Amazon Simple Queue Service</b> - The ARN of the queue.</p> </li> </ul>
                pattern: 'arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-])+:([a-z]{2}(-gov)?-[a-z]+-\d{1})?:(\d{12})?:(.*)'
                type: string
              FunctionName:
                description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Version or Alias ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it''s limited to 64 characters in length.</p>'
                maxLength: 140
                minLength: 1
                pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
                type: string
              MaximumBatchingWindowInSeconds:
                description: ''
                maximum: 300
                minimum: 0
                type: integer
              StartingPosition:
                description: The position in a stream from which to start reading. Required for Amazon Kinesis and Amazon DynamoDB Streams sources. <code>AT_TIMESTAMP</code> is only supported for Amazon Kinesis streams.
                enum:
                  - TRIM_HORIZON
                  - LATEST
                  - AT_TIMESTAMP
                type: string
              StartingPositionTimestamp:
                description: 'With <code>StartingPosition</code> set to <code>AT_TIMESTAMP</code>, the time from which to start reading.'
                format: date-time
                type: string
            required:
              - EventSourceArn
              - FunctionName
            type: object
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/EventSourceMappingConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceConflictException
          schema:
            $ref: '#/definitions/ResourceConflictException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/2015-03-31/event-source-mappings/{UUID}':
    delete:
      description: 'Deletes an <a href="https://docs.aws.amazon.com/lambda/latest/dg/intro-invocation-modes.html">event source mapping</a>. You can get the identifier of a mapping from the output of <a>ListEventSourceMappings</a>.'
      operationId: DeleteEventSourceMapping
      parameters:
        - description: The identifier of the event source mapping.
          in: path
          name: UUID
          required: true
          type: string
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/EventSourceMappingConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
    get:
      description: Returns details about an event source mapping. You can get the identifier of a mapping from the output of <a>ListEventSourceMappings</a>.
      operationId: GetEventSourceMapping
      parameters:
        - description: The identifier of the event source mapping.
          in: path
          name: UUID
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventSourceMappingConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: 'Updates an event source mapping. You can change the function that AWS Lambda invokes, or pause invocation and resume later from the same location.'
      operationId: UpdateEventSourceMapping
      parameters:
        - description: The identifier of the event source mapping.
          in: path
          name: UUID
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              BatchSize:
                description: '<p>The maximum number of items to retrieve in a single batch.</p> <ul> <li> <p> <b>Amazon Kinesis</b> - Default 100. Max 10,000.</p> </li> <li> <p> <b>Amazon DynamoDB Streams</b> - Default 100. Max 1,000.</p> </li> <li> <p> <b>Amazon Simple Queue Service</b> - Default 10. Max 10.</p> </li> </ul>'
                maximum: 10000
                minimum: 1
                type: integer
              Enabled:
                description: Disables the event source mapping to pause polling and invocation.
                type: boolean
              FunctionName:
                description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Version or Alias ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it''s limited to 64 characters in length.</p>'
                maxLength: 140
                minLength: 1
                pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
                type: string
              MaximumBatchingWindowInSeconds:
                description: ''
                maximum: 300
                minimum: 0
                type: integer
            type: object
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/EventSourceMappingConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: ResourceConflictException
          schema:
            $ref: '#/definitions/ResourceConflictException'
        '485':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  /2015-03-31/functions:
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a Lambda function. To create a function, you need a <a href="https://docs.aws.amazon.com/lambda/latest/dg/deployment-package-v2.html">deployment package</a> and an <a href="https://docs.aws.amazon.com/lambda/latest/dg/intro-permission-model.html#lambda-intro-execution-role">execution role</a>. The deployment package contains your function code. The execution role grants the function permission to use AWS services, such as Amazon CloudWatch Logs for log streaming and AWS X-Ray for request tracing.</p> <p>A function has an unpublished version, and can have published versions and aliases. The unpublished version changes when you update your function''s code and configuration. A published version is a snapshot of your function code and configuration that can''t be changed. An alias is a named resource that maps to a version, and can be changed to map to a different version. Use the <code>Publish</code> parameter to create version <code>1</code> of your function from its initial configuration.</p> <p>The other parameters let you configure version-specific and function-level settings. You can modify version-specific settings later with <a>UpdateFunctionConfiguration</a>. Function-level settings apply to both the unpublished and published versions of the function, and include tags (<a>TagResource</a>) and per-function concurrency limits (<a>PutFunctionConcurrency</a>).</p> <p>If another account or an AWS service invokes your function, use <a>AddPermission</a> to grant permission by creating a resource-based IAM policy. You can grant permissions at the function level, on a version, or on an alias.</p> <p>To invoke your function directly, use <a>Invoke</a>. To invoke your function in response to events in other AWS services, create an event source mapping (<a>CreateEventSourceMapping</a>), or configure a function trigger in the other service. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/invoking-lambda-functions.html">Invoking Functions</a>.</p>'
      operationId: CreateFunction
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              Code:
                description: 'The code for the Lambda function. You can specify either an object in Amazon S3, or upload a deployment package directly.'
                properties:
                  S3Bucket:
                    $ref: '#/definitions/S3Bucket'
                    description: An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.
                  S3Key:
                    $ref: '#/definitions/S3Key'
                    description: The Amazon S3 key of the deployment package.
                  S3ObjectVersion:
                    $ref: '#/definitions/S3ObjectVersion'
                    description: 'For versioned objects, the version of the deployment package object to use.'
                  ZipFile:
                    $ref: '#/definitions/Blob'
                    description: The base64-encoded contents of the deployment package. AWS SDK and AWS CLI clients handle the encoding for you.
                type: object
              DeadLetterConfig:
                description: 'The <a href="https://docs.aws.amazon.com/lambda/latest/dg/dlq.html">dead letter queue</a> for failed asynchronous invocations.'
                properties:
                  TargetArn:
                    $ref: '#/definitions/ResourceArn'
                    description: The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.
                type: object
              Description:
                description: A description of the function.
                maxLength: 256
                minLength: 0
                type: string
              Environment:
                description: A function's environment variable settings.
                properties:
                  Variables:
                    $ref: '#/definitions/EnvironmentVariables'
                    description: Environment variable key-value pairs.
                type: object
              FunctionName:
                description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
                maxLength: 140
                minLength: 1
                pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
                type: string
              Handler:
                description: 'The name of the method within your code that Lambda calls to execute your function. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/programming-model-v2.html">Programming Model</a>.'
                maxLength: 128
                pattern: '[^\s]+'
                type: string
              KMSKeyArn:
                description: 'The ARN of the AWS Key Management Service (AWS KMS) key that''s used to encrypt your function''s environment variables. If it''s not provided, AWS Lambda uses a default service key.'
                pattern: '(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()'
                type: string
              Layers:
                description: 'A list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">function layers</a> to add to the function''s execution environment. Specify each layer by its ARN, including the version.'
                items:
                  $ref: '#/definitions/LayerVersionArn'
                type: array
              MemorySize:
                description: The amount of memory that your function has access to. Increasing the function's memory also increases its CPU allocation. The default value is 128 MB. The value must be a multiple of 64 MB.
                maximum: 3008
                minimum: 128
                type: integer
              Publish:
                description: Set to true to publish the first version of the function during creation.
                type: boolean
              Role:
                description: The Amazon Resource Name (ARN) of the function's execution role.
                pattern: 'arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+'
                type: string
              Runtime:
                description: 'The identifier of the function''s <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime</a>.'
                enum:
                  - nodejs
                  - nodejs4.3
                  - nodejs6.10
                  - nodejs8.10
                  - nodejs10.x
                  - java8
                  - python2.7
                  - python3.6
                  - python3.7
                  - dotnetcore1.0
                  - dotnetcore2.0
                  - dotnetcore2.1
                  - nodejs4.3-edge
                  - go1.x
                  - ruby2.5
                  - provided
                type: string
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: 'A list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/tagging.html">tags</a> to apply to the function.'
                type: object
              Timeout:
                description: The amount of time that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds.
                minimum: 1
                type: integer
              TracingConfig:
                description: The function's AWS X-Ray tracing configuration.
                properties:
                  Mode:
                    $ref: '#/definitions/TracingMode'
                    description: The tracing mode.
                type: object
              VpcConfig:
                description: The VPC security groups and subnets that are attached to a Lambda function.
                properties:
                  SecurityGroupIds:
                    $ref: '#/definitions/SecurityGroupIds'
                    description: A list of VPC security groups IDs.
                  SubnetIds:
                    $ref: '#/definitions/SubnetIds'
                    description: A list of VPC subnet IDs.
                type: object
            required:
              - FunctionName
              - Runtime
              - Role
              - Handler
              - Code
            type: object
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/FunctionConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceConflictException
          schema:
            $ref: '#/definitions/ResourceConflictException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: CodeStorageExceededException
          schema:
            $ref: '#/definitions/CodeStorageExceededException'
  /2015-03-31/functions/:
    get:
      description: '<p>Returns a list of Lambda functions, with the version-specific configuration of each.</p> <p>Set <code>FunctionVersion</code> to <code>ALL</code> to include all published versions of each function in addition to the unpublished version. To get more information about a function or version, use <a>GetFunction</a>.</p>'
      operationId: ListFunctions
      parameters:
        - description: 'For Lambda@Edge functions, the AWS Region of the master function. For example, <code>us-east-2</code> or <code>ALL</code>. If specified, you must set <code>FunctionVersion</code> to <code>ALL</code>.'
          in: query
          name: MasterRegion
          pattern: 'ALL|[a-z]{2}(-gov)?-[a-z]+-\d{1}'
          required: false
          type: string
        - description: Set to <code>ALL</code> to include entries for all published versions of each function.
          enum:
            - ALL
          in: query
          name: FunctionVersion
          required: false
          type: string
        - description: Specify the pagination token that's returned by a previous request to retrieve the next page of results.
          in: query
          name: Marker
          required: false
          type: string
        - description: Specify a value between 1 and 50 to limit the number of functions in the response.
          in: query
          maximum: 10000
          minimum: 1
          name: MaxItems
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFunctionsResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2015-03-31/functions/{FunctionName}':
    delete:
      description: '<p>Deletes a Lambda function. To delete a specific function version, use the <code>Qualifier</code> parameter. Otherwise, all versions and aliases are deleted.</p> <p>To delete Lambda event source mappings that invoke a function, use <a>DeleteEventSourceMapping</a>. For AWS services and resources that invoke your function directly, delete the trigger in the service where you originally configured it.</p>'
      operationId: DeleteFunction
      parameters:
        - description: '<p>The name of the Lambda function or version.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:1</code> (with version).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
          in: path
          maxLength: 140
          minLength: 1
          name: FunctionName
          pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
        - description: Specify a version to delete. You can't delete a version that's referenced by an alias.
          in: query
          maxLength: 128
          minLength: 1
          name: Qualifier
          pattern: '(|[a-zA-Z0-9$_-]+)'
          required: false
          type: string
      responses:
        '204':
          description: Success
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: ResourceConflictException
          schema:
            $ref: '#/definitions/ResourceConflictException'
    get:
      description: 'Returns information about the function or function version, with a link to download the deployment package that''s valid for 10 minutes. If you specify a function version, only details that are specific to that version are returned.'
      operationId: GetFunction
      parameters:
        - description: '<p>The name of the Lambda function, version, or alias.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
          in: path
          maxLength: 170
          minLength: 1
          name: FunctionName
          pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_\.]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
        - description: Specify a version or alias to get details about a published version of the function.
          in: query
          maxLength: 128
          minLength: 1
          name: Qualifier
          pattern: '(|[a-zA-Z0-9$_-]+)'
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFunctionResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2015-03-31/functions/{FunctionName}/aliases':
    get:
      description: 'Returns a list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">aliases</a> for a Lambda function.'
      operationId: ListAliases
      parameters:
        - description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
          in: path
          maxLength: 140
          minLength: 1
          name: FunctionName
          pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
        - description: Specify a function version to only list aliases that invoke that version.
          in: query
          maxLength: 1024
          minLength: 1
          name: FunctionVersion
          pattern: '(\$LATEST|[0-9]+)'
          required: false
          type: string
        - description: Specify the pagination token that's returned by a previous request to retrieve the next page of results.
          in: query
          name: Marker
          required: false
          type: string
        - description: Limit the number of aliases returned.
          in: query
          maximum: 10000
          minimum: 1
          name: MaxItems
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAliasesResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates an <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">alias</a> for a Lambda function version. Use aliases to provide clients with a function identifier that you can update to invoke a different version.</p> <p>You can also map an alias to split invocation requests between two versions. Use the <code>RoutingConfig</code> parameter to specify a second version and the percentage of invocation requests that it receives.</p>'
      operationId: CreateAlias
      parameters:
        - description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
          in: path
          maxLength: 140
          minLength: 1
          name: FunctionName
          pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Description:
                description: A description of the alias.
                maxLength: 256
                minLength: 0
                type: string
              FunctionVersion:
                description: The function version that the alias invokes.
                maxLength: 1024
                minLength: 1
                pattern: '(\$LATEST|[0-9]+)'
                type: string
              Name:
                description: The name of the alias.
                maxLength: 128
                minLength: 1
                pattern: '(?!^[0-9]+$)([a-zA-Z0-9-_]+)'
                type: string
              RoutingConfig:
                description: 'The <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html">traffic-shifting</a> configuration of a Lambda function alias.'
                properties:
                  AdditionalVersionWeights:
                    $ref: '#/definitions/AdditionalVersionWeights'
                    description: 'The name of the second alias, and the percentage of traffic that''s routed to it.'
                type: object
            required:
              - Name
              - FunctionVersion
            type: object
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/AliasConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceConflictException
          schema:
            $ref: '#/definitions/ResourceConflictException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/2015-03-31/functions/{FunctionName}/aliases/{Name}':
    delete:
      description: 'Deletes a Lambda function <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">alias</a>.'
      operationId: DeleteAlias
      parameters:
        - description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
          in: path
          maxLength: 140
          minLength: 1
          name: FunctionName
          pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
        - description: The name of the alias.
          in: path
          maxLength: 128
          minLength: 1
          name: Name
          pattern: '(?!^[0-9]+$)([a-zA-Z0-9-_]+)'
          required: true
          type: string
      responses:
        '204':
          description: Success
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    get:
      description: 'Returns details about a Lambda function <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">alias</a>.'
      operationId: GetAlias
      parameters:
        - description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
          in: path
          maxLength: 140
          minLength: 1
          name: FunctionName
          pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
        - description: The name of the alias.
          in: path
          maxLength: 128
          minLength: 1
          name: Name
          pattern: '(?!^[0-9]+$)([a-zA-Z0-9-_]+)'
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AliasConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: 'Updates the configuration of a Lambda function <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">alias</a>.'
      operationId: UpdateAlias
      parameters:
        - description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
          in: path
          maxLength: 140
          minLength: 1
          name: FunctionName
          pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
        - description: The name of the alias.
          in: path
          maxLength: 128
          minLength: 1
          name: Name
          pattern: '(?!^[0-9]+$)([a-zA-Z0-9-_]+)'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Description:
                description: A description of the alias.
                maxLength: 256
                minLength: 0
                type: string
              FunctionVersion:
                description: The function version that the alias invokes.
                maxLength: 1024
                minLength: 1
                pattern: '(\$LATEST|[0-9]+)'
                type: string
              RevisionId:
                description: Only update the alias if the revision ID matches the ID that's specified. Use this option to avoid modifying an alias that has changed since you last read it.
                type: string
              RoutingConfig:
                description: 'The <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html">traffic-shifting</a> configuration of a Lambda function alias.'
                properties:
                  AdditionalVersionWeights:
                    $ref: '#/definitions/AdditionalVersionWeights'
                    description: 'The name of the second alias, and the percentage of traffic that''s routed to it.'
                type: object
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AliasConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
  '/2015-03-31/functions/{FunctionName}/code':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: '<p>Updates a Lambda function''s code.</p> <p>The function''s code is locked when you publish a version. You can''t modify the code of a published version, only the unpublished version.</p>'
      operationId: UpdateFunctionCode
      parameters:
        - description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
          in: path
          maxLength: 140
          minLength: 1
          name: FunctionName
          pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              DryRun:
                description: Set to true to validate the request parameters and access permissions without modifying the function code.
                type: boolean
              Publish:
                description: Set to true to publish a new version of the function after updating the code. This has the same effect as calling <a>PublishVersion</a> separately.
                type: boolean
              RevisionId:
                description: Only update the function if the revision ID matches the ID that's specified. Use this option to avoid modifying a function that has changed since you last read it.
                type: string
              S3Bucket:
                description: An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.
                maxLength: 63
                minLength: 3
                pattern: '^[0-9A-Za-z\.\-_]*(?<!\.)$'
                type: string
              S3Key:
                description: The Amazon S3 key of the deployment package.
                maxLength: 1024
                minLength: 1
                type: string
              S3ObjectVersion:
                description: 'For versioned objects, the version of the deployment package object to use.'
                maxLength: 1024
                minLength: 1
                type: string
              ZipFile:
                description: The base64-encoded contents of the deployment package. AWS SDK and AWS CLI clients handle the encoding for you.
                format: password
                type: string
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FunctionConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: CodeStorageExceededException
          schema:
            $ref: '#/definitions/CodeStorageExceededException'
        '485':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
  '/2015-03-31/functions/{FunctionName}/configuration':
    get:
      description: '<p>Returns the version-specific settings of a Lambda function or version. The output includes only options that can vary between versions of a function. To modify these settings, use <a>UpdateFunctionConfiguration</a>.</p> <p>To get all of a function''s details, including function-level settings, use <a>GetFunction</a>.</p>'
      operationId: GetFunctionConfiguration
      parameters:
        - description: '<p>The name of the Lambda function, version, or alias.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
          in: path
          maxLength: 170
          minLength: 1
          name: FunctionName
          pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_\.]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
        - description: Specify a version or alias to get details about a published version of the function.
          in: query
          maxLength: 128
          minLength: 1
          name: Qualifier
          pattern: '(|[a-zA-Z0-9$_-]+)'
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FunctionConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: '<p>Modify the version-specific settings of a Lambda function.</p> <p>These settings can vary between versions of a function and are locked when you publish a version. You can''t modify the configuration of a published version, only the unpublished version.</p> <p>To configure function concurrency, use <a>PutFunctionConcurrency</a>. To grant invoke permissions to an account or AWS service, use <a>AddPermission</a>.</p>'
      operationId: UpdateFunctionConfiguration
      parameters:
        - description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
          in: path
          maxLength: 140
          minLength: 1
          name: FunctionName
          pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              DeadLetterConfig:
                description: 'The <a href="https://docs.aws.amazon.com/lambda/latest/dg/dlq.html">dead letter queue</a> for failed asynchronous invocations.'
                properties:
                  TargetArn:
                    $ref: '#/definitions/ResourceArn'
                    description: The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.
                type: object
              Description:
                description: A description of the function.
                maxLength: 256
                minLength: 0
                type: string
              Environment:
                description: A function's environment variable settings.
                properties:
                  Variables:
                    $ref: '#/definitions/EnvironmentVariables'
                    description: Environment variable key-value pairs.
                type: object
              Handler:
                description: 'The name of the method within your code that Lambda calls to execute your function. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/programming-model-v2.html">Programming Model</a>.'
                maxLength: 128
                pattern: '[^\s]+'
                type: string
              KMSKeyArn:
                description: 'The ARN of the AWS Key Management Service (AWS KMS) key that''s used to encrypt your function''s environment variables. If it''s not provided, AWS Lambda uses a default service key.'
                pattern: '(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()'
                type: string
              Layers:
                description: 'A list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">function layers</a> to add to the function''s execution environment. Specify each layer by its ARN, including the version.'
                items:
                  $ref: '#/definitions/LayerVersionArn'
                type: array
              MemorySize:
                description: The amount of memory that your function has access to. Increasing the function's memory also increases its CPU allocation. The default value is 128 MB. The value must be a multiple of 64 MB.
                maximum: 3008
                minimum: 128
                type: integer
              RevisionId:
                description: Only update the function if the revision ID matches the ID that's specified. Use this option to avoid modifying a function that has changed since you last read it.
                type: string
              Role:
                description: The Amazon Resource Name (ARN) of the function's execution role.
                pattern: 'arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+'
                type: string
              Runtime:
                description: 'The identifier of the function''s <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime</a>.'
                enum:
                  - nodejs
                  - nodejs4.3
                  - nodejs6.10
                  - nodejs8.10
                  - nodejs10.x
                  - java8
                  - python2.7
                  - python3.6
                  - python3.7
                  - dotnetcore1.0
                  - dotnetcore2.0
                  - dotnetcore2.1
                  - nodejs4.3-edge
                  - go1.x
                  - ruby2.5
                  - provided
                type: string
              Timeout:
                description: The amount of time that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds.
                minimum: 1
                type: integer
              TracingConfig:
                description: The function's AWS X-Ray tracing configuration.
                properties:
                  Mode:
                    $ref: '#/definitions/TracingMode'
                    description: The tracing mode.
                type: object
              VpcConfig:
                description: The VPC security groups and subnets that are attached to a Lambda function.
                properties:
                  SecurityGroupIds:
                    $ref: '#/definitions/SecurityGroupIds'
                    description: A list of VPC security groups IDs.
                  SubnetIds:
                    $ref: '#/definitions/SubnetIds'
                    description: A list of VPC subnet IDs.
                type: object
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FunctionConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: ResourceConflictException
          schema:
            $ref: '#/definitions/ResourceConflictException'
        '485':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
  '/2015-03-31/functions/{FunctionName}/invocations':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Invokes a Lambda function. You can invoke a function synchronously (and wait for the response), or asynchronously. To invoke a function asynchronously, set <code>InvocationType</code> to <code>Event</code>.</p> <p>For synchronous invocation, details about the function response, including errors, are included in the response body and headers. For either invocation type, you can find more information in the <a href="https://docs.aws.amazon.com/lambda/latest/dg/monitoring-functions.html">execution log</a> and <a href="https://docs.aws.amazon.com/lambda/latest/dg/dlq.html">trace</a>. To record function errors for asynchronous invocations, configure your function with a <a href="https://docs.aws.amazon.com/lambda/latest/dg/dlq.html">dead letter queue</a>.</p> <p>When an error occurs, your function may be invoked multiple times. Retry behavior varies by error type, client, event source, and invocation type. For example, if you invoke a function asynchronously and it returns an error, Lambda executes the function up to two more times. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/retries-on-errors.html">Retry Behavior</a>.</p> <p>The status code in the API response doesn''t reflect function errors. Error codes are reserved for errors that prevent your function from executing, such as permissions errors, <a href="https://docs.aws.amazon.com/lambda/latest/dg/limits.html">limit errors</a>, or issues with your function''s code and configuration. For example, Lambda returns <code>TooManyRequestsException</code> if executing the function would cause you to exceed a concurrency limit at either the account level (<code>ConcurrentInvocationLimitExceeded</code>) or function level (<code>ReservedFunctionConcurrentInvocationLimitExceeded</code>).</p> <p>For functions with a long timeout, your client might be disconnected during synchronous invocation while it waits for a response. Configure your HTTP client, SDK, firewall, proxy, or operating system to allow for long connections with timeout or keep-alive settings.</p> <p>This operation requires permission for the <code>lambda:InvokeFunction</code> action.</p>'
      operationId: Invoke
      parameters:
        - description: '<p>The name of the Lambda function, version, or alias.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
          in: path
          maxLength: 170
          minLength: 1
          name: FunctionName
          pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_\.]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
        - description: <p>Choose from the following options.</p> <ul> <li> <p> <code>RequestResponse</code> (default) - Invoke the function synchronously. Keep the connection open until the function returns a response or times out. The API response includes the function response and additional data.</p> </li> <li> <p> <code>Event</code> - Invoke the function asynchronously. Send events that fail multiple times to the function's dead-letter queue (if it's configured). The API response only includes a status code.</p> </li> <li> <p> <code>DryRun</code> - Validate parameter values and verify that the user or role has permission to invoke the function.</p> </li> </ul>
          enum:
            - Event
            - RequestResponse
            - DryRun
          in: header
          name: X-Amz-Invocation-Type
          required: false
          type: string
        - description: Set to <code>Tail</code> to include the execution log in the response.
          enum:
            - None
            - Tail
          in: header
          name: X-Amz-Log-Type
          required: false
          type: string
        - description: Up to 3583 bytes of base64-encoded data about the invoking client to pass to the function in the context object.
          in: header
          name: X-Amz-Client-Context
          required: false
          type: string
        - description: Specify a version or alias to invoke a published version of the function.
          in: query
          maxLength: 128
          minLength: 1
          name: Qualifier
          pattern: '(|[a-zA-Z0-9$_-]+)'
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Payload:
                description: The JSON that you want to provide to your Lambda function as input.
                format: password
                type: string
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InvocationResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidRequestContentException
          schema:
            $ref: '#/definitions/InvalidRequestContentException'
        '483':
          description: RequestTooLargeException
          schema:
            $ref: '#/definitions/RequestTooLargeException'
        '484':
          description: UnsupportedMediaTypeException
          schema:
            $ref: '#/definitions/UnsupportedMediaTypeException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '486':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '487':
          description: EC2UnexpectedException
          schema:
            $ref: '#/definitions/EC2UnexpectedException'
        '488':
          description: SubnetIPAddressLimitReachedException
          schema:
            $ref: '#/definitions/SubnetIPAddressLimitReachedException'
        '489':
          description: ENILimitReachedException
          schema:
            $ref: '#/definitions/ENILimitReachedException'
        '490':
          description: EC2ThrottledException
          schema:
            $ref: '#/definitions/EC2ThrottledException'
        '491':
          description: EC2AccessDeniedException
          schema:
            $ref: '#/definitions/EC2AccessDeniedException'
        '492':
          description: InvalidSubnetIDException
          schema:
            $ref: '#/definitions/InvalidSubnetIDException'
        '493':
          description: InvalidSecurityGroupIDException
          schema:
            $ref: '#/definitions/InvalidSecurityGroupIDException'
        '494':
          description: InvalidZipFileException
          schema:
            $ref: '#/definitions/InvalidZipFileException'
        '495':
          description: KMSDisabledException
          schema:
            $ref: '#/definitions/KMSDisabledException'
        '496':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
        '497':
          description: KMSAccessDeniedException
          schema:
            $ref: '#/definitions/KMSAccessDeniedException'
        '498':
          description: KMSNotFoundException
          schema:
            $ref: '#/definitions/KMSNotFoundException'
        '499':
          description: InvalidRuntimeException
          schema:
            $ref: '#/definitions/InvalidRuntimeException'
  '/2015-03-31/functions/{FunctionName}/policy':
    get:
      description: 'Returns the <a href="https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html">resource-based IAM policy</a> for a function, version, or alias.'
      operationId: GetPolicy
      parameters:
        - description: '<p>The name of the Lambda function, version, or alias.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
          in: path
          maxLength: 170
          minLength: 1
          name: FunctionName
          pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_\.]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
        - description: Specify a version or alias to get the policy for that resource.
          in: query
          maxLength: 128
          minLength: 1
          name: Qualifier
          pattern: '(|[a-zA-Z0-9$_-]+)'
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPolicyResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Grants an AWS service or another account permission to use a function. You can apply the policy at the function level, or specify a qualifier to restrict access to a single version or alias. If you use a qualifier, the invoker must use the full Amazon Resource Name (ARN) of that version or alias to invoke the function.</p> <p>To grant permission to another account, specify the account ID as the <code>Principal</code>. For AWS services, the principal is a domain-style identifier defined by the service, like <code>s3.amazonaws.com</code> or <code>sns.amazonaws.com</code>. For AWS services, you can also specify the ARN or owning account of the associated resource as the <code>SourceArn</code> or <code>SourceAccount</code>. If you grant permission to a service principal without specifying the source, other accounts could potentially configure resources in their account to invoke your Lambda function.</p> <p>This action adds a statement to a resource-based permission policy for the function. For more information about function policies, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html">Lambda Function Policies</a>. </p>'
      operationId: AddPermission
      parameters:
        - description: '<p>The name of the Lambda function, version, or alias.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
          in: path
          maxLength: 140
          minLength: 1
          name: FunctionName
          pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
        - description: Specify a version or alias to add permissions to a published version of the function.
          in: query
          maxLength: 128
          minLength: 1
          name: Qualifier
          pattern: '(|[a-zA-Z0-9$_-]+)'
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Action:
                description: 'The action that the principal can use on the function. For example, <code>lambda:InvokeFunction</code> or <code>lambda:GetFunction</code>.'
                pattern: '(lambda:[*]|lambda:[a-zA-Z]+|[*])'
                type: string
              EventSourceToken:
                description: 'For Alexa Smart Home functions, a token that must be supplied by the invoker.'
                maxLength: 256
                minLength: 0
                pattern: '[a-zA-Z0-9._\-]+'
                type: string
              Principal:
                description: 'The AWS service or account that invokes the function. If you specify a service, use <code>SourceArn</code> or <code>SourceAccount</code> to limit who can invoke the function through that service.'
                pattern: .*
                type: string
              RevisionId:
                description: Only update the policy if the revision ID matches the ID that's specified. Use this option to avoid modifying a policy that has changed since you last read it.
                type: string
              SourceAccount:
                description: 'For AWS services, the ID of the account that owns the resource. Use this instead of <code>SourceArn</code> to grant permission to resources that are owned by another account (for example, all of an account''s Amazon S3 buckets). Or use it together with <code>SourceArn</code> to ensure that the resource is owned by the specified account. For example, an Amazon S3 bucket could be deleted by its owner and recreated by another account.'
                pattern: '\d{12}'
                type: string
              SourceArn:
                description: 'For AWS services, the ARN of the AWS resource that invokes the function. For example, an Amazon S3 bucket or Amazon SNS topic.'
                pattern: 'arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-])+:([a-z]{2}(-gov)?-[a-z]+-\d{1})?:(\d{12})?:(.*)'
                type: string
              StatementId:
                description: A statement identifier that differentiates the statement from others in the same policy.
                maxLength: 100
                minLength: 1
                pattern: '([a-zA-Z0-9-_]+)'
                type: string
            required:
              - StatementId
              - Action
              - Principal
            type: object
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/AddPermissionResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceConflictException
          schema:
            $ref: '#/definitions/ResourceConflictException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: PolicyLengthExceededException
          schema:
            $ref: '#/definitions/PolicyLengthExceededException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '486':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
  '/2015-03-31/functions/{FunctionName}/policy/{StatementId}':
    delete:
      description: Revokes function-use permission from an AWS service or another account. You can get the ID of the statement from the output of <a>GetPolicy</a>.
      operationId: RemovePermission
      parameters:
        - description: '<p>The name of the Lambda function, version, or alias.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
          in: path
          maxLength: 140
          minLength: 1
          name: FunctionName
          pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
        - description: Statement ID of the permission to remove.
          in: path
          maxLength: 100
          minLength: 1
          name: StatementId
          pattern: '([a-zA-Z0-9-_.]+)'
          required: true
          type: string
        - description: Specify a version or alias to remove permissions from a published version of the function.
          in: query
          maxLength: 128
          minLength: 1
          name: Qualifier
          pattern: '(|[a-zA-Z0-9$_-]+)'
          required: false
          type: string
        - description: Only update the policy if the revision ID matches the ID that's specified. Use this option to avoid modifying a policy that has changed since you last read it.
          in: query
          name: RevisionId
          required: false
          type: string
      responses:
        '204':
          description: Success
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2015-03-31/functions/{FunctionName}/versions':
    get:
      description: 'Returns a list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">versions</a>, with the version-specific configuration of each. '
      operationId: ListVersionsByFunction
      parameters:
        - description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
          in: path
          maxLength: 170
          minLength: 1
          name: FunctionName
          pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_\.]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
        - description: Specify the pagination token that's returned by a previous request to retrieve the next page of results.
          in: query
          name: Marker
          required: false
          type: string
        - description: Limit the number of versions that are returned.
          in: query
          maximum: 10000
          minimum: 1
          name: MaxItems
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListVersionsByFunctionResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">version</a> from the current code and configuration of a function. Use versions to create a snapshot of your function code and configuration that doesn''t change.</p> <p>AWS Lambda doesn''t publish a version if the function''s configuration and code haven''t changed since the last version. Use <a>UpdateFunctionCode</a> or <a>UpdateFunctionConfiguration</a> to update the function before publishing a version.</p> <p>Clients can invoke versions directly or with an alias. To create an alias, use <a>CreateAlias</a>.</p>'
      operationId: PublishVersion
      parameters:
        - description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
          in: path
          maxLength: 140
          minLength: 1
          name: FunctionName
          pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              CodeSha256:
                description: Only publish a version if the hash value matches the value that's specified. Use this option to avoid publishing a version if the function code has changed since you last updated it. You can get the hash for the version that you uploaded from the output of <a>UpdateFunctionCode</a>.
                type: string
              Description:
                description: A description for the version to override the description in the function configuration.
                maxLength: 256
                minLength: 0
                type: string
              RevisionId:
                description: Only update the function if the revision ID matches the ID that's specified. Use this option to avoid publishing a version if the function configuration has changed since you last updated it.
                type: string
            type: object
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/FunctionConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: CodeStorageExceededException
          schema:
            $ref: '#/definitions/CodeStorageExceededException'
        '485':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
  /2016-08-19/account-settings/:
    get:
      description: 'Retrieves details about your account''s <a href="https://docs.aws.amazon.com/lambda/latest/dg/limits.html">limits</a> and usage in an AWS Region.'
      operationId: GetAccountSettings
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAccountSettingsResponse'
        '480':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '481':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2017-03-31/tags/{ARN}':
    get:
      description: 'Returns a function''s <a href="https://docs.aws.amazon.com/lambda/latest/dg/tagging.html">tags</a>. You can also view tags with <a>GetFunction</a>.'
      operationId: ListTags
      parameters:
        - description: The function's Amazon Resource Name (ARN).
          in: path
          name: ARN
          pattern: 'arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Adds <a href="https://docs.aws.amazon.com/lambda/latest/dg/tagging.html">tags</a> to a function.'
      operationId: TagResource
      parameters:
        - description: The function's Amazon Resource Name (ARN).
          in: path
          name: ARN
          pattern: 'arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Tags:
                additionalProperties:
                  $ref: '#/definitions/TagValue'
                description: A list of tags to apply to the function.
                type: object
            required:
              - Tags
            type: object
      responses:
        '204':
          description: Success
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/2017-03-31/tags/{ARN}#tagKeys':
    delete:
      description: 'Removes <a href="https://docs.aws.amazon.com/lambda/latest/dg/tagging.html">tags</a> from a function.'
      operationId: UntagResource
      parameters:
        - description: The function's Amazon Resource Name (ARN).
          in: path
          name: ARN
          pattern: 'arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
        - description: A list of tag keys to remove from the function.
          in: query
          items:
            type: string
          name: tagKeys
          required: true
          type: array
      responses:
        '204':
          description: Success
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2017-10-31/functions/{FunctionName}/concurrency':
    delete:
      description: Removes a concurrent execution limit from a function.
      operationId: DeleteFunctionConcurrency
      parameters:
        - description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
          in: path
          maxLength: 140
          minLength: 1
          name: FunctionName
          pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
      responses:
        '204':
          description: Success
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: '<p>Sets the maximum number of simultaneous executions for a function, and reserves capacity for that concurrency level.</p> <p>Concurrency settings apply to the function as a whole, including all published versions and the unpublished version. Reserving concurrency both ensures that your function has capacity to process the specified number of events simultaneously, and prevents it from scaling beyond that level. Use <a>GetFunction</a> to see the current setting for a function.</p> <p>Use <a>GetAccountSettings</a> to see your regional concurrency limit. You can reserve concurrency for as many functions as you like, as long as you leave at least 100 simultaneous executions unreserved for functions that aren''t configured with a per-function limit. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html">Managing Concurrency</a>.</p>'
      operationId: PutFunctionConcurrency
      parameters:
        - description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
          in: path
          maxLength: 140
          minLength: 1
          name: FunctionName
          pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ReservedConcurrentExecutions:
                description: The number of simultaneous executions to reserve for the function.
                minimum: 0
                type: integer
            required:
              - ReservedConcurrentExecutions
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Concurrency'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  /2018-10-31/layers:
    get:
      description: 'Lists <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layers</a> and shows information about the latest version of each. Specify a <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime identifier</a> to list only layers that indicate that they''re compatible with that runtime.'
      operationId: ListLayers
      parameters:
        - description: 'A runtime identifier. For example, <code>go1.x</code>.'
          enum:
            - nodejs
            - nodejs4.3
            - nodejs6.10
            - nodejs8.10
            - nodejs10.x
            - java8
            - python2.7
            - python3.6
            - python3.7
            - dotnetcore1.0
            - dotnetcore2.0
            - dotnetcore2.1
            - nodejs4.3-edge
            - go1.x
            - ruby2.5
            - provided
          in: query
          name: CompatibleRuntime
          required: false
          type: string
        - description: A pagination token returned by a previous call.
          in: query
          name: Marker
          required: false
          type: string
        - description: The maximum number of layers to return.
          in: query
          maximum: 50
          minimum: 1
          name: MaxItems
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLayersResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2018-10-31/layers#find=LayerVersion&Arn':
    get:
      description: 'Returns information about a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>, with a link to download the layer archive that''s valid for 10 minutes.'
      operationId: GetLayerVersionByArn
      parameters:
        - description: The ARN of the layer version.
          in: query
          maxLength: 140
          minLength: 1
          name: Arn
          pattern: 'arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\d{12}:layer:[a-zA-Z0-9-_]+:[0-9]+'
          required: true
          type: string
        - enum:
            - LayerVersion
          in: query
          name: find
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLayerVersionResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2018-10-31/layers/{LayerName}/versions':
    get:
      description: 'Lists the versions of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>. Versions that have been deleted aren''t listed. Specify a <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime identifier</a> to list only versions that indicate that they''re compatible with that runtime.'
      operationId: ListLayerVersions
      parameters:
        - description: 'A runtime identifier. For example, <code>go1.x</code>.'
          enum:
            - nodejs
            - nodejs4.3
            - nodejs6.10
            - nodejs8.10
            - nodejs10.x
            - java8
            - python2.7
            - python3.6
            - python3.7
            - dotnetcore1.0
            - dotnetcore2.0
            - dotnetcore2.1
            - nodejs4.3-edge
            - go1.x
            - ruby2.5
            - provided
          in: query
          name: CompatibleRuntime
          required: false
          type: string
        - description: The name or Amazon Resource Name (ARN) of the layer.
          in: path
          maxLength: 140
          minLength: 1
          name: LayerName
          pattern: '(arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\d{12}:layer:[a-zA-Z0-9-_]+)|[a-zA-Z0-9-_]+'
          required: true
          type: string
        - description: A pagination token returned by a previous call.
          in: query
          name: Marker
          required: false
          type: string
        - description: The maximum number of versions to return.
          in: query
          maximum: 50
          minimum: 1
          name: MaxItems
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLayerVersionsResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a> from a ZIP archive. Each time you call <code>PublishLayerVersion</code> with the same version name, a new version is created.</p> <p>Add layers to your function with <a>CreateFunction</a> or <a>UpdateFunctionConfiguration</a>.</p>'
      operationId: PublishLayerVersion
      parameters:
        - description: The name or Amazon Resource Name (ARN) of the layer.
          in: path
          maxLength: 140
          minLength: 1
          name: LayerName
          pattern: '(arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\d{12}:layer:[a-zA-Z0-9-_]+)|[a-zA-Z0-9-_]+'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              CompatibleRuntimes:
                description: 'A list of compatible <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">function runtimes</a>. Used for filtering with <a>ListLayers</a> and <a>ListLayerVersions</a>.'
                items:
                  $ref: '#/definitions/Runtime'
                maxItems: 5
                type: array
              Content:
                description: 'A ZIP archive that contains the contents of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>. You can specify either an Amazon S3 location, or upload a layer archive directly.'
                properties:
                  S3Bucket:
                    $ref: '#/definitions/S3Bucket'
                    description: The Amazon S3 bucket of the layer archive.
                  S3Key:
                    $ref: '#/definitions/S3Key'
                    description: The Amazon S3 key of the layer archive.
                  S3ObjectVersion:
                    $ref: '#/definitions/S3ObjectVersion'
                    description: 'For versioned objects, the version of the layer archive object to use.'
                  ZipFile:
                    $ref: '#/definitions/Blob'
                    description: The base64-encoded contents of the layer archive. AWS SDK and AWS CLI clients handle the encoding for you.
                type: object
              Description:
                description: The description of the version.
                maxLength: 256
                minLength: 0
                type: string
              LicenseInfo:
                description: '<p>The layer''s software license. It can be any of the following:</p> <ul> <li> <p>An <a href="https://spdx.org/licenses/">SPDX license identifier</a>. For example, <code>MIT</code>.</p> </li> <li> <p>The URL of a license hosted on the internet. For example, <code>https://opensource.org/licenses/MIT</code>.</p> </li> <li> <p>The full text of the license.</p> </li> </ul>'
                maxLength: 512
                type: string
            required:
              - Content
            type: object
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/PublishLayerVersionResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: CodeStorageExceededException
          schema:
            $ref: '#/definitions/CodeStorageExceededException'
  '/2018-10-31/layers/{LayerName}/versions/{VersionNumber}':
    delete:
      description: 'Deletes a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>. Deleted versions can no longer be viewed or added to functions. To avoid breaking functions, a copy of the version remains in Lambda until no functions refer to it.'
      operationId: DeleteLayerVersion
      parameters:
        - description: The name or Amazon Resource Name (ARN) of the layer.
          in: path
          maxLength: 140
          minLength: 1
          name: LayerName
          pattern: '(arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\d{12}:layer:[a-zA-Z0-9-_]+)|[a-zA-Z0-9-_]+'
          required: true
          type: string
        - description: The version number.
          in: path
          name: VersionNumber
          required: true
          type: integer
      responses:
        '204':
          description: Success
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    get:
      description: 'Returns information about a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>, with a link to download the layer archive that''s valid for 10 minutes.'
      operationId: GetLayerVersion
      parameters:
        - description: The name or Amazon Resource Name (ARN) of the layer.
          in: path
          maxLength: 140
          minLength: 1
          name: LayerName
          pattern: '(arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\d{12}:layer:[a-zA-Z0-9-_]+)|[a-zA-Z0-9-_]+'
          required: true
          type: string
        - description: The version number.
          in: path
          name: VersionNumber
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLayerVersionResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2018-10-31/layers/{LayerName}/versions/{VersionNumber}/policy':
    get:
      description: 'Returns the permission policy for a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>. For more information, see <a>AddLayerVersionPermission</a>.'
      operationId: GetLayerVersionPolicy
      parameters:
        - description: The name or Amazon Resource Name (ARN) of the layer.
          in: path
          maxLength: 140
          minLength: 1
          name: LayerName
          pattern: '(arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\d{12}:layer:[a-zA-Z0-9-_]+)|[a-zA-Z0-9-_]+'
          required: true
          type: string
        - description: The version number.
          in: path
          name: VersionNumber
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLayerVersionPolicyResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Adds permissions to the resource-based policy of a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>. Use this action to grant layer usage permission to other accounts. You can grant permission to a single account, all AWS accounts, or all accounts in an organization.</p> <p>To revoke permission, call <a>RemoveLayerVersionPermission</a> with the statement ID that you specified when you added it.</p>'
      operationId: AddLayerVersionPermission
      parameters:
        - description: The name or Amazon Resource Name (ARN) of the layer.
          in: path
          maxLength: 140
          minLength: 1
          name: LayerName
          pattern: '(arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\d{12}:layer:[a-zA-Z0-9-_]+)|[a-zA-Z0-9-_]+'
          required: true
          type: string
        - description: The version number.
          in: path
          name: VersionNumber
          required: true
          type: integer
        - description: Only update the policy if the revision ID matches the ID specified. Use this option to avoid modifying a policy that has changed since you last read it.
          in: query
          name: RevisionId
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Action:
                description: 'The API action that grants access to the layer. For example, <code>lambda:GetLayerVersion</code>.'
                pattern: 'lambda:GetLayerVersion'
                type: string
              OrganizationId:
                description: 'With the principal set to <code>*</code>, grant permission to all accounts in the specified organization.'
                pattern: 'o-[a-z0-9]{10,32}'
                type: string
              Principal:
                description: 'An account ID, or <code>*</code> to grant permission to all AWS accounts.'
                pattern: '\d{12}|\*|arn:(aws[a-zA-Z-]*):iam::\d{12}:root'
                type: string
              StatementId:
                description: An identifier that distinguishes the policy from others on the same layer version.
                maxLength: 100
                minLength: 1
                pattern: '([a-zA-Z0-9-_]+)'
                type: string
            required:
              - StatementId
              - Action
              - Principal
            type: object
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/AddLayerVersionPermissionResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceConflictException
          schema:
            $ref: '#/definitions/ResourceConflictException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '485':
          description: PolicyLengthExceededException
          schema:
            $ref: '#/definitions/PolicyLengthExceededException'
        '486':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
  '/2018-10-31/layers/{LayerName}/versions/{VersionNumber}/policy/{StatementId}':
    delete:
      description: 'Removes a statement from the permissions policy for a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>. For more information, see <a>AddLayerVersionPermission</a>.'
      operationId: RemoveLayerVersionPermission
      parameters:
        - description: The name or Amazon Resource Name (ARN) of the layer.
          in: path
          maxLength: 140
          minLength: 1
          name: LayerName
          pattern: '(arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\d{12}:layer:[a-zA-Z0-9-_]+)|[a-zA-Z0-9-_]+'
          required: true
          type: string
        - description: The version number.
          in: path
          name: VersionNumber
          required: true
          type: integer
        - description: The identifier that was specified when the statement was added.
          in: path
          maxLength: 100
          minLength: 1
          name: StatementId
          pattern: '([a-zA-Z0-9-_]+)'
          required: true
          type: string
        - description: Only update the policy if the revision ID matches the ID specified. Use this option to avoid modifying a policy that has changed since you last read it.
          in: query
          name: RevisionId
          required: false
          type: string
      responses:
        '204':
          description: Success
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AccountLimit:
    description: Limits that are related to concurrency and code storage. All file and storage sizes are in bytes.
    properties:
      CodeSizeUnzipped:
        $ref: '#/definitions/Long'
        description: The maximum size of your function's code and layers when they're extracted.
      CodeSizeZipped:
        $ref: '#/definitions/Long'
        description: The maximum size of a deployment package when it's uploaded directly to AWS Lambda. Use Amazon S3 for larger files.
      ConcurrentExecutions:
        $ref: '#/definitions/Integer'
        description: The maximum number of simultaneous function executions.
      TotalCodeSize:
        $ref: '#/definitions/Long'
        description: The amount of storage space that you can use for all deployment packages and layer archives.
      UnreservedConcurrentExecutions:
        $ref: '#/definitions/UnreservedConcurrentExecutions'
        description: 'The maximum number of simultaneous function executions, minus the capacity that''s reserved for individual functions with <a>PutFunctionConcurrency</a>.'
    type: object
  AccountUsage:
    description: The number of functions and amount of storage in use.
    properties:
      FunctionCount:
        $ref: '#/definitions/Long'
        description: The number of Lambda functions.
      TotalCodeSize:
        $ref: '#/definitions/Long'
        description: 'The amount of storage space, in bytes, that''s being used by deployment packages and layer archives.'
    type: object
  Action:
    pattern: '(lambda:[*]|lambda:[a-zA-Z]+|[*])'
    type: string
  AddLayerVersionPermissionRequest:
    properties:
      Action:
        $ref: '#/definitions/LayerPermissionAllowedAction'
        description: 'The API action that grants access to the layer. For example, <code>lambda:GetLayerVersion</code>.'
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: 'With the principal set to <code>*</code>, grant permission to all accounts in the specified organization.'
      Principal:
        $ref: '#/definitions/LayerPermissionAllowedPrincipal'
        description: 'An account ID, or <code>*</code> to grant permission to all AWS accounts.'
      StatementId:
        $ref: '#/definitions/StatementId'
        description: An identifier that distinguishes the policy from others on the same layer version.
    required:
      - StatementId
      - Action
      - Principal
    type: object
  AddLayerVersionPermissionResponse:
    properties:
      RevisionId:
        $ref: '#/definitions/String'
        description: A unique identifier for the current revision of the policy.
      Statement:
        $ref: '#/definitions/String'
        description: The permission statement.
    type: object
  AddPermissionRequest:
    properties:
      Action:
        $ref: '#/definitions/Action'
        description: 'The action that the principal can use on the function. For example, <code>lambda:InvokeFunction</code> or <code>lambda:GetFunction</code>.'
      EventSourceToken:
        $ref: '#/definitions/EventSourceToken'
        description: 'For Alexa Smart Home functions, a token that must be supplied by the invoker.'
      Principal:
        $ref: '#/definitions/Principal'
        description: 'The AWS service or account that invokes the function. If you specify a service, use <code>SourceArn</code> or <code>SourceAccount</code> to limit who can invoke the function through that service.'
      RevisionId:
        $ref: '#/definitions/String'
        description: Only update the policy if the revision ID matches the ID that's specified. Use this option to avoid modifying a policy that has changed since you last read it.
      SourceAccount:
        $ref: '#/definitions/SourceOwner'
        description: 'For AWS services, the ID of the account that owns the resource. Use this instead of <code>SourceArn</code> to grant permission to resources that are owned by another account (for example, all of an account''s Amazon S3 buckets). Or use it together with <code>SourceArn</code> to ensure that the resource is owned by the specified account. For example, an Amazon S3 bucket could be deleted by its owner and recreated by another account.'
      SourceArn:
        $ref: '#/definitions/Arn'
        description: 'For AWS services, the ARN of the AWS resource that invokes the function. For example, an Amazon S3 bucket or Amazon SNS topic.'
      StatementId:
        $ref: '#/definitions/StatementId'
        description: A statement identifier that differentiates the statement from others in the same policy.
    required:
      - StatementId
      - Action
      - Principal
    type: object
  AddPermissionResponse:
    example:
      Statement: ID-1
    properties:
      Statement:
        $ref: '#/definitions/String'
        description: The permission statement that's added to the function policy.
    type: object
  AdditionalVersion:
    maxLength: 1024
    minLength: 1
    pattern: '[0-9]+'
    type: string
  AdditionalVersionWeights:
    additionalProperties:
      $ref: '#/definitions/Weight'
    type: object
  Alias:
    maxLength: 128
    minLength: 1
    pattern: '(?!^[0-9]+$)([a-zA-Z0-9-_]+)'
    type: string
  AliasConfiguration:
    description: 'Provides configuration information about a Lambda function <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">alias</a>.'
    example:
      AliasArn: 'arn:aws:lambda:us-west-2:123456789012:function:functionAlias'
      Description: ''
      FunctionVersion: '1'
      Name: functionAlias
    properties:
      AliasArn:
        $ref: '#/definitions/FunctionArn'
        description: The Amazon Resource Name (ARN) of the alias.
      Description:
        $ref: '#/definitions/Description'
        description: A description of the alias.
      FunctionVersion:
        $ref: '#/definitions/Version'
        description: The function version that the alias invokes.
      Name:
        $ref: '#/definitions/Alias'
        description: The name of the alias.
      RevisionId:
        $ref: '#/definitions/String'
        description: A unique identifier that changes when you update the alias.
      RoutingConfig:
        $ref: '#/definitions/AliasRoutingConfiguration'
        description: 'The <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html">routing configuration</a> of the alias.'
    type: object
  AliasList:
    items:
      $ref: '#/definitions/AliasConfiguration'
    type: array
  AliasRoutingConfiguration:
    description: 'The <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html">traffic-shifting</a> configuration of a Lambda function alias.'
    properties:
      AdditionalVersionWeights:
        $ref: '#/definitions/AdditionalVersionWeights'
        description: 'The name of the second alias, and the percentage of traffic that''s routed to it.'
    type: object
  Arn:
    pattern: 'arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-])+:([a-z]{2}(-gov)?-[a-z]+-\d{1})?:(\d{12})?:(.*)'
    type: string
  BatchSize:
    maximum: 10000
    minimum: 1
    type: integer
  Blob:
    format: password
    type: string
  BlobStream:
    type: string
  Boolean:
    type: boolean
  CodeStorageExceededException: {}
  CompatibleRuntimes:
    items:
      $ref: '#/definitions/Runtime'
    maxItems: 5
    type: array
  Concurrency:
    properties:
      ReservedConcurrentExecutions:
        $ref: '#/definitions/ReservedConcurrentExecutions'
        description: 'The number of concurrent executions that are reserved for this function. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html">Managing Concurrency</a>.'
    type: object
  CreateAliasRequest:
    properties:
      Description:
        $ref: '#/definitions/Description'
        description: A description of the alias.
      FunctionVersion:
        $ref: '#/definitions/Version'
        description: The function version that the alias invokes.
      Name:
        $ref: '#/definitions/Alias'
        description: The name of the alias.
      RoutingConfig:
        $ref: '#/definitions/AliasRoutingConfiguration'
        description: 'The <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html">routing configuration</a> of the alias.'
    required:
      - Name
      - FunctionVersion
    type: object
  CreateEventSourceMappingRequest:
    properties:
      BatchSize:
        $ref: '#/definitions/BatchSize'
        description: '<p>The maximum number of items to retrieve in a single batch.</p> <ul> <li> <p> <b>Amazon Kinesis</b> - Default 100. Max 10,000.</p> </li> <li> <p> <b>Amazon DynamoDB Streams</b> - Default 100. Max 1,000.</p> </li> <li> <p> <b>Amazon Simple Queue Service</b> - Default 10. Max 10.</p> </li> </ul>'
      Enabled:
        $ref: '#/definitions/Enabled'
        description: Disables the event source mapping to pause polling and invocation.
      EventSourceArn:
        $ref: '#/definitions/Arn'
        description: <p>The Amazon Resource Name (ARN) of the event source.</p> <ul> <li> <p> <b>Amazon Kinesis</b> - The ARN of the data stream or a stream consumer.</p> </li> <li> <p> <b>Amazon DynamoDB Streams</b> - The ARN of the stream.</p> </li> <li> <p> <b>Amazon Simple Queue Service</b> - The ARN of the queue.</p> </li> </ul>
      FunctionName:
        $ref: '#/definitions/FunctionName'
        description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Version or Alias ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it''s limited to 64 characters in length.</p>'
      MaximumBatchingWindowInSeconds:
        $ref: '#/definitions/MaximumBatchingWindowInSeconds'
      StartingPosition:
        $ref: '#/definitions/EventSourcePosition'
        description: The position in a stream from which to start reading. Required for Amazon Kinesis and Amazon DynamoDB Streams sources. <code>AT_TIMESTAMP</code> is only supported for Amazon Kinesis streams.
      StartingPositionTimestamp:
        $ref: '#/definitions/Date'
        description: 'With <code>StartingPosition</code> set to <code>AT_TIMESTAMP</code>, the time from which to start reading.'
    required:
      - EventSourceArn
      - FunctionName
    type: object
  CreateFunctionRequest:
    properties:
      Code:
        $ref: '#/definitions/FunctionCode'
        description: The code for the function.
      DeadLetterConfig:
        $ref: '#/definitions/DeadLetterConfig'
        description: 'A dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/dlq.html">Dead Letter Queues</a>.'
      Description:
        $ref: '#/definitions/Description'
        description: A description of the function.
      Environment:
        $ref: '#/definitions/Environment'
        description: Environment variables that are accessible from function code during execution.
      FunctionName:
        $ref: '#/definitions/FunctionName'
        description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
      Handler:
        $ref: '#/definitions/Handler'
        description: 'The name of the method within your code that Lambda calls to execute your function. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/programming-model-v2.html">Programming Model</a>.'
      KMSKeyArn:
        $ref: '#/definitions/KMSKeyArn'
        description: 'The ARN of the AWS Key Management Service (AWS KMS) key that''s used to encrypt your function''s environment variables. If it''s not provided, AWS Lambda uses a default service key.'
      Layers:
        $ref: '#/definitions/LayerList'
        description: 'A list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">function layers</a> to add to the function''s execution environment. Specify each layer by its ARN, including the version.'
      MemorySize:
        $ref: '#/definitions/MemorySize'
        description: The amount of memory that your function has access to. Increasing the function's memory also increases its CPU allocation. The default value is 128 MB. The value must be a multiple of 64 MB.
      Publish:
        $ref: '#/definitions/Boolean'
        description: Set to true to publish the first version of the function during creation.
      Role:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) of the function's execution role.
      Runtime:
        $ref: '#/definitions/Runtime'
        description: 'The identifier of the function''s <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime</a>.'
      Tags:
        $ref: '#/definitions/Tags'
        description: 'A list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/tagging.html">tags</a> to apply to the function.'
      Timeout:
        $ref: '#/definitions/Timeout'
        description: The amount of time that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds.
      TracingConfig:
        $ref: '#/definitions/TracingConfig'
        description: Set <code>Mode</code> to <code>Active</code> to sample and trace a subset of incoming requests with AWS X-Ray.
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: 'For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC. When you connect a function to a VPC, it can only access resources and the internet through that VPC. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/vpc.html">VPC Settings</a>.'
    required:
      - FunctionName
      - Runtime
      - Role
      - Handler
      - Code
    type: object
  Date:
    format: date-time
    type: string
  DeadLetterConfig:
    description: 'The <a href="https://docs.aws.amazon.com/lambda/latest/dg/dlq.html">dead letter queue</a> for failed asynchronous invocations.'
    properties:
      TargetArn:
        $ref: '#/definitions/ResourceArn'
        description: The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.
    type: object
  DeleteAliasRequest:
    properties: {}
    type: object
  DeleteEventSourceMappingRequest:
    properties: {}
    type: object
  DeleteFunctionConcurrencyRequest:
    properties: {}
    type: object
  DeleteFunctionRequest:
    properties: {}
    type: object
  DeleteLayerVersionRequest:
    properties: {}
    type: object
  Description:
    maxLength: 256
    minLength: 0
    type: string
  EC2AccessDeniedException: {}
  EC2ThrottledException: {}
  EC2UnexpectedException: {}
  ENILimitReachedException: {}
  Enabled:
    type: boolean
  Environment:
    description: A function's environment variable settings.
    properties:
      Variables:
        $ref: '#/definitions/EnvironmentVariables'
        description: Environment variable key-value pairs.
    type: object
  EnvironmentError:
    description: Error messages for environment variables that couldn't be applied.
    properties:
      ErrorCode:
        $ref: '#/definitions/String'
        description: The error code.
      Message:
        $ref: '#/definitions/SensitiveString'
        description: The error message.
    type: object
  EnvironmentResponse:
    description: The results of a configuration update that applied environment variables.
    properties:
      Error:
        $ref: '#/definitions/EnvironmentError'
        description: Error messages for environment variables that couldn't be applied.
      Variables:
        $ref: '#/definitions/EnvironmentVariables'
        description: Environment variable key-value pairs.
    type: object
  EnvironmentVariableName:
    format: password
    pattern: '[a-zA-Z]([a-zA-Z0-9_])+'
    type: string
  EnvironmentVariableValue:
    format: password
    type: string
  EnvironmentVariables:
    additionalProperties:
      $ref: '#/definitions/EnvironmentVariableValue'
    type: object
  EventSourceMappingConfiguration:
    description: A mapping between an AWS resource and an AWS Lambda function. See <a>CreateEventSourceMapping</a> for details.
    example:
      BatchSize: 123
      EventSourceArn: 'arn:aws:s3:::examplebucket/*'
      FunctionArn: 'arn:aws:lambda:us-west-2:123456789012:function:myFunction'
      LastModified: '2016-11-21T19:49:20.006+0000'
      LastProcessingResult: ''
      State: ''
      StateTransitionReason: ''
      UUID: 1234xCy789012
    properties:
      BatchSize:
        $ref: '#/definitions/BatchSize'
        description: The maximum number of items to retrieve in a single batch.
      EventSourceArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the event source.
      FunctionArn:
        $ref: '#/definitions/FunctionArn'
        description: The ARN of the Lambda function.
      LastModified:
        $ref: '#/definitions/Date'
        description: The date that the event source mapping was last updated.
      LastProcessingResult:
        $ref: '#/definitions/String'
        description: The result of the last AWS Lambda invocation of your Lambda function.
      MaximumBatchingWindowInSeconds:
        $ref: '#/definitions/MaximumBatchingWindowInSeconds'
      State:
        $ref: '#/definitions/String'
        description: 'The state of the event source mapping. It can be one of the following: <code>Creating</code>, <code>Enabling</code>, <code>Enabled</code>, <code>Disabling</code>, <code>Disabled</code>, <code>Updating</code>, or <code>Deleting</code>.'
      StateTransitionReason:
        $ref: '#/definitions/String'
        description: 'The cause of the last state change, either <code>User initiated</code> or <code>Lambda initiated</code>.'
      UUID:
        $ref: '#/definitions/String'
        description: The identifier of the event source mapping.
    type: object
  EventSourceMappingsList:
    items:
      $ref: '#/definitions/EventSourceMappingConfiguration'
    type: array
  EventSourcePosition:
    enum:
      - TRIM_HORIZON
      - LATEST
      - AT_TIMESTAMP
    type: string
  EventSourceToken:
    maxLength: 256
    minLength: 0
    pattern: '[a-zA-Z0-9._\-]+'
    type: string
  FunctionArn:
    pattern: 'arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(:(\$LATEST|[a-zA-Z0-9-_]+))?'
    type: string
  FunctionCode:
    description: 'The code for the Lambda function. You can specify either an object in Amazon S3, or upload a deployment package directly.'
    properties:
      S3Bucket:
        $ref: '#/definitions/S3Bucket'
        description: An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.
      S3Key:
        $ref: '#/definitions/S3Key'
        description: The Amazon S3 key of the deployment package.
      S3ObjectVersion:
        $ref: '#/definitions/S3ObjectVersion'
        description: 'For versioned objects, the version of the deployment package object to use.'
      ZipFile:
        $ref: '#/definitions/Blob'
        description: The base64-encoded contents of the deployment package. AWS SDK and AWS CLI clients handle the encoding for you.
    type: object
  FunctionCodeLocation:
    description: Details about a function's deployment package.
    properties:
      Location:
        $ref: '#/definitions/String'
        description: A presigned URL that you can use to download the deployment package.
      RepositoryType:
        $ref: '#/definitions/String'
        description: The service that's hosting the file.
    type: object
  FunctionConfiguration:
    description: Details about a function's configuration.
    example:
      CodeSha256: LQT+0DHxxxxcfwLyQjzoEFKZtdqQjHXanlSdfXBlEW0VA=
      CodeSize: 123
      Description: ''
      FunctionArn: 'arn:aws:lambda:us-west-2:123456789012:function:myFunction'
      FunctionName: myFunction
      Handler: index.handler
      LastModified: '2016-11-21T19:49:20.006+0000'
      MemorySize: 128
      Role: 'arn:aws:iam::123456789012:role/lambda_basic_execution'
      Runtime: python2.7
      Timeout: 123
      Version: '1'
      VpcConfig: {}
    properties:
      CodeSha256:
        $ref: '#/definitions/String'
        description: The SHA256 hash of the function's deployment package.
      CodeSize:
        $ref: '#/definitions/Long'
        description: 'The size of the function''s deployment package, in bytes.'
      DeadLetterConfig:
        $ref: '#/definitions/DeadLetterConfig'
        description: The function's dead letter queue.
      Description:
        $ref: '#/definitions/Description'
        description: The function's description.
      Environment:
        $ref: '#/definitions/EnvironmentResponse'
        description: The function's environment variables.
      FunctionArn:
        $ref: '#/definitions/NameSpacedFunctionArn'
        description: The function's Amazon Resource Name (ARN).
      FunctionName:
        $ref: '#/definitions/NamespacedFunctionName'
        description: The name of the function.
      Handler:
        $ref: '#/definitions/Handler'
        description: The function that Lambda calls to begin executing your function.
      KMSKeyArn:
        $ref: '#/definitions/KMSKeyArn'
        description: The KMS key that's used to encrypt the function's environment variables. This key is only returned if you've configured a customer-managed CMK.
      LastModified:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time that the function was last updated, in <a href="https://www.w3.org/TR/NOTE-datetime">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).'
      Layers:
        $ref: '#/definitions/LayersReferenceList'
        description: 'The function''s <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html"> layers</a>.'
      MasterArn:
        $ref: '#/definitions/FunctionArn'
        description: 'For Lambda@Edge functions, the ARN of the master function.'
      MemorySize:
        $ref: '#/definitions/MemorySize'
        description: The memory that's allocated to the function.
      RevisionId:
        $ref: '#/definitions/String'
        description: The latest updated revision of the function or alias.
      Role:
        $ref: '#/definitions/RoleArn'
        description: The function's execution role.
      Runtime:
        $ref: '#/definitions/Runtime'
        description: The runtime environment for the Lambda function.
      Timeout:
        $ref: '#/definitions/Timeout'
        description: The amount of time that Lambda allows a function to run before stopping it.
      TracingConfig:
        $ref: '#/definitions/TracingConfigResponse'
        description: The function's AWS X-Ray tracing configuration.
      Version:
        $ref: '#/definitions/Version'
        description: The version of the Lambda function.
      VpcConfig:
        $ref: '#/definitions/VpcConfigResponse'
        description: The function's networking configuration.
    type: object
  FunctionList:
    items:
      $ref: '#/definitions/FunctionConfiguration'
    type: array
  FunctionName:
    maxLength: 140
    minLength: 1
    pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
    type: string
  FunctionVersion:
    enum:
      - ALL
    type: string
  GetAccountSettingsRequest:
    properties: {}
    type: object
  GetAccountSettingsResponse:
    example:
      AccountLimit: {}
      AccountUsage: {}
    properties:
      AccountLimit:
        $ref: '#/definitions/AccountLimit'
        description: Limits that are related to concurrency and code storage.
      AccountUsage:
        $ref: '#/definitions/AccountUsage'
        description: The number of functions and amount of storage in use.
    type: object
  GetAliasRequest:
    properties: {}
    type: object
  GetEventSourceMappingRequest:
    properties: {}
    type: object
  GetFunctionConfigurationRequest:
    properties: {}
    type: object
  GetFunctionRequest:
    properties: {}
    type: object
  GetFunctionResponse:
    example:
      Code:
        Location: somelocation
        RepositoryType: S3
      Configuration:
        CodeSha256: LQT+0DHxxxxcfwLyQjzoEFKZtdqQjHXanlSdfXBlEW0VA=
        CodeSize: 262
        Description: A starter AWS Lambda function.
        Environment:
          Variables:
            S3_BUCKET: test
        FunctionArn: 'arn:aws:lambda:us-west-2:123456789012:function:myFunction'
        FunctionName: myFunction
        Handler: index.handler
        LastModified: '2016-11-21T19:49:20.006+0000'
        MemorySize: 128
        Role: 'arn:aws:iam::123456789012:role/lambda_basic_execution'
        Runtime: nodejs8.10
        Timeout: 3
        Version: $LATEST
        VpcConfig:
          SecurityGroupIds: []
          SubnetIds: []
    properties:
      Code:
        $ref: '#/definitions/FunctionCodeLocation'
        description: The deployment package of the function or version.
      Concurrency:
        $ref: '#/definitions/Concurrency'
        description: 'The function''s <a href="https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html">reserved concurrency</a>.'
      Configuration:
        $ref: '#/definitions/FunctionConfiguration'
        description: The configuration of the function or version.
      Tags:
        $ref: '#/definitions/Tags'
        description: 'The function''s <a href="https://docs.aws.amazon.com/lambda/latest/dg/tagging.html">tags</a>.'
    type: object
  GetLayerVersionByArnRequest:
    properties: {}
    type: object
  GetLayerVersionPolicyRequest:
    properties: {}
    type: object
  GetLayerVersionPolicyResponse:
    properties:
      Policy:
        $ref: '#/definitions/String'
        description: The policy document.
      RevisionId:
        $ref: '#/definitions/String'
        description: A unique identifier for the current revision of the policy.
    type: object
  GetLayerVersionRequest:
    properties: {}
    type: object
  GetLayerVersionResponse:
    properties:
      CompatibleRuntimes:
        $ref: '#/definitions/CompatibleRuntimes'
        description: The layer's compatible runtimes.
      Content:
        $ref: '#/definitions/LayerVersionContentOutput'
        description: Details about the layer version.
      CreatedDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date that the layer version was created, in <a href="https://www.w3.org/TR/NOTE-datetime">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).'
      Description:
        $ref: '#/definitions/Description'
        description: The description of the version.
      LayerArn:
        $ref: '#/definitions/LayerArn'
        description: The ARN of the layer.
      LayerVersionArn:
        $ref: '#/definitions/LayerVersionArn'
        description: The ARN of the layer version.
      LicenseInfo:
        $ref: '#/definitions/LicenseInfo'
        description: The layer's software license.
      Version:
        $ref: '#/definitions/LayerVersionNumber'
        description: The version number.
    type: object
  GetPolicyRequest:
    properties: {}
    type: object
  GetPolicyResponse:
    example:
      Policy: ''
    properties:
      Policy:
        $ref: '#/definitions/String'
        description: The resource-based policy.
      RevisionId:
        $ref: '#/definitions/String'
        description: A unique identifier for the current revision of the policy.
    type: object
  Handler:
    maxLength: 128
    pattern: '[^\s]+'
    type: string
  HttpStatus:
    type: integer
  Integer:
    type: integer
  InvalidParameterValueException: {}
  InvalidRequestContentException: {}
  InvalidRuntimeException: {}
  InvalidSecurityGroupIDException: {}
  InvalidSubnetIDException: {}
  InvalidZipFileException: {}
  InvocationRequest:
    properties:
      Payload:
        $ref: '#/definitions/Blob'
        description: The JSON that you want to provide to your Lambda function as input.
    type: object
  InvocationResponse:
    example:
      FunctionError: ''
      LogResult: ''
      Payload: '?'
      StatusCode: 123
    properties:
      Payload:
        $ref: '#/definitions/Blob'
        description: 'The response from the function, or an error object.'
      StatusCode:
        $ref: '#/definitions/Integer'
        description: 'The HTTP status code is in the 200 range for a successful request. For the <code>RequestResponse</code> invocation type, this status code is 200. For the <code>Event</code> invocation type, this status code is 202. For the <code>DryRun</code> invocation type, the status code is 204.'
    type: object
  InvocationType:
    enum:
      - Event
      - RequestResponse
      - DryRun
    type: string
  InvokeAsyncRequest:
    properties:
      InvokeArgs:
        $ref: '#/definitions/BlobStream'
        description: The JSON that you want to provide to your Lambda function as input.
    required:
      - InvokeArgs
    type: object
  InvokeAsyncResponse:
    description: 'A success response (<code>202 Accepted</code>) indicates that the request is queued for invocation. '
    example:
      Status: 123
    properties:
      Status:
        $ref: '#/definitions/HttpStatus'
        description: The status code.
    type: object
  KMSAccessDeniedException: {}
  KMSDisabledException: {}
  KMSInvalidStateException: {}
  KMSKeyArn:
    pattern: '(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()'
    type: string
  KMSNotFoundException: {}
  Layer:
    description: 'An <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>.'
    properties:
      Arn:
        $ref: '#/definitions/LayerVersionArn'
        description: The Amazon Resource Name (ARN) of the function layer.
      CodeSize:
        $ref: '#/definitions/Long'
        description: The size of the layer archive in bytes.
    type: object
  LayerArn:
    maxLength: 140
    minLength: 1
    pattern: 'arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\d{12}:layer:[a-zA-Z0-9-_]+'
    type: string
  LayerList:
    items:
      $ref: '#/definitions/LayerVersionArn'
    type: array
  LayerName:
    maxLength: 140
    minLength: 1
    pattern: '(arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\d{12}:layer:[a-zA-Z0-9-_]+)|[a-zA-Z0-9-_]+'
    type: string
  LayerPermissionAllowedAction:
    pattern: 'lambda:GetLayerVersion'
    type: string
  LayerPermissionAllowedPrincipal:
    pattern: '\d{12}|\*|arn:(aws[a-zA-Z-]*):iam::\d{12}:root'
    type: string
  LayerVersionArn:
    maxLength: 140
    minLength: 1
    pattern: 'arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\d{12}:layer:[a-zA-Z0-9-_]+:[0-9]+'
    type: string
  LayerVersionContentInput:
    description: 'A ZIP archive that contains the contents of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>. You can specify either an Amazon S3 location, or upload a layer archive directly.'
    properties:
      S3Bucket:
        $ref: '#/definitions/S3Bucket'
        description: The Amazon S3 bucket of the layer archive.
      S3Key:
        $ref: '#/definitions/S3Key'
        description: The Amazon S3 key of the layer archive.
      S3ObjectVersion:
        $ref: '#/definitions/S3ObjectVersion'
        description: 'For versioned objects, the version of the layer archive object to use.'
      ZipFile:
        $ref: '#/definitions/Blob'
        description: The base64-encoded contents of the layer archive. AWS SDK and AWS CLI clients handle the encoding for you.
    type: object
  LayerVersionContentOutput:
    description: 'Details about a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>.'
    properties:
      CodeSha256:
        $ref: '#/definitions/String'
        description: The SHA-256 hash of the layer archive.
      CodeSize:
        $ref: '#/definitions/Long'
        description: The size of the layer archive in bytes.
      Location:
        $ref: '#/definitions/String'
        description: A link to the layer archive in Amazon S3 that is valid for 10 minutes.
    type: object
  LayerVersionNumber:
    type: integer
  LayerVersionsList:
    items:
      $ref: '#/definitions/LayerVersionsListItem'
    type: array
  LayerVersionsListItem:
    description: 'Details about a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>.'
    properties:
      CompatibleRuntimes:
        $ref: '#/definitions/CompatibleRuntimes'
        description: The layer's compatible runtimes.
      CreatedDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date that the version was created, in ISO 8601 format. For example, <code>2018-11-27T15:10:45.123+0000</code>.'
      Description:
        $ref: '#/definitions/Description'
        description: The description of the version.
      LayerVersionArn:
        $ref: '#/definitions/LayerVersionArn'
        description: The ARN of the layer version.
      LicenseInfo:
        $ref: '#/definitions/LicenseInfo'
        description: The layer's open-source license.
      Version:
        $ref: '#/definitions/LayerVersionNumber'
        description: The version number.
    type: object
  LayersList:
    items:
      $ref: '#/definitions/LayersListItem'
    type: array
  LayersListItem:
    description: 'Details about an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>.'
    properties:
      LatestMatchingVersion:
        $ref: '#/definitions/LayerVersionsListItem'
        description: The newest version of the layer.
      LayerArn:
        $ref: '#/definitions/LayerArn'
        description: The Amazon Resource Name (ARN) of the function layer.
      LayerName:
        $ref: '#/definitions/LayerName'
        description: The name of the layer.
    type: object
  LayersReferenceList:
    items:
      $ref: '#/definitions/Layer'
    type: array
  LicenseInfo:
    maxLength: 512
    type: string
  ListAliasesRequest:
    properties: {}
    type: object
  ListAliasesResponse:
    example:
      Aliases: []
      NextMarker: ''
    properties:
      Aliases:
        $ref: '#/definitions/AliasList'
        description: A list of aliases.
      NextMarker:
        $ref: '#/definitions/String'
        description: The pagination token that's included if more results are available.
    type: object
  ListEventSourceMappingsRequest:
    properties: {}
    type: object
  ListEventSourceMappingsResponse:
    properties:
      EventSourceMappings:
        $ref: '#/definitions/EventSourceMappingsList'
        description: A list of event source mappings.
      NextMarker:
        $ref: '#/definitions/String'
        description: A pagination token that's returned when the response doesn't contain all event source mappings.
    type: object
  ListFunctionsRequest:
    properties: {}
    type: object
  ListFunctionsResponse:
    description: A list of Lambda functions.
    example:
      Functions: []
      NextMarker: ''
    properties:
      Functions:
        $ref: '#/definitions/FunctionList'
        description: A list of Lambda functions.
      NextMarker:
        $ref: '#/definitions/String'
        description: The pagination token that's included if more results are available.
    type: object
  ListLayerVersionsRequest:
    properties: {}
    type: object
  ListLayerVersionsResponse:
    properties:
      LayerVersions:
        $ref: '#/definitions/LayerVersionsList'
        description: A list of versions.
      NextMarker:
        $ref: '#/definitions/String'
        description: A pagination token returned when the response doesn't contain all versions.
    type: object
  ListLayersRequest:
    properties: {}
    type: object
  ListLayersResponse:
    properties:
      Layers:
        $ref: '#/definitions/LayersList'
        description: A list of function layers.
      NextMarker:
        $ref: '#/definitions/String'
        description: A pagination token returned when the response doesn't contain all layers.
    type: object
  ListTagsRequest:
    properties: {}
    type: object
  ListTagsResponse:
    properties:
      Tags:
        $ref: '#/definitions/Tags'
        description: The function's tags.
    type: object
  ListVersionsByFunctionRequest:
    properties: {}
    type: object
  ListVersionsByFunctionResponse:
    example:
      NextMarker: ''
      Versions: []
    properties:
      NextMarker:
        $ref: '#/definitions/String'
        description: The pagination token that's included if more results are available.
      Versions:
        $ref: '#/definitions/FunctionList'
        description: A list of Lambda function versions.
    type: object
  LogType:
    enum:
      - None
      - Tail
    type: string
  Long:
    type: integer
  MasterRegion:
    pattern: 'ALL|[a-z]{2}(-gov)?-[a-z]+-\d{1}'
    type: string
  MaxLayerListItems:
    maximum: 50
    minimum: 1
    type: integer
  MaxListItems:
    maximum: 10000
    minimum: 1
    type: integer
  MaximumBatchingWindowInSeconds:
    maximum: 300
    minimum: 0
    type: integer
  MemorySize:
    maximum: 3008
    minimum: 128
    type: integer
  NameSpacedFunctionArn:
    pattern: 'arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_\.]+(:(\$LATEST|[a-zA-Z0-9-_]+))?'
    type: string
  NamespacedFunctionName:
    maxLength: 170
    minLength: 1
    pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_\.]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
    type: string
  NamespacedStatementId:
    maxLength: 100
    minLength: 1
    pattern: '([a-zA-Z0-9-_.]+)'
    type: string
  OrganizationId:
    pattern: 'o-[a-z0-9]{10,32}'
    type: string
  PolicyLengthExceededException: {}
  PreconditionFailedException: {}
  Principal:
    pattern: .*
    type: string
  PublishLayerVersionRequest:
    properties:
      CompatibleRuntimes:
        $ref: '#/definitions/CompatibleRuntimes'
        description: 'A list of compatible <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">function runtimes</a>. Used for filtering with <a>ListLayers</a> and <a>ListLayerVersions</a>.'
      Content:
        $ref: '#/definitions/LayerVersionContentInput'
        description: The function layer archive.
      Description:
        $ref: '#/definitions/Description'
        description: The description of the version.
      LicenseInfo:
        $ref: '#/definitions/LicenseInfo'
        description: '<p>The layer''s software license. It can be any of the following:</p> <ul> <li> <p>An <a href="https://spdx.org/licenses/">SPDX license identifier</a>. For example, <code>MIT</code>.</p> </li> <li> <p>The URL of a license hosted on the internet. For example, <code>https://opensource.org/licenses/MIT</code>.</p> </li> <li> <p>The full text of the license.</p> </li> </ul>'
    required:
      - Content
    type: object
  PublishLayerVersionResponse:
    properties:
      CompatibleRuntimes:
        $ref: '#/definitions/CompatibleRuntimes'
        description: The layer's compatible runtimes.
      Content:
        $ref: '#/definitions/LayerVersionContentOutput'
        description: Details about the layer version.
      CreatedDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date that the layer version was created, in <a href="https://www.w3.org/TR/NOTE-datetime">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).'
      Description:
        $ref: '#/definitions/Description'
        description: The description of the version.
      LayerArn:
        $ref: '#/definitions/LayerArn'
        description: The ARN of the layer.
      LayerVersionArn:
        $ref: '#/definitions/LayerVersionArn'
        description: The ARN of the layer version.
      LicenseInfo:
        $ref: '#/definitions/LicenseInfo'
        description: The layer's software license.
      Version:
        $ref: '#/definitions/LayerVersionNumber'
        description: The version number.
    type: object
  PublishVersionRequest:
    properties:
      CodeSha256:
        $ref: '#/definitions/String'
        description: Only publish a version if the hash value matches the value that's specified. Use this option to avoid publishing a version if the function code has changed since you last updated it. You can get the hash for the version that you uploaded from the output of <a>UpdateFunctionCode</a>.
      Description:
        $ref: '#/definitions/Description'
        description: A description for the version to override the description in the function configuration.
      RevisionId:
        $ref: '#/definitions/String'
        description: Only update the function if the revision ID matches the ID that's specified. Use this option to avoid publishing a version if the function configuration has changed since you last updated it.
    type: object
  PutFunctionConcurrencyRequest:
    properties:
      ReservedConcurrentExecutions:
        $ref: '#/definitions/ReservedConcurrentExecutions'
        description: The number of simultaneous executions to reserve for the function.
    required:
      - ReservedConcurrentExecutions
    type: object
  Qualifier:
    maxLength: 128
    minLength: 1
    pattern: '(|[a-zA-Z0-9$_-]+)'
    type: string
  RemoveLayerVersionPermissionRequest:
    properties: {}
    type: object
  RemovePermissionRequest:
    properties: {}
    type: object
  RequestTooLargeException: {}
  ReservedConcurrentExecutions:
    minimum: 0
    type: integer
  ResourceArn:
    pattern: '(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()'
    type: string
  ResourceConflictException: {}
  ResourceInUseException: {}
  ResourceNotFoundException: {}
  RoleArn:
    pattern: 'arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+'
    type: string
  Runtime:
    enum:
      - nodejs
      - nodejs4.3
      - nodejs6.10
      - nodejs8.10
      - nodejs10.x
      - java8
      - python2.7
      - python3.6
      - python3.7
      - dotnetcore1.0
      - dotnetcore2.0
      - dotnetcore2.1
      - nodejs4.3-edge
      - go1.x
      - ruby2.5
      - provided
    type: string
  S3Bucket:
    maxLength: 63
    minLength: 3
    pattern: '^[0-9A-Za-z\.\-_]*(?<!\.)$'
    type: string
  S3Key:
    maxLength: 1024
    minLength: 1
    type: string
  S3ObjectVersion:
    maxLength: 1024
    minLength: 1
    type: string
  SecurityGroupId:
    type: string
  SecurityGroupIds:
    items:
      $ref: '#/definitions/SecurityGroupId'
    maxItems: 5
    type: array
  SensitiveString:
    format: password
    type: string
  ServiceException: {}
  SourceOwner:
    pattern: '\d{12}'
    type: string
  StatementId:
    maxLength: 100
    minLength: 1
    pattern: '([a-zA-Z0-9-_]+)'
    type: string
  String:
    type: string
  SubnetIPAddressLimitReachedException: {}
  SubnetId:
    type: string
  SubnetIds:
    items:
      $ref: '#/definitions/SubnetId'
    maxItems: 16
    type: array
  TagKey:
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    type: array
  TagResourceRequest:
    properties:
      Tags:
        $ref: '#/definitions/Tags'
        description: A list of tags to apply to the function.
    required:
      - Tags
    type: object
  TagValue:
    type: string
  Tags:
    additionalProperties:
      $ref: '#/definitions/TagValue'
    type: object
  Timeout:
    minimum: 1
    type: integer
  Timestamp:
    type: string
  TooManyRequestsException: {}
  TracingConfig:
    description: The function's AWS X-Ray tracing configuration.
    properties:
      Mode:
        $ref: '#/definitions/TracingMode'
        description: The tracing mode.
    type: object
  TracingConfigResponse:
    description: The function's AWS X-Ray tracing configuration.
    properties:
      Mode:
        $ref: '#/definitions/TracingMode'
        description: The tracing mode.
    type: object
  TracingMode:
    enum:
      - Active
      - PassThrough
    type: string
  UnreservedConcurrentExecutions:
    minimum: 0
    type: integer
  UnsupportedMediaTypeException: {}
  UntagResourceRequest:
    properties: {}
    type: object
  UpdateAliasRequest:
    properties:
      Description:
        $ref: '#/definitions/Description'
        description: A description of the alias.
      FunctionVersion:
        $ref: '#/definitions/Version'
        description: The function version that the alias invokes.
      RevisionId:
        $ref: '#/definitions/String'
        description: Only update the alias if the revision ID matches the ID that's specified. Use this option to avoid modifying an alias that has changed since you last read it.
      RoutingConfig:
        $ref: '#/definitions/AliasRoutingConfiguration'
        description: 'The <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html">routing configuration</a> of the alias.'
    type: object
  UpdateEventSourceMappingRequest:
    properties:
      BatchSize:
        $ref: '#/definitions/BatchSize'
        description: '<p>The maximum number of items to retrieve in a single batch.</p> <ul> <li> <p> <b>Amazon Kinesis</b> - Default 100. Max 10,000.</p> </li> <li> <p> <b>Amazon DynamoDB Streams</b> - Default 100. Max 1,000.</p> </li> <li> <p> <b>Amazon Simple Queue Service</b> - Default 10. Max 10.</p> </li> </ul>'
      Enabled:
        $ref: '#/definitions/Enabled'
        description: Disables the event source mapping to pause polling and invocation.
      FunctionName:
        $ref: '#/definitions/FunctionName'
        description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Version or Alias ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it''s limited to 64 characters in length.</p>'
      MaximumBatchingWindowInSeconds:
        $ref: '#/definitions/MaximumBatchingWindowInSeconds'
    type: object
  UpdateFunctionCodeRequest:
    properties:
      DryRun:
        $ref: '#/definitions/Boolean'
        description: Set to true to validate the request parameters and access permissions without modifying the function code.
      Publish:
        $ref: '#/definitions/Boolean'
        description: Set to true to publish a new version of the function after updating the code. This has the same effect as calling <a>PublishVersion</a> separately.
      RevisionId:
        $ref: '#/definitions/String'
        description: Only update the function if the revision ID matches the ID that's specified. Use this option to avoid modifying a function that has changed since you last read it.
      S3Bucket:
        $ref: '#/definitions/S3Bucket'
        description: An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.
      S3Key:
        $ref: '#/definitions/S3Key'
        description: The Amazon S3 key of the deployment package.
      S3ObjectVersion:
        $ref: '#/definitions/S3ObjectVersion'
        description: 'For versioned objects, the version of the deployment package object to use.'
      ZipFile:
        $ref: '#/definitions/Blob'
        description: The base64-encoded contents of the deployment package. AWS SDK and AWS CLI clients handle the encoding for you.
    type: object
  UpdateFunctionConfigurationRequest:
    properties:
      DeadLetterConfig:
        $ref: '#/definitions/DeadLetterConfig'
        description: 'A dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/dlq.html">Dead Letter Queues</a>.'
      Description:
        $ref: '#/definitions/Description'
        description: A description of the function.
      Environment:
        $ref: '#/definitions/Environment'
        description: Environment variables that are accessible from function code during execution.
      Handler:
        $ref: '#/definitions/Handler'
        description: 'The name of the method within your code that Lambda calls to execute your function. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/programming-model-v2.html">Programming Model</a>.'
      KMSKeyArn:
        $ref: '#/definitions/KMSKeyArn'
        description: 'The ARN of the AWS Key Management Service (AWS KMS) key that''s used to encrypt your function''s environment variables. If it''s not provided, AWS Lambda uses a default service key.'
      Layers:
        $ref: '#/definitions/LayerList'
        description: 'A list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">function layers</a> to add to the function''s execution environment. Specify each layer by its ARN, including the version.'
      MemorySize:
        $ref: '#/definitions/MemorySize'
        description: The amount of memory that your function has access to. Increasing the function's memory also increases its CPU allocation. The default value is 128 MB. The value must be a multiple of 64 MB.
      RevisionId:
        $ref: '#/definitions/String'
        description: Only update the function if the revision ID matches the ID that's specified. Use this option to avoid modifying a function that has changed since you last read it.
      Role:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) of the function's execution role.
      Runtime:
        $ref: '#/definitions/Runtime'
        description: 'The identifier of the function''s <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime</a>.'
      Timeout:
        $ref: '#/definitions/Timeout'
        description: The amount of time that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds.
      TracingConfig:
        $ref: '#/definitions/TracingConfig'
        description: Set <code>Mode</code> to <code>Active</code> to sample and trace a subset of incoming requests with AWS X-Ray.
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: 'For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC. When you connect a function to a VPC, it can only access resources and the internet through that VPC. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/vpc.html">VPC Settings</a>.'
    type: object
  Version:
    maxLength: 1024
    minLength: 1
    pattern: '(\$LATEST|[0-9]+)'
    type: string
  VpcConfig:
    description: The VPC security groups and subnets that are attached to a Lambda function.
    properties:
      SecurityGroupIds:
        $ref: '#/definitions/SecurityGroupIds'
        description: A list of VPC security groups IDs.
      SubnetIds:
        $ref: '#/definitions/SubnetIds'
        description: A list of VPC subnet IDs.
    type: object
  VpcConfigResponse:
    description: The VPC security groups and subnets that are attached to a Lambda function.
    properties:
      SecurityGroupIds:
        $ref: '#/definitions/SecurityGroupIds'
        description: A list of VPC security groups IDs.
      SubnetIds:
        $ref: '#/definitions/SubnetIds'
        description: A list of VPC subnet IDs.
      VpcId:
        $ref: '#/definitions/VpcId'
        description: The ID of the VPC.
    type: object
  VpcId:
    type: string
  Weight:
    format: double
    maximum: 1
    minimum: 0
    type: number
x-servers:
  - description: The AWS Lambda multi-region endpoint
    url: 'http://lambda.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The AWS Lambda multi-region endpoint
    url: 'https://lambda.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The AWS Lambda endpoint for China (Beijing) and China (Ningxia)
    url: 'http://lambda.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
  - description: The AWS Lambda endpoint for China (Beijing) and China (Ningxia)
    url: 'https://lambda.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
