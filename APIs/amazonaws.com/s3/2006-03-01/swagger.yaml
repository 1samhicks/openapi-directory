swagger: '2.0'
info:
  version: '2006-03-01'
  x-release: s3
  title: Amazon Simple Storage Service
  description: <p/>
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: s3
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/s3-2006-03-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/s3/'
host: s3.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://s3{dash-or-dot}{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - eu-west-1
          - ap-northeast-1
          - ap-southeast-1
          - ap-southeast-2
          - sa-east-1
        default: us-east-1
      dash-or-dot:
        description: The service/region URL separator
        enum:
          - .
          - '-'
        default: .
    description: The Amazon S3 multi-region endpoint
  - url: 'https://s3{dash-or-dot}{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - eu-west-1
          - ap-northeast-1
          - ap-southeast-1
          - ap-southeast-2
          - sa-east-1
        default: us-east-1
      dash-or-dot:
        description: The service/region URL separator
        enum:
          - .
          - '-'
        default: .
    description: The Amazon S3 multi-region endpoint
  - url: 'http://s3.amazonaws.com'
    variables: {}
    description: The general Amazon S3 endpoint for US East (N. Virginia)
  - url: 'https://s3.amazonaws.com'
    variables: {}
    description: The general Amazon S3 endpoint for US East (N. Virginia)
  - url: 'http://s3.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-2
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-south-1
        default: us-east-2
    description: The Amazon S3 multi-region endpoint
  - url: 'https://s3.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-2
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-south-1
        default: us-east-2
    description: The Amazon S3 multi-region endpoint
  - url: 'http://s3.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon S3 endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://s3.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon S3 endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
consumes:
  - text/xml
produces:
  - text/xml
parameters:
  x-amz-security-token:
    name: x-amz-security-token
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon S3 signature
    x-amazon-apigateway-authtype: awsS3
security:
  - hmac: []
paths:
  '/{Bucket}/{Key}#uploadId':
    delete:
      operationId: AbortMultipartUpload
      description: '<p>Aborts a multipart upload.</p> <p>To verify that all parts have been removed, so you don''t get charged for the part storage, you should call the List Parts operation and ensure the parts list is empty.</p>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadAbort.html'
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/AbortMultipartUploadOutput'
        '480':
          description: NoSuchUpload
          schema:
            $ref: '#/definitions/NoSuchUpload'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: Name of the bucket to which the multipart upload was initiated.
          type: string
        - name: Key
          in: path
          required: true
          description: Key of the object for which the multipart upload was initiated.
          type: string
          minLength: 1
        - name: uploadId
          in: query
          required: true
          description: Upload ID that identifies the multipart upload.
          type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    post:
      operationId: CompleteMultipartUpload
      description: Completes a multipart upload by assembling previously uploaded parts.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadComplete.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CompleteMultipartUploadOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          type: string
          minLength: 1
        - name: uploadId
          in: query
          required: true
          description: <p/>
          type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              CompleteMultipartUpload:
                description: <p/>
                type: object
                properties:
                  Parts:
                    $ref: '#/definitions/CompletedPartList'
                    description: <p/>
    get:
      operationId: ListParts
      description: Lists the parts that have been uploaded for a specific multipart upload.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadListParts.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPartsOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          type: string
          minLength: 1
        - name: max-parts
          in: query
          required: false
          description: Sets the maximum number of parts to return.
          type: integer
        - name: part-number-marker
          in: query
          required: false
          description: Specifies the part after which listing should begin. Only parts with higher part numbers will be listed.
          type: integer
        - name: uploadId
          in: query
          required: true
          description: Upload ID identifying the multipart upload whose parts are being listed.
          type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
        - name: MaxParts
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PartNumberMarker
          type: string
          in: query
          description: Pagination token
          required: false
  '/{Bucket}/{Key}#x-amz-copy-source':
    put:
      operationId: CopyObject
      description: Creates a copy of an object that is already stored in Amazon S3.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectCOPY.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CopyObjectOutput'
        '480':
          description: ObjectNotInActiveTierError
          schema:
            $ref: '#/definitions/ObjectNotInActiveTierError'
      parameters:
        - name: x-amz-acl
          in: header
          required: false
          description: The canned ACL to apply to the object.
          type: string
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Cache-Control
          in: header
          required: false
          description: Specifies caching behavior along the request/reply chain.
          type: string
        - name: Content-Disposition
          in: header
          required: false
          description: Specifies presentational information for the object.
          type: string
        - name: Content-Encoding
          in: header
          required: false
          description: Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.
          type: string
        - name: Content-Language
          in: header
          required: false
          description: The language the content is in.
          type: string
        - name: Content-Type
          in: header
          required: false
          description: A standard MIME type describing the format of the object data.
          type: string
        - name: x-amz-copy-source
          in: header
          required: true
          description: 'The name of the source bucket and key name of the source object, separated by a slash (/). Must be URL-encoded.'
          type: string
          pattern: \/.+\/.+
        - name: x-amz-copy-source-if-match
          in: header
          required: false
          description: Copies the object if its entity tag (ETag) matches the specified tag.
          type: string
        - name: x-amz-copy-source-if-modified-since
          in: header
          required: false
          description: Copies the object if it has been modified since the specified time.
          type: string
          format: date-time
        - name: x-amz-copy-source-if-none-match
          in: header
          required: false
          description: Copies the object if its entity tag (ETag) is different than the specified ETag.
          type: string
        - name: x-amz-copy-source-if-unmodified-since
          in: header
          required: false
          description: Copies the object if it hasn't been modified since the specified time.
          type: string
          format: date-time
        - name: Expires
          in: header
          required: false
          description: The date and time at which the object is no longer cacheable.
          type: string
          format: date-time
        - name: x-amz-grant-full-control
          in: header
          required: false
          description: 'Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.'
          type: string
        - name: x-amz-grant-read
          in: header
          required: false
          description: Allows grantee to read the object data and its metadata.
          type: string
        - name: x-amz-grant-read-acp
          in: header
          required: false
          description: Allows grantee to read the object ACL.
          type: string
        - name: x-amz-grant-write-acp
          in: header
          required: false
          description: Allows grantee to write the ACL for the applicable object.
          type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          type: string
          minLength: 1
        - name: x-amz-metadata-directive
          in: header
          required: false
          description: Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request.
          type: string
          enum:
            - COPY
            - REPLACE
        - name: x-amz-tagging-directive
          in: header
          required: false
          description: Specifies whether the object tag-set are copied from the source object or replaced with tag-set provided in the request.
          type: string
          enum:
            - COPY
            - REPLACE
        - name: x-amz-server-side-encryption
          in: header
          required: false
          description: 'The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).'
          type: string
          enum:
            - AES256
            - 'aws:kms'
        - name: x-amz-storage-class
          in: header
          required: false
          description: The type of storage to use for the object. Defaults to 'STANDARD'.
          type: string
          enum:
            - STANDARD
            - REDUCED_REDUNDANCY
            - STANDARD_IA
            - ONEZONE_IA
            - INTELLIGENT_TIERING
            - GLACIER
            - DEEP_ARCHIVE
        - name: x-amz-website-redirect-location
          in: header
          required: false
          description: 'If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.'
          type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'Specifies the algorithm to use to when encrypting the object (e.g., AES256).'
          type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side​-encryption​-customer-algorithm header.
          type: string
          format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.
          type: string
        - name: x-amz-server-side-encryption-aws-kms-key-id
          in: header
          required: false
          description: 'Specifies the AWS KMS key ID to use for object encryption. All GET and PUT requests for an object protected by AWS KMS will fail if not made via SSL or using SigV4. Documentation on configuring any of the officially supported AWS SDKs and CLI can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version'
          type: string
          format: password
        - name: x-amz-server-side-encryption-context
          in: header
          required: false
          description: Specifies the AWS KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.
          type: string
          format: password
        - name: x-amz-copy-source-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'Specifies the algorithm to use when decrypting the source object (e.g., AES256).'
          type: string
        - name: x-amz-copy-source-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.
          type: string
          format: password
        - name: x-amz-copy-source-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.
          type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
        - name: x-amz-tagging
          in: header
          required: false
          description: The tag-set for the object destination object this value must be used in conjunction with the TaggingDirective. The tag-set must be encoded as URL Query parameters
          type: string
        - name: x-amz-object-lock-mode
          in: header
          required: false
          description: The object lock mode that you want to apply to the copied object.
          type: string
          enum:
            - GOVERNANCE
            - COMPLIANCE
        - name: x-amz-object-lock-retain-until-date
          in: header
          required: false
          description: The date and time when you want the copied object's object lock to expire.
          type: string
          format: date-time
        - name: x-amz-object-lock-legal-hold
          in: header
          required: false
          description: Specifies whether you want to apply a Legal Hold to the copied object.
          type: string
          enum:
            - 'ON'
            - 'OFF'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              x-amz-meta-:
                description: A map of metadata to store with the object in S3.
                type: object
                additionalProperties:
                  $ref: '#/definitions/MetadataValue'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}':
    put:
      operationId: CreateBucket
      description: Creates a new bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUT.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateBucketOutput'
        '480':
          description: BucketAlreadyExists
          schema:
            $ref: '#/definitions/BucketAlreadyExists'
        '481':
          description: BucketAlreadyOwnedByYou
          schema:
            $ref: '#/definitions/BucketAlreadyOwnedByYou'
      parameters:
        - name: x-amz-acl
          in: header
          required: false
          description: The canned ACL to apply to the bucket.
          type: string
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: x-amz-grant-full-control
          in: header
          required: false
          description: 'Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.'
          type: string
        - name: x-amz-grant-read
          in: header
          required: false
          description: Allows grantee to list the objects in the bucket.
          type: string
        - name: x-amz-grant-read-acp
          in: header
          required: false
          description: Allows grantee to read the bucket ACL.
          type: string
        - name: x-amz-grant-write
          in: header
          required: false
          description: 'Allows grantee to create, overwrite, and delete any object in the bucket.'
          type: string
        - name: x-amz-grant-write-acp
          in: header
          required: false
          description: Allows grantee to write the ACL for the applicable bucket.
          type: string
        - name: x-amz-bucket-object-lock-enabled
          in: header
          required: false
          description: Specifies whether you want Amazon S3 object lock to be enabled for the new bucket.
          type: boolean
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              CreateBucketConfiguration:
                description: <p/>
                type: object
                properties:
                  LocationConstraint:
                    $ref: '#/definitions/BucketLocationConstraint'
                    description: 'Specifies the region where the bucket will be created. If you don''t specify a region, the bucket is created in US East (N. Virginia) Region (us-east-1).'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    delete:
      operationId: DeleteBucket
      description: Deletes the bucket. All objects (including all object versions and Delete Markers) in the bucket must be deleted before the bucket itself can be deleted.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETE.html'
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
    head:
      operationId: HeadBucket
      description: This operation is useful to determine if a bucket exists and you have permission to access it.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketHEAD.html'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchBucket
          schema:
            $ref: '#/definitions/NoSuchBucket'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
    get:
      operationId: ListObjects
      description: Returns some or all (up to 1000) of the objects in a bucket. You can use the request parameters as selection criteria to return a subset of the objects in a bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGET.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListObjectsOutput'
        '480':
          description: NoSuchBucket
          schema:
            $ref: '#/definitions/NoSuchBucket'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: delimiter
          in: query
          required: false
          description: A delimiter is a character you use to group keys.
          type: string
        - name: encoding-type
          in: query
          required: false
          description: 'Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.'
          type: string
          enum:
            - url
        - name: marker
          in: query
          required: false
          description: Specifies the key to start with when listing objects in a bucket.
          type: string
        - name: max-keys
          in: query
          required: false
          description: Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.
          type: integer
        - name: prefix
          in: query
          required: false
          description: Limits the response to keys that begin with the specified prefix.
          type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
        - name: MaxKeys
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
  '/{Bucket}/{Key}#uploads':
    post:
      operationId: CreateMultipartUpload
      description: '<p>Initiates a multipart upload and returns an upload ID.</p> <p> <b>Note:</b> After you initiate multipart upload and upload one or more parts, you must either complete or abort multipart upload in order to stop getting charged for storage of the uploaded parts. Only after you either complete or abort multipart upload, Amazon S3 frees up the parts storage and stops charging you for the parts storage.</p>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadInitiate.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateMultipartUploadOutput'
      parameters:
        - name: x-amz-acl
          in: header
          required: false
          description: The canned ACL to apply to the object.
          type: string
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Cache-Control
          in: header
          required: false
          description: Specifies caching behavior along the request/reply chain.
          type: string
        - name: Content-Disposition
          in: header
          required: false
          description: Specifies presentational information for the object.
          type: string
        - name: Content-Encoding
          in: header
          required: false
          description: Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.
          type: string
        - name: Content-Language
          in: header
          required: false
          description: The language the content is in.
          type: string
        - name: Content-Type
          in: header
          required: false
          description: A standard MIME type describing the format of the object data.
          type: string
        - name: Expires
          in: header
          required: false
          description: The date and time at which the object is no longer cacheable.
          type: string
          format: date-time
        - name: x-amz-grant-full-control
          in: header
          required: false
          description: 'Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.'
          type: string
        - name: x-amz-grant-read
          in: header
          required: false
          description: Allows grantee to read the object data and its metadata.
          type: string
        - name: x-amz-grant-read-acp
          in: header
          required: false
          description: Allows grantee to read the object ACL.
          type: string
        - name: x-amz-grant-write-acp
          in: header
          required: false
          description: Allows grantee to write the ACL for the applicable object.
          type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          type: string
          minLength: 1
        - name: x-amz-server-side-encryption
          in: header
          required: false
          description: 'The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).'
          type: string
          enum:
            - AES256
            - 'aws:kms'
        - name: x-amz-storage-class
          in: header
          required: false
          description: The type of storage to use for the object. Defaults to 'STANDARD'.
          type: string
          enum:
            - STANDARD
            - REDUCED_REDUNDANCY
            - STANDARD_IA
            - ONEZONE_IA
            - INTELLIGENT_TIERING
            - GLACIER
            - DEEP_ARCHIVE
        - name: x-amz-website-redirect-location
          in: header
          required: false
          description: 'If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.'
          type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'Specifies the algorithm to use to when encrypting the object (e.g., AES256).'
          type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side​-encryption​-customer-algorithm header.
          type: string
          format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.
          type: string
        - name: x-amz-server-side-encryption-aws-kms-key-id
          in: header
          required: false
          description: 'Specifies the AWS KMS key ID to use for object encryption. All GET and PUT requests for an object protected by AWS KMS will fail if not made via SSL or using SigV4. Documentation on configuring any of the officially supported AWS SDKs and CLI can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version'
          type: string
          format: password
        - name: x-amz-server-side-encryption-context
          in: header
          required: false
          description: Specifies the AWS KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.
          type: string
          format: password
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
        - name: x-amz-tagging
          in: header
          required: false
          description: The tag-set for the object. The tag-set must be encoded as URL Query parameters
          type: string
        - name: x-amz-object-lock-mode
          in: header
          required: false
          description: Specifies the object lock mode that you want to apply to the uploaded object.
          type: string
          enum:
            - GOVERNANCE
            - COMPLIANCE
        - name: x-amz-object-lock-retain-until-date
          in: header
          required: false
          description: Specifies the date and time when you want the object lock to expire.
          type: string
          format: date-time
        - name: x-amz-object-lock-legal-hold
          in: header
          required: false
          description: Specifies whether you want to apply a Legal Hold to the uploaded object.
          type: string
          enum:
            - 'ON'
            - 'OFF'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              x-amz-meta-:
                description: A map of metadata to store with the object in S3.
                type: object
                additionalProperties:
                  $ref: '#/definitions/MetadataValue'
        - name: uploads
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}#analytics&id':
    delete:
      operationId: DeleteBucketAnalyticsConfiguration
      description: '<p>Deletes an analytics configuration for the bucket (specified by the analytics configuration ID).</p> <p>To use this operation, you must have permissions to perform the s3:PutAnalyticsConfiguration action. The bucket owner has this permission by default. The bucket owner can grant this permission to others. </p>'
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket from which an analytics configuration is deleted.
          type: string
        - name: id
          in: query
          required: true
          description: The ID that identifies the analytics configuration.
          type: string
        - name: analytics
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    get:
      operationId: GetBucketAnalyticsConfiguration
      description: Gets an analytics configuration for the bucket (specified by the analytics configuration ID).
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketAnalyticsConfigurationOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket from which an analytics configuration is retrieved.
          type: string
        - name: id
          in: query
          required: true
          description: The ID that identifies the analytics configuration.
          type: string
        - name: analytics
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    put:
      operationId: PutBucketAnalyticsConfiguration
      description: Sets an analytics configuration for the bucket (specified by the analytics configuration ID).
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket to which an analytics configuration is stored.
          type: string
        - name: id
          in: query
          required: true
          description: The ID that identifies the analytics configuration.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - AnalyticsConfiguration
            properties:
              AnalyticsConfiguration:
                description: '<p> Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETAnalyticsConfig.html">GET Bucket analytics</a> in the <i>Amazon Simple Storage Service API Reference</i>. </p>'
                type: object
                properties:
                  Id:
                    $ref: '#/definitions/AnalyticsId'
                    description: The ID that identifies the analytics configuration.
                  Filter:
                    $ref: '#/definitions/AnalyticsFilter'
                    description: 'The filter used to describe a set of objects for analyses. A filter must have exactly one prefix, one tag, or one conjunction (AnalyticsAndOperator). If no filter is provided, all objects will be considered in any analysis.'
                  StorageClassAnalysis:
                    $ref: '#/definitions/StorageClassAnalysis'
                    description: ' Contains data related to access patterns to be collected and made available to analyze the tradeoffs between different storage classes. '
        - name: analytics
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}#cors':
    delete:
      operationId: DeleteBucketCors
      description: Deletes the CORS configuration information set for the bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEcors.html'
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: cors
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    get:
      operationId: GetBucketCors
      description: Returns the CORS configuration for the bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETcors.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketCorsOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: cors
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    put:
      operationId: PutBucketCors
      description: Sets the CORS configuration for a bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTcors.html'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - CORSConfiguration
            properties:
              CORSConfiguration:
                description: 'Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html">Enabling Cross-Origin Resource Sharing</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
                type: object
                properties:
                  CORSRules:
                    $ref: '#/definitions/CORSRules'
                    description: A set of allowed origins and methods.
        - name: cors
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}#encryption':
    delete:
      operationId: DeleteBucketEncryption
      description: Deletes the server-side encryption configuration from the bucket.
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the server-side encryption configuration to delete.
          type: string
        - name: encryption
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    get:
      operationId: GetBucketEncryption
      description: Returns the server-side encryption configuration of a bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketEncryptionOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket from which the server-side encryption configuration is retrieved.
          type: string
        - name: encryption
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    put:
      operationId: PutBucketEncryption
      description: 'Creates a new server-side encryption configuration (or replaces an existing one, if present).'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: 'Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS). For information about the Amazon S3 default encryption feature, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html">Amazon S3 Default Bucket Encryption</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
          type: string
        - name: Content-MD5
          in: header
          required: false
          description: The base64-encoded 128-bit MD5 digest of the server-side encryption configuration. This parameter is auto-populated when using the command from the CLI.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - ServerSideEncryptionConfiguration
            properties:
              ServerSideEncryptionConfiguration:
                description: Specifies the default server-side-encryption configuration.
                type: object
                properties:
                  Rules:
                    $ref: '#/definitions/ServerSideEncryptionRules'
                    description: Container for information about a particular server-side encryption configuration rule.
        - name: encryption
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}#inventory&id':
    delete:
      operationId: DeleteBucketInventoryConfiguration
      description: Deletes an inventory configuration (identified by the inventory ID) from the bucket.
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the inventory configuration to delete.
          type: string
        - name: id
          in: query
          required: true
          description: The ID used to identify the inventory configuration.
          type: string
        - name: inventory
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    get:
      operationId: GetBucketInventoryConfiguration
      description: Returns an inventory configuration (identified by the inventory ID) from the bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketInventoryConfigurationOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the inventory configuration to retrieve.
          type: string
        - name: id
          in: query
          required: true
          description: The ID used to identify the inventory configuration.
          type: string
        - name: inventory
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    put:
      operationId: PutBucketInventoryConfiguration
      description: Adds an inventory configuration (identified by the inventory ID) from the bucket.
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket where the inventory configuration will be stored.
          type: string
        - name: id
          in: query
          required: true
          description: The ID used to identify the inventory configuration.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - InventoryConfiguration
            properties:
              InventoryConfiguration:
                description: 'Specifies the inventory configuration for an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html">GET Bucket inventory</a> in the <i>Amazon Simple Storage Service API Reference</i>. '
                type: object
                properties:
                  Destination:
                    $ref: '#/definitions/InventoryDestination'
                    description: Contains information about where to publish the inventory results.
                  IsEnabled:
                    $ref: '#/definitions/IsEnabled'
                    description: 'Specifies whether the inventory is enabled or disabled. If set to <code>True</code>, an inventory list is generated. If set to <code>False</code>, no inventory list is generated.'
                  Filter:
                    $ref: '#/definitions/InventoryFilter'
                    description: Specifies an inventory filter. The inventory only includes objects that meet the filter's criteria.
                  Id:
                    $ref: '#/definitions/InventoryId'
                    description: The ID used to identify the inventory configuration.
                  IncludedObjectVersions:
                    $ref: '#/definitions/InventoryIncludedObjectVersions'
                    description: 'Object versions to include in the inventory list. If set to <code>All</code>, the list includes all the object versions, which adds the version-related fields <code>VersionId</code>, <code>IsLatest</code>, and <code>DeleteMarker</code> to the list. If set to <code>Current</code>, the list does not contain these version-related fields.'
                  OptionalFields:
                    $ref: '#/definitions/InventoryOptionalFields'
                    description: Contains the optional fields that are included in the inventory results.
                  Schedule:
                    $ref: '#/definitions/InventorySchedule'
                    description: Specifies the schedule for generating inventory results.
        - name: inventory
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}#lifecycle':
    delete:
      operationId: DeleteBucketLifecycle
      description: Deletes the lifecycle configuration from the bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETElifecycle.html'
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: lifecycle
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    get:
      operationId: GetBucketLifecycleConfiguration
      description: Returns the lifecycle configuration information set on the bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketLifecycleConfigurationOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: lifecycle
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    put:
      operationId: PutBucketLifecycleConfiguration
      description: 'Sets lifecycle configuration for your bucket. If a lifecycle configuration exists, it replaces it.'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - LifecycleConfiguration
            properties:
              LifecycleConfiguration:
                description: 'Specifies the lifecycle configuration for objects in an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html">Object Lifecycle Management</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
                type: object
                properties:
                  Rules:
                    $ref: '#/definitions/LifecycleRules'
                    description: A lifecycle rule for individual objects in an Amazon S3 bucket.
        - name: lifecycle
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}#metrics&id':
    delete:
      operationId: DeleteBucketMetricsConfiguration
      description: Deletes a metrics configuration (specified by the metrics configuration ID) from the bucket.
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the metrics configuration to delete.
          type: string
        - name: id
          in: query
          required: true
          description: The ID used to identify the metrics configuration.
          type: string
        - name: metrics
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    get:
      operationId: GetBucketMetricsConfiguration
      description: Gets a metrics configuration (specified by the metrics configuration ID) from the bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketMetricsConfigurationOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the metrics configuration to retrieve.
          type: string
        - name: id
          in: query
          required: true
          description: The ID used to identify the metrics configuration.
          type: string
        - name: metrics
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    put:
      operationId: PutBucketMetricsConfiguration
      description: Sets a metrics configuration (specified by the metrics configuration ID) for the bucket.
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket for which the metrics configuration is set.
          type: string
        - name: id
          in: query
          required: true
          description: The ID used to identify the metrics configuration.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - MetricsConfiguration
            properties:
              MetricsConfiguration:
                description: 'Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket. If you''re updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don''t include the elements you want to keep, they are erased. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html"> PUT Bucket metrics</a> in the <i>Amazon Simple Storage Service API Reference</i>.'
                type: object
                properties:
                  Id:
                    $ref: '#/definitions/MetricsId'
                    description: The ID used to identify the metrics configuration.
                  Filter:
                    $ref: '#/definitions/MetricsFilter'
                    description: 'Specifies a metrics configuration filter. The metrics configuration will only include objects that meet the filter''s criteria. A filter must be a prefix, a tag, or a conjunction (MetricsAndOperator).'
        - name: metrics
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}#policy':
    delete:
      operationId: DeleteBucketPolicy
      description: Deletes the policy from the bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEpolicy.html'
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: policy
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    get:
      operationId: GetBucketPolicy
      description: Returns the policy of a specified bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETpolicy.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketPolicyOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: policy
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    put:
      operationId: PutBucketPolicy
      description: Applies an Amazon S3 bucket policy to an Amazon S3 bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTpolicy.html'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          type: string
        - name: x-amz-confirm-remove-self-bucket-access
          in: header
          required: false
          description: Set this parameter to true to confirm that you want to remove your permissions to change this bucket policy in the future.
          type: boolean
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Policy
            properties:
              Policy:
                description: The bucket policy as a JSON document.
                type: string
        - name: policy
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}#replication':
    delete:
      operationId: DeleteBucketReplication
      description: ' Deletes the replication configuration from the bucket. For information about replication configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html">Cross-Region Replication (CRR)</a> in the <i>Amazon S3 Developer Guide</i>. '
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p> The bucket name. </p> <note> <p>It can take a while to propagate the deletion of a replication configuration to all Amazon S3 systems.</p> </note>
          type: string
        - name: replication
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    get:
      operationId: GetBucketReplication
      description: '<p>Returns the replication configuration of a bucket.</p> <note> <p> It can take a while to propagate the put or delete a replication configuration to all Amazon S3 systems. Therefore, a get request soon after put or delete can return a wrong result. </p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketReplicationOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: replication
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    put:
      operationId: PutBucketReplication
      description: ' Creates a replication configuration or replaces an existing one. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html">Cross-Region Replication (CRR)</a> in the <i>Amazon S3 Developer Guide</i>. '
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Content-MD5
          in: header
          required: false
          description: The base64-encoded 128-bit MD5 digest of the data. You must use this header as a message integrity check to verify that the request body was not corrupted in transit.
          type: string
        - name: x-amz-bucket-object-lock-token
          in: header
          required: false
          description: A token that allows Amazon S3 object lock to be enabled for an existing bucket.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - ReplicationConfiguration
            properties:
              ReplicationConfiguration:
                description: 'A container for replication rules. You can add up to 1,000 rules. The maximum size of a replication configuration is 2 MB.'
                type: object
                properties:
                  Role:
                    $ref: '#/definitions/Role'
                    description: 'The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that Amazon S3 assumes when replicating objects. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/crr-how-setup.html">How to Set Up Cross-Region Replication</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
                  Rules:
                    $ref: '#/definitions/ReplicationRules'
                    description: 'A container for one or more replication rules. A replication configuration must have at least one rule and can contain a maximum of 1,000 rules. '
        - name: replication
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}#tagging':
    delete:
      operationId: DeleteBucketTagging
      description: Deletes the tags from the bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEtagging.html'
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: tagging
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    get:
      operationId: GetBucketTagging
      description: Returns the tag set associated with the bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETtagging.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketTaggingOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: tagging
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    put:
      operationId: PutBucketTagging
      description: Sets the tags for a bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTtagging.html'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Tagging
            properties:
              Tagging:
                description: <p/>
                type: object
                properties:
                  TagSet:
                    $ref: '#/definitions/TagSet'
                    description: <p/>
        - name: tagging
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}#website':
    delete:
      operationId: DeleteBucketWebsite
      description: This operation removes the website configuration from the bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEwebsite.html'
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: website
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    get:
      operationId: GetBucketWebsite
      description: Returns the website configuration for a bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETwebsite.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketWebsiteOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: website
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    put:
      operationId: PutBucketWebsite
      description: Set the website configuration for a bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTwebsite.html'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - WebsiteConfiguration
            properties:
              WebsiteConfiguration:
                description: Specifies website configuration parameters for an Amazon S3 bucket.
                type: object
                properties:
                  ErrorDocument:
                    $ref: '#/definitions/ErrorDocument'
                    description: The name of the error document for the website.
                  IndexDocument:
                    $ref: '#/definitions/IndexDocument'
                    description: The name of the index document for the website.
                  RedirectAllRequestsTo:
                    $ref: '#/definitions/RedirectAllRequestsTo'
                    description: '<p>The redirect behavior for every request to this bucket''s website endpoint.</p> <important> <p>If you specify this property, you can''t specify any other property.</p> </important>'
                  RoutingRules:
                    $ref: '#/definitions/RoutingRules'
                    description: Rules that define when a redirect is applied and the redirect behavior.
        - name: website
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}/{Key}':
    delete:
      operationId: DeleteObject
      description: 'Removes the null version (if there is one) of an object and inserts a delete marker, which becomes the latest version of the object. If there isn''t a null version, Amazon S3 does not remove any objects.'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectDELETE.html'
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DeleteObjectOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          type: string
          minLength: 1
        - name: x-amz-mfa
          in: header
          required: false
          description: 'The concatenation of the authentication device''s serial number, a space, and the value that is displayed on your authentication device.'
          type: string
        - name: versionId
          in: query
          required: false
          description: VersionId used to reference a specific version of the object.
          type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
        - name: x-amz-bypass-governance-retention
          in: header
          required: false
          description: Indicates whether Amazon S3 object lock should bypass governance-mode restrictions to process this operation.
          type: boolean
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    get:
      operationId: GetObject
      description: Retrieves objects from Amazon S3.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGET.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetObjectOutput'
        '480':
          description: NoSuchKey
          schema:
            $ref: '#/definitions/NoSuchKey'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: If-Match
          in: header
          required: false
          description: 'Return the object only if its entity tag (ETag) is the same as the one specified, otherwise return a 412 (precondition failed).'
          type: string
        - name: If-Modified-Since
          in: header
          required: false
          description: 'Return the object only if it has been modified since the specified time, otherwise return a 304 (not modified).'
          type: string
          format: date-time
        - name: If-None-Match
          in: header
          required: false
          description: 'Return the object only if its entity tag (ETag) is different from the one specified, otherwise return a 304 (not modified).'
          type: string
        - name: If-Unmodified-Since
          in: header
          required: false
          description: 'Return the object only if it has not been modified since the specified time, otherwise return a 412 (precondition failed).'
          type: string
          format: date-time
        - name: Key
          in: path
          required: true
          description: <p/>
          type: string
          minLength: 1
        - name: Range
          in: header
          required: false
          description: 'Downloads the specified range bytes of an object. For more information about the HTTP Range header, go to http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.'
          type: string
        - name: response-cache-control
          in: query
          required: false
          description: Sets the Cache-Control header of the response.
          type: string
        - name: response-content-disposition
          in: query
          required: false
          description: Sets the Content-Disposition header of the response
          type: string
        - name: response-content-encoding
          in: query
          required: false
          description: Sets the Content-Encoding header of the response.
          type: string
        - name: response-content-language
          in: query
          required: false
          description: Sets the Content-Language header of the response.
          type: string
        - name: response-content-type
          in: query
          required: false
          description: Sets the Content-Type header of the response.
          type: string
        - name: response-expires
          in: query
          required: false
          description: Sets the Expires header of the response.
          type: string
          format: date-time
        - name: versionId
          in: query
          required: false
          description: VersionId used to reference a specific version of the object.
          type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'Specifies the algorithm to use to when encrypting the object (e.g., AES256).'
          type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side​-encryption​-customer-algorithm header.
          type: string
          format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.
          type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
        - name: partNumber
          in: query
          required: false
          description: 'Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a ''ranged'' GET request for the part specified. Useful for downloading just a part of an object.'
          type: integer
    head:
      operationId: HeadObject
      description: 'The HEAD operation retrieves metadata from an object without returning the object itself. This operation is useful if you''re only interested in an object''s metadata. To use HEAD, you must have READ access to the object.'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectHEAD.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/HeadObjectOutput'
        '480':
          description: NoSuchKey
          schema:
            $ref: '#/definitions/NoSuchKey'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: If-Match
          in: header
          required: false
          description: 'Return the object only if its entity tag (ETag) is the same as the one specified, otherwise return a 412 (precondition failed).'
          type: string
        - name: If-Modified-Since
          in: header
          required: false
          description: 'Return the object only if it has been modified since the specified time, otherwise return a 304 (not modified).'
          type: string
          format: date-time
        - name: If-None-Match
          in: header
          required: false
          description: 'Return the object only if its entity tag (ETag) is different from the one specified, otherwise return a 304 (not modified).'
          type: string
        - name: If-Unmodified-Since
          in: header
          required: false
          description: 'Return the object only if it has not been modified since the specified time, otherwise return a 412 (precondition failed).'
          type: string
          format: date-time
        - name: Key
          in: path
          required: true
          description: <p/>
          type: string
          minLength: 1
        - name: Range
          in: header
          required: false
          description: 'Downloads the specified range bytes of an object. For more information about the HTTP Range header, go to http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.'
          type: string
        - name: versionId
          in: query
          required: false
          description: VersionId used to reference a specific version of the object.
          type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'Specifies the algorithm to use to when encrypting the object (e.g., AES256).'
          type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side​-encryption​-customer-algorithm header.
          type: string
          format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.
          type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
        - name: partNumber
          in: query
          required: false
          description: 'Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a ''ranged'' HEAD request for the part specified. Useful querying about the size of the part and the number of parts in this object.'
          type: integer
    put:
      operationId: PutObject
      description: Adds an object to a bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectPUT.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutObjectOutput'
      parameters:
        - name: x-amz-acl
          in: header
          required: false
          description: The canned ACL to apply to the object.
          type: string
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
        - name: Bucket
          in: path
          required: true
          description: Name of the bucket to which the PUT operation was initiated.
          type: string
        - name: Cache-Control
          in: header
          required: false
          description: Specifies caching behavior along the request/reply chain.
          type: string
        - name: Content-Disposition
          in: header
          required: false
          description: Specifies presentational information for the object.
          type: string
        - name: Content-Encoding
          in: header
          required: false
          description: Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.
          type: string
        - name: Content-Language
          in: header
          required: false
          description: The language the content is in.
          type: string
        - name: Content-Length
          in: header
          required: false
          description: Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically.
          type: integer
        - name: Content-MD5
          in: header
          required: false
          description: The base64-encoded 128-bit MD5 digest of the part data. This parameter is auto-populated when using the command from the CLI. This parameted is required if object lock parameters are specified.
          type: string
        - name: Content-Type
          in: header
          required: false
          description: A standard MIME type describing the format of the object data.
          type: string
        - name: Expires
          in: header
          required: false
          description: The date and time at which the object is no longer cacheable.
          type: string
          format: date-time
        - name: x-amz-grant-full-control
          in: header
          required: false
          description: 'Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.'
          type: string
        - name: x-amz-grant-read
          in: header
          required: false
          description: Allows grantee to read the object data and its metadata.
          type: string
        - name: x-amz-grant-read-acp
          in: header
          required: false
          description: Allows grantee to read the object ACL.
          type: string
        - name: x-amz-grant-write-acp
          in: header
          required: false
          description: Allows grantee to write the ACL for the applicable object.
          type: string
        - name: Key
          in: path
          required: true
          description: Object key for which the PUT operation was initiated.
          type: string
          minLength: 1
        - name: x-amz-server-side-encryption
          in: header
          required: false
          description: 'The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).'
          type: string
          enum:
            - AES256
            - 'aws:kms'
        - name: x-amz-storage-class
          in: header
          required: false
          description: The type of storage to use for the object. Defaults to 'STANDARD'.
          type: string
          enum:
            - STANDARD
            - REDUCED_REDUNDANCY
            - STANDARD_IA
            - ONEZONE_IA
            - INTELLIGENT_TIERING
            - GLACIER
            - DEEP_ARCHIVE
        - name: x-amz-website-redirect-location
          in: header
          required: false
          description: 'If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.'
          type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'Specifies the algorithm to use to when encrypting the object (e.g., AES256).'
          type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side​-encryption​-customer-algorithm header.
          type: string
          format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.
          type: string
        - name: x-amz-server-side-encryption-aws-kms-key-id
          in: header
          required: false
          description: 'Specifies the AWS KMS key ID to use for object encryption. All GET and PUT requests for an object protected by AWS KMS will fail if not made via SSL or using SigV4. Documentation on configuring any of the officially supported AWS SDKs and CLI can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version'
          type: string
          format: password
        - name: x-amz-server-side-encryption-context
          in: header
          required: false
          description: Specifies the AWS KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.
          type: string
          format: password
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
        - name: x-amz-tagging
          in: header
          required: false
          description: 'The tag-set for the object. The tag-set must be encoded as URL Query parameters. (For example, "Key1=Value1")'
          type: string
        - name: x-amz-object-lock-mode
          in: header
          required: false
          description: The object lock mode that you want to apply to this object.
          type: string
          enum:
            - GOVERNANCE
            - COMPLIANCE
        - name: x-amz-object-lock-retain-until-date
          in: header
          required: false
          description: The date and time when you want this object's object lock to expire.
          type: string
          format: date-time
        - name: x-amz-object-lock-legal-hold
          in: header
          required: false
          description: The Legal Hold status that you want to apply to the specified object.
          type: string
          enum:
            - 'ON'
            - 'OFF'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              Body:
                description: Object data.
                type: string
              x-amz-meta-:
                description: A map of metadata to store with the object in S3.
                type: object
                additionalProperties:
                  $ref: '#/definitions/MetadataValue'
  '/{Bucket}/{Key}#tagging':
    delete:
      operationId: DeleteObjectTagging
      description: Removes the tag-set from an existing object.
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DeleteObjectTaggingOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          type: string
          minLength: 1
        - name: versionId
          in: query
          required: false
          description: The versionId of the object that the tag-set will be removed from.
          type: string
        - name: tagging
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    get:
      operationId: GetObjectTagging
      description: Returns the tag-set of an object.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetObjectTaggingOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          type: string
          minLength: 1
        - name: versionId
          in: query
          required: false
          description: <p/>
          type: string
        - name: tagging
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    put:
      operationId: PutObjectTagging
      description: Sets the supplied tag-set to an object that already exists in a bucket
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutObjectTaggingOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          type: string
          minLength: 1
        - name: versionId
          in: query
          required: false
          description: <p/>
          type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Tagging
            properties:
              Tagging:
                description: <p/>
                type: object
                properties:
                  TagSet:
                    $ref: '#/definitions/TagSet'
                    description: <p/>
        - name: tagging
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}#delete':
    post:
      operationId: DeleteObjects
      description: This operation enables you to delete multiple objects from a bucket using a single HTTP request. You may specify up to 1000 keys.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/multiobjectdeleteapi.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteObjectsOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: x-amz-mfa
          in: header
          required: false
          description: 'The concatenation of the authentication device''s serial number, a space, and the value that is displayed on your authentication device.'
          type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
        - name: x-amz-bypass-governance-retention
          in: header
          required: false
          description: Specifies whether you want to delete this object even if it has a Governance-type object lock in place. You must have sufficient permissions to perform this operation.
          type: boolean
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Delete
            properties:
              Delete:
                description: <p/>
                type: object
                properties:
                  Objects:
                    $ref: '#/definitions/ObjectIdentifierList'
                    description: <p/>
                  Quiet:
                    $ref: '#/definitions/Quiet'
                    description: 'Element to enable quiet mode for the request. When you add this element, you must set its value to true.'
        - name: delete
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}#publicAccessBlock':
    delete:
      operationId: DeletePublicAccessBlock
      description: Removes the <code>PublicAccessBlock</code> configuration from an Amazon S3 bucket.
      responses:
        '204':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: 'The Amazon S3 bucket whose <code>PublicAccessBlock</code> configuration you want to delete. '
          type: string
        - name: publicAccessBlock
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    get:
      operationId: GetPublicAccessBlock
      description: Retrieves the <code>PublicAccessBlock</code> configuration for an Amazon S3 bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPublicAccessBlockOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: 'The name of the Amazon S3 bucket whose <code>PublicAccessBlock</code> configuration you want to retrieve. '
          type: string
        - name: publicAccessBlock
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    put:
      operationId: PutPublicAccessBlock
      description: Creates or modifies the <code>PublicAccessBlock</code> configuration for an Amazon S3 bucket.
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the Amazon S3 bucket whose <code>PublicAccessBlock</code> configuration you want to set.
          type: string
        - name: Content-MD5
          in: header
          required: false
          description: 'The MD5 hash of the <code>PutPublicAccessBlock</code> request body. '
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - PublicAccessBlockConfiguration
            properties:
              PublicAccessBlockConfiguration:
                description: Specifies the Block Public Access configuration for an Amazon S3 bucket.
                type: object
                properties:
                  BlockPublicAcls:
                    $ref: '#/definitions/Setting'
                    description: '<p>Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.</p> </li> <li> <p>PUT Object calls fail if the request includes a public ACL.</p> </li> </ul> <p>Enabling this setting doesn''t affect existing policies or ACLs.</p>'
                  IgnorePublicAcls:
                    $ref: '#/definitions/Setting'
                    description: <p>Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket.</p> <p>Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p>
                  BlockPublicPolicy:
                    $ref: '#/definitions/Setting'
                    description: <p>Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Enabling this setting doesn't affect existing bucket policies.</p>
                  RestrictPublicBuckets:
                    $ref: '#/definitions/Setting'
                    description: '<p>Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to <code>TRUE</code> restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.</p> <p>Enabling this setting doesn''t affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.</p>'
        - name: publicAccessBlock
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}#accelerate':
    get:
      operationId: GetBucketAccelerateConfiguration
      description: Returns the accelerate configuration of a bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketAccelerateConfigurationOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: Name of the bucket for which the accelerate configuration is retrieved.
          type: string
        - name: accelerate
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      operationId: PutBucketAccelerateConfiguration
      description: Sets the accelerate configuration of an existing bucket.
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: Name of the bucket for which the accelerate configuration is set.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - AccelerateConfiguration
            properties:
              AccelerateConfiguration:
                description: 'Configures the transfer acceleration state for an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html">Amazon S3 Transfer Acceleration</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
                type: object
                properties:
                  Status:
                    $ref: '#/definitions/BucketAccelerateStatus'
                    description: Specifies the transfer acceleration status of the bucket.
        - name: accelerate
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}#acl':
    get:
      operationId: GetBucketAcl
      description: Gets the access control policy for the bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETacl.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketAclOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: acl
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      operationId: PutBucketAcl
      description: Sets the permissions on a bucket using access control lists (ACL).
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTacl.html'
      responses:
        '200':
          description: Success
      parameters:
        - name: x-amz-acl
          in: header
          required: false
          description: The canned ACL to apply to the bucket.
          type: string
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          type: string
        - name: x-amz-grant-full-control
          in: header
          required: false
          description: 'Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.'
          type: string
        - name: x-amz-grant-read
          in: header
          required: false
          description: Allows grantee to list the objects in the bucket.
          type: string
        - name: x-amz-grant-read-acp
          in: header
          required: false
          description: Allows grantee to read the bucket ACL.
          type: string
        - name: x-amz-grant-write
          in: header
          required: false
          description: 'Allows grantee to create, overwrite, and delete any object in the bucket.'
          type: string
        - name: x-amz-grant-write-acp
          in: header
          required: false
          description: Allows grantee to write the ACL for the applicable bucket.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              AccessControlPolicy:
                description: Contains the elements that set the ACL permissions for an object per grantee.
                type: object
                properties:
                  Grants:
                    $ref: '#/definitions/Grants'
                    description: A list of grants.
                  Owner:
                    $ref: '#/definitions/Owner'
                    description: Container for the bucket owner's display name and ID.
        - name: acl
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}#lifecycle&deprecated!':
    get:
      deprecated: true
      operationId: GetBucketLifecycle
      description: ' No longer used, see the GetBucketLifecycleConfiguration operation.'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlifecycle.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketLifecycleOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: lifecycle
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      deprecated: true
      operationId: PutBucketLifecycle
      description: ' No longer used, see the PutBucketLifecycleConfiguration operation.'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - LifecycleConfiguration
            properties:
              LifecycleConfiguration:
                description: <p/>
                type: object
                properties:
                  Rules:
                    $ref: '#/definitions/Rules'
                    description: <p/>
        - name: lifecycle
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}#location':
    get:
      operationId: GetBucketLocation
      description: Returns the region the bucket resides in.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlocation.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketLocationOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: location
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}#logging':
    get:
      operationId: GetBucketLogging
      description: 'Returns the logging status of a bucket and the permissions users have to view and modify that status. To use GET, you must be the bucket owner.'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlogging.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketLoggingOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: logging
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      operationId: PutBucketLogging
      description: 'Set the logging parameters for a bucket and to specify permissions for who can view and modify the logging parameters. To set the logging status of a bucket, you must be the bucket owner.'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTlogging.html'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - BucketLoggingStatus
            properties:
              BucketLoggingStatus:
                description: <p/>
                type: object
                properties:
                  LoggingEnabled:
                    $ref: '#/definitions/LoggingEnabled'
                    description: <p/>
        - name: logging
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}#notification':
    get:
      operationId: GetBucketNotificationConfiguration
      description: Returns the notification configuration of a bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/NotificationConfiguration'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: Name of the bucket to get the notification configuration for.
          type: string
        - name: notification
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      operationId: PutBucketNotificationConfiguration
      description: Enables notifications of specified events for a bucket.
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - NotificationConfiguration
            properties:
              NotificationConfiguration:
                description: 'A container for specifying the notification configuration of the bucket. If this element is empty, notifications are turned off for the bucket.'
                type: object
                properties:
                  TopicConfigurations:
                    $ref: '#/definitions/TopicConfigurationList'
                    description: The topic to which notifications are sent and the events for which notifications are generated.
                  QueueConfigurations:
                    $ref: '#/definitions/QueueConfigurationList'
                    description: The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.
                  LambdaFunctionConfigurations:
                    $ref: '#/definitions/LambdaFunctionConfigurationList'
                    description: Describes the AWS Lambda functions to invoke and the events for which to invoke them.
        - name: notification
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}#notification&deprecated!':
    get:
      deprecated: true
      operationId: GetBucketNotification
      description: ' No longer used, see the GetBucketNotificationConfiguration operation.'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETnotification.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/NotificationConfigurationDeprecated'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: Name of the bucket to get the notification configuration for.
          type: string
        - name: notification
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      deprecated: true
      operationId: PutBucketNotification
      description: ' No longer used, see the PutBucketNotificationConfiguration operation.'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTnotification.html'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - NotificationConfiguration
            properties:
              NotificationConfiguration:
                description: <p/>
                type: object
                example:
                  QueueConfiguration:
                    Event: 's3:ObjectCreated:Put'
                    Events:
                      - 's3:ObjectCreated:Put'
                    Id: MDQ2OGQ4NDEtOTBmNi00YTM4LTk0NzYtZDIwN2I3NWQ1NjIx
                    Queue: 'arn:aws:sqs:us-east-1:acct-id:S3ObjectCreatedEventQueue'
                  TopicConfiguration:
                    Event: 's3:ObjectCreated:Copy'
                    Events:
                      - 's3:ObjectCreated:Copy'
                    Id: YTVkMWEzZGUtNTY1NS00ZmE2LWJjYjktMmRlY2QwODFkNTJi
                    Topic: 'arn:aws:sns:us-east-1:acct-id:S3ObjectCreatedEventTopic'
                properties:
                  TopicConfiguration:
                    $ref: '#/definitions/TopicConfigurationDeprecated'
                    description: <p/>
                  QueueConfiguration:
                    $ref: '#/definitions/QueueConfigurationDeprecated'
                    description: <p/>
                  CloudFunctionConfiguration:
                    $ref: '#/definitions/CloudFunctionConfiguration'
                    description: <p/>
        - name: notification
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}#policyStatus':
    get:
      operationId: GetBucketPolicyStatus
      description: 'Retrieves the policy status for an Amazon S3 bucket, indicating whether the bucket is public.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketPolicyStatusOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the Amazon S3 bucket whose policy status you want to retrieve.
          type: string
        - name: policyStatus
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}#requestPayment':
    get:
      operationId: GetBucketRequestPayment
      description: Returns the request payment configuration of a bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTrequestPaymentGET.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketRequestPaymentOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: requestPayment
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      operationId: PutBucketRequestPayment
      description: 'Sets the request payment configuration for a bucket. By default, the bucket owner pays for downloads from the bucket. This configuration parameter enables the bucket owner (only) to specify that the person requesting the download will be charged for the download. Documentation on requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTrequestPaymentPUT.html'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - RequestPaymentConfiguration
            properties:
              RequestPaymentConfiguration:
                description: <p/>
                type: object
                properties:
                  Payer:
                    $ref: '#/definitions/Payer'
                    description: Specifies who pays for the download and request fees.
        - name: requestPayment
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}#versioning':
    get:
      operationId: GetBucketVersioning
      description: Returns the versioning state of a bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETversioningStatus.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketVersioningOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: versioning
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      operationId: PutBucketVersioning
      description: 'Sets the versioning state of an existing bucket. To set the versioning state, you must be the bucket owner.'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html'
      responses:
        '200':
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          type: string
        - name: x-amz-mfa
          in: header
          required: false
          description: 'The concatenation of the authentication device''s serial number, a space, and the value that is displayed on your authentication device.'
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - VersioningConfiguration
            properties:
              VersioningConfiguration:
                description: 'Describes the versioning state of an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html">PUT Bucket versioning</a> in the <i>Amazon Simple Storage Service API Reference</i>.'
                type: object
                properties:
                  MFADelete:
                    $ref: '#/definitions/MFADelete'
                    description: 'Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.'
                  Status:
                    $ref: '#/definitions/BucketVersioningStatus'
                    description: The versioning state of the bucket.
        - name: versioning
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}/{Key}#acl':
    get:
      operationId: GetObjectAcl
      description: Returns the access control list (ACL) of an object.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGETacl.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetObjectAclOutput'
        '480':
          description: NoSuchKey
          schema:
            $ref: '#/definitions/NoSuchKey'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          type: string
          minLength: 1
        - name: versionId
          in: query
          required: false
          description: VersionId used to reference a specific version of the object.
          type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
        - name: acl
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      operationId: PutObjectAcl
      description: uses the acl subresource to set the access control list (ACL) permissions for an object that already exists in a bucket
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectPUTacl.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutObjectAclOutput'
        '480':
          description: NoSuchKey
          schema:
            $ref: '#/definitions/NoSuchKey'
      parameters:
        - name: x-amz-acl
          in: header
          required: false
          description: The canned ACL to apply to the object.
          type: string
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          type: string
        - name: x-amz-grant-full-control
          in: header
          required: false
          description: 'Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.'
          type: string
        - name: x-amz-grant-read
          in: header
          required: false
          description: Allows grantee to list the objects in the bucket.
          type: string
        - name: x-amz-grant-read-acp
          in: header
          required: false
          description: Allows grantee to read the bucket ACL.
          type: string
        - name: x-amz-grant-write
          in: header
          required: false
          description: 'Allows grantee to create, overwrite, and delete any object in the bucket.'
          type: string
        - name: x-amz-grant-write-acp
          in: header
          required: false
          description: Allows grantee to write the ACL for the applicable bucket.
          type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          type: string
          minLength: 1
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
        - name: versionId
          in: query
          required: false
          description: VersionId used to reference a specific version of the object.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              AccessControlPolicy:
                description: Contains the elements that set the ACL permissions for an object per grantee.
                type: object
                properties:
                  Grants:
                    $ref: '#/definitions/Grants'
                    description: A list of grants.
                  Owner:
                    $ref: '#/definitions/Owner'
                    description: Container for the bucket owner's display name and ID.
        - name: acl
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}/{Key}#legal-hold':
    get:
      operationId: GetObjectLegalHold
      description: Gets an object's current Legal Hold status.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetObjectLegalHoldOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket containing the object whose Legal Hold status you want to retrieve.
          type: string
        - name: Key
          in: path
          required: true
          description: The key name for the object whose Legal Hold status you want to retrieve.
          type: string
          minLength: 1
        - name: versionId
          in: query
          required: false
          description: The version ID of the object whose Legal Hold status you want to retrieve.
          type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
        - name: legal-hold
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      operationId: PutObjectLegalHold
      description: Applies a Legal Hold configuration to the specified object.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutObjectLegalHoldOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket containing the object that you want to place a Legal Hold on.
          type: string
        - name: Key
          in: path
          required: true
          description: The key name for the object that you want to place a Legal Hold on.
          type: string
          minLength: 1
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
        - name: versionId
          in: query
          required: false
          description: The version ID of the object that you want to place a Legal Hold on.
          type: string
        - name: Content-MD5
          in: header
          required: false
          description: The MD5 hash for the request body.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              LegalHold:
                description: A Legal Hold configuration for an object.
                type: object
                properties:
                  Status:
                    $ref: '#/definitions/ObjectLockLegalHoldStatus'
                    description: Indicates whether the specified object has a Legal Hold in place.
        - name: legal-hold
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}#object-lock':
    get:
      operationId: GetObjectLockConfiguration
      description: Gets the object lock configuration for a bucket. The rule specified in the object lock configuration will be applied by default to every new object placed in the specified bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetObjectLockConfigurationOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket whose object lock configuration you want to retrieve.
          type: string
        - name: object-lock
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      operationId: PutObjectLockConfiguration
      description: Places an object lock configuration on the specified bucket. The rule specified in the object lock configuration will be applied by default to every new object placed in the specified bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutObjectLockConfigurationOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket whose object lock configuration you want to create or replace.
          type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
        - name: x-amz-bucket-object-lock-token
          in: header
          required: false
          description: A token to allow Amazon S3 object lock to be enabled for an existing bucket.
          type: string
        - name: Content-MD5
          in: header
          required: false
          description: The MD5 hash for the request body.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              ObjectLockConfiguration:
                description: The container element for object lock configuration parameters.
                type: object
                properties:
                  ObjectLockEnabled:
                    $ref: '#/definitions/ObjectLockEnabled'
                    description: Indicates whether this bucket has an object lock configuration enabled.
                  Rule:
                    $ref: '#/definitions/ObjectLockRule'
                    description: The object lock rule in place for the specified object.
        - name: object-lock
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}/{Key}#retention':
    get:
      operationId: GetObjectRetention
      description: Retrieves an object's retention settings.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetObjectRetentionOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket containing the object whose retention settings you want to retrieve.
          type: string
        - name: Key
          in: path
          required: true
          description: The key name for the object whose retention settings you want to retrieve.
          type: string
          minLength: 1
        - name: versionId
          in: query
          required: false
          description: The version ID for the object whose retention settings you want to retrieve.
          type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
        - name: retention
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      operationId: PutObjectRetention
      description: Places an Object Retention configuration on an object.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutObjectRetentionOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket that contains the object you want to apply this Object Retention configuration to.
          type: string
        - name: Key
          in: path
          required: true
          description: The key name for the object that you want to apply this Object Retention configuration to.
          type: string
          minLength: 1
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
        - name: versionId
          in: query
          required: false
          description: The version ID for the object that you want to apply this Object Retention configuration to.
          type: string
        - name: x-amz-bypass-governance-retention
          in: header
          required: false
          description: Indicates whether this operation should bypass Governance-mode restrictions.j
          type: boolean
        - name: Content-MD5
          in: header
          required: false
          description: The MD5 hash for the request body.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              Retention:
                description: A Retention configuration for an object.
                type: object
                properties:
                  Mode:
                    $ref: '#/definitions/ObjectLockRetentionMode'
                    description: Indicates the Retention mode for the specified object.
                  RetainUntilDate:
                    $ref: '#/definitions/Date'
                    description: The date on which this object lock retention expires.
        - name: retention
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
  '/{Bucket}/{Key}#torrent':
    get:
      operationId: GetObjectTorrent
      description: Return torrent files from a bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGETtorrent.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetObjectTorrentOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          type: string
          minLength: 1
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
        - name: torrent
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}#analytics':
    get:
      operationId: ListBucketAnalyticsConfigurations
      description: Lists the analytics configurations for the bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBucketAnalyticsConfigurationsOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket from which analytics configurations are retrieved.
          type: string
        - name: continuation-token
          in: query
          required: false
          description: The ContinuationToken that represents a placeholder from where this request should begin.
          type: string
        - name: analytics
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}#inventory':
    get:
      operationId: ListBucketInventoryConfigurations
      description: Returns a list of inventory configurations for the bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBucketInventoryConfigurationsOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the inventory configurations to retrieve.
          type: string
        - name: continuation-token
          in: query
          required: false
          description: The marker used to continue an inventory configuration listing that has been truncated. Use the NextContinuationToken from a previously truncated list response to continue the listing. The continuation token is an opaque value that Amazon S3 understands.
          type: string
        - name: inventory
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}#metrics':
    get:
      operationId: ListBucketMetricsConfigurations
      description: Lists the metrics configurations for the bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBucketMetricsConfigurationsOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the metrics configurations to retrieve.
          type: string
        - name: continuation-token
          in: query
          required: false
          description: The marker that is used to continue a metrics configuration listing that has been truncated. Use the NextContinuationToken from a previously truncated list response to continue the listing. The continuation token is an opaque value that Amazon S3 understands.
          type: string
        - name: metrics
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  /:
    get:
      operationId: ListBuckets
      description: Returns a list of all buckets owned by the authenticated sender of the request.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTServiceGET.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBucketsOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}#uploads':
    get:
      operationId: ListMultipartUploads
      description: This operation lists in-progress multipart uploads.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadListMPUpload.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListMultipartUploadsOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: delimiter
          in: query
          required: false
          description: Character you use to group keys.
          type: string
        - name: encoding-type
          in: query
          required: false
          description: 'Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.'
          type: string
          enum:
            - url
        - name: key-marker
          in: query
          required: false
          description: 'Together with upload-id-marker, this parameter specifies the multipart upload after which listing should begin.'
          type: string
        - name: max-uploads
          in: query
          required: false
          description: 'Sets the maximum number of multipart uploads, from 1 to 1,000, to return in the response body. 1,000 is the maximum number of uploads that can be returned in a response.'
          type: integer
        - name: prefix
          in: query
          required: false
          description: Lists in-progress uploads only for those keys that begin with the specified prefix.
          type: string
        - name: upload-id-marker
          in: query
          required: false
          description: 'Together with key-marker, specifies the multipart upload after which listing should begin. If key-marker is not specified, the upload-id-marker parameter is ignored.'
          type: string
        - name: MaxUploads
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: KeyMarker
          type: string
          in: query
          description: Pagination token
          required: false
        - name: UploadIdMarker
          type: string
          in: query
          description: Pagination token
          required: false
        - name: uploads
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}#versions':
    get:
      operationId: ListObjectVersions
      description: Returns metadata about all of the versions of objects in a bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETVersion.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListObjectVersionsOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: delimiter
          in: query
          required: false
          description: A delimiter is a character you use to group keys.
          type: string
        - name: encoding-type
          in: query
          required: false
          description: 'Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.'
          type: string
          enum:
            - url
        - name: key-marker
          in: query
          required: false
          description: Specifies the key to start with when listing objects in a bucket.
          type: string
        - name: max-keys
          in: query
          required: false
          description: Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.
          type: integer
        - name: prefix
          in: query
          required: false
          description: Limits the response to keys that begin with the specified prefix.
          type: string
        - name: version-id-marker
          in: query
          required: false
          description: Specifies the object version you want to start listing from.
          type: string
        - name: MaxKeys
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: KeyMarker
          type: string
          in: query
          description: Pagination token
          required: false
        - name: VersionIdMarker
          type: string
          in: query
          description: Pagination token
          required: false
        - name: versions
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}#list-type=2':
    get:
      operationId: ListObjectsV2
      description: 'Returns some or all (up to 1000) of the objects in a bucket. You can use the request parameters as selection criteria to return a subset of the objects in a bucket. Note: ListObjectsV2 is the revised List Objects API and we recommend you use this revised API for new application development.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListObjectsV2Output'
        '480':
          description: NoSuchBucket
          schema:
            $ref: '#/definitions/NoSuchBucket'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: Name of the bucket to list.
          type: string
        - name: delimiter
          in: query
          required: false
          description: A delimiter is a character you use to group keys.
          type: string
        - name: encoding-type
          in: query
          required: false
          description: 'Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.'
          type: string
          enum:
            - url
        - name: max-keys
          in: query
          required: false
          description: Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.
          type: integer
        - name: prefix
          in: query
          required: false
          description: Limits the response to keys that begin with the specified prefix.
          type: string
        - name: continuation-token
          in: query
          required: false
          description: ContinuationToken indicates Amazon S3 that the list is being continued on this bucket with a token. ContinuationToken is obfuscated and is not a real key
          type: string
        - name: fetch-owner
          in: query
          required: false
          description: 'The owner field is not present in listV2 by default, if you want to return owner field with each key in the result then set the fetch owner field to true'
          type: boolean
        - name: start-after
          in: query
          required: false
          description: StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this specified key. StartAfter can be any key in the bucket
          type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
        - name: MaxKeys
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: ContinuationToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: list-type
          in: query
          required: true
          type: string
          enum:
            - '2'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}/{Key}#restore':
    post:
      operationId: RestoreObject
      description: Restores an archived copy of an object back into Amazon S3
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectRestore.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RestoreObjectOutput'
        '480':
          description: ObjectAlreadyInActiveTierError
          schema:
            $ref: '#/definitions/ObjectAlreadyInActiveTierError'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          type: string
          minLength: 1
        - name: versionId
          in: query
          required: false
          description: <p/>
          type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              RestoreRequest:
                description: Container for restore job parameters.
                type: object
                properties:
                  Days:
                    $ref: '#/definitions/Days'
                    description: Lifetime of the active copy in days. Do not use with restores that specify OutputLocation.
                  GlacierJobParameters:
                    $ref: '#/definitions/GlacierJobParameters'
                    description: Glacier related parameters pertaining to this job. Do not use with restores that specify OutputLocation.
                  Type:
                    $ref: '#/definitions/RestoreRequestType'
                    description: Type of restore request.
                  Tier:
                    $ref: '#/definitions/Tier'
                    description: Glacier retrieval tier at which the restore will be processed.
                  Description:
                    $ref: '#/definitions/Description'
                    description: The optional description for the job.
                  SelectParameters:
                    $ref: '#/definitions/SelectParameters'
                    description: Describes the parameters for Select job types.
                  OutputLocation:
                    $ref: '#/definitions/OutputLocation'
                    description: Describes the location where the restore job's output is stored.
        - name: restore
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}/{Key}#select&select-type=2':
    post:
      operationId: SelectObjectContent
      description: 'This operation filters the contents of an Amazon S3 object based on a simple Structured Query Language (SQL) statement. In the request, along with the SQL expression, you must also specify a data serialization format (JSON or CSV) of the object. Amazon S3 uses this to parse object data into records, and returns only records that match the specified SQL expression. You must also specify the data serialization format for the response.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SelectObjectContentOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The S3 bucket.
          type: string
        - name: Key
          in: path
          required: true
          description: The object key.
          type: string
          minLength: 1
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'The SSE Algorithm used to encrypt the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html"> Server-Side Encryption (Using Customer-Provided Encryption Keys</a>. '
          type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: 'The SSE Customer Key. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html"> Server-Side Encryption (Using Customer-Provided Encryption Keys</a>. '
          type: string
          format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: 'The SSE Customer Key MD5. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html"> Server-Side Encryption (Using Customer-Provided Encryption Keys</a>. '
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Expression
              - ExpressionType
              - InputSerialization
              - OutputSerialization
            properties:
              Expression:
                description: The expression that is used to query the object.
                type: string
              ExpressionType:
                description: 'The type of the provided expression (for example., SQL).'
                type: string
                enum:
                  - SQL
              RequestProgress:
                description: <p/>
                type: object
                properties:
                  Enabled:
                    $ref: '#/definitions/EnableRequestProgress'
                    description: 'Specifies whether periodic QueryProgress frames should be sent. Valid values: TRUE, FALSE. Default value: FALSE.'
              InputSerialization:
                description: Describes the serialization format of the object.
                type: object
                properties:
                  CSV:
                    $ref: '#/definitions/CSVInput'
                    description: Describes the serialization of a CSV-encoded object.
                  CompressionType:
                    $ref: '#/definitions/CompressionType'
                    description: 'Specifies object''s compression format. Valid values: NONE, GZIP, BZIP2. Default Value: NONE.'
                  JSON:
                    $ref: '#/definitions/JSONInput'
                    description: Specifies JSON as object's input serialization format.
                  Parquet:
                    $ref: '#/definitions/ParquetInput'
                    description: Specifies Parquet as object's input serialization format.
              OutputSerialization:
                description: Describes how results of the Select job are serialized.
                type: object
                properties:
                  CSV:
                    $ref: '#/definitions/CSVOutput'
                    description: Describes the serialization of CSV-encoded Select results.
                  JSON:
                    $ref: '#/definitions/JSONOutput'
                    description: Specifies JSON as request's output serialization format.
        - name: select
          in: query
          required: true
          type: boolean
          allowEmptyValue: true
          enum:
            - true
        - name: select-type
          in: query
          required: true
          type: string
          enum:
            - '2'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}/{Key}#partNumber&uploadId':
    put:
      operationId: UploadPart
      description: '<p>Uploads a part in a multipart upload.</p> <p> <b>Note:</b> After you initiate multipart upload and upload one or more parts, you must either complete or abort multipart upload in order to stop getting charged for storage of the uploaded parts. Only after you either complete or abort multipart upload, Amazon S3 frees up the parts storage and stops charging you for the parts storage.</p>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadUploadPart.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UploadPartOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: Name of the bucket to which the multipart upload was initiated.
          type: string
        - name: Content-Length
          in: header
          required: false
          description: Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically.
          type: integer
        - name: Content-MD5
          in: header
          required: false
          description: The base64-encoded 128-bit MD5 digest of the part data. This parameter is auto-populated when using the command from the CLI. This parameted is required if object lock parameters are specified.
          type: string
        - name: Key
          in: path
          required: true
          description: Object key for which the multipart upload was initiated.
          type: string
          minLength: 1
        - name: partNumber
          in: query
          required: true
          description: 'Part number of part being uploaded. This is a positive integer between 1 and 10,000.'
          type: integer
        - name: uploadId
          in: query
          required: true
          description: Upload ID identifying the multipart upload whose part is being uploaded.
          type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'Specifies the algorithm to use to when encrypting the object (e.g., AES256).'
          type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side​-encryption​-customer-algorithm header. This must be the same encryption key specified in the initiate multipart upload request.
          type: string
          format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.
          type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              Body:
                description: Object data.
                type: string
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}/{Key}#x-amz-copy-source&partNumber&uploadId':
    put:
      operationId: UploadPartCopy
      description: Uploads a part by copying data from an existing object as data source.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadUploadPartCopy.html'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UploadPartCopyOutput'
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          type: string
        - name: x-amz-copy-source
          in: header
          required: true
          description: 'The name of the source bucket and key name of the source object, separated by a slash (/). Must be URL-encoded.'
          type: string
          pattern: \/.+\/.+
        - name: x-amz-copy-source-if-match
          in: header
          required: false
          description: Copies the object if its entity tag (ETag) matches the specified tag.
          type: string
        - name: x-amz-copy-source-if-modified-since
          in: header
          required: false
          description: Copies the object if it has been modified since the specified time.
          type: string
          format: date-time
        - name: x-amz-copy-source-if-none-match
          in: header
          required: false
          description: Copies the object if its entity tag (ETag) is different than the specified ETag.
          type: string
        - name: x-amz-copy-source-if-unmodified-since
          in: header
          required: false
          description: Copies the object if it hasn't been modified since the specified time.
          type: string
          format: date-time
        - name: x-amz-copy-source-range
          in: header
          required: false
          description: 'The range of bytes to copy from the source object. The range value must use the form bytes=first-last, where the first and last are the zero-based byte offsets to copy. For example, bytes=0-9 indicates that you want to copy the first ten bytes of the source. You can copy a range only if the source object is greater than 5 MB.'
          type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          type: string
          minLength: 1
        - name: partNumber
          in: query
          required: true
          description: 'Part number of part being copied. This is a positive integer between 1 and 10,000.'
          type: integer
        - name: uploadId
          in: query
          required: true
          description: Upload ID identifying the multipart upload whose part is being copied.
          type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'Specifies the algorithm to use to when encrypting the object (e.g., AES256).'
          type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side​-encryption​-customer-algorithm header. This must be the same encryption key specified in the initiate multipart upload request.
          type: string
          format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.
          type: string
        - name: x-amz-copy-source-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'Specifies the algorithm to use when decrypting the source object (e.g., AES256).'
          type: string
        - name: x-amz-copy-source-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.
          type: string
          format: password
        - name: x-amz-copy-source-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.
          type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          type: string
          enum:
            - requester
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
definitions:
  AbortMultipartUploadOutput:
    type: object
    example: {}
    properties: {}
  NoSuchUpload: {}
  CompleteMultipartUploadOutput:
    type: object
    example:
      Bucket: acexamplebucket
      ETag: '"4d9031c7644d8081c2829f4ea23c55f7-2"'
      Key: bigobject
      Location: 'https://examplebucket.s3.amazonaws.com/bigobject'
    properties:
      Location:
        $ref: '#/definitions/Location'
        description: <p/>
      Bucket:
        $ref: '#/definitions/BucketName'
        description: <p/>
      Key:
        $ref: '#/definitions/ObjectKey'
        description: <p/>
      ETag:
        $ref: '#/definitions/ETag'
        description: Entity tag of the object.
  CompletedPartList:
    type: array
    items:
      $ref: '#/definitions/CompletedPart'
    xml:
      wrapped: false
  CopyObjectOutput:
    type: object
    example:
      CopyObjectResult:
        ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
        LastModified: '2016-12-15T17:38:53.000Z'
    properties:
      CopyObjectResult:
        $ref: '#/definitions/CopyObjectResult'
        description: <p/>
  MetadataValue:
    type: string
  ObjectNotInActiveTierError: {}
  CreateBucketOutput:
    type: object
    example:
      Location: /examplebucket
    properties: {}
  BucketLocationConstraint:
    type: string
    enum:
      - EU
      - eu-west-1
      - us-west-1
      - us-west-2
      - ap-south-1
      - ap-southeast-1
      - ap-southeast-2
      - ap-northeast-1
      - sa-east-1
      - cn-north-1
      - eu-central-1
  BucketAlreadyExists: {}
  BucketAlreadyOwnedByYou: {}
  CreateMultipartUploadOutput:
    type: object
    example:
      Bucket: examplebucket
      Key: largeobject
      UploadId: ibZBv_75gd9r8lH_gqXatLdxMVpAlj6ZQjEs.OwyF3953YdwbcQnMA2BLGn8Lx12fQNICtMw5KyteFeHw.Sjng--
    properties:
      Bucket:
        $ref: '#/definitions/BucketName'
        description: Name of the bucket to which the multipart upload was initiated.
      Key:
        $ref: '#/definitions/ObjectKey'
        description: Object key for which the multipart upload was initiated.
      UploadId:
        $ref: '#/definitions/MultipartUploadId'
        description: ID for the initiated multipart upload.
  DeleteObjectOutput:
    type: object
    example: {}
    properties: {}
  DeleteObjectTaggingOutput:
    type: object
    example:
      VersionId: ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI
    properties: {}
  DeleteObjectsOutput:
    type: object
    example:
      Deleted:
        - DeleteMarker: 'true'
          DeleteMarkerVersionId: A._w1z6EFiCF5uhtQMDal9JDkID9tQ7F
          Key: objectkey1
        - DeleteMarker: 'true'
          DeleteMarkerVersionId: iOd_ORxhkKe_e8G8_oSGxt2PjsCZKlkt
          Key: objectkey2
    properties:
      Deleted:
        $ref: '#/definitions/DeletedObjects'
        description: <p/>
      Errors:
        $ref: '#/definitions/Errors'
        description: <p/>
  ObjectIdentifierList:
    type: array
    items:
      $ref: '#/definitions/ObjectIdentifier'
    xml:
      wrapped: false
  Quiet:
    type: boolean
  GetBucketAccelerateConfigurationOutput:
    type: object
    properties:
      Status:
        $ref: '#/definitions/BucketAccelerateStatus'
        description: The accelerate configuration of the bucket.
  GetBucketAclOutput:
    type: object
    properties:
      Owner:
        $ref: '#/definitions/Owner'
        description: <p/>
      Grants:
        $ref: '#/definitions/Grants'
        description: A list of grants.
  GetBucketAnalyticsConfigurationOutput:
    type: object
    properties:
      AnalyticsConfiguration:
        $ref: '#/definitions/AnalyticsConfiguration'
        description: The configuration and any analyses for the analytics filter.
  GetBucketCorsOutput:
    type: object
    example:
      CORSRules:
        - AllowedHeaders:
            - Authorization
          AllowedMethods:
            - GET
          AllowedOrigins:
            - '*'
          MaxAgeSeconds: 3000
    properties:
      CORSRules:
        $ref: '#/definitions/CORSRules'
        description: <p/>
  GetBucketEncryptionOutput:
    type: object
    properties:
      ServerSideEncryptionConfiguration:
        $ref: '#/definitions/ServerSideEncryptionConfiguration'
        description: <p/>
  GetBucketInventoryConfigurationOutput:
    type: object
    properties:
      InventoryConfiguration:
        $ref: '#/definitions/InventoryConfiguration'
        description: Specifies the inventory configuration.
  GetBucketLifecycleOutput:
    type: object
    example:
      Rules:
        - Expiration:
            Days: 1
          ID: delete logs
          Prefix: 123/
          Status: Enabled
    properties:
      Rules:
        $ref: '#/definitions/Rules'
        description: <p/>
  GetBucketLifecycleConfigurationOutput:
    type: object
    example:
      Rules:
        - ID: Rule for TaxDocs/
          Prefix: TaxDocs
          Status: Enabled
          Transitions:
            - Days: 365
              StorageClass: STANDARD_IA
    properties:
      Rules:
        $ref: '#/definitions/LifecycleRules'
        description: <p/>
  GetBucketLocationOutput:
    type: object
    example:
      LocationConstraint: us-west-2
    properties:
      LocationConstraint:
        $ref: '#/definitions/BucketLocationConstraint'
        description: <p/>
  GetBucketLoggingOutput:
    type: object
    properties:
      LoggingEnabled:
        $ref: '#/definitions/LoggingEnabled'
        description: <p/>
  GetBucketMetricsConfigurationOutput:
    type: object
    properties:
      MetricsConfiguration:
        $ref: '#/definitions/MetricsConfiguration'
        description: Specifies the metrics configuration.
  NotificationConfigurationDeprecated:
    type: object
    example:
      QueueConfiguration:
        Event: 's3:ObjectCreated:Put'
        Events:
          - 's3:ObjectCreated:Put'
        Id: MDQ2OGQ4NDEtOTBmNi00YTM4LTk0NzYtZDIwN2I3NWQ1NjIx
        Queue: 'arn:aws:sqs:us-east-1:acct-id:S3ObjectCreatedEventQueue'
      TopicConfiguration:
        Event: 's3:ObjectCreated:Copy'
        Events:
          - 's3:ObjectCreated:Copy'
        Id: YTVkMWEzZGUtNTY1NS00ZmE2LWJjYjktMmRlY2QwODFkNTJi
        Topic: 'arn:aws:sns:us-east-1:acct-id:S3ObjectCreatedEventTopic'
    properties:
      TopicConfiguration:
        $ref: '#/definitions/TopicConfigurationDeprecated'
        description: <p/>
      QueueConfiguration:
        $ref: '#/definitions/QueueConfigurationDeprecated'
        description: <p/>
      CloudFunctionConfiguration:
        $ref: '#/definitions/CloudFunctionConfiguration'
        description: <p/>
  NotificationConfiguration:
    type: object
    properties:
      TopicConfigurations:
        $ref: '#/definitions/TopicConfigurationList'
        description: The topic to which notifications are sent and the events for which notifications are generated.
      QueueConfigurations:
        $ref: '#/definitions/QueueConfigurationList'
        description: The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.
      LambdaFunctionConfigurations:
        $ref: '#/definitions/LambdaFunctionConfigurationList'
        description: Describes the AWS Lambda functions to invoke and the events for which to invoke them.
    description: 'A container for specifying the notification configuration of the bucket. If this element is empty, notifications are turned off for the bucket.'
  GetBucketPolicyOutput:
    type: object
    example:
      Policy: '{"Version":"2008-10-17","Id":"LogPolicy","Statement":[{"Sid":"Enables the log delivery group to publish logs to your bucket ","Effect":"Allow","Principal":{"AWS":"111122223333"},"Action":["s3:GetBucketAcl","s3:GetObjectAcl","s3:PutObject"],"Resource":["arn:aws:s3:::policytest1/*","arn:aws:s3:::policytest1"]}]}'
    properties:
      Policy:
        $ref: '#/definitions/Policy'
        description: The bucket policy as a JSON document.
  GetBucketPolicyStatusOutput:
    type: object
    properties:
      PolicyStatus:
        $ref: '#/definitions/PolicyStatus'
        description: The policy status for the specified bucket.
  GetBucketReplicationOutput:
    type: object
    example:
      ReplicationConfiguration:
        Role: 'arn:aws:iam::acct-id:role/example-role'
        Rules:
          - Destination:
              Bucket: 'arn:aws:s3:::destination-bucket'
            ID: MWIwNTkwZmItMTE3MS00ZTc3LWJkZDEtNzRmODQwYzc1OTQy
            Prefix: Tax
            Status: Enabled
    properties:
      ReplicationConfiguration:
        $ref: '#/definitions/ReplicationConfiguration'
        description: <p/>
  GetBucketRequestPaymentOutput:
    type: object
    example:
      Payer: BucketOwner
    properties:
      Payer:
        $ref: '#/definitions/Payer'
        description: Specifies who pays for the download and request fees.
  GetBucketTaggingOutput:
    type: object
    required:
      - TagSet
    example:
      TagSet:
        - Key: key1
          Value: value1
        - Key: key2
          Value: value2
    properties:
      TagSet:
        $ref: '#/definitions/TagSet'
        description: <p/>
  GetBucketVersioningOutput:
    type: object
    example:
      MFADelete: Disabled
      Status: Enabled
    properties:
      Status:
        $ref: '#/definitions/BucketVersioningStatus'
        description: The versioning state of the bucket.
      MFADelete:
        $ref: '#/definitions/MFADeleteStatus'
        description: 'Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.'
  GetBucketWebsiteOutput:
    type: object
    example:
      ErrorDocument:
        Key: error.html
      IndexDocument:
        Suffix: index.html
    properties:
      RedirectAllRequestsTo:
        $ref: '#/definitions/RedirectAllRequestsTo'
        description: <p/>
      IndexDocument:
        $ref: '#/definitions/IndexDocument'
        description: <p/>
      ErrorDocument:
        $ref: '#/definitions/ErrorDocument'
        description: <p/>
      RoutingRules:
        $ref: '#/definitions/RoutingRules'
        description: <p/>
  GetObjectOutput:
    type: object
    example:
      AcceptRanges: bytes
      ContentLength: '10'
      ContentRange: bytes 0-9/43
      ContentType: text/plain
      ETag: '"0d94420ffd0bc68cd3d152506b97a9cc"'
      LastModified: 'Thu, 09 Oct 2014 22:57:28 GMT'
      Metadata: {}
      VersionId: 'null'
    properties:
      Body:
        $ref: '#/definitions/Body'
        description: Object data.
      Metadata:
        $ref: '#/definitions/Metadata'
        description: A map of metadata to store with the object in S3.
  NoSuchKey: {}
  GetObjectAclOutput:
    type: object
    example:
      Grants:
        - Grantee:
            DisplayName: owner-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Type: CanonicalUser
          Permission: WRITE
        - Grantee:
            DisplayName: owner-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Type: CanonicalUser
          Permission: WRITE_ACP
        - Grantee:
            DisplayName: owner-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Type: CanonicalUser
          Permission: READ
        - Grantee:
            DisplayName: owner-display-name
            ID: 852b113eexamplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Type: CanonicalUser
          Permission: READ_ACP
      Owner:
        DisplayName: owner-display-name
        ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
    properties:
      Owner:
        $ref: '#/definitions/Owner'
        description: <p/>
      Grants:
        $ref: '#/definitions/Grants'
        description: A list of grants.
  GetObjectLegalHoldOutput:
    type: object
    properties:
      LegalHold:
        $ref: '#/definitions/ObjectLockLegalHold'
        description: The current Legal Hold status for the specified object.
  GetObjectLockConfigurationOutput:
    type: object
    properties:
      ObjectLockConfiguration:
        $ref: '#/definitions/ObjectLockConfiguration'
        description: The specified bucket's object lock configuration.
  GetObjectRetentionOutput:
    type: object
    properties:
      Retention:
        $ref: '#/definitions/ObjectLockRetention'
        description: The container element for an object's retention settings.
  GetObjectTaggingOutput:
    type: object
    required:
      - TagSet
    example:
      TagSet:
        - Key: Key4
          Value: Value4
        - Key: Key3
          Value: Value3
      VersionId: 'null'
    properties:
      TagSet:
        $ref: '#/definitions/TagSet'
        description: <p/>
  GetObjectTorrentOutput:
    type: object
    example: {}
    properties:
      Body:
        $ref: '#/definitions/Body'
        description: <p/>
  GetPublicAccessBlockOutput:
    type: object
    properties:
      PublicAccessBlockConfiguration:
        $ref: '#/definitions/PublicAccessBlockConfiguration'
        description: The <code>PublicAccessBlock</code> configuration currently in effect for this Amazon S3 bucket.
  NoSuchBucket: {}
  HeadObjectOutput:
    type: object
    example:
      AcceptRanges: bytes
      ContentLength: '3191'
      ContentType: image/jpeg
      ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
      LastModified: 'Thu, 15 Dec 2016 01:19:41 GMT'
      Metadata: {}
      VersionId: 'null'
    properties:
      Metadata:
        $ref: '#/definitions/Metadata'
        description: A map of metadata to store with the object in S3.
  ListBucketAnalyticsConfigurationsOutput:
    type: object
    properties:
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: Indicates whether the returned list of analytics configurations is complete. A value of true indicates that the list is not complete and the NextContinuationToken will be provided for a subsequent request.
      ContinuationToken:
        $ref: '#/definitions/Token'
        description: The ContinuationToken that represents where this request began.
      NextContinuationToken:
        $ref: '#/definitions/NextToken'
        description: 'NextContinuationToken is sent when isTruncated is true, which indicates that there are more analytics configurations to list. The next request must include this NextContinuationToken. The token is obfuscated and is not a usable value.'
      AnalyticsConfigurationList:
        $ref: '#/definitions/AnalyticsConfigurationList'
        description: The list of analytics configurations for a bucket.
  ListBucketInventoryConfigurationsOutput:
    type: object
    properties:
      ContinuationToken:
        $ref: '#/definitions/Token'
        description: 'If sent in the request, the marker that is used as a starting point for this inventory configuration list response.'
      InventoryConfigurationList:
        $ref: '#/definitions/InventoryConfigurationList'
        description: The list of inventory configurations for a bucket.
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: Indicates whether the returned list of inventory configurations is truncated in this response. A value of true indicates that the list is truncated.
      NextContinuationToken:
        $ref: '#/definitions/NextToken'
        description: The marker used to continue this inventory configuration listing. Use the NextContinuationToken from this response to continue the listing in a subsequent request. The continuation token is an opaque value that Amazon S3 understands.
  ListBucketMetricsConfigurationsOutput:
    type: object
    properties:
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: Indicates whether the returned list of metrics configurations is complete. A value of true indicates that the list is not complete and the NextContinuationToken will be provided for a subsequent request.
      ContinuationToken:
        $ref: '#/definitions/Token'
        description: The marker that is used as a starting point for this metrics configuration list response. This value is present if it was sent in the request.
      NextContinuationToken:
        $ref: '#/definitions/NextToken'
        description: The marker used to continue a metrics configuration listing that has been truncated. Use the NextContinuationToken from a previously truncated list response to continue the listing. The continuation token is an opaque value that Amazon S3 understands.
      MetricsConfigurationList:
        $ref: '#/definitions/MetricsConfigurationList'
        description: The list of metrics configurations for a bucket.
  ListBucketsOutput:
    type: object
    example:
      Buckets:
        - CreationDate: '2012-02-15T21: 03: 02.000Z'
          Name: examplebucket
        - CreationDate: '2011-07-24T19: 33: 50.000Z'
          Name: examplebucket2
        - CreationDate: '2010-12-17T00: 56: 49.000Z'
          Name: examplebucket3
      Owner:
        DisplayName: own-display-name
        ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31
    properties:
      Buckets:
        $ref: '#/definitions/Buckets'
        description: <p/>
      Owner:
        $ref: '#/definitions/Owner'
        description: <p/>
  ListMultipartUploadsOutput:
    type: object
    example:
      Uploads:
        - Initiated: '2014-05-01T05:40:58.000Z'
          Initiator:
            DisplayName: display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Key: JavaFile
          Owner:
            DisplayName: display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          StorageClass: STANDARD
          UploadId: examplelUa.CInXklLQtSMJITdUnoZ1Y5GACB5UckOtspm5zbDMCkPF_qkfZzMiFZ6dksmcnqxJyIBvQMG9X9Q--
        - Initiated: '2014-05-01T05:41:27.000Z'
          Initiator:
            DisplayName: display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Key: JavaFile
          Owner:
            DisplayName: display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          StorageClass: STANDARD
          UploadId: examplelo91lv1iwvWpvCiJWugw2xXLPAD7Z8cJyX9.WiIRgNrdG6Ldsn.9FtS63TCl1Uf5faTB.1U5Ckcbmdw--
    properties:
      Bucket:
        $ref: '#/definitions/BucketName'
        description: Name of the bucket to which the multipart upload was initiated.
      KeyMarker:
        $ref: '#/definitions/KeyMarker'
        description: The key at or after which the listing began.
      UploadIdMarker:
        $ref: '#/definitions/UploadIdMarker'
        description: Upload ID after which listing began.
      NextKeyMarker:
        $ref: '#/definitions/NextKeyMarker'
        description: 'When a list is truncated, this element specifies the value that should be used for the key-marker request parameter in a subsequent request.'
      Prefix:
        $ref: '#/definitions/Prefix'
        description: 'When a prefix is provided in the request, this field contains the specified prefix. The result contains only keys starting with the specified prefix.'
      Delimiter:
        $ref: '#/definitions/Delimiter'
        description: <p/>
      NextUploadIdMarker:
        $ref: '#/definitions/NextUploadIdMarker'
        description: 'When a list is truncated, this element specifies the value that should be used for the upload-id-marker request parameter in a subsequent request.'
      MaxUploads:
        $ref: '#/definitions/MaxUploads'
        description: Maximum number of multipart uploads that could have been included in the response.
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: Indicates whether the returned list of multipart uploads is truncated. A value of true indicates that the list was truncated. The list can be truncated if the number of multipart uploads exceeds the limit allowed or specified by max uploads.
      Uploads:
        $ref: '#/definitions/MultipartUploadList'
        description: <p/>
      CommonPrefixes:
        $ref: '#/definitions/CommonPrefixList'
        description: <p/>
      EncodingType:
        $ref: '#/definitions/EncodingType'
        description: Encoding type used by Amazon S3 to encode object keys in the response.
  ListObjectVersionsOutput:
    type: object
    example:
      Versions:
        - ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
          IsLatest: true
          Key: HappyFace.jpg
          LastModified: '2016-12-15T01:19:41.000Z'
          Owner:
            DisplayName: owner-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Size: 3191
          StorageClass: STANDARD
          VersionId: 'null'
        - ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
          IsLatest: false
          Key: HappyFace.jpg
          LastModified: '2016-12-13T00:58:26.000Z'
          Owner:
            DisplayName: owner-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Size: 3191
          StorageClass: STANDARD
          VersionId: PHtexPGjH2y.zBgT8LmB7wwLI2mpbz.k
    properties:
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: 'A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria. If your results were truncated, you can make a follow-up paginated request using the NextKeyMarker and NextVersionIdMarker response parameters as a starting place in another request to return the rest of the results.'
      KeyMarker:
        $ref: '#/definitions/KeyMarker'
        description: Marks the last Key returned in a truncated response.
      VersionIdMarker:
        $ref: '#/definitions/VersionIdMarker'
        description: <p/>
      NextKeyMarker:
        $ref: '#/definitions/NextKeyMarker'
        description: Use this value for the key marker request parameter in a subsequent request.
      NextVersionIdMarker:
        $ref: '#/definitions/NextVersionIdMarker'
        description: Use this value for the next version id marker parameter in a subsequent request.
      Versions:
        $ref: '#/definitions/ObjectVersionList'
        description: <p/>
      DeleteMarkers:
        $ref: '#/definitions/DeleteMarkers'
        description: <p/>
      Name:
        $ref: '#/definitions/BucketName'
        description: <p/>
      Prefix:
        $ref: '#/definitions/Prefix'
        description: <p/>
      Delimiter:
        $ref: '#/definitions/Delimiter'
        description: <p/>
      MaxKeys:
        $ref: '#/definitions/MaxKeys'
        description: <p/>
      CommonPrefixes:
        $ref: '#/definitions/CommonPrefixList'
        description: <p/>
      EncodingType:
        $ref: '#/definitions/EncodingType'
        description: Encoding type used by Amazon S3 to encode object keys in the response.
  ListObjectsOutput:
    type: object
    example:
      Contents:
        - ETag: '"70ee1738b6b21e2c8a43f3a5ab0eee71"'
          Key: example1.jpg
          LastModified: '2014-11-21T19:40:05.000Z'
          Owner:
            DisplayName: myname
            ID: 12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Size: 11
          StorageClass: STANDARD
        - ETag: '"9c8af9a76df052144598c115ef33e511"'
          Key: example2.jpg
          LastModified: '2013-11-15T01:10:49.000Z'
          Owner:
            DisplayName: myname
            ID: 12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Size: 713193
          StorageClass: STANDARD
      NextMarker: eyJNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyfQ==
    properties:
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria.
      Marker:
        $ref: '#/definitions/Marker'
        description: <p/>
      NextMarker:
        $ref: '#/definitions/NextMarker'
        description: 'When response is truncated (the IsTruncated element value in the response is true), you can use the key name in this field as marker in the subsequent request to get next set of objects. Amazon S3 lists objects in alphabetical order Note: This element is returned only if you have delimiter request parameter specified. If response does not include the NextMaker and it is truncated, you can use the value of the last Key in the response as the marker in the subsequent request to get the next set of object keys.'
      Contents:
        $ref: '#/definitions/ObjectList'
        description: <p/>
      Name:
        $ref: '#/definitions/BucketName'
        description: <p/>
      Prefix:
        $ref: '#/definitions/Prefix'
        description: <p/>
      Delimiter:
        $ref: '#/definitions/Delimiter'
        description: <p/>
      MaxKeys:
        $ref: '#/definitions/MaxKeys'
        description: <p/>
      CommonPrefixes:
        $ref: '#/definitions/CommonPrefixList'
        description: <p/>
      EncodingType:
        $ref: '#/definitions/EncodingType'
        description: Encoding type used by Amazon S3 to encode object keys in the response.
  ListObjectsV2Output:
    type: object
    example:
      Contents:
        - ETag: '"70ee1738b6b21e2c8a43f3a5ab0eee71"'
          Key: happyface.jpg
          LastModified: '2014-11-21T19:40:05.000Z'
          Size: 11
          StorageClass: STANDARD
        - ETag: '"becf17f89c30367a9a44495d62ed521a-1"'
          Key: test.jpg
          LastModified: '2014-05-02T04:51:50.000Z'
          Size: 4192256
          StorageClass: STANDARD
      IsTruncated: true
      KeyCount: '2'
      MaxKeys: '2'
      Name: examplebucket
      NextContinuationToken: 1w41l63U0xa8q7smH50vCxyTQqdxo69O3EmK28Bi5PcROI4wI/EyIJg==
      Prefix: ''
    properties:
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria.
      Contents:
        $ref: '#/definitions/ObjectList'
        description: Metadata about each object returned.
      Name:
        $ref: '#/definitions/BucketName'
        description: Name of the bucket to list.
      Prefix:
        $ref: '#/definitions/Prefix'
        description: Limits the response to keys that begin with the specified prefix.
      Delimiter:
        $ref: '#/definitions/Delimiter'
        description: A delimiter is a character you use to group keys.
      MaxKeys:
        $ref: '#/definitions/MaxKeys'
        description: Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.
      CommonPrefixes:
        $ref: '#/definitions/CommonPrefixList'
        description: CommonPrefixes contains all (if there are any) keys between Prefix and the next occurrence of the string specified by delimiter
      EncodingType:
        $ref: '#/definitions/EncodingType'
        description: Encoding type used by Amazon S3 to encode object keys in the response.
      KeyCount:
        $ref: '#/definitions/KeyCount'
        description: 'KeyCount is the number of keys returned with this request. KeyCount will always be less than equals to MaxKeys field. Say you ask for 50 keys, your result will include less than equals 50 keys '
      ContinuationToken:
        $ref: '#/definitions/Token'
        description: ContinuationToken indicates Amazon S3 that the list is being continued on this bucket with a token. ContinuationToken is obfuscated and is not a real key
      NextContinuationToken:
        $ref: '#/definitions/NextToken'
        description: NextContinuationToken is sent when isTruncated is true which means there are more keys in the bucket that can be listed. The next list requests to Amazon S3 can be continued with this NextContinuationToken. NextContinuationToken is obfuscated and is not a real key
      StartAfter:
        $ref: '#/definitions/StartAfter'
        description: StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this specified key. StartAfter can be any key in the bucket
  ListPartsOutput:
    type: object
    example:
      Initiator:
        DisplayName: owner-display-name
        ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
      Owner:
        DisplayName: owner-display-name
        ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
      Parts:
        - ETag: '"d8c2eafd90c266e19ab9dcacc479f8af"'
          LastModified: '2016-12-16T00:11:42.000Z'
          PartNumber: '1'
          Size: 26246026
        - ETag: '"d8c2eafd90c266e19ab9dcacc479f8af"'
          LastModified: '2016-12-16T00:15:01.000Z'
          PartNumber: '2'
          Size: 26246026
      StorageClass: STANDARD
    properties:
      Bucket:
        $ref: '#/definitions/BucketName'
        description: Name of the bucket to which the multipart upload was initiated.
      Key:
        $ref: '#/definitions/ObjectKey'
        description: Object key for which the multipart upload was initiated.
      UploadId:
        $ref: '#/definitions/MultipartUploadId'
        description: Upload ID identifying the multipart upload whose parts are being listed.
      PartNumberMarker:
        $ref: '#/definitions/PartNumberMarker'
        description: Part number after which listing begins.
      NextPartNumberMarker:
        $ref: '#/definitions/NextPartNumberMarker'
        description: 'When a list is truncated, this element specifies the last part in the list, as well as the value to use for the part-number-marker request parameter in a subsequent request.'
      MaxParts:
        $ref: '#/definitions/MaxParts'
        description: Maximum number of parts that were allowed in the response.
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: Indicates whether the returned list of parts is truncated.
      Parts:
        $ref: '#/definitions/Parts'
        description: <p/>
      Initiator:
        $ref: '#/definitions/Initiator'
        description: Identifies who initiated the multipart upload.
      Owner:
        $ref: '#/definitions/Owner'
        description: <p/>
      StorageClass:
        $ref: '#/definitions/StorageClass'
        description: The class of storage used to store the object.
  BucketAccelerateStatus:
    type: string
    enum:
      - Enabled
      - Suspended
  Grants:
    type: array
    items:
      $ref: '#/definitions/Grant'
  Owner:
    type: object
    properties:
      DisplayName:
        $ref: '#/definitions/DisplayName'
        description: <p/>
      ID:
        $ref: '#/definitions/ID'
        description: <p/>
    description: <p/>
  AnalyticsId:
    type: string
  AnalyticsFilter:
    type: object
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: The prefix to use when evaluating an analytics filter.
      Tag:
        $ref: '#/definitions/Tag'
        description: The tag to use when evaluating an analytics filter.
      And:
        $ref: '#/definitions/AnalyticsAndOperator'
        description: 'A conjunction (logical AND) of predicates, which is used in evaluating an analytics filter. The operator must have at least two predicates.'
    description: <p/>
  StorageClassAnalysis:
    type: object
    properties:
      DataExport:
        $ref: '#/definitions/StorageClassAnalysisDataExport'
        description: Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported.
    description: Specifies data related to access patterns to be collected and made available to analyze the tradeoffs between different storage classes for an Amazon S3 bucket.
  CORSRules:
    type: array
    items:
      $ref: '#/definitions/CORSRule'
    xml:
      wrapped: false
  ServerSideEncryptionRules:
    type: array
    items:
      $ref: '#/definitions/ServerSideEncryptionRule'
    xml:
      wrapped: false
  InventoryDestination:
    type: object
    required:
      - S3BucketDestination
    properties:
      S3BucketDestination:
        $ref: '#/definitions/InventoryS3BucketDestination'
        description: 'Contains the bucket name, file format, bucket owner (optional), and prefix (optional) where inventory results are published.'
    description: <p/>
  IsEnabled:
    type: boolean
  InventoryFilter:
    type: object
    required:
      - Prefix
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: The prefix that an object must have to be included in the inventory results.
    description: <p/>
  InventoryId:
    type: string
  InventoryIncludedObjectVersions:
    type: string
    enum:
      - All
      - Current
  InventoryOptionalFields:
    type: array
    items:
      $ref: '#/definitions/InventoryOptionalField'
  InventorySchedule:
    type: object
    required:
      - Frequency
    properties:
      Frequency:
        $ref: '#/definitions/InventoryFrequency'
        description: Specifies how frequently inventory results are produced.
    description: <p/>
  Rules:
    type: array
    items:
      $ref: '#/definitions/Rule'
    xml:
      wrapped: false
  LifecycleRules:
    type: array
    items:
      $ref: '#/definitions/LifecycleRule'
    xml:
      wrapped: false
  LoggingEnabled:
    type: object
    required:
      - TargetBucket
      - TargetPrefix
    properties:
      TargetBucket:
        $ref: '#/definitions/TargetBucket'
        description: 'Specifies the bucket where you want Amazon S3 to store server access logs. You can have your logs delivered to any bucket that you own, including the same bucket that is being logged. You can also configure multiple buckets to deliver their logs to the same target bucket. In this case you should choose a different TargetPrefix for each source bucket so that the delivered log files can be distinguished by key.'
      TargetGrants:
        $ref: '#/definitions/TargetGrants'
        description: <p/>
      TargetPrefix:
        $ref: '#/definitions/TargetPrefix'
        description: 'A prefix for all log object keys. If you store log files from multiple Amazon S3 buckets in a single bucket, you can use a prefix to distinguish which log files came from which bucket.'
    description: 'Describes where logs are stored and the prefix that Amazon S3 assigns to all log object keys for a bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html">PUT Bucket logging</a> in the <i>Amazon Simple Storage Service API Reference</i>.'
  MetricsId:
    type: string
  MetricsFilter:
    type: object
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: The prefix used when evaluating a metrics filter.
      Tag:
        $ref: '#/definitions/Tag'
        description: The tag used when evaluating a metrics filter.
      And:
        $ref: '#/definitions/MetricsAndOperator'
        description: 'A conjunction (logical AND) of predicates, which is used in evaluating a metrics filter. The operator must have at least two predicates, and an object must match all of the predicates in order for the filter to apply.'
    description: <p/>
  TopicConfigurationDeprecated:
    type: object
    properties:
      Id:
        $ref: '#/definitions/NotificationId'
      Events:
        $ref: '#/definitions/EventList'
        description: <p/>
      Event:
        $ref: '#/definitions/Event'
        description: Bucket event for which to send notifications.
      Topic:
        $ref: '#/definitions/TopicArn'
        description: Amazon SNS topic to which Amazon S3 will publish a message to report the specified events for the bucket.
    description: <p/>
  QueueConfigurationDeprecated:
    type: object
    properties:
      Id:
        $ref: '#/definitions/NotificationId'
      Event:
        $ref: '#/definitions/Event'
      Events:
        $ref: '#/definitions/EventList'
        description: <p/>
      Queue:
        $ref: '#/definitions/QueueArn'
        description: <p/>
    description: <p/>
  CloudFunctionConfiguration:
    type: object
    properties:
      Id:
        $ref: '#/definitions/NotificationId'
      Event:
        $ref: '#/definitions/Event'
      Events:
        $ref: '#/definitions/EventList'
        description: <p/>
      CloudFunction:
        $ref: '#/definitions/CloudFunction'
        description: <p/>
      InvocationRole:
        $ref: '#/definitions/CloudFunctionInvocationRole'
        description: <p/>
    description: <p/>
  TopicConfigurationList:
    type: array
    items:
      $ref: '#/definitions/TopicConfiguration'
    xml:
      wrapped: false
  QueueConfigurationList:
    type: array
    items:
      $ref: '#/definitions/QueueConfiguration'
    xml:
      wrapped: false
  LambdaFunctionConfigurationList:
    type: array
    items:
      $ref: '#/definitions/LambdaFunctionConfiguration'
    xml:
      wrapped: false
  Role:
    type: string
  ReplicationRules:
    type: array
    items:
      $ref: '#/definitions/ReplicationRule'
    xml:
      wrapped: false
  Payer:
    type: string
    enum:
      - Requester
      - BucketOwner
  TagSet:
    type: array
    items:
      $ref: '#/definitions/Tag'
  MFADelete:
    type: string
    enum:
      - Enabled
      - Disabled
  BucketVersioningStatus:
    type: string
    enum:
      - Enabled
      - Suspended
  ErrorDocument:
    type: object
    required:
      - Key
    properties:
      Key:
        $ref: '#/definitions/ObjectKey'
        description: The object key name to use when a 4XX class error occurs.
    description: <p/>
  IndexDocument:
    type: object
    required:
      - Suffix
    properties:
      Suffix:
        $ref: '#/definitions/Suffix'
        description: A suffix that is appended to a request that is for a directory on the website endpoint (e.g. if the suffix is index.html and you make a request to samplebucket/images/ the data that is returned will be for the object with the key name images/index.html) The suffix must not be empty and must not include a slash character.
    description: <p/>
  RedirectAllRequestsTo:
    type: object
    required:
      - HostName
    properties:
      HostName:
        $ref: '#/definitions/HostName'
        description: Name of the host where requests are redirected.
      Protocol:
        $ref: '#/definitions/Protocol'
        description: Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
    description: Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket.
  RoutingRules:
    type: array
    items:
      $ref: '#/definitions/RoutingRule'
  PutObjectOutput:
    type: object
    example:
      ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
      ServerSideEncryption: AES256
      VersionId: CG612hodqujkf8FaaNfp8U..FIhLROcp
    properties: {}
  PutObjectAclOutput:
    type: object
    example: {}
    properties: {}
  PutObjectLegalHoldOutput:
    type: object
    properties: {}
  ObjectLockLegalHoldStatus:
    type: string
    enum:
      - 'ON'
      - 'OFF'
  PutObjectLockConfigurationOutput:
    type: object
    properties: {}
  ObjectLockEnabled:
    type: string
    enum:
      - Enabled
  ObjectLockRule:
    type: object
    properties:
      DefaultRetention:
        $ref: '#/definitions/DefaultRetention'
        description: The default retention period that you want to apply to new objects placed in the specified bucket.
    description: The container element for an object lock rule.
  PutObjectRetentionOutput:
    type: object
    properties: {}
  ObjectLockRetentionMode:
    type: string
    enum:
      - GOVERNANCE
      - COMPLIANCE
  Date:
    type: string
    format: date-time
  PutObjectTaggingOutput:
    type: object
    example:
      VersionId: 'null'
    properties: {}
  Setting:
    type: boolean
  RestoreObjectOutput:
    type: object
    example: {}
    properties: {}
  Days:
    type: integer
  GlacierJobParameters:
    type: object
    required:
      - Tier
    properties:
      Tier:
        $ref: '#/definitions/Tier'
        description: Glacier retrieval tier at which the restore will be processed.
    description: <p/>
  RestoreRequestType:
    type: string
    enum:
      - SELECT
  Tier:
    type: string
    enum:
      - Standard
      - Bulk
      - Expedited
  Description:
    type: string
  SelectParameters:
    type: object
    required:
      - InputSerialization
      - ExpressionType
      - Expression
      - OutputSerialization
    properties:
      InputSerialization:
        $ref: '#/definitions/InputSerialization'
        description: Describes the serialization format of the object.
      ExpressionType:
        $ref: '#/definitions/ExpressionType'
        description: 'The type of the provided expression (e.g., SQL).'
      Expression:
        $ref: '#/definitions/Expression'
        description: The expression that is used to query the object.
      OutputSerialization:
        $ref: '#/definitions/OutputSerialization'
        description: Describes how the results of the Select job are serialized.
    description: Describes the parameters for Select job types.
  OutputLocation:
    type: object
    properties:
      S3:
        $ref: '#/definitions/S3Location'
        description: Describes an S3 location that will receive the results of the restore request.
    description: Describes the location where the restore job's output is stored.
  ObjectAlreadyInActiveTierError: {}
  SelectObjectContentOutput:
    type: object
    properties:
      Payload:
        $ref: '#/definitions/SelectObjectContentEventStream'
        description: <p/>
  EnableRequestProgress:
    type: boolean
  CSVInput:
    type: object
    properties:
      FileHeaderInfo:
        $ref: '#/definitions/FileHeaderInfo'
        description: 'Describes the first line of input. Valid values: None, Ignore, Use.'
      Comments:
        $ref: '#/definitions/Comments'
        description: The single character used to indicate a row should be ignored when present at the start of a row.
      QuoteEscapeCharacter:
        $ref: '#/definitions/QuoteEscapeCharacter'
        description: The single character used for escaping the quote character inside an already escaped value.
      RecordDelimiter:
        $ref: '#/definitions/RecordDelimiter'
        description: The value used to separate individual records.
      FieldDelimiter:
        $ref: '#/definitions/FieldDelimiter'
        description: The value used to separate individual fields in a record.
      QuoteCharacter:
        $ref: '#/definitions/QuoteCharacter'
        description: Value used for escaping where the field delimiter is part of the value.
      AllowQuotedRecordDelimiter:
        $ref: '#/definitions/AllowQuotedRecordDelimiter'
        description: Specifies that CSV field values may contain quoted record delimiters and such records should be allowed. Default value is FALSE. Setting this value to TRUE may lower performance.
    description: Describes how a CSV-formatted input object is formatted.
  CompressionType:
    type: string
    enum:
      - NONE
      - GZIP
      - BZIP2
  JSONInput:
    type: object
    properties:
      Type:
        $ref: '#/definitions/JSONType'
        description: 'The type of JSON. Valid values: Document, Lines.'
    description: <p/>
  ParquetInput:
    type: object
    properties: {}
    description: <p/>
  CSVOutput:
    type: object
    properties:
      QuoteFields:
        $ref: '#/definitions/QuoteFields'
        description: Indicates whether or not all output fields should be quoted.
      QuoteEscapeCharacter:
        $ref: '#/definitions/QuoteEscapeCharacter'
        description: Th single character used for escaping the quote character inside an already escaped value.
      RecordDelimiter:
        $ref: '#/definitions/RecordDelimiter'
        description: The value used to separate individual records.
      FieldDelimiter:
        $ref: '#/definitions/FieldDelimiter'
        description: The value used to separate individual fields in a record.
      QuoteCharacter:
        $ref: '#/definitions/QuoteCharacter'
        description: The value used for escaping where the field delimiter is part of the value.
    description: Describes how CSV-formatted results are formatted.
  JSONOutput:
    type: object
    properties:
      RecordDelimiter:
        $ref: '#/definitions/RecordDelimiter'
        description: The value used to separate individual records in the output.
    description: <p/>
  UploadPartOutput:
    type: object
    example:
      ETag: '"d8c2eafd90c266e19ab9dcacc479f8af"'
    properties: {}
  UploadPartCopyOutput:
    type: object
    example:
      CopyPartResult:
        ETag: '"65d16d19e65a7508a51f043180edcc36"'
        LastModified: '2016-12-29T21:44:28.000Z'
    properties:
      CopyPartResult:
        $ref: '#/definitions/CopyPartResult'
        description: <p/>
  AbortDate:
    type: string
    format: date-time
  DaysAfterInitiation:
    type: integer
  AbortIncompleteMultipartUpload:
    type: object
    properties:
      DaysAfterInitiation:
        $ref: '#/definitions/DaysAfterInitiation'
        description: Specifies the number of days after which Amazon S3 aborts an incomplete multipart upload.
    description: 'Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config"> Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Policy</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
  RequestCharged:
    type: string
    enum:
      - requester
    description: 'If present, indicates that the requester was successfully charged for the request.'
  BucketName:
    type: string
  ObjectKey:
    type: string
    minLength: 1
  MultipartUploadId:
    type: string
  RequestPayer:
    type: string
    enum:
      - requester
    description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
  AbortMultipartUploadRequest:
    type: object
    properties: {}
  AbortRuleId:
    type: string
  AccelerateConfiguration:
    type: object
    properties:
      Status:
        $ref: '#/definitions/BucketAccelerateStatus'
        description: Specifies the transfer acceleration status of the bucket.
    description: 'Configures the transfer acceleration state for an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html">Amazon S3 Transfer Acceleration</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
  AcceptRanges:
    type: string
  AccessControlPolicy:
    type: object
    properties:
      Grants:
        $ref: '#/definitions/Grants'
        description: A list of grants.
      Owner:
        $ref: '#/definitions/Owner'
        description: Container for the bucket owner's display name and ID.
    description: Contains the elements that set the ACL permissions for an object per grantee.
  OwnerOverride:
    type: string
    enum:
      - Destination
  AccessControlTranslation:
    type: object
    required:
      - Owner
    properties:
      Owner:
        $ref: '#/definitions/OwnerOverride'
        description: 'Specifies the replica ownership. For default and valid values, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html">PUT bucket replication</a> in the <i>Amazon Simple Storage Service API Reference</i>.'
    description: A container for information about access control for replicas.
  AccountId:
    type: string
  AllowQuotedRecordDelimiter:
    type: boolean
  AllowedHeader:
    type: string
  AllowedHeaders:
    type: array
    items:
      $ref: '#/definitions/AllowedHeader'
    xml:
      wrapped: false
  AllowedMethod:
    type: string
  AllowedMethods:
    type: array
    items:
      $ref: '#/definitions/AllowedMethod'
    xml:
      wrapped: false
  AllowedOrigin:
    type: string
  AllowedOrigins:
    type: array
    items:
      $ref: '#/definitions/AllowedOrigin'
    xml:
      wrapped: false
  Prefix:
    type: string
  AnalyticsAndOperator:
    type: object
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: 'The prefix to use when evaluating an AND predicate: The prefix that an object must have to be included in the metrics results.'
      Tags:
        $ref: '#/definitions/TagSet'
        description: The list of tags to use when evaluating an AND predicate.
    description: 'A conjunction (logical AND) of predicates, which is used in evaluating a metrics filter. The operator must have at least two predicates in any combination, and an object must match all of the predicates for the filter to apply.'
    xml:
      wrapped: false
  AnalyticsConfiguration:
    type: object
    required:
      - Id
      - StorageClassAnalysis
    properties:
      Id:
        $ref: '#/definitions/AnalyticsId'
        description: The ID that identifies the analytics configuration.
      Filter:
        $ref: '#/definitions/AnalyticsFilter'
        description: 'The filter used to describe a set of objects for analyses. A filter must have exactly one prefix, one tag, or one conjunction (AnalyticsAndOperator). If no filter is provided, all objects will be considered in any analysis.'
      StorageClassAnalysis:
        $ref: '#/definitions/StorageClassAnalysis'
        description: ' Contains data related to access patterns to be collected and made available to analyze the tradeoffs between different storage classes. '
    description: '<p> Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETAnalyticsConfig.html">GET Bucket analytics</a> in the <i>Amazon Simple Storage Service API Reference</i>. </p>'
  AnalyticsConfigurationList:
    type: array
    items:
      $ref: '#/definitions/AnalyticsConfiguration'
    xml:
      wrapped: false
  AnalyticsS3BucketDestination:
    type: object
    required:
      - Format
      - Bucket
    properties:
      Format:
        $ref: '#/definitions/AnalyticsS3ExportFileFormat'
        description: Specifies the file format used when exporting data to Amazon S3.
      BucketAccountId:
        $ref: '#/definitions/AccountId'
        description: 'The account ID that owns the destination bucket. If no account ID is provided, the owner will not be validated prior to exporting data.'
      Bucket:
        $ref: '#/definitions/BucketName'
        description: The Amazon Resource Name (ARN) of the bucket to which data is exported.
      Prefix:
        $ref: '#/definitions/Prefix'
        description: The prefix to use when exporting data. The prefix is prepended to all results.
    description: <p/>
  AnalyticsExportDestination:
    type: object
    required:
      - S3BucketDestination
    properties:
      S3BucketDestination:
        $ref: '#/definitions/AnalyticsS3BucketDestination'
        description: A destination signifying output to an S3 bucket.
    description: Where to publish the analytics results.
  Tag:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/ObjectKey'
        description: Name of the tag.
      Value:
        $ref: '#/definitions/Value'
        description: Value of the tag.
    description: <p/>
  AnalyticsS3ExportFileFormat:
    type: string
    enum:
      - CSV
  Body:
    type: string
  CreationDate:
    type: string
    format: date-time
  Bucket:
    type: object
    properties:
      Name:
        $ref: '#/definitions/BucketName'
        description: The name of the bucket.
      CreationDate:
        $ref: '#/definitions/CreationDate'
        description: Date the bucket was created.
    description: <p/>
  BucketCannedACL:
    type: string
    enum:
      - private
      - public-read
      - public-read-write
      - authenticated-read
  BucketLifecycleConfiguration:
    type: object
    required:
      - Rules
    properties:
      Rules:
        $ref: '#/definitions/LifecycleRules'
        description: A lifecycle rule for individual objects in an Amazon S3 bucket.
    description: 'Specifies the lifecycle configuration for objects in an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html">Object Lifecycle Management</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
  BucketLoggingStatus:
    type: object
    properties:
      LoggingEnabled:
        $ref: '#/definitions/LoggingEnabled'
        description: <p/>
    description: <p/>
  BucketLogsPermission:
    type: string
    enum:
      - FULL_CONTROL
      - READ
      - WRITE
  Buckets:
    type: array
    items:
      $ref: '#/definitions/Bucket'
  BypassGovernanceRetention:
    type: boolean
  BytesProcessed:
    type: integer
  BytesReturned:
    type: integer
  BytesScanned:
    type: integer
  CORSConfiguration:
    type: object
    required:
      - CORSRules
    properties:
      CORSRules:
        $ref: '#/definitions/CORSRules'
        description: A set of allowed origins and methods.
    description: 'Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html">Enabling Cross-Origin Resource Sharing</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
  ExposeHeaders:
    type: array
    items:
      $ref: '#/definitions/ExposeHeader'
    xml:
      wrapped: false
  MaxAgeSeconds:
    type: integer
  CORSRule:
    type: object
    required:
      - AllowedMethods
      - AllowedOrigins
    properties:
      AllowedHeaders:
        $ref: '#/definitions/AllowedHeaders'
        description: 'Headers that are specified in the <code>Access-Control-Request-Headers</code> header. These headers are allowed in a preflight OPTIONS request. In response to any preflight OPTIONS request, Amazon S3 returns any requested headers that are allowed.'
      AllowedMethods:
        $ref: '#/definitions/AllowedMethods'
        description: 'An HTTP method that you allow the origin to execute. Valid values are <code>GET</code>, <code>PUT</code>, <code>HEAD</code>, <code>POST</code>, and <code>DELETE</code>.'
      AllowedOrigins:
        $ref: '#/definitions/AllowedOrigins'
        description: One or more origins you want customers to be able to access the bucket from.
      ExposeHeaders:
        $ref: '#/definitions/ExposeHeaders'
        description: 'One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).'
      MaxAgeSeconds:
        $ref: '#/definitions/MaxAgeSeconds'
        description: The time in seconds that your browser is to cache the preflight response for the specified resource.
    description: Specifies a cross-origin access rule for an Amazon S3 bucket.
  FileHeaderInfo:
    type: string
    enum:
      - USE
      - IGNORE
      - NONE
  Comments:
    type: string
  QuoteEscapeCharacter:
    type: string
  RecordDelimiter:
    type: string
  FieldDelimiter:
    type: string
  QuoteCharacter:
    type: string
  QuoteFields:
    type: string
    enum:
      - ALWAYS
      - ASNEEDED
  CacheControl:
    type: string
  CloudFunction:
    type: string
  NotificationId:
    type: string
    description: 'An optional unique identifier for configurations in a notification configuration. If you don''t provide one, Amazon S3 will assign an ID.'
  Event:
    type: string
    enum:
      - 's3:ReducedRedundancyLostObject'
      - 's3:ObjectCreated:*'
      - 's3:ObjectCreated:Put'
      - 's3:ObjectCreated:Post'
      - 's3:ObjectCreated:Copy'
      - 's3:ObjectCreated:CompleteMultipartUpload'
      - 's3:ObjectRemoved:*'
      - 's3:ObjectRemoved:Delete'
      - 's3:ObjectRemoved:DeleteMarkerCreated'
      - 's3:ObjectRestore:Post'
      - 's3:ObjectRestore:Completed'
    description: The bucket event for which to send notifications.
  EventList:
    type: array
    items:
      $ref: '#/definitions/Event'
    xml:
      wrapped: false
  CloudFunctionInvocationRole:
    type: string
  Code:
    type: string
  CommonPrefix:
    type: object
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: <p/>
    description: <p/>
  CommonPrefixList:
    type: array
    items:
      $ref: '#/definitions/CommonPrefix'
    xml:
      wrapped: false
  Location:
    type: string
  Expiration:
    type: string
  ETag:
    type: string
  ServerSideEncryption:
    type: string
    enum:
      - AES256
      - 'aws:kms'
  ObjectVersionId:
    type: string
  SSEKMSKeyId:
    type: string
    format: password
  CompletedMultipartUpload:
    type: object
    properties:
      Parts:
        $ref: '#/definitions/CompletedPartList'
        description: <p/>
    description: <p/>
  CompleteMultipartUploadRequest:
    type: object
    properties:
      MultipartUpload:
        $ref: '#/definitions/CompletedMultipartUpload'
        description: <p/>
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PartNumber:
    type: integer
  CompletedPart:
    type: object
    properties:
      ETag:
        $ref: '#/definitions/ETag'
        description: Entity tag returned when the part was uploaded.
      PartNumber:
        $ref: '#/definitions/PartNumber'
        description: 'Part number that identifies the part. This is a positive integer between 1 and 10,000.'
    description: <p/>
  HttpErrorCodeReturnedEquals:
    type: string
  KeyPrefixEquals:
    type: string
  Condition:
    type: object
    properties:
      HttpErrorCodeReturnedEquals:
        $ref: '#/definitions/HttpErrorCodeReturnedEquals'
        description: 'The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied. Required when parent element <code>Condition</code> is specified and sibling <code>KeyPrefixEquals</code> is not specified. If both are specified, then both must be true for the redirect to be applied.'
      KeyPrefixEquals:
        $ref: '#/definitions/KeyPrefixEquals'
        description: 'The object key name prefix when the redirect is applied. For example, to redirect requests for <code>ExamplePage.html</code>, the key prefix will be <code>ExamplePage.html</code>. To redirect request for all pages with the prefix <code>docs/</code>, the key prefix will be <code>/docs</code>, which identifies all objects in the docs/ folder. Required when the parent element <code>Condition</code> is specified and sibling <code>HttpErrorCodeReturnedEquals</code> is not specified. If both conditions are specified, both must be true for the redirect to be applied.'
    description: 'Specifies a condition that must be met for a redirect to apply. '
  ConfirmRemoveSelfBucketAccess:
    type: boolean
  ContentDisposition:
    type: string
  ContentEncoding:
    type: string
  ContentLanguage:
    type: string
  ContentLength:
    type: integer
  ContentMD5:
    type: string
  ContentRange:
    type: string
  ContentType:
    type: string
  ContinuationEvent:
    type: object
    properties: {}
    description: <p/>
  CopyObjectResult:
    type: object
    properties:
      ETag:
        $ref: '#/definitions/ETag'
        description: <p/>
      LastModified:
        $ref: '#/definitions/LastModified'
        description: <p/>
    description: <p/>
  CopySourceVersionId:
    type: string
  SSECustomerAlgorithm:
    type: string
  SSECustomerKeyMD5:
    type: string
  SSEKMSEncryptionContext:
    type: string
    format: password
  ObjectCannedACL:
    type: string
    enum:
      - private
      - public-read
      - public-read-write
      - authenticated-read
      - aws-exec-read
      - bucket-owner-read
      - bucket-owner-full-control
  CopySource:
    type: string
    pattern: \/.+\/.+
  CopySourceIfMatch:
    type: string
  CopySourceIfModifiedSince:
    type: string
    format: date-time
  CopySourceIfNoneMatch:
    type: string
  CopySourceIfUnmodifiedSince:
    type: string
    format: date-time
  Expires:
    type: string
    format: date-time
  GrantFullControl:
    type: string
  GrantRead:
    type: string
  GrantReadACP:
    type: string
  GrantWriteACP:
    type: string
  Metadata:
    type: object
    additionalProperties:
      $ref: '#/definitions/MetadataValue'
  MetadataDirective:
    type: string
    enum:
      - COPY
      - REPLACE
  TaggingDirective:
    type: string
    enum:
      - COPY
      - REPLACE
  StorageClass:
    type: string
    enum:
      - STANDARD
      - REDUCED_REDUNDANCY
      - STANDARD_IA
      - ONEZONE_IA
      - INTELLIGENT_TIERING
      - GLACIER
      - DEEP_ARCHIVE
  WebsiteRedirectLocation:
    type: string
  SSECustomerKey:
    type: string
    format: password
  CopySourceSSECustomerAlgorithm:
    type: string
  CopySourceSSECustomerKey:
    type: string
    format: password
  CopySourceSSECustomerKeyMD5:
    type: string
  TaggingHeader:
    type: string
  ObjectLockMode:
    type: string
    enum:
      - GOVERNANCE
      - COMPLIANCE
  ObjectLockRetainUntilDate:
    type: string
    format: date-time
  CopyObjectRequest:
    type: object
    properties:
      Metadata:
        $ref: '#/definitions/Metadata'
        description: A map of metadata to store with the object in S3.
  LastModified:
    type: string
    format: date-time
  CopyPartResult:
    type: object
    properties:
      ETag:
        $ref: '#/definitions/ETag'
        description: Entity tag of the object.
      LastModified:
        $ref: '#/definitions/LastModified'
        description: Date and time at which the object was uploaded.
    description: <p/>
  CopySourceRange:
    type: string
  CreateBucketConfiguration:
    type: object
    properties:
      LocationConstraint:
        $ref: '#/definitions/BucketLocationConstraint'
        description: 'Specifies the region where the bucket will be created. If you don''t specify a region, the bucket is created in US East (N. Virginia) Region (us-east-1).'
    description: <p/>
  GrantWrite:
    type: string
  ObjectLockEnabledForBucket:
    type: boolean
  CreateBucketRequest:
    type: object
    properties:
      CreateBucketConfiguration:
        $ref: '#/definitions/CreateBucketConfiguration'
        description: <p/>
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  CreateMultipartUploadRequest:
    type: object
    properties:
      Metadata:
        $ref: '#/definitions/Metadata'
        description: A map of metadata to store with the object in S3.
  Years:
    type: integer
  DefaultRetention:
    type: object
    properties:
      Mode:
        $ref: '#/definitions/ObjectLockRetentionMode'
        description: The default object lock retention mode you want to apply to new objects placed in the specified bucket.
      Days:
        $ref: '#/definitions/Days'
        description: The number of days that you want to specify for the default retention period.
      Years:
        $ref: '#/definitions/Years'
        description: The number of years that you want to specify for the default retention period.
    description: The container element for specifying the default object lock retention settings for new objects placed in the specified bucket.
  Delete:
    type: object
    required:
      - Objects
    properties:
      Objects:
        $ref: '#/definitions/ObjectIdentifierList'
        description: <p/>
      Quiet:
        $ref: '#/definitions/Quiet'
        description: 'Element to enable quiet mode for the request. When you add this element, you must set its value to true.'
    description: <p/>
  DeleteBucketAnalyticsConfigurationRequest:
    type: object
    properties: {}
  DeleteBucketCorsRequest:
    type: object
    properties: {}
  DeleteBucketEncryptionRequest:
    type: object
    properties: {}
  DeleteBucketInventoryConfigurationRequest:
    type: object
    properties: {}
  DeleteBucketLifecycleRequest:
    type: object
    properties: {}
  DeleteBucketMetricsConfigurationRequest:
    type: object
    properties: {}
  DeleteBucketPolicyRequest:
    type: object
    properties: {}
  DeleteBucketReplicationRequest:
    type: object
    properties: {}
  DeleteBucketRequest:
    type: object
    properties: {}
  DeleteBucketTaggingRequest:
    type: object
    properties: {}
  DeleteBucketWebsiteRequest:
    type: object
    properties: {}
  DeleteMarker:
    type: boolean
  IsLatest:
    type: boolean
  DeleteMarkerEntry:
    type: object
    properties:
      Owner:
        $ref: '#/definitions/Owner'
        description: <p/>
      Key:
        $ref: '#/definitions/ObjectKey'
        description: The object key.
      VersionId:
        $ref: '#/definitions/ObjectVersionId'
        description: Version ID of an object.
      IsLatest:
        $ref: '#/definitions/IsLatest'
        description: Specifies whether the object is (true) or is not (false) the latest version of an object.
      LastModified:
        $ref: '#/definitions/LastModified'
        description: Date and time the object was last modified.
    description: <p/>
  DeleteMarkerReplicationStatus:
    type: string
    enum:
      - Enabled
      - Disabled
  DeleteMarkerReplication:
    type: object
    properties:
      Status:
        $ref: '#/definitions/DeleteMarkerReplicationStatus'
        description: '<p>The status of the delete marker replication.</p> <note> <p> In the current implementation, Amazon S3 doesn''t replicate the delete markers. The status must be <code>Disabled</code>. </p> </note>'
    description: Specifies whether Amazon S3 should replicate delete makers.
  DeleteMarkerVersionId:
    type: string
  DeleteMarkers:
    type: array
    items:
      $ref: '#/definitions/DeleteMarkerEntry'
    xml:
      wrapped: false
  MFA:
    type: string
  DeleteObjectRequest:
    type: object
    properties: {}
  DeleteObjectTaggingRequest:
    type: object
    properties: {}
  DeletedObjects:
    type: array
    items:
      $ref: '#/definitions/DeletedObject'
    xml:
      wrapped: false
  Errors:
    type: array
    items:
      $ref: '#/definitions/Error'
    xml:
      wrapped: false
  DeleteObjectsRequest:
    type: object
    required:
      - Delete
    properties:
      Delete:
        $ref: '#/definitions/Delete'
        description: <p/>
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  DeletePublicAccessBlockRequest:
    type: object
    properties: {}
  DeletedObject:
    type: object
    properties:
      Key:
        $ref: '#/definitions/ObjectKey'
        description: <p/>
      VersionId:
        $ref: '#/definitions/ObjectVersionId'
        description: <p/>
      DeleteMarker:
        $ref: '#/definitions/DeleteMarker'
        description: <p/>
      DeleteMarkerVersionId:
        $ref: '#/definitions/DeleteMarkerVersionId'
        description: <p/>
    description: <p/>
  Delimiter:
    type: string
  EncryptionConfiguration:
    type: object
    properties:
      ReplicaKmsKeyID:
        $ref: '#/definitions/ReplicaKmsKeyID'
        description: Specifies the AWS KMS Key ID (Key ARN or Alias ARN) for the destination bucket. Amazon S3 uses this key to encrypt replica objects.
    description: Specifies encryption-related information for an Amazon S3 bucket that is a destination for replicated objects.
  Destination:
    type: object
    required:
      - Bucket
    properties:
      Bucket:
        $ref: '#/definitions/BucketName'
        description: '<p> The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to store replicas of the object identified by the rule.</p> <p>A replication configuration can replicate objects to only one destination bucket. If there are multiple rules in your replication configuration, all rules must specify the same destination bucket.</p>'
      Account:
        $ref: '#/definitions/AccountId'
        description: 'Destination bucket owner account ID. In a cross-account scenario, if you direct Amazon S3 to change replica ownership to the AWS account that owns the destination bucket by specifying the <code>AccessControlTranslation</code> property, this is the account ID of the destination bucket owner. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/crr-change-owner.html">Cross-Region Replication Additional Configuration: Change Replica Owner</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
      StorageClass:
        $ref: '#/definitions/StorageClass'
        description: '<p> The storage class to use when replicating objects, such as standard or reduced redundancy. By default, Amazon S3 uses the storage class of the source object to create the object replica. </p> <p>For valid values, see the <code>StorageClass</code> element of the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html">PUT Bucket replication</a> action in the <i>Amazon Simple Storage Service API Reference</i>.</p>'
      AccessControlTranslation:
        $ref: '#/definitions/AccessControlTranslation'
        description: 'Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS account that owns the source object.'
      EncryptionConfiguration:
        $ref: '#/definitions/EncryptionConfiguration'
        description: 'A container that provides information about encryption. If <code>SourceSelectionCriteria</code> is specified, you must specify this element.'
    description: Specifies information about where to publish analysis or configuration results for an Amazon S3 bucket.
  DisplayName:
    type: string
  EmailAddress:
    type: string
  EncodingType:
    type: string
    enum:
      - url
    description: 'Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.'
  KMSContext:
    type: string
  Encryption:
    type: object
    required:
      - EncryptionType
    properties:
      EncryptionType:
        $ref: '#/definitions/ServerSideEncryption'
        description: 'The server-side encryption algorithm used when storing job results in Amazon S3 (e.g., AES256, aws:kms).'
      KMSKeyId:
        $ref: '#/definitions/SSEKMSKeyId'
        description: 'If the encryption type is aws:kms, this optional value specifies the AWS KMS key ID to use for encryption of job results.'
      KMSContext:
        $ref: '#/definitions/KMSContext'
        description: 'If the encryption type is aws:kms, this optional value can be used to specify the encryption context for the restore results.'
    description: Describes the server-side encryption that will be applied to the restore results.
  ReplicaKmsKeyID:
    type: string
  EndEvent:
    type: object
    properties: {}
    description: <p/>
  Message:
    type: string
  Error:
    type: object
    properties:
      Key:
        $ref: '#/definitions/ObjectKey'
        description: <p/>
      VersionId:
        $ref: '#/definitions/ObjectVersionId'
        description: <p/>
      Code:
        $ref: '#/definitions/Code'
        description: <p/>
      Message:
        $ref: '#/definitions/Message'
        description: <p/>
    description: <p/>
  ExpirationStatus:
    type: string
    enum:
      - Enabled
      - Disabled
  ExpiredObjectDeleteMarker:
    type: boolean
  ExposeHeader:
    type: string
  Expression:
    type: string
  ExpressionType:
    type: string
    enum:
      - SQL
  FetchOwner:
    type: boolean
  FilterRuleName:
    type: string
    enum:
      - prefix
      - suffix
  FilterRuleValue:
    type: string
  FilterRule:
    type: object
    properties:
      Name:
        $ref: '#/definitions/FilterRuleName'
        description: 'The object key name prefix or suffix identifying one or more objects to which the filtering rule applies. The maximum length is 1,024 characters. Overlapping prefixes and suffixes are not supported. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Configuring Event Notifications</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
      Value:
        $ref: '#/definitions/FilterRuleValue'
        description: The value that the filter searches for in object key names.
    description: Specifies the Amazon S3 object key name to filter on and whether to filter on the suffix or prefix of the key name.
  FilterRuleList:
    type: array
    description: A list of containers for the key value pair that defines the criteria for the filter rule.
    items:
      $ref: '#/definitions/FilterRule'
    xml:
      wrapped: false
  GetBucketAccelerateConfigurationRequest:
    type: object
    properties: {}
  GetBucketAclRequest:
    type: object
    properties: {}
  GetBucketAnalyticsConfigurationRequest:
    type: object
    properties: {}
  GetBucketCorsRequest:
    type: object
    properties: {}
  ServerSideEncryptionConfiguration:
    type: object
    required:
      - Rules
    properties:
      Rules:
        $ref: '#/definitions/ServerSideEncryptionRules'
        description: Container for information about a particular server-side encryption configuration rule.
    description: Specifies the default server-side-encryption configuration.
  GetBucketEncryptionRequest:
    type: object
    properties: {}
  InventoryConfiguration:
    type: object
    required:
      - Destination
      - IsEnabled
      - Id
      - IncludedObjectVersions
      - Schedule
    properties:
      Destination:
        $ref: '#/definitions/InventoryDestination'
        description: Contains information about where to publish the inventory results.
      IsEnabled:
        $ref: '#/definitions/IsEnabled'
        description: 'Specifies whether the inventory is enabled or disabled. If set to <code>True</code>, an inventory list is generated. If set to <code>False</code>, no inventory list is generated.'
      Filter:
        $ref: '#/definitions/InventoryFilter'
        description: Specifies an inventory filter. The inventory only includes objects that meet the filter's criteria.
      Id:
        $ref: '#/definitions/InventoryId'
        description: The ID used to identify the inventory configuration.
      IncludedObjectVersions:
        $ref: '#/definitions/InventoryIncludedObjectVersions'
        description: 'Object versions to include in the inventory list. If set to <code>All</code>, the list includes all the object versions, which adds the version-related fields <code>VersionId</code>, <code>IsLatest</code>, and <code>DeleteMarker</code> to the list. If set to <code>Current</code>, the list does not contain these version-related fields.'
      OptionalFields:
        $ref: '#/definitions/InventoryOptionalFields'
        description: Contains the optional fields that are included in the inventory results.
      Schedule:
        $ref: '#/definitions/InventorySchedule'
        description: Specifies the schedule for generating inventory results.
    description: 'Specifies the inventory configuration for an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html">GET Bucket inventory</a> in the <i>Amazon Simple Storage Service API Reference</i>. '
  GetBucketInventoryConfigurationRequest:
    type: object
    properties: {}
  GetBucketLifecycleConfigurationRequest:
    type: object
    properties: {}
  GetBucketLifecycleRequest:
    type: object
    properties: {}
  GetBucketLocationRequest:
    type: object
    properties: {}
  GetBucketLoggingRequest:
    type: object
    properties: {}
  MetricsConfiguration:
    type: object
    required:
      - Id
    properties:
      Id:
        $ref: '#/definitions/MetricsId'
        description: The ID used to identify the metrics configuration.
      Filter:
        $ref: '#/definitions/MetricsFilter'
        description: 'Specifies a metrics configuration filter. The metrics configuration will only include objects that meet the filter''s criteria. A filter must be a prefix, a tag, or a conjunction (MetricsAndOperator).'
    description: 'Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket. If you''re updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don''t include the elements you want to keep, they are erased. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html"> PUT Bucket metrics</a> in the <i>Amazon Simple Storage Service API Reference</i>.'
  GetBucketMetricsConfigurationRequest:
    type: object
    properties: {}
  GetBucketNotificationConfigurationRequest:
    type: object
    properties: {}
  Policy:
    type: string
  GetBucketPolicyRequest:
    type: object
    properties: {}
  PolicyStatus:
    type: object
    properties:
      IsPublic:
        $ref: '#/definitions/IsPublic'
        description: The policy status for this bucket. <code>TRUE</code> indicates that this bucket is public. <code>FALSE</code> indicates that the bucket is not public.
    description: The container element for a bucket's policy status.
  GetBucketPolicyStatusRequest:
    type: object
    properties: {}
  ReplicationConfiguration:
    type: object
    required:
      - Role
      - Rules
    properties:
      Role:
        $ref: '#/definitions/Role'
        description: 'The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that Amazon S3 assumes when replicating objects. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/crr-how-setup.html">How to Set Up Cross-Region Replication</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
      Rules:
        $ref: '#/definitions/ReplicationRules'
        description: 'A container for one or more replication rules. A replication configuration must have at least one rule and can contain a maximum of 1,000 rules. '
    description: 'A container for replication rules. You can add up to 1,000 rules. The maximum size of a replication configuration is 2 MB.'
  GetBucketReplicationRequest:
    type: object
    properties: {}
  GetBucketRequestPaymentRequest:
    type: object
    properties: {}
  GetBucketTaggingRequest:
    type: object
    properties: {}
  MFADeleteStatus:
    type: string
    enum:
      - Enabled
      - Disabled
  GetBucketVersioningRequest:
    type: object
    properties: {}
  GetBucketWebsiteRequest:
    type: object
    properties: {}
  GetObjectAclRequest:
    type: object
    properties: {}
  ObjectLockLegalHold:
    type: object
    properties:
      Status:
        $ref: '#/definitions/ObjectLockLegalHoldStatus'
        description: Indicates whether the specified object has a Legal Hold in place.
    description: A Legal Hold configuration for an object.
  GetObjectLegalHoldRequest:
    type: object
    properties: {}
  ObjectLockConfiguration:
    type: object
    properties:
      ObjectLockEnabled:
        $ref: '#/definitions/ObjectLockEnabled'
        description: Indicates whether this bucket has an object lock configuration enabled.
      Rule:
        $ref: '#/definitions/ObjectLockRule'
        description: The object lock rule in place for the specified object.
    description: The container element for object lock configuration parameters.
  GetObjectLockConfigurationRequest:
    type: object
    properties: {}
  Restore:
    type: string
  MissingMeta:
    type: integer
  ReplicationStatus:
    type: string
    enum:
      - COMPLETE
      - PENDING
      - FAILED
      - REPLICA
  PartsCount:
    type: integer
  TagCount:
    type: integer
  IfMatch:
    type: string
  IfModifiedSince:
    type: string
    format: date-time
  IfNoneMatch:
    type: string
  IfUnmodifiedSince:
    type: string
    format: date-time
  Range:
    type: string
  ResponseCacheControl:
    type: string
  ResponseContentDisposition:
    type: string
  ResponseContentEncoding:
    type: string
  ResponseContentLanguage:
    type: string
  ResponseContentType:
    type: string
  ResponseExpires:
    type: string
    format: date-time
  GetObjectRequest:
    type: object
    properties: {}
  ObjectLockRetention:
    type: object
    properties:
      Mode:
        $ref: '#/definitions/ObjectLockRetentionMode'
        description: Indicates the Retention mode for the specified object.
      RetainUntilDate:
        $ref: '#/definitions/Date'
        description: The date on which this object lock retention expires.
    description: A Retention configuration for an object.
  GetObjectRetentionRequest:
    type: object
    properties: {}
  GetObjectTaggingRequest:
    type: object
    properties: {}
  GetObjectTorrentRequest:
    type: object
    properties: {}
  PublicAccessBlockConfiguration:
    type: object
    properties:
      BlockPublicAcls:
        $ref: '#/definitions/Setting'
        description: '<p>Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.</p> </li> <li> <p>PUT Object calls fail if the request includes a public ACL.</p> </li> </ul> <p>Enabling this setting doesn''t affect existing policies or ACLs.</p>'
      IgnorePublicAcls:
        $ref: '#/definitions/Setting'
        description: <p>Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket.</p> <p>Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p>
      BlockPublicPolicy:
        $ref: '#/definitions/Setting'
        description: <p>Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Enabling this setting doesn't affect existing bucket policies.</p>
      RestrictPublicBuckets:
        $ref: '#/definitions/Setting'
        description: '<p>Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to <code>TRUE</code> restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.</p> <p>Enabling this setting doesn''t affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.</p>'
    description: Specifies the Block Public Access configuration for an Amazon S3 bucket.
  GetPublicAccessBlockRequest:
    type: object
    properties: {}
  Grantee:
    type: object
    required:
      - Type
    properties:
      DisplayName:
        $ref: '#/definitions/DisplayName'
        description: Screen name of the grantee.
      EmailAddress:
        $ref: '#/definitions/EmailAddress'
        description: Email address of the grantee.
      ID:
        $ref: '#/definitions/ID'
        description: The canonical user ID of the grantee.
      Type:
        $ref: '#/definitions/Type'
        description: Type of grantee
      URI:
        $ref: '#/definitions/URI'
        description: URI of the grantee group.
    description: <p/>
    xml:
      namespace: 'http://www.w3.org/2001/XMLSchema-instance'
      attribute: true
  Permission:
    type: string
    enum:
      - FULL_CONTROL
      - WRITE
      - WRITE_ACP
      - READ
      - READ_ACP
  Grant:
    type: object
    properties:
      Grantee:
        $ref: '#/definitions/Grantee'
        description: <p/>
      Permission:
        $ref: '#/definitions/Permission'
        description: Specifies the permission given to the grantee.
    description: <p/>
  ID:
    type: string
  Type:
    type: string
    enum:
      - CanonicalUser
      - AmazonCustomerByEmail
      - Group
  URI:
    type: string
  HeadBucketRequest:
    type: object
    properties: {}
  HeadObjectRequest:
    type: object
    properties: {}
  HostName:
    type: string
  HttpRedirectCode:
    type: string
  Suffix:
    type: string
  Initiated:
    type: string
    format: date-time
  Initiator:
    type: object
    properties:
      ID:
        $ref: '#/definitions/ID'
        description: 'If the principal is an AWS account, it provides the Canonical User ID. If the principal is an IAM User, it provides a user ARN value.'
      DisplayName:
        $ref: '#/definitions/DisplayName'
        description: Name of the Principal.
    description: <p/>
  InputSerialization:
    type: object
    properties:
      CSV:
        $ref: '#/definitions/CSVInput'
        description: Describes the serialization of a CSV-encoded object.
      CompressionType:
        $ref: '#/definitions/CompressionType'
        description: 'Specifies object''s compression format. Valid values: NONE, GZIP, BZIP2. Default Value: NONE.'
      JSON:
        $ref: '#/definitions/JSONInput'
        description: Specifies JSON as object's input serialization format.
      Parquet:
        $ref: '#/definitions/ParquetInput'
        description: Specifies Parquet as object's input serialization format.
    description: Describes the serialization format of the object.
  InventoryConfigurationList:
    type: array
    items:
      $ref: '#/definitions/InventoryConfiguration'
    xml:
      wrapped: false
  InventoryS3BucketDestination:
    type: object
    required:
      - Bucket
      - Format
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The ID of the account that owns the destination bucket.
      Bucket:
        $ref: '#/definitions/BucketName'
        description: The Amazon resource name (ARN) of the bucket where inventory results will be published.
      Format:
        $ref: '#/definitions/InventoryFormat'
        description: Specifies the output format of the inventory results.
      Prefix:
        $ref: '#/definitions/Prefix'
        description: The prefix that is prepended to all inventory results.
      Encryption:
        $ref: '#/definitions/InventoryEncryption'
        description: Contains the type of server-side encryption used to encrypt the inventory results.
    description: <p/>
  SSES3:
    type: object
    properties: {}
    description: Specifies the use of SSE-S3 to encrypt delivered Inventory reports.
  SSEKMS:
    type: object
    required:
      - KeyId
    properties:
      KeyId:
        $ref: '#/definitions/SSEKMSKeyId'
        description: Specifies the ID of the AWS Key Management Service (KMS) master encryption key to use for encrypting Inventory reports.
    description: Specifies the use of SSE-KMS to encrypt delivered Inventory reports.
  InventoryEncryption:
    type: object
    properties:
      SSES3:
        $ref: '#/definitions/SSES3'
        description: Specifies the use of SSE-S3 to encrypt delivered Inventory reports.
      SSEKMS:
        $ref: '#/definitions/SSEKMS'
        description: Specifies the use of SSE-KMS to encrypt delivered Inventory reports.
    description: Contains the type of server-side encryption used to encrypt the inventory results.
  InventoryFormat:
    type: string
    enum:
      - CSV
      - ORC
      - Parquet
  InventoryFrequency:
    type: string
    enum:
      - Daily
      - Weekly
  InventoryOptionalField:
    type: string
    enum:
      - Size
      - LastModifiedDate
      - StorageClass
      - ETag
      - IsMultipartUploaded
      - ReplicationStatus
      - EncryptionStatus
      - ObjectLockRetainUntilDate
      - ObjectLockMode
      - ObjectLockLegalHoldStatus
  IsPublic:
    type: boolean
  IsTruncated:
    type: boolean
  JSONType:
    type: string
    enum:
      - DOCUMENT
      - LINES
  KeyCount:
    type: integer
  KeyMarker:
    type: string
  LambdaFunctionArn:
    type: string
  NotificationConfigurationFilter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/S3KeyFilter'
        description: <p/>
    description: 'Specifies object key name filtering rules. For information about key name filtering, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Configuring Event Notifications</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
  LambdaFunctionConfiguration:
    type: object
    required:
      - LambdaFunctionArn
      - Events
    properties:
      Id:
        $ref: '#/definitions/NotificationId'
      LambdaFunctionArn:
        $ref: '#/definitions/LambdaFunctionArn'
        description: The Amazon Resource Name (ARN) of the AWS Lambda function that Amazon S3 invokes when the specified event type occurs.
      Events:
        $ref: '#/definitions/EventList'
        description: 'The Amazon S3 bucket event for which to invoke the AWS Lambda function. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Supported Event Types</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
      Filter:
        $ref: '#/definitions/NotificationConfigurationFilter'
        description: <p/>
    description: A container for specifying the configuration for AWS Lambda notifications.
  LifecycleConfiguration:
    type: object
    required:
      - Rules
    properties:
      Rules:
        $ref: '#/definitions/Rules'
        description: <p/>
    description: <p/>
  LifecycleExpiration:
    type: object
    properties:
      Date:
        $ref: '#/definitions/Date'
        description: Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.
      Days:
        $ref: '#/definitions/Days'
        description: 'Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.'
      ExpiredObjectDeleteMarker:
        $ref: '#/definitions/ExpiredObjectDeleteMarker'
        description: 'Indicates whether Amazon S3 will remove a delete marker with no noncurrent versions. If set to true, the delete marker will be expired; if set to false the policy takes no action. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.'
    description: <p/>
  LifecycleRuleFilter:
    type: object
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: Prefix identifying one or more objects to which the rule applies.
      Tag:
        $ref: '#/definitions/Tag'
        description: This tag must exist in the object's tag set in order for the rule to apply.
      And:
        $ref: '#/definitions/LifecycleRuleAndOperator'
        description: <p/>
    description: 'The Filter is used to identify objects that a Lifecycle Rule applies to. A Filter must have exactly one of Prefix, Tag, or And specified.'
  TransitionList:
    type: array
    items:
      $ref: '#/definitions/Transition'
    xml:
      wrapped: false
  NoncurrentVersionTransitionList:
    type: array
    items:
      $ref: '#/definitions/NoncurrentVersionTransition'
    xml:
      wrapped: false
  NoncurrentVersionExpiration:
    type: object
    properties:
      NoncurrentDays:
        $ref: '#/definitions/Days'
        description: 'Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations">How Amazon S3 Calculates When an Object Became Noncurrent</a> in the Amazon Simple Storage Service Developer Guide.'
    description: 'Specifies when noncurrent object versions expire. Upon expiration, Amazon S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that Amazon S3 delete noncurrent object versions at a specific period in the object''s lifetime.'
  LifecycleRule:
    type: object
    required:
      - Status
    properties:
      Expiration:
        $ref: '#/definitions/LifecycleExpiration'
        description: <p/>
      ID:
        $ref: '#/definitions/ID'
        description: Unique identifier for the rule. The value cannot be longer than 255 characters.
      Prefix:
        $ref: '#/definitions/Prefix'
        description: Prefix identifying one or more objects to which the rule applies. This is No longer used; use Filter instead.
      Filter:
        $ref: '#/definitions/LifecycleRuleFilter'
        description: <p/>
      Status:
        $ref: '#/definitions/ExpirationStatus'
        description: 'If ''Enabled'', the rule is currently being applied. If ''Disabled'', the rule is not currently being applied.'
      Transitions:
        $ref: '#/definitions/TransitionList'
        description: <p/>
      NoncurrentVersionTransitions:
        $ref: '#/definitions/NoncurrentVersionTransitionList'
        description: <p/>
      NoncurrentVersionExpiration:
        $ref: '#/definitions/NoncurrentVersionExpiration'
        description: <p/>
      AbortIncompleteMultipartUpload:
        $ref: '#/definitions/AbortIncompleteMultipartUpload'
        description: <p/>
    description: <p/>
  LifecycleRuleAndOperator:
    type: object
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: <p/>
      Tags:
        $ref: '#/definitions/TagSet'
        description: All of these tags must exist in the object's tag set in order for the rule to apply.
    description: This is used in a Lifecycle Rule Filter to apply a logical AND to two or more predicates. The Lifecycle Rule will apply to any object matching all of the predicates configured inside the And operator.
    xml:
      wrapped: false
  Token:
    type: string
  NextToken:
    type: string
  ListBucketAnalyticsConfigurationsRequest:
    type: object
    properties: {}
  ListBucketInventoryConfigurationsRequest:
    type: object
    properties: {}
  MetricsConfigurationList:
    type: array
    items:
      $ref: '#/definitions/MetricsConfiguration'
    xml:
      wrapped: false
  ListBucketMetricsConfigurationsRequest:
    type: object
    properties: {}
  UploadIdMarker:
    type: string
  NextKeyMarker:
    type: string
  NextUploadIdMarker:
    type: string
  MaxUploads:
    type: integer
  MultipartUploadList:
    type: array
    items:
      $ref: '#/definitions/MultipartUpload'
    xml:
      wrapped: false
  ListMultipartUploadsRequest:
    type: object
    properties: {}
  VersionIdMarker:
    type: string
  NextVersionIdMarker:
    type: string
  ObjectVersionList:
    type: array
    items:
      $ref: '#/definitions/ObjectVersion'
    xml:
      wrapped: false
  MaxKeys:
    type: integer
  ListObjectVersionsRequest:
    type: object
    properties: {}
  Marker:
    type: string
  NextMarker:
    type: string
  ObjectList:
    type: array
    items:
      $ref: '#/definitions/Object'
    xml:
      wrapped: false
  ListObjectsRequest:
    type: object
    properties: {}
  StartAfter:
    type: string
  ListObjectsV2Request:
    type: object
    properties: {}
  PartNumberMarker:
    type: integer
  NextPartNumberMarker:
    type: integer
  MaxParts:
    type: integer
  Parts:
    type: array
    items:
      $ref: '#/definitions/Part'
    xml:
      wrapped: false
  ListPartsRequest:
    type: object
    properties: {}
  LocationPrefix:
    type: string
  TargetBucket:
    type: string
  TargetGrants:
    type: array
    items:
      $ref: '#/definitions/TargetGrant'
  TargetPrefix:
    type: string
  MetadataKey:
    type: string
  MetadataEntry:
    type: object
    properties:
      Name:
        $ref: '#/definitions/MetadataKey'
        description: <p/>
      Value:
        $ref: '#/definitions/MetadataValue'
        description: <p/>
    description: A metadata key-value pair to store with an object.
  MetricsAndOperator:
    type: object
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: The prefix used when evaluating an AND predicate.
      Tags:
        $ref: '#/definitions/TagSet'
        description: The list of tags used when evaluating an AND predicate.
    description: <p/>
    xml:
      wrapped: false
  MultipartUpload:
    type: object
    properties:
      UploadId:
        $ref: '#/definitions/MultipartUploadId'
        description: Upload ID that identifies the multipart upload.
      Key:
        $ref: '#/definitions/ObjectKey'
        description: Key of the object for which the multipart upload was initiated.
      Initiated:
        $ref: '#/definitions/Initiated'
        description: Date and time at which the multipart upload was initiated.
      StorageClass:
        $ref: '#/definitions/StorageClass'
        description: The class of storage used to store the object.
      Owner:
        $ref: '#/definitions/Owner'
        description: <p/>
      Initiator:
        $ref: '#/definitions/Initiator'
        description: Identifies who initiated the multipart upload.
    description: <p/>
  TransitionStorageClass:
    type: string
    enum:
      - GLACIER
      - STANDARD_IA
      - ONEZONE_IA
      - INTELLIGENT_TIERING
      - DEEP_ARCHIVE
  NoncurrentVersionTransition:
    type: object
    properties:
      NoncurrentDays:
        $ref: '#/definitions/Days'
        description: 'Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">How Amazon S3 Calculates When an Object Became Noncurrent</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
      StorageClass:
        $ref: '#/definitions/TransitionStorageClass'
        description: The class of storage used to store the object.
    description: 'Container for the transition rule that describes when noncurrent objects transition to the <code>STANDARD_IA</code>, <code>ONEZONE_IA</code>, <code>INTELLIGENT_TIERING</code>, <code>GLACIER</code>, or <code>DEEP_ARCHIVE</code> storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to the <code>STANDARD_IA</code>, <code>ONEZONE_IA</code>, <code>INTELLIGENT_TIERING</code>, <code>GLACIER</code>, or <code>DEEP_ARCHIVE</code> storage class at a specific period in the object''s lifetime.'
  S3KeyFilter:
    type: object
    properties:
      FilterRules:
        $ref: '#/definitions/FilterRuleList'
        description: <p/>
    description: A container for object key name prefix and suffix filtering rules.
  Size:
    type: integer
  ObjectStorageClass:
    type: string
    enum:
      - STANDARD
      - REDUCED_REDUNDANCY
      - GLACIER
      - STANDARD_IA
      - ONEZONE_IA
      - INTELLIGENT_TIERING
      - DEEP_ARCHIVE
  Object:
    type: object
    properties:
      Key:
        $ref: '#/definitions/ObjectKey'
        description: <p/>
      LastModified:
        $ref: '#/definitions/LastModified'
        description: <p/>
      ETag:
        $ref: '#/definitions/ETag'
        description: <p/>
      Size:
        $ref: '#/definitions/Size'
        description: <p/>
      StorageClass:
        $ref: '#/definitions/ObjectStorageClass'
        description: The class of storage used to store the object.
      Owner:
        $ref: '#/definitions/Owner'
        description: <p/>
    description: <p/>
  ObjectIdentifier:
    type: object
    required:
      - Key
    properties:
      Key:
        $ref: '#/definitions/ObjectKey'
        description: Key name of the object to delete.
      VersionId:
        $ref: '#/definitions/ObjectVersionId'
        description: VersionId for the specific version of the object to delete.
    description: <p/>
  ObjectLockToken:
    type: string
  ObjectVersionStorageClass:
    type: string
    enum:
      - STANDARD
  ObjectVersion:
    type: object
    properties:
      ETag:
        $ref: '#/definitions/ETag'
        description: <p/>
      Size:
        $ref: '#/definitions/Size'
        description: Size in bytes of the object.
      StorageClass:
        $ref: '#/definitions/ObjectVersionStorageClass'
        description: The class of storage used to store the object.
      Key:
        $ref: '#/definitions/ObjectKey'
        description: The object key.
      VersionId:
        $ref: '#/definitions/ObjectVersionId'
        description: Version ID of an object.
      IsLatest:
        $ref: '#/definitions/IsLatest'
        description: Specifies whether the object is (true) or is not (false) the latest version of an object.
      LastModified:
        $ref: '#/definitions/LastModified'
        description: Date and time the object was last modified.
      Owner:
        $ref: '#/definitions/Owner'
        description: <p/>
    description: <p/>
  S3Location:
    type: object
    required:
      - BucketName
      - Prefix
    properties:
      BucketName:
        $ref: '#/definitions/BucketName'
        description: The name of the bucket where the restore results will be placed.
      Prefix:
        $ref: '#/definitions/LocationPrefix'
        description: The prefix that is prepended to the restore results for this request.
      Encryption:
        $ref: '#/definitions/Encryption'
        description: <p/>
      CannedACL:
        $ref: '#/definitions/ObjectCannedACL'
        description: The canned ACL to apply to the restore results.
      AccessControlList:
        $ref: '#/definitions/Grants'
        description: A list of grants that control access to the staged results.
      Tagging:
        $ref: '#/definitions/Tagging'
        description: The tag-set that is applied to the restore results.
      UserMetadata:
        $ref: '#/definitions/UserMetadata'
        description: A list of metadata to store with the restore results in S3.
      StorageClass:
        $ref: '#/definitions/StorageClass'
        description: The class of storage used to store the restore results.
    description: Describes an S3 location that will receive the results of the restore request.
  OutputSerialization:
    type: object
    properties:
      CSV:
        $ref: '#/definitions/CSVOutput'
        description: Describes the serialization of CSV-encoded Select results.
      JSON:
        $ref: '#/definitions/JSONOutput'
        description: Specifies JSON as request's output serialization format.
    description: Describes how results of the Select job are serialized.
  Part:
    type: object
    properties:
      PartNumber:
        $ref: '#/definitions/PartNumber'
        description: 'Part number identifying the part. This is a positive integer between 1 and 10,000.'
      LastModified:
        $ref: '#/definitions/LastModified'
        description: Date and time at which the part was uploaded.
      ETag:
        $ref: '#/definitions/ETag'
        description: Entity tag returned when the part was uploaded.
      Size:
        $ref: '#/definitions/Size'
        description: Size in bytes of the uploaded part data.
    description: <p/>
  Priority:
    type: integer
  Progress:
    type: object
    properties:
      BytesScanned:
        $ref: '#/definitions/BytesScanned'
        description: The current number of object bytes scanned.
      BytesProcessed:
        $ref: '#/definitions/BytesProcessed'
        description: The current number of uncompressed object bytes processed.
      BytesReturned:
        $ref: '#/definitions/BytesReturned'
        description: The current number of bytes of records payload data returned.
    description: <p/>
  ProgressEvent:
    type: object
    properties:
      Details:
        $ref: '#/definitions/Progress'
        description: The Progress event details.
    description: <p/>
  Protocol:
    type: string
    enum:
      - http
      - https
  PutBucketAccelerateConfigurationRequest:
    type: object
    required:
      - AccelerateConfiguration
    properties:
      AccelerateConfiguration:
        $ref: '#/definitions/AccelerateConfiguration'
        description: Specifies the Accelerate Configuration you want to set for the bucket.
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketAclRequest:
    type: object
    properties:
      AccessControlPolicy:
        $ref: '#/definitions/AccessControlPolicy'
        description: Contains the elements that set the ACL permissions for an object per grantee.
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketAnalyticsConfigurationRequest:
    type: object
    required:
      - AnalyticsConfiguration
    properties:
      AnalyticsConfiguration:
        $ref: '#/definitions/AnalyticsConfiguration'
        description: The configuration and any analyses for the analytics filter.
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketCorsRequest:
    type: object
    required:
      - CORSConfiguration
    properties:
      CORSConfiguration:
        $ref: '#/definitions/CORSConfiguration'
        description: <p/>
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketEncryptionRequest:
    type: object
    required:
      - ServerSideEncryptionConfiguration
    properties:
      ServerSideEncryptionConfiguration:
        $ref: '#/definitions/ServerSideEncryptionConfiguration'
        description: <p/>
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketInventoryConfigurationRequest:
    type: object
    required:
      - InventoryConfiguration
    properties:
      InventoryConfiguration:
        $ref: '#/definitions/InventoryConfiguration'
        description: Specifies the inventory configuration.
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketLifecycleConfigurationRequest:
    type: object
    properties:
      LifecycleConfiguration:
        $ref: '#/definitions/BucketLifecycleConfiguration'
        description: <p/>
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketLifecycleRequest:
    type: object
    properties:
      LifecycleConfiguration:
        $ref: '#/definitions/LifecycleConfiguration'
        description: <p/>
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketLoggingRequest:
    type: object
    required:
      - BucketLoggingStatus
    properties:
      BucketLoggingStatus:
        $ref: '#/definitions/BucketLoggingStatus'
        description: <p/>
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketMetricsConfigurationRequest:
    type: object
    required:
      - MetricsConfiguration
    properties:
      MetricsConfiguration:
        $ref: '#/definitions/MetricsConfiguration'
        description: Specifies the metrics configuration.
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketNotificationConfigurationRequest:
    type: object
    required:
      - NotificationConfiguration
    properties:
      NotificationConfiguration:
        $ref: '#/definitions/NotificationConfiguration'
        description: <p/>
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketNotificationRequest:
    type: object
    required:
      - NotificationConfiguration
    properties:
      NotificationConfiguration:
        $ref: '#/definitions/NotificationConfigurationDeprecated'
        description: <p/>
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketPolicyRequest:
    type: object
    required:
      - Policy
    properties:
      Policy:
        $ref: '#/definitions/Policy'
        description: The bucket policy as a JSON document.
  PutBucketReplicationRequest:
    type: object
    required:
      - ReplicationConfiguration
    properties:
      ReplicationConfiguration:
        $ref: '#/definitions/ReplicationConfiguration'
        description: <p/>
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  RequestPaymentConfiguration:
    type: object
    required:
      - Payer
    properties:
      Payer:
        $ref: '#/definitions/Payer'
        description: Specifies who pays for the download and request fees.
    description: <p/>
  PutBucketRequestPaymentRequest:
    type: object
    required:
      - RequestPaymentConfiguration
    properties:
      RequestPaymentConfiguration:
        $ref: '#/definitions/RequestPaymentConfiguration'
        description: <p/>
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  Tagging:
    type: object
    required:
      - TagSet
    properties:
      TagSet:
        $ref: '#/definitions/TagSet'
        description: <p/>
    description: <p/>
  PutBucketTaggingRequest:
    type: object
    required:
      - Tagging
    properties:
      Tagging:
        $ref: '#/definitions/Tagging'
        description: <p/>
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  VersioningConfiguration:
    type: object
    properties:
      MFADelete:
        $ref: '#/definitions/MFADelete'
        description: 'Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.'
      Status:
        $ref: '#/definitions/BucketVersioningStatus'
        description: The versioning state of the bucket.
    description: 'Describes the versioning state of an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html">PUT Bucket versioning</a> in the <i>Amazon Simple Storage Service API Reference</i>.'
  PutBucketVersioningRequest:
    type: object
    required:
      - VersioningConfiguration
    properties:
      VersioningConfiguration:
        $ref: '#/definitions/VersioningConfiguration'
        description: <p/>
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  WebsiteConfiguration:
    type: object
    properties:
      ErrorDocument:
        $ref: '#/definitions/ErrorDocument'
        description: The name of the error document for the website.
      IndexDocument:
        $ref: '#/definitions/IndexDocument'
        description: The name of the index document for the website.
      RedirectAllRequestsTo:
        $ref: '#/definitions/RedirectAllRequestsTo'
        description: '<p>The redirect behavior for every request to this bucket''s website endpoint.</p> <important> <p>If you specify this property, you can''t specify any other property.</p> </important>'
      RoutingRules:
        $ref: '#/definitions/RoutingRules'
        description: Rules that define when a redirect is applied and the redirect behavior.
    description: Specifies website configuration parameters for an Amazon S3 bucket.
  PutBucketWebsiteRequest:
    type: object
    required:
      - WebsiteConfiguration
    properties:
      WebsiteConfiguration:
        $ref: '#/definitions/WebsiteConfiguration'
        description: <p/>
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutObjectAclRequest:
    type: object
    properties:
      AccessControlPolicy:
        $ref: '#/definitions/AccessControlPolicy'
        description: Contains the elements that set the ACL permissions for an object per grantee.
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutObjectLegalHoldRequest:
    type: object
    properties:
      LegalHold:
        $ref: '#/definitions/ObjectLockLegalHold'
        description: Container element for the Legal Hold configuration you want to apply to the specified object.
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutObjectLockConfigurationRequest:
    type: object
    properties:
      ObjectLockConfiguration:
        $ref: '#/definitions/ObjectLockConfiguration'
        description: The object lock configuration that you want to apply to the specified bucket.
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutObjectRequest:
    type: object
    properties:
      Body:
        $ref: '#/definitions/Body'
        description: Object data.
      Metadata:
        $ref: '#/definitions/Metadata'
        description: A map of metadata to store with the object in S3.
  PutObjectRetentionRequest:
    type: object
    properties:
      Retention:
        $ref: '#/definitions/ObjectLockRetention'
        description: The container element for the Object Retention configuration.
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutObjectTaggingRequest:
    type: object
    required:
      - Tagging
    properties:
      Tagging:
        $ref: '#/definitions/Tagging'
        description: <p/>
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutPublicAccessBlockRequest:
    type: object
    required:
      - PublicAccessBlockConfiguration
    properties:
      PublicAccessBlockConfiguration:
        $ref: '#/definitions/PublicAccessBlockConfiguration'
        description: 'The <code>PublicAccessBlock</code> configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  QueueArn:
    type: string
  QueueConfiguration:
    type: object
    required:
      - QueueArn
      - Events
    properties:
      Id:
        $ref: '#/definitions/NotificationId'
      QueueArn:
        $ref: '#/definitions/QueueArn'
        description: The Amazon Resource Name (ARN) of the Amazon SQS queue to which Amazon S3 publishes a message when it detects events of the specified type.
      Events:
        $ref: '#/definitions/EventList'
        description: <p/>
      Filter:
        $ref: '#/definitions/NotificationConfigurationFilter'
        description: <p/>
    description: Specifies the configuration for publishing messages to an Amazon Simple Queue Service (Amazon SQS) queue when Amazon S3 detects specified events.
  RecordsEvent:
    type: object
    properties:
      Payload:
        $ref: '#/definitions/Body'
        description: 'The byte array of partial, one or more result records.'
    description: <p/>
  ReplaceKeyPrefixWith:
    type: string
  ReplaceKeyWith:
    type: string
  Redirect:
    type: object
    properties:
      HostName:
        $ref: '#/definitions/HostName'
        description: The host name to use in the redirect request.
      HttpRedirectCode:
        $ref: '#/definitions/HttpRedirectCode'
        description: The HTTP redirect code to use on the response. Not required if one of the siblings is present.
      Protocol:
        $ref: '#/definitions/Protocol'
        description: Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
      ReplaceKeyPrefixWith:
        $ref: '#/definitions/ReplaceKeyPrefixWith'
        description: 'The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix <code>docs/</code> (objects in the <code>docs/</code> folder) to <code>documents/</code>, you can set a condition block with <code>KeyPrefixEquals</code> set to <code>docs/</code> and in the Redirect set <code>ReplaceKeyPrefixWith</code> to <code>/documents</code>. Not required if one of the siblings is present. Can be present only if <code>ReplaceKeyWith</code> is not provided.'
      ReplaceKeyWith:
        $ref: '#/definitions/ReplaceKeyWith'
        description: 'The specific object key to use in the redirect request. For example, redirect request to <code>error.html</code>. Not required if one of the siblings is present. Can be present only if <code>ReplaceKeyPrefixWith</code> is not provided.'
    description: 'Specifies how requests are redirected. In the event of an error, you can specify a different error code to return.'
  ReplicationRuleFilter:
    type: object
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: An object keyname prefix that identifies the subset of objects to which the rule applies.
      Tag:
        $ref: '#/definitions/Tag'
        description: <p>A container for specifying a tag key and value. </p> <p>The rule applies only to objects that have the tag in their tag set.</p>
      And:
        $ref: '#/definitions/ReplicationRuleAndOperator'
        description: '<p>A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter. For example: </p> <ul> <li> <p>If you specify both a <code>Prefix</code> and a <code>Tag</code> filter, wrap these filters in an <code>And</code> tag.</p> </li> <li> <p>If you specify a filter based on multiple tags, wrap the <code>Tag</code> elements in an <code>And</code> tag.</p> </li> </ul>'
    description: 'A filter that identifies the subset of objects to which the replication rule applies. A <code>Filter</code> must specify exactly one <code>Prefix</code>, <code>Tag</code>, or an <code>And</code> child element.'
  ReplicationRuleStatus:
    type: string
    enum:
      - Enabled
      - Disabled
  SourceSelectionCriteria:
    type: object
    properties:
      SseKmsEncryptedObjects:
        $ref: '#/definitions/SseKmsEncryptedObjects'
        description: ' A container for filter information for the selection of Amazon S3 objects encrypted with AWS KMS. If you include <code>SourceSelectionCriteria</code> in the replication configuration, this element is required. '
    description: 'A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects. Currently, Amazon S3 supports only the filter that you can specify for objects created with server-side encryption using an AWS KMS-Managed Key (SSE-KMS).'
  ReplicationRule:
    type: object
    required:
      - Status
      - Destination
    properties:
      ID:
        $ref: '#/definitions/ID'
        description: A unique identifier for the rule. The maximum value is 255 characters.
      Priority:
        $ref: '#/definitions/Priority'
        description: '<p>The priority associated with the rule. If you specify multiple rules in a replication configuration, Amazon S3 prioritizes the rules to prevent conflicts when filtering. If two or more rules identify the same object based on a specified filter, the rule with higher priority takes precedence. For example:</p> <ul> <li> <p>Same object quality prefix based filter criteria If prefixes you specified in multiple rules overlap </p> </li> <li> <p>Same object qualify tag based filter criteria specified in multiple rules</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html">Cross-Region Replication (CRR)</a> in the <i>Amazon S3 Developer Guide</i>.</p>'
      Prefix:
        $ref: '#/definitions/Prefix'
        description: 'An object keyname prefix that identifies the object or objects to which the rule applies. The maximum prefix length is 1,024 characters. To include all objects in a bucket, specify an empty string. '
      Filter:
        $ref: '#/definitions/ReplicationRuleFilter'
        description: <p/>
      Status:
        $ref: '#/definitions/ReplicationRuleStatus'
        description: Specifies whether the rule is enabled.
      SourceSelectionCriteria:
        $ref: '#/definitions/SourceSelectionCriteria'
        description: 'A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects. Currently, Amazon S3 supports only the filter that you can specify for objects created with server-side encryption using an AWS KMS-Managed Key (SSE-KMS).'
      Destination:
        $ref: '#/definitions/Destination'
        description: A container for information about the replication destination.
      DeleteMarkerReplication:
        $ref: '#/definitions/DeleteMarkerReplication'
        description: <p/>
    description: Specifies which Amazon S3 objects to replicate and where to store the replicas.
  ReplicationRuleAndOperator:
    type: object
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: <p/>
      Tags:
        $ref: '#/definitions/TagSet'
        description: <p/>
    description: <p/>
    xml:
      wrapped: false
  RequestProgress:
    type: object
    properties:
      Enabled:
        $ref: '#/definitions/EnableRequestProgress'
        description: 'Specifies whether periodic QueryProgress frames should be sent. Valid values: TRUE, FALSE. Default value: FALSE.'
    description: <p/>
  RestoreOutputPath:
    type: string
  RestoreRequest:
    type: object
    properties:
      Days:
        $ref: '#/definitions/Days'
        description: Lifetime of the active copy in days. Do not use with restores that specify OutputLocation.
      GlacierJobParameters:
        $ref: '#/definitions/GlacierJobParameters'
        description: Glacier related parameters pertaining to this job. Do not use with restores that specify OutputLocation.
      Type:
        $ref: '#/definitions/RestoreRequestType'
        description: Type of restore request.
      Tier:
        $ref: '#/definitions/Tier'
        description: Glacier retrieval tier at which the restore will be processed.
      Description:
        $ref: '#/definitions/Description'
        description: The optional description for the job.
      SelectParameters:
        $ref: '#/definitions/SelectParameters'
        description: Describes the parameters for Select job types.
      OutputLocation:
        $ref: '#/definitions/OutputLocation'
        description: Describes the location where the restore job's output is stored.
    description: Container for restore job parameters.
  RestoreObjectRequest:
    type: object
    properties:
      RestoreRequest:
        $ref: '#/definitions/RestoreRequest'
        description: <p/>
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  RoutingRule:
    type: object
    required:
      - Redirect
    properties:
      Condition:
        $ref: '#/definitions/Condition'
        description: 'A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the <code>/docs</code> folder, redirect to the <code>/documents</code> folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.'
      Redirect:
        $ref: '#/definitions/Redirect'
        description: 'Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can specify a different error code to return.'
    description: Specifies the redirect behavior and when a redirect is applied.
  Transition:
    type: object
    properties:
      Date:
        $ref: '#/definitions/Date'
        description: Indicates when objects are transitioned to the specified storage class. The date value must be in ISO 8601 format. The time is always midnight UTC.
      Days:
        $ref: '#/definitions/Days'
        description: Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer.
      StorageClass:
        $ref: '#/definitions/TransitionStorageClass'
        description: The storage class to which you want the object to transition.
    description: Specifies when an object transitions to a specified storage class.
  Rule:
    type: object
    required:
      - Prefix
      - Status
    properties:
      Expiration:
        $ref: '#/definitions/LifecycleExpiration'
        description: <p/>
      ID:
        $ref: '#/definitions/ID'
        description: Unique identifier for the rule. The value can't be longer than 255 characters.
      Prefix:
        $ref: '#/definitions/Prefix'
        description: Object key prefix that identifies one or more objects to which this rule applies.
      Status:
        $ref: '#/definitions/ExpirationStatus'
        description: 'If <code>Enabled</code>, the rule is currently being applied. If <code>Disabled</code>, the rule is not currently being applied.'
      Transition:
        $ref: '#/definitions/Transition'
        description: <p/>
      NoncurrentVersionTransition:
        $ref: '#/definitions/NoncurrentVersionTransition'
        description: <p/>
      NoncurrentVersionExpiration:
        $ref: '#/definitions/NoncurrentVersionExpiration'
        description: <p/>
      AbortIncompleteMultipartUpload:
        $ref: '#/definitions/AbortIncompleteMultipartUpload'
        description: <p/>
    description: 'Specifies lifecycle rules for an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html">PUT Bucket lifecycle</a> in the <i>Amazon Simple Storage Service API Reference</i>.'
  UserMetadata:
    type: array
    items:
      $ref: '#/definitions/MetadataEntry'
  StatsEvent:
    type: object
    properties:
      Details:
        $ref: '#/definitions/Stats'
        description: The Stats event details.
    description: <p/>
  SelectObjectContentEventStream:
    type: object
    properties:
      Records:
        $ref: '#/definitions/RecordsEvent'
        description: The Records Event.
      Stats:
        $ref: '#/definitions/StatsEvent'
        description: The Stats Event.
      Progress:
        $ref: '#/definitions/ProgressEvent'
        description: The Progress Event.
      Cont:
        $ref: '#/definitions/ContinuationEvent'
        description: The Continuation Event.
      End:
        $ref: '#/definitions/EndEvent'
        description: The End Event.
    description: <p/>
  SelectObjectContentRequest:
    type: object
    required:
      - Expression
      - ExpressionType
      - InputSerialization
      - OutputSerialization
    properties:
      Expression:
        $ref: '#/definitions/Expression'
        description: The expression that is used to query the object.
      ExpressionType:
        $ref: '#/definitions/ExpressionType'
        description: 'The type of the provided expression (for example., SQL).'
      RequestProgress:
        $ref: '#/definitions/RequestProgress'
        description: Specifies if periodic request progress information should be enabled.
      InputSerialization:
        $ref: '#/definitions/InputSerialization'
        description: Describes the format of the data in the object that is being queried.
      OutputSerialization:
        $ref: '#/definitions/OutputSerialization'
        description: Describes the format of the data that you want Amazon S3 to return in response.
    description: 'Request to filter the contents of an Amazon S3 object based on a simple Structured Query Language (SQL) statement. In the request, along with the SQL expression, you must specify a data serialization format (JSON or CSV) of the object. Amazon S3 uses this to parse object data into records. It returns only records that match the specified SQL expression. You must also specify the data serialization format for the response. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectSELECTContent.html">S3Select API Documentation</a>.'
  ServerSideEncryptionByDefault:
    type: object
    required:
      - SSEAlgorithm
    properties:
      SSEAlgorithm:
        $ref: '#/definitions/ServerSideEncryption'
        description: Server-side encryption algorithm to use for the default encryption.
      KMSMasterKeyID:
        $ref: '#/definitions/SSEKMSKeyId'
        description: 'KMS master key ID to use for the default encryption. This parameter is allowed if and only if <code>SSEAlgorithm</code> is set to <code>aws:kms</code>.'
    description: 'Describes the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn''t specify any server-side encryption, this default encryption will be applied. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html">PUT Bucket encryption</a> in the <i>Amazon Simple Storage Service API Reference</i>.'
  ServerSideEncryptionRule:
    type: object
    properties:
      ApplyServerSideEncryptionByDefault:
        $ref: '#/definitions/ServerSideEncryptionByDefault'
        description: 'Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn''t specify any server-side encryption, this default encryption will be applied.'
    description: Specifies the default server-side encryption configuration.
  SseKmsEncryptedObjects:
    type: object
    required:
      - Status
    properties:
      Status:
        $ref: '#/definitions/SseKmsEncryptedObjectsStatus'
        description: Specifies whether Amazon S3 replicates objects created with server-side encryption using an AWS KMS-managed key.
    description: A container for filter information for the selection of S3 objects encrypted with AWS KMS.
  SseKmsEncryptedObjectsStatus:
    type: string
    enum:
      - Enabled
      - Disabled
  Stats:
    type: object
    properties:
      BytesScanned:
        $ref: '#/definitions/BytesScanned'
        description: The total number of object bytes scanned.
      BytesProcessed:
        $ref: '#/definitions/BytesProcessed'
        description: The total number of uncompressed object bytes processed.
      BytesReturned:
        $ref: '#/definitions/BytesReturned'
        description: The total number of bytes of records payload data returned.
    description: <p/>
  StorageClassAnalysisDataExport:
    type: object
    required:
      - OutputSchemaVersion
      - Destination
    properties:
      OutputSchemaVersion:
        $ref: '#/definitions/StorageClassAnalysisSchemaVersion'
        description: The version of the output schema to use when exporting data. Must be <code>V_1</code>.
      Destination:
        $ref: '#/definitions/AnalyticsExportDestination'
        description: The place to store the data for an analysis.
    description: <p/>
  StorageClassAnalysisSchemaVersion:
    type: string
    enum:
      - V_1
  Value:
    type: string
  TargetGrant:
    type: object
    properties:
      Grantee:
        $ref: '#/definitions/Grantee'
        description: <p/>
      Permission:
        $ref: '#/definitions/BucketLogsPermission'
        description: Logging permissions assigned to the Grantee for the bucket.
    description: <p/>
  TopicArn:
    type: string
  TopicConfiguration:
    type: object
    required:
      - TopicArn
      - Events
    properties:
      Id:
        $ref: '#/definitions/NotificationId'
      TopicArn:
        $ref: '#/definitions/TopicArn'
        description: The Amazon Resource Name (ARN) of the Amazon SNS topic to which Amazon S3 publishes a message when it detects events of the specified type.
      Events:
        $ref: '#/definitions/EventList'
        description: 'The Amazon S3 bucket event about which to send notifications. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Supported Event Types</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
      Filter:
        $ref: '#/definitions/NotificationConfigurationFilter'
        description: <p/>
    description: A container for specifying the configuration for publication of messages to an Amazon Simple Notification Service (Amazon SNS) topic when Amazon S3 detects specified events.
  UploadPartCopyRequest:
    type: object
    properties: {}
  UploadPartRequest:
    type: object
    properties:
      Body:
        $ref: '#/definitions/Body'
        description: Object data.
