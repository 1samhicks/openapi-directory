swagger: '2.0'
schemes:
  - https
  - http
host: s3.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: <p/>
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon Simple Storage Service
  version: '2006-03-01'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/s3-2006-03-01.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: s3
  x-serviceName: s3
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/s3/'
consumes:
  - text/xml
produces:
  - text/xml
securityDefinitions:
  hmac:
    description: Amazon S3 signature
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsS3
security:
  - hmac: []
parameters:
  x-amz-security-token:
    in: header
    name: x-amz-security-token
    required: false
    type: string
paths:
  /:
    get:
      description: Returns a list of all buckets owned by the authenticated sender of the request.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTServiceGET.html'
      operationId: ListBuckets
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBucketsOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}':
    delete:
      description: Deletes the bucket. All objects (including all object versions and Delete Markers) in the bucket must be deleted before the bucket itself can be deleted.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETE.html'
      operationId: DeleteBucket
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
      responses:
        '204':
          description: Success
    get:
      description: Returns some or all (up to 1000) of the objects in a bucket. You can use the request parameters as selection criteria to return a subset of the objects in a bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGET.html'
      operationId: ListObjects
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: A delimiter is a character you use to group keys.
          in: query
          name: delimiter
          required: false
          type: string
        - description: 'Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.'
          enum:
            - url
          in: query
          name: encoding-type
          required: false
          type: string
        - description: Specifies the key to start with when listing objects in a bucket.
          in: query
          name: marker
          required: false
          type: string
        - description: Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.
          in: query
          name: max-keys
          required: false
          type: integer
        - description: Limits the response to keys that begin with the specified prefix.
          in: query
          name: prefix
          required: false
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxKeys
          required: false
          type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListObjectsOutput'
        '480':
          description: NoSuchBucket
          schema:
            $ref: '#/definitions/NoSuchBucket'
    head:
      description: This operation is useful to determine if a bucket exists and you have permission to access it.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketHEAD.html'
      operationId: HeadBucket
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchBucket
          schema:
            $ref: '#/definitions/NoSuchBucket'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: Creates a new bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUT.html'
      operationId: CreateBucket
      parameters:
        - description: The canned ACL to apply to the bucket.
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
          in: header
          name: x-amz-acl
          required: false
          type: string
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: 'Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.'
          in: header
          name: x-amz-grant-full-control
          required: false
          type: string
        - description: Allows grantee to list the objects in the bucket.
          in: header
          name: x-amz-grant-read
          required: false
          type: string
        - description: Allows grantee to read the bucket ACL.
          in: header
          name: x-amz-grant-read-acp
          required: false
          type: string
        - description: 'Allows grantee to create, overwrite, and delete any object in the bucket.'
          in: header
          name: x-amz-grant-write
          required: false
          type: string
        - description: Allows grantee to write the ACL for the applicable bucket.
          in: header
          name: x-amz-grant-write-acp
          required: false
          type: string
        - description: Specifies whether you want Amazon S3 object lock to be enabled for the new bucket.
          in: header
          name: x-amz-bucket-object-lock-enabled
          required: false
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            properties:
              CreateBucketConfiguration:
                description: <p/>
                properties:
                  LocationConstraint:
                    $ref: '#/definitions/BucketLocationConstraint'
                    description: 'Specifies the region where the bucket will be created. If you don''t specify a region, the bucket is created in US East (N. Virginia) Region (us-east-1).'
                type: object
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateBucketOutput'
        '480':
          description: BucketAlreadyExists
          schema:
            $ref: '#/definitions/BucketAlreadyExists'
        '481':
          description: BucketAlreadyOwnedByYou
          schema:
            $ref: '#/definitions/BucketAlreadyOwnedByYou'
  '/{Bucket}#accelerate':
    get:
      description: Returns the accelerate configuration of a bucket.
      operationId: GetBucketAccelerateConfiguration
      parameters:
        - description: Name of the bucket for which the accelerate configuration is retrieved.
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: accelerate
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketAccelerateConfigurationOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: Sets the accelerate configuration of an existing bucket.
      operationId: PutBucketAccelerateConfiguration
      parameters:
        - description: Name of the bucket for which the accelerate configuration is set.
          in: path
          name: Bucket
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AccelerateConfiguration:
                description: 'Configures the transfer acceleration state for an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html">Amazon S3 Transfer Acceleration</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
                properties:
                  Status:
                    $ref: '#/definitions/BucketAccelerateStatus'
                    description: Specifies the transfer acceleration status of the bucket.
                type: object
            required:
              - AccelerateConfiguration
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: accelerate
          required: true
          type: boolean
      responses:
        '200':
          description: Success
  '/{Bucket}#acl':
    get:
      description: Gets the access control policy for the bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETacl.html'
      operationId: GetBucketAcl
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: acl
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketAclOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: Sets the permissions on a bucket using access control lists (ACL).
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTacl.html'
      operationId: PutBucketAcl
      parameters:
        - description: The canned ACL to apply to the bucket.
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
          in: header
          name: x-amz-acl
          required: false
          type: string
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: <p/>
          in: header
          name: Content-MD5
          required: false
          type: string
        - description: 'Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.'
          in: header
          name: x-amz-grant-full-control
          required: false
          type: string
        - description: Allows grantee to list the objects in the bucket.
          in: header
          name: x-amz-grant-read
          required: false
          type: string
        - description: Allows grantee to read the bucket ACL.
          in: header
          name: x-amz-grant-read-acp
          required: false
          type: string
        - description: 'Allows grantee to create, overwrite, and delete any object in the bucket.'
          in: header
          name: x-amz-grant-write
          required: false
          type: string
        - description: Allows grantee to write the ACL for the applicable bucket.
          in: header
          name: x-amz-grant-write-acp
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AccessControlPolicy:
                description: Contains the elements that set the ACL permissions for an object per grantee.
                properties:
                  Grants:
                    $ref: '#/definitions/Grants'
                    description: A list of grants.
                  Owner:
                    $ref: '#/definitions/Owner'
                    description: Container for the bucket owner's display name and ID.
                type: object
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: acl
          required: true
          type: boolean
      responses:
        '200':
          description: Success
  '/{Bucket}#analytics':
    get:
      description: Lists the analytics configurations for the bucket.
      operationId: ListBucketAnalyticsConfigurations
      parameters:
        - description: The name of the bucket from which analytics configurations are retrieved.
          in: path
          name: Bucket
          required: true
          type: string
        - description: The ContinuationToken that represents a placeholder from where this request should begin.
          in: query
          name: continuation-token
          required: false
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: analytics
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBucketAnalyticsConfigurationsOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}#analytics&id':
    delete:
      description: '<p>Deletes an analytics configuration for the bucket (specified by the analytics configuration ID).</p> <p>To use this operation, you must have permissions to perform the s3:PutAnalyticsConfiguration action. The bucket owner has this permission by default. The bucket owner can grant this permission to others. </p>'
      operationId: DeleteBucketAnalyticsConfiguration
      parameters:
        - description: The name of the bucket from which an analytics configuration is deleted.
          in: path
          name: Bucket
          required: true
          type: string
        - description: The ID that identifies the analytics configuration.
          in: query
          name: id
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: analytics
          required: true
          type: boolean
      responses:
        '204':
          description: Success
    get:
      description: Gets an analytics configuration for the bucket (specified by the analytics configuration ID).
      operationId: GetBucketAnalyticsConfiguration
      parameters:
        - description: The name of the bucket from which an analytics configuration is retrieved.
          in: path
          name: Bucket
          required: true
          type: string
        - description: The ID that identifies the analytics configuration.
          in: query
          name: id
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: analytics
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketAnalyticsConfigurationOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: Sets an analytics configuration for the bucket (specified by the analytics configuration ID).
      operationId: PutBucketAnalyticsConfiguration
      parameters:
        - description: The name of the bucket to which an analytics configuration is stored.
          in: path
          name: Bucket
          required: true
          type: string
        - description: The ID that identifies the analytics configuration.
          in: query
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AnalyticsConfiguration:
                description: '<p> Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETAnalyticsConfig.html">GET Bucket analytics</a> in the <i>Amazon Simple Storage Service API Reference</i>. </p>'
                properties:
                  Filter:
                    $ref: '#/definitions/AnalyticsFilter'
                    description: 'The filter used to describe a set of objects for analyses. A filter must have exactly one prefix, one tag, or one conjunction (AnalyticsAndOperator). If no filter is provided, all objects will be considered in any analysis.'
                  Id:
                    $ref: '#/definitions/AnalyticsId'
                    description: The ID that identifies the analytics configuration.
                  StorageClassAnalysis:
                    $ref: '#/definitions/StorageClassAnalysis'
                    description: ' Contains data related to access patterns to be collected and made available to analyze the tradeoffs between different storage classes. '
                type: object
            required:
              - AnalyticsConfiguration
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: analytics
          required: true
          type: boolean
      responses:
        '200':
          description: Success
  '/{Bucket}#cors':
    delete:
      description: Deletes the CORS configuration information set for the bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEcors.html'
      operationId: DeleteBucketCors
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: cors
          required: true
          type: boolean
      responses:
        '204':
          description: Success
    get:
      description: Returns the CORS configuration for the bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETcors.html'
      operationId: GetBucketCors
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: cors
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketCorsOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: Sets the CORS configuration for a bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTcors.html'
      operationId: PutBucketCors
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: <p/>
          in: header
          name: Content-MD5
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              CORSConfiguration:
                description: 'Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html">Enabling Cross-Origin Resource Sharing</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
                properties:
                  CORSRules:
                    $ref: '#/definitions/CORSRules'
                    description: A set of allowed origins and methods.
                type: object
            required:
              - CORSConfiguration
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: cors
          required: true
          type: boolean
      responses:
        '200':
          description: Success
  '/{Bucket}#delete':
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    post:
      description: This operation enables you to delete multiple objects from a bucket using a single HTTP request. You may specify up to 1000 keys.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/multiobjectdeleteapi.html'
      operationId: DeleteObjects
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: 'The concatenation of the authentication device''s serial number, a space, and the value that is displayed on your authentication device.'
          in: header
          name: x-amz-mfa
          required: false
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
        - description: Specifies whether you want to delete this object even if it has a Governance-type object lock in place. You must have sufficient permissions to perform this operation.
          in: header
          name: x-amz-bypass-governance-retention
          required: false
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            properties:
              Delete:
                description: <p/>
                properties:
                  Objects:
                    $ref: '#/definitions/ObjectIdentifierList'
                    description: <p/>
                  Quiet:
                    $ref: '#/definitions/Quiet'
                    description: 'Element to enable quiet mode for the request. When you add this element, you must set its value to true.'
                type: object
            required:
              - Delete
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: delete
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteObjectsOutput'
  '/{Bucket}#encryption':
    delete:
      description: Deletes the server-side encryption configuration from the bucket.
      operationId: DeleteBucketEncryption
      parameters:
        - description: The name of the bucket containing the server-side encryption configuration to delete.
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: encryption
          required: true
          type: boolean
      responses:
        '204':
          description: Success
    get:
      description: Returns the server-side encryption configuration of a bucket.
      operationId: GetBucketEncryption
      parameters:
        - description: The name of the bucket from which the server-side encryption configuration is retrieved.
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: encryption
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketEncryptionOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: 'Creates a new server-side encryption configuration (or replaces an existing one, if present).'
      operationId: PutBucketEncryption
      parameters:
        - description: 'Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS). For information about the Amazon S3 default encryption feature, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html">Amazon S3 Default Bucket Encryption</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
          in: path
          name: Bucket
          required: true
          type: string
        - description: The base64-encoded 128-bit MD5 digest of the server-side encryption configuration. This parameter is auto-populated when using the command from the CLI.
          in: header
          name: Content-MD5
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ServerSideEncryptionConfiguration:
                description: Specifies the default server-side-encryption configuration.
                properties:
                  Rules:
                    $ref: '#/definitions/ServerSideEncryptionRules'
                    description: Container for information about a particular server-side encryption configuration rule.
                type: object
            required:
              - ServerSideEncryptionConfiguration
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: encryption
          required: true
          type: boolean
      responses:
        '200':
          description: Success
  '/{Bucket}#inventory':
    get:
      description: Returns a list of inventory configurations for the bucket.
      operationId: ListBucketInventoryConfigurations
      parameters:
        - description: The name of the bucket containing the inventory configurations to retrieve.
          in: path
          name: Bucket
          required: true
          type: string
        - description: The marker used to continue an inventory configuration listing that has been truncated. Use the NextContinuationToken from a previously truncated list response to continue the listing. The continuation token is an opaque value that Amazon S3 understands.
          in: query
          name: continuation-token
          required: false
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: inventory
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBucketInventoryConfigurationsOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}#inventory&id':
    delete:
      description: Deletes an inventory configuration (identified by the inventory ID) from the bucket.
      operationId: DeleteBucketInventoryConfiguration
      parameters:
        - description: The name of the bucket containing the inventory configuration to delete.
          in: path
          name: Bucket
          required: true
          type: string
        - description: The ID used to identify the inventory configuration.
          in: query
          name: id
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: inventory
          required: true
          type: boolean
      responses:
        '204':
          description: Success
    get:
      description: Returns an inventory configuration (identified by the inventory ID) from the bucket.
      operationId: GetBucketInventoryConfiguration
      parameters:
        - description: The name of the bucket containing the inventory configuration to retrieve.
          in: path
          name: Bucket
          required: true
          type: string
        - description: The ID used to identify the inventory configuration.
          in: query
          name: id
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: inventory
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketInventoryConfigurationOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: Adds an inventory configuration (identified by the inventory ID) from the bucket.
      operationId: PutBucketInventoryConfiguration
      parameters:
        - description: The name of the bucket where the inventory configuration will be stored.
          in: path
          name: Bucket
          required: true
          type: string
        - description: The ID used to identify the inventory configuration.
          in: query
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              InventoryConfiguration:
                description: 'Specifies the inventory configuration for an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html">GET Bucket inventory</a> in the <i>Amazon Simple Storage Service API Reference</i>. '
                properties:
                  Destination:
                    $ref: '#/definitions/InventoryDestination'
                    description: Contains information about where to publish the inventory results.
                  Filter:
                    $ref: '#/definitions/InventoryFilter'
                    description: Specifies an inventory filter. The inventory only includes objects that meet the filter's criteria.
                  Id:
                    $ref: '#/definitions/InventoryId'
                    description: The ID used to identify the inventory configuration.
                  IncludedObjectVersions:
                    $ref: '#/definitions/InventoryIncludedObjectVersions'
                    description: 'Object versions to include in the inventory list. If set to <code>All</code>, the list includes all the object versions, which adds the version-related fields <code>VersionId</code>, <code>IsLatest</code>, and <code>DeleteMarker</code> to the list. If set to <code>Current</code>, the list does not contain these version-related fields.'
                  IsEnabled:
                    $ref: '#/definitions/IsEnabled'
                    description: 'Specifies whether the inventory is enabled or disabled. If set to <code>True</code>, an inventory list is generated. If set to <code>False</code>, no inventory list is generated.'
                  OptionalFields:
                    $ref: '#/definitions/InventoryOptionalFields'
                    description: Contains the optional fields that are included in the inventory results.
                  Schedule:
                    $ref: '#/definitions/InventorySchedule'
                    description: Specifies the schedule for generating inventory results.
                type: object
            required:
              - InventoryConfiguration
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: inventory
          required: true
          type: boolean
      responses:
        '200':
          description: Success
  '/{Bucket}#lifecycle':
    delete:
      description: Deletes the lifecycle configuration from the bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETElifecycle.html'
      operationId: DeleteBucketLifecycle
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: lifecycle
          required: true
          type: boolean
      responses:
        '204':
          description: Success
    get:
      description: Returns the lifecycle configuration information set on the bucket.
      operationId: GetBucketLifecycleConfiguration
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: lifecycle
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketLifecycleConfigurationOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: 'Sets lifecycle configuration for your bucket. If a lifecycle configuration exists, it replaces it.'
      operationId: PutBucketLifecycleConfiguration
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              LifecycleConfiguration:
                description: 'Specifies the lifecycle configuration for objects in an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html">Object Lifecycle Management</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
                properties:
                  Rules:
                    $ref: '#/definitions/LifecycleRules'
                    description: A lifecycle rule for individual objects in an Amazon S3 bucket.
                type: object
            required:
              - LifecycleConfiguration
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: lifecycle
          required: true
          type: boolean
      responses:
        '200':
          description: Success
  '/{Bucket}#lifecycle&deprecated!':
    get:
      deprecated: true
      description: ' No longer used, see the GetBucketLifecycleConfiguration operation.'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlifecycle.html'
      operationId: GetBucketLifecycle
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: lifecycle
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketLifecycleOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      deprecated: true
      description: ' No longer used, see the PutBucketLifecycleConfiguration operation.'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html'
      operationId: PutBucketLifecycle
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: <p/>
          in: header
          name: Content-MD5
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              LifecycleConfiguration:
                description: <p/>
                properties:
                  Rules:
                    $ref: '#/definitions/Rules'
                    description: <p/>
                type: object
            required:
              - LifecycleConfiguration
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: lifecycle
          required: true
          type: boolean
      responses:
        '200':
          description: Success
  '/{Bucket}#list-type=2':
    get:
      description: 'Returns some or all (up to 1000) of the objects in a bucket. You can use the request parameters as selection criteria to return a subset of the objects in a bucket. Note: ListObjectsV2 is the revised List Objects API and we recommend you use this revised API for new application development.'
      operationId: ListObjectsV2
      parameters:
        - description: Name of the bucket to list.
          in: path
          name: Bucket
          required: true
          type: string
        - description: A delimiter is a character you use to group keys.
          in: query
          name: delimiter
          required: false
          type: string
        - description: 'Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.'
          enum:
            - url
          in: query
          name: encoding-type
          required: false
          type: string
        - description: Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.
          in: query
          name: max-keys
          required: false
          type: integer
        - description: Limits the response to keys that begin with the specified prefix.
          in: query
          name: prefix
          required: false
          type: string
        - description: ContinuationToken indicates Amazon S3 that the list is being continued on this bucket with a token. ContinuationToken is obfuscated and is not a real key
          in: query
          name: continuation-token
          required: false
          type: string
        - description: 'The owner field is not present in listV2 by default, if you want to return owner field with each key in the result then set the fetch owner field to true'
          in: query
          name: fetch-owner
          required: false
          type: boolean
        - description: StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this specified key. StartAfter can be any key in the bucket
          in: query
          name: start-after
          required: false
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxKeys
          required: false
          type: string
        - description: Pagination token
          in: query
          name: ContinuationToken
          required: false
          type: string
        - enum:
            - '2'
          in: query
          name: list-type
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListObjectsV2Output'
        '480':
          description: NoSuchBucket
          schema:
            $ref: '#/definitions/NoSuchBucket'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}#location':
    get:
      description: Returns the region the bucket resides in.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlocation.html'
      operationId: GetBucketLocation
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: location
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketLocationOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}#logging':
    get:
      description: 'Returns the logging status of a bucket and the permissions users have to view and modify that status. To use GET, you must be the bucket owner.'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlogging.html'
      operationId: GetBucketLogging
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: logging
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketLoggingOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: 'Set the logging parameters for a bucket and to specify permissions for who can view and modify the logging parameters. To set the logging status of a bucket, you must be the bucket owner.'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTlogging.html'
      operationId: PutBucketLogging
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: <p/>
          in: header
          name: Content-MD5
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              BucketLoggingStatus:
                description: <p/>
                properties:
                  LoggingEnabled:
                    $ref: '#/definitions/LoggingEnabled'
                    description: <p/>
                type: object
            required:
              - BucketLoggingStatus
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: logging
          required: true
          type: boolean
      responses:
        '200':
          description: Success
  '/{Bucket}#metrics':
    get:
      description: Lists the metrics configurations for the bucket.
      operationId: ListBucketMetricsConfigurations
      parameters:
        - description: The name of the bucket containing the metrics configurations to retrieve.
          in: path
          name: Bucket
          required: true
          type: string
        - description: The marker that is used to continue a metrics configuration listing that has been truncated. Use the NextContinuationToken from a previously truncated list response to continue the listing. The continuation token is an opaque value that Amazon S3 understands.
          in: query
          name: continuation-token
          required: false
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: metrics
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBucketMetricsConfigurationsOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}#metrics&id':
    delete:
      description: Deletes a metrics configuration (specified by the metrics configuration ID) from the bucket.
      operationId: DeleteBucketMetricsConfiguration
      parameters:
        - description: The name of the bucket containing the metrics configuration to delete.
          in: path
          name: Bucket
          required: true
          type: string
        - description: The ID used to identify the metrics configuration.
          in: query
          name: id
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: metrics
          required: true
          type: boolean
      responses:
        '204':
          description: Success
    get:
      description: Gets a metrics configuration (specified by the metrics configuration ID) from the bucket.
      operationId: GetBucketMetricsConfiguration
      parameters:
        - description: The name of the bucket containing the metrics configuration to retrieve.
          in: path
          name: Bucket
          required: true
          type: string
        - description: The ID used to identify the metrics configuration.
          in: query
          name: id
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: metrics
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketMetricsConfigurationOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: Sets a metrics configuration (specified by the metrics configuration ID) for the bucket.
      operationId: PutBucketMetricsConfiguration
      parameters:
        - description: The name of the bucket for which the metrics configuration is set.
          in: path
          name: Bucket
          required: true
          type: string
        - description: The ID used to identify the metrics configuration.
          in: query
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              MetricsConfiguration:
                description: 'Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket. If you''re updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don''t include the elements you want to keep, they are erased. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html"> PUT Bucket metrics</a> in the <i>Amazon Simple Storage Service API Reference</i>.'
                properties:
                  Filter:
                    $ref: '#/definitions/MetricsFilter'
                    description: 'Specifies a metrics configuration filter. The metrics configuration will only include objects that meet the filter''s criteria. A filter must be a prefix, a tag, or a conjunction (MetricsAndOperator).'
                  Id:
                    $ref: '#/definitions/MetricsId'
                    description: The ID used to identify the metrics configuration.
                type: object
            required:
              - MetricsConfiguration
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: metrics
          required: true
          type: boolean
      responses:
        '200':
          description: Success
  '/{Bucket}#notification':
    get:
      description: Returns the notification configuration of a bucket.
      operationId: GetBucketNotificationConfiguration
      parameters:
        - description: Name of the bucket to get the notification configuration for.
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: notification
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/NotificationConfiguration'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: Enables notifications of specified events for a bucket.
      operationId: PutBucketNotificationConfiguration
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              NotificationConfiguration:
                description: 'A container for specifying the notification configuration of the bucket. If this element is empty, notifications are turned off for the bucket.'
                properties:
                  LambdaFunctionConfigurations:
                    $ref: '#/definitions/LambdaFunctionConfigurationList'
                    description: Describes the AWS Lambda functions to invoke and the events for which to invoke them.
                  QueueConfigurations:
                    $ref: '#/definitions/QueueConfigurationList'
                    description: The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.
                  TopicConfigurations:
                    $ref: '#/definitions/TopicConfigurationList'
                    description: The topic to which notifications are sent and the events for which notifications are generated.
                type: object
            required:
              - NotificationConfiguration
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: notification
          required: true
          type: boolean
      responses:
        '200':
          description: Success
  '/{Bucket}#notification&deprecated!':
    get:
      deprecated: true
      description: ' No longer used, see the GetBucketNotificationConfiguration operation.'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETnotification.html'
      operationId: GetBucketNotification
      parameters:
        - description: Name of the bucket to get the notification configuration for.
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: notification
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/NotificationConfigurationDeprecated'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      deprecated: true
      description: ' No longer used, see the PutBucketNotificationConfiguration operation.'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTnotification.html'
      operationId: PutBucketNotification
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: <p/>
          in: header
          name: Content-MD5
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              NotificationConfiguration:
                description: <p/>
                example:
                  QueueConfiguration:
                    Event: 's3:ObjectCreated:Put'
                    Events:
                      - 's3:ObjectCreated:Put'
                    Id: MDQ2OGQ4NDEtOTBmNi00YTM4LTk0NzYtZDIwN2I3NWQ1NjIx
                    Queue: 'arn:aws:sqs:us-east-1:acct-id:S3ObjectCreatedEventQueue'
                  TopicConfiguration:
                    Event: 's3:ObjectCreated:Copy'
                    Events:
                      - 's3:ObjectCreated:Copy'
                    Id: YTVkMWEzZGUtNTY1NS00ZmE2LWJjYjktMmRlY2QwODFkNTJi
                    Topic: 'arn:aws:sns:us-east-1:acct-id:S3ObjectCreatedEventTopic'
                properties:
                  CloudFunctionConfiguration:
                    $ref: '#/definitions/CloudFunctionConfiguration'
                    description: <p/>
                  QueueConfiguration:
                    $ref: '#/definitions/QueueConfigurationDeprecated'
                    description: <p/>
                  TopicConfiguration:
                    $ref: '#/definitions/TopicConfigurationDeprecated'
                    description: <p/>
                type: object
            required:
              - NotificationConfiguration
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: notification
          required: true
          type: boolean
      responses:
        '200':
          description: Success
  '/{Bucket}#object-lock':
    get:
      description: Gets the object lock configuration for a bucket. The rule specified in the object lock configuration will be applied by default to every new object placed in the specified bucket.
      operationId: GetObjectLockConfiguration
      parameters:
        - description: The bucket whose object lock configuration you want to retrieve.
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: object-lock
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetObjectLockConfigurationOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: Places an object lock configuration on the specified bucket. The rule specified in the object lock configuration will be applied by default to every new object placed in the specified bucket.
      operationId: PutObjectLockConfiguration
      parameters:
        - description: The bucket whose object lock configuration you want to create or replace.
          in: path
          name: Bucket
          required: true
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
        - description: A token to allow Amazon S3 object lock to be enabled for an existing bucket.
          in: header
          name: x-amz-bucket-object-lock-token
          required: false
          type: string
        - description: The MD5 hash for the request body.
          in: header
          name: Content-MD5
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ObjectLockConfiguration:
                description: The container element for object lock configuration parameters.
                properties:
                  ObjectLockEnabled:
                    $ref: '#/definitions/ObjectLockEnabled'
                    description: Indicates whether this bucket has an object lock configuration enabled.
                  Rule:
                    $ref: '#/definitions/ObjectLockRule'
                    description: The object lock rule in place for the specified object.
                type: object
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: object-lock
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutObjectLockConfigurationOutput'
  '/{Bucket}#policy':
    delete:
      description: Deletes the policy from the bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEpolicy.html'
      operationId: DeleteBucketPolicy
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: policy
          required: true
          type: boolean
      responses:
        '204':
          description: Success
    get:
      description: Returns the policy of a specified bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETpolicy.html'
      operationId: GetBucketPolicy
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: policy
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketPolicyOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: Applies an Amazon S3 bucket policy to an Amazon S3 bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTpolicy.html'
      operationId: PutBucketPolicy
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: <p/>
          in: header
          name: Content-MD5
          required: false
          type: string
        - description: Set this parameter to true to confirm that you want to remove your permissions to change this bucket policy in the future.
          in: header
          name: x-amz-confirm-remove-self-bucket-access
          required: false
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            properties:
              Policy:
                description: The bucket policy as a JSON document.
                type: string
            required:
              - Policy
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: policy
          required: true
          type: boolean
      responses:
        '200':
          description: Success
  '/{Bucket}#policyStatus':
    get:
      description: 'Retrieves the policy status for an Amazon S3 bucket, indicating whether the bucket is public.'
      operationId: GetBucketPolicyStatus
      parameters:
        - description: The name of the Amazon S3 bucket whose policy status you want to retrieve.
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: policyStatus
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketPolicyStatusOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}#publicAccessBlock':
    delete:
      description: Removes the <code>PublicAccessBlock</code> configuration from an Amazon S3 bucket.
      operationId: DeletePublicAccessBlock
      parameters:
        - description: 'The Amazon S3 bucket whose <code>PublicAccessBlock</code> configuration you want to delete. '
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: publicAccessBlock
          required: true
          type: boolean
      responses:
        '204':
          description: Success
    get:
      description: Retrieves the <code>PublicAccessBlock</code> configuration for an Amazon S3 bucket.
      operationId: GetPublicAccessBlock
      parameters:
        - description: 'The name of the Amazon S3 bucket whose <code>PublicAccessBlock</code> configuration you want to retrieve. '
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: publicAccessBlock
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPublicAccessBlockOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: Creates or modifies the <code>PublicAccessBlock</code> configuration for an Amazon S3 bucket.
      operationId: PutPublicAccessBlock
      parameters:
        - description: The name of the Amazon S3 bucket whose <code>PublicAccessBlock</code> configuration you want to set.
          in: path
          name: Bucket
          required: true
          type: string
        - description: 'The MD5 hash of the <code>PutPublicAccessBlock</code> request body. '
          in: header
          name: Content-MD5
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              PublicAccessBlockConfiguration:
                description: Specifies the Block Public Access configuration for an Amazon S3 bucket.
                properties:
                  BlockPublicAcls:
                    $ref: '#/definitions/Setting'
                    description: '<p>Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.</p> </li> <li> <p>PUT Object calls fail if the request includes a public ACL.</p> </li> </ul> <p>Enabling this setting doesn''t affect existing policies or ACLs.</p>'
                  BlockPublicPolicy:
                    $ref: '#/definitions/Setting'
                    description: <p>Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Enabling this setting doesn't affect existing bucket policies.</p>
                  IgnorePublicAcls:
                    $ref: '#/definitions/Setting'
                    description: <p>Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket.</p> <p>Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p>
                  RestrictPublicBuckets:
                    $ref: '#/definitions/Setting'
                    description: '<p>Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to <code>TRUE</code> restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.</p> <p>Enabling this setting doesn''t affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.</p>'
                type: object
            required:
              - PublicAccessBlockConfiguration
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: publicAccessBlock
          required: true
          type: boolean
      responses:
        '200':
          description: Success
  '/{Bucket}#replication':
    delete:
      description: ' Deletes the replication configuration from the bucket. For information about replication configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html">Cross-Region Replication (CRR)</a> in the <i>Amazon S3 Developer Guide</i>. '
      operationId: DeleteBucketReplication
      parameters:
        - description: <p> The bucket name. </p> <note> <p>It can take a while to propagate the deletion of a replication configuration to all Amazon S3 systems.</p> </note>
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: replication
          required: true
          type: boolean
      responses:
        '204':
          description: Success
    get:
      description: '<p>Returns the replication configuration of a bucket.</p> <note> <p> It can take a while to propagate the put or delete a replication configuration to all Amazon S3 systems. Therefore, a get request soon after put or delete can return a wrong result. </p> </note>'
      operationId: GetBucketReplication
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: replication
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketReplicationOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: ' Creates a replication configuration or replaces an existing one. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html">Cross-Region Replication (CRR)</a> in the <i>Amazon S3 Developer Guide</i>. '
      operationId: PutBucketReplication
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: The base64-encoded 128-bit MD5 digest of the data. You must use this header as a message integrity check to verify that the request body was not corrupted in transit.
          in: header
          name: Content-MD5
          required: false
          type: string
        - description: A token that allows Amazon S3 object lock to be enabled for an existing bucket.
          in: header
          name: x-amz-bucket-object-lock-token
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ReplicationConfiguration:
                description: 'A container for replication rules. You can add up to 1,000 rules. The maximum size of a replication configuration is 2 MB.'
                properties:
                  Role:
                    $ref: '#/definitions/Role'
                    description: 'The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that Amazon S3 assumes when replicating objects. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/crr-how-setup.html">How to Set Up Cross-Region Replication</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
                  Rules:
                    $ref: '#/definitions/ReplicationRules'
                    description: 'A container for one or more replication rules. A replication configuration must have at least one rule and can contain a maximum of 1,000 rules. '
                type: object
            required:
              - ReplicationConfiguration
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: replication
          required: true
          type: boolean
      responses:
        '200':
          description: Success
  '/{Bucket}#requestPayment':
    get:
      description: Returns the request payment configuration of a bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTrequestPaymentGET.html'
      operationId: GetBucketRequestPayment
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: requestPayment
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketRequestPaymentOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: 'Sets the request payment configuration for a bucket. By default, the bucket owner pays for downloads from the bucket. This configuration parameter enables the bucket owner (only) to specify that the person requesting the download will be charged for the download. Documentation on requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTrequestPaymentPUT.html'
      operationId: PutBucketRequestPayment
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: <p/>
          in: header
          name: Content-MD5
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              RequestPaymentConfiguration:
                description: <p/>
                properties:
                  Payer:
                    $ref: '#/definitions/Payer'
                    description: Specifies who pays for the download and request fees.
                type: object
            required:
              - RequestPaymentConfiguration
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: requestPayment
          required: true
          type: boolean
      responses:
        '200':
          description: Success
  '/{Bucket}#tagging':
    delete:
      description: Deletes the tags from the bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEtagging.html'
      operationId: DeleteBucketTagging
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: tagging
          required: true
          type: boolean
      responses:
        '204':
          description: Success
    get:
      description: Returns the tag set associated with the bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETtagging.html'
      operationId: GetBucketTagging
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: tagging
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketTaggingOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: Sets the tags for a bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTtagging.html'
      operationId: PutBucketTagging
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: <p/>
          in: header
          name: Content-MD5
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Tagging:
                description: <p/>
                properties:
                  TagSet:
                    $ref: '#/definitions/TagSet'
                    description: <p/>
                type: object
            required:
              - Tagging
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: tagging
          required: true
          type: boolean
      responses:
        '200':
          description: Success
  '/{Bucket}#uploads':
    get:
      description: This operation lists in-progress multipart uploads.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadListMPUpload.html'
      operationId: ListMultipartUploads
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: Character you use to group keys.
          in: query
          name: delimiter
          required: false
          type: string
        - description: 'Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.'
          enum:
            - url
          in: query
          name: encoding-type
          required: false
          type: string
        - description: 'Together with upload-id-marker, this parameter specifies the multipart upload after which listing should begin.'
          in: query
          name: key-marker
          required: false
          type: string
        - description: 'Sets the maximum number of multipart uploads, from 1 to 1,000, to return in the response body. 1,000 is the maximum number of uploads that can be returned in a response.'
          in: query
          name: max-uploads
          required: false
          type: integer
        - description: Lists in-progress uploads only for those keys that begin with the specified prefix.
          in: query
          name: prefix
          required: false
          type: string
        - description: 'Together with key-marker, specifies the multipart upload after which listing should begin. If key-marker is not specified, the upload-id-marker parameter is ignored.'
          in: query
          name: upload-id-marker
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxUploads
          required: false
          type: string
        - description: Pagination token
          in: query
          name: KeyMarker
          required: false
          type: string
        - description: Pagination token
          in: query
          name: UploadIdMarker
          required: false
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: uploads
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListMultipartUploadsOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}#versioning':
    get:
      description: Returns the versioning state of a bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETversioningStatus.html'
      operationId: GetBucketVersioning
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: versioning
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketVersioningOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: 'Sets the versioning state of an existing bucket. To set the versioning state, you must be the bucket owner.'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html'
      operationId: PutBucketVersioning
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: <p/>
          in: header
          name: Content-MD5
          required: false
          type: string
        - description: 'The concatenation of the authentication device''s serial number, a space, and the value that is displayed on your authentication device.'
          in: header
          name: x-amz-mfa
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              VersioningConfiguration:
                description: 'Describes the versioning state of an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html">PUT Bucket versioning</a> in the <i>Amazon Simple Storage Service API Reference</i>.'
                properties:
                  MFADelete:
                    $ref: '#/definitions/MFADelete'
                    description: 'Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.'
                  Status:
                    $ref: '#/definitions/BucketVersioningStatus'
                    description: The versioning state of the bucket.
                type: object
            required:
              - VersioningConfiguration
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: versioning
          required: true
          type: boolean
      responses:
        '200':
          description: Success
  '/{Bucket}#versions':
    get:
      description: Returns metadata about all of the versions of objects in a bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETVersion.html'
      operationId: ListObjectVersions
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: A delimiter is a character you use to group keys.
          in: query
          name: delimiter
          required: false
          type: string
        - description: 'Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.'
          enum:
            - url
          in: query
          name: encoding-type
          required: false
          type: string
        - description: Specifies the key to start with when listing objects in a bucket.
          in: query
          name: key-marker
          required: false
          type: string
        - description: Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.
          in: query
          name: max-keys
          required: false
          type: integer
        - description: Limits the response to keys that begin with the specified prefix.
          in: query
          name: prefix
          required: false
          type: string
        - description: Specifies the object version you want to start listing from.
          in: query
          name: version-id-marker
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxKeys
          required: false
          type: string
        - description: Pagination token
          in: query
          name: KeyMarker
          required: false
          type: string
        - description: Pagination token
          in: query
          name: VersionIdMarker
          required: false
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: versions
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListObjectVersionsOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}#website':
    delete:
      description: This operation removes the website configuration from the bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEwebsite.html'
      operationId: DeleteBucketWebsite
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: website
          required: true
          type: boolean
      responses:
        '204':
          description: Success
    get:
      description: Returns the website configuration for a bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETwebsite.html'
      operationId: GetBucketWebsite
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: website
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketWebsiteOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: Set the website configuration for a bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTwebsite.html'
      operationId: PutBucketWebsite
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: <p/>
          in: header
          name: Content-MD5
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              WebsiteConfiguration:
                description: Specifies website configuration parameters for an Amazon S3 bucket.
                properties:
                  ErrorDocument:
                    $ref: '#/definitions/ErrorDocument'
                    description: The name of the error document for the website.
                  IndexDocument:
                    $ref: '#/definitions/IndexDocument'
                    description: The name of the index document for the website.
                  RedirectAllRequestsTo:
                    $ref: '#/definitions/RedirectAllRequestsTo'
                    description: '<p>The redirect behavior for every request to this bucket''s website endpoint.</p> <important> <p>If you specify this property, you can''t specify any other property.</p> </important>'
                  RoutingRules:
                    $ref: '#/definitions/RoutingRules'
                    description: Rules that define when a redirect is applied and the redirect behavior.
                type: object
            required:
              - WebsiteConfiguration
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: website
          required: true
          type: boolean
      responses:
        '200':
          description: Success
  '/{Bucket}/{Key}':
    delete:
      description: 'Removes the null version (if there is one) of an object and inserts a delete marker, which becomes the latest version of the object. If there isn''t a null version, Amazon S3 does not remove any objects.'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectDELETE.html'
      operationId: DeleteObject
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: <p/>
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: 'The concatenation of the authentication device''s serial number, a space, and the value that is displayed on your authentication device.'
          in: header
          name: x-amz-mfa
          required: false
          type: string
        - description: VersionId used to reference a specific version of the object.
          in: query
          name: versionId
          required: false
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
        - description: Indicates whether Amazon S3 object lock should bypass governance-mode restrictions to process this operation.
          in: header
          name: x-amz-bypass-governance-retention
          required: false
          type: boolean
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DeleteObjectOutput'
    get:
      description: Retrieves objects from Amazon S3.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGET.html'
      operationId: GetObject
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: 'Return the object only if its entity tag (ETag) is the same as the one specified, otherwise return a 412 (precondition failed).'
          in: header
          name: If-Match
          required: false
          type: string
        - description: 'Return the object only if it has been modified since the specified time, otherwise return a 304 (not modified).'
          format: date-time
          in: header
          name: If-Modified-Since
          required: false
          type: string
        - description: 'Return the object only if its entity tag (ETag) is different from the one specified, otherwise return a 304 (not modified).'
          in: header
          name: If-None-Match
          required: false
          type: string
        - description: 'Return the object only if it has not been modified since the specified time, otherwise return a 412 (precondition failed).'
          format: date-time
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
        - description: <p/>
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: 'Downloads the specified range bytes of an object. For more information about the HTTP Range header, go to http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.'
          in: header
          name: Range
          required: false
          type: string
        - description: Sets the Cache-Control header of the response.
          in: query
          name: response-cache-control
          required: false
          type: string
        - description: Sets the Content-Disposition header of the response
          in: query
          name: response-content-disposition
          required: false
          type: string
        - description: Sets the Content-Encoding header of the response.
          in: query
          name: response-content-encoding
          required: false
          type: string
        - description: Sets the Content-Language header of the response.
          in: query
          name: response-content-language
          required: false
          type: string
        - description: Sets the Content-Type header of the response.
          in: query
          name: response-content-type
          required: false
          type: string
        - description: Sets the Expires header of the response.
          format: date-time
          in: query
          name: response-expires
          required: false
          type: string
        - description: VersionId used to reference a specific version of the object.
          in: query
          name: versionId
          required: false
          type: string
        - description: 'Specifies the algorithm to use to when encrypting the object (e.g., AES256).'
          in: header
          name: x-amz-server-side-encryption-customer-algorithm
          required: false
          type: string
        - description: Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side​-encryption​-customer-algorithm header.
          format: password
          in: header
          name: x-amz-server-side-encryption-customer-key
          required: false
          type: string
        - description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.
          in: header
          name: x-amz-server-side-encryption-customer-key-MD5
          required: false
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
        - description: 'Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a ''ranged'' GET request for the part specified. Useful for downloading just a part of an object.'
          in: query
          name: partNumber
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetObjectOutput'
        '480':
          description: NoSuchKey
          schema:
            $ref: '#/definitions/NoSuchKey'
    head:
      description: 'The HEAD operation retrieves metadata from an object without returning the object itself. This operation is useful if you''re only interested in an object''s metadata. To use HEAD, you must have READ access to the object.'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectHEAD.html'
      operationId: HeadObject
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: 'Return the object only if its entity tag (ETag) is the same as the one specified, otherwise return a 412 (precondition failed).'
          in: header
          name: If-Match
          required: false
          type: string
        - description: 'Return the object only if it has been modified since the specified time, otherwise return a 304 (not modified).'
          format: date-time
          in: header
          name: If-Modified-Since
          required: false
          type: string
        - description: 'Return the object only if its entity tag (ETag) is different from the one specified, otherwise return a 304 (not modified).'
          in: header
          name: If-None-Match
          required: false
          type: string
        - description: 'Return the object only if it has not been modified since the specified time, otherwise return a 412 (precondition failed).'
          format: date-time
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
        - description: <p/>
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: 'Downloads the specified range bytes of an object. For more information about the HTTP Range header, go to http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.'
          in: header
          name: Range
          required: false
          type: string
        - description: VersionId used to reference a specific version of the object.
          in: query
          name: versionId
          required: false
          type: string
        - description: 'Specifies the algorithm to use to when encrypting the object (e.g., AES256).'
          in: header
          name: x-amz-server-side-encryption-customer-algorithm
          required: false
          type: string
        - description: Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side​-encryption​-customer-algorithm header.
          format: password
          in: header
          name: x-amz-server-side-encryption-customer-key
          required: false
          type: string
        - description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.
          in: header
          name: x-amz-server-side-encryption-customer-key-MD5
          required: false
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
        - description: 'Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a ''ranged'' HEAD request for the part specified. Useful querying about the size of the part and the number of parts in this object.'
          in: query
          name: partNumber
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/HeadObjectOutput'
        '480':
          description: NoSuchKey
          schema:
            $ref: '#/definitions/NoSuchKey'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: Adds an object to a bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectPUT.html'
      operationId: PutObject
      parameters:
        - description: The canned ACL to apply to the object.
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
          in: header
          name: x-amz-acl
          required: false
          type: string
        - description: Name of the bucket to which the PUT operation was initiated.
          in: path
          name: Bucket
          required: true
          type: string
        - description: Specifies caching behavior along the request/reply chain.
          in: header
          name: Cache-Control
          required: false
          type: string
        - description: Specifies presentational information for the object.
          in: header
          name: Content-Disposition
          required: false
          type: string
        - description: Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.
          in: header
          name: Content-Encoding
          required: false
          type: string
        - description: The language the content is in.
          in: header
          name: Content-Language
          required: false
          type: string
        - description: Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically.
          in: header
          name: Content-Length
          required: false
          type: integer
        - description: The base64-encoded 128-bit MD5 digest of the part data. This parameter is auto-populated when using the command from the CLI. This parameted is required if object lock parameters are specified.
          in: header
          name: Content-MD5
          required: false
          type: string
        - description: A standard MIME type describing the format of the object data.
          in: header
          name: Content-Type
          required: false
          type: string
        - description: The date and time at which the object is no longer cacheable.
          format: date-time
          in: header
          name: Expires
          required: false
          type: string
        - description: 'Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.'
          in: header
          name: x-amz-grant-full-control
          required: false
          type: string
        - description: Allows grantee to read the object data and its metadata.
          in: header
          name: x-amz-grant-read
          required: false
          type: string
        - description: Allows grantee to read the object ACL.
          in: header
          name: x-amz-grant-read-acp
          required: false
          type: string
        - description: Allows grantee to write the ACL for the applicable object.
          in: header
          name: x-amz-grant-write-acp
          required: false
          type: string
        - description: Object key for which the PUT operation was initiated.
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: 'The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).'
          enum:
            - AES256
            - 'aws:kms'
          in: header
          name: x-amz-server-side-encryption
          required: false
          type: string
        - description: The type of storage to use for the object. Defaults to 'STANDARD'.
          enum:
            - STANDARD
            - REDUCED_REDUNDANCY
            - STANDARD_IA
            - ONEZONE_IA
            - INTELLIGENT_TIERING
            - GLACIER
            - DEEP_ARCHIVE
          in: header
          name: x-amz-storage-class
          required: false
          type: string
        - description: 'If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.'
          in: header
          name: x-amz-website-redirect-location
          required: false
          type: string
        - description: 'Specifies the algorithm to use to when encrypting the object (e.g., AES256).'
          in: header
          name: x-amz-server-side-encryption-customer-algorithm
          required: false
          type: string
        - description: Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side​-encryption​-customer-algorithm header.
          format: password
          in: header
          name: x-amz-server-side-encryption-customer-key
          required: false
          type: string
        - description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.
          in: header
          name: x-amz-server-side-encryption-customer-key-MD5
          required: false
          type: string
        - description: 'Specifies the AWS KMS key ID to use for object encryption. All GET and PUT requests for an object protected by AWS KMS will fail if not made via SSL or using SigV4. Documentation on configuring any of the officially supported AWS SDKs and CLI can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version'
          format: password
          in: header
          name: x-amz-server-side-encryption-aws-kms-key-id
          required: false
          type: string
        - description: Specifies the AWS KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.
          format: password
          in: header
          name: x-amz-server-side-encryption-context
          required: false
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
        - description: 'The tag-set for the object. The tag-set must be encoded as URL Query parameters. (For example, "Key1=Value1")'
          in: header
          name: x-amz-tagging
          required: false
          type: string
        - description: The object lock mode that you want to apply to this object.
          enum:
            - GOVERNANCE
            - COMPLIANCE
          in: header
          name: x-amz-object-lock-mode
          required: false
          type: string
        - description: The date and time when you want this object's object lock to expire.
          format: date-time
          in: header
          name: x-amz-object-lock-retain-until-date
          required: false
          type: string
        - description: The Legal Hold status that you want to apply to the specified object.
          enum:
            - 'ON'
            - 'OFF'
          in: header
          name: x-amz-object-lock-legal-hold
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Body:
                description: Object data.
                type: string
              x-amz-meta-:
                additionalProperties:
                  $ref: '#/definitions/MetadataValue'
                description: A map of metadata to store with the object in S3.
                type: object
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutObjectOutput'
  '/{Bucket}/{Key}#acl':
    get:
      description: Returns the access control list (ACL) of an object.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGETacl.html'
      operationId: GetObjectAcl
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: <p/>
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: VersionId used to reference a specific version of the object.
          in: query
          name: versionId
          required: false
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: acl
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetObjectAclOutput'
        '480':
          description: NoSuchKey
          schema:
            $ref: '#/definitions/NoSuchKey'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: uses the acl subresource to set the access control list (ACL) permissions for an object that already exists in a bucket
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectPUTacl.html'
      operationId: PutObjectAcl
      parameters:
        - description: The canned ACL to apply to the object.
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
          in: header
          name: x-amz-acl
          required: false
          type: string
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: <p/>
          in: header
          name: Content-MD5
          required: false
          type: string
        - description: 'Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.'
          in: header
          name: x-amz-grant-full-control
          required: false
          type: string
        - description: Allows grantee to list the objects in the bucket.
          in: header
          name: x-amz-grant-read
          required: false
          type: string
        - description: Allows grantee to read the bucket ACL.
          in: header
          name: x-amz-grant-read-acp
          required: false
          type: string
        - description: 'Allows grantee to create, overwrite, and delete any object in the bucket.'
          in: header
          name: x-amz-grant-write
          required: false
          type: string
        - description: Allows grantee to write the ACL for the applicable bucket.
          in: header
          name: x-amz-grant-write-acp
          required: false
          type: string
        - description: <p/>
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
        - description: VersionId used to reference a specific version of the object.
          in: query
          name: versionId
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              AccessControlPolicy:
                description: Contains the elements that set the ACL permissions for an object per grantee.
                properties:
                  Grants:
                    $ref: '#/definitions/Grants'
                    description: A list of grants.
                  Owner:
                    $ref: '#/definitions/Owner'
                    description: Container for the bucket owner's display name and ID.
                type: object
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: acl
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutObjectAclOutput'
        '480':
          description: NoSuchKey
          schema:
            $ref: '#/definitions/NoSuchKey'
  '/{Bucket}/{Key}#legal-hold':
    get:
      description: Gets an object's current Legal Hold status.
      operationId: GetObjectLegalHold
      parameters:
        - description: The bucket containing the object whose Legal Hold status you want to retrieve.
          in: path
          name: Bucket
          required: true
          type: string
        - description: The key name for the object whose Legal Hold status you want to retrieve.
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: The version ID of the object whose Legal Hold status you want to retrieve.
          in: query
          name: versionId
          required: false
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: legal-hold
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetObjectLegalHoldOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: Applies a Legal Hold configuration to the specified object.
      operationId: PutObjectLegalHold
      parameters:
        - description: The bucket containing the object that you want to place a Legal Hold on.
          in: path
          name: Bucket
          required: true
          type: string
        - description: The key name for the object that you want to place a Legal Hold on.
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
        - description: The version ID of the object that you want to place a Legal Hold on.
          in: query
          name: versionId
          required: false
          type: string
        - description: The MD5 hash for the request body.
          in: header
          name: Content-MD5
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              LegalHold:
                description: A Legal Hold configuration for an object.
                properties:
                  Status:
                    $ref: '#/definitions/ObjectLockLegalHoldStatus'
                    description: Indicates whether the specified object has a Legal Hold in place.
                type: object
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: legal-hold
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutObjectLegalHoldOutput'
  '/{Bucket}/{Key}#partNumber&uploadId':
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: '<p>Uploads a part in a multipart upload.</p> <p> <b>Note:</b> After you initiate multipart upload and upload one or more parts, you must either complete or abort multipart upload in order to stop getting charged for storage of the uploaded parts. Only after you either complete or abort multipart upload, Amazon S3 frees up the parts storage and stops charging you for the parts storage.</p>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadUploadPart.html'
      operationId: UploadPart
      parameters:
        - description: Name of the bucket to which the multipart upload was initiated.
          in: path
          name: Bucket
          required: true
          type: string
        - description: Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically.
          in: header
          name: Content-Length
          required: false
          type: integer
        - description: The base64-encoded 128-bit MD5 digest of the part data. This parameter is auto-populated when using the command from the CLI. This parameted is required if object lock parameters are specified.
          in: header
          name: Content-MD5
          required: false
          type: string
        - description: Object key for which the multipart upload was initiated.
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: 'Part number of part being uploaded. This is a positive integer between 1 and 10,000.'
          in: query
          name: partNumber
          required: true
          type: integer
        - description: Upload ID identifying the multipart upload whose part is being uploaded.
          in: query
          name: uploadId
          required: true
          type: string
        - description: 'Specifies the algorithm to use to when encrypting the object (e.g., AES256).'
          in: header
          name: x-amz-server-side-encryption-customer-algorithm
          required: false
          type: string
        - description: Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side​-encryption​-customer-algorithm header. This must be the same encryption key specified in the initiate multipart upload request.
          format: password
          in: header
          name: x-amz-server-side-encryption-customer-key
          required: false
          type: string
        - description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.
          in: header
          name: x-amz-server-side-encryption-customer-key-MD5
          required: false
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Body:
                description: Object data.
                type: string
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UploadPartOutput'
  '/{Bucket}/{Key}#restore':
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    post:
      description: Restores an archived copy of an object back into Amazon S3
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectRestore.html'
      operationId: RestoreObject
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: <p/>
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: <p/>
          in: query
          name: versionId
          required: false
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              RestoreRequest:
                description: Container for restore job parameters.
                properties:
                  Days:
                    $ref: '#/definitions/Days'
                    description: Lifetime of the active copy in days. Do not use with restores that specify OutputLocation.
                  Description:
                    $ref: '#/definitions/Description'
                    description: The optional description for the job.
                  GlacierJobParameters:
                    $ref: '#/definitions/GlacierJobParameters'
                    description: Glacier related parameters pertaining to this job. Do not use with restores that specify OutputLocation.
                  OutputLocation:
                    $ref: '#/definitions/OutputLocation'
                    description: Describes the location where the restore job's output is stored.
                  SelectParameters:
                    $ref: '#/definitions/SelectParameters'
                    description: Describes the parameters for Select job types.
                  Tier:
                    $ref: '#/definitions/Tier'
                    description: Glacier retrieval tier at which the restore will be processed.
                  Type:
                    $ref: '#/definitions/RestoreRequestType'
                    description: Type of restore request.
                type: object
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: restore
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RestoreObjectOutput'
        '480':
          description: ObjectAlreadyInActiveTierError
          schema:
            $ref: '#/definitions/ObjectAlreadyInActiveTierError'
  '/{Bucket}/{Key}#retention':
    get:
      description: Retrieves an object's retention settings.
      operationId: GetObjectRetention
      parameters:
        - description: The bucket containing the object whose retention settings you want to retrieve.
          in: path
          name: Bucket
          required: true
          type: string
        - description: The key name for the object whose retention settings you want to retrieve.
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: The version ID for the object whose retention settings you want to retrieve.
          in: query
          name: versionId
          required: false
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: retention
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetObjectRetentionOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: Places an Object Retention configuration on an object.
      operationId: PutObjectRetention
      parameters:
        - description: The bucket that contains the object you want to apply this Object Retention configuration to.
          in: path
          name: Bucket
          required: true
          type: string
        - description: The key name for the object that you want to apply this Object Retention configuration to.
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
        - description: The version ID for the object that you want to apply this Object Retention configuration to.
          in: query
          name: versionId
          required: false
          type: string
        - description: Indicates whether this operation should bypass Governance-mode restrictions.j
          in: header
          name: x-amz-bypass-governance-retention
          required: false
          type: boolean
        - description: The MD5 hash for the request body.
          in: header
          name: Content-MD5
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Retention:
                description: A Retention configuration for an object.
                properties:
                  Mode:
                    $ref: '#/definitions/ObjectLockRetentionMode'
                    description: Indicates the Retention mode for the specified object.
                  RetainUntilDate:
                    $ref: '#/definitions/Date'
                    description: The date on which this object lock retention expires.
                type: object
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: retention
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutObjectRetentionOutput'
  '/{Bucket}/{Key}#select&select-type=2':
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    post:
      description: 'This operation filters the contents of an Amazon S3 object based on a simple Structured Query Language (SQL) statement. In the request, along with the SQL expression, you must also specify a data serialization format (JSON or CSV) of the object. Amazon S3 uses this to parse object data into records, and returns only records that match the specified SQL expression. You must also specify the data serialization format for the response.'
      operationId: SelectObjectContent
      parameters:
        - description: The S3 bucket.
          in: path
          name: Bucket
          required: true
          type: string
        - description: The object key.
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: 'The SSE Algorithm used to encrypt the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html"> Server-Side Encryption (Using Customer-Provided Encryption Keys</a>. '
          in: header
          name: x-amz-server-side-encryption-customer-algorithm
          required: false
          type: string
        - description: 'The SSE Customer Key. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html"> Server-Side Encryption (Using Customer-Provided Encryption Keys</a>. '
          format: password
          in: header
          name: x-amz-server-side-encryption-customer-key
          required: false
          type: string
        - description: 'The SSE Customer Key MD5. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html"> Server-Side Encryption (Using Customer-Provided Encryption Keys</a>. '
          in: header
          name: x-amz-server-side-encryption-customer-key-MD5
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Expression:
                description: The expression that is used to query the object.
                type: string
              ExpressionType:
                description: 'The type of the provided expression (for example., SQL).'
                enum:
                  - SQL
                type: string
              InputSerialization:
                description: Describes the serialization format of the object.
                properties:
                  CSV:
                    $ref: '#/definitions/CSVInput'
                    description: Describes the serialization of a CSV-encoded object.
                  CompressionType:
                    $ref: '#/definitions/CompressionType'
                    description: 'Specifies object''s compression format. Valid values: NONE, GZIP, BZIP2. Default Value: NONE.'
                  JSON:
                    $ref: '#/definitions/JSONInput'
                    description: Specifies JSON as object's input serialization format.
                  Parquet:
                    $ref: '#/definitions/ParquetInput'
                    description: Specifies Parquet as object's input serialization format.
                type: object
              OutputSerialization:
                description: Describes how results of the Select job are serialized.
                properties:
                  CSV:
                    $ref: '#/definitions/CSVOutput'
                    description: Describes the serialization of CSV-encoded Select results.
                  JSON:
                    $ref: '#/definitions/JSONOutput'
                    description: Specifies JSON as request's output serialization format.
                type: object
              RequestProgress:
                description: <p/>
                properties:
                  Enabled:
                    $ref: '#/definitions/EnableRequestProgress'
                    description: 'Specifies whether periodic QueryProgress frames should be sent. Valid values: TRUE, FALSE. Default value: FALSE.'
                type: object
            required:
              - Expression
              - ExpressionType
              - InputSerialization
              - OutputSerialization
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: select
          required: true
          type: boolean
        - enum:
            - '2'
          in: query
          name: select-type
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SelectObjectContentOutput'
  '/{Bucket}/{Key}#tagging':
    delete:
      description: Removes the tag-set from an existing object.
      operationId: DeleteObjectTagging
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: <p/>
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: The versionId of the object that the tag-set will be removed from.
          in: query
          name: versionId
          required: false
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: tagging
          required: true
          type: boolean
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/DeleteObjectTaggingOutput'
    get:
      description: Returns the tag-set of an object.
      operationId: GetObjectTagging
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: <p/>
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: <p/>
          in: query
          name: versionId
          required: false
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: tagging
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetObjectTaggingOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: Sets the supplied tag-set to an object that already exists in a bucket
      operationId: PutObjectTagging
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: <p/>
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: <p/>
          in: query
          name: versionId
          required: false
          type: string
        - description: <p/>
          in: header
          name: Content-MD5
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Tagging:
                description: <p/>
                properties:
                  TagSet:
                    $ref: '#/definitions/TagSet'
                    description: <p/>
                type: object
            required:
              - Tagging
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: tagging
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutObjectTaggingOutput'
  '/{Bucket}/{Key}#torrent':
    get:
      description: Return torrent files from a bucket.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGETtorrent.html'
      operationId: GetObjectTorrent
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: <p/>
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: torrent
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetObjectTorrentOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}/{Key}#uploadId':
    delete:
      description: '<p>Aborts a multipart upload.</p> <p>To verify that all parts have been removed, so you don''t get charged for the part storage, you should call the List Parts operation and ensure the parts list is empty.</p>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadAbort.html'
      operationId: AbortMultipartUpload
      parameters:
        - description: Name of the bucket to which the multipart upload was initiated.
          in: path
          name: Bucket
          required: true
          type: string
        - description: Key of the object for which the multipart upload was initiated.
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: Upload ID that identifies the multipart upload.
          in: query
          name: uploadId
          required: true
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/AbortMultipartUploadOutput'
        '480':
          description: NoSuchUpload
          schema:
            $ref: '#/definitions/NoSuchUpload'
    get:
      description: Lists the parts that have been uploaded for a specific multipart upload.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadListParts.html'
      operationId: ListParts
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: <p/>
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: Sets the maximum number of parts to return.
          in: query
          name: max-parts
          required: false
          type: integer
        - description: Specifies the part after which listing should begin. Only parts with higher part numbers will be listed.
          in: query
          name: part-number-marker
          required: false
          type: integer
        - description: Upload ID identifying the multipart upload whose parts are being listed.
          in: query
          name: uploadId
          required: true
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxParts
          required: false
          type: string
        - description: Pagination token
          in: query
          name: PartNumberMarker
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPartsOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    post:
      description: Completes a multipart upload by assembling previously uploaded parts.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadComplete.html'
      operationId: CompleteMultipartUpload
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: <p/>
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: <p/>
          in: query
          name: uploadId
          required: true
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              CompleteMultipartUpload:
                description: <p/>
                properties:
                  Parts:
                    $ref: '#/definitions/CompletedPartList'
                    description: <p/>
                type: object
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CompleteMultipartUploadOutput'
  '/{Bucket}/{Key}#uploads':
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    post:
      description: '<p>Initiates a multipart upload and returns an upload ID.</p> <p> <b>Note:</b> After you initiate multipart upload and upload one or more parts, you must either complete or abort multipart upload in order to stop getting charged for storage of the uploaded parts. Only after you either complete or abort multipart upload, Amazon S3 frees up the parts storage and stops charging you for the parts storage.</p>'
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadInitiate.html'
      operationId: CreateMultipartUpload
      parameters:
        - description: The canned ACL to apply to the object.
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
          in: header
          name: x-amz-acl
          required: false
          type: string
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: Specifies caching behavior along the request/reply chain.
          in: header
          name: Cache-Control
          required: false
          type: string
        - description: Specifies presentational information for the object.
          in: header
          name: Content-Disposition
          required: false
          type: string
        - description: Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.
          in: header
          name: Content-Encoding
          required: false
          type: string
        - description: The language the content is in.
          in: header
          name: Content-Language
          required: false
          type: string
        - description: A standard MIME type describing the format of the object data.
          in: header
          name: Content-Type
          required: false
          type: string
        - description: The date and time at which the object is no longer cacheable.
          format: date-time
          in: header
          name: Expires
          required: false
          type: string
        - description: 'Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.'
          in: header
          name: x-amz-grant-full-control
          required: false
          type: string
        - description: Allows grantee to read the object data and its metadata.
          in: header
          name: x-amz-grant-read
          required: false
          type: string
        - description: Allows grantee to read the object ACL.
          in: header
          name: x-amz-grant-read-acp
          required: false
          type: string
        - description: Allows grantee to write the ACL for the applicable object.
          in: header
          name: x-amz-grant-write-acp
          required: false
          type: string
        - description: <p/>
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: 'The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).'
          enum:
            - AES256
            - 'aws:kms'
          in: header
          name: x-amz-server-side-encryption
          required: false
          type: string
        - description: The type of storage to use for the object. Defaults to 'STANDARD'.
          enum:
            - STANDARD
            - REDUCED_REDUNDANCY
            - STANDARD_IA
            - ONEZONE_IA
            - INTELLIGENT_TIERING
            - GLACIER
            - DEEP_ARCHIVE
          in: header
          name: x-amz-storage-class
          required: false
          type: string
        - description: 'If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.'
          in: header
          name: x-amz-website-redirect-location
          required: false
          type: string
        - description: 'Specifies the algorithm to use to when encrypting the object (e.g., AES256).'
          in: header
          name: x-amz-server-side-encryption-customer-algorithm
          required: false
          type: string
        - description: Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side​-encryption​-customer-algorithm header.
          format: password
          in: header
          name: x-amz-server-side-encryption-customer-key
          required: false
          type: string
        - description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.
          in: header
          name: x-amz-server-side-encryption-customer-key-MD5
          required: false
          type: string
        - description: 'Specifies the AWS KMS key ID to use for object encryption. All GET and PUT requests for an object protected by AWS KMS will fail if not made via SSL or using SigV4. Documentation on configuring any of the officially supported AWS SDKs and CLI can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version'
          format: password
          in: header
          name: x-amz-server-side-encryption-aws-kms-key-id
          required: false
          type: string
        - description: Specifies the AWS KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.
          format: password
          in: header
          name: x-amz-server-side-encryption-context
          required: false
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
        - description: The tag-set for the object. The tag-set must be encoded as URL Query parameters
          in: header
          name: x-amz-tagging
          required: false
          type: string
        - description: Specifies the object lock mode that you want to apply to the uploaded object.
          enum:
            - GOVERNANCE
            - COMPLIANCE
          in: header
          name: x-amz-object-lock-mode
          required: false
          type: string
        - description: Specifies the date and time when you want the object lock to expire.
          format: date-time
          in: header
          name: x-amz-object-lock-retain-until-date
          required: false
          type: string
        - description: Specifies whether you want to apply a Legal Hold to the uploaded object.
          enum:
            - 'ON'
            - 'OFF'
          in: header
          name: x-amz-object-lock-legal-hold
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              x-amz-meta-:
                additionalProperties:
                  $ref: '#/definitions/MetadataValue'
                description: A map of metadata to store with the object in S3.
                type: object
            type: object
        - allowEmptyValue: true
          enum:
            - true
          in: query
          name: uploads
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateMultipartUploadOutput'
  '/{Bucket}/{Key}#x-amz-copy-source':
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: Creates a copy of an object that is already stored in Amazon S3.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectCOPY.html'
      operationId: CopyObject
      parameters:
        - description: The canned ACL to apply to the object.
          enum:
            - private
            - public-read
            - public-read-write
            - authenticated-read
            - aws-exec-read
            - bucket-owner-read
            - bucket-owner-full-control
          in: header
          name: x-amz-acl
          required: false
          type: string
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: Specifies caching behavior along the request/reply chain.
          in: header
          name: Cache-Control
          required: false
          type: string
        - description: Specifies presentational information for the object.
          in: header
          name: Content-Disposition
          required: false
          type: string
        - description: Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.
          in: header
          name: Content-Encoding
          required: false
          type: string
        - description: The language the content is in.
          in: header
          name: Content-Language
          required: false
          type: string
        - description: A standard MIME type describing the format of the object data.
          in: header
          name: Content-Type
          required: false
          type: string
        - description: 'The name of the source bucket and key name of the source object, separated by a slash (/). Must be URL-encoded.'
          in: header
          name: x-amz-copy-source
          pattern: \/.+\/.+
          required: true
          type: string
        - description: Copies the object if its entity tag (ETag) matches the specified tag.
          in: header
          name: x-amz-copy-source-if-match
          required: false
          type: string
        - description: Copies the object if it has been modified since the specified time.
          format: date-time
          in: header
          name: x-amz-copy-source-if-modified-since
          required: false
          type: string
        - description: Copies the object if its entity tag (ETag) is different than the specified ETag.
          in: header
          name: x-amz-copy-source-if-none-match
          required: false
          type: string
        - description: Copies the object if it hasn't been modified since the specified time.
          format: date-time
          in: header
          name: x-amz-copy-source-if-unmodified-since
          required: false
          type: string
        - description: The date and time at which the object is no longer cacheable.
          format: date-time
          in: header
          name: Expires
          required: false
          type: string
        - description: 'Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.'
          in: header
          name: x-amz-grant-full-control
          required: false
          type: string
        - description: Allows grantee to read the object data and its metadata.
          in: header
          name: x-amz-grant-read
          required: false
          type: string
        - description: Allows grantee to read the object ACL.
          in: header
          name: x-amz-grant-read-acp
          required: false
          type: string
        - description: Allows grantee to write the ACL for the applicable object.
          in: header
          name: x-amz-grant-write-acp
          required: false
          type: string
        - description: <p/>
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request.
          enum:
            - COPY
            - REPLACE
          in: header
          name: x-amz-metadata-directive
          required: false
          type: string
        - description: Specifies whether the object tag-set are copied from the source object or replaced with tag-set provided in the request.
          enum:
            - COPY
            - REPLACE
          in: header
          name: x-amz-tagging-directive
          required: false
          type: string
        - description: 'The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms).'
          enum:
            - AES256
            - 'aws:kms'
          in: header
          name: x-amz-server-side-encryption
          required: false
          type: string
        - description: The type of storage to use for the object. Defaults to 'STANDARD'.
          enum:
            - STANDARD
            - REDUCED_REDUNDANCY
            - STANDARD_IA
            - ONEZONE_IA
            - INTELLIGENT_TIERING
            - GLACIER
            - DEEP_ARCHIVE
          in: header
          name: x-amz-storage-class
          required: false
          type: string
        - description: 'If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.'
          in: header
          name: x-amz-website-redirect-location
          required: false
          type: string
        - description: 'Specifies the algorithm to use to when encrypting the object (e.g., AES256).'
          in: header
          name: x-amz-server-side-encryption-customer-algorithm
          required: false
          type: string
        - description: Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side​-encryption​-customer-algorithm header.
          format: password
          in: header
          name: x-amz-server-side-encryption-customer-key
          required: false
          type: string
        - description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.
          in: header
          name: x-amz-server-side-encryption-customer-key-MD5
          required: false
          type: string
        - description: 'Specifies the AWS KMS key ID to use for object encryption. All GET and PUT requests for an object protected by AWS KMS will fail if not made via SSL or using SigV4. Documentation on configuring any of the officially supported AWS SDKs and CLI can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version'
          format: password
          in: header
          name: x-amz-server-side-encryption-aws-kms-key-id
          required: false
          type: string
        - description: Specifies the AWS KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.
          format: password
          in: header
          name: x-amz-server-side-encryption-context
          required: false
          type: string
        - description: 'Specifies the algorithm to use when decrypting the source object (e.g., AES256).'
          in: header
          name: x-amz-copy-source-server-side-encryption-customer-algorithm
          required: false
          type: string
        - description: Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.
          format: password
          in: header
          name: x-amz-copy-source-server-side-encryption-customer-key
          required: false
          type: string
        - description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.
          in: header
          name: x-amz-copy-source-server-side-encryption-customer-key-MD5
          required: false
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
        - description: The tag-set for the object destination object this value must be used in conjunction with the TaggingDirective. The tag-set must be encoded as URL Query parameters
          in: header
          name: x-amz-tagging
          required: false
          type: string
        - description: The object lock mode that you want to apply to the copied object.
          enum:
            - GOVERNANCE
            - COMPLIANCE
          in: header
          name: x-amz-object-lock-mode
          required: false
          type: string
        - description: The date and time when you want the copied object's object lock to expire.
          format: date-time
          in: header
          name: x-amz-object-lock-retain-until-date
          required: false
          type: string
        - description: Specifies whether you want to apply a Legal Hold to the copied object.
          enum:
            - 'ON'
            - 'OFF'
          in: header
          name: x-amz-object-lock-legal-hold
          required: false
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              x-amz-meta-:
                additionalProperties:
                  $ref: '#/definitions/MetadataValue'
                description: A map of metadata to store with the object in S3.
                type: object
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CopyObjectOutput'
        '480':
          description: ObjectNotInActiveTierError
          schema:
            $ref: '#/definitions/ObjectNotInActiveTierError'
  '/{Bucket}/{Key}#x-amz-copy-source&partNumber&uploadId':
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    put:
      description: Uploads a part by copying data from an existing object as data source.
      externalDocs:
        url: 'http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadUploadPartCopy.html'
      operationId: UploadPartCopy
      parameters:
        - description: <p/>
          in: path
          name: Bucket
          required: true
          type: string
        - description: 'The name of the source bucket and key name of the source object, separated by a slash (/). Must be URL-encoded.'
          in: header
          name: x-amz-copy-source
          pattern: \/.+\/.+
          required: true
          type: string
        - description: Copies the object if its entity tag (ETag) matches the specified tag.
          in: header
          name: x-amz-copy-source-if-match
          required: false
          type: string
        - description: Copies the object if it has been modified since the specified time.
          format: date-time
          in: header
          name: x-amz-copy-source-if-modified-since
          required: false
          type: string
        - description: Copies the object if its entity tag (ETag) is different than the specified ETag.
          in: header
          name: x-amz-copy-source-if-none-match
          required: false
          type: string
        - description: Copies the object if it hasn't been modified since the specified time.
          format: date-time
          in: header
          name: x-amz-copy-source-if-unmodified-since
          required: false
          type: string
        - description: 'The range of bytes to copy from the source object. The range value must use the form bytes=first-last, where the first and last are the zero-based byte offsets to copy. For example, bytes=0-9 indicates that you want to copy the first ten bytes of the source. You can copy a range only if the source object is greater than 5 MB.'
          in: header
          name: x-amz-copy-source-range
          required: false
          type: string
        - description: <p/>
          in: path
          minLength: 1
          name: Key
          required: true
          type: string
        - description: 'Part number of part being copied. This is a positive integer between 1 and 10,000.'
          in: query
          name: partNumber
          required: true
          type: integer
        - description: Upload ID identifying the multipart upload whose part is being copied.
          in: query
          name: uploadId
          required: true
          type: string
        - description: 'Specifies the algorithm to use to when encrypting the object (e.g., AES256).'
          in: header
          name: x-amz-server-side-encryption-customer-algorithm
          required: false
          type: string
        - description: Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side​-encryption​-customer-algorithm header. This must be the same encryption key specified in the initiate multipart upload request.
          format: password
          in: header
          name: x-amz-server-side-encryption-customer-key
          required: false
          type: string
        - description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.
          in: header
          name: x-amz-server-side-encryption-customer-key-MD5
          required: false
          type: string
        - description: 'Specifies the algorithm to use when decrypting the source object (e.g., AES256).'
          in: header
          name: x-amz-copy-source-server-side-encryption-customer-algorithm
          required: false
          type: string
        - description: Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.
          format: password
          in: header
          name: x-amz-copy-source-server-side-encryption-customer-key
          required: false
          type: string
        - description: Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error.
          in: header
          name: x-amz-copy-source-server-side-encryption-customer-key-MD5
          required: false
          type: string
        - description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
          enum:
            - requester
          in: header
          name: x-amz-request-payer
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UploadPartCopyOutput'
definitions:
  AbortDate:
    format: date-time
    type: string
  AbortIncompleteMultipartUpload:
    description: 'Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config"> Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Policy</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
    properties:
      DaysAfterInitiation:
        $ref: '#/definitions/DaysAfterInitiation'
        description: Specifies the number of days after which Amazon S3 aborts an incomplete multipart upload.
    type: object
  AbortMultipartUploadOutput:
    example: {}
    properties: {}
    type: object
  AbortMultipartUploadRequest:
    properties: {}
    type: object
  AbortRuleId:
    type: string
  AccelerateConfiguration:
    description: 'Configures the transfer acceleration state for an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html">Amazon S3 Transfer Acceleration</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
    properties:
      Status:
        $ref: '#/definitions/BucketAccelerateStatus'
        description: Specifies the transfer acceleration status of the bucket.
    type: object
  AcceptRanges:
    type: string
  AccessControlPolicy:
    description: Contains the elements that set the ACL permissions for an object per grantee.
    properties:
      Grants:
        $ref: '#/definitions/Grants'
        description: A list of grants.
      Owner:
        $ref: '#/definitions/Owner'
        description: Container for the bucket owner's display name and ID.
    type: object
  AccessControlTranslation:
    description: A container for information about access control for replicas.
    properties:
      Owner:
        $ref: '#/definitions/OwnerOverride'
        description: 'Specifies the replica ownership. For default and valid values, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html">PUT bucket replication</a> in the <i>Amazon Simple Storage Service API Reference</i>.'
    required:
      - Owner
    type: object
  AccountId:
    type: string
  AllowQuotedRecordDelimiter:
    type: boolean
  AllowedHeader:
    type: string
  AllowedHeaders:
    items:
      $ref: '#/definitions/AllowedHeader'
    type: array
    xml:
      wrapped: false
  AllowedMethod:
    type: string
  AllowedMethods:
    items:
      $ref: '#/definitions/AllowedMethod'
    type: array
    xml:
      wrapped: false
  AllowedOrigin:
    type: string
  AllowedOrigins:
    items:
      $ref: '#/definitions/AllowedOrigin'
    type: array
    xml:
      wrapped: false
  AnalyticsAndOperator:
    description: 'A conjunction (logical AND) of predicates, which is used in evaluating a metrics filter. The operator must have at least two predicates in any combination, and an object must match all of the predicates for the filter to apply.'
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: 'The prefix to use when evaluating an AND predicate: The prefix that an object must have to be included in the metrics results.'
      Tags:
        $ref: '#/definitions/TagSet'
        description: The list of tags to use when evaluating an AND predicate.
    type: object
    xml:
      wrapped: false
  AnalyticsConfiguration:
    description: '<p> Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETAnalyticsConfig.html">GET Bucket analytics</a> in the <i>Amazon Simple Storage Service API Reference</i>. </p>'
    properties:
      Filter:
        $ref: '#/definitions/AnalyticsFilter'
        description: 'The filter used to describe a set of objects for analyses. A filter must have exactly one prefix, one tag, or one conjunction (AnalyticsAndOperator). If no filter is provided, all objects will be considered in any analysis.'
      Id:
        $ref: '#/definitions/AnalyticsId'
        description: The ID that identifies the analytics configuration.
      StorageClassAnalysis:
        $ref: '#/definitions/StorageClassAnalysis'
        description: ' Contains data related to access patterns to be collected and made available to analyze the tradeoffs between different storage classes. '
    required:
      - Id
      - StorageClassAnalysis
    type: object
  AnalyticsConfigurationList:
    items:
      $ref: '#/definitions/AnalyticsConfiguration'
    type: array
    xml:
      wrapped: false
  AnalyticsExportDestination:
    description: Where to publish the analytics results.
    properties:
      S3BucketDestination:
        $ref: '#/definitions/AnalyticsS3BucketDestination'
        description: A destination signifying output to an S3 bucket.
    required:
      - S3BucketDestination
    type: object
  AnalyticsFilter:
    description: <p/>
    properties:
      And:
        $ref: '#/definitions/AnalyticsAndOperator'
        description: 'A conjunction (logical AND) of predicates, which is used in evaluating an analytics filter. The operator must have at least two predicates.'
      Prefix:
        $ref: '#/definitions/Prefix'
        description: The prefix to use when evaluating an analytics filter.
      Tag:
        $ref: '#/definitions/Tag'
        description: The tag to use when evaluating an analytics filter.
    type: object
  AnalyticsId:
    type: string
  AnalyticsS3BucketDestination:
    description: <p/>
    properties:
      Bucket:
        $ref: '#/definitions/BucketName'
        description: The Amazon Resource Name (ARN) of the bucket to which data is exported.
      BucketAccountId:
        $ref: '#/definitions/AccountId'
        description: 'The account ID that owns the destination bucket. If no account ID is provided, the owner will not be validated prior to exporting data.'
      Format:
        $ref: '#/definitions/AnalyticsS3ExportFileFormat'
        description: Specifies the file format used when exporting data to Amazon S3.
      Prefix:
        $ref: '#/definitions/Prefix'
        description: The prefix to use when exporting data. The prefix is prepended to all results.
    required:
      - Format
      - Bucket
    type: object
  AnalyticsS3ExportFileFormat:
    enum:
      - CSV
    type: string
  Body:
    type: string
  Bucket:
    description: <p/>
    properties:
      CreationDate:
        $ref: '#/definitions/CreationDate'
        description: Date the bucket was created.
      Name:
        $ref: '#/definitions/BucketName'
        description: The name of the bucket.
    type: object
  BucketAccelerateStatus:
    enum:
      - Enabled
      - Suspended
    type: string
  BucketAlreadyExists: {}
  BucketAlreadyOwnedByYou: {}
  BucketCannedACL:
    enum:
      - private
      - public-read
      - public-read-write
      - authenticated-read
    type: string
  BucketLifecycleConfiguration:
    description: 'Specifies the lifecycle configuration for objects in an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html">Object Lifecycle Management</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
    properties:
      Rules:
        $ref: '#/definitions/LifecycleRules'
        description: A lifecycle rule for individual objects in an Amazon S3 bucket.
    required:
      - Rules
    type: object
  BucketLocationConstraint:
    enum:
      - EU
      - eu-west-1
      - us-west-1
      - us-west-2
      - ap-south-1
      - ap-southeast-1
      - ap-southeast-2
      - ap-northeast-1
      - sa-east-1
      - cn-north-1
      - eu-central-1
    type: string
  BucketLoggingStatus:
    description: <p/>
    properties:
      LoggingEnabled:
        $ref: '#/definitions/LoggingEnabled'
        description: <p/>
    type: object
  BucketLogsPermission:
    enum:
      - FULL_CONTROL
      - READ
      - WRITE
    type: string
  BucketName:
    type: string
  BucketVersioningStatus:
    enum:
      - Enabled
      - Suspended
    type: string
  Buckets:
    items:
      $ref: '#/definitions/Bucket'
    type: array
  BypassGovernanceRetention:
    type: boolean
  BytesProcessed:
    type: integer
  BytesReturned:
    type: integer
  BytesScanned:
    type: integer
  CORSConfiguration:
    description: 'Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html">Enabling Cross-Origin Resource Sharing</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
    properties:
      CORSRules:
        $ref: '#/definitions/CORSRules'
        description: A set of allowed origins and methods.
    required:
      - CORSRules
    type: object
  CORSRule:
    description: Specifies a cross-origin access rule for an Amazon S3 bucket.
    properties:
      AllowedHeaders:
        $ref: '#/definitions/AllowedHeaders'
        description: 'Headers that are specified in the <code>Access-Control-Request-Headers</code> header. These headers are allowed in a preflight OPTIONS request. In response to any preflight OPTIONS request, Amazon S3 returns any requested headers that are allowed.'
      AllowedMethods:
        $ref: '#/definitions/AllowedMethods'
        description: 'An HTTP method that you allow the origin to execute. Valid values are <code>GET</code>, <code>PUT</code>, <code>HEAD</code>, <code>POST</code>, and <code>DELETE</code>.'
      AllowedOrigins:
        $ref: '#/definitions/AllowedOrigins'
        description: One or more origins you want customers to be able to access the bucket from.
      ExposeHeaders:
        $ref: '#/definitions/ExposeHeaders'
        description: 'One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).'
      MaxAgeSeconds:
        $ref: '#/definitions/MaxAgeSeconds'
        description: The time in seconds that your browser is to cache the preflight response for the specified resource.
    required:
      - AllowedMethods
      - AllowedOrigins
    type: object
  CORSRules:
    items:
      $ref: '#/definitions/CORSRule'
    type: array
    xml:
      wrapped: false
  CSVInput:
    description: Describes how a CSV-formatted input object is formatted.
    properties:
      AllowQuotedRecordDelimiter:
        $ref: '#/definitions/AllowQuotedRecordDelimiter'
        description: Specifies that CSV field values may contain quoted record delimiters and such records should be allowed. Default value is FALSE. Setting this value to TRUE may lower performance.
      Comments:
        $ref: '#/definitions/Comments'
        description: The single character used to indicate a row should be ignored when present at the start of a row.
      FieldDelimiter:
        $ref: '#/definitions/FieldDelimiter'
        description: The value used to separate individual fields in a record.
      FileHeaderInfo:
        $ref: '#/definitions/FileHeaderInfo'
        description: 'Describes the first line of input. Valid values: None, Ignore, Use.'
      QuoteCharacter:
        $ref: '#/definitions/QuoteCharacter'
        description: Value used for escaping where the field delimiter is part of the value.
      QuoteEscapeCharacter:
        $ref: '#/definitions/QuoteEscapeCharacter'
        description: The single character used for escaping the quote character inside an already escaped value.
      RecordDelimiter:
        $ref: '#/definitions/RecordDelimiter'
        description: The value used to separate individual records.
    type: object
  CSVOutput:
    description: Describes how CSV-formatted results are formatted.
    properties:
      FieldDelimiter:
        $ref: '#/definitions/FieldDelimiter'
        description: The value used to separate individual fields in a record.
      QuoteCharacter:
        $ref: '#/definitions/QuoteCharacter'
        description: The value used for escaping where the field delimiter is part of the value.
      QuoteEscapeCharacter:
        $ref: '#/definitions/QuoteEscapeCharacter'
        description: Th single character used for escaping the quote character inside an already escaped value.
      QuoteFields:
        $ref: '#/definitions/QuoteFields'
        description: Indicates whether or not all output fields should be quoted.
      RecordDelimiter:
        $ref: '#/definitions/RecordDelimiter'
        description: The value used to separate individual records.
    type: object
  CacheControl:
    type: string
  CloudFunction:
    type: string
  CloudFunctionConfiguration:
    description: <p/>
    properties:
      CloudFunction:
        $ref: '#/definitions/CloudFunction'
        description: <p/>
      Event:
        $ref: '#/definitions/Event'
      Events:
        $ref: '#/definitions/EventList'
        description: <p/>
      Id:
        $ref: '#/definitions/NotificationId'
      InvocationRole:
        $ref: '#/definitions/CloudFunctionInvocationRole'
        description: <p/>
    type: object
  CloudFunctionInvocationRole:
    type: string
  Code:
    type: string
  Comments:
    type: string
  CommonPrefix:
    description: <p/>
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: <p/>
    type: object
  CommonPrefixList:
    items:
      $ref: '#/definitions/CommonPrefix'
    type: array
    xml:
      wrapped: false
  CompleteMultipartUploadOutput:
    example:
      Bucket: acexamplebucket
      ETag: '"4d9031c7644d8081c2829f4ea23c55f7-2"'
      Key: bigobject
      Location: 'https://examplebucket.s3.amazonaws.com/bigobject'
    properties:
      Bucket:
        $ref: '#/definitions/BucketName'
        description: <p/>
      ETag:
        $ref: '#/definitions/ETag'
        description: Entity tag of the object.
      Key:
        $ref: '#/definitions/ObjectKey'
        description: <p/>
      Location:
        $ref: '#/definitions/Location'
        description: <p/>
    type: object
  CompleteMultipartUploadRequest:
    properties:
      MultipartUpload:
        $ref: '#/definitions/CompletedMultipartUpload'
        description: <p/>
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  CompletedMultipartUpload:
    description: <p/>
    properties:
      Parts:
        $ref: '#/definitions/CompletedPartList'
        description: <p/>
    type: object
  CompletedPart:
    description: <p/>
    properties:
      ETag:
        $ref: '#/definitions/ETag'
        description: Entity tag returned when the part was uploaded.
      PartNumber:
        $ref: '#/definitions/PartNumber'
        description: 'Part number that identifies the part. This is a positive integer between 1 and 10,000.'
    type: object
  CompletedPartList:
    items:
      $ref: '#/definitions/CompletedPart'
    type: array
    xml:
      wrapped: false
  CompressionType:
    enum:
      - NONE
      - GZIP
      - BZIP2
    type: string
  Condition:
    description: 'Specifies a condition that must be met for a redirect to apply. '
    properties:
      HttpErrorCodeReturnedEquals:
        $ref: '#/definitions/HttpErrorCodeReturnedEquals'
        description: 'The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied. Required when parent element <code>Condition</code> is specified and sibling <code>KeyPrefixEquals</code> is not specified. If both are specified, then both must be true for the redirect to be applied.'
      KeyPrefixEquals:
        $ref: '#/definitions/KeyPrefixEquals'
        description: 'The object key name prefix when the redirect is applied. For example, to redirect requests for <code>ExamplePage.html</code>, the key prefix will be <code>ExamplePage.html</code>. To redirect request for all pages with the prefix <code>docs/</code>, the key prefix will be <code>/docs</code>, which identifies all objects in the docs/ folder. Required when the parent element <code>Condition</code> is specified and sibling <code>HttpErrorCodeReturnedEquals</code> is not specified. If both conditions are specified, both must be true for the redirect to be applied.'
    type: object
  ConfirmRemoveSelfBucketAccess:
    type: boolean
  ContentDisposition:
    type: string
  ContentEncoding:
    type: string
  ContentLanguage:
    type: string
  ContentLength:
    type: integer
  ContentMD5:
    type: string
  ContentRange:
    type: string
  ContentType:
    type: string
  ContinuationEvent:
    description: <p/>
    properties: {}
    type: object
  CopyObjectOutput:
    example:
      CopyObjectResult:
        ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
        LastModified: '2016-12-15T17:38:53.000Z'
    properties:
      CopyObjectResult:
        $ref: '#/definitions/CopyObjectResult'
        description: <p/>
    type: object
  CopyObjectRequest:
    properties:
      Metadata:
        $ref: '#/definitions/Metadata'
        description: A map of metadata to store with the object in S3.
    type: object
  CopyObjectResult:
    description: <p/>
    properties:
      ETag:
        $ref: '#/definitions/ETag'
        description: <p/>
      LastModified:
        $ref: '#/definitions/LastModified'
        description: <p/>
    type: object
  CopyPartResult:
    description: <p/>
    properties:
      ETag:
        $ref: '#/definitions/ETag'
        description: Entity tag of the object.
      LastModified:
        $ref: '#/definitions/LastModified'
        description: Date and time at which the object was uploaded.
    type: object
  CopySource:
    pattern: \/.+\/.+
    type: string
  CopySourceIfMatch:
    type: string
  CopySourceIfModifiedSince:
    format: date-time
    type: string
  CopySourceIfNoneMatch:
    type: string
  CopySourceIfUnmodifiedSince:
    format: date-time
    type: string
  CopySourceRange:
    type: string
  CopySourceSSECustomerAlgorithm:
    type: string
  CopySourceSSECustomerKey:
    format: password
    type: string
  CopySourceSSECustomerKeyMD5:
    type: string
  CopySourceVersionId:
    type: string
  CreateBucketConfiguration:
    description: <p/>
    properties:
      LocationConstraint:
        $ref: '#/definitions/BucketLocationConstraint'
        description: 'Specifies the region where the bucket will be created. If you don''t specify a region, the bucket is created in US East (N. Virginia) Region (us-east-1).'
    type: object
  CreateBucketOutput:
    example:
      Location: /examplebucket
    properties: {}
    type: object
  CreateBucketRequest:
    properties:
      CreateBucketConfiguration:
        $ref: '#/definitions/CreateBucketConfiguration'
        description: <p/>
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  CreateMultipartUploadOutput:
    example:
      Bucket: examplebucket
      Key: largeobject
      UploadId: ibZBv_75gd9r8lH_gqXatLdxMVpAlj6ZQjEs.OwyF3953YdwbcQnMA2BLGn8Lx12fQNICtMw5KyteFeHw.Sjng--
    properties:
      Bucket:
        $ref: '#/definitions/BucketName'
        description: Name of the bucket to which the multipart upload was initiated.
      Key:
        $ref: '#/definitions/ObjectKey'
        description: Object key for which the multipart upload was initiated.
      UploadId:
        $ref: '#/definitions/MultipartUploadId'
        description: ID for the initiated multipart upload.
    type: object
  CreateMultipartUploadRequest:
    properties:
      Metadata:
        $ref: '#/definitions/Metadata'
        description: A map of metadata to store with the object in S3.
    type: object
  CreationDate:
    format: date-time
    type: string
  Date:
    format: date-time
    type: string
  Days:
    type: integer
  DaysAfterInitiation:
    type: integer
  DefaultRetention:
    description: The container element for specifying the default object lock retention settings for new objects placed in the specified bucket.
    properties:
      Days:
        $ref: '#/definitions/Days'
        description: The number of days that you want to specify for the default retention period.
      Mode:
        $ref: '#/definitions/ObjectLockRetentionMode'
        description: The default object lock retention mode you want to apply to new objects placed in the specified bucket.
      Years:
        $ref: '#/definitions/Years'
        description: The number of years that you want to specify for the default retention period.
    type: object
  Delete:
    description: <p/>
    properties:
      Objects:
        $ref: '#/definitions/ObjectIdentifierList'
        description: <p/>
      Quiet:
        $ref: '#/definitions/Quiet'
        description: 'Element to enable quiet mode for the request. When you add this element, you must set its value to true.'
    required:
      - Objects
    type: object
  DeleteBucketAnalyticsConfigurationRequest:
    properties: {}
    type: object
  DeleteBucketCorsRequest:
    properties: {}
    type: object
  DeleteBucketEncryptionRequest:
    properties: {}
    type: object
  DeleteBucketInventoryConfigurationRequest:
    properties: {}
    type: object
  DeleteBucketLifecycleRequest:
    properties: {}
    type: object
  DeleteBucketMetricsConfigurationRequest:
    properties: {}
    type: object
  DeleteBucketPolicyRequest:
    properties: {}
    type: object
  DeleteBucketReplicationRequest:
    properties: {}
    type: object
  DeleteBucketRequest:
    properties: {}
    type: object
  DeleteBucketTaggingRequest:
    properties: {}
    type: object
  DeleteBucketWebsiteRequest:
    properties: {}
    type: object
  DeleteMarker:
    type: boolean
  DeleteMarkerEntry:
    description: <p/>
    properties:
      IsLatest:
        $ref: '#/definitions/IsLatest'
        description: Specifies whether the object is (true) or is not (false) the latest version of an object.
      Key:
        $ref: '#/definitions/ObjectKey'
        description: The object key.
      LastModified:
        $ref: '#/definitions/LastModified'
        description: Date and time the object was last modified.
      Owner:
        $ref: '#/definitions/Owner'
        description: <p/>
      VersionId:
        $ref: '#/definitions/ObjectVersionId'
        description: Version ID of an object.
    type: object
  DeleteMarkerReplication:
    description: Specifies whether Amazon S3 should replicate delete makers.
    properties:
      Status:
        $ref: '#/definitions/DeleteMarkerReplicationStatus'
        description: '<p>The status of the delete marker replication.</p> <note> <p> In the current implementation, Amazon S3 doesn''t replicate the delete markers. The status must be <code>Disabled</code>. </p> </note>'
    type: object
  DeleteMarkerReplicationStatus:
    enum:
      - Enabled
      - Disabled
    type: string
  DeleteMarkerVersionId:
    type: string
  DeleteMarkers:
    items:
      $ref: '#/definitions/DeleteMarkerEntry'
    type: array
    xml:
      wrapped: false
  DeleteObjectOutput:
    example: {}
    properties: {}
    type: object
  DeleteObjectRequest:
    properties: {}
    type: object
  DeleteObjectTaggingOutput:
    example:
      VersionId: ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI
    properties: {}
    type: object
  DeleteObjectTaggingRequest:
    properties: {}
    type: object
  DeleteObjectsOutput:
    example:
      Deleted:
        - DeleteMarker: 'true'
          DeleteMarkerVersionId: A._w1z6EFiCF5uhtQMDal9JDkID9tQ7F
          Key: objectkey1
        - DeleteMarker: 'true'
          DeleteMarkerVersionId: iOd_ORxhkKe_e8G8_oSGxt2PjsCZKlkt
          Key: objectkey2
    properties:
      Deleted:
        $ref: '#/definitions/DeletedObjects'
        description: <p/>
      Errors:
        $ref: '#/definitions/Errors'
        description: <p/>
    type: object
  DeleteObjectsRequest:
    properties:
      Delete:
        $ref: '#/definitions/Delete'
        description: <p/>
    required:
      - Delete
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  DeletePublicAccessBlockRequest:
    properties: {}
    type: object
  DeletedObject:
    description: <p/>
    properties:
      DeleteMarker:
        $ref: '#/definitions/DeleteMarker'
        description: <p/>
      DeleteMarkerVersionId:
        $ref: '#/definitions/DeleteMarkerVersionId'
        description: <p/>
      Key:
        $ref: '#/definitions/ObjectKey'
        description: <p/>
      VersionId:
        $ref: '#/definitions/ObjectVersionId'
        description: <p/>
    type: object
  DeletedObjects:
    items:
      $ref: '#/definitions/DeletedObject'
    type: array
    xml:
      wrapped: false
  Delimiter:
    type: string
  Description:
    type: string
  Destination:
    description: Specifies information about where to publish analysis or configuration results for an Amazon S3 bucket.
    properties:
      AccessControlTranslation:
        $ref: '#/definitions/AccessControlTranslation'
        description: 'Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS account that owns the source object.'
      Account:
        $ref: '#/definitions/AccountId'
        description: 'Destination bucket owner account ID. In a cross-account scenario, if you direct Amazon S3 to change replica ownership to the AWS account that owns the destination bucket by specifying the <code>AccessControlTranslation</code> property, this is the account ID of the destination bucket owner. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/crr-change-owner.html">Cross-Region Replication Additional Configuration: Change Replica Owner</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
      Bucket:
        $ref: '#/definitions/BucketName'
        description: '<p> The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to store replicas of the object identified by the rule.</p> <p>A replication configuration can replicate objects to only one destination bucket. If there are multiple rules in your replication configuration, all rules must specify the same destination bucket.</p>'
      EncryptionConfiguration:
        $ref: '#/definitions/EncryptionConfiguration'
        description: 'A container that provides information about encryption. If <code>SourceSelectionCriteria</code> is specified, you must specify this element.'
      StorageClass:
        $ref: '#/definitions/StorageClass'
        description: '<p> The storage class to use when replicating objects, such as standard or reduced redundancy. By default, Amazon S3 uses the storage class of the source object to create the object replica. </p> <p>For valid values, see the <code>StorageClass</code> element of the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html">PUT Bucket replication</a> action in the <i>Amazon Simple Storage Service API Reference</i>.</p>'
    required:
      - Bucket
    type: object
  DisplayName:
    type: string
  ETag:
    type: string
  EmailAddress:
    type: string
  EnableRequestProgress:
    type: boolean
  EncodingType:
    description: 'Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.'
    enum:
      - url
    type: string
  Encryption:
    description: Describes the server-side encryption that will be applied to the restore results.
    properties:
      EncryptionType:
        $ref: '#/definitions/ServerSideEncryption'
        description: 'The server-side encryption algorithm used when storing job results in Amazon S3 (e.g., AES256, aws:kms).'
      KMSContext:
        $ref: '#/definitions/KMSContext'
        description: 'If the encryption type is aws:kms, this optional value can be used to specify the encryption context for the restore results.'
      KMSKeyId:
        $ref: '#/definitions/SSEKMSKeyId'
        description: 'If the encryption type is aws:kms, this optional value specifies the AWS KMS key ID to use for encryption of job results.'
    required:
      - EncryptionType
    type: object
  EncryptionConfiguration:
    description: Specifies encryption-related information for an Amazon S3 bucket that is a destination for replicated objects.
    properties:
      ReplicaKmsKeyID:
        $ref: '#/definitions/ReplicaKmsKeyID'
        description: Specifies the AWS KMS Key ID (Key ARN or Alias ARN) for the destination bucket. Amazon S3 uses this key to encrypt replica objects.
    type: object
  EndEvent:
    description: <p/>
    properties: {}
    type: object
  Error:
    description: <p/>
    properties:
      Code:
        $ref: '#/definitions/Code'
        description: <p/>
      Key:
        $ref: '#/definitions/ObjectKey'
        description: <p/>
      Message:
        $ref: '#/definitions/Message'
        description: <p/>
      VersionId:
        $ref: '#/definitions/ObjectVersionId'
        description: <p/>
    type: object
  ErrorDocument:
    description: <p/>
    properties:
      Key:
        $ref: '#/definitions/ObjectKey'
        description: The object key name to use when a 4XX class error occurs.
    required:
      - Key
    type: object
  Errors:
    items:
      $ref: '#/definitions/Error'
    type: array
    xml:
      wrapped: false
  Event:
    description: The bucket event for which to send notifications.
    enum:
      - 's3:ReducedRedundancyLostObject'
      - 's3:ObjectCreated:*'
      - 's3:ObjectCreated:Put'
      - 's3:ObjectCreated:Post'
      - 's3:ObjectCreated:Copy'
      - 's3:ObjectCreated:CompleteMultipartUpload'
      - 's3:ObjectRemoved:*'
      - 's3:ObjectRemoved:Delete'
      - 's3:ObjectRemoved:DeleteMarkerCreated'
      - 's3:ObjectRestore:Post'
      - 's3:ObjectRestore:Completed'
    type: string
  EventList:
    items:
      $ref: '#/definitions/Event'
    type: array
    xml:
      wrapped: false
  Expiration:
    type: string
  ExpirationStatus:
    enum:
      - Enabled
      - Disabled
    type: string
  ExpiredObjectDeleteMarker:
    type: boolean
  Expires:
    format: date-time
    type: string
  ExposeHeader:
    type: string
  ExposeHeaders:
    items:
      $ref: '#/definitions/ExposeHeader'
    type: array
    xml:
      wrapped: false
  Expression:
    type: string
  ExpressionType:
    enum:
      - SQL
    type: string
  FetchOwner:
    type: boolean
  FieldDelimiter:
    type: string
  FileHeaderInfo:
    enum:
      - USE
      - IGNORE
      - NONE
    type: string
  FilterRule:
    description: Specifies the Amazon S3 object key name to filter on and whether to filter on the suffix or prefix of the key name.
    properties:
      Name:
        $ref: '#/definitions/FilterRuleName'
        description: 'The object key name prefix or suffix identifying one or more objects to which the filtering rule applies. The maximum length is 1,024 characters. Overlapping prefixes and suffixes are not supported. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Configuring Event Notifications</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
      Value:
        $ref: '#/definitions/FilterRuleValue'
        description: The value that the filter searches for in object key names.
    type: object
  FilterRuleList:
    description: A list of containers for the key value pair that defines the criteria for the filter rule.
    items:
      $ref: '#/definitions/FilterRule'
    type: array
    xml:
      wrapped: false
  FilterRuleName:
    enum:
      - prefix
      - suffix
    type: string
  FilterRuleValue:
    type: string
  GetBucketAccelerateConfigurationOutput:
    properties:
      Status:
        $ref: '#/definitions/BucketAccelerateStatus'
        description: The accelerate configuration of the bucket.
    type: object
  GetBucketAccelerateConfigurationRequest:
    properties: {}
    type: object
  GetBucketAclOutput:
    properties:
      Grants:
        $ref: '#/definitions/Grants'
        description: A list of grants.
      Owner:
        $ref: '#/definitions/Owner'
        description: <p/>
    type: object
  GetBucketAclRequest:
    properties: {}
    type: object
  GetBucketAnalyticsConfigurationOutput:
    properties:
      AnalyticsConfiguration:
        $ref: '#/definitions/AnalyticsConfiguration'
        description: The configuration and any analyses for the analytics filter.
    type: object
  GetBucketAnalyticsConfigurationRequest:
    properties: {}
    type: object
  GetBucketCorsOutput:
    example:
      CORSRules:
        - AllowedHeaders:
            - Authorization
          AllowedMethods:
            - GET
          AllowedOrigins:
            - '*'
          MaxAgeSeconds: 3000
    properties:
      CORSRules:
        $ref: '#/definitions/CORSRules'
        description: <p/>
    type: object
  GetBucketCorsRequest:
    properties: {}
    type: object
  GetBucketEncryptionOutput:
    properties:
      ServerSideEncryptionConfiguration:
        $ref: '#/definitions/ServerSideEncryptionConfiguration'
        description: <p/>
    type: object
  GetBucketEncryptionRequest:
    properties: {}
    type: object
  GetBucketInventoryConfigurationOutput:
    properties:
      InventoryConfiguration:
        $ref: '#/definitions/InventoryConfiguration'
        description: Specifies the inventory configuration.
    type: object
  GetBucketInventoryConfigurationRequest:
    properties: {}
    type: object
  GetBucketLifecycleConfigurationOutput:
    example:
      Rules:
        - ID: Rule for TaxDocs/
          Prefix: TaxDocs
          Status: Enabled
          Transitions:
            - Days: 365
              StorageClass: STANDARD_IA
    properties:
      Rules:
        $ref: '#/definitions/LifecycleRules'
        description: <p/>
    type: object
  GetBucketLifecycleConfigurationRequest:
    properties: {}
    type: object
  GetBucketLifecycleOutput:
    example:
      Rules:
        - Expiration:
            Days: 1
          ID: delete logs
          Prefix: 123/
          Status: Enabled
    properties:
      Rules:
        $ref: '#/definitions/Rules'
        description: <p/>
    type: object
  GetBucketLifecycleRequest:
    properties: {}
    type: object
  GetBucketLocationOutput:
    example:
      LocationConstraint: us-west-2
    properties:
      LocationConstraint:
        $ref: '#/definitions/BucketLocationConstraint'
        description: <p/>
    type: object
  GetBucketLocationRequest:
    properties: {}
    type: object
  GetBucketLoggingOutput:
    properties:
      LoggingEnabled:
        $ref: '#/definitions/LoggingEnabled'
        description: <p/>
    type: object
  GetBucketLoggingRequest:
    properties: {}
    type: object
  GetBucketMetricsConfigurationOutput:
    properties:
      MetricsConfiguration:
        $ref: '#/definitions/MetricsConfiguration'
        description: Specifies the metrics configuration.
    type: object
  GetBucketMetricsConfigurationRequest:
    properties: {}
    type: object
  GetBucketNotificationConfigurationRequest:
    properties: {}
    type: object
  GetBucketPolicyOutput:
    example:
      Policy: '{"Version":"2008-10-17","Id":"LogPolicy","Statement":[{"Sid":"Enables the log delivery group to publish logs to your bucket ","Effect":"Allow","Principal":{"AWS":"111122223333"},"Action":["s3:GetBucketAcl","s3:GetObjectAcl","s3:PutObject"],"Resource":["arn:aws:s3:::policytest1/*","arn:aws:s3:::policytest1"]}]}'
    properties:
      Policy:
        $ref: '#/definitions/Policy'
        description: The bucket policy as a JSON document.
    type: object
  GetBucketPolicyRequest:
    properties: {}
    type: object
  GetBucketPolicyStatusOutput:
    properties:
      PolicyStatus:
        $ref: '#/definitions/PolicyStatus'
        description: The policy status for the specified bucket.
    type: object
  GetBucketPolicyStatusRequest:
    properties: {}
    type: object
  GetBucketReplicationOutput:
    example:
      ReplicationConfiguration:
        Role: 'arn:aws:iam::acct-id:role/example-role'
        Rules:
          - Destination:
              Bucket: 'arn:aws:s3:::destination-bucket'
            ID: MWIwNTkwZmItMTE3MS00ZTc3LWJkZDEtNzRmODQwYzc1OTQy
            Prefix: Tax
            Status: Enabled
    properties:
      ReplicationConfiguration:
        $ref: '#/definitions/ReplicationConfiguration'
        description: <p/>
    type: object
  GetBucketReplicationRequest:
    properties: {}
    type: object
  GetBucketRequestPaymentOutput:
    example:
      Payer: BucketOwner
    properties:
      Payer:
        $ref: '#/definitions/Payer'
        description: Specifies who pays for the download and request fees.
    type: object
  GetBucketRequestPaymentRequest:
    properties: {}
    type: object
  GetBucketTaggingOutput:
    example:
      TagSet:
        - Key: key1
          Value: value1
        - Key: key2
          Value: value2
    properties:
      TagSet:
        $ref: '#/definitions/TagSet'
        description: <p/>
    required:
      - TagSet
    type: object
  GetBucketTaggingRequest:
    properties: {}
    type: object
  GetBucketVersioningOutput:
    example:
      MFADelete: Disabled
      Status: Enabled
    properties:
      MFADelete:
        $ref: '#/definitions/MFADeleteStatus'
        description: 'Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.'
      Status:
        $ref: '#/definitions/BucketVersioningStatus'
        description: The versioning state of the bucket.
    type: object
  GetBucketVersioningRequest:
    properties: {}
    type: object
  GetBucketWebsiteOutput:
    example:
      ErrorDocument:
        Key: error.html
      IndexDocument:
        Suffix: index.html
    properties:
      ErrorDocument:
        $ref: '#/definitions/ErrorDocument'
        description: <p/>
      IndexDocument:
        $ref: '#/definitions/IndexDocument'
        description: <p/>
      RedirectAllRequestsTo:
        $ref: '#/definitions/RedirectAllRequestsTo'
        description: <p/>
      RoutingRules:
        $ref: '#/definitions/RoutingRules'
        description: <p/>
    type: object
  GetBucketWebsiteRequest:
    properties: {}
    type: object
  GetObjectAclOutput:
    example:
      Grants:
        - Grantee:
            DisplayName: owner-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Type: CanonicalUser
          Permission: WRITE
        - Grantee:
            DisplayName: owner-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Type: CanonicalUser
          Permission: WRITE_ACP
        - Grantee:
            DisplayName: owner-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Type: CanonicalUser
          Permission: READ
        - Grantee:
            DisplayName: owner-display-name
            ID: 852b113eexamplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Type: CanonicalUser
          Permission: READ_ACP
      Owner:
        DisplayName: owner-display-name
        ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
    properties:
      Grants:
        $ref: '#/definitions/Grants'
        description: A list of grants.
      Owner:
        $ref: '#/definitions/Owner'
        description: <p/>
    type: object
  GetObjectAclRequest:
    properties: {}
    type: object
  GetObjectLegalHoldOutput:
    properties:
      LegalHold:
        $ref: '#/definitions/ObjectLockLegalHold'
        description: The current Legal Hold status for the specified object.
    type: object
  GetObjectLegalHoldRequest:
    properties: {}
    type: object
  GetObjectLockConfigurationOutput:
    properties:
      ObjectLockConfiguration:
        $ref: '#/definitions/ObjectLockConfiguration'
        description: The specified bucket's object lock configuration.
    type: object
  GetObjectLockConfigurationRequest:
    properties: {}
    type: object
  GetObjectOutput:
    example:
      AcceptRanges: bytes
      ContentLength: '10'
      ContentRange: bytes 0-9/43
      ContentType: text/plain
      ETag: '"0d94420ffd0bc68cd3d152506b97a9cc"'
      LastModified: 'Thu, 09 Oct 2014 22:57:28 GMT'
      Metadata: {}
      VersionId: 'null'
    properties:
      Body:
        $ref: '#/definitions/Body'
        description: Object data.
      Metadata:
        $ref: '#/definitions/Metadata'
        description: A map of metadata to store with the object in S3.
    type: object
  GetObjectRequest:
    properties: {}
    type: object
  GetObjectRetentionOutput:
    properties:
      Retention:
        $ref: '#/definitions/ObjectLockRetention'
        description: The container element for an object's retention settings.
    type: object
  GetObjectRetentionRequest:
    properties: {}
    type: object
  GetObjectTaggingOutput:
    example:
      TagSet:
        - Key: Key4
          Value: Value4
        - Key: Key3
          Value: Value3
      VersionId: 'null'
    properties:
      TagSet:
        $ref: '#/definitions/TagSet'
        description: <p/>
    required:
      - TagSet
    type: object
  GetObjectTaggingRequest:
    properties: {}
    type: object
  GetObjectTorrentOutput:
    example: {}
    properties:
      Body:
        $ref: '#/definitions/Body'
        description: <p/>
    type: object
  GetObjectTorrentRequest:
    properties: {}
    type: object
  GetPublicAccessBlockOutput:
    properties:
      PublicAccessBlockConfiguration:
        $ref: '#/definitions/PublicAccessBlockConfiguration'
        description: The <code>PublicAccessBlock</code> configuration currently in effect for this Amazon S3 bucket.
    type: object
  GetPublicAccessBlockRequest:
    properties: {}
    type: object
  GlacierJobParameters:
    description: <p/>
    properties:
      Tier:
        $ref: '#/definitions/Tier'
        description: Glacier retrieval tier at which the restore will be processed.
    required:
      - Tier
    type: object
  Grant:
    description: <p/>
    properties:
      Grantee:
        $ref: '#/definitions/Grantee'
        description: <p/>
      Permission:
        $ref: '#/definitions/Permission'
        description: Specifies the permission given to the grantee.
    type: object
  GrantFullControl:
    type: string
  GrantRead:
    type: string
  GrantReadACP:
    type: string
  GrantWrite:
    type: string
  GrantWriteACP:
    type: string
  Grantee:
    description: <p/>
    properties:
      DisplayName:
        $ref: '#/definitions/DisplayName'
        description: Screen name of the grantee.
      EmailAddress:
        $ref: '#/definitions/EmailAddress'
        description: Email address of the grantee.
      ID:
        $ref: '#/definitions/ID'
        description: The canonical user ID of the grantee.
      Type:
        $ref: '#/definitions/Type'
        description: Type of grantee
      URI:
        $ref: '#/definitions/URI'
        description: URI of the grantee group.
    required:
      - Type
    type: object
    xml:
      attribute: true
      namespace: 'http://www.w3.org/2001/XMLSchema-instance'
  Grants:
    items:
      $ref: '#/definitions/Grant'
    type: array
  HeadBucketRequest:
    properties: {}
    type: object
  HeadObjectOutput:
    example:
      AcceptRanges: bytes
      ContentLength: '3191'
      ContentType: image/jpeg
      ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
      LastModified: 'Thu, 15 Dec 2016 01:19:41 GMT'
      Metadata: {}
      VersionId: 'null'
    properties:
      Metadata:
        $ref: '#/definitions/Metadata'
        description: A map of metadata to store with the object in S3.
    type: object
  HeadObjectRequest:
    properties: {}
    type: object
  HostName:
    type: string
  HttpErrorCodeReturnedEquals:
    type: string
  HttpRedirectCode:
    type: string
  ID:
    type: string
  IfMatch:
    type: string
  IfModifiedSince:
    format: date-time
    type: string
  IfNoneMatch:
    type: string
  IfUnmodifiedSince:
    format: date-time
    type: string
  IndexDocument:
    description: <p/>
    properties:
      Suffix:
        $ref: '#/definitions/Suffix'
        description: A suffix that is appended to a request that is for a directory on the website endpoint (e.g. if the suffix is index.html and you make a request to samplebucket/images/ the data that is returned will be for the object with the key name images/index.html) The suffix must not be empty and must not include a slash character.
    required:
      - Suffix
    type: object
  Initiated:
    format: date-time
    type: string
  Initiator:
    description: <p/>
    properties:
      DisplayName:
        $ref: '#/definitions/DisplayName'
        description: Name of the Principal.
      ID:
        $ref: '#/definitions/ID'
        description: 'If the principal is an AWS account, it provides the Canonical User ID. If the principal is an IAM User, it provides a user ARN value.'
    type: object
  InputSerialization:
    description: Describes the serialization format of the object.
    properties:
      CSV:
        $ref: '#/definitions/CSVInput'
        description: Describes the serialization of a CSV-encoded object.
      CompressionType:
        $ref: '#/definitions/CompressionType'
        description: 'Specifies object''s compression format. Valid values: NONE, GZIP, BZIP2. Default Value: NONE.'
      JSON:
        $ref: '#/definitions/JSONInput'
        description: Specifies JSON as object's input serialization format.
      Parquet:
        $ref: '#/definitions/ParquetInput'
        description: Specifies Parquet as object's input serialization format.
    type: object
  InventoryConfiguration:
    description: 'Specifies the inventory configuration for an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html">GET Bucket inventory</a> in the <i>Amazon Simple Storage Service API Reference</i>. '
    properties:
      Destination:
        $ref: '#/definitions/InventoryDestination'
        description: Contains information about where to publish the inventory results.
      Filter:
        $ref: '#/definitions/InventoryFilter'
        description: Specifies an inventory filter. The inventory only includes objects that meet the filter's criteria.
      Id:
        $ref: '#/definitions/InventoryId'
        description: The ID used to identify the inventory configuration.
      IncludedObjectVersions:
        $ref: '#/definitions/InventoryIncludedObjectVersions'
        description: 'Object versions to include in the inventory list. If set to <code>All</code>, the list includes all the object versions, which adds the version-related fields <code>VersionId</code>, <code>IsLatest</code>, and <code>DeleteMarker</code> to the list. If set to <code>Current</code>, the list does not contain these version-related fields.'
      IsEnabled:
        $ref: '#/definitions/IsEnabled'
        description: 'Specifies whether the inventory is enabled or disabled. If set to <code>True</code>, an inventory list is generated. If set to <code>False</code>, no inventory list is generated.'
      OptionalFields:
        $ref: '#/definitions/InventoryOptionalFields'
        description: Contains the optional fields that are included in the inventory results.
      Schedule:
        $ref: '#/definitions/InventorySchedule'
        description: Specifies the schedule for generating inventory results.
    required:
      - Destination
      - IsEnabled
      - Id
      - IncludedObjectVersions
      - Schedule
    type: object
  InventoryConfigurationList:
    items:
      $ref: '#/definitions/InventoryConfiguration'
    type: array
    xml:
      wrapped: false
  InventoryDestination:
    description: <p/>
    properties:
      S3BucketDestination:
        $ref: '#/definitions/InventoryS3BucketDestination'
        description: 'Contains the bucket name, file format, bucket owner (optional), and prefix (optional) where inventory results are published.'
    required:
      - S3BucketDestination
    type: object
  InventoryEncryption:
    description: Contains the type of server-side encryption used to encrypt the inventory results.
    properties:
      SSEKMS:
        $ref: '#/definitions/SSEKMS'
        description: Specifies the use of SSE-KMS to encrypt delivered Inventory reports.
      SSES3:
        $ref: '#/definitions/SSES3'
        description: Specifies the use of SSE-S3 to encrypt delivered Inventory reports.
    type: object
  InventoryFilter:
    description: <p/>
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: The prefix that an object must have to be included in the inventory results.
    required:
      - Prefix
    type: object
  InventoryFormat:
    enum:
      - CSV
      - ORC
      - Parquet
    type: string
  InventoryFrequency:
    enum:
      - Daily
      - Weekly
    type: string
  InventoryId:
    type: string
  InventoryIncludedObjectVersions:
    enum:
      - All
      - Current
    type: string
  InventoryOptionalField:
    enum:
      - Size
      - LastModifiedDate
      - StorageClass
      - ETag
      - IsMultipartUploaded
      - ReplicationStatus
      - EncryptionStatus
      - ObjectLockRetainUntilDate
      - ObjectLockMode
      - ObjectLockLegalHoldStatus
    type: string
  InventoryOptionalFields:
    items:
      $ref: '#/definitions/InventoryOptionalField'
    type: array
  InventoryS3BucketDestination:
    description: <p/>
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The ID of the account that owns the destination bucket.
      Bucket:
        $ref: '#/definitions/BucketName'
        description: The Amazon resource name (ARN) of the bucket where inventory results will be published.
      Encryption:
        $ref: '#/definitions/InventoryEncryption'
        description: Contains the type of server-side encryption used to encrypt the inventory results.
      Format:
        $ref: '#/definitions/InventoryFormat'
        description: Specifies the output format of the inventory results.
      Prefix:
        $ref: '#/definitions/Prefix'
        description: The prefix that is prepended to all inventory results.
    required:
      - Bucket
      - Format
    type: object
  InventorySchedule:
    description: <p/>
    properties:
      Frequency:
        $ref: '#/definitions/InventoryFrequency'
        description: Specifies how frequently inventory results are produced.
    required:
      - Frequency
    type: object
  IsEnabled:
    type: boolean
  IsLatest:
    type: boolean
  IsPublic:
    type: boolean
  IsTruncated:
    type: boolean
  JSONInput:
    description: <p/>
    properties:
      Type:
        $ref: '#/definitions/JSONType'
        description: 'The type of JSON. Valid values: Document, Lines.'
    type: object
  JSONOutput:
    description: <p/>
    properties:
      RecordDelimiter:
        $ref: '#/definitions/RecordDelimiter'
        description: The value used to separate individual records in the output.
    type: object
  JSONType:
    enum:
      - DOCUMENT
      - LINES
    type: string
  KMSContext:
    type: string
  KeyCount:
    type: integer
  KeyMarker:
    type: string
  KeyPrefixEquals:
    type: string
  LambdaFunctionArn:
    type: string
  LambdaFunctionConfiguration:
    description: A container for specifying the configuration for AWS Lambda notifications.
    properties:
      Events:
        $ref: '#/definitions/EventList'
        description: 'The Amazon S3 bucket event for which to invoke the AWS Lambda function. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Supported Event Types</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
      Filter:
        $ref: '#/definitions/NotificationConfigurationFilter'
        description: <p/>
      Id:
        $ref: '#/definitions/NotificationId'
      LambdaFunctionArn:
        $ref: '#/definitions/LambdaFunctionArn'
        description: The Amazon Resource Name (ARN) of the AWS Lambda function that Amazon S3 invokes when the specified event type occurs.
    required:
      - LambdaFunctionArn
      - Events
    type: object
  LambdaFunctionConfigurationList:
    items:
      $ref: '#/definitions/LambdaFunctionConfiguration'
    type: array
    xml:
      wrapped: false
  LastModified:
    format: date-time
    type: string
  LifecycleConfiguration:
    description: <p/>
    properties:
      Rules:
        $ref: '#/definitions/Rules'
        description: <p/>
    required:
      - Rules
    type: object
  LifecycleExpiration:
    description: <p/>
    properties:
      Date:
        $ref: '#/definitions/Date'
        description: Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.
      Days:
        $ref: '#/definitions/Days'
        description: 'Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.'
      ExpiredObjectDeleteMarker:
        $ref: '#/definitions/ExpiredObjectDeleteMarker'
        description: 'Indicates whether Amazon S3 will remove a delete marker with no noncurrent versions. If set to true, the delete marker will be expired; if set to false the policy takes no action. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.'
    type: object
  LifecycleRule:
    description: <p/>
    properties:
      AbortIncompleteMultipartUpload:
        $ref: '#/definitions/AbortIncompleteMultipartUpload'
        description: <p/>
      Expiration:
        $ref: '#/definitions/LifecycleExpiration'
        description: <p/>
      Filter:
        $ref: '#/definitions/LifecycleRuleFilter'
        description: <p/>
      ID:
        $ref: '#/definitions/ID'
        description: Unique identifier for the rule. The value cannot be longer than 255 characters.
      NoncurrentVersionExpiration:
        $ref: '#/definitions/NoncurrentVersionExpiration'
        description: <p/>
      NoncurrentVersionTransitions:
        $ref: '#/definitions/NoncurrentVersionTransitionList'
        description: <p/>
      Prefix:
        $ref: '#/definitions/Prefix'
        description: Prefix identifying one or more objects to which the rule applies. This is No longer used; use Filter instead.
      Status:
        $ref: '#/definitions/ExpirationStatus'
        description: 'If ''Enabled'', the rule is currently being applied. If ''Disabled'', the rule is not currently being applied.'
      Transitions:
        $ref: '#/definitions/TransitionList'
        description: <p/>
    required:
      - Status
    type: object
  LifecycleRuleAndOperator:
    description: This is used in a Lifecycle Rule Filter to apply a logical AND to two or more predicates. The Lifecycle Rule will apply to any object matching all of the predicates configured inside the And operator.
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: <p/>
      Tags:
        $ref: '#/definitions/TagSet'
        description: All of these tags must exist in the object's tag set in order for the rule to apply.
    type: object
    xml:
      wrapped: false
  LifecycleRuleFilter:
    description: 'The Filter is used to identify objects that a Lifecycle Rule applies to. A Filter must have exactly one of Prefix, Tag, or And specified.'
    properties:
      And:
        $ref: '#/definitions/LifecycleRuleAndOperator'
        description: <p/>
      Prefix:
        $ref: '#/definitions/Prefix'
        description: Prefix identifying one or more objects to which the rule applies.
      Tag:
        $ref: '#/definitions/Tag'
        description: This tag must exist in the object's tag set in order for the rule to apply.
    type: object
  LifecycleRules:
    items:
      $ref: '#/definitions/LifecycleRule'
    type: array
    xml:
      wrapped: false
  ListBucketAnalyticsConfigurationsOutput:
    properties:
      AnalyticsConfigurationList:
        $ref: '#/definitions/AnalyticsConfigurationList'
        description: The list of analytics configurations for a bucket.
      ContinuationToken:
        $ref: '#/definitions/Token'
        description: The ContinuationToken that represents where this request began.
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: Indicates whether the returned list of analytics configurations is complete. A value of true indicates that the list is not complete and the NextContinuationToken will be provided for a subsequent request.
      NextContinuationToken:
        $ref: '#/definitions/NextToken'
        description: 'NextContinuationToken is sent when isTruncated is true, which indicates that there are more analytics configurations to list. The next request must include this NextContinuationToken. The token is obfuscated and is not a usable value.'
    type: object
  ListBucketAnalyticsConfigurationsRequest:
    properties: {}
    type: object
  ListBucketInventoryConfigurationsOutput:
    properties:
      ContinuationToken:
        $ref: '#/definitions/Token'
        description: 'If sent in the request, the marker that is used as a starting point for this inventory configuration list response.'
      InventoryConfigurationList:
        $ref: '#/definitions/InventoryConfigurationList'
        description: The list of inventory configurations for a bucket.
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: Indicates whether the returned list of inventory configurations is truncated in this response. A value of true indicates that the list is truncated.
      NextContinuationToken:
        $ref: '#/definitions/NextToken'
        description: The marker used to continue this inventory configuration listing. Use the NextContinuationToken from this response to continue the listing in a subsequent request. The continuation token is an opaque value that Amazon S3 understands.
    type: object
  ListBucketInventoryConfigurationsRequest:
    properties: {}
    type: object
  ListBucketMetricsConfigurationsOutput:
    properties:
      ContinuationToken:
        $ref: '#/definitions/Token'
        description: The marker that is used as a starting point for this metrics configuration list response. This value is present if it was sent in the request.
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: Indicates whether the returned list of metrics configurations is complete. A value of true indicates that the list is not complete and the NextContinuationToken will be provided for a subsequent request.
      MetricsConfigurationList:
        $ref: '#/definitions/MetricsConfigurationList'
        description: The list of metrics configurations for a bucket.
      NextContinuationToken:
        $ref: '#/definitions/NextToken'
        description: The marker used to continue a metrics configuration listing that has been truncated. Use the NextContinuationToken from a previously truncated list response to continue the listing. The continuation token is an opaque value that Amazon S3 understands.
    type: object
  ListBucketMetricsConfigurationsRequest:
    properties: {}
    type: object
  ListBucketsOutput:
    example:
      Buckets:
        - CreationDate: '2012-02-15T21: 03: 02.000Z'
          Name: examplebucket
        - CreationDate: '2011-07-24T19: 33: 50.000Z'
          Name: examplebucket2
        - CreationDate: '2010-12-17T00: 56: 49.000Z'
          Name: examplebucket3
      Owner:
        DisplayName: own-display-name
        ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31
    properties:
      Buckets:
        $ref: '#/definitions/Buckets'
        description: <p/>
      Owner:
        $ref: '#/definitions/Owner'
        description: <p/>
    type: object
  ListMultipartUploadsOutput:
    example:
      Uploads:
        - Initiated: '2014-05-01T05:40:58.000Z'
          Initiator:
            DisplayName: display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Key: JavaFile
          Owner:
            DisplayName: display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          StorageClass: STANDARD
          UploadId: examplelUa.CInXklLQtSMJITdUnoZ1Y5GACB5UckOtspm5zbDMCkPF_qkfZzMiFZ6dksmcnqxJyIBvQMG9X9Q--
        - Initiated: '2014-05-01T05:41:27.000Z'
          Initiator:
            DisplayName: display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Key: JavaFile
          Owner:
            DisplayName: display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          StorageClass: STANDARD
          UploadId: examplelo91lv1iwvWpvCiJWugw2xXLPAD7Z8cJyX9.WiIRgNrdG6Ldsn.9FtS63TCl1Uf5faTB.1U5Ckcbmdw--
    properties:
      Bucket:
        $ref: '#/definitions/BucketName'
        description: Name of the bucket to which the multipart upload was initiated.
      CommonPrefixes:
        $ref: '#/definitions/CommonPrefixList'
        description: <p/>
      Delimiter:
        $ref: '#/definitions/Delimiter'
        description: <p/>
      EncodingType:
        $ref: '#/definitions/EncodingType'
        description: Encoding type used by Amazon S3 to encode object keys in the response.
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: Indicates whether the returned list of multipart uploads is truncated. A value of true indicates that the list was truncated. The list can be truncated if the number of multipart uploads exceeds the limit allowed or specified by max uploads.
      KeyMarker:
        $ref: '#/definitions/KeyMarker'
        description: The key at or after which the listing began.
      MaxUploads:
        $ref: '#/definitions/MaxUploads'
        description: Maximum number of multipart uploads that could have been included in the response.
      NextKeyMarker:
        $ref: '#/definitions/NextKeyMarker'
        description: 'When a list is truncated, this element specifies the value that should be used for the key-marker request parameter in a subsequent request.'
      NextUploadIdMarker:
        $ref: '#/definitions/NextUploadIdMarker'
        description: 'When a list is truncated, this element specifies the value that should be used for the upload-id-marker request parameter in a subsequent request.'
      Prefix:
        $ref: '#/definitions/Prefix'
        description: 'When a prefix is provided in the request, this field contains the specified prefix. The result contains only keys starting with the specified prefix.'
      UploadIdMarker:
        $ref: '#/definitions/UploadIdMarker'
        description: Upload ID after which listing began.
      Uploads:
        $ref: '#/definitions/MultipartUploadList'
        description: <p/>
    type: object
  ListMultipartUploadsRequest:
    properties: {}
    type: object
  ListObjectVersionsOutput:
    example:
      Versions:
        - ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
          IsLatest: true
          Key: HappyFace.jpg
          LastModified: '2016-12-15T01:19:41.000Z'
          Owner:
            DisplayName: owner-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Size: 3191
          StorageClass: STANDARD
          VersionId: 'null'
        - ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
          IsLatest: false
          Key: HappyFace.jpg
          LastModified: '2016-12-13T00:58:26.000Z'
          Owner:
            DisplayName: owner-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Size: 3191
          StorageClass: STANDARD
          VersionId: PHtexPGjH2y.zBgT8LmB7wwLI2mpbz.k
    properties:
      CommonPrefixes:
        $ref: '#/definitions/CommonPrefixList'
        description: <p/>
      DeleteMarkers:
        $ref: '#/definitions/DeleteMarkers'
        description: <p/>
      Delimiter:
        $ref: '#/definitions/Delimiter'
        description: <p/>
      EncodingType:
        $ref: '#/definitions/EncodingType'
        description: Encoding type used by Amazon S3 to encode object keys in the response.
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: 'A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria. If your results were truncated, you can make a follow-up paginated request using the NextKeyMarker and NextVersionIdMarker response parameters as a starting place in another request to return the rest of the results.'
      KeyMarker:
        $ref: '#/definitions/KeyMarker'
        description: Marks the last Key returned in a truncated response.
      MaxKeys:
        $ref: '#/definitions/MaxKeys'
        description: <p/>
      Name:
        $ref: '#/definitions/BucketName'
        description: <p/>
      NextKeyMarker:
        $ref: '#/definitions/NextKeyMarker'
        description: Use this value for the key marker request parameter in a subsequent request.
      NextVersionIdMarker:
        $ref: '#/definitions/NextVersionIdMarker'
        description: Use this value for the next version id marker parameter in a subsequent request.
      Prefix:
        $ref: '#/definitions/Prefix'
        description: <p/>
      VersionIdMarker:
        $ref: '#/definitions/VersionIdMarker'
        description: <p/>
      Versions:
        $ref: '#/definitions/ObjectVersionList'
        description: <p/>
    type: object
  ListObjectVersionsRequest:
    properties: {}
    type: object
  ListObjectsOutput:
    example:
      Contents:
        - ETag: '"70ee1738b6b21e2c8a43f3a5ab0eee71"'
          Key: example1.jpg
          LastModified: '2014-11-21T19:40:05.000Z'
          Owner:
            DisplayName: myname
            ID: 12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Size: 11
          StorageClass: STANDARD
        - ETag: '"9c8af9a76df052144598c115ef33e511"'
          Key: example2.jpg
          LastModified: '2013-11-15T01:10:49.000Z'
          Owner:
            DisplayName: myname
            ID: 12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Size: 713193
          StorageClass: STANDARD
      NextMarker: eyJNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyfQ==
    properties:
      CommonPrefixes:
        $ref: '#/definitions/CommonPrefixList'
        description: <p/>
      Contents:
        $ref: '#/definitions/ObjectList'
        description: <p/>
      Delimiter:
        $ref: '#/definitions/Delimiter'
        description: <p/>
      EncodingType:
        $ref: '#/definitions/EncodingType'
        description: Encoding type used by Amazon S3 to encode object keys in the response.
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria.
      Marker:
        $ref: '#/definitions/Marker'
        description: <p/>
      MaxKeys:
        $ref: '#/definitions/MaxKeys'
        description: <p/>
      Name:
        $ref: '#/definitions/BucketName'
        description: <p/>
      NextMarker:
        $ref: '#/definitions/NextMarker'
        description: 'When response is truncated (the IsTruncated element value in the response is true), you can use the key name in this field as marker in the subsequent request to get next set of objects. Amazon S3 lists objects in alphabetical order Note: This element is returned only if you have delimiter request parameter specified. If response does not include the NextMaker and it is truncated, you can use the value of the last Key in the response as the marker in the subsequent request to get the next set of object keys.'
      Prefix:
        $ref: '#/definitions/Prefix'
        description: <p/>
    type: object
  ListObjectsRequest:
    properties: {}
    type: object
  ListObjectsV2Output:
    example:
      Contents:
        - ETag: '"70ee1738b6b21e2c8a43f3a5ab0eee71"'
          Key: happyface.jpg
          LastModified: '2014-11-21T19:40:05.000Z'
          Size: 11
          StorageClass: STANDARD
        - ETag: '"becf17f89c30367a9a44495d62ed521a-1"'
          Key: test.jpg
          LastModified: '2014-05-02T04:51:50.000Z'
          Size: 4192256
          StorageClass: STANDARD
      IsTruncated: true
      KeyCount: '2'
      MaxKeys: '2'
      Name: examplebucket
      NextContinuationToken: 1w41l63U0xa8q7smH50vCxyTQqdxo69O3EmK28Bi5PcROI4wI/EyIJg==
      Prefix: ''
    properties:
      CommonPrefixes:
        $ref: '#/definitions/CommonPrefixList'
        description: CommonPrefixes contains all (if there are any) keys between Prefix and the next occurrence of the string specified by delimiter
      Contents:
        $ref: '#/definitions/ObjectList'
        description: Metadata about each object returned.
      ContinuationToken:
        $ref: '#/definitions/Token'
        description: ContinuationToken indicates Amazon S3 that the list is being continued on this bucket with a token. ContinuationToken is obfuscated and is not a real key
      Delimiter:
        $ref: '#/definitions/Delimiter'
        description: A delimiter is a character you use to group keys.
      EncodingType:
        $ref: '#/definitions/EncodingType'
        description: Encoding type used by Amazon S3 to encode object keys in the response.
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria.
      KeyCount:
        $ref: '#/definitions/KeyCount'
        description: 'KeyCount is the number of keys returned with this request. KeyCount will always be less than equals to MaxKeys field. Say you ask for 50 keys, your result will include less than equals 50 keys '
      MaxKeys:
        $ref: '#/definitions/MaxKeys'
        description: Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.
      Name:
        $ref: '#/definitions/BucketName'
        description: Name of the bucket to list.
      NextContinuationToken:
        $ref: '#/definitions/NextToken'
        description: NextContinuationToken is sent when isTruncated is true which means there are more keys in the bucket that can be listed. The next list requests to Amazon S3 can be continued with this NextContinuationToken. NextContinuationToken is obfuscated and is not a real key
      Prefix:
        $ref: '#/definitions/Prefix'
        description: Limits the response to keys that begin with the specified prefix.
      StartAfter:
        $ref: '#/definitions/StartAfter'
        description: StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this specified key. StartAfter can be any key in the bucket
    type: object
  ListObjectsV2Request:
    properties: {}
    type: object
  ListPartsOutput:
    example:
      Initiator:
        DisplayName: owner-display-name
        ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
      Owner:
        DisplayName: owner-display-name
        ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
      Parts:
        - ETag: '"d8c2eafd90c266e19ab9dcacc479f8af"'
          LastModified: '2016-12-16T00:11:42.000Z'
          PartNumber: '1'
          Size: 26246026
        - ETag: '"d8c2eafd90c266e19ab9dcacc479f8af"'
          LastModified: '2016-12-16T00:15:01.000Z'
          PartNumber: '2'
          Size: 26246026
      StorageClass: STANDARD
    properties:
      Bucket:
        $ref: '#/definitions/BucketName'
        description: Name of the bucket to which the multipart upload was initiated.
      Initiator:
        $ref: '#/definitions/Initiator'
        description: Identifies who initiated the multipart upload.
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: Indicates whether the returned list of parts is truncated.
      Key:
        $ref: '#/definitions/ObjectKey'
        description: Object key for which the multipart upload was initiated.
      MaxParts:
        $ref: '#/definitions/MaxParts'
        description: Maximum number of parts that were allowed in the response.
      NextPartNumberMarker:
        $ref: '#/definitions/NextPartNumberMarker'
        description: 'When a list is truncated, this element specifies the last part in the list, as well as the value to use for the part-number-marker request parameter in a subsequent request.'
      Owner:
        $ref: '#/definitions/Owner'
        description: <p/>
      PartNumberMarker:
        $ref: '#/definitions/PartNumberMarker'
        description: Part number after which listing begins.
      Parts:
        $ref: '#/definitions/Parts'
        description: <p/>
      StorageClass:
        $ref: '#/definitions/StorageClass'
        description: The class of storage used to store the object.
      UploadId:
        $ref: '#/definitions/MultipartUploadId'
        description: Upload ID identifying the multipart upload whose parts are being listed.
    type: object
  ListPartsRequest:
    properties: {}
    type: object
  Location:
    type: string
  LocationPrefix:
    type: string
  LoggingEnabled:
    description: 'Describes where logs are stored and the prefix that Amazon S3 assigns to all log object keys for a bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html">PUT Bucket logging</a> in the <i>Amazon Simple Storage Service API Reference</i>.'
    properties:
      TargetBucket:
        $ref: '#/definitions/TargetBucket'
        description: 'Specifies the bucket where you want Amazon S3 to store server access logs. You can have your logs delivered to any bucket that you own, including the same bucket that is being logged. You can also configure multiple buckets to deliver their logs to the same target bucket. In this case you should choose a different TargetPrefix for each source bucket so that the delivered log files can be distinguished by key.'
      TargetGrants:
        $ref: '#/definitions/TargetGrants'
        description: <p/>
      TargetPrefix:
        $ref: '#/definitions/TargetPrefix'
        description: 'A prefix for all log object keys. If you store log files from multiple Amazon S3 buckets in a single bucket, you can use a prefix to distinguish which log files came from which bucket.'
    required:
      - TargetBucket
      - TargetPrefix
    type: object
  MFA:
    type: string
  MFADelete:
    enum:
      - Enabled
      - Disabled
    type: string
  MFADeleteStatus:
    enum:
      - Enabled
      - Disabled
    type: string
  Marker:
    type: string
  MaxAgeSeconds:
    type: integer
  MaxKeys:
    type: integer
  MaxParts:
    type: integer
  MaxUploads:
    type: integer
  Message:
    type: string
  Metadata:
    additionalProperties:
      $ref: '#/definitions/MetadataValue'
    type: object
  MetadataDirective:
    enum:
      - COPY
      - REPLACE
    type: string
  MetadataEntry:
    description: A metadata key-value pair to store with an object.
    properties:
      Name:
        $ref: '#/definitions/MetadataKey'
        description: <p/>
      Value:
        $ref: '#/definitions/MetadataValue'
        description: <p/>
    type: object
  MetadataKey:
    type: string
  MetadataValue:
    type: string
  MetricsAndOperator:
    description: <p/>
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: The prefix used when evaluating an AND predicate.
      Tags:
        $ref: '#/definitions/TagSet'
        description: The list of tags used when evaluating an AND predicate.
    type: object
    xml:
      wrapped: false
  MetricsConfiguration:
    description: 'Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket. If you''re updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don''t include the elements you want to keep, they are erased. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html"> PUT Bucket metrics</a> in the <i>Amazon Simple Storage Service API Reference</i>.'
    properties:
      Filter:
        $ref: '#/definitions/MetricsFilter'
        description: 'Specifies a metrics configuration filter. The metrics configuration will only include objects that meet the filter''s criteria. A filter must be a prefix, a tag, or a conjunction (MetricsAndOperator).'
      Id:
        $ref: '#/definitions/MetricsId'
        description: The ID used to identify the metrics configuration.
    required:
      - Id
    type: object
  MetricsConfigurationList:
    items:
      $ref: '#/definitions/MetricsConfiguration'
    type: array
    xml:
      wrapped: false
  MetricsFilter:
    description: <p/>
    properties:
      And:
        $ref: '#/definitions/MetricsAndOperator'
        description: 'A conjunction (logical AND) of predicates, which is used in evaluating a metrics filter. The operator must have at least two predicates, and an object must match all of the predicates in order for the filter to apply.'
      Prefix:
        $ref: '#/definitions/Prefix'
        description: The prefix used when evaluating a metrics filter.
      Tag:
        $ref: '#/definitions/Tag'
        description: The tag used when evaluating a metrics filter.
    type: object
  MetricsId:
    type: string
  MissingMeta:
    type: integer
  MultipartUpload:
    description: <p/>
    properties:
      Initiated:
        $ref: '#/definitions/Initiated'
        description: Date and time at which the multipart upload was initiated.
      Initiator:
        $ref: '#/definitions/Initiator'
        description: Identifies who initiated the multipart upload.
      Key:
        $ref: '#/definitions/ObjectKey'
        description: Key of the object for which the multipart upload was initiated.
      Owner:
        $ref: '#/definitions/Owner'
        description: <p/>
      StorageClass:
        $ref: '#/definitions/StorageClass'
        description: The class of storage used to store the object.
      UploadId:
        $ref: '#/definitions/MultipartUploadId'
        description: Upload ID that identifies the multipart upload.
    type: object
  MultipartUploadId:
    type: string
  MultipartUploadList:
    items:
      $ref: '#/definitions/MultipartUpload'
    type: array
    xml:
      wrapped: false
  NextKeyMarker:
    type: string
  NextMarker:
    type: string
  NextPartNumberMarker:
    type: integer
  NextToken:
    type: string
  NextUploadIdMarker:
    type: string
  NextVersionIdMarker:
    type: string
  NoSuchBucket: {}
  NoSuchKey: {}
  NoSuchUpload: {}
  NoncurrentVersionExpiration:
    description: 'Specifies when noncurrent object versions expire. Upon expiration, Amazon S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that Amazon S3 delete noncurrent object versions at a specific period in the object''s lifetime.'
    properties:
      NoncurrentDays:
        $ref: '#/definitions/Days'
        description: 'Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations">How Amazon S3 Calculates When an Object Became Noncurrent</a> in the Amazon Simple Storage Service Developer Guide.'
    type: object
  NoncurrentVersionTransition:
    description: 'Container for the transition rule that describes when noncurrent objects transition to the <code>STANDARD_IA</code>, <code>ONEZONE_IA</code>, <code>INTELLIGENT_TIERING</code>, <code>GLACIER</code>, or <code>DEEP_ARCHIVE</code> storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to the <code>STANDARD_IA</code>, <code>ONEZONE_IA</code>, <code>INTELLIGENT_TIERING</code>, <code>GLACIER</code>, or <code>DEEP_ARCHIVE</code> storage class at a specific period in the object''s lifetime.'
    properties:
      NoncurrentDays:
        $ref: '#/definitions/Days'
        description: 'Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">How Amazon S3 Calculates When an Object Became Noncurrent</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
      StorageClass:
        $ref: '#/definitions/TransitionStorageClass'
        description: The class of storage used to store the object.
    type: object
  NoncurrentVersionTransitionList:
    items:
      $ref: '#/definitions/NoncurrentVersionTransition'
    type: array
    xml:
      wrapped: false
  NotificationConfiguration:
    description: 'A container for specifying the notification configuration of the bucket. If this element is empty, notifications are turned off for the bucket.'
    properties:
      LambdaFunctionConfigurations:
        $ref: '#/definitions/LambdaFunctionConfigurationList'
        description: Describes the AWS Lambda functions to invoke and the events for which to invoke them.
      QueueConfigurations:
        $ref: '#/definitions/QueueConfigurationList'
        description: The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.
      TopicConfigurations:
        $ref: '#/definitions/TopicConfigurationList'
        description: The topic to which notifications are sent and the events for which notifications are generated.
    type: object
  NotificationConfigurationDeprecated:
    example:
      QueueConfiguration:
        Event: 's3:ObjectCreated:Put'
        Events:
          - 's3:ObjectCreated:Put'
        Id: MDQ2OGQ4NDEtOTBmNi00YTM4LTk0NzYtZDIwN2I3NWQ1NjIx
        Queue: 'arn:aws:sqs:us-east-1:acct-id:S3ObjectCreatedEventQueue'
      TopicConfiguration:
        Event: 's3:ObjectCreated:Copy'
        Events:
          - 's3:ObjectCreated:Copy'
        Id: YTVkMWEzZGUtNTY1NS00ZmE2LWJjYjktMmRlY2QwODFkNTJi
        Topic: 'arn:aws:sns:us-east-1:acct-id:S3ObjectCreatedEventTopic'
    properties:
      CloudFunctionConfiguration:
        $ref: '#/definitions/CloudFunctionConfiguration'
        description: <p/>
      QueueConfiguration:
        $ref: '#/definitions/QueueConfigurationDeprecated'
        description: <p/>
      TopicConfiguration:
        $ref: '#/definitions/TopicConfigurationDeprecated'
        description: <p/>
    type: object
  NotificationConfigurationFilter:
    description: 'Specifies object key name filtering rules. For information about key name filtering, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Configuring Event Notifications</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
    properties:
      Key:
        $ref: '#/definitions/S3KeyFilter'
        description: <p/>
    type: object
  NotificationId:
    description: 'An optional unique identifier for configurations in a notification configuration. If you don''t provide one, Amazon S3 will assign an ID.'
    type: string
  Object:
    description: <p/>
    properties:
      ETag:
        $ref: '#/definitions/ETag'
        description: <p/>
      Key:
        $ref: '#/definitions/ObjectKey'
        description: <p/>
      LastModified:
        $ref: '#/definitions/LastModified'
        description: <p/>
      Owner:
        $ref: '#/definitions/Owner'
        description: <p/>
      Size:
        $ref: '#/definitions/Size'
        description: <p/>
      StorageClass:
        $ref: '#/definitions/ObjectStorageClass'
        description: The class of storage used to store the object.
    type: object
  ObjectAlreadyInActiveTierError: {}
  ObjectCannedACL:
    enum:
      - private
      - public-read
      - public-read-write
      - authenticated-read
      - aws-exec-read
      - bucket-owner-read
      - bucket-owner-full-control
    type: string
  ObjectIdentifier:
    description: <p/>
    properties:
      Key:
        $ref: '#/definitions/ObjectKey'
        description: Key name of the object to delete.
      VersionId:
        $ref: '#/definitions/ObjectVersionId'
        description: VersionId for the specific version of the object to delete.
    required:
      - Key
    type: object
  ObjectIdentifierList:
    items:
      $ref: '#/definitions/ObjectIdentifier'
    type: array
    xml:
      wrapped: false
  ObjectKey:
    minLength: 1
    type: string
  ObjectList:
    items:
      $ref: '#/definitions/Object'
    type: array
    xml:
      wrapped: false
  ObjectLockConfiguration:
    description: The container element for object lock configuration parameters.
    properties:
      ObjectLockEnabled:
        $ref: '#/definitions/ObjectLockEnabled'
        description: Indicates whether this bucket has an object lock configuration enabled.
      Rule:
        $ref: '#/definitions/ObjectLockRule'
        description: The object lock rule in place for the specified object.
    type: object
  ObjectLockEnabled:
    enum:
      - Enabled
    type: string
  ObjectLockEnabledForBucket:
    type: boolean
  ObjectLockLegalHold:
    description: A Legal Hold configuration for an object.
    properties:
      Status:
        $ref: '#/definitions/ObjectLockLegalHoldStatus'
        description: Indicates whether the specified object has a Legal Hold in place.
    type: object
  ObjectLockLegalHoldStatus:
    enum:
      - 'ON'
      - 'OFF'
    type: string
  ObjectLockMode:
    enum:
      - GOVERNANCE
      - COMPLIANCE
    type: string
  ObjectLockRetainUntilDate:
    format: date-time
    type: string
  ObjectLockRetention:
    description: A Retention configuration for an object.
    properties:
      Mode:
        $ref: '#/definitions/ObjectLockRetentionMode'
        description: Indicates the Retention mode for the specified object.
      RetainUntilDate:
        $ref: '#/definitions/Date'
        description: The date on which this object lock retention expires.
    type: object
  ObjectLockRetentionMode:
    enum:
      - GOVERNANCE
      - COMPLIANCE
    type: string
  ObjectLockRule:
    description: The container element for an object lock rule.
    properties:
      DefaultRetention:
        $ref: '#/definitions/DefaultRetention'
        description: The default retention period that you want to apply to new objects placed in the specified bucket.
    type: object
  ObjectLockToken:
    type: string
  ObjectNotInActiveTierError: {}
  ObjectStorageClass:
    enum:
      - STANDARD
      - REDUCED_REDUNDANCY
      - GLACIER
      - STANDARD_IA
      - ONEZONE_IA
      - INTELLIGENT_TIERING
      - DEEP_ARCHIVE
    type: string
  ObjectVersion:
    description: <p/>
    properties:
      ETag:
        $ref: '#/definitions/ETag'
        description: <p/>
      IsLatest:
        $ref: '#/definitions/IsLatest'
        description: Specifies whether the object is (true) or is not (false) the latest version of an object.
      Key:
        $ref: '#/definitions/ObjectKey'
        description: The object key.
      LastModified:
        $ref: '#/definitions/LastModified'
        description: Date and time the object was last modified.
      Owner:
        $ref: '#/definitions/Owner'
        description: <p/>
      Size:
        $ref: '#/definitions/Size'
        description: Size in bytes of the object.
      StorageClass:
        $ref: '#/definitions/ObjectVersionStorageClass'
        description: The class of storage used to store the object.
      VersionId:
        $ref: '#/definitions/ObjectVersionId'
        description: Version ID of an object.
    type: object
  ObjectVersionId:
    type: string
  ObjectVersionList:
    items:
      $ref: '#/definitions/ObjectVersion'
    type: array
    xml:
      wrapped: false
  ObjectVersionStorageClass:
    enum:
      - STANDARD
    type: string
  OutputLocation:
    description: Describes the location where the restore job's output is stored.
    properties:
      S3:
        $ref: '#/definitions/S3Location'
        description: Describes an S3 location that will receive the results of the restore request.
    type: object
  OutputSerialization:
    description: Describes how results of the Select job are serialized.
    properties:
      CSV:
        $ref: '#/definitions/CSVOutput'
        description: Describes the serialization of CSV-encoded Select results.
      JSON:
        $ref: '#/definitions/JSONOutput'
        description: Specifies JSON as request's output serialization format.
    type: object
  Owner:
    description: <p/>
    properties:
      DisplayName:
        $ref: '#/definitions/DisplayName'
        description: <p/>
      ID:
        $ref: '#/definitions/ID'
        description: <p/>
    type: object
  OwnerOverride:
    enum:
      - Destination
    type: string
  ParquetInput:
    description: <p/>
    properties: {}
    type: object
  Part:
    description: <p/>
    properties:
      ETag:
        $ref: '#/definitions/ETag'
        description: Entity tag returned when the part was uploaded.
      LastModified:
        $ref: '#/definitions/LastModified'
        description: Date and time at which the part was uploaded.
      PartNumber:
        $ref: '#/definitions/PartNumber'
        description: 'Part number identifying the part. This is a positive integer between 1 and 10,000.'
      Size:
        $ref: '#/definitions/Size'
        description: Size in bytes of the uploaded part data.
    type: object
  PartNumber:
    type: integer
  PartNumberMarker:
    type: integer
  Parts:
    items:
      $ref: '#/definitions/Part'
    type: array
    xml:
      wrapped: false
  PartsCount:
    type: integer
  Payer:
    enum:
      - Requester
      - BucketOwner
    type: string
  Permission:
    enum:
      - FULL_CONTROL
      - WRITE
      - WRITE_ACP
      - READ
      - READ_ACP
    type: string
  Policy:
    type: string
  PolicyStatus:
    description: The container element for a bucket's policy status.
    properties:
      IsPublic:
        $ref: '#/definitions/IsPublic'
        description: The policy status for this bucket. <code>TRUE</code> indicates that this bucket is public. <code>FALSE</code> indicates that the bucket is not public.
    type: object
  Prefix:
    type: string
  Priority:
    type: integer
  Progress:
    description: <p/>
    properties:
      BytesProcessed:
        $ref: '#/definitions/BytesProcessed'
        description: The current number of uncompressed object bytes processed.
      BytesReturned:
        $ref: '#/definitions/BytesReturned'
        description: The current number of bytes of records payload data returned.
      BytesScanned:
        $ref: '#/definitions/BytesScanned'
        description: The current number of object bytes scanned.
    type: object
  ProgressEvent:
    description: <p/>
    properties:
      Details:
        $ref: '#/definitions/Progress'
        description: The Progress event details.
    type: object
  Protocol:
    enum:
      - http
      - https
    type: string
  PublicAccessBlockConfiguration:
    description: Specifies the Block Public Access configuration for an Amazon S3 bucket.
    properties:
      BlockPublicAcls:
        $ref: '#/definitions/Setting'
        description: '<p>Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket. Setting this element to <code>TRUE</code> causes the following behavior:</p> <ul> <li> <p>PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.</p> </li> <li> <p>PUT Object calls fail if the request includes a public ACL.</p> </li> </ul> <p>Enabling this setting doesn''t affect existing policies or ACLs.</p>'
      BlockPublicPolicy:
        $ref: '#/definitions/Setting'
        description: <p>Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. </p> <p>Enabling this setting doesn't affect existing bucket policies.</p>
      IgnorePublicAcls:
        $ref: '#/definitions/Setting'
        description: <p>Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket.</p> <p>Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.</p>
      RestrictPublicBuckets:
        $ref: '#/definitions/Setting'
        description: '<p>Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to <code>TRUE</code> restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.</p> <p>Enabling this setting doesn''t affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.</p>'
    type: object
  PutBucketAccelerateConfigurationRequest:
    properties:
      AccelerateConfiguration:
        $ref: '#/definitions/AccelerateConfiguration'
        description: Specifies the Accelerate Configuration you want to set for the bucket.
    required:
      - AccelerateConfiguration
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketAclRequest:
    properties:
      AccessControlPolicy:
        $ref: '#/definitions/AccessControlPolicy'
        description: Contains the elements that set the ACL permissions for an object per grantee.
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketAnalyticsConfigurationRequest:
    properties:
      AnalyticsConfiguration:
        $ref: '#/definitions/AnalyticsConfiguration'
        description: The configuration and any analyses for the analytics filter.
    required:
      - AnalyticsConfiguration
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketCorsRequest:
    properties:
      CORSConfiguration:
        $ref: '#/definitions/CORSConfiguration'
        description: <p/>
    required:
      - CORSConfiguration
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketEncryptionRequest:
    properties:
      ServerSideEncryptionConfiguration:
        $ref: '#/definitions/ServerSideEncryptionConfiguration'
        description: <p/>
    required:
      - ServerSideEncryptionConfiguration
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketInventoryConfigurationRequest:
    properties:
      InventoryConfiguration:
        $ref: '#/definitions/InventoryConfiguration'
        description: Specifies the inventory configuration.
    required:
      - InventoryConfiguration
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketLifecycleConfigurationRequest:
    properties:
      LifecycleConfiguration:
        $ref: '#/definitions/BucketLifecycleConfiguration'
        description: <p/>
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketLifecycleRequest:
    properties:
      LifecycleConfiguration:
        $ref: '#/definitions/LifecycleConfiguration'
        description: <p/>
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketLoggingRequest:
    properties:
      BucketLoggingStatus:
        $ref: '#/definitions/BucketLoggingStatus'
        description: <p/>
    required:
      - BucketLoggingStatus
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketMetricsConfigurationRequest:
    properties:
      MetricsConfiguration:
        $ref: '#/definitions/MetricsConfiguration'
        description: Specifies the metrics configuration.
    required:
      - MetricsConfiguration
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketNotificationConfigurationRequest:
    properties:
      NotificationConfiguration:
        $ref: '#/definitions/NotificationConfiguration'
        description: <p/>
    required:
      - NotificationConfiguration
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketNotificationRequest:
    properties:
      NotificationConfiguration:
        $ref: '#/definitions/NotificationConfigurationDeprecated'
        description: <p/>
    required:
      - NotificationConfiguration
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketPolicyRequest:
    properties:
      Policy:
        $ref: '#/definitions/Policy'
        description: The bucket policy as a JSON document.
    required:
      - Policy
    type: object
  PutBucketReplicationRequest:
    properties:
      ReplicationConfiguration:
        $ref: '#/definitions/ReplicationConfiguration'
        description: <p/>
    required:
      - ReplicationConfiguration
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketRequestPaymentRequest:
    properties:
      RequestPaymentConfiguration:
        $ref: '#/definitions/RequestPaymentConfiguration'
        description: <p/>
    required:
      - RequestPaymentConfiguration
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketTaggingRequest:
    properties:
      Tagging:
        $ref: '#/definitions/Tagging'
        description: <p/>
    required:
      - Tagging
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketVersioningRequest:
    properties:
      VersioningConfiguration:
        $ref: '#/definitions/VersioningConfiguration'
        description: <p/>
    required:
      - VersioningConfiguration
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketWebsiteRequest:
    properties:
      WebsiteConfiguration:
        $ref: '#/definitions/WebsiteConfiguration'
        description: <p/>
    required:
      - WebsiteConfiguration
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutObjectAclOutput:
    example: {}
    properties: {}
    type: object
  PutObjectAclRequest:
    properties:
      AccessControlPolicy:
        $ref: '#/definitions/AccessControlPolicy'
        description: Contains the elements that set the ACL permissions for an object per grantee.
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutObjectLegalHoldOutput:
    properties: {}
    type: object
  PutObjectLegalHoldRequest:
    properties:
      LegalHold:
        $ref: '#/definitions/ObjectLockLegalHold'
        description: Container element for the Legal Hold configuration you want to apply to the specified object.
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutObjectLockConfigurationOutput:
    properties: {}
    type: object
  PutObjectLockConfigurationRequest:
    properties:
      ObjectLockConfiguration:
        $ref: '#/definitions/ObjectLockConfiguration'
        description: The object lock configuration that you want to apply to the specified bucket.
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutObjectOutput:
    example:
      ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
      ServerSideEncryption: AES256
      VersionId: CG612hodqujkf8FaaNfp8U..FIhLROcp
    properties: {}
    type: object
  PutObjectRequest:
    properties:
      Body:
        $ref: '#/definitions/Body'
        description: Object data.
      Metadata:
        $ref: '#/definitions/Metadata'
        description: A map of metadata to store with the object in S3.
    type: object
  PutObjectRetentionOutput:
    properties: {}
    type: object
  PutObjectRetentionRequest:
    properties:
      Retention:
        $ref: '#/definitions/ObjectLockRetention'
        description: The container element for the Object Retention configuration.
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutObjectTaggingOutput:
    example:
      VersionId: 'null'
    properties: {}
    type: object
  PutObjectTaggingRequest:
    properties:
      Tagging:
        $ref: '#/definitions/Tagging'
        description: <p/>
    required:
      - Tagging
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutPublicAccessBlockRequest:
    properties:
      PublicAccessBlockConfiguration:
        $ref: '#/definitions/PublicAccessBlockConfiguration'
        description: 'The <code>PublicAccessBlock</code> configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
    required:
      - PublicAccessBlockConfiguration
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  QueueArn:
    type: string
  QueueConfiguration:
    description: Specifies the configuration for publishing messages to an Amazon Simple Queue Service (Amazon SQS) queue when Amazon S3 detects specified events.
    properties:
      Events:
        $ref: '#/definitions/EventList'
        description: <p/>
      Filter:
        $ref: '#/definitions/NotificationConfigurationFilter'
        description: <p/>
      Id:
        $ref: '#/definitions/NotificationId'
      QueueArn:
        $ref: '#/definitions/QueueArn'
        description: The Amazon Resource Name (ARN) of the Amazon SQS queue to which Amazon S3 publishes a message when it detects events of the specified type.
    required:
      - QueueArn
      - Events
    type: object
  QueueConfigurationDeprecated:
    description: <p/>
    properties:
      Event:
        $ref: '#/definitions/Event'
      Events:
        $ref: '#/definitions/EventList'
        description: <p/>
      Id:
        $ref: '#/definitions/NotificationId'
      Queue:
        $ref: '#/definitions/QueueArn'
        description: <p/>
    type: object
  QueueConfigurationList:
    items:
      $ref: '#/definitions/QueueConfiguration'
    type: array
    xml:
      wrapped: false
  Quiet:
    type: boolean
  QuoteCharacter:
    type: string
  QuoteEscapeCharacter:
    type: string
  QuoteFields:
    enum:
      - ALWAYS
      - ASNEEDED
    type: string
  Range:
    type: string
  RecordDelimiter:
    type: string
  RecordsEvent:
    description: <p/>
    properties:
      Payload:
        $ref: '#/definitions/Body'
        description: 'The byte array of partial, one or more result records.'
    type: object
  Redirect:
    description: 'Specifies how requests are redirected. In the event of an error, you can specify a different error code to return.'
    properties:
      HostName:
        $ref: '#/definitions/HostName'
        description: The host name to use in the redirect request.
      HttpRedirectCode:
        $ref: '#/definitions/HttpRedirectCode'
        description: The HTTP redirect code to use on the response. Not required if one of the siblings is present.
      Protocol:
        $ref: '#/definitions/Protocol'
        description: Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
      ReplaceKeyPrefixWith:
        $ref: '#/definitions/ReplaceKeyPrefixWith'
        description: 'The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix <code>docs/</code> (objects in the <code>docs/</code> folder) to <code>documents/</code>, you can set a condition block with <code>KeyPrefixEquals</code> set to <code>docs/</code> and in the Redirect set <code>ReplaceKeyPrefixWith</code> to <code>/documents</code>. Not required if one of the siblings is present. Can be present only if <code>ReplaceKeyWith</code> is not provided.'
      ReplaceKeyWith:
        $ref: '#/definitions/ReplaceKeyWith'
        description: 'The specific object key to use in the redirect request. For example, redirect request to <code>error.html</code>. Not required if one of the siblings is present. Can be present only if <code>ReplaceKeyPrefixWith</code> is not provided.'
    type: object
  RedirectAllRequestsTo:
    description: Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket.
    properties:
      HostName:
        $ref: '#/definitions/HostName'
        description: Name of the host where requests are redirected.
      Protocol:
        $ref: '#/definitions/Protocol'
        description: Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
    required:
      - HostName
    type: object
  ReplaceKeyPrefixWith:
    type: string
  ReplaceKeyWith:
    type: string
  ReplicaKmsKeyID:
    type: string
  ReplicationConfiguration:
    description: 'A container for replication rules. You can add up to 1,000 rules. The maximum size of a replication configuration is 2 MB.'
    properties:
      Role:
        $ref: '#/definitions/Role'
        description: 'The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that Amazon S3 assumes when replicating objects. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/crr-how-setup.html">How to Set Up Cross-Region Replication</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
      Rules:
        $ref: '#/definitions/ReplicationRules'
        description: 'A container for one or more replication rules. A replication configuration must have at least one rule and can contain a maximum of 1,000 rules. '
    required:
      - Role
      - Rules
    type: object
  ReplicationRule:
    description: Specifies which Amazon S3 objects to replicate and where to store the replicas.
    properties:
      DeleteMarkerReplication:
        $ref: '#/definitions/DeleteMarkerReplication'
        description: <p/>
      Destination:
        $ref: '#/definitions/Destination'
        description: A container for information about the replication destination.
      Filter:
        $ref: '#/definitions/ReplicationRuleFilter'
        description: <p/>
      ID:
        $ref: '#/definitions/ID'
        description: A unique identifier for the rule. The maximum value is 255 characters.
      Prefix:
        $ref: '#/definitions/Prefix'
        description: 'An object keyname prefix that identifies the object or objects to which the rule applies. The maximum prefix length is 1,024 characters. To include all objects in a bucket, specify an empty string. '
      Priority:
        $ref: '#/definitions/Priority'
        description: '<p>The priority associated with the rule. If you specify multiple rules in a replication configuration, Amazon S3 prioritizes the rules to prevent conflicts when filtering. If two or more rules identify the same object based on a specified filter, the rule with higher priority takes precedence. For example:</p> <ul> <li> <p>Same object quality prefix based filter criteria If prefixes you specified in multiple rules overlap </p> </li> <li> <p>Same object qualify tag based filter criteria specified in multiple rules</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html">Cross-Region Replication (CRR)</a> in the <i>Amazon S3 Developer Guide</i>.</p>'
      SourceSelectionCriteria:
        $ref: '#/definitions/SourceSelectionCriteria'
        description: 'A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects. Currently, Amazon S3 supports only the filter that you can specify for objects created with server-side encryption using an AWS KMS-Managed Key (SSE-KMS).'
      Status:
        $ref: '#/definitions/ReplicationRuleStatus'
        description: Specifies whether the rule is enabled.
    required:
      - Status
      - Destination
    type: object
  ReplicationRuleAndOperator:
    description: <p/>
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: <p/>
      Tags:
        $ref: '#/definitions/TagSet'
        description: <p/>
    type: object
    xml:
      wrapped: false
  ReplicationRuleFilter:
    description: 'A filter that identifies the subset of objects to which the replication rule applies. A <code>Filter</code> must specify exactly one <code>Prefix</code>, <code>Tag</code>, or an <code>And</code> child element.'
    properties:
      And:
        $ref: '#/definitions/ReplicationRuleAndOperator'
        description: '<p>A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter. For example: </p> <ul> <li> <p>If you specify both a <code>Prefix</code> and a <code>Tag</code> filter, wrap these filters in an <code>And</code> tag.</p> </li> <li> <p>If you specify a filter based on multiple tags, wrap the <code>Tag</code> elements in an <code>And</code> tag.</p> </li> </ul>'
      Prefix:
        $ref: '#/definitions/Prefix'
        description: An object keyname prefix that identifies the subset of objects to which the rule applies.
      Tag:
        $ref: '#/definitions/Tag'
        description: <p>A container for specifying a tag key and value. </p> <p>The rule applies only to objects that have the tag in their tag set.</p>
    type: object
  ReplicationRuleStatus:
    enum:
      - Enabled
      - Disabled
    type: string
  ReplicationRules:
    items:
      $ref: '#/definitions/ReplicationRule'
    type: array
    xml:
      wrapped: false
  ReplicationStatus:
    enum:
      - COMPLETE
      - PENDING
      - FAILED
      - REPLICA
    type: string
  RequestCharged:
    description: 'If present, indicates that the requester was successfully charged for the request.'
    enum:
      - requester
    type: string
  RequestPayer:
    description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
    enum:
      - requester
    type: string
  RequestPaymentConfiguration:
    description: <p/>
    properties:
      Payer:
        $ref: '#/definitions/Payer'
        description: Specifies who pays for the download and request fees.
    required:
      - Payer
    type: object
  RequestProgress:
    description: <p/>
    properties:
      Enabled:
        $ref: '#/definitions/EnableRequestProgress'
        description: 'Specifies whether periodic QueryProgress frames should be sent. Valid values: TRUE, FALSE. Default value: FALSE.'
    type: object
  ResponseCacheControl:
    type: string
  ResponseContentDisposition:
    type: string
  ResponseContentEncoding:
    type: string
  ResponseContentLanguage:
    type: string
  ResponseContentType:
    type: string
  ResponseExpires:
    format: date-time
    type: string
  Restore:
    type: string
  RestoreObjectOutput:
    example: {}
    properties: {}
    type: object
  RestoreObjectRequest:
    properties:
      RestoreRequest:
        $ref: '#/definitions/RestoreRequest'
        description: <p/>
    type: object
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  RestoreOutputPath:
    type: string
  RestoreRequest:
    description: Container for restore job parameters.
    properties:
      Days:
        $ref: '#/definitions/Days'
        description: Lifetime of the active copy in days. Do not use with restores that specify OutputLocation.
      Description:
        $ref: '#/definitions/Description'
        description: The optional description for the job.
      GlacierJobParameters:
        $ref: '#/definitions/GlacierJobParameters'
        description: Glacier related parameters pertaining to this job. Do not use with restores that specify OutputLocation.
      OutputLocation:
        $ref: '#/definitions/OutputLocation'
        description: Describes the location where the restore job's output is stored.
      SelectParameters:
        $ref: '#/definitions/SelectParameters'
        description: Describes the parameters for Select job types.
      Tier:
        $ref: '#/definitions/Tier'
        description: Glacier retrieval tier at which the restore will be processed.
      Type:
        $ref: '#/definitions/RestoreRequestType'
        description: Type of restore request.
    type: object
  RestoreRequestType:
    enum:
      - SELECT
    type: string
  Role:
    type: string
  RoutingRule:
    description: Specifies the redirect behavior and when a redirect is applied.
    properties:
      Condition:
        $ref: '#/definitions/Condition'
        description: 'A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the <code>/docs</code> folder, redirect to the <code>/documents</code> folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.'
      Redirect:
        $ref: '#/definitions/Redirect'
        description: 'Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can specify a different error code to return.'
    required:
      - Redirect
    type: object
  RoutingRules:
    items:
      $ref: '#/definitions/RoutingRule'
    type: array
  Rule:
    description: 'Specifies lifecycle rules for an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html">PUT Bucket lifecycle</a> in the <i>Amazon Simple Storage Service API Reference</i>.'
    properties:
      AbortIncompleteMultipartUpload:
        $ref: '#/definitions/AbortIncompleteMultipartUpload'
        description: <p/>
      Expiration:
        $ref: '#/definitions/LifecycleExpiration'
        description: <p/>
      ID:
        $ref: '#/definitions/ID'
        description: Unique identifier for the rule. The value can't be longer than 255 characters.
      NoncurrentVersionExpiration:
        $ref: '#/definitions/NoncurrentVersionExpiration'
        description: <p/>
      NoncurrentVersionTransition:
        $ref: '#/definitions/NoncurrentVersionTransition'
        description: <p/>
      Prefix:
        $ref: '#/definitions/Prefix'
        description: Object key prefix that identifies one or more objects to which this rule applies.
      Status:
        $ref: '#/definitions/ExpirationStatus'
        description: 'If <code>Enabled</code>, the rule is currently being applied. If <code>Disabled</code>, the rule is not currently being applied.'
      Transition:
        $ref: '#/definitions/Transition'
        description: <p/>
    required:
      - Prefix
      - Status
    type: object
  Rules:
    items:
      $ref: '#/definitions/Rule'
    type: array
    xml:
      wrapped: false
  S3KeyFilter:
    description: A container for object key name prefix and suffix filtering rules.
    properties:
      FilterRules:
        $ref: '#/definitions/FilterRuleList'
        description: <p/>
    type: object
  S3Location:
    description: Describes an S3 location that will receive the results of the restore request.
    properties:
      AccessControlList:
        $ref: '#/definitions/Grants'
        description: A list of grants that control access to the staged results.
      BucketName:
        $ref: '#/definitions/BucketName'
        description: The name of the bucket where the restore results will be placed.
      CannedACL:
        $ref: '#/definitions/ObjectCannedACL'
        description: The canned ACL to apply to the restore results.
      Encryption:
        $ref: '#/definitions/Encryption'
        description: <p/>
      Prefix:
        $ref: '#/definitions/LocationPrefix'
        description: The prefix that is prepended to the restore results for this request.
      StorageClass:
        $ref: '#/definitions/StorageClass'
        description: The class of storage used to store the restore results.
      Tagging:
        $ref: '#/definitions/Tagging'
        description: The tag-set that is applied to the restore results.
      UserMetadata:
        $ref: '#/definitions/UserMetadata'
        description: A list of metadata to store with the restore results in S3.
    required:
      - BucketName
      - Prefix
    type: object
  SSECustomerAlgorithm:
    type: string
  SSECustomerKey:
    format: password
    type: string
  SSECustomerKeyMD5:
    type: string
  SSEKMS:
    description: Specifies the use of SSE-KMS to encrypt delivered Inventory reports.
    properties:
      KeyId:
        $ref: '#/definitions/SSEKMSKeyId'
        description: Specifies the ID of the AWS Key Management Service (KMS) master encryption key to use for encrypting Inventory reports.
    required:
      - KeyId
    type: object
  SSEKMSEncryptionContext:
    format: password
    type: string
  SSEKMSKeyId:
    format: password
    type: string
  SSES3:
    description: Specifies the use of SSE-S3 to encrypt delivered Inventory reports.
    properties: {}
    type: object
  SelectObjectContentEventStream:
    description: <p/>
    properties:
      Cont:
        $ref: '#/definitions/ContinuationEvent'
        description: The Continuation Event.
      End:
        $ref: '#/definitions/EndEvent'
        description: The End Event.
      Progress:
        $ref: '#/definitions/ProgressEvent'
        description: The Progress Event.
      Records:
        $ref: '#/definitions/RecordsEvent'
        description: The Records Event.
      Stats:
        $ref: '#/definitions/StatsEvent'
        description: The Stats Event.
    type: object
  SelectObjectContentOutput:
    properties:
      Payload:
        $ref: '#/definitions/SelectObjectContentEventStream'
        description: <p/>
    type: object
  SelectObjectContentRequest:
    description: 'Request to filter the contents of an Amazon S3 object based on a simple Structured Query Language (SQL) statement. In the request, along with the SQL expression, you must specify a data serialization format (JSON or CSV) of the object. Amazon S3 uses this to parse object data into records. It returns only records that match the specified SQL expression. You must also specify the data serialization format for the response. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectSELECTContent.html">S3Select API Documentation</a>.'
    properties:
      Expression:
        $ref: '#/definitions/Expression'
        description: The expression that is used to query the object.
      ExpressionType:
        $ref: '#/definitions/ExpressionType'
        description: 'The type of the provided expression (for example., SQL).'
      InputSerialization:
        $ref: '#/definitions/InputSerialization'
        description: Describes the format of the data in the object that is being queried.
      OutputSerialization:
        $ref: '#/definitions/OutputSerialization'
        description: Describes the format of the data that you want Amazon S3 to return in response.
      RequestProgress:
        $ref: '#/definitions/RequestProgress'
        description: Specifies if periodic request progress information should be enabled.
    required:
      - Expression
      - ExpressionType
      - InputSerialization
      - OutputSerialization
    type: object
  SelectParameters:
    description: Describes the parameters for Select job types.
    properties:
      Expression:
        $ref: '#/definitions/Expression'
        description: The expression that is used to query the object.
      ExpressionType:
        $ref: '#/definitions/ExpressionType'
        description: 'The type of the provided expression (e.g., SQL).'
      InputSerialization:
        $ref: '#/definitions/InputSerialization'
        description: Describes the serialization format of the object.
      OutputSerialization:
        $ref: '#/definitions/OutputSerialization'
        description: Describes how the results of the Select job are serialized.
    required:
      - InputSerialization
      - ExpressionType
      - Expression
      - OutputSerialization
    type: object
  ServerSideEncryption:
    enum:
      - AES256
      - 'aws:kms'
    type: string
  ServerSideEncryptionByDefault:
    description: 'Describes the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn''t specify any server-side encryption, this default encryption will be applied. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html">PUT Bucket encryption</a> in the <i>Amazon Simple Storage Service API Reference</i>.'
    properties:
      KMSMasterKeyID:
        $ref: '#/definitions/SSEKMSKeyId'
        description: 'KMS master key ID to use for the default encryption. This parameter is allowed if and only if <code>SSEAlgorithm</code> is set to <code>aws:kms</code>.'
      SSEAlgorithm:
        $ref: '#/definitions/ServerSideEncryption'
        description: Server-side encryption algorithm to use for the default encryption.
    required:
      - SSEAlgorithm
    type: object
  ServerSideEncryptionConfiguration:
    description: Specifies the default server-side-encryption configuration.
    properties:
      Rules:
        $ref: '#/definitions/ServerSideEncryptionRules'
        description: Container for information about a particular server-side encryption configuration rule.
    required:
      - Rules
    type: object
  ServerSideEncryptionRule:
    description: Specifies the default server-side encryption configuration.
    properties:
      ApplyServerSideEncryptionByDefault:
        $ref: '#/definitions/ServerSideEncryptionByDefault'
        description: 'Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn''t specify any server-side encryption, this default encryption will be applied.'
    type: object
  ServerSideEncryptionRules:
    items:
      $ref: '#/definitions/ServerSideEncryptionRule'
    type: array
    xml:
      wrapped: false
  Setting:
    type: boolean
  Size:
    type: integer
  SourceSelectionCriteria:
    description: 'A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects. Currently, Amazon S3 supports only the filter that you can specify for objects created with server-side encryption using an AWS KMS-Managed Key (SSE-KMS).'
    properties:
      SseKmsEncryptedObjects:
        $ref: '#/definitions/SseKmsEncryptedObjects'
        description: ' A container for filter information for the selection of Amazon S3 objects encrypted with AWS KMS. If you include <code>SourceSelectionCriteria</code> in the replication configuration, this element is required. '
    type: object
  SseKmsEncryptedObjects:
    description: A container for filter information for the selection of S3 objects encrypted with AWS KMS.
    properties:
      Status:
        $ref: '#/definitions/SseKmsEncryptedObjectsStatus'
        description: Specifies whether Amazon S3 replicates objects created with server-side encryption using an AWS KMS-managed key.
    required:
      - Status
    type: object
  SseKmsEncryptedObjectsStatus:
    enum:
      - Enabled
      - Disabled
    type: string
  StartAfter:
    type: string
  Stats:
    description: <p/>
    properties:
      BytesProcessed:
        $ref: '#/definitions/BytesProcessed'
        description: The total number of uncompressed object bytes processed.
      BytesReturned:
        $ref: '#/definitions/BytesReturned'
        description: The total number of bytes of records payload data returned.
      BytesScanned:
        $ref: '#/definitions/BytesScanned'
        description: The total number of object bytes scanned.
    type: object
  StatsEvent:
    description: <p/>
    properties:
      Details:
        $ref: '#/definitions/Stats'
        description: The Stats event details.
    type: object
  StorageClass:
    enum:
      - STANDARD
      - REDUCED_REDUNDANCY
      - STANDARD_IA
      - ONEZONE_IA
      - INTELLIGENT_TIERING
      - GLACIER
      - DEEP_ARCHIVE
    type: string
  StorageClassAnalysis:
    description: Specifies data related to access patterns to be collected and made available to analyze the tradeoffs between different storage classes for an Amazon S3 bucket.
    properties:
      DataExport:
        $ref: '#/definitions/StorageClassAnalysisDataExport'
        description: Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported.
    type: object
  StorageClassAnalysisDataExport:
    description: <p/>
    properties:
      Destination:
        $ref: '#/definitions/AnalyticsExportDestination'
        description: The place to store the data for an analysis.
      OutputSchemaVersion:
        $ref: '#/definitions/StorageClassAnalysisSchemaVersion'
        description: The version of the output schema to use when exporting data. Must be <code>V_1</code>.
    required:
      - OutputSchemaVersion
      - Destination
    type: object
  StorageClassAnalysisSchemaVersion:
    enum:
      - V_1
    type: string
  Suffix:
    type: string
  Tag:
    description: <p/>
    properties:
      Key:
        $ref: '#/definitions/ObjectKey'
        description: Name of the tag.
      Value:
        $ref: '#/definitions/Value'
        description: Value of the tag.
    required:
      - Key
      - Value
    type: object
  TagCount:
    type: integer
  TagSet:
    items:
      $ref: '#/definitions/Tag'
    type: array
  Tagging:
    description: <p/>
    properties:
      TagSet:
        $ref: '#/definitions/TagSet'
        description: <p/>
    required:
      - TagSet
    type: object
  TaggingDirective:
    enum:
      - COPY
      - REPLACE
    type: string
  TaggingHeader:
    type: string
  TargetBucket:
    type: string
  TargetGrant:
    description: <p/>
    properties:
      Grantee:
        $ref: '#/definitions/Grantee'
        description: <p/>
      Permission:
        $ref: '#/definitions/BucketLogsPermission'
        description: Logging permissions assigned to the Grantee for the bucket.
    type: object
  TargetGrants:
    items:
      $ref: '#/definitions/TargetGrant'
    type: array
  TargetPrefix:
    type: string
  Tier:
    enum:
      - Standard
      - Bulk
      - Expedited
    type: string
  Token:
    type: string
  TopicArn:
    type: string
  TopicConfiguration:
    description: A container for specifying the configuration for publication of messages to an Amazon Simple Notification Service (Amazon SNS) topic when Amazon S3 detects specified events.
    properties:
      Events:
        $ref: '#/definitions/EventList'
        description: 'The Amazon S3 bucket event about which to send notifications. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Supported Event Types</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
      Filter:
        $ref: '#/definitions/NotificationConfigurationFilter'
        description: <p/>
      Id:
        $ref: '#/definitions/NotificationId'
      TopicArn:
        $ref: '#/definitions/TopicArn'
        description: The Amazon Resource Name (ARN) of the Amazon SNS topic to which Amazon S3 publishes a message when it detects events of the specified type.
    required:
      - TopicArn
      - Events
    type: object
  TopicConfigurationDeprecated:
    description: <p/>
    properties:
      Event:
        $ref: '#/definitions/Event'
        description: Bucket event for which to send notifications.
      Events:
        $ref: '#/definitions/EventList'
        description: <p/>
      Id:
        $ref: '#/definitions/NotificationId'
      Topic:
        $ref: '#/definitions/TopicArn'
        description: Amazon SNS topic to which Amazon S3 will publish a message to report the specified events for the bucket.
    type: object
  TopicConfigurationList:
    items:
      $ref: '#/definitions/TopicConfiguration'
    type: array
    xml:
      wrapped: false
  Transition:
    description: Specifies when an object transitions to a specified storage class.
    properties:
      Date:
        $ref: '#/definitions/Date'
        description: Indicates when objects are transitioned to the specified storage class. The date value must be in ISO 8601 format. The time is always midnight UTC.
      Days:
        $ref: '#/definitions/Days'
        description: Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer.
      StorageClass:
        $ref: '#/definitions/TransitionStorageClass'
        description: The storage class to which you want the object to transition.
    type: object
  TransitionList:
    items:
      $ref: '#/definitions/Transition'
    type: array
    xml:
      wrapped: false
  TransitionStorageClass:
    enum:
      - GLACIER
      - STANDARD_IA
      - ONEZONE_IA
      - INTELLIGENT_TIERING
      - DEEP_ARCHIVE
    type: string
  Type:
    enum:
      - CanonicalUser
      - AmazonCustomerByEmail
      - Group
    type: string
  URI:
    type: string
  UploadIdMarker:
    type: string
  UploadPartCopyOutput:
    example:
      CopyPartResult:
        ETag: '"65d16d19e65a7508a51f043180edcc36"'
        LastModified: '2016-12-29T21:44:28.000Z'
    properties:
      CopyPartResult:
        $ref: '#/definitions/CopyPartResult'
        description: <p/>
    type: object
  UploadPartCopyRequest:
    properties: {}
    type: object
  UploadPartOutput:
    example:
      ETag: '"d8c2eafd90c266e19ab9dcacc479f8af"'
    properties: {}
    type: object
  UploadPartRequest:
    properties:
      Body:
        $ref: '#/definitions/Body'
        description: Object data.
    type: object
  UserMetadata:
    items:
      $ref: '#/definitions/MetadataEntry'
    type: array
  Value:
    type: string
  VersionIdMarker:
    type: string
  VersioningConfiguration:
    description: 'Describes the versioning state of an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html">PUT Bucket versioning</a> in the <i>Amazon Simple Storage Service API Reference</i>.'
    properties:
      MFADelete:
        $ref: '#/definitions/MFADelete'
        description: 'Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.'
      Status:
        $ref: '#/definitions/BucketVersioningStatus'
        description: The versioning state of the bucket.
    type: object
  WebsiteConfiguration:
    description: Specifies website configuration parameters for an Amazon S3 bucket.
    properties:
      ErrorDocument:
        $ref: '#/definitions/ErrorDocument'
        description: The name of the error document for the website.
      IndexDocument:
        $ref: '#/definitions/IndexDocument'
        description: The name of the index document for the website.
      RedirectAllRequestsTo:
        $ref: '#/definitions/RedirectAllRequestsTo'
        description: '<p>The redirect behavior for every request to this bucket''s website endpoint.</p> <important> <p>If you specify this property, you can''t specify any other property.</p> </important>'
      RoutingRules:
        $ref: '#/definitions/RoutingRules'
        description: Rules that define when a redirect is applied and the redirect behavior.
    type: object
  WebsiteRedirectLocation:
    type: string
  Years:
    type: integer
x-servers:
  - description: The Amazon S3 multi-region endpoint
    url: 'http://s3{dash-or-dot}{region}.amazonaws.com'
    variables:
      dash-or-dot:
        default: .
        description: The service/region URL separator
        enum:
          - .
          - '-'
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - eu-west-1
          - ap-northeast-1
          - ap-southeast-1
          - ap-southeast-2
          - sa-east-1
  - description: The Amazon S3 multi-region endpoint
    url: 'https://s3{dash-or-dot}{region}.amazonaws.com'
    variables:
      dash-or-dot:
        default: .
        description: The service/region URL separator
        enum:
          - .
          - '-'
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - eu-west-1
          - ap-northeast-1
          - ap-southeast-1
          - ap-southeast-2
          - sa-east-1
  - description: The general Amazon S3 endpoint for US East (N. Virginia)
    url: 'http://s3.amazonaws.com'
    variables: {}
  - description: The general Amazon S3 endpoint for US East (N. Virginia)
    url: 'https://s3.amazonaws.com'
    variables: {}
  - description: The Amazon S3 multi-region endpoint
    url: 'http://s3.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-2
        description: The AWS region
        enum:
          - us-east-2
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-south-1
  - description: The Amazon S3 multi-region endpoint
    url: 'https://s3.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-2
        description: The AWS region
        enum:
          - us-east-2
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-south-1
  - description: The Amazon S3 endpoint for China (Beijing) and China (Ningxia)
    url: 'http://s3.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
  - description: The Amazon S3 endpoint for China (Beijing) and China (Ningxia)
    url: 'https://s3.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
