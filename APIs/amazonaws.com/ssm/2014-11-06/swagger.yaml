swagger: '2.0'
info:
  version: '2014-11-06'
  x-release: v4
  title: Amazon Simple Systems Manager (SSM)
  description: '<fullname>AWS Systems Manager</fullname> <p>AWS Systems Manager is a collection of capabilities that helps you automate management tasks such as collecting system inventory, applying operating system (OS) patches, automating the creation of Amazon Machine Images (AMIs), and configuring operating systems (OSs) and applications at scale. Systems Manager lets you remotely and securely manage the configuration of your managed instances. A <i>managed instance</i> is any Amazon EC2 instance or on-premises machine in your hybrid environment that has been configured for Systems Manager.</p> <p>This reference is intended to be used with the <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/">AWS Systems Manager User Guide</a>.</p> <p>To get started, verify prerequisites and configure managed instances. For more information, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html">Systems Manager Prerequisites</a> in the <i>AWS Systems Manager User Guide</i>.</p> <p>For information about other API actions you can perform on Amazon EC2 instances, see the <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/">Amazon EC2 API Reference</a>. For information about how to use a Query API, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/making-api-requests.html">Making API Requests</a>. </p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: ssm
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ssm-2014-11-06.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/ssm/'
host: ssm.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AddTagsToResource
      description: '<p>Adds or overwrites one or more tags for the specified resource. Tags are metadata that you can assign to your documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. Each tag consists of a key and an optional value, both of which you define. For example, you could define a set of tags for your account''s managed instances that helps you track each instance''s owner and stack level. For example: Key=Owner and Value=DbAdmin, SysAdmin, or Dev. Or Key=Stack and Value=Production, Pre-Production, or Test.</p> <p>Each resource can have a maximum of 50 tags. </p> <p>We recommend that you devise a set of tag keys that meets your needs for each resource type. Using a consistent set of tag keys makes it easier for you to manage your resources. You can search and filter the resources based on the tags you add. Tags don''t have any semantic meaning to Amazon EC2 and are interpreted strictly as a string of characters. </p> <p>For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Amazon EC2 Resources</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddTagsToResourceResult'
        '480':
          description: InvalidResourceType
          schema:
            $ref: '#/definitions/InvalidResourceType'
        '481':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: TooManyTagsError
          schema:
            $ref: '#/definitions/TooManyTagsError'
        '484':
          description: TooManyUpdates
          schema:
            $ref: '#/definitions/TooManyUpdates'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddTagsToResourceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CancelCommand':
    post:
      operationId: CancelCommand
      description: Attempts to cancel the command specified by the Command ID. There is no guarantee that the command will be terminated and the underlying process stopped.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelCommandResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidCommandId
          schema:
            $ref: '#/definitions/InvalidCommandId'
        '482':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '483':
          description: DuplicateInstanceId
          schema:
            $ref: '#/definitions/DuplicateInstanceId'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CancelCommandRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CancelMaintenanceWindowExecution':
    post:
      operationId: CancelMaintenanceWindowExecution
      description: Stops a Maintenance Window execution that is already in progress and cancels any tasks in the window that have not already starting running. (Tasks already in progress will continue to completion.)
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelMaintenanceWindowExecutionResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CancelMaintenanceWindowExecutionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateActivation':
    post:
      operationId: CreateActivation
      description: 'Registers your on-premises server or virtual machine with Amazon EC2 so that you can manage these resources using Run Command. An on-premises server or virtual machine that has been registered with EC2 is called a managed instance. For more information about activations, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-managedinstances.html">Setting Up Systems Manager in Hybrid Environments</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateActivationResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateActivationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateAssociation':
    post:
      operationId: CreateAssociation
      description: '<p>Associates the specified Systems Manager document with the specified instances or targets.</p> <p>When you associate a document with one or more instances using instance IDs or tags, SSM Agent running on the instance processes the document and configures the instance as specified.</p> <p>If you associate a document with an instance that already has an associated document, the system returns the AssociationAlreadyExists exception.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateAssociationResult'
        '480':
          description: AssociationAlreadyExists
          schema:
            $ref: '#/definitions/AssociationAlreadyExists'
        '481':
          description: AssociationLimitExceeded
          schema:
            $ref: '#/definitions/AssociationLimitExceeded'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '484':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
        '485':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '486':
          description: UnsupportedPlatformType
          schema:
            $ref: '#/definitions/UnsupportedPlatformType'
        '487':
          description: InvalidOutputLocation
          schema:
            $ref: '#/definitions/InvalidOutputLocation'
        '488':
          description: InvalidParameters
          schema:
            $ref: '#/definitions/InvalidParameters'
        '489':
          description: InvalidTarget
          schema:
            $ref: '#/definitions/InvalidTarget'
        '490':
          description: InvalidSchedule
          schema:
            $ref: '#/definitions/InvalidSchedule'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAssociationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateAssociationBatch':
    post:
      operationId: CreateAssociationBatch
      description: '<p>Associates the specified Systems Manager document with the specified instances or targets.</p> <p>When you associate a document with one or more instances using instance IDs or tags, SSM Agent running on the instance processes the document and configures the instance as specified.</p> <p>If you associate a document with an instance that already has an associated document, the system returns the AssociationAlreadyExists exception.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateAssociationBatchResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '482':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
        '483':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '484':
          description: InvalidParameters
          schema:
            $ref: '#/definitions/InvalidParameters'
        '485':
          description: DuplicateInstanceId
          schema:
            $ref: '#/definitions/DuplicateInstanceId'
        '486':
          description: AssociationLimitExceeded
          schema:
            $ref: '#/definitions/AssociationLimitExceeded'
        '487':
          description: UnsupportedPlatformType
          schema:
            $ref: '#/definitions/UnsupportedPlatformType'
        '488':
          description: InvalidOutputLocation
          schema:
            $ref: '#/definitions/InvalidOutputLocation'
        '489':
          description: InvalidTarget
          schema:
            $ref: '#/definitions/InvalidTarget'
        '490':
          description: InvalidSchedule
          schema:
            $ref: '#/definitions/InvalidSchedule'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAssociationBatchRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateDocument':
    post:
      operationId: CreateDocument
      description: '<p>Creates a Systems Manager document.</p> <p>After you create a document, you can use CreateAssociation to associate it with one or more running instances.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDocumentResult'
        '480':
          description: DocumentAlreadyExists
          schema:
            $ref: '#/definitions/DocumentAlreadyExists'
        '481':
          description: MaxDocumentSizeExceeded
          schema:
            $ref: '#/definitions/MaxDocumentSizeExceeded'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: InvalidDocumentContent
          schema:
            $ref: '#/definitions/InvalidDocumentContent'
        '484':
          description: DocumentLimitExceeded
          schema:
            $ref: '#/definitions/DocumentLimitExceeded'
        '485':
          description: InvalidDocumentSchemaVersion
          schema:
            $ref: '#/definitions/InvalidDocumentSchemaVersion'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDocumentRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateMaintenanceWindow':
    post:
      operationId: CreateMaintenanceWindow
      description: Creates a new Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateMaintenanceWindowResult'
        '480':
          description: IdempotentParameterMismatch
          schema:
            $ref: '#/definitions/IdempotentParameterMismatch'
        '481':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreatePatchBaseline':
    post:
      operationId: CreatePatchBaseline
      description: '<p>Creates a patch baseline.</p> <note> <p>For information about valid key and value pairs in <code>PatchFilters</code> for each supported operating system type, see <a href="http://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html">PatchFilter</a>.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePatchBaselineResult'
        '480':
          description: IdempotentParameterMismatch
          schema:
            $ref: '#/definitions/IdempotentParameterMismatch'
        '481':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePatchBaselineRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateResourceDataSync':
    post:
      operationId: CreateResourceDataSync
      description: '<p>Creates a resource data sync configuration to a single bucket in Amazon S3. This is an asynchronous operation that returns immediately. After a successful initial sync is completed, the system continuously syncs data to the Amazon S3 bucket. To check the status of the sync, use the <a>ListResourceDataSync</a>.</p> <p>By default, data is not encrypted in Amazon S3. We strongly recommend that you enable encryption in Amazon S3 to ensure secure data storage. We also recommend that you secure access to the Amazon S3 bucket by creating a restrictive bucket policy. To view an example of a restrictive Amazon S3 bucket policy for Resource Data Sync, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-datasync-create.html">Create a Resource Data Sync for Inventory</a> in the <i>AWS Systems Manager User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateResourceDataSyncResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: ResourceDataSyncCountExceededException
          schema:
            $ref: '#/definitions/ResourceDataSyncCountExceededException'
        '482':
          description: ResourceDataSyncAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceDataSyncAlreadyExistsException'
        '483':
          description: ResourceDataSyncInvalidConfigurationException
          schema:
            $ref: '#/definitions/ResourceDataSyncInvalidConfigurationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateResourceDataSyncRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteActivation':
    post:
      operationId: DeleteActivation
      description: 'Deletes an activation. You are not required to delete an activation. If you delete an activation, you can no longer use it to register additional managed instances. Deleting an activation does not de-register managed instances. You must manually de-register managed instances.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteActivationResult'
        '480':
          description: InvalidActivationId
          schema:
            $ref: '#/definitions/InvalidActivationId'
        '481':
          description: InvalidActivation
          schema:
            $ref: '#/definitions/InvalidActivation'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: TooManyUpdates
          schema:
            $ref: '#/definitions/TooManyUpdates'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteActivationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteAssociation':
    post:
      operationId: DeleteAssociation
      description: '<p>Disassociates the specified Systems Manager document from the specified instance.</p> <p>When you disassociate a document from an instance, it does not change the configuration of the instance. To change the configuration state of an instance after you disassociate a document, you must create a new document with the desired configuration and associate it with the instance.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteAssociationResult'
        '480':
          description: AssociationDoesNotExist
          schema:
            $ref: '#/definitions/AssociationDoesNotExist'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '483':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '484':
          description: TooManyUpdates
          schema:
            $ref: '#/definitions/TooManyUpdates'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAssociationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteDocument':
    post:
      operationId: DeleteDocument
      description: '<p>Deletes the Systems Manager document and all instance associations to the document.</p> <p>Before you delete the document, we recommend that you use <a>DeleteAssociation</a> to disassociate all instances that are associated with the document.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDocumentResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '482':
          description: InvalidDocumentOperation
          schema:
            $ref: '#/definitions/InvalidDocumentOperation'
        '483':
          description: AssociatedInstances
          schema:
            $ref: '#/definitions/AssociatedInstances'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDocumentRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteInventory':
    post:
      operationId: DeleteInventory
      description: 'Delete a custom inventory type, or the data associated with a custom Inventory type. Deleting a custom inventory type is also referred to as deleting a custom inventory schema.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteInventoryResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidTypeNameException
          schema:
            $ref: '#/definitions/InvalidTypeNameException'
        '482':
          description: InvalidOptionException
          schema:
            $ref: '#/definitions/InvalidOptionException'
        '483':
          description: InvalidDeleteInventoryParametersException
          schema:
            $ref: '#/definitions/InvalidDeleteInventoryParametersException'
        '484':
          description: InvalidInventoryRequestException
          schema:
            $ref: '#/definitions/InvalidInventoryRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteInventoryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteMaintenanceWindow':
    post:
      operationId: DeleteMaintenanceWindow
      description: Deletes a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteMaintenanceWindowResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteParameter':
    post:
      operationId: DeleteParameter
      description: Delete a parameter from the system.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteParameterResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: ParameterNotFound
          schema:
            $ref: '#/definitions/ParameterNotFound'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteParameterRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteParameters':
    post:
      operationId: DeleteParameters
      description: Delete a list of parameters. This API is used to delete parameters by using the Amazon EC2 console.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteParametersResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteParametersRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeletePatchBaseline':
    post:
      operationId: DeletePatchBaseline
      description: Deletes a patch baseline.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeletePatchBaselineResult'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeletePatchBaselineRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteResourceDataSync':
    post:
      operationId: DeleteResourceDataSync
      description: 'Deletes a Resource Data Sync configuration. After the configuration is deleted, changes to inventory data on managed instances are no longer synced with the target Amazon S3 bucket. Deleting a sync configuration does not delete data in the target Amazon S3 bucket.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteResourceDataSyncResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: ResourceDataSyncNotFoundException
          schema:
            $ref: '#/definitions/ResourceDataSyncNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteResourceDataSyncRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeregisterManagedInstance':
    post:
      operationId: DeregisterManagedInstance
      description: 'Removes the server or virtual machine from the list of registered servers. You can reregister the instance again at any time. If you don''t plan to use Run Command on the server, we suggest uninstalling SSM Agent first.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterManagedInstanceResult'
        '480':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterManagedInstanceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeregisterPatchBaselineForPatchGroup':
    post:
      operationId: DeregisterPatchBaselineForPatchGroup
      description: Removes a patch group from a patch baseline.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterPatchBaselineForPatchGroupResult'
        '480':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterPatchBaselineForPatchGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeregisterTargetFromMaintenanceWindow':
    post:
      operationId: DeregisterTargetFromMaintenanceWindow
      description: Removes a target from a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterTargetFromMaintenanceWindowResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: TargetInUseException
          schema:
            $ref: '#/definitions/TargetInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterTargetFromMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeregisterTaskFromMaintenanceWindow':
    post:
      operationId: DeregisterTaskFromMaintenanceWindow
      description: Removes a task from a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterTaskFromMaintenanceWindowResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterTaskFromMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeActivations':
    post:
      operationId: DescribeActivations
      description: 'Details about the activation, including: the date and time the activation was created, the expiration date, the IAM role assigned to the instances in the activation, and the number of instances activated by this registration.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeActivationsResult'
        '480':
          description: InvalidFilter
          schema:
            $ref: '#/definitions/InvalidFilter'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeActivationsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeAssociation':
    post:
      operationId: DescribeAssociation
      description: 'Describes the association for the specified target or instance. If you created the association by using the <code>Targets</code> parameter, then you must retrieve the association by using the association ID. If you created the association by specifying an instance ID and a Systems Manager document, then you retrieve the association by specifying the document name and the instance ID. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAssociationResult'
        '480':
          description: AssociationDoesNotExist
          schema:
            $ref: '#/definitions/AssociationDoesNotExist'
        '481':
          description: InvalidAssociationVersion
          schema:
            $ref: '#/definitions/InvalidAssociationVersion'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '484':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAssociationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeAssociationExecutionTargets':
    post:
      operationId: DescribeAssociationExecutionTargets
      description: Use this API action to view information about a specific execution of a specific association.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAssociationExecutionTargetsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: AssociationDoesNotExist
          schema:
            $ref: '#/definitions/AssociationDoesNotExist'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '483':
          description: AssociationExecutionDoesNotExist
          schema:
            $ref: '#/definitions/AssociationExecutionDoesNotExist'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAssociationExecutionTargetsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeAssociationExecutions':
    post:
      operationId: DescribeAssociationExecutions
      description: 'Use this API action to view all executions for a specific association ID. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAssociationExecutionsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: AssociationDoesNotExist
          schema:
            $ref: '#/definitions/AssociationDoesNotExist'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAssociationExecutionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeAutomationExecutions':
    post:
      operationId: DescribeAutomationExecutions
      description: Provides details about all active and terminated Automation executions.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAutomationExecutionsResult'
        '480':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
        '481':
          description: InvalidFilterValue
          schema:
            $ref: '#/definitions/InvalidFilterValue'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '483':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAutomationExecutionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeAutomationStepExecutions':
    post:
      operationId: DescribeAutomationStepExecutions
      description: Information about all active and terminated step executions in an Automation workflow.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAutomationStepExecutionsResult'
        '480':
          description: AutomationExecutionNotFoundException
          schema:
            $ref: '#/definitions/AutomationExecutionNotFoundException'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '482':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
        '483':
          description: InvalidFilterValue
          schema:
            $ref: '#/definitions/InvalidFilterValue'
        '484':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAutomationStepExecutionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeAvailablePatches':
    post:
      operationId: DescribeAvailablePatches
      description: Lists all patches that could possibly be included in a patch baseline.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAvailablePatchesResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAvailablePatchesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeDocument':
    post:
      operationId: DescribeDocument
      description: Describes the specified Systems Manager document.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDocumentResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '482':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDocumentRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeDocumentPermission':
    post:
      operationId: DescribeDocumentPermission
      description: 'Describes the permissions for a Systems Manager document. If you created the document, you are the owner. If a document is shared, it can either be shared privately (by specifying a user''s AWS account ID) or publicly (<i>All</i>). '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDocumentPermissionResponse'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '482':
          description: InvalidPermissionType
          schema:
            $ref: '#/definitions/InvalidPermissionType'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDocumentPermissionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEffectiveInstanceAssociations':
    post:
      operationId: DescribeEffectiveInstanceAssociations
      description: All associations for the instance(s).
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEffectiveInstanceAssociationsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEffectiveInstanceAssociationsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEffectivePatchesForPatchBaseline':
    post:
      operationId: DescribeEffectivePatchesForPatchBaseline
      description: Retrieves the current effective patches (the patch and the approval state) for the specified patch baseline. Note that this API applies only to Windows patch baselines.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEffectivePatchesForPatchBaselineResult'
        '480':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '481':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '482':
          description: UnsupportedOperatingSystem
          schema:
            $ref: '#/definitions/UnsupportedOperatingSystem'
        '483':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEffectivePatchesForPatchBaselineRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeInstanceAssociationsStatus':
    post:
      operationId: DescribeInstanceAssociationsStatus
      description: The status of the associations for the instance(s).
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInstanceAssociationsStatusResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeInstanceAssociationsStatusRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeInstanceInformation':
    post:
      operationId: DescribeInstanceInformation
      description: '<p>Describes one or more of your instances. You can use this to get information about instances like the operating system platform, the SSM Agent version (Linux), status etc. If you specify one or more instance IDs, it returns information for those instances. If you do not specify instance IDs, it returns information for all your instances. If you specify an instance ID that is not valid or an instance that you do not own, you receive an error. </p> <note> <p>The IamRole field for this API action is the Amazon Identity and Access Management (IAM) role assigned to on-premises instances. This call does not return the IAM role for Amazon EC2 instances.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInstanceInformationResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '483':
          description: InvalidInstanceInformationFilterValue
          schema:
            $ref: '#/definitions/InvalidInstanceInformationFilterValue'
        '484':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeInstanceInformationRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeInstancePatchStates':
    post:
      operationId: DescribeInstancePatchStates
      description: Retrieves the high-level patch state of one or more instances.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInstancePatchStatesResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeInstancePatchStatesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeInstancePatchStatesForPatchGroup':
    post:
      operationId: DescribeInstancePatchStatesForPatchGroup
      description: Retrieves the high-level patch state for the instances in the specified patch group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInstancePatchStatesForPatchGroupResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidFilter
          schema:
            $ref: '#/definitions/InvalidFilter'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeInstancePatchStatesForPatchGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeInstancePatches':
    post:
      operationId: DescribeInstancePatches
      description: Retrieves information about the patches on the specified instance and their state relative to the patch baseline being used for the instance.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInstancePatchesResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '482':
          description: InvalidFilter
          schema:
            $ref: '#/definitions/InvalidFilter'
        '483':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeInstancePatchesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeInventoryDeletions':
    post:
      operationId: DescribeInventoryDeletions
      description: Describes a specific delete inventory operation.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInventoryDeletionsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDeletionIdException
          schema:
            $ref: '#/definitions/InvalidDeletionIdException'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeInventoryDeletionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowExecutionTaskInvocations':
    post:
      operationId: DescribeMaintenanceWindowExecutionTaskInvocations
      description: Retrieves the individual task executions (one per target) for a particular task executed as part of a Maintenance Window execution.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowExecutionTaskInvocationsResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowExecutionTaskInvocationsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowExecutionTasks':
    post:
      operationId: DescribeMaintenanceWindowExecutionTasks
      description: 'For a given Maintenance Window execution, lists the tasks that were executed.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowExecutionTasksResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowExecutionTasksRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowExecutions':
    post:
      operationId: DescribeMaintenanceWindowExecutions
      description: 'Lists the executions of a Maintenance Window. This includes information about when the Maintenance Window was scheduled to be active, and information about tasks registered and run with the Maintenance Window.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowExecutionsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowExecutionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowSchedule':
    post:
      operationId: DescribeMaintenanceWindowSchedule
      description: Retrieves information about upcoming executions of a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowScheduleResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowScheduleRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowTargets':
    post:
      operationId: DescribeMaintenanceWindowTargets
      description: Lists the targets registered with the Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowTargetsResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowTargetsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowTasks':
    post:
      operationId: DescribeMaintenanceWindowTasks
      description: Lists the tasks in a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowTasksResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowTasksRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindows':
    post:
      operationId: DescribeMaintenanceWindows
      description: Retrieves the Maintenance Windows in an AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowsForTarget':
    post:
      operationId: DescribeMaintenanceWindowsForTarget
      description: Retrieves information about the Maintenance Windows targets or tasks that an instance is associated with.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowsForTargetResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowsForTargetRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeParameters':
    post:
      operationId: DescribeParameters
      description: '<p>Get information about a parameter.</p> <p>Request results are returned on a best-effort basis. If you specify <code>MaxResults</code> in the request, the response includes information up to the limit specified. The number of items returned, however, can be between zero and the value of <code>MaxResults</code>. If the service reaches an internal limit while processing the results, it stops the operation and returns the matching values up to that point and a <code>NextToken</code>. You can specify the <code>NextToken</code> in a subsequent call to get the next set of results.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeParametersResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
        '482':
          description: InvalidFilterOption
          schema:
            $ref: '#/definitions/InvalidFilterOption'
        '483':
          description: InvalidFilterValue
          schema:
            $ref: '#/definitions/InvalidFilterValue'
        '484':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeParametersRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribePatchBaselines':
    post:
      operationId: DescribePatchBaselines
      description: Lists the patch baselines in your AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribePatchBaselinesResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribePatchBaselinesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribePatchGroupState':
    post:
      operationId: DescribePatchGroupState
      description: Returns high-level aggregated patch compliance state for a patch group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribePatchGroupStateResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribePatchGroupStateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribePatchGroups':
    post:
      operationId: DescribePatchGroups
      description: Lists all patch groups that have been registered with patch baselines.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribePatchGroupsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribePatchGroupsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeSessions':
    post:
      operationId: DescribeSessions
      description: Retrieves a list of all active sessions (both connected and disconnected) or terminated sessions from the past 30 days.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSessionsResponse'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSessionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetAutomationExecution':
    post:
      operationId: GetAutomationExecution
      description: Get detailed information about a particular Automation execution.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAutomationExecutionResult'
        '480':
          description: AutomationExecutionNotFoundException
          schema:
            $ref: '#/definitions/AutomationExecutionNotFoundException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetAutomationExecutionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetCommandInvocation':
    post:
      operationId: GetCommandInvocation
      description: 'Returns detailed information about command execution for an invocation or plugin. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCommandInvocationResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidCommandId
          schema:
            $ref: '#/definitions/InvalidCommandId'
        '482':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '483':
          description: InvalidPluginName
          schema:
            $ref: '#/definitions/InvalidPluginName'
        '484':
          description: InvocationDoesNotExist
          schema:
            $ref: '#/definitions/InvocationDoesNotExist'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetCommandInvocationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetConnectionStatus':
    post:
      operationId: GetConnectionStatus
      description: Retrieves the Session Manager connection status for an instance to determine whether it is connected and ready to receive Session Manager connections.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetConnectionStatusResponse'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetConnectionStatusRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetDefaultPatchBaseline':
    post:
      operationId: GetDefaultPatchBaseline
      description: '<p>Retrieves the default patch baseline. Note that Systems Manager supports creating multiple default patch baselines. For example, you can create a default patch baseline for each operating system.</p> <p>If you do not specify an operating system value, the default patch baseline for Windows is returned.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDefaultPatchBaselineResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDefaultPatchBaselineRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetDeployablePatchSnapshotForInstance':
    post:
      operationId: GetDeployablePatchSnapshotForInstance
      description: 'Retrieves the current snapshot for the patch baseline the instance uses. This API is primarily used by the AWS-RunPatchBaseline Systems Manager document. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDeployablePatchSnapshotForInstanceResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: UnsupportedOperatingSystem
          schema:
            $ref: '#/definitions/UnsupportedOperatingSystem'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDeployablePatchSnapshotForInstanceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetDocument':
    post:
      operationId: GetDocument
      description: Gets the contents of the specified Systems Manager document.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDocumentResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '482':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDocumentRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetInventory':
    post:
      operationId: GetInventory
      description: Query inventory information.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInventoryResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidFilter
          schema:
            $ref: '#/definitions/InvalidFilter'
        '482':
          description: InvalidInventoryGroupException
          schema:
            $ref: '#/definitions/InvalidInventoryGroupException'
        '483':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '484':
          description: InvalidTypeNameException
          schema:
            $ref: '#/definitions/InvalidTypeNameException'
        '485':
          description: InvalidAggregatorException
          schema:
            $ref: '#/definitions/InvalidAggregatorException'
        '486':
          description: InvalidResultAttributeException
          schema:
            $ref: '#/definitions/InvalidResultAttributeException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetInventoryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetInventorySchema':
    post:
      operationId: GetInventorySchema
      description: 'Return a list of inventory type names for the account, or return a list of attribute names for a specific Inventory item type. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInventorySchemaResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidTypeNameException
          schema:
            $ref: '#/definitions/InvalidTypeNameException'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetInventorySchemaRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetMaintenanceWindow':
    post:
      operationId: GetMaintenanceWindow
      description: Retrieves a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMaintenanceWindowResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetMaintenanceWindowExecution':
    post:
      operationId: GetMaintenanceWindowExecution
      description: Retrieves details about a specific task executed as part of a Maintenance Window execution.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMaintenanceWindowExecutionResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetMaintenanceWindowExecutionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetMaintenanceWindowExecutionTask':
    post:
      operationId: GetMaintenanceWindowExecutionTask
      description: Retrieves the details about a specific task executed as part of a Maintenance Window execution.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMaintenanceWindowExecutionTaskResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetMaintenanceWindowExecutionTaskRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetMaintenanceWindowExecutionTaskInvocation':
    post:
      operationId: GetMaintenanceWindowExecutionTaskInvocation
      description: 'Retrieves a task invocation. A task invocation is a specific task executing on a specific target. Maintenance Windows report status for all invocations. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMaintenanceWindowExecutionTaskInvocationResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetMaintenanceWindowExecutionTaskInvocationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetMaintenanceWindowTask':
    post:
      operationId: GetMaintenanceWindowTask
      description: Lists the tasks in a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMaintenanceWindowTaskResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetMaintenanceWindowTaskRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetParameter':
    post:
      operationId: GetParameter
      description: Get information about a parameter by using the parameter name. Don't confuse this API action with the <a>GetParameters</a> API action.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetParameterResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidKeyId
          schema:
            $ref: '#/definitions/InvalidKeyId'
        '482':
          description: ParameterNotFound
          schema:
            $ref: '#/definitions/ParameterNotFound'
        '483':
          description: ParameterVersionNotFound
          schema:
            $ref: '#/definitions/ParameterVersionNotFound'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetParameterRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetParameterHistory':
    post:
      operationId: GetParameterHistory
      description: Query a list of all parameters used by the AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetParameterHistoryResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: ParameterNotFound
          schema:
            $ref: '#/definitions/ParameterNotFound'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '483':
          description: InvalidKeyId
          schema:
            $ref: '#/definitions/InvalidKeyId'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetParameterHistoryRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetParameters':
    post:
      operationId: GetParameters
      description: Get details of a parameter. Don't confuse this API action with the <a>GetParameter</a> API action.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetParametersResult'
        '480':
          description: InvalidKeyId
          schema:
            $ref: '#/definitions/InvalidKeyId'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetParametersRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetParametersByPath':
    post:
      operationId: GetParametersByPath
      description: '<p>Retrieve parameters in a specific hierarchy. For more information, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-working.html">Working with Systems Manager Parameters</a> in the <i>AWS Systems Manager User Guide</i>. </p> <p>Request results are returned on a best-effort basis. If you specify <code>MaxResults</code> in the request, the response includes information up to the limit specified. The number of items returned, however, can be between zero and the value of <code>MaxResults</code>. If the service reaches an internal limit while processing the results, it stops the operation and returns the matching values up to that point and a <code>NextToken</code>. You can specify the <code>NextToken</code> in a subsequent call to get the next set of results.</p> <note> <p>This API action doesn''t support filtering by tags. </p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetParametersByPathResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
        '482':
          description: InvalidFilterOption
          schema:
            $ref: '#/definitions/InvalidFilterOption'
        '483':
          description: InvalidFilterValue
          schema:
            $ref: '#/definitions/InvalidFilterValue'
        '484':
          description: InvalidKeyId
          schema:
            $ref: '#/definitions/InvalidKeyId'
        '485':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetParametersByPathRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetPatchBaseline':
    post:
      operationId: GetPatchBaseline
      description: Retrieves information about a patch baseline.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPatchBaselineResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetPatchBaselineRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetPatchBaselineForPatchGroup':
    post:
      operationId: GetPatchBaselineForPatchGroup
      description: Retrieves the patch baseline that should be used for the specified patch group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPatchBaselineForPatchGroupResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetPatchBaselineForPatchGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#LabelParameterVersion':
    post:
      operationId: LabelParameterVersion
      description: '<p>A parameter label is a user-defined alias to help you manage different versions of a parameter. When you modify a parameter, Systems Manager automatically saves a new version and increments the version number by one. A label can help you remember the purpose of a parameter when there are multiple versions. </p> <p>Parameter labels have the following requirements and restrictions.</p> <ul> <li> <p>A version of a parameter can have a maximum of 10 labels.</p> </li> <li> <p>You can''t attach the same label to different versions of the same parameter. For example, if version 1 has the label Production, then you can''t attach Production to version 2.</p> </li> <li> <p>You can move a label from one version of a parameter to another.</p> </li> <li> <p>You can''t create a label when you create a new parameter. You must attach a label to a specific version of a parameter.</p> </li> <li> <p>You can''t delete a parameter label. If you no longer want to use a parameter label, then you must move it to a different version of a parameter.</p> </li> <li> <p>A label can have a maximum of 100 characters.</p> </li> <li> <p>Labels can contain letters (case sensitive), numbers, periods (.), hyphens (-), or underscores (_).</p> </li> <li> <p>Labels can''t begin with a number, "aws," or "ssm" (not case sensitive). If a label fails to meet these requirements, then the label is not associated with a parameter and the system displays it in the list of InvalidLabels.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LabelParameterVersionResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: TooManyUpdates
          schema:
            $ref: '#/definitions/TooManyUpdates'
        '482':
          description: ParameterNotFound
          schema:
            $ref: '#/definitions/ParameterNotFound'
        '483':
          description: ParameterVersionNotFound
          schema:
            $ref: '#/definitions/ParameterVersionNotFound'
        '484':
          description: ParameterVersionLabelLimitExceeded
          schema:
            $ref: '#/definitions/ParameterVersionLabelLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/LabelParameterVersionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListAssociationVersions':
    post:
      operationId: ListAssociationVersions
      description: Retrieves all versions of an association for a specific association ID.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAssociationVersionsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '482':
          description: AssociationDoesNotExist
          schema:
            $ref: '#/definitions/AssociationDoesNotExist'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAssociationVersionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListAssociations':
    post:
      operationId: ListAssociations
      description: Lists the associations for the specified Systems Manager document or instance.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAssociationsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAssociationsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListCommandInvocations':
    post:
      operationId: ListCommandInvocations
      description: 'An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user executes SendCommand against three instances, then a command invocation is created for each requested instance ID. ListCommandInvocations provide status about command execution.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCommandInvocationsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidCommandId
          schema:
            $ref: '#/definitions/InvalidCommandId'
        '482':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '483':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
        '484':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListCommandInvocationsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListCommands':
    post:
      operationId: ListCommands
      description: Lists the commands requested by users of the AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCommandsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidCommandId
          schema:
            $ref: '#/definitions/InvalidCommandId'
        '482':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '483':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
        '484':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListCommandsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListComplianceItems':
    post:
      operationId: ListComplianceItems
      description: 'For a specified resource ID, this API action returns a list of compliance statuses for different resource types. Currently, you can only specify one resource ID per call. List results depend on the criteria specified in the filter. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListComplianceItemsResult'
        '480':
          description: InvalidResourceType
          schema:
            $ref: '#/definitions/InvalidResourceType'
        '481':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: InvalidFilter
          schema:
            $ref: '#/definitions/InvalidFilter'
        '484':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListComplianceItemsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListComplianceSummaries':
    post:
      operationId: ListComplianceSummaries
      description: 'Returns a summary count of compliant and non-compliant resources for a compliance type. For example, this call can return State Manager associations, patches, or custom compliance types according to the filter criteria that you specify. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListComplianceSummariesResult'
        '480':
          description: InvalidFilter
          schema:
            $ref: '#/definitions/InvalidFilter'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListComplianceSummariesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListDocumentVersions':
    post:
      operationId: ListDocumentVersions
      description: List all versions for a document.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDocumentVersionsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '482':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDocumentVersionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListDocuments':
    post:
      operationId: ListDocuments
      description: Describes one or more of your Systems Manager documents.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDocumentsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '482':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDocumentsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListInventoryEntries':
    post:
      operationId: ListInventoryEntries
      description: A list of inventory items returned by the request.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListInventoryEntriesResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '482':
          description: InvalidTypeNameException
          schema:
            $ref: '#/definitions/InvalidTypeNameException'
        '483':
          description: InvalidFilter
          schema:
            $ref: '#/definitions/InvalidFilter'
        '484':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListInventoryEntriesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListResourceComplianceSummaries':
    post:
      operationId: ListResourceComplianceSummaries
      description: 'Returns a resource-level summary count. The summary includes information about compliant and non-compliant statuses and detailed compliance-item severity counts, according to the filter criteria you specify.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResourceComplianceSummariesResult'
        '480':
          description: InvalidFilter
          schema:
            $ref: '#/definitions/InvalidFilter'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListResourceComplianceSummariesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListResourceDataSync':
    post:
      operationId: ListResourceDataSync
      description: '<p>Lists your resource data sync configurations. Includes information about the last time a sync attempted to start, the last sync status, and the last time a sync successfully completed.</p> <p>The number of sync configurations might be too large to return using a single call to <code>ListResourceDataSync</code>. You can limit the number of sync configurations returned by using the <code>MaxResults</code> parameter. To determine whether there are more sync configurations to list, check the value of <code>NextToken</code> in the output. If there are more sync configurations to list, you can request them by specifying the <code>NextToken</code> returned in the call to the parameter of a subsequent call. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResourceDataSyncResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListResourceDataSyncRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListTagsForResource':
    post:
      operationId: ListTagsForResource
      description: Returns a list of the tags assigned to the specified resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResult'
        '480':
          description: InvalidResourceType
          schema:
            $ref: '#/definitions/InvalidResourceType'
        '481':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyDocumentPermission':
    post:
      operationId: ModifyDocumentPermission
      description: 'Shares a Systems Manager document publicly or privately. If you share a document privately, you must specify the AWS user account IDs for those people who can use the document. If you share a document publicly, you must specify <i>All</i> as the account ID.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyDocumentPermissionResponse'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '482':
          description: InvalidPermissionType
          schema:
            $ref: '#/definitions/InvalidPermissionType'
        '483':
          description: DocumentPermissionLimit
          schema:
            $ref: '#/definitions/DocumentPermissionLimit'
        '484':
          description: DocumentLimitExceeded
          schema:
            $ref: '#/definitions/DocumentLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyDocumentPermissionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutComplianceItems':
    post:
      operationId: PutComplianceItems
      description: '<p>Registers a compliance type and other compliance details on a designated resource. This action lets you register custom compliance details with a resource. This call overwrites existing compliance information on the resource, so you must provide a full list of compliance items each time that you send the request.</p> <p>ComplianceType can be one of the following:</p> <ul> <li> <p>ExecutionId: The execution ID when the patch, association, or custom compliance item was applied.</p> </li> <li> <p>ExecutionType: Specify patch, association, or Custom:<code>string</code>.</p> </li> <li> <p>ExecutionTime. The time the patch, association, or custom compliance item was applied to the instance.</p> </li> <li> <p>Id: The patch, association, or custom compliance ID.</p> </li> <li> <p>Title: A title.</p> </li> <li> <p>Status: The status of the compliance item. For example, <code>approved</code> for patches, or <code>Failed</code> for associations.</p> </li> <li> <p>Severity: A patch severity. For example, <code>critical</code>.</p> </li> <li> <p>DocumentName: A SSM document name. For example, AWS-RunPatchBaseline.</p> </li> <li> <p>DocumentVersion: An SSM document version number. For example, 4.</p> </li> <li> <p>Classification: A patch classification. For example, <code>security updates</code>.</p> </li> <li> <p>PatchBaselineId: A patch baseline ID.</p> </li> <li> <p>PatchSeverity: A patch severity. For example, <code>Critical</code>.</p> </li> <li> <p>PatchState: A patch state. For example, <code>InstancesWithFailedPatches</code>.</p> </li> <li> <p>PatchGroup: The name of a patch group.</p> </li> <li> <p>InstalledTime: The time the association, patch, or custom compliance item was applied to the resource. Specify the time by using the following format: yyyy-MM-dd''T''HH:mm:ss''Z''</p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutComplianceItemsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidItemContentException
          schema:
            $ref: '#/definitions/InvalidItemContentException'
        '482':
          description: TotalSizeLimitExceededException
          schema:
            $ref: '#/definitions/TotalSizeLimitExceededException'
        '483':
          description: ItemSizeLimitExceededException
          schema:
            $ref: '#/definitions/ItemSizeLimitExceededException'
        '484':
          description: ComplianceTypeCountLimitExceededException
          schema:
            $ref: '#/definitions/ComplianceTypeCountLimitExceededException'
        '485':
          description: InvalidResourceType
          schema:
            $ref: '#/definitions/InvalidResourceType'
        '486':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutComplianceItemsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutInventory':
    post:
      operationId: PutInventory
      description: 'Bulk update custom inventory items on one more instance. The request adds an inventory item, if it doesn''t already exist, or updates an inventory item, if it does exist.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutInventoryResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '482':
          description: InvalidTypeNameException
          schema:
            $ref: '#/definitions/InvalidTypeNameException'
        '483':
          description: InvalidItemContentException
          schema:
            $ref: '#/definitions/InvalidItemContentException'
        '484':
          description: TotalSizeLimitExceededException
          schema:
            $ref: '#/definitions/TotalSizeLimitExceededException'
        '485':
          description: ItemSizeLimitExceededException
          schema:
            $ref: '#/definitions/ItemSizeLimitExceededException'
        '486':
          description: ItemContentMismatchException
          schema:
            $ref: '#/definitions/ItemContentMismatchException'
        '487':
          description: CustomSchemaCountLimitExceededException
          schema:
            $ref: '#/definitions/CustomSchemaCountLimitExceededException'
        '488':
          description: UnsupportedInventorySchemaVersionException
          schema:
            $ref: '#/definitions/UnsupportedInventorySchemaVersionException'
        '489':
          description: UnsupportedInventoryItemContextException
          schema:
            $ref: '#/definitions/UnsupportedInventoryItemContextException'
        '490':
          description: InvalidInventoryItemContextException
          schema:
            $ref: '#/definitions/InvalidInventoryItemContextException'
        '491':
          description: SubTypeCountLimitExceededException
          schema:
            $ref: '#/definitions/SubTypeCountLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutInventoryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutParameter':
    post:
      operationId: PutParameter
      description: Add a parameter to the system.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutParameterResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidKeyId
          schema:
            $ref: '#/definitions/InvalidKeyId'
        '482':
          description: ParameterLimitExceeded
          schema:
            $ref: '#/definitions/ParameterLimitExceeded'
        '483':
          description: TooManyUpdates
          schema:
            $ref: '#/definitions/TooManyUpdates'
        '484':
          description: ParameterAlreadyExists
          schema:
            $ref: '#/definitions/ParameterAlreadyExists'
        '485':
          description: HierarchyLevelLimitExceededException
          schema:
            $ref: '#/definitions/HierarchyLevelLimitExceededException'
        '486':
          description: HierarchyTypeMismatchException
          schema:
            $ref: '#/definitions/HierarchyTypeMismatchException'
        '487':
          description: InvalidAllowedPatternException
          schema:
            $ref: '#/definitions/InvalidAllowedPatternException'
        '488':
          description: ParameterMaxVersionLimitExceeded
          schema:
            $ref: '#/definitions/ParameterMaxVersionLimitExceeded'
        '489':
          description: ParameterPatternMismatchException
          schema:
            $ref: '#/definitions/ParameterPatternMismatchException'
        '490':
          description: UnsupportedParameterType
          schema:
            $ref: '#/definitions/UnsupportedParameterType'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutParameterRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RegisterDefaultPatchBaseline':
    post:
      operationId: RegisterDefaultPatchBaseline
      description: Defines the default patch baseline.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterDefaultPatchBaselineResult'
        '480':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '481':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterDefaultPatchBaselineRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RegisterPatchBaselineForPatchGroup':
    post:
      operationId: RegisterPatchBaselineForPatchGroup
      description: Registers a patch baseline for a patch group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterPatchBaselineForPatchGroupResult'
        '480':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '481':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '482':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '483':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '484':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterPatchBaselineForPatchGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RegisterTargetWithMaintenanceWindow':
    post:
      operationId: RegisterTargetWithMaintenanceWindow
      description: Registers a target with a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterTargetWithMaintenanceWindowResult'
        '480':
          description: IdempotentParameterMismatch
          schema:
            $ref: '#/definitions/IdempotentParameterMismatch'
        '481':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '482':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '483':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterTargetWithMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RegisterTaskWithMaintenanceWindow':
    post:
      operationId: RegisterTaskWithMaintenanceWindow
      description: Adds a new task to a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterTaskWithMaintenanceWindowResult'
        '480':
          description: IdempotentParameterMismatch
          schema:
            $ref: '#/definitions/IdempotentParameterMismatch'
        '481':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '482':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '483':
          description: FeatureNotAvailableException
          schema:
            $ref: '#/definitions/FeatureNotAvailableException'
        '484':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterTaskWithMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RemoveTagsFromResource':
    post:
      operationId: RemoveTagsFromResource
      description: Removes all tags from the specified resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveTagsFromResourceResult'
        '480':
          description: InvalidResourceType
          schema:
            $ref: '#/definitions/InvalidResourceType'
        '481':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: TooManyUpdates
          schema:
            $ref: '#/definitions/TooManyUpdates'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemoveTagsFromResourceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ResumeSession':
    post:
      operationId: ResumeSession
      description: '<p>Reconnects a session to an instance after it has been disconnected. Connections can be resumed for disconnected sessions, but not terminated sessions.</p> <note> <p>This command is primarily for use by client machines to automatically reconnect during intermittent network issues. It is not intended for any other use.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResumeSessionResponse'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ResumeSessionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SendAutomationSignal':
    post:
      operationId: SendAutomationSignal
      description: 'Sends a signal to an Automation execution to change the current behavior or status of the execution. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SendAutomationSignalResult'
        '480':
          description: AutomationExecutionNotFoundException
          schema:
            $ref: '#/definitions/AutomationExecutionNotFoundException'
        '481':
          description: AutomationStepNotFoundException
          schema:
            $ref: '#/definitions/AutomationStepNotFoundException'
        '482':
          description: InvalidAutomationSignalException
          schema:
            $ref: '#/definitions/InvalidAutomationSignalException'
        '483':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendAutomationSignalRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SendCommand':
    post:
      operationId: SendCommand
      description: Executes commands on one or more managed instances.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SendCommandResult'
        '480':
          description: DuplicateInstanceId
          schema:
            $ref: '#/definitions/DuplicateInstanceId'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '483':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '484':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
        '485':
          description: InvalidOutputFolder
          schema:
            $ref: '#/definitions/InvalidOutputFolder'
        '486':
          description: InvalidParameters
          schema:
            $ref: '#/definitions/InvalidParameters'
        '487':
          description: UnsupportedPlatformType
          schema:
            $ref: '#/definitions/UnsupportedPlatformType'
        '488':
          description: MaxDocumentSizeExceeded
          schema:
            $ref: '#/definitions/MaxDocumentSizeExceeded'
        '489':
          description: InvalidRole
          schema:
            $ref: '#/definitions/InvalidRole'
        '490':
          description: InvalidNotificationConfig
          schema:
            $ref: '#/definitions/InvalidNotificationConfig'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendCommandRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StartAssociationsOnce':
    post:
      operationId: StartAssociationsOnce
      description: Use this API action to execute an association immediately and only one time. This action can be helpful when troubleshooting associations.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartAssociationsOnceResult'
        '480':
          description: InvalidAssociation
          schema:
            $ref: '#/definitions/InvalidAssociation'
        '481':
          description: AssociationDoesNotExist
          schema:
            $ref: '#/definitions/AssociationDoesNotExist'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartAssociationsOnceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StartAutomationExecution':
    post:
      operationId: StartAutomationExecution
      description: Initiates execution of an Automation document.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartAutomationExecutionResult'
        '480':
          description: AutomationDefinitionNotFoundException
          schema:
            $ref: '#/definitions/AutomationDefinitionNotFoundException'
        '481':
          description: InvalidAutomationExecutionParametersException
          schema:
            $ref: '#/definitions/InvalidAutomationExecutionParametersException'
        '482':
          description: AutomationExecutionLimitExceededException
          schema:
            $ref: '#/definitions/AutomationExecutionLimitExceededException'
        '483':
          description: AutomationDefinitionVersionNotFoundException
          schema:
            $ref: '#/definitions/AutomationDefinitionVersionNotFoundException'
        '484':
          description: IdempotentParameterMismatch
          schema:
            $ref: '#/definitions/IdempotentParameterMismatch'
        '485':
          description: InvalidTarget
          schema:
            $ref: '#/definitions/InvalidTarget'
        '486':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartAutomationExecutionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StartSession':
    post:
      operationId: StartSession
      description: '<p>Initiates a connection to a target (for example, an instance) for a Session Manager session. Returns a URL and token that can be used to open a WebSocket connection for sending input and receiving outputs.</p> <note> <p>AWS CLI usage: <code>start-session</code> is an interactive command that requires the Session Manager plugin to be installed on the client machine making the call. For information, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html"> Install the Session Manager Plugin for the AWS CLI</a> in the <i>AWS Systems Manager User Guide</i>.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartSessionResponse'
        '480':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '481':
          description: TargetNotConnected
          schema:
            $ref: '#/definitions/TargetNotConnected'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartSessionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StopAutomationExecution':
    post:
      operationId: StopAutomationExecution
      description: Stop an Automation that is currently executing.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopAutomationExecutionResult'
        '480':
          description: AutomationExecutionNotFoundException
          schema:
            $ref: '#/definitions/AutomationExecutionNotFoundException'
        '481':
          description: InvalidAutomationStatusUpdateException
          schema:
            $ref: '#/definitions/InvalidAutomationStatusUpdateException'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StopAutomationExecutionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#TerminateSession':
    post:
      operationId: TerminateSession
      description: Permanently ends a session and closes the data connection between the Session Manager client and SSM Agent on the instance. A terminated session cannot be resumed.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TerminateSessionResponse'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TerminateSessionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateAssociation':
    post:
      operationId: UpdateAssociation
      description: 'Updates an association. You can update the association name and version, the document version, schedule, parameters, and Amazon S3 output.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateAssociationResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidSchedule
          schema:
            $ref: '#/definitions/InvalidSchedule'
        '482':
          description: InvalidParameters
          schema:
            $ref: '#/definitions/InvalidParameters'
        '483':
          description: InvalidOutputLocation
          schema:
            $ref: '#/definitions/InvalidOutputLocation'
        '484':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
        '485':
          description: AssociationDoesNotExist
          schema:
            $ref: '#/definitions/AssociationDoesNotExist'
        '486':
          description: InvalidUpdate
          schema:
            $ref: '#/definitions/InvalidUpdate'
        '487':
          description: TooManyUpdates
          schema:
            $ref: '#/definitions/TooManyUpdates'
        '488':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '489':
          description: InvalidTarget
          schema:
            $ref: '#/definitions/InvalidTarget'
        '490':
          description: InvalidAssociationVersion
          schema:
            $ref: '#/definitions/InvalidAssociationVersion'
        '491':
          description: AssociationVersionLimitExceeded
          schema:
            $ref: '#/definitions/AssociationVersionLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAssociationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateAssociationStatus':
    post:
      operationId: UpdateAssociationStatus
      description: Updates the status of the Systems Manager document associated with the specified instance.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateAssociationStatusResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '482':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '483':
          description: AssociationDoesNotExist
          schema:
            $ref: '#/definitions/AssociationDoesNotExist'
        '484':
          description: StatusUnchanged
          schema:
            $ref: '#/definitions/StatusUnchanged'
        '485':
          description: TooManyUpdates
          schema:
            $ref: '#/definitions/TooManyUpdates'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAssociationStatusRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateDocument':
    post:
      operationId: UpdateDocument
      description: The document you want to update.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDocumentResult'
        '480':
          description: MaxDocumentSizeExceeded
          schema:
            $ref: '#/definitions/MaxDocumentSizeExceeded'
        '481':
          description: DocumentVersionLimitExceeded
          schema:
            $ref: '#/definitions/DocumentVersionLimitExceeded'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: DuplicateDocumentContent
          schema:
            $ref: '#/definitions/DuplicateDocumentContent'
        '484':
          description: DuplicateDocumentVersionName
          schema:
            $ref: '#/definitions/DuplicateDocumentVersionName'
        '485':
          description: InvalidDocumentContent
          schema:
            $ref: '#/definitions/InvalidDocumentContent'
        '486':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
        '487':
          description: InvalidDocumentSchemaVersion
          schema:
            $ref: '#/definitions/InvalidDocumentSchemaVersion'
        '488':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '489':
          description: InvalidDocumentOperation
          schema:
            $ref: '#/definitions/InvalidDocumentOperation'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDocumentRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateDocumentDefaultVersion':
    post:
      operationId: UpdateDocumentDefaultVersion
      description: 'Set the default version of a document. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDocumentDefaultVersionResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '482':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
        '483':
          description: InvalidDocumentSchemaVersion
          schema:
            $ref: '#/definitions/InvalidDocumentSchemaVersion'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDocumentDefaultVersionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateMaintenanceWindow':
    post:
      operationId: UpdateMaintenanceWindow
      description: Updates an existing Maintenance Window. Only specified parameters are modified.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateMaintenanceWindowResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateMaintenanceWindowTarget':
    post:
      operationId: UpdateMaintenanceWindowTarget
      description: '<p>Modifies the target of an existing Maintenance Window. You can''t change the target type, but you can change the following:</p> <p>The target from being an ID target to a Tag target, or a Tag target to an ID target.</p> <p>IDs for an ID target.</p> <p>Tags for a Tag target.</p> <p>Owner.</p> <p>Name.</p> <p>Description.</p> <p>If a parameter is null, then the corresponding field is not modified.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateMaintenanceWindowTargetResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateMaintenanceWindowTargetRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateMaintenanceWindowTask':
    post:
      operationId: UpdateMaintenanceWindowTask
      description: '<p>Modifies a task assigned to a Maintenance Window. You can''t change the task type, but you can change the following values:</p> <ul> <li> <p>TaskARN. For example, you can change a RUN_COMMAND task from AWS-RunPowerShellScript to AWS-RunShellScript.</p> </li> <li> <p>ServiceRoleArn</p> </li> <li> <p>TaskInvocationParameters</p> </li> <li> <p>Priority</p> </li> <li> <p>MaxConcurrency</p> </li> <li> <p>MaxErrors</p> </li> </ul> <p>If a parameter is null, then the corresponding field is not modified. Also, if you set Replace to true, then all fields required by the <a>RegisterTaskWithMaintenanceWindow</a> action are required for this request. Optional fields that aren''t specified are set to null.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateMaintenanceWindowTaskResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateMaintenanceWindowTaskRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateManagedInstanceRole':
    post:
      operationId: UpdateManagedInstanceRole
      description: Assigns or changes an Amazon Identity and Access Management (IAM) role to the managed instance.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateManagedInstanceRoleResult'
        '480':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateManagedInstanceRoleRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdatePatchBaseline':
    post:
      operationId: UpdatePatchBaseline
      description: '<p>Modifies an existing patch baseline. Fields not specified in the request are left unchanged.</p> <note> <p>For information about valid key and value pairs in <code>PatchFilters</code> for each supported operating system type, see <a href="http://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html">PatchFilter</a>.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdatePatchBaselineResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePatchBaselineRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AddTagsToResourceResult:
    type: object
    properties: {}
  AddTagsToResourceRequest:
    type: object
    required:
      - ResourceType
      - ResourceId
      - Tags
    properties:
      ResourceType:
        $ref: '#/definitions/[object Object]'
        description: '<p>Specifies the type of resource you are tagging.</p> <note> <p>The ManagedInstance type for this API action is for on-premises managed instances. You must specify the the name of the managed instance in the following format: mi-ID_number. For example, mi-1a2b3c4d5e6f.</p> </note>'
      ResourceId:
        $ref: '#/definitions/[object Object]'
        description: '<p>The resource ID you want to tag.</p> <p>Use the ID of the resource. Here are some examples:</p> <p>ManagedInstance: mi-012345abcde</p> <p>MaintenanceWindow: mw-012345abcde</p> <p>PatchBaseline: pb-012345abcde</p> <p>For the Document and Parameter values, use the name of the resource.</p> <note> <p>The ManagedInstance type for this API action is only for on-premises managed instances. You must specify the the name of the managed instance in the following format: mi-ID_number. For example, mi-1a2b3c4d5e6f.</p> </note>'
      Tags:
        $ref: '#/definitions/[object Object]'
        description: '<p> One or more tags. The value parameter is required, but if you don''t want the tag to have a value, specify the parameter with no value, and we set the value to an empty string. </p> <important> <p>Do not enter personally identifiable information in this field.</p> </important>'
  InvalidResourceType: {}
  InvalidResourceId: {}
  InternalServerError: {}
  TooManyTagsError: {}
  TooManyUpdates: {}
  CancelCommandResult:
    type: object
    properties: {}
    description: Whether or not the command was successfully canceled. There is no guarantee that a request can be canceled.
  CancelCommandRequest:
    type: object
    required:
      - CommandId
    properties:
      CommandId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the command you want to cancel.
      InstanceIds:
        $ref: '#/definitions/[object Object]'
        description: '(Optional) A list of instance IDs on which you want to cancel the command. If not provided, the command is canceled on every instance on which it was requested.'
    description: <p/>
  InvalidCommandId: {}
  InvalidInstanceId: {}
  DuplicateInstanceId: {}
  CancelMaintenanceWindowExecutionResult:
    type: object
    properties:
      WindowExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window execution that has been stopped.
  CancelMaintenanceWindowExecutionRequest:
    type: object
    required:
      - WindowExecutionId
    properties:
      WindowExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window execution to stop.
  DoesNotExistException: {}
  CreateActivationResult:
    type: object
    properties:
      ActivationId:
        $ref: '#/definitions/[object Object]'
        description: The ID number generated by the system when it processed the activation. The activation ID functions like a user name.
      ActivationCode:
        $ref: '#/definitions/[object Object]'
        description: 'The code the system generates when it processes the activation. The activation code functions like a password to validate the activation ID. '
  CreateActivationRequest:
    type: object
    required:
      - IamRole
    properties:
      Description:
        $ref: '#/definitions/[object Object]'
        description: <p>A user-defined description of the resource that you want to register with Amazon EC2. </p> <important> <p>Do not enter personally identifiable information in this field.</p> </important>
      DefaultInstanceName:
        $ref: '#/definitions/[object Object]'
        description: '<p>The name of the registered, managed instance as it will appear in the Amazon EC2 console or when you use the AWS command line tools to list EC2 resources.</p> <important> <p>Do not enter personally identifiable information in this field.</p> </important>'
      IamRole:
        $ref: '#/definitions/[object Object]'
        description: 'The Amazon Identity and Access Management (IAM) role that you want to assign to the managed instance. '
      RegistrationLimit:
        $ref: '#/definitions/[object Object]'
        description: Specify the maximum number of managed instances you want to register. The default value is 1 instance.
      ExpirationDate:
        $ref: '#/definitions/[object Object]'
        description: The date by which this activation request should expire. The default value is 24 hours.
  CreateAssociationResult:
    type: object
    properties:
      AssociationDescription:
        $ref: '#/definitions/[object Object]'
        description: Information about the association.
  CreateAssociationRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the Systems Manager document.
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: The document version you want to associate with the target(s). Can be a specific version or the default version.
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: The instance ID.
      Parameters:
        $ref: '#/definitions/[object Object]'
        description: 'The parameters for the documents runtime configuration. '
      Targets:
        $ref: '#/definitions/[object Object]'
        description: The targets (either instances or tags) for the association.
      ScheduleExpression:
        $ref: '#/definitions/[object Object]'
        description: A cron expression when the association will be applied to the target(s).
      OutputLocation:
        $ref: '#/definitions/[object Object]'
        description: An Amazon S3 bucket where you want to store the output details of the request.
      AssociationName:
        $ref: '#/definitions/[object Object]'
        description: Specify a descriptive name for the association.
      MaxErrors:
        $ref: '#/definitions/[object Object]'
        description: '<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won''t be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>'
      MaxConcurrency:
        $ref: '#/definitions/[object Object]'
        description: '<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>'
      ComplianceSeverity:
        $ref: '#/definitions/[object Object]'
        description: The severity level to assign to the association.
  AssociationAlreadyExists: {}
  AssociationLimitExceeded: {}
  InvalidDocument: {}
  InvalidDocumentVersion: {}
  UnsupportedPlatformType: {}
  InvalidOutputLocation: {}
  InvalidParameters: {}
  InvalidTarget: {}
  InvalidSchedule: {}
  CreateAssociationBatchResult:
    type: object
    properties:
      Successful:
        $ref: '#/definitions/[object Object]'
        description: Information about the associations that succeeded.
      Failed:
        $ref: '#/definitions/[object Object]'
        description: Information about the associations that failed.
  CreateAssociationBatchRequest:
    type: object
    required:
      - Entries
    properties:
      Entries:
        $ref: '#/definitions/[object Object]'
        description: One or more associations.
  CreateDocumentResult:
    type: object
    properties:
      DocumentDescription:
        $ref: '#/definitions/[object Object]'
        description: Information about the Systems Manager document.
  CreateDocumentRequest:
    type: object
    required:
      - Content
      - Name
    properties:
      Content:
        $ref: '#/definitions/[object Object]'
        description: A valid JSON or YAML string.
      Attachments:
        $ref: '#/definitions/[object Object]'
        description: A list of key and value pairs that describe attachments to a version of a document.
      Name:
        $ref: '#/definitions/[object Object]'
        description: '<p>A name for the Systems Manager document.</p> <important> <p>Do not use the following to begin the names of documents you create. They are reserved by AWS for use as document prefixes:</p> <ul> <li> <p> <code>aws</code> </p> </li> <li> <p> <code>amazon</code> </p> </li> <li> <p> <code>amzn</code> </p> </li> </ul> </important>'
      VersionName:
        $ref: '#/definitions/[object Object]'
        description: 'An optional field specifying the version of the artifact you are creating with the document. For example, "Release 12, Update 6". This value is unique across all versions of a document, and cannot be changed.'
      DocumentType:
        $ref: '#/definitions/[object Object]'
        description: 'The type of document to create. Valid document types include: <code>Command</code>, <code>Policy</code>, <code>Automation</code>, <code>Session</code>, and <code>Package</code>.'
      DocumentFormat:
        $ref: '#/definitions/[object Object]'
        description: Specify the document format for the request. The document format can be either JSON or YAML. JSON is the default format.
      TargetType:
        $ref: '#/definitions/[object Object]'
        description: 'Specify a target type to define the kinds of resources the document can run on. For example, to run a document on EC2 instances, specify the following value: /AWS::EC2::Instance. If you specify a value of ''/'' the document can run on all types of resources. If you don''t specify a value, the document can''t run on any resources. For a list of valid resource types, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html">AWS Resource Types Reference</a> in the <i>AWS CloudFormation User Guide</i>. '
  DocumentAlreadyExists: {}
  MaxDocumentSizeExceeded: {}
  InvalidDocumentContent: {}
  DocumentLimitExceeded: {}
  InvalidDocumentSchemaVersion: {}
  CreateMaintenanceWindowResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the created Maintenance Window.
  CreateMaintenanceWindowRequest:
    type: object
    required:
      - Name
      - Schedule
      - Duration
      - Cutoff
      - AllowUnassociatedTargets
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the Maintenance Window.
      Description:
        $ref: '#/definitions/[object Object]'
        description: 'An optional description for the Maintenance Window. We recommend specifying a description to help you organize your Maintenance Windows. '
      StartDate:
        $ref: '#/definitions/[object Object]'
        description: 'The date and time, in ISO-8601 Extended format, for when you want the Maintenance Window to become active. StartDate allows you to delay activation of the Maintenance Window until the specified future date.'
      EndDate:
        $ref: '#/definitions/[object Object]'
        description: 'The date and time, in ISO-8601 Extended format, for when you want the Maintenance Window to become inactive. EndDate allows you to set a date and time in the future when the Maintenance Window will no longer run.'
      Schedule:
        $ref: '#/definitions/[object Object]'
        description: The schedule of the Maintenance Window in the form of a cron or rate expression.
      ScheduleTimezone:
        $ref: '#/definitions/[object Object]'
        description: 'The time zone that the scheduled Maintenance Window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: "America/Los_Angeles", "etc/UTC", or "Asia/Seoul". For more information, see the <a href="https://www.iana.org/time-zones">Time Zone Database</a> on the IANA website.'
      Duration:
        $ref: '#/definitions/[object Object]'
        description: The duration of the Maintenance Window in hours.
      Cutoff:
        $ref: '#/definitions/[object Object]'
        description: The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.
      AllowUnassociatedTargets:
        $ref: '#/definitions/[object Object]'
        description: '<p>Enables a Maintenance Window task to execute on managed instances, even if you have not registered those instances as targets. If enabled, then you must specify the unregistered instances (by instance ID) when you register a task with the Maintenance Window </p> <p>If you don''t enable this option, then you must specify previously-registered targets when you register a task with the Maintenance Window. </p>'
      ClientToken:
        $ref: '#/definitions/[object Object]'
        description: User-provided idempotency token.
  IdempotentParameterMismatch: {}
  ResourceLimitExceededException: {}
  CreatePatchBaselineResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the created patch baseline.
  CreatePatchBaselineRequest:
    type: object
    required:
      - Name
    properties:
      OperatingSystem:
        $ref: '#/definitions/[object Object]'
        description: Defines the operating system the patch baseline applies to. The Default value is WINDOWS.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the patch baseline.
      GlobalFilters:
        $ref: '#/definitions/[object Object]'
        description: A set of global filters used to exclude patches from the baseline.
      ApprovalRules:
        $ref: '#/definitions/[object Object]'
        description: A set of rules used to include patches in the baseline.
      ApprovedPatches:
        $ref: '#/definitions/[object Object]'
        description: '<p>A list of explicitly approved patches for the baseline.</p> <p>For information about accepted formats for lists of approved patches and rejected patches, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html">Package Name Formats for Approved and Rejected Patch Lists</a> in the <i>AWS Systems Manager User Guide</i>.</p>'
      ApprovedPatchesComplianceLevel:
        $ref: '#/definitions/[object Object]'
        description: 'Defines the compliance level for approved patches. This means that if an approved patch is reported as missing, this is the severity of the compliance violation. The default value is UNSPECIFIED.'
      ApprovedPatchesEnableNonSecurity:
        $ref: '#/definitions/[object Object]'
        description: Indicates whether the list of approved patches includes non-security updates that should be applied to the instances. The default value is 'false'. Applies to Linux instances only.
      RejectedPatches:
        $ref: '#/definitions/[object Object]'
        description: '<p>A list of explicitly rejected patches for the baseline.</p> <p>For information about accepted formats for lists of approved patches and rejected patches, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html">Package Name Formats for Approved and Rejected Patch Lists</a> in the <i>AWS Systems Manager User Guide</i>.</p>'
      RejectedPatchesAction:
        $ref: '#/definitions/[object Object]'
        description: '<p>The action for Patch Manager to take on patches included in the RejectedPackages list.</p> <ul> <li> <p> <b>ALLOW_AS_DEPENDENCY</b>: A package in the Rejected patches list is installed only if it is a dependency of another package. It is considered compliant with the patch baseline, and its status is reported as <i>InstalledOther</i>. This is the default action if no option is specified.</p> </li> <li> <p> <b>BLOCK</b>: Packages in the RejectedPatches list, and packages that include them as dependencies, are not installed under any circumstances. If a package was installed before it was added to the Rejected patches list, it is considered non-compliant with the patch baseline, and its status is reported as <i>InstalledRejected</i>.</p> </li> </ul>'
      Description:
        $ref: '#/definitions/[object Object]'
        description: A description of the patch baseline.
      Sources:
        $ref: '#/definitions/[object Object]'
        description: 'Information about the patches to use to update the instances, including target operating systems and source repositories. Applies to Linux instances only.'
      ClientToken:
        $ref: '#/definitions/[object Object]'
        description: User-provided idempotency token.
  CreateResourceDataSyncResult:
    type: object
    properties: {}
  CreateResourceDataSyncRequest:
    type: object
    required:
      - SyncName
      - S3Destination
    properties:
      SyncName:
        $ref: '#/definitions/[object Object]'
        description: A name for the configuration.
      S3Destination:
        $ref: '#/definitions/[object Object]'
        description: Amazon S3 configuration details for the sync.
  ResourceDataSyncCountExceededException: {}
  ResourceDataSyncAlreadyExistsException: {}
  ResourceDataSyncInvalidConfigurationException: {}
  DeleteActivationResult:
    type: object
    properties: {}
  DeleteActivationRequest:
    type: object
    required:
      - ActivationId
    properties:
      ActivationId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the activation that you want to delete.
  InvalidActivationId: {}
  InvalidActivation: {}
  DeleteAssociationResult:
    type: object
    properties: {}
  DeleteAssociationRequest:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the Systems Manager document.
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the instance.
      AssociationId:
        $ref: '#/definitions/[object Object]'
        description: The association ID that you want to delete.
  AssociationDoesNotExist: {}
  DeleteDocumentResult:
    type: object
    properties: {}
  DeleteDocumentRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the document.
  InvalidDocumentOperation: {}
  AssociatedInstances: {}
  DeleteInventoryResult:
    type: object
    properties:
      DeletionId:
        $ref: '#/definitions/[object Object]'
        description: 'Every <code>DeleteInventory</code> action is assigned a unique ID. This option returns a unique ID. You can use this ID to query the status of a delete operation. This option is useful for ensuring that a delete operation has completed before you begin other actions. '
      TypeName:
        $ref: '#/definitions/[object Object]'
        description: The name of the inventory data type specified in the request.
      DeletionSummary:
        $ref: '#/definitions/[object Object]'
        description: 'A summary of the delete operation. For more information about this summary, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-delete.html#sysman-inventory-delete-summary">Understanding the Delete Inventory Summary</a> in the <i>AWS Systems Manager User Guide</i>.'
  DeleteInventoryRequest:
    type: object
    required:
      - TypeName
    properties:
      TypeName:
        $ref: '#/definitions/[object Object]'
        description: 'The name of the custom inventory type for which you want to delete either all previously collected data, or the inventory type itself. '
      SchemaDeleteOption:
        $ref: '#/definitions/[object Object]'
        description: '<p>Use the <code>SchemaDeleteOption</code> to delete a custom inventory type (schema). If you don''t choose this option, the system only deletes existing inventory data associated with the custom inventory type. Choose one of the following options:</p> <p>DisableSchema: If you choose this option, the system ignores all inventory data for the specified version, and any earlier versions. To enable this schema again, you must call the <code>PutInventory</code> action for a version greater than the disbled version.</p> <p>DeleteSchema: This option deletes the specified custom type from the Inventory service. You can recreate the schema later, if you want.</p>'
      DryRun:
        $ref: '#/definitions/[object Object]'
        description: 'Use this option to view a summary of the deletion request without deleting any data or the data type. This option is useful when you only want to understand what will be deleted. Once you validate that the data to be deleted is what you intend to delete, you can run the same command without specifying the <code>DryRun</code> option.'
      ClientToken:
        $ref: '#/definitions/[object Object]'
        description: User-provided idempotency token.
  InvalidTypeNameException: {}
  InvalidOptionException: {}
  InvalidDeleteInventoryParametersException: {}
  InvalidInventoryRequestException: {}
  DeleteMaintenanceWindowResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the deleted Maintenance Window.
  DeleteMaintenanceWindowRequest:
    type: object
    required:
      - WindowId
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window to delete.
  DeleteParameterResult:
    type: object
    properties: {}
  DeleteParameterRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the parameter to delete.
  ParameterNotFound: {}
  DeleteParametersResult:
    type: object
    properties:
      DeletedParameters:
        $ref: '#/definitions/[object Object]'
        description: The names of the deleted parameters.
      InvalidParameters:
        $ref: '#/definitions/[object Object]'
        description: The names of parameters that weren't deleted because the parameters are not valid.
  DeleteParametersRequest:
    type: object
    required:
      - Names
    properties:
      Names:
        $ref: '#/definitions/[object Object]'
        description: The names of the parameters to delete.
  DeletePatchBaselineResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the deleted patch baseline.
  DeletePatchBaselineRequest:
    type: object
    required:
      - BaselineId
    properties:
      BaselineId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the patch baseline to delete.
  ResourceInUseException: {}
  DeleteResourceDataSyncResult:
    type: object
    properties: {}
  DeleteResourceDataSyncRequest:
    type: object
    required:
      - SyncName
    properties:
      SyncName:
        $ref: '#/definitions/[object Object]'
        description: The name of the configuration to delete.
  ResourceDataSyncNotFoundException: {}
  DeregisterManagedInstanceResult:
    type: object
    properties: {}
  DeregisterManagedInstanceRequest:
    type: object
    required:
      - InstanceId
    properties:
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: 'The ID assigned to the managed instance when you registered it using the activation process. '
  DeregisterPatchBaselineForPatchGroupResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the patch baseline the patch group was deregistered from.
      PatchGroup:
        $ref: '#/definitions/[object Object]'
        description: The name of the patch group deregistered from the patch baseline.
  DeregisterPatchBaselineForPatchGroupRequest:
    type: object
    required:
      - BaselineId
      - PatchGroup
    properties:
      BaselineId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the patch baseline to deregister the patch group from.
      PatchGroup:
        $ref: '#/definitions/[object Object]'
        description: The name of the patch group that should be deregistered from the patch baseline.
  DeregisterTargetFromMaintenanceWindowResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window the target was removed from.
      WindowTargetId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the removed target definition.
  DeregisterTargetFromMaintenanceWindowRequest:
    type: object
    required:
      - WindowId
      - WindowTargetId
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window the target should be removed from.
      WindowTargetId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the target definition to remove.
      Safe:
        $ref: '#/definitions/[object Object]'
        description: 'The system checks if the target is being referenced by a task. If the target is being referenced, the system returns an error and does not deregister the target from the Maintenance Window.'
  TargetInUseException: {}
  DeregisterTaskFromMaintenanceWindowResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window the task was removed from.
      WindowTaskId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the task removed from the Maintenance Window.
  DeregisterTaskFromMaintenanceWindowRequest:
    type: object
    required:
      - WindowId
      - WindowTaskId
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window the task should be removed from.
      WindowTaskId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the task to remove from the Maintenance Window.
  DescribeActivationsResult:
    type: object
    properties:
      ActivationList:
        $ref: '#/definitions/[object Object]'
        description: A list of activations for your AWS account.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token for the next set of items to return. Use this token to get the next set of results. '
  DescribeActivationsRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/[object Object]'
        description: A filter to view information about your activations.
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'A token to start the list. Use this token to get the next set of results. '
  InvalidFilter: {}
  InvalidNextToken: {}
  DescribeAssociationResult:
    type: object
    properties:
      AssociationDescription:
        $ref: '#/definitions/[object Object]'
        description: Information about the association.
  DescribeAssociationRequest:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the Systems Manager document.
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: The instance ID.
      AssociationId:
        $ref: '#/definitions/[object Object]'
        description: The association ID for which you want information.
      AssociationVersion:
        $ref: '#/definitions/[object Object]'
        description: 'Specify the association version to retrieve. To view the latest version, either specify <code>$LATEST</code> for this parameter, or omit this parameter. To view a list of all associations for an instance, use ListInstanceAssociations. To get a list of versions for a specific association, use ListAssociationVersions. '
  InvalidAssociationVersion: {}
  DescribeAssociationExecutionTargetsResult:
    type: object
    properties:
      AssociationExecutionTargets:
        $ref: '#/definitions/[object Object]'
        description: Information about the execution.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. Use this token to get the next set of results.
  DescribeAssociationExecutionTargetsRequest:
    type: object
    required:
      - AssociationId
      - ExecutionId
    properties:
      AssociationId:
        $ref: '#/definitions/[object Object]'
        description: The association ID that includes the execution for which you want to view details.
      ExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The execution ID for which you want to view details.
      Filters:
        $ref: '#/definitions/[object Object]'
        description: <p>Filters for the request. You can specify the following filters and values.</p> <p>Status (EQUAL)</p> <p>ResourceId (EQUAL)</p> <p>ResourceType (EQUAL)</p>
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'A token to start the list. Use this token to get the next set of results. '
  AssociationExecutionDoesNotExist: {}
  DescribeAssociationExecutionsResult:
    type: object
    properties:
      AssociationExecutions:
        $ref: '#/definitions/[object Object]'
        description: A list of the executions for the specified association ID.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. Use this token to get the next set of results.
  DescribeAssociationExecutionsRequest:
    type: object
    required:
      - AssociationId
    properties:
      AssociationId:
        $ref: '#/definitions/[object Object]'
        description: The association ID for which you want to view execution history details.
      Filters:
        $ref: '#/definitions/[object Object]'
        description: '<p>Filters for the request. You can specify the following filters and values.</p> <p>ExecutionId (EQUAL)</p> <p>Status (EQUAL)</p> <p>CreatedTime (EQUAL, GREATER_THAN, LESS_THAN)</p>'
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'A token to start the list. Use this token to get the next set of results. '
  DescribeAutomationExecutionsResult:
    type: object
    properties:
      AutomationExecutionMetadataList:
        $ref: '#/definitions/[object Object]'
        description: 'The list of details about each automation execution which has occurred which matches the filter specification, if any.'
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeAutomationExecutionsRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/[object Object]'
        description: Filters used to limit the scope of executions that are requested.
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  InvalidFilterKey: {}
  InvalidFilterValue: {}
  DescribeAutomationStepExecutionsResult:
    type: object
    properties:
      StepExecutions:
        $ref: '#/definitions/[object Object]'
        description: A list of details about the current state of all steps that make up an execution.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeAutomationStepExecutionsRequest:
    type: object
    required:
      - AutomationExecutionId
    properties:
      AutomationExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The Automation execution ID for which you want step execution descriptions.
      Filters:
        $ref: '#/definitions/[object Object]'
        description: One or more filters to limit the number of step executions returned by the request.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      ReverseOrder:
        $ref: '#/definitions/[object Object]'
        description: A boolean that indicates whether to list step executions in reverse order by start time. The default value is false.
  AutomationExecutionNotFoundException: {}
  DescribeAvailablePatchesResult:
    type: object
    properties:
      Patches:
        $ref: '#/definitions/[object Object]'
        description: An array of patches. Each entry in the array is a patch structure.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeAvailablePatchesRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/[object Object]'
        description: Filters used to scope down the returned patches.
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of patches to return (per page).
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeDocumentResult:
    type: object
    properties:
      Document:
        $ref: '#/definitions/[object Object]'
        description: Information about the Systems Manager document.
  DescribeDocumentRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the Systems Manager document.
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: The document version for which you want information. Can be a specific version or the default version.
      VersionName:
        $ref: '#/definitions/[object Object]'
        description: 'An optional field specifying the version of the artifact associated with the document. For example, "Release 12, Update 6". This value is unique across all versions of a document, and cannot be changed.'
  DescribeDocumentPermissionResponse:
    type: object
    properties:
      AccountIds:
        $ref: '#/definitions/[object Object]'
        description: The account IDs that have permission to use this document. The ID can be either an AWS account or <i>All</i>.
  DescribeDocumentPermissionRequest:
    type: object
    required:
      - Name
      - PermissionType
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the document for which you are the owner.
      PermissionType:
        $ref: '#/definitions/[object Object]'
        description: The permission type for the document. The permission type can be <i>Share</i>.
  InvalidPermissionType: {}
  DescribeEffectiveInstanceAssociationsResult:
    type: object
    properties:
      Associations:
        $ref: '#/definitions/[object Object]'
        description: The associations for the requested instance.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeEffectiveInstanceAssociationsRequest:
    type: object
    required:
      - InstanceId
    properties:
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: The instance ID for which you want to view all associations.
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeEffectivePatchesForPatchBaselineResult:
    type: object
    properties:
      EffectivePatches:
        $ref: '#/definitions/[object Object]'
        description: An array of patches and patch status.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeEffectivePatchesForPatchBaselineRequest:
    type: object
    required:
      - BaselineId
    properties:
      BaselineId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the patch baseline to retrieve the effective patches for.
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of patches to return (per page).
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  UnsupportedOperatingSystem: {}
  DescribeInstanceAssociationsStatusResult:
    type: object
    properties:
      InstanceAssociationStatusInfos:
        $ref: '#/definitions/[object Object]'
        description: Status information about the association.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeInstanceAssociationsStatusRequest:
    type: object
    required:
      - InstanceId
    properties:
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: The instance IDs for which you want association status information.
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeInstanceInformationResult:
    type: object
    properties:
      InstanceInformationList:
        $ref: '#/definitions/[object Object]'
        description: The instance information list.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty. '
  DescribeInstanceInformationRequest:
    type: object
    properties:
      InstanceInformationFilterList:
        $ref: '#/definitions/[object Object]'
        description: '<p>This is a legacy method. We recommend that you don''t use this method. Instead, use the <a>InstanceInformationFilter</a> action. The <code>InstanceInformationFilter</code> action enables you to return instance information by using tags that are specified as a key-value mapping. </p> <p>If you do use this method, then you can''t use the <code>InstanceInformationFilter</code> action. Using this method and the <code>InstanceInformationFilter</code> action causes an exception error. </p>'
      Filters:
        $ref: '#/definitions/[object Object]'
        description: One or more filters. Use a filter to return a more specific list of instances. You can filter on Amazon EC2 tag. Specify tags by using a key-value mapping.
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: 'The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results. '
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  InvalidInstanceInformationFilterValue: {}
  DescribeInstancePatchStatesResult:
    type: object
    properties:
      InstancePatchStates:
        $ref: '#/definitions/[object Object]'
        description: The high-level patch state for the requested instances.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeInstancePatchStatesRequest:
    type: object
    required:
      - InstanceIds
    properties:
      InstanceIds:
        $ref: '#/definitions/[object Object]'
        description: The ID of the instance whose patch state information should be retrieved.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of instances to return (per page).
  DescribeInstancePatchStatesForPatchGroupResult:
    type: object
    properties:
      InstancePatchStates:
        $ref: '#/definitions/[object Object]'
        description: 'The high-level patch state for the requested instances. '
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeInstancePatchStatesForPatchGroupRequest:
    type: object
    required:
      - PatchGroup
    properties:
      PatchGroup:
        $ref: '#/definitions/[object Object]'
        description: The name of the patch group for which the patch state information should be retrieved.
      Filters:
        $ref: '#/definitions/[object Object]'
        description: '<p>Each entry in the array is a structure containing:</p> <p>Key (string between 1 and 200 characters)</p> <p> Values (array containing a single string)</p> <p> Type (string "Equal", "NotEqual", "LessThan", "GreaterThan")</p>'
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of patches to return (per page).
  DescribeInstancePatchesResult:
    type: object
    properties:
      Patches:
        $ref: '#/definitions/[object Object]'
        description: '<p>Each entry in the array is a structure containing:</p> <p>Title (string)</p> <p>KBId (string)</p> <p>Classification (string)</p> <p>Severity (string)</p> <p>State (string, such as "INSTALLED" or "FAILED")</p> <p>InstalledTime (DateTime)</p> <p>InstalledBy (string)</p>'
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeInstancePatchesRequest:
    type: object
    required:
      - InstanceId
    properties:
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the instance whose patch state information should be retrieved.
      Filters:
        $ref: '#/definitions/[object Object]'
        description: '<p>Each entry in the array is a structure containing:</p> <p>Key (string, between 1 and 128 characters)</p> <p>Values (array of strings, each string between 1 and 256 characters)</p>'
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of patches to return (per page).
  DescribeInventoryDeletionsResult:
    type: object
    properties:
      InventoryDeletions:
        $ref: '#/definitions/[object Object]'
        description: A list of status items for deleted inventory.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. Use this token to get the next set of results.
  DescribeInventoryDeletionsRequest:
    type: object
    properties:
      DeletionId:
        $ref: '#/definitions/[object Object]'
        description: Specify the delete inventory ID for which you want information. This ID was returned by the <code>DeleteInventory</code> action.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'A token to start the list. Use this token to get the next set of results. '
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
  InvalidDeletionIdException: {}
  DescribeMaintenanceWindowExecutionTaskInvocationsResult:
    type: object
    properties:
      WindowExecutionTaskInvocationIdentities:
        $ref: '#/definitions/[object Object]'
        description: Information about the task invocation results per invocation.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeMaintenanceWindowExecutionTaskInvocationsRequest:
    type: object
    required:
      - WindowExecutionId
      - TaskId
    properties:
      WindowExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window execution the task is part of.
      TaskId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the specific task in the Maintenance Window task that should be retrieved.
      Filters:
        $ref: '#/definitions/[object Object]'
        description: 'Optional filters used to scope down the returned task invocations. The supported filter key is STATUS with the corresponding values PENDING, IN_PROGRESS, SUCCESS, FAILED, TIMED_OUT, CANCELLING, and CANCELLED.'
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeMaintenanceWindowExecutionTasksResult:
    type: object
    properties:
      WindowExecutionTaskIdentities:
        $ref: '#/definitions/[object Object]'
        description: Information about the task executions.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeMaintenanceWindowExecutionTasksRequest:
    type: object
    required:
      - WindowExecutionId
    properties:
      WindowExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window execution whose task executions should be retrieved.
      Filters:
        $ref: '#/definitions/[object Object]'
        description: 'Optional filters used to scope down the returned tasks. The supported filter key is STATUS with the corresponding values PENDING, IN_PROGRESS, SUCCESS, FAILED, TIMED_OUT, CANCELLING, and CANCELLED. '
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeMaintenanceWindowExecutionsResult:
    type: object
    properties:
      WindowExecutions:
        $ref: '#/definitions/[object Object]'
        description: Information about the Maintenance Windows execution.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeMaintenanceWindowExecutionsRequest:
    type: object
    required:
      - WindowId
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window whose executions should be retrieved.
      Filters:
        $ref: '#/definitions/[object Object]'
        description: '<p>Each entry in the array is a structure containing:</p> <p>Key (string, between 1 and 128 characters)</p> <p>Values (array of strings, each string is between 1 and 256 characters)</p> <p>The supported Keys are ExecutedBefore and ExecutedAfter with the value being a date/time string such as 2016-11-04T05:00:00Z.</p>'
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeMaintenanceWindowScheduleResult:
    type: object
    properties:
      ScheduledWindowExecutions:
        $ref: '#/definitions/[object Object]'
        description: Information about Maintenance Window executions scheduled for the specified time range.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You use this token in the next call.)
  DescribeMaintenanceWindowScheduleRequest:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window to retrieve information about.
      Targets:
        $ref: '#/definitions/[object Object]'
        description: The instance ID or key/value pair to retrieve information about.
      ResourceType:
        $ref: '#/definitions/[object Object]'
        description: 'The type of resource you want to retrieve information about. For example, "INSTANCE".'
      Filters:
        $ref: '#/definitions/[object Object]'
        description: 'Filters used to limit the range of results. For example, you can limit Maintenance Window executions to only those scheduled before or after a certain date and time.'
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeMaintenanceWindowTargetsResult:
    type: object
    properties:
      Targets:
        $ref: '#/definitions/[object Object]'
        description: Information about the targets in the Maintenance Window.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeMaintenanceWindowTargetsRequest:
    type: object
    required:
      - WindowId
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window whose targets should be retrieved.
      Filters:
        $ref: '#/definitions/[object Object]'
        description: 'Optional filters that can be used to narrow down the scope of the returned window targets. The supported filter keys are Type, WindowTargetId and OwnerInformation.'
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeMaintenanceWindowTasksResult:
    type: object
    properties:
      Tasks:
        $ref: '#/definitions/[object Object]'
        description: Information about the tasks in the Maintenance Window.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeMaintenanceWindowTasksRequest:
    type: object
    required:
      - WindowId
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window whose tasks should be retrieved.
      Filters:
        $ref: '#/definitions/[object Object]'
        description: 'Optional filters used to narrow down the scope of the returned tasks. The supported filter keys are WindowTaskId, TaskArn, Priority, and TaskType.'
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeMaintenanceWindowsResult:
    type: object
    properties:
      WindowIdentities:
        $ref: '#/definitions/[object Object]'
        description: Information about the Maintenance Windows.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeMaintenanceWindowsRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/[object Object]'
        description: Optional filters used to narrow down the scope of the returned Maintenance Windows. Supported filter keys are <b>Name</b> and <b>Enabled</b>.
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeMaintenanceWindowsForTargetResult:
    type: object
    properties:
      WindowIdentities:
        $ref: '#/definitions/[object Object]'
        description: Information about the Maintenance Window targets and tasks an instance is associated with.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You use this token in the next call.)
  DescribeMaintenanceWindowsForTargetRequest:
    type: object
    required:
      - Targets
      - ResourceType
    properties:
      Targets:
        $ref: '#/definitions/[object Object]'
        description: The instance ID or key/value pair to retrieve information about.
      ResourceType:
        $ref: '#/definitions/[object Object]'
        description: 'The type of resource you want to retrieve information about. For example, "INSTANCE".'
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeParametersResult:
    type: object
    properties:
      Parameters:
        $ref: '#/definitions/[object Object]'
        description: Parameters returned by the request.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeParametersRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/[object Object]'
        description: One or more filters. Use a filter to return a more specific list of results.
      ParameterFilters:
        $ref: '#/definitions/[object Object]'
        description: Filters to limit the request results.
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  InvalidFilterOption: {}
  DescribePatchBaselinesResult:
    type: object
    properties:
      BaselineIdentities:
        $ref: '#/definitions/[object Object]'
        description: An array of PatchBaselineIdentity elements.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribePatchBaselinesRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/[object Object]'
        description: '<p>Each element in the array is a structure containing: </p> <p>Key: (string, "NAME_PREFIX" or "OWNER")</p> <p>Value: (array of strings, exactly 1 entry, between 1 and 255 characters)</p>'
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of patch baselines to return (per page).
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribePatchGroupStateResult:
    type: object
    properties:
      Instances:
        $ref: '#/definitions/[object Object]'
        description: The number of instances in the patch group.
      InstancesWithInstalledPatches:
        $ref: '#/definitions/[object Object]'
        description: The number of instances with installed patches.
      InstancesWithInstalledOtherPatches:
        $ref: '#/definitions/[object Object]'
        description: The number of instances with patches installed that aren't defined in the patch baseline.
      InstancesWithInstalledRejectedPatches:
        $ref: '#/definitions/[object Object]'
        description: '<p>The number of instances with patches installed that are specified in a RejectedPatches list. Patches with a status of <i>INSTALLED_REJECTED</i> were typically installed before they were added to a RejectedPatches list.</p> <note> <p>If ALLOW_AS_DEPENDENCY is the specified option for RejectedPatchesAction, the value of InstancesWithInstalledRejectedPatches will always be 0 (zero).</p> </note>'
      InstancesWithMissingPatches:
        $ref: '#/definitions/[object Object]'
        description: The number of instances with missing patches from the patch baseline.
      InstancesWithFailedPatches:
        $ref: '#/definitions/[object Object]'
        description: The number of instances with patches from the patch baseline that failed to install.
      InstancesWithNotApplicablePatches:
        $ref: '#/definitions/[object Object]'
        description: The number of instances with patches that aren't applicable.
  DescribePatchGroupStateRequest:
    type: object
    required:
      - PatchGroup
    properties:
      PatchGroup:
        $ref: '#/definitions/[object Object]'
        description: The name of the patch group whose patch snapshot should be retrieved.
  DescribePatchGroupsResult:
    type: object
    properties:
      Mappings:
        $ref: '#/definitions/[object Object]'
        description: '<p>Each entry in the array contains:</p> <p>PatchGroup: string (between 1 and 256 characters, Regex: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$)</p> <p>PatchBaselineIdentity: A PatchBaselineIdentity element. </p>'
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribePatchGroupsRequest:
    type: object
    properties:
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of patch groups to return (per page).
      Filters:
        $ref: '#/definitions/[object Object]'
        description: One or more filters. Use a filter to return a more specific list of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeSessionsResponse:
    type: object
    properties:
      Sessions:
        $ref: '#/definitions/[object Object]'
        description: A list of sessions meeting the request parameters.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeSessionsRequest:
    type: object
    required:
      - State
    properties:
      State:
        $ref: '#/definitions/[object Object]'
        description: 'The session status to retrieve a list of sessions for. For example, "Active".'
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      Filters:
        $ref: '#/definitions/[object Object]'
        description: One or more filters to limit the type of sessions returned by the request.
  GetAutomationExecutionResult:
    type: object
    properties:
      AutomationExecution:
        $ref: '#/definitions/[object Object]'
        description: Detailed information about the current state of an automation execution.
  GetAutomationExecutionRequest:
    type: object
    required:
      - AutomationExecutionId
    properties:
      AutomationExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The unique identifier for an existing automation execution to examine. The execution ID is returned by StartAutomationExecution when the execution of an Automation document is initiated.
  GetCommandInvocationResult:
    type: object
    properties:
      CommandId:
        $ref: '#/definitions/[object Object]'
        description: The parent command ID of the invocation plugin.
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the managed instance targeted by the command. A managed instance can be an Amazon EC2 instance or an instance in your hybrid environment that is configured for Systems Manager.
      Comment:
        $ref: '#/definitions/[object Object]'
        description: The comment text for the command.
      DocumentName:
        $ref: '#/definitions/[object Object]'
        description: 'The name of the document that was executed. For example, AWS-RunShellScript.'
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: The SSM document version used in the request.
      PluginName:
        $ref: '#/definitions/[object Object]'
        description: 'The name of the plugin for which you want detailed results. For example, aws:RunShellScript is a plugin.'
      ResponseCode:
        $ref: '#/definitions/[object Object]'
        description: 'The error level response code for the plugin script. If the response code is -1, then the command has not started executing on the instance, or it was not received by the instance.'
      ExecutionStartDateTime:
        $ref: '#/definitions/[object Object]'
        description: '<p>The date and time the plugin started executing. Date and time are written in ISO 8601 format. For example, June 7, 2017 is represented as 2017-06-7. The following sample AWS CLI command uses the <code>InvokedBefore</code> filter.</p> <p> <code>aws ssm list-commands --filters key=InvokedBefore,value=2017-06-07T00:00:00Z</code> </p> <p>If the plugin has not started to execute, the string is empty.</p>'
      ExecutionElapsedTime:
        $ref: '#/definitions/[object Object]'
        description: Duration since ExecutionStartDateTime.
      ExecutionEndDateTime:
        $ref: '#/definitions/[object Object]'
        description: '<p>The date and time the plugin was finished executing. Date and time are written in ISO 8601 format. For example, June 7, 2017 is represented as 2017-06-7. The following sample AWS CLI command uses the <code>InvokedAfter</code> filter.</p> <p> <code>aws ssm list-commands --filters key=InvokedAfter,value=2017-06-07T00:00:00Z</code> </p> <p>If the plugin has not started to execute, the string is empty.</p>'
      Status:
        $ref: '#/definitions/[object Object]'
        description: The status of this invocation plugin. This status can be different than StatusDetails.
      StatusDetails:
        $ref: '#/definitions/[object Object]'
        description: '<p>A detailed status of the command execution for an invocation. StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to the instance.</p> </li> <li> <p>In Progress: The command has been sent to the instance but has not reached a terminal state.</p> </li> <li> <p>Delayed: The system attempted to send the command to the target, but the target was not available. The instance might not be available because of network issues, the instance was stopped, etc. The system will try to deliver the command again.</p> </li> <li> <p>Success: The command or plugin was executed successfully. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The command was not delivered to the instance before the delivery timeout expired. Delivery timeouts do not count against the parent command''s MaxErrors limit, but they do contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: The command started to execute on the instance, but the execution was not complete before the timeout expired. Execution timeouts count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Failed: The command wasn''t executed successfully on the instance. For a plugin, this indicates that the result code was not zero. For a command invocation, this indicates that the result code for one or more plugins was not zero. Invocation failures count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Undeliverable: The command can''t be delivered to the instance. The instance might not exist or might not be responding. Undeliverable invocations don''t count against the parent command''s MaxErrors limit and don''t contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Terminated: The parent command exceeded its MaxErrors limit and subsequent command invocations were canceled by the system. This is a terminal state.</p> </li> </ul>'
      StandardOutputContent:
        $ref: '#/definitions/[object Object]'
        description: 'The first 24,000 characters written by the plugin to stdout. If the command has not finished executing, if ExecutionStatus is neither Succeeded nor Failed, then this string is empty.'
      StandardOutputUrl:
        $ref: '#/definitions/[object Object]'
        description: 'The URL for the complete text written by the plugin to stdout in Amazon S3. If an Amazon S3 bucket was not specified, then this string is empty.'
      StandardErrorContent:
        $ref: '#/definitions/[object Object]'
        description: 'The first 8,000 characters written by the plugin to stderr. If the command has not finished executing, then this string is empty.'
      StandardErrorUrl:
        $ref: '#/definitions/[object Object]'
        description: 'The URL for the complete text written by the plugin to stderr. If the command has not finished executing, then this string is empty.'
      CloudWatchOutputConfig:
        $ref: '#/definitions/[object Object]'
        description: CloudWatch Logs information where Systems Manager sent the command output.
  GetCommandInvocationRequest:
    type: object
    required:
      - CommandId
      - InstanceId
    properties:
      CommandId:
        $ref: '#/definitions/[object Object]'
        description: (Required) The parent command ID of the invocation plugin.
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: (Required) The ID of the managed instance targeted by the command. A managed instance can be an Amazon EC2 instance or an instance in your hybrid environment that is configured for Systems Manager.
      PluginName:
        $ref: '#/definitions/[object Object]'
        description: '(Optional) The name of the plugin for which you want detailed results. If the document contains only one plugin, the name can be omitted and the details will be returned.'
  InvalidPluginName: {}
  InvocationDoesNotExist: {}
  GetConnectionStatusResponse:
    type: object
    properties:
      Target:
        $ref: '#/definitions/[object Object]'
        description: 'The ID of the instance to check connection status. '
      Status:
        $ref: '#/definitions/[object Object]'
        description: 'The status of the connection to the instance. For example, ''Connected'' or ''Not Connected''.'
  GetConnectionStatusRequest:
    type: object
    required:
      - Target
    properties:
      Target:
        $ref: '#/definitions/[object Object]'
        description: The ID of the instance.
  GetDefaultPatchBaselineResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the default patch baseline.
      OperatingSystem:
        $ref: '#/definitions/[object Object]'
        description: 'The operating system for the returned patch baseline. '
  GetDefaultPatchBaselineRequest:
    type: object
    properties:
      OperatingSystem:
        $ref: '#/definitions/[object Object]'
        description: Returns the default patch baseline for the specified operating system.
  GetDeployablePatchSnapshotForInstanceResult:
    type: object
    properties:
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the instance.
      SnapshotId:
        $ref: '#/definitions/[object Object]'
        description: The user-defined snapshot ID.
      SnapshotDownloadUrl:
        $ref: '#/definitions/[object Object]'
        description: A pre-signed Amazon S3 URL that can be used to download the patch snapshot.
      Product:
        $ref: '#/definitions/[object Object]'
        description: Returns the specific operating system (for example Windows Server 2012 or Amazon Linux 2015.09) on the instance for the specified patch snapshot.
  GetDeployablePatchSnapshotForInstanceRequest:
    type: object
    required:
      - InstanceId
      - SnapshotId
    properties:
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the instance for which the appropriate patch snapshot should be retrieved.
      SnapshotId:
        $ref: '#/definitions/[object Object]'
        description: The user-defined snapshot ID.
  GetDocumentResult:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the Systems Manager document.
      VersionName:
        $ref: '#/definitions/[object Object]'
        description: 'The version of the artifact associated with the document. For example, "Release 12, Update 6". This value is unique across all versions of a document, and cannot be changed.'
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: The document version.
      Status:
        $ref: '#/definitions/[object Object]'
        description: 'The status of the Systems Manager document, such as <code>Creating</code>, <code>Active</code>, <code>Updating</code>, <code>Failed</code>, and <code>Deleting</code>.'
      StatusInformation:
        $ref: '#/definitions/[object Object]'
        description: 'A message returned by AWS Systems Manager that explains the <code>Status</code> value. For example, a <code>Failed</code> status might be explained by the <code>StatusInformation</code> message, "The specified S3 bucket does not exist. Verify that the URL of the S3 bucket is correct."'
      Content:
        $ref: '#/definitions/[object Object]'
        description: The contents of the Systems Manager document.
      DocumentType:
        $ref: '#/definitions/[object Object]'
        description: The document type.
      DocumentFormat:
        $ref: '#/definitions/[object Object]'
        description: 'The document format, either JSON or YAML.'
      AttachmentsContent:
        $ref: '#/definitions/[object Object]'
        description: 'A description of the document attachments, including names, locations, sizes, etc.'
  GetDocumentRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the Systems Manager document.
      VersionName:
        $ref: '#/definitions/[object Object]'
        description: 'An optional field specifying the version of the artifact associated with the document. For example, "Release 12, Update 6". This value is unique across all versions of a document, and cannot be changed.'
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: The document version for which you want information.
      DocumentFormat:
        $ref: '#/definitions/[object Object]'
        description: Returns the document in the specified format. The document format can be either JSON or YAML. JSON is the default format.
  GetInventoryResult:
    type: object
    properties:
      Entities:
        $ref: '#/definitions/[object Object]'
        description: 'Collection of inventory entities such as a collection of instance inventory. '
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  GetInventoryRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/[object Object]'
        description: One or more filters. Use a filter to return a more specific list of results.
      Aggregators:
        $ref: '#/definitions/[object Object]'
        description: 'Returns counts of inventory types based on one or more expressions. For example, if you aggregate by using an expression that uses the <code>AWS:InstanceInformation.PlatformType</code> type, you can see a count of how many Windows and Linux instances exist in your inventoried fleet.'
      ResultAttributes:
        $ref: '#/definitions/[object Object]'
        description: The list of inventory item types to return.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
  InvalidInventoryGroupException: {}
  InvalidAggregatorException: {}
  InvalidResultAttributeException: {}
  GetInventorySchemaResult:
    type: object
    properties:
      Schemas:
        $ref: '#/definitions/[object Object]'
        description: Inventory schemas returned by the request.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  GetInventorySchemaRequest:
    type: object
    properties:
      TypeName:
        $ref: '#/definitions/[object Object]'
        description: The type of inventory item to return.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      Aggregator:
        $ref: '#/definitions/[object Object]'
        description: 'Returns inventory schemas that support aggregation. For example, this call returns the <code>AWS:InstanceInformation</code> type, because it supports aggregation based on the <code>PlatformName</code>, <code>PlatformType</code>, and <code>PlatformVersion</code> attributes.'
      SubType:
        $ref: '#/definitions/[object Object]'
        description: Returns the sub-type schema for a specified inventory type.
  GetMaintenanceWindowResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the created Maintenance Window.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the Maintenance Window.
      Description:
        $ref: '#/definitions/[object Object]'
        description: The description of the Maintenance Window.
      StartDate:
        $ref: '#/definitions/[object Object]'
        description: 'The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become active. The Maintenance Window will not run before this specified time.'
      EndDate:
        $ref: '#/definitions/[object Object]'
        description: 'The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become inactive. The Maintenance Window will not run after this specified time.'
      Schedule:
        $ref: '#/definitions/[object Object]'
        description: The schedule of the Maintenance Window in the form of a cron or rate expression.
      ScheduleTimezone:
        $ref: '#/definitions/[object Object]'
        description: 'The time zone that the scheduled Maintenance Window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: "America/Los_Angeles", "etc/UTC", or "Asia/Seoul". For more information, see the <a href="https://www.iana.org/time-zones">Time Zone Database</a> on the IANA website.'
      NextExecutionTime:
        $ref: '#/definitions/[object Object]'
        description: 'The next time the Maintenance Window will actually run, taking into account any specified times for the Maintenance Window to become active or inactive.'
      Duration:
        $ref: '#/definitions/[object Object]'
        description: The duration of the Maintenance Window in hours.
      Cutoff:
        $ref: '#/definitions/[object Object]'
        description: The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.
      AllowUnassociatedTargets:
        $ref: '#/definitions/[object Object]'
        description: Whether targets must be registered with the Maintenance Window before tasks can be defined for those targets.
      Enabled:
        $ref: '#/definitions/[object Object]'
        description: Whether the Maintenance Windows is enabled.
      CreatedDate:
        $ref: '#/definitions/[object Object]'
        description: The date the Maintenance Window was created.
      ModifiedDate:
        $ref: '#/definitions/[object Object]'
        description: The date the Maintenance Window was last modified.
  GetMaintenanceWindowRequest:
    type: object
    required:
      - WindowId
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the desired Maintenance Window.
  GetMaintenanceWindowExecutionResult:
    type: object
    properties:
      WindowExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window execution.
      TaskIds:
        $ref: '#/definitions/[object Object]'
        description: The ID of the task executions from the Maintenance Window execution.
      Status:
        $ref: '#/definitions/[object Object]'
        description: The status of the Maintenance Window execution.
      StatusDetails:
        $ref: '#/definitions/[object Object]'
        description: The details explaining the Status. Only available for certain status values.
      StartTime:
        $ref: '#/definitions/[object Object]'
        description: The time the Maintenance Window started executing.
      EndTime:
        $ref: '#/definitions/[object Object]'
        description: The time the Maintenance Window finished executing.
  GetMaintenanceWindowExecutionRequest:
    type: object
    required:
      - WindowExecutionId
    properties:
      WindowExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window execution that includes the task.
  GetMaintenanceWindowExecutionTaskResult:
    type: object
    properties:
      WindowExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window execution that includes the task.
      TaskExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the specific task execution in the Maintenance Window task that was retrieved.
      TaskArn:
        $ref: '#/definitions/[object Object]'
        description: The ARN of the executed task.
      ServiceRole:
        $ref: '#/definitions/[object Object]'
        description: The role that was assumed when executing the task.
      Type:
        $ref: '#/definitions/[object Object]'
        description: The type of task executed.
      TaskParameters:
        $ref: '#/definitions/[object Object]'
        description: '<p>The parameters passed to the task when it was executed.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note> <p>The map has the following format:</p> <p>Key: string, between 1 and 255 characters</p> <p>Value: an array of strings, each string is between 1 and 255 characters</p>'
      Priority:
        $ref: '#/definitions/[object Object]'
        description: The priority of the task.
      MaxConcurrency:
        $ref: '#/definitions/[object Object]'
        description: The defined maximum number of task executions that could be run in parallel.
      MaxErrors:
        $ref: '#/definitions/[object Object]'
        description: The defined maximum number of task execution errors allowed before scheduling of the task execution would have been stopped.
      Status:
        $ref: '#/definitions/[object Object]'
        description: The status of the task.
      StatusDetails:
        $ref: '#/definitions/[object Object]'
        description: The details explaining the Status. Only available for certain status values.
      StartTime:
        $ref: '#/definitions/[object Object]'
        description: The time the task execution started.
      EndTime:
        $ref: '#/definitions/[object Object]'
        description: The time the task execution completed.
  GetMaintenanceWindowExecutionTaskRequest:
    type: object
    required:
      - WindowExecutionId
      - TaskId
    properties:
      WindowExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window execution that includes the task.
      TaskId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the specific task execution in the Maintenance Window task that should be retrieved.
  GetMaintenanceWindowExecutionTaskInvocationResult:
    type: object
    properties:
      WindowExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The Maintenance Window execution ID.
      TaskExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The task execution ID.
      InvocationId:
        $ref: '#/definitions/[object Object]'
        description: The invocation ID.
      ExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The execution ID.
      TaskType:
        $ref: '#/definitions/[object Object]'
        description: 'Retrieves the task type for a Maintenance Window. Task types include the following: LAMBDA, STEP_FUNCTION, AUTOMATION, RUN_COMMAND.'
      Parameters:
        $ref: '#/definitions/[object Object]'
        description: The parameters used at the time that the task executed.
      Status:
        $ref: '#/definitions/[object Object]'
        description: The task status for an invocation.
      StatusDetails:
        $ref: '#/definitions/[object Object]'
        description: The details explaining the status. Details are only available for certain status values.
      StartTime:
        $ref: '#/definitions/[object Object]'
        description: The time that the task started executing on the target.
      EndTime:
        $ref: '#/definitions/[object Object]'
        description: The time that the task finished executing on the target.
      OwnerInformation:
        $ref: '#/definitions/[object Object]'
        description: 'User-provided value to be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window. '
      WindowTargetId:
        $ref: '#/definitions/[object Object]'
        description: The Maintenance Window target ID.
  GetMaintenanceWindowExecutionTaskInvocationRequest:
    type: object
    required:
      - WindowExecutionId
      - TaskId
      - InvocationId
    properties:
      WindowExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window execution for which the task is a part.
      TaskId:
        $ref: '#/definitions/[object Object]'
        description: 'The ID of the specific task in the Maintenance Window task that should be retrieved. '
      InvocationId:
        $ref: '#/definitions/[object Object]'
        description: The invocation ID to retrieve.
  GetMaintenanceWindowTaskResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The retrieved Maintenance Window ID.
      WindowTaskId:
        $ref: '#/definitions/[object Object]'
        description: The retrieved Maintenance Window task ID.
      Targets:
        $ref: '#/definitions/[object Object]'
        description: The targets where the task should execute.
      TaskArn:
        $ref: '#/definitions/[object Object]'
        description: 'The resource that the task used during execution. For RUN_COMMAND and AUTOMATION task types, the TaskArn is the Systems Manager Document name/ARN. For LAMBDA tasks, the value is the function name/ARN. For STEP_FUNCTION tasks, the value is the state machine ARN.'
      ServiceRoleArn:
        $ref: '#/definitions/[object Object]'
        description: The IAM service role to assume during task execution.
      TaskType:
        $ref: '#/definitions/[object Object]'
        description: The type of task to execute.
      TaskParameters:
        $ref: '#/definitions/[object Object]'
        description: '<p>The parameters to pass to the task when it executes.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>'
      TaskInvocationParameters:
        $ref: '#/definitions/[object Object]'
        description: The parameters to pass to the task when it executes.
      Priority:
        $ref: '#/definitions/[object Object]'
        description: 'The priority of the task when it executes. The lower the number, the higher the priority. Tasks that have the same priority are scheduled in parallel.'
      MaxConcurrency:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of targets allowed to run this task in parallel.
      MaxErrors:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of errors allowed before the task stops being scheduled.
      LoggingInfo:
        $ref: '#/definitions/[object Object]'
        description: '<p>The location in Amazon S3 where the task results are logged.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>'
      Name:
        $ref: '#/definitions/[object Object]'
        description: The retrieved task name.
      Description:
        $ref: '#/definitions/[object Object]'
        description: The retrieved task description.
  GetMaintenanceWindowTaskRequest:
    type: object
    required:
      - WindowId
      - WindowTaskId
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The Maintenance Window ID that includes the task to retrieve.
      WindowTaskId:
        $ref: '#/definitions/[object Object]'
        description: The Maintenance Window task ID to retrieve.
  GetParameterResult:
    type: object
    properties:
      Parameter:
        $ref: '#/definitions/[object Object]'
        description: Information about a parameter.
  GetParameterRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the parameter you want to query.
      WithDecryption:
        $ref: '#/definitions/[object Object]'
        description: Return decrypted values for secure string parameters. This flag is ignored for String and StringList parameter types.
  InvalidKeyId: {}
  ParameterVersionNotFound: {}
  GetParameterHistoryResult:
    type: object
    properties:
      Parameters:
        $ref: '#/definitions/[object Object]'
        description: A list of parameters returned by the request.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  GetParameterHistoryRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of a parameter you want to query.
      WithDecryption:
        $ref: '#/definitions/[object Object]'
        description: Return decrypted values for secure string parameters. This flag is ignored for String and StringList parameter types.
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  GetParametersResult:
    type: object
    properties:
      Parameters:
        $ref: '#/definitions/[object Object]'
        description: A list of details for a parameter.
      InvalidParameters:
        $ref: '#/definitions/[object Object]'
        description: A list of parameters that are not formatted correctly or do not run when executed.
  GetParametersRequest:
    type: object
    required:
      - Names
    properties:
      Names:
        $ref: '#/definitions/[object Object]'
        description: Names of the parameters for which you want to query information.
      WithDecryption:
        $ref: '#/definitions/[object Object]'
        description: Return decrypted secure string value. Return decrypted values for secure string parameters. This flag is ignored for String and StringList parameter types.
  GetParametersByPathResult:
    type: object
    properties:
      Parameters:
        $ref: '#/definitions/[object Object]'
        description: A list of parameters found in the specified hierarchy.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. Use this token to get the next set of results.
  GetParametersByPathRequest:
    type: object
    required:
      - Path
    properties:
      Path:
        $ref: '#/definitions/[object Object]'
        description: 'The hierarchy for the parameter. Hierarchies start with a forward slash (/) and end with the parameter name. A parameter name hierarchy can have a maximum of 15 levels. Here is an example of a hierarchy: <code>/Finance/Prod/IAD/WinServ2016/license33</code> '
      Recursive:
        $ref: '#/definitions/[object Object]'
        description: '<p>Retrieve all parameters within a hierarchy.</p> <important> <p>If a user has access to a path, then the user can access all levels of that path. For example, if a user has permission to access path /a, then the user can also access /a/b. Even if a user has explicitly been denied access in IAM for parameter /a, they can still call the GetParametersByPath API action recursively and view /a/b.</p> </important>'
      ParameterFilters:
        $ref: '#/definitions/[object Object]'
        description: <p>Filters to limit the request results.</p> <note> <p>You can't filter using the parameter name.</p> </note>
      WithDecryption:
        $ref: '#/definitions/[object Object]'
        description: Retrieve all parameters in a hierarchy with their value decrypted.
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'A token to start the list. Use this token to get the next set of results. '
  GetPatchBaselineResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the retrieved patch baseline.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the patch baseline.
      OperatingSystem:
        $ref: '#/definitions/[object Object]'
        description: Returns the operating system specified for the patch baseline.
      GlobalFilters:
        $ref: '#/definitions/[object Object]'
        description: A set of global filters used to exclude patches from the baseline.
      ApprovalRules:
        $ref: '#/definitions/[object Object]'
        description: A set of rules used to include patches in the baseline.
      ApprovedPatches:
        $ref: '#/definitions/[object Object]'
        description: A list of explicitly approved patches for the baseline.
      ApprovedPatchesComplianceLevel:
        $ref: '#/definitions/[object Object]'
        description: Returns the specified compliance severity level for approved patches in the patch baseline.
      ApprovedPatchesEnableNonSecurity:
        $ref: '#/definitions/[object Object]'
        description: Indicates whether the list of approved patches includes non-security updates that should be applied to the instances. The default value is 'false'. Applies to Linux instances only.
      RejectedPatches:
        $ref: '#/definitions/[object Object]'
        description: A list of explicitly rejected patches for the baseline.
      RejectedPatchesAction:
        $ref: '#/definitions/[object Object]'
        description: 'The action specified to take on patches included in the RejectedPatches list. A patch can be allowed only if it is a dependency of another package, or blocked entirely along with packages that include it as a dependency.'
      PatchGroups:
        $ref: '#/definitions/[object Object]'
        description: Patch groups included in the patch baseline.
      CreatedDate:
        $ref: '#/definitions/[object Object]'
        description: The date the patch baseline was created.
      ModifiedDate:
        $ref: '#/definitions/[object Object]'
        description: The date the patch baseline was last modified.
      Description:
        $ref: '#/definitions/[object Object]'
        description: A description of the patch baseline.
      Sources:
        $ref: '#/definitions/[object Object]'
        description: 'Information about the patches to use to update the instances, including target operating systems and source repositories. Applies to Linux instances only.'
  GetPatchBaselineRequest:
    type: object
    required:
      - BaselineId
    properties:
      BaselineId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the patch baseline to retrieve.
  GetPatchBaselineForPatchGroupResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the patch baseline that should be used for the patch group.
      PatchGroup:
        $ref: '#/definitions/[object Object]'
        description: The name of the patch group.
      OperatingSystem:
        $ref: '#/definitions/[object Object]'
        description: The operating system rule specified for patch groups using the patch baseline.
  GetPatchBaselineForPatchGroupRequest:
    type: object
    required:
      - PatchGroup
    properties:
      PatchGroup:
        $ref: '#/definitions/[object Object]'
        description: The name of the patch group whose patch baseline should be retrieved.
      OperatingSystem:
        $ref: '#/definitions/[object Object]'
        description: Returns he operating system rule specified for patch groups using the patch baseline.
  LabelParameterVersionResult:
    type: object
    properties:
      InvalidLabels:
        $ref: '#/definitions/[object Object]'
        description: 'The label does not meet the requirements. For information about parameter label requirements, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-labels.html">Labeling Parameters</a> in the <i>AWS Systems Manager User Guide</i>.'
  LabelParameterVersionRequest:
    type: object
    required:
      - Name
      - Labels
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The parameter name on which you want to attach one or more labels.
      ParameterVersion:
        $ref: '#/definitions/[object Object]'
        description: 'The specific version of the parameter on which you want to attach one or more labels. If no version is specified, the system attaches the label to the latest version.)'
      Labels:
        $ref: '#/definitions/[object Object]'
        description: One or more labels to attach to the specified parameter version.
  ParameterVersionLabelLimitExceeded: {}
  ListAssociationVersionsResult:
    type: object
    properties:
      AssociationVersions:
        $ref: '#/definitions/[object Object]'
        description: Information about all versions of the association for the specified association ID.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. Use this token to get the next set of results.
  ListAssociationVersionsRequest:
    type: object
    required:
      - AssociationId
    properties:
      AssociationId:
        $ref: '#/definitions/[object Object]'
        description: The association ID for which you want to view all versions.
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'A token to start the list. Use this token to get the next set of results. '
  ListAssociationsResult:
    type: object
    properties:
      Associations:
        $ref: '#/definitions/[object Object]'
        description: The associations.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  ListAssociationsRequest:
    type: object
    properties:
      AssociationFilterList:
        $ref: '#/definitions/[object Object]'
        description: One or more filters. Use a filter to return a more specific list of results.
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  ListCommandInvocationsResult:
    type: object
    properties:
      CommandInvocations:
        $ref: '#/definitions/[object Object]'
        description: '(Optional) A list of all invocations. '
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: (Optional) The token for the next set of items to return. (You received this token from a previous call.)
  ListCommandInvocationsRequest:
    type: object
    properties:
      CommandId:
        $ref: '#/definitions/[object Object]'
        description: (Optional) The invocations for a specific command ID.
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: (Optional) The command execution details for a specific instance ID.
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: (Optional) The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: (Optional) The token for the next set of items to return. (You received this token from a previous call.)
      Filters:
        $ref: '#/definitions/[object Object]'
        description: (Optional) One or more filters. Use a filter to return a more specific list of results.
      Details:
        $ref: '#/definitions/[object Object]'
        description: '(Optional) If set this returns the response of the command executions and any command output. By default this is set to False. '
  ListCommandsResult:
    type: object
    properties:
      Commands:
        $ref: '#/definitions/[object Object]'
        description: '(Optional) The list of commands requested by the user. '
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: (Optional) The token for the next set of items to return. (You received this token from a previous call.)
  ListCommandsRequest:
    type: object
    properties:
      CommandId:
        $ref: '#/definitions/[object Object]'
        description: '(Optional) If provided, lists only the specified command.'
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: (Optional) Lists commands issued against this instance ID.
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: (Optional) The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: (Optional) The token for the next set of items to return. (You received this token from a previous call.)
      Filters:
        $ref: '#/definitions/[object Object]'
        description: '(Optional) One or more filters. Use a filter to return a more specific list of results. '
  ListComplianceItemsResult:
    type: object
    properties:
      ComplianceItems:
        $ref: '#/definitions/[object Object]'
        description: 'A list of compliance information for the specified resource ID. '
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. Use this token to get the next set of results.
  ListComplianceItemsRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/[object Object]'
        description: One or more compliance filters. Use a filter to return a more specific list of results.
      ResourceIds:
        $ref: '#/definitions/[object Object]'
        description: 'The ID for the resources from which to get compliance information. Currently, you can only specify one resource ID.'
      ResourceTypes:
        $ref: '#/definitions/[object Object]'
        description: 'The type of resource from which to get compliance information. Currently, the only supported resource type is <code>ManagedInstance</code>.'
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'A token to start the list. Use this token to get the next set of results. '
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
  ListComplianceSummariesResult:
    type: object
    properties:
      ComplianceSummaryItems:
        $ref: '#/definitions/[object Object]'
        description: 'A list of compliant and non-compliant summary counts based on compliance types. For example, this call returns State Manager associations, patches, or custom compliance types according to the filter criteria that you specified.'
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. Use this token to get the next set of results.
  ListComplianceSummariesRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/[object Object]'
        description: One or more compliance or inventory filters. Use a filter to return a more specific list of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'A token to start the list. Use this token to get the next set of results. '
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: 'The maximum number of items to return for this call. Currently, you can specify null or 50. The call also returns a token that you can specify in a subsequent call to get the next set of results.'
  ListDocumentVersionsResult:
    type: object
    properties:
      DocumentVersions:
        $ref: '#/definitions/[object Object]'
        description: The document versions.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  ListDocumentVersionsRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the document about which you want version information.
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  ListDocumentsResult:
    type: object
    properties:
      DocumentIdentifiers:
        $ref: '#/definitions/[object Object]'
        description: The names of the Systems Manager documents.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  ListDocumentsRequest:
    type: object
    properties:
      DocumentFilterList:
        $ref: '#/definitions/[object Object]'
        description: One or more filters. Use a filter to return a more specific list of results.
      Filters:
        $ref: '#/definitions/[object Object]'
        description: One or more filters. Use a filter to return a more specific list of results.
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  ListInventoryEntriesResult:
    type: object
    properties:
      TypeName:
        $ref: '#/definitions/[object Object]'
        description: The type of inventory item returned by the request.
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: The instance ID targeted by the request to query inventory information.
      SchemaVersion:
        $ref: '#/definitions/[object Object]'
        description: The inventory schema version used by the instance(s).
      CaptureTime:
        $ref: '#/definitions/[object Object]'
        description: The time that inventory information was collected for the instance(s).
      Entries:
        $ref: '#/definitions/[object Object]'
        description: A list of inventory items on the instance(s).
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  ListInventoryEntriesRequest:
    type: object
    required:
      - InstanceId
      - TypeName
    properties:
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: The instance ID for which you want inventory information.
      TypeName:
        $ref: '#/definitions/[object Object]'
        description: The type of inventory item for which you want information.
      Filters:
        $ref: '#/definitions/[object Object]'
        description: One or more filters. Use a filter to return a more specific list of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
  ListResourceComplianceSummariesResult:
    type: object
    properties:
      ResourceComplianceSummaryItems:
        $ref: '#/definitions/[object Object]'
        description: 'A summary count for specified or targeted managed instances. Summary count includes information about compliant and non-compliant State Manager associations, patch status, or custom items according to the filter criteria that you specify. '
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. Use this token to get the next set of results.
  ListResourceComplianceSummariesRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/[object Object]'
        description: One or more filters. Use a filter to return a more specific list of results.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'A token to start the list. Use this token to get the next set of results. '
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
  ListResourceDataSyncResult:
    type: object
    properties:
      ResourceDataSyncItems:
        $ref: '#/definitions/[object Object]'
        description: A list of your current Resource Data Sync configurations and their statuses.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the next set of items to return. Use this token to get the next set of results.
  ListResourceDataSyncRequest:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'A token to start the list. Use this token to get the next set of results. '
      MaxResults:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
  ListTagsForResourceResult:
    type: object
    properties:
      TagList:
        $ref: '#/definitions/[object Object]'
        description: A list of tags.
  ListTagsForResourceRequest:
    type: object
    required:
      - ResourceType
      - ResourceId
    properties:
      ResourceType:
        $ref: '#/definitions/[object Object]'
        description: Returns a list of tags for a specific resource type.
      ResourceId:
        $ref: '#/definitions/[object Object]'
        description: The resource ID for which you want to see a list of tags.
  ModifyDocumentPermissionResponse:
    type: object
    properties: {}
  ModifyDocumentPermissionRequest:
    type: object
    required:
      - Name
      - PermissionType
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the document that you want to share.
      PermissionType:
        $ref: '#/definitions/[object Object]'
        description: The permission type for the document. The permission type can be <i>Share</i>.
      AccountIdsToAdd:
        $ref: '#/definitions/[object Object]'
        description: The AWS user accounts that should have access to the document. The account IDs can either be a group of account IDs or <i>All</i>.
      AccountIdsToRemove:
        $ref: '#/definitions/[object Object]'
        description: 'The AWS user accounts that should no longer have access to the document. The AWS user account can either be a group of account IDs or <i>All</i>. This action has a higher priority than <i>AccountIdsToAdd</i>. If you specify an account ID to add and the same ID to remove, the system removes access to the document.'
  DocumentPermissionLimit: {}
  PutComplianceItemsResult:
    type: object
    properties: {}
  PutComplianceItemsRequest:
    type: object
    required:
      - ResourceId
      - ResourceType
      - ComplianceType
      - ExecutionSummary
      - Items
    properties:
      ResourceId:
        $ref: '#/definitions/[object Object]'
        description: 'Specify an ID for this resource. For a managed instance, this is the instance ID.'
      ResourceType:
        $ref: '#/definitions/[object Object]'
        description: Specify the type of resource. <code>ManagedInstance</code> is currently the only supported resource type.
      ComplianceType:
        $ref: '#/definitions/[object Object]'
        description: 'Specify the compliance type. For example, specify Association (for a State Manager association), Patch, or Custom:<code>string</code>.'
      ExecutionSummary:
        $ref: '#/definitions/[object Object]'
        description: 'A summary of the call execution that includes an execution ID, the type of execution (for example, <code>Command</code>), and the date/time of the execution using a datetime object that is saved in the following format: yyyy-MM-dd''T''HH:mm:ss''Z''.'
      Items:
        $ref: '#/definitions/[object Object]'
        description: 'Information about the compliance as defined by the resource type. For example, for a patch compliance type, <code>Items</code> includes information about the PatchSeverity, Classification, etc.'
      ItemContentHash:
        $ref: '#/definitions/[object Object]'
        description: 'MD5 or SHA-256 content hash. The content hash is used to determine if existing information should be overwritten or ignored. If the content hashes match, the request to put compliance information is ignored.'
  InvalidItemContentException: {}
  TotalSizeLimitExceededException: {}
  ItemSizeLimitExceededException: {}
  ComplianceTypeCountLimitExceededException: {}
  PutInventoryResult:
    type: object
    properties:
      Message:
        $ref: '#/definitions/[object Object]'
        description: Information about the request.
  PutInventoryRequest:
    type: object
    required:
      - InstanceId
      - Items
    properties:
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: One or more instance IDs where you want to add or update inventory items.
      Items:
        $ref: '#/definitions/[object Object]'
        description: The inventory items that you want to add or update on instances.
  ItemContentMismatchException: {}
  CustomSchemaCountLimitExceededException: {}
  UnsupportedInventorySchemaVersionException: {}
  UnsupportedInventoryItemContextException: {}
  InvalidInventoryItemContextException: {}
  SubTypeCountLimitExceededException: {}
  PutParameterResult:
    type: object
    properties:
      Version:
        $ref: '#/definitions/[object Object]'
        description: 'The new version number of a parameter. If you edit a parameter value, Parameter Store automatically creates a new version and assigns this new version a unique ID. You can reference a parameter version ID in API actions or in Systems Manager documents (SSM documents). By default, if you don''t specify a specific version, the system returns the latest parameter value when a parameter is called.'
  PutParameterRequest:
    type: object
    required:
      - Name
      - Value
      - Type
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: '<p>The fully qualified name of the parameter that you want to add to the system. The fully qualified name includes the complete hierarchy of the parameter path and name. For example: <code>/Dev/DBServer/MySQL/db-string13</code> </p> <p>Naming Constraints:</p> <ul> <li> <p>Parameter names are case sensitive.</p> </li> <li> <p>A parameter name must be unique within an AWS Region</p> </li> <li> <p>A parameter name can''t be prefixed with "aws" or "ssm" (case-insensitive).</p> </li> <li> <p>Parameter names can include only the following symbols and letters: <code>a-zA-Z0-9_.-/</code> </p> </li> <li> <p>A parameter name can''t include spaces.</p> </li> <li> <p>Parameter hierarchies are limited to a maximum depth of fifteen levels.</p> </li> </ul> <p>For additional information about valid values for parameter names, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-parameter-name-constraints.html">Requirements and Constraints for Parameter Names</a> in the <i>AWS Systems Manager User Guide</i>.</p> <note> <p>The maximum length constraint listed below includes capacity for additional system attributes that are not part of the name. The maximum length for the fully qualified parameter name is 1011 characters. </p> </note>'
      Description:
        $ref: '#/definitions/[object Object]'
        description: <p>Information about the parameter that you want to add to the system. Optional but recommended.</p> <important> <p>Do not enter personally identifiable information in this field.</p> </important>
      Value:
        $ref: '#/definitions/[object Object]'
        description: The parameter value that you want to add to the system.
      Type:
        $ref: '#/definitions/[object Object]'
        description: '<p>The type of parameter that you want to add to the system.</p> <p>Items in a <code>StringList</code> must be separated by a comma (,). You can''t use other punctuation or special character to escape items in the list. If you have a parameter value that requires a comma, then use the <code>String</code> data type.</p> <note> <p> <code>SecureString</code> is not currently supported for AWS CloudFormation templates or in the China Regions.</p> </note>'
      KeyId:
        $ref: '#/definitions/[object Object]'
        description: '<p>The KMS Key ID that you want to use to encrypt a parameter. Either the default AWS Key Management Service (AWS KMS) key automatically assigned to your AWS account or a custom key. Required for parameters that use the <code>SecureString</code> data type.</p> <p>If you don''t specify a key ID, the system uses the default key associated with your AWS account.</p> <ul> <li> <p>To use your default AWS KMS key, choose the <code>SecureString</code> data type, and do <i>not</i> specify the <code>Key ID</code> when you create the parameter. The system automatically populates <code>Key ID</code> with your default KMS key.</p> </li> <li> <p>To use a custom KMS key, choose the <code>SecureString</code> data type with the <code>Key ID</code> parameter.</p> </li> </ul>'
      Overwrite:
        $ref: '#/definitions/[object Object]'
        description: 'Overwrite an existing parameter. If not specified, will default to "false".'
      AllowedPattern:
        $ref: '#/definitions/[object Object]'
        description: 'A regular expression used to validate the parameter value. For example, for String types with values restricted to numbers, you can specify the following: AllowedPattern=^\d+$ '
  ParameterLimitExceeded: {}
  ParameterAlreadyExists: {}
  HierarchyLevelLimitExceededException: {}
  HierarchyTypeMismatchException: {}
  InvalidAllowedPatternException: {}
  ParameterMaxVersionLimitExceeded: {}
  ParameterPatternMismatchException: {}
  UnsupportedParameterType: {}
  RegisterDefaultPatchBaselineResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the default patch baseline.
  RegisterDefaultPatchBaselineRequest:
    type: object
    required:
      - BaselineId
    properties:
      BaselineId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the patch baseline that should be the default patch baseline.
  RegisterPatchBaselineForPatchGroupResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the patch baseline the patch group was registered with.
      PatchGroup:
        $ref: '#/definitions/[object Object]'
        description: The name of the patch group registered with the patch baseline.
  RegisterPatchBaselineForPatchGroupRequest:
    type: object
    required:
      - BaselineId
      - PatchGroup
    properties:
      BaselineId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the patch baseline to register the patch group with.
      PatchGroup:
        $ref: '#/definitions/[object Object]'
        description: The name of the patch group that should be registered with the patch baseline.
  AlreadyExistsException: {}
  RegisterTargetWithMaintenanceWindowResult:
    type: object
    properties:
      WindowTargetId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the target definition in this Maintenance Window.
  RegisterTargetWithMaintenanceWindowRequest:
    type: object
    required:
      - WindowId
      - ResourceType
      - Targets
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window the target should be registered with.
      ResourceType:
        $ref: '#/definitions/[object Object]'
        description: The type of target being registered with the Maintenance Window.
      Targets:
        $ref: '#/definitions/[object Object]'
        description: '<p>The targets (either instances or tags). </p> <p>Specify instances using the following format:</p> <p> <code>Key=InstanceIds,Values=&lt;instance-id-1&gt;,&lt;instance-id-2&gt;</code> </p> <p>Specify tags using either of the following formats:</p> <p> <code>Key=tag:&lt;tag-key&gt;,Values=&lt;tag-value-1&gt;,&lt;tag-value-2&gt;</code> </p> <p> <code>Key=tag-key,Values=&lt;tag-key-1&gt;,&lt;tag-key-2&gt;</code> </p>'
      OwnerInformation:
        $ref: '#/definitions/[object Object]'
        description: User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.
      Name:
        $ref: '#/definitions/[object Object]'
        description: An optional name for the target.
      Description:
        $ref: '#/definitions/[object Object]'
        description: An optional description for the target.
      ClientToken:
        $ref: '#/definitions/[object Object]'
        description: User-provided idempotency token.
  RegisterTaskWithMaintenanceWindowResult:
    type: object
    properties:
      WindowTaskId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the task in the Maintenance Window.
  RegisterTaskWithMaintenanceWindowRequest:
    type: object
    required:
      - WindowId
      - Targets
      - TaskArn
      - TaskType
      - MaxConcurrency
      - MaxErrors
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window the task should be added to.
      Targets:
        $ref: '#/definitions/[object Object]'
        description: '<p>The targets (either instances or Maintenance Window targets).</p> <p>Specify instances using the following format: </p> <p> <code>Key=InstanceIds,Values=&lt;instance-id-1&gt;,&lt;instance-id-2&gt;</code> </p> <p>Specify Maintenance Window targets using the following format:</p> <p> <code>Key=&lt;WindowTargetIds&gt;,Values=&lt;window-target-id-1&gt;,&lt;window-target-id-2&gt;</code> </p>'
      TaskArn:
        $ref: '#/definitions/[object Object]'
        description: 'The ARN of the task to execute '
      ServiceRoleArn:
        $ref: '#/definitions/[object Object]'
        description: '<p>The role to assume when running the Maintenance Window task.</p> <p>If you do not specify a service role ARN, Systems Manager will use your account''s service-linked role for Systems Manager by default. If no service-linked role for Systems Manager exists in your account, it will be created when you run <code>RegisterTaskWithMaintenanceWindow</code> without specifying a service role ARN.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/using-service-linked-roles.html#slr-permissions">Service-Linked Role Permissions for Systems Manager</a> and <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-maintenance-permissions.html#maintenance-window-tasks-service-role">Should I Use a Service-Linked Role or a Custom Service Role to Run Maintenance Window Tasks? </a> in the <i>AWS Systems Manager User Guide</i>.</p>'
      TaskType:
        $ref: '#/definitions/[object Object]'
        description: The type of task being registered.
      TaskParameters:
        $ref: '#/definitions/[object Object]'
        description: '<p>The parameters that should be passed to the task when it is executed.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>'
      TaskInvocationParameters:
        $ref: '#/definitions/[object Object]'
        description: 'The parameters that the task should use during execution. Populate only the fields that match the task type. All other fields should be empty. '
      Priority:
        $ref: '#/definitions/[object Object]'
        description: 'The priority of the task in the Maintenance Window, the lower the number the higher the priority. Tasks in a Maintenance Window are scheduled in priority order with tasks that have the same priority scheduled in parallel.'
      MaxConcurrency:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of targets this task can be run for in parallel.
      MaxErrors:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of errors allowed before this task stops being scheduled.
      LoggingInfo:
        $ref: '#/definitions/[object Object]'
        description: '<p>A structure containing information about an Amazon S3 bucket to write instance-level logs to. </p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>'
      Name:
        $ref: '#/definitions/[object Object]'
        description: An optional name for the task.
      Description:
        $ref: '#/definitions/[object Object]'
        description: An optional description for the task.
      ClientToken:
        $ref: '#/definitions/[object Object]'
        description: User-provided idempotency token.
  FeatureNotAvailableException: {}
  RemoveTagsFromResourceResult:
    type: object
    properties: {}
  RemoveTagsFromResourceRequest:
    type: object
    required:
      - ResourceType
      - ResourceId
      - TagKeys
    properties:
      ResourceType:
        $ref: '#/definitions/[object Object]'
        description: '<p>The type of resource of which you want to remove a tag.</p> <note> <p>The ManagedInstance type for this API action is only for on-premises managed instances. You must specify the the name of the managed instance in the following format: mi-ID_number. For example, mi-1a2b3c4d5e6f.</p> </note>'
      ResourceId:
        $ref: '#/definitions/[object Object]'
        description: '<p>The resource ID for which you want to remove tags. Use the ID of the resource. Here are some examples:</p> <p>ManagedInstance: mi-012345abcde</p> <p>MaintenanceWindow: mw-012345abcde</p> <p>PatchBaseline: pb-012345abcde</p> <p>For the Document and Parameter values, use the name of the resource.</p> <note> <p>The ManagedInstance type for this API action is only for on-premises managed instances. You must specify the the name of the managed instance in the following format: mi-ID_number. For example, mi-1a2b3c4d5e6f.</p> </note>'
      TagKeys:
        $ref: '#/definitions/[object Object]'
        description: Tag keys that you want to remove from the specified resource.
  ResumeSessionResponse:
    type: object
    properties:
      SessionId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the session.
      TokenValue:
        $ref: '#/definitions/[object Object]'
        description: An encrypted token value containing session and caller information. Used to authenticate the connection to the instance.
      StreamUrl:
        $ref: '#/definitions/[object Object]'
        description: '<p>A URL back to SSM Agent on the instance that the Session Manager client uses to send commands and receive output from the instance. Format: <code>wss://ssm-messages.<b>region</b>.amazonaws.com/v1/data-channel/<b>session-id</b>?stream=(input|output)</code>.</p> <p> <b>region</b> represents the Region identifier for an AWS Region supported by AWS Systems Manager, such as <code>us-east-2</code> for the US East (Ohio) Region. For a list of supported <b>region</b> values, see the <b>Region</b> column in the <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#ssm_region">AWS Systems Manager table of regions and endpoints</a> in the <i>AWS General Reference</i>.</p> <p> <b>session-id</b> represents the ID of a Session Manager session, such as <code>1a2b3c4dEXAMPLE</code>.</p>'
  ResumeSessionRequest:
    type: object
    required:
      - SessionId
    properties:
      SessionId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the disconnected session to resume.
  SendAutomationSignalResult:
    type: object
    properties: {}
  SendAutomationSignalRequest:
    type: object
    required:
      - AutomationExecutionId
      - SignalType
    properties:
      AutomationExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The unique identifier for an existing Automation execution that you want to send the signal to.
      SignalType:
        $ref: '#/definitions/[object Object]'
        description: 'The type of signal. Valid signal types include the following: Approve and Reject '
      Payload:
        $ref: '#/definitions/[object Object]'
        description: 'The data sent with the signal. The data schema depends on the type of signal used in the request. '
  AutomationStepNotFoundException: {}
  InvalidAutomationSignalException: {}
  SendCommandResult:
    type: object
    properties:
      Command:
        $ref: '#/definitions/[object Object]'
        description: The request as it was received by Systems Manager. Also provides the command ID which can be used future references to this request.
  SendCommandRequest:
    type: object
    required:
      - DocumentName
    properties:
      InstanceIds:
        $ref: '#/definitions/[object Object]'
        description: 'The instance IDs where the command should execute. You can specify a maximum of 50 IDs. If you prefer not to list individual instance IDs, you can instead send commands to a fleet of instances using the Targets parameter, which accepts EC2 tags. For more information about how to use targets, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.'
      Targets:
        $ref: '#/definitions/[object Object]'
        description: '(Optional) An array of search criteria that targets instances using a Key,Value combination that you specify. Targets is required if you don''t provide one or more instance IDs in the call. For more information about how to use targets, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.'
      DocumentName:
        $ref: '#/definitions/[object Object]'
        description: Required. The name of the Systems Manager document to execute. This can be a public document or a custom document.
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: '<p>The SSM document version to use in the request. You can specify $DEFAULT, $LATEST, or a specific version number. If you execute commands by using the AWS CLI, then you must escape the first two options by using a backslash. If you specify a version number, then you don''t need to use the backslash. For example:</p> <p>--document-version "\$DEFAULT"</p> <p>--document-version "\$LATEST"</p> <p>--document-version "3"</p>'
      DocumentHash:
        $ref: '#/definitions/[object Object]'
        description: <p>The Sha256 or Sha1 hash created by the system when the document was created. </p> <note> <p>Sha1 hashes have been deprecated.</p> </note>
      DocumentHashType:
        $ref: '#/definitions/[object Object]'
        description: <p>Sha256 or Sha1.</p> <note> <p>Sha1 hashes have been deprecated.</p> </note>
      TimeoutSeconds:
        $ref: '#/definitions/[object Object]'
        description: 'If this time is reached and the command has not already started executing, it will not run.'
      Comment:
        $ref: '#/definitions/[object Object]'
        description: 'User-specified information about the command, such as a brief description of what the command should do.'
      Parameters:
        $ref: '#/definitions/[object Object]'
        description: The required and optional parameters specified in the document being executed.
      OutputS3Region:
        $ref: '#/definitions/[object Object]'
        description: '(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.'
      OutputS3BucketName:
        $ref: '#/definitions/[object Object]'
        description: The name of the S3 bucket where command execution responses should be stored.
      OutputS3KeyPrefix:
        $ref: '#/definitions/[object Object]'
        description: The directory structure within the S3 bucket where the responses should be stored.
      MaxConcurrency:
        $ref: '#/definitions/[object Object]'
        description: '(Optional) The maximum number of instances that are allowed to execute the command at the same time. You can specify a number such as 10 or a percentage such as 10%. The default value is 50. For more information about how to use MaxConcurrency, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-velocity">Using Concurrency Controls</a> in the <i>AWS Systems Manager User Guide</i>.'
      MaxErrors:
        $ref: '#/definitions/[object Object]'
        description: 'The maximum number of errors allowed without the command failing. When the command fails one more time beyond the value of MaxErrors, the systems stops sending the command to additional targets. You can specify a number like 10 or a percentage like 10%. The default value is 0. For more information about how to use MaxErrors, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-maxerrors">Using Error Controls</a> in the <i>AWS Systems Manager User Guide</i>.'
      ServiceRoleArn:
        $ref: '#/definitions/[object Object]'
        description: 'The IAM role that Systems Manager uses to send notifications. '
      NotificationConfig:
        $ref: '#/definitions/[object Object]'
        description: Configurations for sending notifications.
      CloudWatchOutputConfig:
        $ref: '#/definitions/[object Object]'
        description: 'Enables Systems Manager to send Run Command output to Amazon CloudWatch Logs. '
  InvalidOutputFolder: {}
  InvalidRole: {}
  InvalidNotificationConfig: {}
  StartAssociationsOnceResult:
    type: object
    properties: {}
  StartAssociationsOnceRequest:
    type: object
    required:
      - AssociationIds
    properties:
      AssociationIds:
        $ref: '#/definitions/[object Object]'
        description: The association IDs that you want to execute immediately and only one time.
  InvalidAssociation: {}
  StartAutomationExecutionResult:
    type: object
    properties:
      AutomationExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The unique ID of a newly scheduled automation execution.
  StartAutomationExecutionRequest:
    type: object
    required:
      - DocumentName
    properties:
      DocumentName:
        $ref: '#/definitions/[object Object]'
        description: The name of the Automation document to use for this execution.
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: The version of the Automation document to use for this execution.
      Parameters:
        $ref: '#/definitions/[object Object]'
        description: 'A key-value map of execution parameters, which match the declared parameters in the Automation document.'
      ClientToken:
        $ref: '#/definitions/[object Object]'
        description: 'User-provided idempotency token. The token must be unique, is case insensitive, enforces the UUID format, and can''t be reused.'
      Mode:
        $ref: '#/definitions/[object Object]'
        description: 'The execution mode of the automation. Valid modes include the following: Auto and Interactive. The default mode is Auto.'
      TargetParameterName:
        $ref: '#/definitions/[object Object]'
        description: The name of the parameter used as the target resource for the rate-controlled execution. Required if you specify targets.
      Targets:
        $ref: '#/definitions/[object Object]'
        description: A key-value mapping to target resources. Required if you specify TargetParameterName.
      TargetMaps:
        $ref: '#/definitions/[object Object]'
        description: A key-value mapping of document parameters to target resources. Both Targets and TargetMaps cannot be specified together.
      MaxConcurrency:
        $ref: '#/definitions/[object Object]'
        description: 'The maximum number of targets allowed to run this task in parallel. You can specify a number, such as 10, or a percentage, such as 10%. The default value is 10.'
      MaxErrors:
        $ref: '#/definitions/[object Object]'
        description: '<p>The number of errors that are allowed before the system stops running the automation on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops running the automation when the fourth error is received. If you specify 0, then the system stops running the automation on additional targets after the first error result is returned. If you run an automation on 50 resources and set max-errors to 10%, then the system stops running the automation on additional targets when the sixth error is received.</p> <p>Executions that are already running an automation when max-errors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won''t be more than max-errors failed executions, set max-concurrency to 1 so the executions proceed one at a time.</p>'
      TargetLocations:
        $ref: '#/definitions/[object Object]'
        description: 'A location is a combination of AWS Regions and/or AWS accounts where you want to execute the Automation. Use this action to start an Automation in multiple Regions and multiple accounts. For more information, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-automation-multiple-accounts-and-regions.html">Concurrently Executing Automations in Multiple AWS Regions and Accounts</a> in the <i>AWS Systems Manager User Guide</i>. '
  AutomationDefinitionNotFoundException: {}
  InvalidAutomationExecutionParametersException: {}
  AutomationExecutionLimitExceededException: {}
  AutomationDefinitionVersionNotFoundException: {}
  StartSessionResponse:
    type: object
    properties:
      SessionId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the session.
      TokenValue:
        $ref: '#/definitions/[object Object]'
        description: An encrypted token value containing session and caller information. Used to authenticate the connection to the instance.
      StreamUrl:
        $ref: '#/definitions/[object Object]'
        description: '<p>A URL back to SSM Agent on the instance that the Session Manager client uses to send commands and receive output from the instance. Format: <code>wss://ssm-messages.<b>region</b>.amazonaws.com/v1/data-channel/<b>session-id</b>?stream=(input|output)</code> </p> <p> <b>region</b> represents the Region identifier for an AWS Region supported by AWS Systems Manager, such as <code>us-east-2</code> for the US East (Ohio) Region. For a list of supported <b>region</b> values, see the <b>Region</b> column in the <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#ssm_region">AWS Systems Manager table of regions and endpoints</a> in the <i>AWS General Reference</i>.</p> <p> <b>session-id</b> represents the ID of a Session Manager session, such as <code>1a2b3c4dEXAMPLE</code>.</p>'
  StartSessionRequest:
    type: object
    required:
      - Target
    properties:
      Target:
        $ref: '#/definitions/[object Object]'
        description: The instance to connect to for the session.
      DocumentName:
        $ref: '#/definitions/[object Object]'
        description: 'The name of the SSM document to define the parameters and plugin settings for the session. For example, <code>SSM-SessionManagerRunShell</code>. If no document name is provided, a shell to the instance is launched by default.'
      Parameters:
        $ref: '#/definitions/[object Object]'
        description: Reserved for future use.
  TargetNotConnected: {}
  StopAutomationExecutionResult:
    type: object
    properties: {}
  StopAutomationExecutionRequest:
    type: object
    required:
      - AutomationExecutionId
    properties:
      AutomationExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The execution ID of the Automation to stop.
      Type:
        $ref: '#/definitions/[object Object]'
        description: 'The stop request type. Valid types include the following: Cancel and Complete. The default type is Cancel.'
  InvalidAutomationStatusUpdateException: {}
  TerminateSessionResponse:
    type: object
    properties:
      SessionId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the session that has been terminated.
  TerminateSessionRequest:
    type: object
    required:
      - SessionId
    properties:
      SessionId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the session to terminate.
  UpdateAssociationResult:
    type: object
    properties:
      AssociationDescription:
        $ref: '#/definitions/[object Object]'
        description: The description of the association that was updated.
  UpdateAssociationRequest:
    type: object
    required:
      - AssociationId
    properties:
      AssociationId:
        $ref: '#/definitions/[object Object]'
        description: 'The ID of the association you want to update. '
      Parameters:
        $ref: '#/definitions/[object Object]'
        description: 'The parameters you want to update for the association. If you create a parameter using Parameter Store, you can reference the parameter using {{ssm:parameter-name}}'
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: 'The document version you want update for the association. '
      ScheduleExpression:
        $ref: '#/definitions/[object Object]'
        description: The cron expression used to schedule the association that you want to update.
      OutputLocation:
        $ref: '#/definitions/[object Object]'
        description: An Amazon S3 bucket where you want to store the results of this request.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the association document.
      Targets:
        $ref: '#/definitions/[object Object]'
        description: The targets of the association.
      AssociationName:
        $ref: '#/definitions/[object Object]'
        description: The name of the association that you want to update.
      AssociationVersion:
        $ref: '#/definitions/[object Object]'
        description: 'This parameter is provided for concurrency control purposes. You must specify the latest association version in the service. If you want to ensure that this request succeeds, either specify <code>$LATEST</code>, or omit this parameter.'
      MaxErrors:
        $ref: '#/definitions/[object Object]'
        description: '<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won''t be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>'
      MaxConcurrency:
        $ref: '#/definitions/[object Object]'
        description: '<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>'
      ComplianceSeverity:
        $ref: '#/definitions/[object Object]'
        description: The severity level to assign to the association.
  InvalidUpdate: {}
  AssociationVersionLimitExceeded: {}
  UpdateAssociationStatusResult:
    type: object
    properties:
      AssociationDescription:
        $ref: '#/definitions/[object Object]'
        description: Information about the association.
  UpdateAssociationStatusRequest:
    type: object
    required:
      - Name
      - InstanceId
      - AssociationStatus
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the Systems Manager document.
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the instance.
      AssociationStatus:
        $ref: '#/definitions/[object Object]'
        description: The association status.
  StatusUnchanged: {}
  UpdateDocumentResult:
    type: object
    properties:
      DocumentDescription:
        $ref: '#/definitions/[object Object]'
        description: A description of the document that was updated.
  UpdateDocumentRequest:
    type: object
    required:
      - Content
      - Name
    properties:
      Content:
        $ref: '#/definitions/[object Object]'
        description: A valid JSON or YAML string.
      Attachments:
        $ref: '#/definitions/[object Object]'
        description: A list of key and value pairs that describe attachments to a version of a document.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the document that you want to update.
      VersionName:
        $ref: '#/definitions/[object Object]'
        description: 'An optional field specifying the version of the artifact you are updating with the document. For example, "Release 12, Update 6". This value is unique across all versions of a document, and cannot be changed.'
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: The version of the document that you want to update.
      DocumentFormat:
        $ref: '#/definitions/[object Object]'
        description: Specify the document format for the new document version. Systems Manager supports JSON and YAML documents. JSON is the default format.
      TargetType:
        $ref: '#/definitions/[object Object]'
        description: Specify a new target type for the document.
  DocumentVersionLimitExceeded: {}
  DuplicateDocumentContent: {}
  DuplicateDocumentVersionName: {}
  UpdateDocumentDefaultVersionResult:
    type: object
    properties:
      Description:
        $ref: '#/definitions/[object Object]'
        description: The description of a custom document that you want to set as the default version.
  UpdateDocumentDefaultVersionRequest:
    type: object
    required:
      - Name
      - DocumentVersion
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of a custom document that you want to set as the default version.
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: The version of a custom document that you want to set as the default version.
  UpdateMaintenanceWindowResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the created Maintenance Window.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the Maintenance Window.
      Description:
        $ref: '#/definitions/[object Object]'
        description: An optional description of the update.
      StartDate:
        $ref: '#/definitions/[object Object]'
        description: 'The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become active. The Maintenance Window will not run before this specified time.'
      EndDate:
        $ref: '#/definitions/[object Object]'
        description: 'The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become inactive. The Maintenance Window will not run after this specified time.'
      Schedule:
        $ref: '#/definitions/[object Object]'
        description: The schedule of the Maintenance Window in the form of a cron or rate expression.
      ScheduleTimezone:
        $ref: '#/definitions/[object Object]'
        description: 'The time zone that the scheduled Maintenance Window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: "America/Los_Angeles", "etc/UTC", or "Asia/Seoul". For more information, see the <a href="https://www.iana.org/time-zones">Time Zone Database</a> on the IANA website.'
      Duration:
        $ref: '#/definitions/[object Object]'
        description: The duration of the Maintenance Window in hours.
      Cutoff:
        $ref: '#/definitions/[object Object]'
        description: The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.
      AllowUnassociatedTargets:
        $ref: '#/definitions/[object Object]'
        description: Whether targets must be registered with the Maintenance Window before tasks can be defined for those targets.
      Enabled:
        $ref: '#/definitions/[object Object]'
        description: Whether the Maintenance Window is enabled.
  UpdateMaintenanceWindowRequest:
    type: object
    required:
      - WindowId
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window to update.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the Maintenance Window.
      Description:
        $ref: '#/definitions/[object Object]'
        description: An optional description for the update request.
      StartDate:
        $ref: '#/definitions/[object Object]'
        description: 'The time zone that the scheduled Maintenance Window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: "America/Los_Angeles", "etc/UTC", or "Asia/Seoul". For more information, see the <a href="https://www.iana.org/time-zones">Time Zone Database</a> on the IANA website.'
      EndDate:
        $ref: '#/definitions/[object Object]'
        description: 'The date and time, in ISO-8601 Extended format, for when you want the Maintenance Window to become inactive. EndDate allows you to set a date and time in the future when the Maintenance Window will no longer run.'
      Schedule:
        $ref: '#/definitions/[object Object]'
        description: The schedule of the Maintenance Window in the form of a cron or rate expression.
      ScheduleTimezone:
        $ref: '#/definitions/[object Object]'
        description: 'The time zone that the scheduled Maintenance Window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: "America/Los_Angeles", "etc/UTC", or "Asia/Seoul". For more information, see the <a href="https://www.iana.org/time-zones">Time Zone Database</a> on the IANA website.'
      Duration:
        $ref: '#/definitions/[object Object]'
        description: The duration of the Maintenance Window in hours.
      Cutoff:
        $ref: '#/definitions/[object Object]'
        description: The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.
      AllowUnassociatedTargets:
        $ref: '#/definitions/[object Object]'
        description: Whether targets must be registered with the Maintenance Window before tasks can be defined for those targets.
      Enabled:
        $ref: '#/definitions/[object Object]'
        description: Whether the Maintenance Window is enabled.
      Replace:
        $ref: '#/definitions/[object Object]'
        description: 'If True, then all fields that are required by the CreateMaintenanceWindow action are also required for this API request. Optional fields that are not specified are set to null. '
  UpdateMaintenanceWindowTargetResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The Maintenance Window ID specified in the update request.
      WindowTargetId:
        $ref: '#/definitions/[object Object]'
        description: The target ID specified in the update request.
      Targets:
        $ref: '#/definitions/[object Object]'
        description: The updated targets.
      OwnerInformation:
        $ref: '#/definitions/[object Object]'
        description: The updated owner.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The updated name.
      Description:
        $ref: '#/definitions/[object Object]'
        description: The updated description.
  UpdateMaintenanceWindowTargetRequest:
    type: object
    required:
      - WindowId
      - WindowTargetId
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The Maintenance Window ID with which to modify the target.
      WindowTargetId:
        $ref: '#/definitions/[object Object]'
        description: The target ID to modify.
      Targets:
        $ref: '#/definitions/[object Object]'
        description: The targets to add or replace.
      OwnerInformation:
        $ref: '#/definitions/[object Object]'
        description: User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.
      Name:
        $ref: '#/definitions/[object Object]'
        description: A name for the update.
      Description:
        $ref: '#/definitions/[object Object]'
        description: An optional description for the update.
      Replace:
        $ref: '#/definitions/[object Object]'
        description: 'If True, then all fields that are required by the RegisterTargetWithMaintenanceWindow action are also required for this API request. Optional fields that are not specified are set to null.'
  UpdateMaintenanceWindowTaskResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window that was updated.
      WindowTaskId:
        $ref: '#/definitions/[object Object]'
        description: The task ID of the Maintenance Window that was updated.
      Targets:
        $ref: '#/definitions/[object Object]'
        description: The updated target values.
      TaskArn:
        $ref: '#/definitions/[object Object]'
        description: The updated task ARN value.
      ServiceRoleArn:
        $ref: '#/definitions/[object Object]'
        description: The updated service role ARN value.
      TaskParameters:
        $ref: '#/definitions/[object Object]'
        description: '<p>The updated parameter values.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>'
      TaskInvocationParameters:
        $ref: '#/definitions/[object Object]'
        description: The updated parameter values.
      Priority:
        $ref: '#/definitions/[object Object]'
        description: The updated priority value.
      MaxConcurrency:
        $ref: '#/definitions/[object Object]'
        description: The updated MaxConcurrency value.
      MaxErrors:
        $ref: '#/definitions/[object Object]'
        description: The updated MaxErrors value.
      LoggingInfo:
        $ref: '#/definitions/[object Object]'
        description: '<p>The updated logging information in Amazon S3.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>'
      Name:
        $ref: '#/definitions/[object Object]'
        description: The updated task name.
      Description:
        $ref: '#/definitions/[object Object]'
        description: The updated task description.
  UpdateMaintenanceWindowTaskRequest:
    type: object
    required:
      - WindowId
      - WindowTaskId
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The Maintenance Window ID that contains the task to modify.
      WindowTaskId:
        $ref: '#/definitions/[object Object]'
        description: The task ID to modify.
      Targets:
        $ref: '#/definitions/[object Object]'
        description: 'The targets (either instances or tags) to modify. Instances are specified using Key=instanceids,Values=instanceID_1,instanceID_2. Tags are specified using Key=tag_name,Values=tag_value. '
      TaskArn:
        $ref: '#/definitions/[object Object]'
        description: The task ARN to modify.
      ServiceRoleArn:
        $ref: '#/definitions/[object Object]'
        description: '<p>The IAM service role ARN to modify. The system assumes this role during task execution.</p> <p>If you do not specify a service role ARN, Systems Manager will use your account''s service-linked role for Systems Manager by default. If no service-linked role for Systems Manager exists in your account, it will be created when you run <code>RegisterTaskWithMaintenanceWindow</code> without specifying a service role ARN.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/using-service-linked-roles.html#slr-permissions">Service-Linked Role Permissions for Systems Manager</a> and <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-maintenance-permissions.html#maintenance-window-tasks-service-role">Should I Use a Service-Linked Role or a Custom Service Role to Run Maintenance Window Tasks? </a> in the <i>AWS Systems Manager User Guide</i>.</p>'
      TaskParameters:
        $ref: '#/definitions/[object Object]'
        description: '<p>The parameters to modify.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note> <p>The map has the following format:</p> <p>Key: string, between 1 and 255 characters</p> <p>Value: an array of strings, each string is between 1 and 255 characters</p>'
      TaskInvocationParameters:
        $ref: '#/definitions/[object Object]'
        description: The parameters that the task should use during execution. Populate only the fields that match the task type. All other fields should be empty.
      Priority:
        $ref: '#/definitions/[object Object]'
        description: 'The new task priority to specify. The lower the number, the higher the priority. Tasks that have the same priority are scheduled in parallel.'
      MaxConcurrency:
        $ref: '#/definitions/[object Object]'
        description: The new <code>MaxConcurrency</code> value you want to specify. <code>MaxConcurrency</code> is the number of targets that are allowed to run this task in parallel.
      MaxErrors:
        $ref: '#/definitions/[object Object]'
        description: The new <code>MaxErrors</code> value to specify. <code>MaxErrors</code> is the maximum number of errors that are allowed before the task stops being scheduled.
      LoggingInfo:
        $ref: '#/definitions/[object Object]'
        description: '<p>The new logging location in Amazon S3 to specify.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>'
      Name:
        $ref: '#/definitions/[object Object]'
        description: The new task name to specify.
      Description:
        $ref: '#/definitions/[object Object]'
        description: The new task description to specify.
      Replace:
        $ref: '#/definitions/[object Object]'
        description: 'If True, then all fields that are required by the RegisterTaskWithMaintenanceWndow action are also required for this API request. Optional fields that are not specified are set to null.'
  UpdateManagedInstanceRoleResult:
    type: object
    properties: {}
  UpdateManagedInstanceRoleRequest:
    type: object
    required:
      - InstanceId
      - IamRole
    properties:
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the managed instance where you want to update the role.
      IamRole:
        $ref: '#/definitions/[object Object]'
        description: The IAM role you want to assign or change.
  UpdatePatchBaselineResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the deleted patch baseline.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the patch baseline.
      OperatingSystem:
        $ref: '#/definitions/[object Object]'
        description: The operating system rule used by the updated patch baseline.
      GlobalFilters:
        $ref: '#/definitions/[object Object]'
        description: A set of global filters used to exclude patches from the baseline.
      ApprovalRules:
        $ref: '#/definitions/[object Object]'
        description: A set of rules used to include patches in the baseline.
      ApprovedPatches:
        $ref: '#/definitions/[object Object]'
        description: A list of explicitly approved patches for the baseline.
      ApprovedPatchesComplianceLevel:
        $ref: '#/definitions/[object Object]'
        description: The compliance severity level assigned to the patch baseline after the update completed.
      ApprovedPatchesEnableNonSecurity:
        $ref: '#/definitions/[object Object]'
        description: Indicates whether the list of approved patches includes non-security updates that should be applied to the instances. The default value is 'false'. Applies to Linux instances only.
      RejectedPatches:
        $ref: '#/definitions/[object Object]'
        description: A list of explicitly rejected patches for the baseline.
      RejectedPatchesAction:
        $ref: '#/definitions/[object Object]'
        description: 'The action specified to take on patches included in the RejectedPatches list. A patch can be allowed only if it is a dependency of another package, or blocked entirely along with packages that include it as a dependency.'
      CreatedDate:
        $ref: '#/definitions/[object Object]'
        description: The date when the patch baseline was created.
      ModifiedDate:
        $ref: '#/definitions/[object Object]'
        description: The date when the patch baseline was last modified.
      Description:
        $ref: '#/definitions/[object Object]'
        description: A description of the Patch Baseline.
      Sources:
        $ref: '#/definitions/[object Object]'
        description: 'Information about the patches to use to update the instances, including target operating systems and source repositories. Applies to Linux instances only.'
  UpdatePatchBaselineRequest:
    type: object
    required:
      - BaselineId
    properties:
      BaselineId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the patch baseline to update.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the patch baseline.
      GlobalFilters:
        $ref: '#/definitions/[object Object]'
        description: A set of global filters used to exclude patches from the baseline.
      ApprovalRules:
        $ref: '#/definitions/[object Object]'
        description: A set of rules used to include patches in the baseline.
      ApprovedPatches:
        $ref: '#/definitions/[object Object]'
        description: '<p>A list of explicitly approved patches for the baseline.</p> <p>For information about accepted formats for lists of approved patches and rejected patches, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html">Package Name Formats for Approved and Rejected Patch Lists</a> in the <i>AWS Systems Manager User Guide</i>.</p>'
      ApprovedPatchesComplianceLevel:
        $ref: '#/definitions/[object Object]'
        description: Assigns a new compliance severity level to an existing patch baseline.
      ApprovedPatchesEnableNonSecurity:
        $ref: '#/definitions/[object Object]'
        description: Indicates whether the list of approved patches includes non-security updates that should be applied to the instances. The default value is 'false'. Applies to Linux instances only.
      RejectedPatches:
        $ref: '#/definitions/[object Object]'
        description: '<p>A list of explicitly rejected patches for the baseline.</p> <p>For information about accepted formats for lists of approved patches and rejected patches, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html">Package Name Formats for Approved and Rejected Patch Lists</a> in the <i>AWS Systems Manager User Guide</i>.</p>'
      RejectedPatchesAction:
        $ref: '#/definitions/[object Object]'
        description: '<p>The action for Patch Manager to take on patches included in the RejectedPackages list.</p> <ul> <li> <p> <b>ALLOW_AS_DEPENDENCY</b>: A package in the Rejected patches list is installed only if it is a dependency of another package. It is considered compliant with the patch baseline, and its status is reported as <i>InstalledOther</i>. This is the default action if no option is specified.</p> </li> <li> <p> <b>BLOCK</b>: Packages in the RejectedPatches list, and packages that include them as dependencies, are not installed under any circumstances. If a package was installed before it was added to the Rejected patches list, it is considered non-compliant with the patch baseline, and its status is reported as <i>InstalledRejected</i>.</p> </li> </ul>'
      Description:
        $ref: '#/definitions/[object Object]'
        description: A description of the patch baseline.
      Sources:
        $ref: '#/definitions/[object Object]'
        description: 'Information about the patches to use to update the instances, including target operating systems and source repositories. Applies to Linux instances only.'
      Replace:
        $ref: '#/definitions/[object Object]'
        description: 'If True, then all fields that are required by the CreatePatchBaseline action are also required for this API request. Optional fields that are not specified are set to null.'
  Account:
    type: string
  AccountId:
    type: string
    pattern: '\(\?i\)all\|[0-9]\{12\}'
  '[object Object]': {}
  AccountIdList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    maxItems: 20
  Accounts:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 50
  Activation:
    type: object
    properties:
      ActivationId:
        $ref: '#/definitions/[object Object]'
        description: The ID created by Systems Manager when you submitted the activation.
      Description:
        $ref: '#/definitions/[object Object]'
        description: A user defined description of the activation.
      DefaultInstanceName:
        $ref: '#/definitions/[object Object]'
        description: A name for the managed instance when it is created.
      IamRole:
        $ref: '#/definitions/[object Object]'
        description: The Amazon Identity and Access Management (IAM) role to assign to the managed instance.
      RegistrationLimit:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of managed instances that can be registered using this activation.
      RegistrationsCount:
        $ref: '#/definitions/[object Object]'
        description: The number of managed instances already registered with this activation.
      ExpirationDate:
        $ref: '#/definitions/[object Object]'
        description: The date when this activation can no longer be used to register managed instances.
      Expired:
        $ref: '#/definitions/[object Object]'
        description: Whether or not the activation is expired.
      CreatedDate:
        $ref: '#/definitions/[object Object]'
        description: The date the activation was created.
    description: An activation registers one or more on-premises servers or virtual machines (VMs) with AWS so that you can configure those servers or VMs using Run Command. A server or VM that has been registered with AWS is called a managed instance.
  ActivationCode:
    type: string
    minLength: 20
    maxLength: 250
  ActivationDescription:
    type: string
    minLength: 0
    maxLength: 256
  ActivationId:
    type: string
    pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
  ActivationList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  AgentErrorCode:
    type: string
    maxLength: 10
  AggregatorSchemaOnly:
    type: boolean
  AllowedPattern:
    type: string
    minLength: 0
    maxLength: 1024
  ApproveAfterDays:
    type: integer
    minimum: 0
    maximum: 100
  Association:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the Systems Manager document.
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the instance.
      AssociationId:
        $ref: '#/definitions/[object Object]'
        description: The ID created by the system when you create an association. An association is a binding between a document and a set of targets with a schedule.
      AssociationVersion:
        $ref: '#/definitions/[object Object]'
        description: The association version.
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: The version of the document used in the association.
      Targets:
        $ref: '#/definitions/[object Object]'
        description: 'The instances targeted by the request to create an association. '
      LastExecutionDate:
        $ref: '#/definitions/[object Object]'
        description: The date on which the association was last run.
      Overview:
        $ref: '#/definitions/[object Object]'
        description: Information about the association.
      ScheduleExpression:
        $ref: '#/definitions/[object Object]'
        description: A cron expression that specifies a schedule when the association runs.
      AssociationName:
        $ref: '#/definitions/[object Object]'
        description: The association name.
    description: Describes an association of a Systems Manager document and an instance.
  AssociationComplianceSeverity:
    type: string
    enum:
      - CRITICAL
      - HIGH
      - MEDIUM
      - LOW
      - UNSPECIFIED
  AssociationDescription:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the Systems Manager document.
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the instance.
      AssociationVersion:
        $ref: '#/definitions/[object Object]'
        description: The association version.
      Date:
        $ref: '#/definitions/[object Object]'
        description: The date when the association was made.
      LastUpdateAssociationDate:
        $ref: '#/definitions/[object Object]'
        description: The date when the association was last updated.
      Status:
        $ref: '#/definitions/[object Object]'
        description: The association status.
      Overview:
        $ref: '#/definitions/[object Object]'
        description: Information about the association.
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: The document version.
      Parameters:
        $ref: '#/definitions/[object Object]'
        description: 'A description of the parameters for a document. '
      AssociationId:
        $ref: '#/definitions/[object Object]'
        description: The association ID.
      Targets:
        $ref: '#/definitions/[object Object]'
        description: 'The instances targeted by the request. '
      ScheduleExpression:
        $ref: '#/definitions/[object Object]'
        description: A cron expression that specifies a schedule when the association runs.
      OutputLocation:
        $ref: '#/definitions/[object Object]'
        description: An Amazon S3 bucket where you want to store the output details of the request.
      LastExecutionDate:
        $ref: '#/definitions/[object Object]'
        description: The date on which the association was last run.
      LastSuccessfulExecutionDate:
        $ref: '#/definitions/[object Object]'
        description: The last date on which the association was successfully run.
      AssociationName:
        $ref: '#/definitions/[object Object]'
        description: The association name.
      MaxErrors:
        $ref: '#/definitions/[object Object]'
        description: '<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won''t be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>'
      MaxConcurrency:
        $ref: '#/definitions/[object Object]'
        description: '<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>'
      ComplianceSeverity:
        $ref: '#/definitions/[object Object]'
        description: The severity level that is assigned to the association.
    description: Describes the parameters for a document.
  AssociationDescriptionList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  AssociationExecution:
    type: object
    properties:
      AssociationId:
        $ref: '#/definitions/[object Object]'
        description: The association ID.
      AssociationVersion:
        $ref: '#/definitions/[object Object]'
        description: The association version.
      ExecutionId:
        $ref: '#/definitions/[object Object]'
        description: 'The execution ID for the association. If the association does not run at intervals or according to a schedule, then the ExecutionID is the same as the AssociationID.'
      Status:
        $ref: '#/definitions/[object Object]'
        description: The status of the association execution.
      DetailedStatus:
        $ref: '#/definitions/[object Object]'
        description: Detailed status information about the execution.
      CreatedTime:
        $ref: '#/definitions/[object Object]'
        description: The time the execution started.
      LastExecutionDate:
        $ref: '#/definitions/[object Object]'
        description: The date of the last execution.
      ResourceCountByStatus:
        $ref: '#/definitions/[object Object]'
        description: An aggregate status of the resources in the execution based on the status type.
    description: Includes information about the specified association.
  AssociationExecutionFilter:
    type: object
    required:
      - Key
      - Value
      - Type
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: The key value used in the request.
      Value:
        $ref: '#/definitions/[object Object]'
        description: The value specified for the key.
      Type:
        $ref: '#/definitions/[object Object]'
        description: The filter type specified in the request.
    description: Filters used in the request.
  AssociationExecutionFilterKey:
    type: string
    enum:
      - ExecutionId
      - Status
      - CreatedTime
  AssociationExecutionFilterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
  AssociationExecutionFilterValue:
    type: string
    minLength: 1
  AssociationExecutionId:
    type: string
    pattern: '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
  AssociationExecutionTarget:
    type: object
    properties:
      AssociationId:
        $ref: '#/definitions/[object Object]'
        description: The association ID.
      AssociationVersion:
        $ref: '#/definitions/[object Object]'
        description: The association version.
      ExecutionId:
        $ref: '#/definitions/[object Object]'
        description: 'The execution ID. If the association does not run at intervals or according to a schedule, then the ExecutionID is the same as the AssociationID.'
      ResourceId:
        $ref: '#/definitions/[object Object]'
        description: 'The resource ID, for example, the instance ID where the association ran.'
      ResourceType:
        $ref: '#/definitions/[object Object]'
        description: 'The resource type, for example, instance.'
      Status:
        $ref: '#/definitions/[object Object]'
        description: The association execution status.
      DetailedStatus:
        $ref: '#/definitions/[object Object]'
        description: Detailed information about the execution status.
      LastExecutionDate:
        $ref: '#/definitions/[object Object]'
        description: The date of the last execution.
      OutputSource:
        $ref: '#/definitions/[object Object]'
        description: The location where the association details are saved.
    description: Includes information about the specified association execution.
  AssociationExecutionTargetsFilter:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: The key value used in the request.
      Value:
        $ref: '#/definitions/[object Object]'
        description: The value specified for the key.
    description: Filters for the association execution.
  AssociationExecutionTargetsFilterKey:
    type: string
    enum:
      - Status
      - ResourceId
      - ResourceType
  AssociationExecutionTargetsFilterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
  AssociationExecutionTargetsFilterValue:
    type: string
    minLength: 1
  AssociationExecutionTargetsList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  AssociationExecutionsList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  AssociationFilter:
    type: object
    required:
      - key
      - value
    properties:
      key:
        $ref: '#/definitions/[object Object]'
        description: The name of the filter.
      value:
        $ref: '#/definitions/[object Object]'
        description: The filter value.
    description: Describes a filter.
  AssociationFilterKey:
    type: string
    enum:
      - InstanceId
      - Name
      - AssociationId
      - AssociationStatusName
      - LastExecutedBefore
      - LastExecutedAfter
      - AssociationName
  AssociationFilterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
  AssociationFilterOperatorType:
    type: string
    enum:
      - EQUAL
      - LESS_THAN
      - GREATER_THAN
  AssociationFilterValue:
    type: string
    minLength: 1
  AssociationId:
    type: string
    pattern: '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
  AssociationIdList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 10
  AssociationList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  AssociationName:
    type: string
    pattern: '^[a-zA-Z0-9_\-.]{3,128}$'
  AssociationOverview:
    type: object
    properties:
      Status:
        $ref: '#/definitions/[object Object]'
        description: 'The status of the association. Status can be: Pending, Success, or Failed.'
      DetailedStatus:
        $ref: '#/definitions/[object Object]'
        description: A detailed status of the association.
      AssociationStatusAggregatedCount:
        $ref: '#/definitions/[object Object]'
        description: 'Returns the number of targets for the association status. For example, if you created an association with two instances, and one of them was successful, this would return the count of instances by status.'
    description: Information about the association.
  AssociationResourceId:
    type: string
    minLength: 1
    maxLength: 100
  AssociationResourceType:
    type: string
    minLength: 1
    maxLength: 50
  AssociationStatus:
    type: object
    required:
      - Date
      - Name
      - Message
    properties:
      Date:
        $ref: '#/definitions/[object Object]'
        description: The date when the status changed.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The status.
      Message:
        $ref: '#/definitions/[object Object]'
        description: The reason for the status.
      AdditionalInfo:
        $ref: '#/definitions/[object Object]'
        description: A user-defined string.
    description: Describes an association status.
  StatusName:
    type: string
  InstanceCount:
    type: integer
  AssociationStatusAggregatedCount:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/StatusName'
        value:
          $ref: '#/definitions/InstanceCount'
  AssociationStatusName:
    type: string
    enum:
      - Pending
      - Success
      - Failed
  AssociationVersion:
    type: string
    pattern: '([$]LATEST)|([1-9][0-9]*)'
  AssociationVersionInfo:
    type: object
    properties:
      AssociationId:
        $ref: '#/definitions/[object Object]'
        description: The ID created by the system when the association was created.
      AssociationVersion:
        $ref: '#/definitions/[object Object]'
        description: The association version.
      CreatedDate:
        $ref: '#/definitions/[object Object]'
        description: The date the association version was created.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name specified when the association was created.
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: The version of a Systems Manager document used when the association version was created.
      Parameters:
        $ref: '#/definitions/[object Object]'
        description: Parameters specified when the association version was created.
      Targets:
        $ref: '#/definitions/[object Object]'
        description: 'The targets specified for the association when the association version was created. '
      ScheduleExpression:
        $ref: '#/definitions/[object Object]'
        description: The cron or rate schedule specified for the association when the association version was created.
      OutputLocation:
        $ref: '#/definitions/[object Object]'
        description: The location in Amazon S3 specified for the association when the association version was created.
      AssociationName:
        $ref: '#/definitions/[object Object]'
        description: The name specified for the association version when the association version was created.
      MaxErrors:
        $ref: '#/definitions/[object Object]'
        description: '<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won''t be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>'
      MaxConcurrency:
        $ref: '#/definitions/[object Object]'
        description: '<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>'
      ComplianceSeverity:
        $ref: '#/definitions/[object Object]'
        description: The severity level that is assigned to the association.
    description: Information about the association version.
  AssociationVersionList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
  AttachmentContent:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of an attachment.
      Size:
        $ref: '#/definitions/[object Object]'
        description: The size of an attachment in bytes.
      Hash:
        $ref: '#/definitions/[object Object]'
        description: The cryptographic hash value of the document content.
      HashType:
        $ref: '#/definitions/[object Object]'
        description: The hash algorithm used to calculate the hash value.
      Url:
        $ref: '#/definitions/[object Object]'
        description: The URL location of the attachment content.
    description: A structure that includes attributes that describe a document attachment.
  AttachmentContentList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  AttachmentHash:
    type: string
    maxLength: 256
  AttachmentHashType:
    type: string
    enum:
      - Sha256
  AttachmentInformation:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
    description: 'An attribute of an attachment, such as the attachment name or size.'
  AttachmentInformationList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  AttachmentName:
    type: string
    pattern: '^[a-zA-Z0-9_\-.]{3,128}$'
  AttachmentUrl:
    type: string
  AttachmentsSource:
    type: object
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: The key of a key and value pair that identifies the location of an attachment to a document.
      Values:
        $ref: '#/definitions/[object Object]'
        description: 'The URL of the location of a document attachment, such as the URL of an Amazon S3 bucket.'
    description: A key and value pair that identifies the location of an attachment to a document.
  AttachmentsSourceKey:
    type: string
    enum:
      - SourceUrl
  AttachmentsSourceList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 0
    maxItems: 1
  AttachmentsSourceValue:
    type: string
    minLength: 1
    maxLength: 1024
  AttachmentsSourceValues:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 1
  AttributeName:
    type: string
    minLength: 1
    maxLength: 64
  AttributeValue:
    type: string
    minLength: 0
    maxLength: 4096
  AutomationActionName:
    type: string
    pattern: '^aws:[a-zA-Z]{3,25}$'
  AutomationExecution:
    type: object
    properties:
      AutomationExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The execution ID.
      DocumentName:
        $ref: '#/definitions/[object Object]'
        description: The name of the Automation document used during the execution.
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: The version of the document to use during execution.
      ExecutionStartTime:
        $ref: '#/definitions/[object Object]'
        description: The time the execution started.
      ExecutionEndTime:
        $ref: '#/definitions/[object Object]'
        description: The time the execution finished.
      AutomationExecutionStatus:
        $ref: '#/definitions/[object Object]'
        description: The execution status of the Automation.
      StepExecutions:
        $ref: '#/definitions/[object Object]'
        description: A list of details about the current state of all steps that comprise an execution. An Automation document contains a list of steps that are executed in order.
      StepExecutionsTruncated:
        $ref: '#/definitions/[object Object]'
        description: 'A boolean value that indicates if the response contains the full list of the Automation step executions. If true, use the DescribeAutomationStepExecutions API action to get the full list of step executions.'
      Parameters:
        $ref: '#/definitions/[object Object]'
        description: 'The key-value map of execution parameters, which were supplied when calling StartAutomationExecution.'
      Outputs:
        $ref: '#/definitions/[object Object]'
        description: The list of execution outputs as defined in the automation document.
      FailureMessage:
        $ref: '#/definitions/[object Object]'
        description: 'A message describing why an execution has failed, if the status is set to Failed.'
      Mode:
        $ref: '#/definitions/[object Object]'
        description: The automation execution mode.
      ParentAutomationExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The AutomationExecutionId of the parent automation.
      ExecutedBy:
        $ref: '#/definitions/[object Object]'
        description: The Amazon Resource Name (ARN) of the user who executed the automation.
      CurrentStepName:
        $ref: '#/definitions/[object Object]'
        description: The name of the currently executing step.
      CurrentAction:
        $ref: '#/definitions/[object Object]'
        description: The action of the currently executing step.
      TargetParameterName:
        $ref: '#/definitions/[object Object]'
        description: The parameter name.
      Targets:
        $ref: '#/definitions/[object Object]'
        description: The specified targets.
      TargetMaps:
        $ref: '#/definitions/[object Object]'
        description: The specified key-value mapping of document parameters to target resources.
      ResolvedTargets:
        $ref: '#/definitions/[object Object]'
        description: A list of resolved targets in the rate control execution.
      MaxConcurrency:
        $ref: '#/definitions/[object Object]'
        description: The MaxConcurrency value specified by the user when the execution started.
      MaxErrors:
        $ref: '#/definitions/[object Object]'
        description: The MaxErrors value specified by the user when the execution started.
      Target:
        $ref: '#/definitions/[object Object]'
        description: The target of the execution.
      TargetLocations:
        $ref: '#/definitions/[object Object]'
        description: The combination of AWS Regions and/or AWS accounts where you want to execute the Automation.
      ProgressCounters:
        $ref: '#/definitions/[object Object]'
        description: An aggregate of step execution statuses displayed in the AWS Console for a multi-Region and multi-account Automation execution.
    description: Detailed information about the current state of an individual Automation execution.
  AutomationExecutionFilter:
    type: object
    required:
      - Key
      - Values
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: 'One or more keys to limit the results. Valid filter keys include the following: DocumentNamePrefix, ExecutionStatus, ExecutionId, ParentExecutionId, CurrentAction, StartTimeBefore, StartTimeAfter.'
      Values:
        $ref: '#/definitions/[object Object]'
        description: The values used to limit the execution information associated with the filter's key.
    description: A filter used to match specific automation executions. This is used to limit the scope of Automation execution information returned.
  AutomationExecutionFilterKey:
    type: string
    enum:
      - DocumentNamePrefix
      - ExecutionStatus
      - ExecutionId
      - ParentExecutionId
      - CurrentAction
      - StartTimeBefore
      - StartTimeAfter
      - AutomationType
  AutomationExecutionFilterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 10
  AutomationExecutionFilterValue:
    type: string
    minLength: 1
    maxLength: 150
  AutomationExecutionFilterValueList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 10
  AutomationExecutionId:
    type: string
    minLength: 36
    maxLength: 36
  AutomationExecutionMetadata:
    type: object
    properties:
      AutomationExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The execution ID.
      DocumentName:
        $ref: '#/definitions/[object Object]'
        description: The name of the Automation document used during execution.
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: The document version used during the execution.
      AutomationExecutionStatus:
        $ref: '#/definitions/[object Object]'
        description: 'The status of the execution. Valid values include: Running, Succeeded, Failed, Timed out, or Cancelled.'
      ExecutionStartTime:
        $ref: '#/definitions/[object Object]'
        description: The time the execution started.&gt;
      ExecutionEndTime:
        $ref: '#/definitions/[object Object]'
        description: The time the execution finished. This is not populated if the execution is still in progress.
      ExecutedBy:
        $ref: '#/definitions/[object Object]'
        description: The IAM role ARN of the user who executed the Automation.
      LogFile:
        $ref: '#/definitions/[object Object]'
        description: An Amazon S3 bucket where execution information is stored.
      Outputs:
        $ref: '#/definitions/[object Object]'
        description: The list of execution outputs as defined in the Automation document.
      Mode:
        $ref: '#/definitions/[object Object]'
        description: The Automation execution mode.
      ParentAutomationExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The ExecutionId of the parent Automation.
      CurrentStepName:
        $ref: '#/definitions/[object Object]'
        description: The name of the currently executing step.
      CurrentAction:
        $ref: '#/definitions/[object Object]'
        description: The action of the currently executing step.
      FailureMessage:
        $ref: '#/definitions/[object Object]'
        description: The list of execution outputs as defined in the Automation document.
      TargetParameterName:
        $ref: '#/definitions/[object Object]'
        description: The list of execution outputs as defined in the Automation document.
      Targets:
        $ref: '#/definitions/[object Object]'
        description: The targets defined by the user when starting the Automation.
      TargetMaps:
        $ref: '#/definitions/[object Object]'
        description: The specified key-value mapping of document parameters to target resources.
      ResolvedTargets:
        $ref: '#/definitions/[object Object]'
        description: A list of targets that resolved during the execution.
      MaxConcurrency:
        $ref: '#/definitions/[object Object]'
        description: The MaxConcurrency value specified by the user when starting the Automation.
      MaxErrors:
        $ref: '#/definitions/[object Object]'
        description: The MaxErrors value specified by the user when starting the Automation.
      Target:
        $ref: '#/definitions/[object Object]'
        description: The list of execution outputs as defined in the Automation document.
      AutomationType:
        $ref: '#/definitions/[object Object]'
        description: 'Use this filter with <a>DescribeAutomationExecution</a>. Specify either Local of CrossAccount. CrossAccount is an Automation that executes in multiple AWS Regions and accounts. For more information, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-automation-multiple-accounts-and-regions.html">Concurrently Executing Automations in Multiple AWS Regions and Accounts</a> in the <i>AWS Systems Manager User Guide</i>. '
    description: Details about a specific Automation execution.
  AutomationExecutionMetadataList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  AutomationExecutionStatus:
    type: string
    enum:
      - Pending
      - InProgress
      - Waiting
      - Success
      - TimedOut
      - Cancelling
      - Cancelled
      - Failed
  AutomationParameterKey:
    type: string
    minLength: 1
    maxLength: 30
  AutomationParameterValueList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 0
    maxItems: 10
  AutomationParameterMap:
    type: array
    minItems: 1
    maxItems: 200
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AutomationParameterKey'
        value:
          $ref: '#/definitions/AutomationParameterValueList'
  AutomationParameterValue:
    type: string
    minLength: 1
    maxLength: 512
  AutomationType:
    type: string
    enum:
      - CrossAccount
      - Local
  BaselineDescription:
    type: string
    minLength: 1
    maxLength: 1024
  BaselineId:
    type: string
    pattern: '^[a-zA-Z0-9_\-:/]{20,128}$'
    minLength: 20
    maxLength: 128
  BaselineName:
    type: string
    pattern: '^[a-zA-Z0-9_\-.]{3,128}$'
    minLength: 3
    maxLength: 128
  BatchErrorMessage:
    type: string
  Boolean:
    type: boolean
  ClientToken:
    type: string
    minLength: 1
    maxLength: 64
  CloudWatchLogGroupName:
    type: string
    pattern: '[\.\-_/#A-Za-z0-9]+'
    minLength: 1
    maxLength: 512
  CloudWatchOutputConfig:
    type: object
    properties:
      CloudWatchLogGroupName:
        $ref: '#/definitions/[object Object]'
        description: 'The name of the CloudWatch log group where you want to send command output. If you don''t specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/<i>SystemsManagerDocumentName</i>.'
      CloudWatchOutputEnabled:
        $ref: '#/definitions/[object Object]'
        description: Enables Systems Manager to send command output to CloudWatch Logs.
    description: Configuration options for sending command output to CloudWatch Logs.
  CloudWatchOutputEnabled:
    type: boolean
  Command:
    type: object
    properties:
      CommandId:
        $ref: '#/definitions/[object Object]'
        description: A unique identifier for this command.
      DocumentName:
        $ref: '#/definitions/[object Object]'
        description: The name of the document requested for execution.
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: The SSM document version.
      Comment:
        $ref: '#/definitions/[object Object]'
        description: 'User-specified information about the command, such as a brief description of what the command should do.'
      ExpiresAfter:
        $ref: '#/definitions/[object Object]'
        description: 'If this time is reached and the command has not already started executing, it will not run. Calculated based on the ExpiresAfter user input provided as part of the SendCommand API.'
      Parameters:
        $ref: '#/definitions/[object Object]'
        description: The parameter values to be inserted in the document when executing the command.
      InstanceIds:
        $ref: '#/definitions/[object Object]'
        description: The instance IDs against which this command was requested.
      Targets:
        $ref: '#/definitions/[object Object]'
        description: 'An array of search criteria that targets instances using a Key,Value combination that you specify. Targets is required if you don''t provide one or more instance IDs in the call.'
      RequestedDateTime:
        $ref: '#/definitions/[object Object]'
        description: The date and time the command was requested.
      Status:
        $ref: '#/definitions/[object Object]'
        description: The status of the command.
      StatusDetails:
        $ref: '#/definitions/[object Object]'
        description: '<p>A detailed status of the command execution. StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to any instances.</p> </li> <li> <p>In Progress: The command has been sent to at least one instance but has not reached a final state on all instances.</p> </li> <li> <p>Success: The command successfully executed on all invocations. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The value of MaxErrors or more command invocations shows a status of Delivery Timed Out. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: The value of MaxErrors or more command invocations shows a status of Execution Timed Out. This is a terminal state.</p> </li> <li> <p>Failed: The value of MaxErrors or more command invocations shows a status of Failed. This is a terminal state.</p> </li> <li> <p>Incomplete: The command was attempted on all instances and one or more invocations does not have a value of Success but not enough invocations failed for the status to be Failed. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Rate Exceeded: The number of instances targeted by the command exceeded the account limit for pending invocations. The system has canceled the command before executing it on any instance. This is a terminal state.</p> </li> </ul>'
      OutputS3Region:
        $ref: '#/definitions/[object Object]'
        description: '(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.'
      OutputS3BucketName:
        $ref: '#/definitions/[object Object]'
        description: The S3 bucket where the responses to the command executions should be stored. This was requested when issuing the command.
      OutputS3KeyPrefix:
        $ref: '#/definitions/[object Object]'
        description: The S3 directory path inside the bucket where the responses to the command executions should be stored. This was requested when issuing the command.
      MaxConcurrency:
        $ref: '#/definitions/[object Object]'
        description: 'The maximum number of instances that are allowed to execute the command at the same time. You can specify a number of instances, such as 10, or a percentage of instances, such as 10%. The default value is 50. For more information about how to use MaxConcurrency, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html">Executing Commands Using Systems Manager Run Command</a> in the <i>AWS Systems Manager User Guide</i>.'
      MaxErrors:
        $ref: '#/definitions/[object Object]'
        description: 'The maximum number of errors allowed before the system stops sending the command to additional targets. You can specify a number of errors, such as 10, or a percentage or errors, such as 10%. The default value is 0. For more information about how to use MaxErrors, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html">Executing Commands Using Systems Manager Run Command</a> in the <i>AWS Systems Manager User Guide</i>.'
      TargetCount:
        $ref: '#/definitions/[object Object]'
        description: The number of targets for the command.
      CompletedCount:
        $ref: '#/definitions/[object Object]'
        description: 'The number of targets for which the command invocation reached a terminal state. Terminal states include the following: Success, Failed, Execution Timed Out, Delivery Timed Out, Canceled, Terminated, or Undeliverable.'
      ErrorCount:
        $ref: '#/definitions/[object Object]'
        description: The number of targets for which the status is Failed or Execution Timed Out.
      DeliveryTimedOutCount:
        $ref: '#/definitions/[object Object]'
        description: The number of targets for which the status is Delivery Timed Out.
      ServiceRole:
        $ref: '#/definitions/[object Object]'
        description: 'The IAM service role that Run Command uses to act on your behalf when sending notifications about command status changes. '
      NotificationConfig:
        $ref: '#/definitions/[object Object]'
        description: 'Configurations for sending notifications about command status changes. '
      CloudWatchOutputConfig:
        $ref: '#/definitions/[object Object]'
        description: CloudWatch Logs information where you want Systems Manager to send the command output.
    description: Describes a command request.
  CommandFilter:
    type: object
    required:
      - key
      - value
    properties:
      key:
        $ref: '#/definitions/[object Object]'
        description: The name of the filter.
      value:
        $ref: '#/definitions/[object Object]'
        description: '<p>The filter value. Valid values for each filter key are as follows:</p> <ul> <li> <p> <b>InvokedAfter</b>: Specify a timestamp to limit your results. For example, specify <code>2018-07-07T00:00:00Z</code> to see a list of command executions occurring July 7, 2018, and later.</p> </li> <li> <p> <b>InvokedBefore</b>: Specify a timestamp to limit your results. For example, specify <code>2018-07-07T00:00:00Z</code> to see a list of command executions from before July 7, 2018.</p> </li> <li> <p> <b>Status</b>: Specify a valid command status to see a list of all command executions with that status. Status values you can specify include:</p> <ul> <li> <p> <code>Pending</code> </p> </li> <li> <p> <code>InProgress</code> </p> </li> <li> <p> <code>Success</code> </p> </li> <li> <p> <code>Cancelled</code> </p> </li> <li> <p> <code>Failed</code> </p> </li> <li> <p> <code>TimedOut</code> </p> </li> <li> <p> <code>Cancelling</code> </p> </li> </ul> </li> <li> <p> <b>DocumentName</b>: Specify name of the SSM document for which you want to see command execution results. For example, specify <code>AWS-RunPatchBaseline</code> to see command executions that used this SSM document to perform security patching operations on instances. </p> </li> <li> <p> <b>ExecutionStage</b>: Specify one of the following values:</p> <ul> <li> <p> <code>Executing</code>: Returns a list of command executions that are currently still running.</p> </li> <li> <p> <code>Complete</code>: Returns a list of command executions that have already completed. </p> </li> </ul> </li> </ul>'
    description: Describes a command filter.
  CommandFilterKey:
    type: string
    enum:
      - InvokedAfter
      - InvokedBefore
      - Status
      - ExecutionStage
      - DocumentName
  CommandFilterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 5
  CommandFilterValue:
    type: string
    minLength: 1
    maxLength: 128
  CommandId:
    type: string
    minLength: 36
    maxLength: 36
  CommandInvocation:
    type: object
    properties:
      CommandId:
        $ref: '#/definitions/[object Object]'
        description: The command against which this invocation was requested.
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: The instance ID in which this invocation was requested.
      InstanceName:
        $ref: '#/definitions/[object Object]'
        description: 'The name of the invocation target. For Amazon EC2 instances this is the value for the aws:Name tag. For on-premises instances, this is the name of the instance.'
      Comment:
        $ref: '#/definitions/[object Object]'
        description: 'User-specified information about the command, such as a brief description of what the command should do.'
      DocumentName:
        $ref: '#/definitions/[object Object]'
        description: The document name that was requested for execution.
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: The SSM document version.
      RequestedDateTime:
        $ref: '#/definitions/[object Object]'
        description: The time and date the request was sent to this instance.
      Status:
        $ref: '#/definitions/[object Object]'
        description: 'Whether or not the invocation succeeded, failed, or is pending.'
      StatusDetails:
        $ref: '#/definitions/[object Object]'
        description: '<p>A detailed status of the command execution for each invocation (each instance targeted by the command). StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to the instance.</p> </li> <li> <p>In Progress: The command has been sent to the instance but has not reached a terminal state.</p> </li> <li> <p>Success: The execution of the command or plugin was successfully completed. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The command was not delivered to the instance before the delivery timeout expired. Delivery timeouts do not count against the parent command''s MaxErrors limit, but they do contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: Command execution started on the instance, but the execution was not complete before the execution timeout expired. Execution timeouts count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Failed: The command was not successful on the instance. For a plugin, this indicates that the result code was not zero. For a command invocation, this indicates that the result code for one or more plugins was not zero. Invocation failures count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Undeliverable: The command can''t be delivered to the instance. The instance might not exist or might not be responding. Undeliverable invocations don''t count against the parent command''s MaxErrors limit and don''t contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Terminated: The parent command exceeded its MaxErrors limit and subsequent command invocations were canceled by the system. This is a terminal state.</p> </li> </ul>'
      TraceOutput:
        $ref: '#/definitions/[object Object]'
        description: ' Gets the trace output sent by the agent. '
      StandardOutputUrl:
        $ref: '#/definitions/[object Object]'
        description: 'The URL to the plugin''s StdOut file in Amazon S3, if the Amazon S3 bucket was defined for the parent command. For an invocation, StandardOutputUrl is populated if there is just one plugin defined for the command, and the Amazon S3 bucket was defined for the command.'
      StandardErrorUrl:
        $ref: '#/definitions/[object Object]'
        description: 'The URL to the plugin''s StdErr file in Amazon S3, if the Amazon S3 bucket was defined for the parent command. For an invocation, StandardErrorUrl is populated if there is just one plugin defined for the command, and the Amazon S3 bucket was defined for the command.'
      CommandPlugins:
        $ref: '#/definitions/[object Object]'
      ServiceRole:
        $ref: '#/definitions/[object Object]'
        description: The IAM service role that Run Command uses to act on your behalf when sending notifications about command status changes on a per instance basis.
      NotificationConfig:
        $ref: '#/definitions/[object Object]'
        description: Configurations for sending notifications about command status changes on a per instance basis.
      CloudWatchOutputConfig:
        $ref: '#/definitions/[object Object]'
        description: CloudWatch Logs information where you want Systems Manager to send the command output.
    description: 'An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user executes SendCommand against three instances, then a command invocation is created for each requested instance ID. A command invocation returns status and detail information about a command you executed. '
  CommandInvocationList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  CommandInvocationStatus:
    type: string
    enum:
      - Pending
      - InProgress
      - Delayed
      - Success
      - Cancelled
      - TimedOut
      - Failed
      - Cancelling
  CommandList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  CommandMaxResults:
    type: integer
    minimum: 1
    maximum: 50
  CommandPlugin:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: 'The name of the plugin. Must be one of the following: aws:updateAgent, aws:domainjoin, aws:applications, aws:runPowerShellScript, aws:psmodule, aws:cloudWatch, aws:runShellScript, or aws:updateSSMAgent. '
      Status:
        $ref: '#/definitions/[object Object]'
        description: The status of this plugin. You can execute a document with multiple plugins.
      StatusDetails:
        $ref: '#/definitions/[object Object]'
        description: '<p>A detailed status of the plugin execution. StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to the instance.</p> </li> <li> <p>In Progress: The command has been sent to the instance but has not reached a terminal state.</p> </li> <li> <p>Success: The execution of the command or plugin was successfully completed. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The command was not delivered to the instance before the delivery timeout expired. Delivery timeouts do not count against the parent command''s MaxErrors limit, but they do contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: Command execution started on the instance, but the execution was not complete before the execution timeout expired. Execution timeouts count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Failed: The command was not successful on the instance. For a plugin, this indicates that the result code was not zero. For a command invocation, this indicates that the result code for one or more plugins was not zero. Invocation failures count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Undeliverable: The command can''t be delivered to the instance. The instance might not exist, or it might not be responding. Undeliverable invocations don''t count against the parent command''s MaxErrors limit, and they don''t contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Terminated: The parent command exceeded its MaxErrors limit and subsequent command invocations were canceled by the system. This is a terminal state.</p> </li> </ul>'
      ResponseCode:
        $ref: '#/definitions/[object Object]'
        description: 'A numeric response code generated after executing the plugin. '
      ResponseStartDateTime:
        $ref: '#/definitions/[object Object]'
        description: 'The time the plugin started executing. '
      ResponseFinishDateTime:
        $ref: '#/definitions/[object Object]'
        description: 'The time the plugin stopped executing. Could stop prematurely if, for example, a cancel command was sent. '
      Output:
        $ref: '#/definitions/[object Object]'
        description: Output of the plugin execution.
      StandardOutputUrl:
        $ref: '#/definitions/[object Object]'
        description: 'The URL for the complete text written by the plugin to stdout in Amazon S3. If the Amazon S3 bucket for the command was not specified, then this string is empty.'
      StandardErrorUrl:
        $ref: '#/definitions/[object Object]'
        description: 'The URL for the complete text written by the plugin to stderr. If execution is not yet complete, then this string is empty.'
      OutputS3Region:
        $ref: '#/definitions/[object Object]'
        description: '(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.'
      OutputS3BucketName:
        $ref: '#/definitions/[object Object]'
        description: '<p>The S3 bucket where the responses to the command executions should be stored. This was requested when issuing the command. For example, in the following response:</p> <p> test_folder/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-1234567876543/awsrunShellScript </p> <p>test_folder is the name of the Amazon S3 bucket;</p> <p> ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix is the name of the S3 prefix;</p> <p>i-1234567876543 is the instance ID;</p> <p>awsrunShellScript is the name of the plugin.</p>'
      OutputS3KeyPrefix:
        $ref: '#/definitions/[object Object]'
        description: '<p>The S3 directory path inside the bucket where the responses to the command executions should be stored. This was requested when issuing the command. For example, in the following response:</p> <p> test_folder/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-1234567876543/awsrunShellScript </p> <p>test_folder is the name of the Amazon S3 bucket;</p> <p> ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix is the name of the S3 prefix;</p> <p>i-1234567876543 is the instance ID;</p> <p>awsrunShellScript is the name of the plugin.</p>'
    description: Describes plugin details.
  CommandPluginList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  CommandPluginName:
    type: string
    minLength: 4
  CommandPluginOutput:
    type: string
    maxLength: 2500
  CommandPluginStatus:
    type: string
    enum:
      - Pending
      - InProgress
      - Success
      - TimedOut
      - Cancelled
      - Failed
  CommandStatus:
    type: string
    enum:
      - Pending
      - InProgress
      - Success
      - Cancelled
      - Failed
      - TimedOut
      - Cancelling
  Comment:
    type: string
    maxLength: 100
  CompletedCount:
    type: integer
  ComplianceExecutionId:
    type: string
    maxLength: 100
  ComplianceExecutionSummary:
    type: object
    required:
      - ExecutionTime
    properties:
      ExecutionTime:
        $ref: '#/definitions/[object Object]'
        description: 'The time the execution ran as a datetime object that is saved in the following format: yyyy-MM-dd''T''HH:mm:ss''Z''.'
      ExecutionId:
        $ref: '#/definitions/[object Object]'
        description: 'An ID created by the system when <code>PutComplianceItems</code> was called. For example, <code>CommandID</code> is a valid execution ID. You can use this ID in subsequent calls.'
      ExecutionType:
        $ref: '#/definitions/[object Object]'
        description: 'The type of execution. For example, <code>Command</code> is a valid execution type.'
    description: 'A summary of the call execution that includes an execution ID, the type of execution (for example, <code>Command</code>), and the date/time of the execution using a datetime object that is saved in the following format: yyyy-MM-dd''T''HH:mm:ss''Z''.'
  ComplianceExecutionType:
    type: string
    maxLength: 50
  ComplianceFilterValue:
    type: string
  ComplianceItem:
    type: object
    properties:
      ComplianceType:
        $ref: '#/definitions/[object Object]'
        description: 'The compliance type. For example, Association (for a State Manager association), Patch, or Custom:<code>string</code> are all valid compliance types.'
      ResourceType:
        $ref: '#/definitions/[object Object]'
        description: The type of resource. <code>ManagedInstance</code> is currently the only supported resource type.
      ResourceId:
        $ref: '#/definitions/[object Object]'
        description: 'An ID for the resource. For a managed instance, this is the instance ID.'
      Id:
        $ref: '#/definitions/[object Object]'
        description: 'An ID for the compliance item. For example, if the compliance item is a Windows patch, the ID could be the number of the KB article; for example: KB4010320.'
      Title:
        $ref: '#/definitions/[object Object]'
        description: 'A title for the compliance item. For example, if the compliance item is a Windows patch, the title could be the title of the KB article for the patch; for example: Security Update for Active Directory Federation Services.'
      Status:
        $ref: '#/definitions/[object Object]'
        description: The status of the compliance item. An item is either COMPLIANT or NON_COMPLIANT.
      Severity:
        $ref: '#/definitions/[object Object]'
        description: 'The severity of the compliance status. Severity can be one of the following: Critical, High, Medium, Low, Informational, Unspecified.'
      ExecutionSummary:
        $ref: '#/definitions/[object Object]'
        description: 'A summary for the compliance item. The summary includes an execution ID, the execution type (for example, command), and the execution time.'
      Details:
        $ref: '#/definitions/[object Object]'
        description: 'A "Key": "Value" tag combination for the compliance item.'
    description: 'Information about the compliance as defined by the resource type. For example, for a patch resource type, <code>Items</code> includes information about the PatchSeverity, Classification, etc.'
  ComplianceItemContentHash:
    type: string
    maxLength: 256
  ComplianceItemDetails:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AttributeName'
        value:
          $ref: '#/definitions/AttributeValue'
  ComplianceItemEntry:
    type: object
    required:
      - Severity
      - Status
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: 'The compliance item ID. For example, if the compliance item is a Windows patch, the ID could be the number of the KB article.'
      Title:
        $ref: '#/definitions/[object Object]'
        description: 'The title of the compliance item. For example, if the compliance item is a Windows patch, the title could be the title of the KB article for the patch; for example: Security Update for Active Directory Federation Services. '
      Severity:
        $ref: '#/definitions/[object Object]'
        description: 'The severity of the compliance status. Severity can be one of the following: Critical, High, Medium, Low, Informational, Unspecified.'
      Status:
        $ref: '#/definitions/[object Object]'
        description: The status of the compliance item. An item is either COMPLIANT or NON_COMPLIANT.
      Details:
        $ref: '#/definitions/[object Object]'
        description: 'A "Key": "Value" tag combination for the compliance item.'
    description: Information about a compliance item.
  ComplianceItemEntryList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 0
    maxItems: 10000
  ComplianceItemId:
    type: string
    minLength: 1
    maxLength: 100
  ComplianceItemList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ComplianceItemTitle:
    type: string
    maxLength: 500
  ComplianceQueryOperatorType:
    type: string
    enum:
      - EQUAL
      - NOT_EQUAL
      - BEGIN_WITH
      - LESS_THAN
      - GREATER_THAN
  ComplianceResourceId:
    type: string
    minLength: 1
    maxLength: 100
  ComplianceResourceIdList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
  ComplianceResourceType:
    type: string
    minLength: 1
    maxLength: 50
  ComplianceResourceTypeList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
  ComplianceSeverity:
    type: string
    enum:
      - CRITICAL
      - HIGH
      - MEDIUM
      - LOW
      - INFORMATIONAL
      - UNSPECIFIED
  ComplianceStatus:
    type: string
    enum:
      - COMPLIANT
      - NON_COMPLIANT
  ComplianceStringFilter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: The name of the filter.
      Values:
        $ref: '#/definitions/[object Object]'
        description: The value for which to search.
      Type:
        $ref: '#/definitions/[object Object]'
        description: 'The type of comparison that should be performed for the value: Equal, NotEqual, BeginWith, LessThan, or GreaterThan.'
    description: One or more filters. Use a filter to return a more specific list of results.
  ComplianceStringFilterKey:
    type: string
    minLength: 1
    maxLength: 200
  ComplianceStringFilterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ComplianceStringFilterValueList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 20
  ComplianceSummaryCount:
    type: integer
  ComplianceSummaryItem:
    type: object
    properties:
      ComplianceType:
        $ref: '#/definitions/[object Object]'
        description: 'The type of compliance item. For example, the compliance type can be Association, Patch, or Custom:string.'
      CompliantSummary:
        $ref: '#/definitions/[object Object]'
        description: A list of COMPLIANT items for the specified compliance type.
      NonCompliantSummary:
        $ref: '#/definitions/[object Object]'
        description: A list of NON_COMPLIANT items for the specified compliance type.
    description: A summary of compliance information by compliance type.
  ComplianceSummaryItemList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ComplianceTypeName:
    type: string
    pattern: '[A-Za-z0-9_\-]\w+|Custom:[a-zA-Z0-9_\-]\w+'
    minLength: 1
    maxLength: 100
  CompliantSummary:
    type: object
    properties:
      CompliantCount:
        $ref: '#/definitions/[object Object]'
        description: The total number of resources that are compliant.
      SeveritySummary:
        $ref: '#/definitions/[object Object]'
        description: A summary of the compliance severity by compliance type.
    description: A summary of resources that are compliant. The summary is organized according to the resource count for each compliance type.
  ComputerName:
    type: string
    minLength: 1
    maxLength: 255
  ConnectionStatus:
    type: string
    enum:
      - Connected
      - NotConnected
  ContentLength:
    type: integer
  CreateAssociationBatchRequestEntries:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
  CreateAssociationBatchRequestEntry:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: 'The name of the configuration document. '
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: 'The ID of the instance. '
      Parameters:
        $ref: '#/definitions/[object Object]'
        description: 'A description of the parameters for a document. '
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: The document version.
      Targets:
        $ref: '#/definitions/[object Object]'
        description: The instances targeted by the request.
      ScheduleExpression:
        $ref: '#/definitions/[object Object]'
        description: A cron expression that specifies a schedule when the association runs.
      OutputLocation:
        $ref: '#/definitions/[object Object]'
        description: An Amazon S3 bucket where you want to store the results of this request.
      AssociationName:
        $ref: '#/definitions/[object Object]'
        description: Specify a descriptive name for the association.
      MaxErrors:
        $ref: '#/definitions/[object Object]'
        description: '<p>The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set MaxError to 10%, then the system stops sending the request when the sixth error is received.</p> <p>Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won''t be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.</p>'
      MaxConcurrency:
        $ref: '#/definitions/[object Object]'
        description: '<p>The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.</p> <p>If a new instance starts and attempts to execute an association while Systems Manager is executing MaxConcurrency associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for MaxConcurrency.</p>'
      ComplianceSeverity:
        $ref: '#/definitions/[object Object]'
        description: The severity level to assign to the association.
    description: Describes the association of a Systems Manager SSM document and an instance.
  CreatedDate:
    type: string
    format: date-time
  DateTime:
    type: string
    format: date-time
  DefaultBaseline:
    type: boolean
  DefaultInstanceName:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 0
    maxLength: 256
  DeliveryTimedOutCount:
    type: integer
  DescribeActivationsFilter:
    type: object
    properties:
      FilterKey:
        $ref: '#/definitions/[object Object]'
        description: The name of the filter.
      FilterValues:
        $ref: '#/definitions/[object Object]'
        description: The filter values.
    description: Filter for the DescribeActivation API.
  DescribeActivationsFilterKeys:
    type: string
    enum:
      - ActivationIds
      - DefaultInstanceName
      - IamRole
  DescribeActivationsFilterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  DescriptionInDocument:
    type: string
  DocumentARN:
    type: string
    pattern: '^[a-zA-Z0-9_\-.:/]{3,128}$'
  DocumentContent:
    type: string
    minLength: 1
  DocumentDefaultVersionDescription:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the document.
      DefaultVersion:
        $ref: '#/definitions/[object Object]'
        description: The default version of the document.
      DefaultVersionName:
        $ref: '#/definitions/[object Object]'
        description: The default version of the artifact associated with the document.
    description: A default version of a document.
  DocumentDescription:
    type: object
    properties:
      Sha1:
        $ref: '#/definitions/[object Object]'
        description: 'The SHA1 hash of the document, which you can use for verification.'
      Hash:
        $ref: '#/definitions/[object Object]'
        description: <p>The Sha256 or Sha1 hash created by the system when the document was created. </p> <note> <p>Sha1 hashes have been deprecated.</p> </note>
      HashType:
        $ref: '#/definitions/[object Object]'
        description: <p>The hash type of the document. Valid values include <code>Sha256</code> or <code>Sha1</code>.</p> <note> <p>Sha1 hashes have been deprecated.</p> </note>
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the Systems Manager document.
      VersionName:
        $ref: '#/definitions/[object Object]'
        description: The version of the artifact associated with the document.
      Owner:
        $ref: '#/definitions/[object Object]'
        description: The AWS user account that created the document.
      CreatedDate:
        $ref: '#/definitions/[object Object]'
        description: The date when the document was created.
      Status:
        $ref: '#/definitions/[object Object]'
        description: The status of the Systems Manager document.
      StatusInformation:
        $ref: '#/definitions/[object Object]'
        description: 'A message returned by AWS Systems Manager that explains the <code>Status</code> value. For example, a <code>Failed</code> status might be explained by the <code>StatusInformation</code> message, "The specified S3 bucket does not exist. Verify that the URL of the S3 bucket is correct."'
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: The document version.
      Description:
        $ref: '#/definitions/[object Object]'
        description: 'A description of the document. '
      Parameters:
        $ref: '#/definitions/[object Object]'
        description: A description of the parameters for a document.
      PlatformTypes:
        $ref: '#/definitions/[object Object]'
        description: 'The list of OS platforms compatible with this Systems Manager document. '
      DocumentType:
        $ref: '#/definitions/[object Object]'
        description: The type of document.
      SchemaVersion:
        $ref: '#/definitions/[object Object]'
        description: The schema version.
      LatestVersion:
        $ref: '#/definitions/[object Object]'
        description: The latest version of the document.
      DefaultVersion:
        $ref: '#/definitions/[object Object]'
        description: The default version.
      DocumentFormat:
        $ref: '#/definitions/[object Object]'
        description: 'The document format, either JSON or YAML.'
      TargetType:
        $ref: '#/definitions/[object Object]'
        description: 'The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html">AWS Resource Types Reference</a> in the <i>AWS CloudFormation User Guide</i>. '
      Tags:
        $ref: '#/definitions/[object Object]'
        description: 'The tags, or metadata, that have been applied to the document.'
      AttachmentsInformation:
        $ref: '#/definitions/[object Object]'
        description: 'Details about the document attachments, including names, locations, sizes, etc.'
    description: 'Describes a Systems Manager document. '
  DocumentFilter:
    type: object
    required:
      - key
      - value
    properties:
      key:
        $ref: '#/definitions/[object Object]'
        description: The name of the filter.
      value:
        $ref: '#/definitions/[object Object]'
        description: The value of the filter.
    description: Describes a filter.
  DocumentFilterKey:
    type: string
    enum:
      - Name
      - Owner
      - PlatformTypes
      - DocumentType
  DocumentFilterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
  DocumentFilterValue:
    type: string
    minLength: 1
  DocumentFormat:
    type: string
    enum:
      - YAML
      - JSON
  DocumentHash:
    type: string
    maxLength: 256
  DocumentHashType:
    type: string
    enum:
      - Sha256
      - Sha1
  DocumentIdentifier:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the Systems Manager document.
      Owner:
        $ref: '#/definitions/[object Object]'
        description: The AWS user account that created the document.
      VersionName:
        $ref: '#/definitions/[object Object]'
        description: 'An optional field specifying the version of the artifact associated with the document. For example, "Release 12, Update 6". This value is unique across all versions of a document, and cannot be changed.'
      PlatformTypes:
        $ref: '#/definitions/[object Object]'
        description: 'The operating system platform. '
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: The document version.
      DocumentType:
        $ref: '#/definitions/[object Object]'
        description: The document type.
      SchemaVersion:
        $ref: '#/definitions/[object Object]'
        description: The schema version.
      DocumentFormat:
        $ref: '#/definitions/[object Object]'
        description: 'The document format, either JSON or YAML.'
      TargetType:
        $ref: '#/definitions/[object Object]'
        description: 'The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html">AWS Resource Types Reference</a> in the <i>AWS CloudFormation User Guide</i>. '
      Tags:
        $ref: '#/definitions/[object Object]'
        description: 'The tags, or metadata, that have been applied to the document.'
    description: Describes the name of a Systems Manager document.
  DocumentIdentifierList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  DocumentKeyValuesFilter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: The name of the filter key.
      Values:
        $ref: '#/definitions/[object Object]'
        description: The value for the filter key.
    description: '<p>One or more filters. Use a filter to return a more specific list of documents.</p> <p>For keys, you can specify one or more tags that have been applied to a document. </p> <p>Other valid values include Owner, Name, PlatformTypes, and DocumentType.</p> <p>Note that only one Owner can be specified in a request. For example: <code>Key=Owner,Values=Self</code>.</p> <p>If you use Name as a key, you can use a name prefix to return a list of documents. For example, in the AWS CLI, to return a list of all documents that begin with <code>Te</code>, run the following command:</p> <p> <code>aws ssm list-documents --filters Key=Name,Values=Te</code> </p> <p>If you specify more than two keys, only documents that are identified by all the tags are returned in the results. If you specify more than two values for a key, documents that are identified by any of the values are returned in the results.</p> <p>To specify a custom key and value pair, use the format <code>Key=tag:[tagName],Values=[valueName]</code>.</p> <p>For example, if you created a Key called region and are using the AWS CLI to call the <code>list-documents</code> command: </p> <p> <code>aws ssm list-documents --filters Key=tag:region,Values=east,west Key=Owner,Values=Self</code> </p>'
  DocumentKeyValuesFilterKey:
    type: string
    minLength: 1
    maxLength: 128
  DocumentKeyValuesFilterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 0
    maxItems: 6
  DocumentKeyValuesFilterValue:
    type: string
    minLength: 1
    maxLength: 256
  DocumentKeyValuesFilterValues:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  DocumentName:
    type: string
    pattern: '^[a-zA-Z0-9_\-.]{3,128}$'
  DocumentOwner:
    type: string
  DocumentParameter:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the parameter.
      Type:
        $ref: '#/definitions/[object Object]'
        description: The type of parameter. The type can be either String or StringList.
      Description:
        $ref: '#/definitions/[object Object]'
        description: 'A description of what the parameter does, how to use it, the default value, and whether or not the parameter is optional.'
      DefaultValue:
        $ref: '#/definitions/[object Object]'
        description: 'If specified, the default values for the parameters. Parameters without a default value are required. Parameters with a default value are optional.'
    description: 'Parameters specified in a System Manager document that execute on the server when the command is run. '
  DocumentParameterDefaultValue:
    type: string
  DocumentParameterDescrption:
    type: string
  DocumentParameterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  DocumentParameterName:
    type: string
  DocumentParameterType:
    type: string
    enum:
      - String
      - StringList
  DocumentPermissionType:
    type: string
    enum:
      - Share
  DocumentSchemaVersion:
    type: string
    pattern: '([0-9]+)\.([0-9]+)'
  DocumentSha1:
    type: string
  DocumentStatus:
    type: string
    enum:
      - Creating
      - Active
      - Updating
      - Deleting
      - Failed
    description: The status of a document.
  DocumentStatusInformation:
    type: string
  DocumentType:
    type: string
    enum:
      - Command
      - Policy
      - Automation
      - Session
      - Package
  DocumentVersion:
    type: string
    pattern: '([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)'
  DocumentVersionInfo:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The document name.
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: The document version.
      VersionName:
        $ref: '#/definitions/[object Object]'
        description: 'The version of the artifact associated with the document. For example, "Release 12, Update 6". This value is unique across all versions of a document, and cannot be changed.'
      CreatedDate:
        $ref: '#/definitions/[object Object]'
        description: The date the document was created.
      IsDefaultVersion:
        $ref: '#/definitions/[object Object]'
        description: An identifier for the default version of the document.
      DocumentFormat:
        $ref: '#/definitions/[object Object]'
        description: 'The document format, either JSON or YAML.'
      Status:
        $ref: '#/definitions/[object Object]'
        description: 'The status of the Systems Manager document, such as <code>Creating</code>, <code>Active</code>, <code>Failed</code>, and <code>Deleting</code>.'
      StatusInformation:
        $ref: '#/definitions/[object Object]'
        description: 'A message returned by AWS Systems Manager that explains the <code>Status</code> value. For example, a <code>Failed</code> status might be explained by the <code>StatusInformation</code> message, "The specified S3 bucket does not exist. Verify that the URL of the S3 bucket is correct."'
    description: Version information about the document.
  DocumentVersionList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
  DocumentVersionName:
    type: string
    pattern: '^[a-zA-Z0-9_\-.]{1,128}$'
  DocumentVersionNumber:
    type: string
    pattern: '(^[1-9][0-9]*$)'
  DryRun:
    type: boolean
  EffectiveInstanceAssociationMaxResults:
    type: integer
    minimum: 1
    maximum: 5
  EffectivePatch:
    type: object
    properties:
      Patch:
        $ref: '#/definitions/[object Object]'
        description: 'Provides metadata for a patch, including information such as the KB ID, severity, classification and a URL for where more information can be obtained about the patch.'
      PatchStatus:
        $ref: '#/definitions/[object Object]'
        description: 'The status of the patch in a patch baseline. This includes information about whether the patch is currently approved, due to be approved by a rule, explicitly approved, or explicitly rejected and the date the patch was or will be approved.'
    description: 'The EffectivePatch structure defines metadata about a patch along with the approval state of the patch in a particular patch baseline. The approval state includes information about whether the patch is currently approved, due to be approved by a rule, explicitly approved, or explicitly rejected and the date the patch was or will be approved.'
  EffectivePatchList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ErrorCount:
    type: integer
  ExecutionMode:
    type: string
    enum:
      - Auto
      - Interactive
  ExecutionRoleName:
    type: string
    minLength: 1
    maxLength: 64
  ExpirationDate:
    type: string
    format: date-time
  FailedCreateAssociation:
    type: object
    properties:
      Entry:
        $ref: '#/definitions/[object Object]'
        description: The association.
      Message:
        $ref: '#/definitions/[object Object]'
        description: A description of the failure.
      Fault:
        $ref: '#/definitions/[object Object]'
        description: The source of the failure.
    description: Describes a failed association.
  FailedCreateAssociationList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  FailureDetails:
    type: object
    properties:
      FailureStage:
        $ref: '#/definitions/[object Object]'
        description: 'The stage of the Automation execution when the failure occurred. The stages include the following: InputValidation, PreVerification, Invocation, PostVerification.'
      FailureType:
        $ref: '#/definitions/[object Object]'
        description: 'The type of Automation failure. Failure types include the following: Action, Permission, Throttling, Verification, Internal.'
      Details:
        $ref: '#/definitions/[object Object]'
        description: Detailed information about the Automation step failure.
    description: Information about an Automation failure.
  Fault:
    type: string
    enum:
      - Client
      - Server
      - Unknown
  GetInventorySchemaMaxResults:
    type: integer
    minimum: 50
    maximum: 200
  GetParametersByPathMaxResults:
    type: integer
    minimum: 1
    maximum: 10
  IPAddress:
    type: string
    minLength: 1
    maxLength: 46
  IamRole:
    type: string
    maxLength: 64
  IdempotencyToken:
    type: string
    pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
    minLength: 36
    maxLength: 36
  InstallOverrideList:
    type: string
    pattern: '^https://.+$|^s3://([^/]+)/(.*?([^/]+))$'
    minLength: 1
    maxLength: 256
  InstanceAggregatedAssociationOverview:
    type: object
    properties:
      DetailedStatus:
        $ref: '#/definitions/[object Object]'
        description: Detailed status information about the aggregated associations.
      InstanceAssociationStatusAggregatedCount:
        $ref: '#/definitions/[object Object]'
        description: The number of associations for the instance(s).
    description: Status information about the aggregated associations.
  InstanceAssociation:
    type: object
    properties:
      AssociationId:
        $ref: '#/definitions/[object Object]'
        description: The association ID.
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: The instance ID.
      Content:
        $ref: '#/definitions/[object Object]'
        description: The content of the association document for the instance(s).
      AssociationVersion:
        $ref: '#/definitions/[object Object]'
        description: Version information for the association on the instance.
    description: 'One or more association documents on the instance. '
  InstanceAssociationExecutionSummary:
    type: string
    minLength: 1
    maxLength: 512
  InstanceAssociationList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  InstanceAssociationOutputLocation:
    type: object
    properties:
      S3Location:
        $ref: '#/definitions/[object Object]'
        description: An Amazon S3 bucket where you want to store the results of this request.
    description: An Amazon S3 bucket where you want to store the results of this request.
  InstanceAssociationOutputUrl:
    type: object
    properties:
      S3OutputUrl:
        $ref: '#/definitions/[object Object]'
        description: The URL of Amazon S3 bucket where you want to store the results of this request.
    description: The URL of Amazon S3 bucket where you want to store the results of this request.
  InstanceAssociationStatusAggregatedCount:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/StatusName'
        value:
          $ref: '#/definitions/InstanceCount'
  InstanceAssociationStatusInfo:
    type: object
    properties:
      AssociationId:
        $ref: '#/definitions/[object Object]'
        description: The association ID.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the association.
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: The association document verions.
      AssociationVersion:
        $ref: '#/definitions/[object Object]'
        description: The version of the association applied to the instance.
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: The instance ID where the association was created.
      ExecutionDate:
        $ref: '#/definitions/[object Object]'
        description: 'The date the instance association executed. '
      Status:
        $ref: '#/definitions/[object Object]'
        description: Status information about the instance association.
      DetailedStatus:
        $ref: '#/definitions/[object Object]'
        description: Detailed status information about the instance association.
      ExecutionSummary:
        $ref: '#/definitions/[object Object]'
        description: Summary information about association execution.
      ErrorCode:
        $ref: '#/definitions/[object Object]'
        description: An error code returned by the request to create the association.
      OutputUrl:
        $ref: '#/definitions/[object Object]'
        description: A URL for an Amazon S3 bucket where you want to store the results of this request.
      AssociationName:
        $ref: '#/definitions/[object Object]'
        description: The name of the association applied to the instance.
    description: Status information about the instance association.
  InstanceAssociationStatusInfos:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  InstanceId:
    type: string
    pattern: '(^i-(\w{8}|\w{17})$)|(^mi-\w{17}$)'
  InstanceIdList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 0
    maxItems: 50
  InstanceInformation:
    type: object
    properties:
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: 'The instance ID. '
      PingStatus:
        $ref: '#/definitions/[object Object]'
        description: 'Connection status of SSM Agent. '
      LastPingDateTime:
        $ref: '#/definitions/[object Object]'
        description: 'The date and time when agent last pinged Systems Manager service. '
      AgentVersion:
        $ref: '#/definitions/[object Object]'
        description: 'The version of SSM Agent running on your Linux instance. '
      IsLatestVersion:
        $ref: '#/definitions/[object Object]'
        description: 'Indicates whether latest version of SSM Agent is running on your instance. Some older versions of Windows Server use the EC2Config service to process SSM requests. For this reason, this field does not indicate whether or not the latest version is installed on Windows managed instances.'
      PlatformType:
        $ref: '#/definitions/[object Object]'
        description: 'The operating system platform type. '
      PlatformName:
        $ref: '#/definitions/[object Object]'
        description: 'The name of the operating system platform running on your instance. '
      PlatformVersion:
        $ref: '#/definitions/[object Object]'
        description: 'The version of the OS platform running on your instance. '
      ActivationId:
        $ref: '#/definitions/[object Object]'
        description: The activation ID created by Systems Manager when the server or VM was registered.
      IamRole:
        $ref: '#/definitions/[object Object]'
        description: 'The Amazon Identity and Access Management (IAM) role assigned to the on-premises Systems Manager managed instances. This call does not return the IAM role for Amazon EC2 instances. '
      RegistrationDate:
        $ref: '#/definitions/[object Object]'
        description: The date the server or VM was registered with AWS as a managed instance.
      ResourceType:
        $ref: '#/definitions/[object Object]'
        description: 'The type of instance. Instances are either EC2 instances or managed instances. '
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the managed instance.
      IPAddress:
        $ref: '#/definitions/[object Object]'
        description: The IP address of the managed instance.
      ComputerName:
        $ref: '#/definitions/[object Object]'
        description: The fully qualified host name of the managed instance.
      AssociationStatus:
        $ref: '#/definitions/[object Object]'
        description: The status of the association.
      LastAssociationExecutionDate:
        $ref: '#/definitions/[object Object]'
        description: The date the association was last executed.
      LastSuccessfulAssociationExecutionDate:
        $ref: '#/definitions/[object Object]'
        description: The last date the association was successfully run.
      AssociationOverview:
        $ref: '#/definitions/[object Object]'
        description: Information about the association.
    description: 'Describes a filter for a specific list of instances. '
  InstanceInformationFilter:
    type: object
    required:
      - key
      - valueSet
    properties:
      key:
        $ref: '#/definitions/[object Object]'
        description: 'The name of the filter. '
      valueSet:
        $ref: '#/definitions/[object Object]'
        description: The filter values.
    description: <p>Describes a filter for a specific list of instances. You can filter instances information by using tags. You specify tags by using a key-value mapping.</p> <p>Use this action instead of the <a>DescribeInstanceInformationRequest$InstanceInformationFilterList</a> method. The <code>InstanceInformationFilterList</code> method is a legacy method and does not support tags. </p>
  InstanceInformationFilterKey:
    type: string
    enum:
      - InstanceIds
      - AgentVersion
      - PingStatus
      - PlatformTypes
      - ActivationIds
      - IamRole
      - ResourceType
      - AssociationStatus
  InstanceInformationFilterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 0
  InstanceInformationFilterValue:
    type: string
    minLength: 1
  InstanceInformationFilterValueSet:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 100
  InstanceInformationList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  InstanceInformationStringFilter:
    type: object
    required:
      - Key
      - Values
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: '<p>The filter key name to describe your instances. For example:</p> <p>"InstanceIds"|"AgentVersion"|"PingStatus"|"PlatformTypes"|"ActivationIds"|"IamRole"|"ResourceType"|"AssociationStatus"|"Tag Key"</p>'
      Values:
        $ref: '#/definitions/[object Object]'
        description: The filter values.
    description: The filters to describe or get information about your managed instances.
  InstanceInformationStringFilterKey:
    type: string
    minLength: 1
  InstanceInformationStringFilterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 0
  InstancePatchState:
    type: object
    required:
      - InstanceId
      - PatchGroup
      - BaselineId
      - OperationStartTime
      - OperationEndTime
      - Operation
    properties:
      InstanceId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the managed instance the high-level patch compliance information was collected for.
      PatchGroup:
        $ref: '#/definitions/[object Object]'
        description: The name of the patch group the managed instance belongs to.
      BaselineId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the patch baseline used to patch the instance.
      SnapshotId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the patch baseline snapshot used during the patching operation when this compliance data was collected.
      InstallOverrideList:
        $ref: '#/definitions/[object Object]'
        description: '<p>An https URL or an Amazon S3 path-style URL to a list of patches to be installed. This patch installation list, which you maintain in an Amazon S3 bucket in YAML format and specify in the SSM document <code>AWS-RunPatchBaseline</code>, overrides the patches specified by the default patch baseline.</p> <p>For more information about the <code>InstallOverrideList</code> parameter, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-about-aws-runpatchbaseline.html">About the SSM Document AWS-RunPatchBaseline</a> in the <i>AWS Systems Manager User Guide</i>.</p>'
      OwnerInformation:
        $ref: '#/definitions/[object Object]'
        description: Placeholder information. This field will always be empty in the current release of the service.
      InstalledCount:
        $ref: '#/definitions/[object Object]'
        description: The number of patches from the patch baseline that are installed on the instance.
      InstalledOtherCount:
        $ref: '#/definitions/[object Object]'
        description: The number of patches not specified in the patch baseline that are installed on the instance.
      InstalledRejectedCount:
        $ref: '#/definitions/[object Object]'
        description: '<p>The number of instances with patches installed that are specified in a RejectedPatches list. Patches with a status of <i>InstalledRejected</i> were typically installed before they were added to a RejectedPatches list.</p> <note> <p>If ALLOW_AS_DEPENDENCY is the specified option for RejectedPatchesAction, the value of InstalledRejectedCount will always be 0 (zero).</p> </note>'
      MissingCount:
        $ref: '#/definitions/[object Object]'
        description: The number of patches from the patch baseline that are applicable for the instance but aren't currently installed.
      FailedCount:
        $ref: '#/definitions/[object Object]'
        description: 'The number of patches from the patch baseline that were attempted to be installed during the last patching operation, but failed to install.'
      NotApplicableCount:
        $ref: '#/definitions/[object Object]'
        description: The number of patches from the patch baseline that aren't applicable for the instance and hence aren't installed on the instance.
      OperationStartTime:
        $ref: '#/definitions/[object Object]'
        description: The time the most recent patching operation was started on the instance.
      OperationEndTime:
        $ref: '#/definitions/[object Object]'
        description: The time the most recent patching operation completed on the instance.
      Operation:
        $ref: '#/definitions/[object Object]'
        description: 'The type of patching operation that was performed: SCAN (assess patch compliance state) or INSTALL (install missing patches).'
    description: 'Defines the high-level patch compliance state for a managed instance, providing information about the number of installed, missing, not applicable, and failed patches along with metadata about the operation when this information was gathered for the instance.'
  InstancePatchStateFilter:
    type: object
    required:
      - Key
      - Values
      - Type
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: 'The key for the filter. Supported values are FailedCount, InstalledCount, InstalledOtherCount, MissingCount and NotApplicableCount.'
      Values:
        $ref: '#/definitions/[object Object]'
        description: 'The value for the filter, must be an integer greater than or equal to 0.'
      Type:
        $ref: '#/definitions/[object Object]'
        description: 'The type of comparison that should be performed for the value: Equal, NotEqual, LessThan or GreaterThan.'
    description: Defines a filter used in DescribeInstancePatchStatesForPatchGroup used to scope down the information returned by the API.
  InstancePatchStateFilterKey:
    type: string
    minLength: 1
    maxLength: 200
  InstancePatchStateFilterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 0
    maxItems: 4
  InstancePatchStateFilterValue:
    type: string
  InstancePatchStateFilterValues:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 1
  InstancePatchStateList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  InstancePatchStateOperatorType:
    type: string
    enum:
      - Equal
      - NotEqual
      - LessThan
      - GreaterThan
  InstancePatchStatesList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 5
  InstanceTagName:
    type: string
    maxLength: 255
  InstancesCount:
    type: integer
  Integer:
    type: integer
  InventoryAggregator:
    type: object
    properties:
      Expression:
        $ref: '#/definitions/[object Object]'
        description: The inventory type and attribute name for aggregation.
      Aggregators:
        $ref: '#/definitions/[object Object]'
        description: Nested aggregators to further refine aggregation for an inventory type.
      Groups:
        $ref: '#/definitions/[object Object]'
        description: A user-defined set of one or more filters on which to aggregate inventory data. Groups return a count of resources that match and don't match the specified criteria.
    description: Specifies the inventory type and attribute for the aggregation execution.
  InventoryAggregatorExpression:
    type: string
    minLength: 1
    maxLength: 1000
  InventoryAggregatorList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 10
  InventoryAttributeDataType:
    type: string
    enum:
      - string
      - number
  InventoryDeletionId:
    type: string
  InventoryDeletionLastStatusMessage:
    type: string
  InventoryDeletionLastStatusUpdateTime:
    type: string
    format: date-time
  InventoryDeletionStartTime:
    type: string
    format: date-time
  InventoryDeletionStatus:
    type: string
    enum:
      - InProgress
      - Complete
  InventoryDeletionStatusItem:
    type: object
    properties:
      DeletionId:
        $ref: '#/definitions/[object Object]'
        description: The deletion ID returned by the <code>DeleteInventory</code> action.
      TypeName:
        $ref: '#/definitions/[object Object]'
        description: The name of the inventory data type.
      DeletionStartTime:
        $ref: '#/definitions/[object Object]'
        description: The UTC timestamp when the delete operation started.
      LastStatus:
        $ref: '#/definitions/[object Object]'
        description: The status of the operation. Possible values are InProgress and Complete.
      LastStatusMessage:
        $ref: '#/definitions/[object Object]'
        description: Information about the status.
      DeletionSummary:
        $ref: '#/definitions/[object Object]'
        description: 'Information about the delete operation. For more information about this summary, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-delete.html#sysman-inventory-delete-summary">Understanding the Delete Inventory Summary</a> in the <i>AWS Systems Manager User Guide</i>.'
      LastStatusUpdateTime:
        $ref: '#/definitions/[object Object]'
        description: The UTC timestamp of when the last status report.
    description: Status information returned by the <code>DeleteInventory</code> action.
  InventoryDeletionSummary:
    type: object
    properties:
      TotalCount:
        $ref: '#/definitions/[object Object]'
        description: The total number of items to delete. This count does not change during the delete operation.
      RemainingCount:
        $ref: '#/definitions/[object Object]'
        description: Remaining number of items to delete.
      SummaryItems:
        $ref: '#/definitions/[object Object]'
        description: A list of counts and versions for deleted items.
    description: Information about the delete operation.
  InventoryDeletionSummaryItem:
    type: object
    properties:
      Version:
        $ref: '#/definitions/[object Object]'
        description: The inventory type version.
      Count:
        $ref: '#/definitions/[object Object]'
        description: A count of the number of deleted items.
      RemainingCount:
        $ref: '#/definitions/[object Object]'
        description: The remaining number of items to delete.
    description: 'Either a count, remaining count, or a version number in a delete inventory summary.'
  InventoryDeletionSummaryItems:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  InventoryDeletionsList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  InventoryFilter:
    type: object
    required:
      - Key
      - Values
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: The name of the filter key.
      Values:
        $ref: '#/definitions/[object Object]'
        description: 'Inventory filter values. Example: inventory filter where instance IDs are specified as values Key=AWS:InstanceInformation.InstanceId,Values= i-a12b3c4d5e6g, i-1a2b3c4d5e6,Type=Equal '
      Type:
        $ref: '#/definitions/[object Object]'
        description: 'The type of filter. Valid values include the following: "Equal"|"NotEqual"|"BeginWith"|"LessThan"|"GreaterThan"'
    description: One or more filters. Use a filter to return a more specific list of results.
  InventoryFilterKey:
    type: string
    minLength: 1
    maxLength: 200
  InventoryFilterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 5
  InventoryFilterValue:
    type: string
  InventoryFilterValueList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 40
  InventoryGroup:
    type: object
    required:
      - Name
      - Filters
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the group.
      Filters:
        $ref: '#/definitions/[object Object]'
        description: 'Filters define the criteria for the group. The <code>matchingCount</code> field displays the number of resources that match the criteria. The <code>notMatchingCount</code> field displays the number of resources that don''t match the criteria. '
    description: A user-defined set of one or more filters on which to aggregate inventory data. Groups return a count of resources that match and don't match the specified criteria.
  InventoryGroupList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 10
  InventoryGroupName:
    type: string
    minLength: 1
    maxLength: 200
  InventoryItem:
    type: object
    required:
      - TypeName
      - SchemaVersion
      - CaptureTime
    properties:
      TypeName:
        $ref: '#/definitions/[object Object]'
        description: 'The name of the inventory type. Default inventory item type names start with AWS. Custom inventory type names will start with Custom. Default inventory item types include the following: AWS:AWSComponent, AWS:Application, AWS:InstanceInformation, AWS:Network, and AWS:WindowsUpdate.'
      SchemaVersion:
        $ref: '#/definitions/[object Object]'
        description: The schema version for the inventory item.
      CaptureTime:
        $ref: '#/definitions/[object Object]'
        description: The time the inventory information was collected.
      ContentHash:
        $ref: '#/definitions/[object Object]'
        description: 'MD5 hash of the inventory item type contents. The content hash is used to determine whether to update inventory information. The PutInventory API does not update the inventory item type contents if the MD5 hash has not changed since last update. '
      Content:
        $ref: '#/definitions/[object Object]'
        description: The inventory data of the inventory type.
      Context:
        $ref: '#/definitions/[object Object]'
        description: 'A map of associated properties for a specified inventory type. For example, with this attribute, you can specify the <code>ExecutionId</code>, <code>ExecutionType</code>, <code>ComplianceType</code> properties of the <code>AWS:ComplianceItem</code> type.'
    description: Information collected from managed instances based on your inventory policy document
  InventoryItemAttribute:
    type: object
    required:
      - Name
      - DataType
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: Name of the inventory item attribute.
      DataType:
        $ref: '#/definitions/[object Object]'
        description: 'The data type of the inventory item attribute. '
    description: Attributes are the entries within the inventory item content. It contains name and value.
  InventoryItemAttributeList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 50
  InventoryItemAttributeName:
    type: string
  InventoryItemCaptureTime:
    type: string
    pattern: '^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$'
  InventoryItemContentContext:
    type: array
    minItems: 0
    maxItems: 50
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AttributeName'
        value:
          $ref: '#/definitions/AttributeValue'
  InventoryItemContentHash:
    type: string
    maxLength: 256
  InventoryItemEntry:
    type: array
    minItems: 0
    maxItems: 50
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AttributeName'
        value:
          $ref: '#/definitions/AttributeValue'
  InventoryItemEntryList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 0
    maxItems: 10000
  InventoryItemList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 30
  InventoryItemSchema:
    type: object
    required:
      - TypeName
      - Attributes
    properties:
      TypeName:
        $ref: '#/definitions/[object Object]'
        description: 'The name of the inventory type. Default inventory item type names start with AWS. Custom inventory type names will start with Custom. Default inventory item types include the following: AWS:AWSComponent, AWS:Application, AWS:InstanceInformation, AWS:Network, and AWS:WindowsUpdate.'
      Version:
        $ref: '#/definitions/[object Object]'
        description: The schema version for the inventory item.
      Attributes:
        $ref: '#/definitions/[object Object]'
        description: The schema attributes for inventory. This contains data type and attribute name.
      DisplayName:
        $ref: '#/definitions/[object Object]'
        description: The alias name of the inventory type. The alias name is used for display purposes.
    description: The inventory item schema definition. Users can use this to compose inventory query filters.
  InventoryItemSchemaResultList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  InventoryItemSchemaVersion:
    type: string
    pattern: '^([0-9]{1,6})(\.[0-9]{1,6})$'
  InventoryItemTypeName:
    type: string
    pattern: '^(AWS|Custom):.*$'
    minLength: 1
    maxLength: 100
  InventoryItemTypeNameFilter:
    type: string
    minLength: 0
    maxLength: 100
  InventoryQueryOperatorType:
    type: string
    enum:
      - Equal
      - NotEqual
      - BeginWith
      - LessThan
      - GreaterThan
      - Exists
  InventoryResultEntity:
    type: object
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: 'ID of the inventory result entity. For example, for managed instance inventory the result will be the managed instance ID. For EC2 instance inventory, the result will be the instance ID. '
      Data:
        $ref: '#/definitions/[object Object]'
        description: The data section in the inventory result entity JSON.
    description: Inventory query results.
  InventoryResultEntityId:
    type: string
  InventoryResultEntityList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  InventoryResultItem:
    type: object
    required:
      - TypeName
      - SchemaVersion
      - Content
    properties:
      TypeName:
        $ref: '#/definitions/[object Object]'
        description: The name of the inventory result item type.
      SchemaVersion:
        $ref: '#/definitions/[object Object]'
        description: The schema version for the inventory result item/
      CaptureTime:
        $ref: '#/definitions/[object Object]'
        description: The time inventory item data was captured.
      ContentHash:
        $ref: '#/definitions/[object Object]'
        description: 'MD5 hash of the inventory item type contents. The content hash is used to determine whether to update inventory information. The PutInventory API does not update the inventory item type contents if the MD5 hash has not changed since last update. '
      Content:
        $ref: '#/definitions/[object Object]'
        description: 'Contains all the inventory data of the item type. Results include attribute names and values. '
    description: The inventory result item.
  InventoryResultItemKey:
    type: string
  InventoryResultItemMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/InventoryResultItemKey'
        value:
          $ref: '#/definitions/InventoryResultItem'
  InventorySchemaDeleteOption:
    type: string
    enum:
      - DisableSchema
      - DeleteSchema
  InventoryTypeDisplayName:
    type: string
  InvocationTraceOutput:
    type: string
    maxLength: 2500
  IsSubTypeSchema:
    type: boolean
  KeyList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  LastResourceDataSyncMessage:
    type: string
  LastResourceDataSyncStatus:
    type: string
    enum:
      - Successful
      - Failed
      - InProgress
  LastResourceDataSyncTime:
    type: string
    format: date-time
  LastSuccessfulResourceDataSyncTime:
    type: string
    format: date-time
  LoggingInfo:
    type: object
    required:
      - S3BucketName
      - S3Region
    properties:
      S3BucketName:
        $ref: '#/definitions/[object Object]'
        description: The name of an Amazon S3 bucket where execution logs are stored .
      S3KeyPrefix:
        $ref: '#/definitions/[object Object]'
        description: '(Optional) The Amazon S3 bucket subfolder. '
      S3Region:
        $ref: '#/definitions/[object Object]'
        description: The region where the Amazon S3 bucket is located.
    description: '<p>Information about an Amazon S3 bucket to write instance-level logs to.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>'
  Long:
    type: integer
  MaintenanceWindowAllowUnassociatedTargets:
    type: boolean
  MaintenanceWindowAutomationParameters:
    type: object
    properties:
      DocumentVersion:
        $ref: '#/definitions/[object Object]'
        description: The version of an Automation document to use during task execution.
      Parameters:
        $ref: '#/definitions/[object Object]'
        description: '<p>The parameters for the AUTOMATION task.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For AUTOMATION task types, Systems Manager ignores any values specified for these parameters.</p> </note>'
    description: The parameters for an AUTOMATION task type.
  MaintenanceWindowCutoff:
    type: integer
    minimum: 0
    maximum: 23
  MaintenanceWindowDescription:
    type: string
    minLength: 1
    maxLength: 128
    format: password
  MaintenanceWindowDurationHours:
    type: integer
    minimum: 1
    maximum: 24
  MaintenanceWindowEnabled:
    type: boolean
  MaintenanceWindowExecution:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window.
      WindowExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window execution.
      Status:
        $ref: '#/definitions/[object Object]'
        description: The status of the execution.
      StatusDetails:
        $ref: '#/definitions/[object Object]'
        description: The details explaining the Status. Only available for certain status values.
      StartTime:
        $ref: '#/definitions/[object Object]'
        description: The time the execution started.
      EndTime:
        $ref: '#/definitions/[object Object]'
        description: The time the execution finished.
    description: 'Describes the information about an execution of a Maintenance Window. '
  MaintenanceWindowExecutionId:
    type: string
    pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
    minLength: 36
    maxLength: 36
  MaintenanceWindowExecutionList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  MaintenanceWindowExecutionStatus:
    type: string
    enum:
      - PENDING
      - IN_PROGRESS
      - SUCCESS
      - FAILED
      - TIMED_OUT
      - CANCELLING
      - CANCELLED
      - SKIPPED_OVERLAPPING
  MaintenanceWindowExecutionStatusDetails:
    type: string
    minLength: 0
    maxLength: 250
  MaintenanceWindowExecutionTaskExecutionId:
    type: string
  MaintenanceWindowExecutionTaskId:
    type: string
    pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
    minLength: 36
    maxLength: 36
  MaintenanceWindowExecutionTaskIdList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  MaintenanceWindowExecutionTaskIdentity:
    type: object
    properties:
      WindowExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window execution that ran the task.
      TaskExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the specific task execution in the Maintenance Window execution.
      Status:
        $ref: '#/definitions/[object Object]'
        description: The status of the task execution.
      StatusDetails:
        $ref: '#/definitions/[object Object]'
        description: The details explaining the status of the task execution. Only available for certain status values.
      StartTime:
        $ref: '#/definitions/[object Object]'
        description: The time the task execution started.
      EndTime:
        $ref: '#/definitions/[object Object]'
        description: The time the task execution finished.
      TaskArn:
        $ref: '#/definitions/[object Object]'
        description: The ARN of the executed task.
      TaskType:
        $ref: '#/definitions/[object Object]'
        description: The type of executed task.
    description: Information about a task execution performed as part of a Maintenance Window execution.
  MaintenanceWindowExecutionTaskIdentityList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  MaintenanceWindowExecutionTaskInvocationId:
    type: string
    pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
    minLength: 36
    maxLength: 36
  MaintenanceWindowExecutionTaskInvocationIdentity:
    type: object
    properties:
      WindowExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window execution that ran the task.
      TaskExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the specific task execution in the Maintenance Window execution.
      InvocationId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the task invocation.
      ExecutionId:
        $ref: '#/definitions/[object Object]'
        description: 'The ID of the action performed in the service that actually handled the task invocation. If the task type is RUN_COMMAND, this value is the command ID.'
      TaskType:
        $ref: '#/definitions/[object Object]'
        description: The task type.
      Parameters:
        $ref: '#/definitions/[object Object]'
        description: The parameters that were provided for the invocation when it was executed.
      Status:
        $ref: '#/definitions/[object Object]'
        description: The status of the task invocation.
      StatusDetails:
        $ref: '#/definitions/[object Object]'
        description: 'The details explaining the status of the task invocation. Only available for certain Status values. '
      StartTime:
        $ref: '#/definitions/[object Object]'
        description: The time the invocation started.
      EndTime:
        $ref: '#/definitions/[object Object]'
        description: The time the invocation finished.
      OwnerInformation:
        $ref: '#/definitions/[object Object]'
        description: User-provided value that was specified when the target was registered with the Maintenance Window. This was also included in any CloudWatch events raised during the task invocation.
      WindowTargetId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the target definition in this Maintenance Window the invocation was performed for.
    description: Describes the information about a task invocation for a particular target as part of a task execution performed as part of a Maintenance Window execution.
  MaintenanceWindowExecutionTaskInvocationIdentityList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  MaintenanceWindowExecutionTaskInvocationParameters:
    type: string
    format: password
  MaintenanceWindowFilter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: The name of the filter.
      Values:
        $ref: '#/definitions/[object Object]'
        description: The filter values.
    description: Filter used in the request. Supported filter keys are Name and Enabled.
  MaintenanceWindowFilterKey:
    type: string
    minLength: 1
    maxLength: 128
  MaintenanceWindowFilterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 0
    maxItems: 5
  MaintenanceWindowFilterValue:
    type: string
    minLength: 1
    maxLength: 256
  MaintenanceWindowFilterValues:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  MaintenanceWindowId:
    type: string
    pattern: '^mw-[0-9a-f]{17}$'
    minLength: 20
    maxLength: 20
  MaintenanceWindowIdentity:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the Maintenance Window.
      Description:
        $ref: '#/definitions/[object Object]'
        description: A description of the Maintenance Window.
      Enabled:
        $ref: '#/definitions/[object Object]'
        description: Whether the Maintenance Window is enabled.
      Duration:
        $ref: '#/definitions/[object Object]'
        description: The duration of the Maintenance Window in hours.
      Cutoff:
        $ref: '#/definitions/[object Object]'
        description: The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.
      Schedule:
        $ref: '#/definitions/[object Object]'
        description: The schedule of the Maintenance Window in the form of a cron or rate expression.
      ScheduleTimezone:
        $ref: '#/definitions/[object Object]'
        description: 'The time zone that the scheduled Maintenance Window executions are based on, in Internet Assigned Numbers Authority (IANA) format.'
      EndDate:
        $ref: '#/definitions/[object Object]'
        description: 'The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become inactive.'
      StartDate:
        $ref: '#/definitions/[object Object]'
        description: 'The date and time, in ISO-8601 Extended format, for when the Maintenance Window is scheduled to become active.'
      NextExecutionTime:
        $ref: '#/definitions/[object Object]'
        description: 'The next time the Maintenance Window will actually run, taking into account any specified times for the Maintenance Window to become active or inactive.'
    description: Information about the Maintenance Window.
  MaintenanceWindowIdentityForTarget:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the Maintenance Window.
    description: The Maintenance Window to which the specified target belongs.
  MaintenanceWindowIdentityList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  MaintenanceWindowLambdaClientContext:
    type: string
    minLength: 1
    maxLength: 8000
  MaintenanceWindowLambdaParameters:
    type: object
    properties:
      ClientContext:
        $ref: '#/definitions/[object Object]'
        description: Pass client-specific information to the Lambda function that you are invoking. You can then process the client information in your Lambda function as you choose through the context variable.
      Qualifier:
        $ref: '#/definitions/[object Object]'
        description: '(Optional) Specify a Lambda function version or alias name. If you specify a function version, the action uses the qualified function ARN to invoke a specific Lambda function. If you specify an alias name, the action uses the alias ARN to invoke the Lambda function version to which the alias points.'
      Payload:
        $ref: '#/definitions/[object Object]'
        description: JSON to provide to your Lambda function as input.
    description: '<p>The parameters for a LAMBDA task type.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For Lambda tasks, Systems Manager ignores any values specified for TaskParameters and LoggingInfo.</p> </note>'
  MaintenanceWindowLambdaPayload:
    type: string
    maxLength: 4096
    format: password
  MaintenanceWindowLambdaQualifier:
    type: string
    minLength: 1
    maxLength: 128
  MaintenanceWindowMaxResults:
    type: integer
    minimum: 10
    maximum: 100
  MaintenanceWindowName:
    type: string
    pattern: '^[a-zA-Z0-9_\-.]{3,128}$'
    minLength: 3
    maxLength: 128
  MaintenanceWindowResourceType:
    type: string
    enum:
      - INSTANCE
  MaintenanceWindowRunCommandParameters:
    type: object
    properties:
      Comment:
        $ref: '#/definitions/[object Object]'
        description: Information about the command(s) to execute.
      DocumentHash:
        $ref: '#/definitions/[object Object]'
        description: The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated.
      DocumentHashType:
        $ref: '#/definitions/[object Object]'
        description: SHA-256 or SHA-1. SHA-1 hashes have been deprecated.
      NotificationConfig:
        $ref: '#/definitions/[object Object]'
        description: Configurations for sending notifications about command status changes on a per-instance basis.
      OutputS3BucketName:
        $ref: '#/definitions/[object Object]'
        description: The name of the Amazon S3 bucket.
      OutputS3KeyPrefix:
        $ref: '#/definitions/[object Object]'
        description: The Amazon S3 bucket subfolder.
      Parameters:
        $ref: '#/definitions/[object Object]'
        description: The parameters for the RUN_COMMAND task execution.
      ServiceRoleArn:
        $ref: '#/definitions/[object Object]'
        description: The IAM service role to assume during task execution.
      TimeoutSeconds:
        $ref: '#/definitions/[object Object]'
        description: 'If this time is reached and the command has not already started executing, it doesn''t run.'
    description: '<p>The parameters for a RUN_COMMAND task type.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For Run Command tasks, Systems Manager uses specified values for <code>TaskParameters</code> and <code>LoggingInfo</code> only if no values are specified for <code>TaskInvocationParameters</code>. </p> </note>'
  MaintenanceWindowSchedule:
    type: string
    minLength: 1
    maxLength: 256
  MaintenanceWindowSearchMaxResults:
    type: integer
    minimum: 1
  MaintenanceWindowStepFunctionsInput:
    type: string
    maxLength: 4096
    format: password
  MaintenanceWindowStepFunctionsName:
    type: string
    minLength: 1
    maxLength: 80
  MaintenanceWindowStepFunctionsParameters:
    type: object
    properties:
      Input:
        $ref: '#/definitions/[object Object]'
        description: The inputs for the STEP_FUNCTION task.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the STEP_FUNCTION task.
    description: '<p>The parameters for a STEP_FUNCTION task.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For Step Functions tasks, Systems Manager ignores any values specified for <code>TaskParameters</code> and <code>LoggingInfo</code>.</p> </note>'
  MaintenanceWindowStringDateTime:
    type: string
  MaintenanceWindowTarget:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The Maintenance Window ID where the target is registered.
      WindowTargetId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the target.
      ResourceType:
        $ref: '#/definitions/[object Object]'
        description: The type of target.
      Targets:
        $ref: '#/definitions/[object Object]'
        description: 'The targets (either instances or tags). Instances are specified using Key=instanceids,Values=&lt;instanceid1&gt;,&lt;instanceid2&gt;. Tags are specified using Key=&lt;tag name&gt;,Values=&lt;tag value&gt;.'
      OwnerInformation:
        $ref: '#/definitions/[object Object]'
        description: User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The target name.
      Description:
        $ref: '#/definitions/[object Object]'
        description: A description of the target.
    description: The target registered with the Maintenance Window.
  MaintenanceWindowTargetId:
    type: string
    pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
    minLength: 36
    maxLength: 36
  MaintenanceWindowTargetList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  MaintenanceWindowTask:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The Maintenance Window ID where the task is registered.
      WindowTaskId:
        $ref: '#/definitions/[object Object]'
        description: The task ID.
      TaskArn:
        $ref: '#/definitions/[object Object]'
        description: 'The resource that the task uses during execution. For RUN_COMMAND and AUTOMATION task types, <code>TaskArn</code> is the Systems Manager document name or ARN. For LAMBDA tasks, it''s the function name or ARN. For STEP_FUNCTION tasks, it''s the state machine ARN.'
      Type:
        $ref: '#/definitions/[object Object]'
        description: 'The type of task. The type can be one of the following: RUN_COMMAND, AUTOMATION, LAMBDA, or STEP_FUNCTION.'
      Targets:
        $ref: '#/definitions/[object Object]'
        description: 'The targets (either instances or tags). Instances are specified using Key=instanceids,Values=&lt;instanceid1&gt;,&lt;instanceid2&gt;. Tags are specified using Key=&lt;tag name&gt;,Values=&lt;tag value&gt;.'
      TaskParameters:
        $ref: '#/definitions/[object Object]'
        description: '<p>The parameters that should be passed to the task when it is executed.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>'
      Priority:
        $ref: '#/definitions/[object Object]'
        description: 'The priority of the task in the Maintenance Window. The lower the number, the higher the priority. Tasks that have the same priority are scheduled in parallel.'
      LoggingInfo:
        $ref: '#/definitions/[object Object]'
        description: '<p>Information about an Amazon S3 bucket to write task-level logs to.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>'
      ServiceRoleArn:
        $ref: '#/definitions/[object Object]'
        description: The role that should be assumed when executing the task
      MaxConcurrency:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of targets this task can be run for in parallel.
      MaxErrors:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of errors allowed before this task stops being scheduled.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The task name.
      Description:
        $ref: '#/definitions/[object Object]'
        description: A description of the task.
    description: Information about a task defined for a Maintenance Window.
  MaintenanceWindowTaskArn:
    type: string
    minLength: 1
    maxLength: 1600
  MaintenanceWindowTaskId:
    type: string
    pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
    minLength: 36
    maxLength: 36
  MaintenanceWindowTaskInvocationParameters:
    type: object
    properties:
      RunCommand:
        $ref: '#/definitions/[object Object]'
        description: The parameters for a RUN_COMMAND task type.
      Automation:
        $ref: '#/definitions/[object Object]'
        description: The parameters for an AUTOMATION task type.
      StepFunctions:
        $ref: '#/definitions/[object Object]'
        description: The parameters for a STEP_FUNCTION task type.
      Lambda:
        $ref: '#/definitions/[object Object]'
        description: The parameters for a LAMBDA task type.
    description: The parameters for task execution.
  MaintenanceWindowTaskList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  MaintenanceWindowTaskParameterName:
    type: string
    minLength: 1
    maxLength: 255
  MaintenanceWindowTaskParameterValue:
    type: string
    minLength: 1
    maxLength: 255
    format: password
  MaintenanceWindowTaskParameterValueExpression:
    type: object
    properties:
      Values:
        $ref: '#/definitions/[object Object]'
        description: 'This field contains an array of 0 or more strings, each 1 to 255 characters in length.'
    description: Defines the values for a task parameter.
  MaintenanceWindowTaskParameterValueList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  MaintenanceWindowTaskParameters:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/MaintenanceWindowTaskParameterName'
        value:
          $ref: '#/definitions/MaintenanceWindowTaskParameterValueExpression'
  MaintenanceWindowTaskParametersList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  MaintenanceWindowTaskPriority:
    type: integer
    minimum: 0
  MaintenanceWindowTaskTargetId:
    type: string
    maxLength: 36
  MaintenanceWindowTaskType:
    type: string
    enum:
      - RUN_COMMAND
      - AUTOMATION
      - STEP_FUNCTIONS
      - LAMBDA
  MaintenanceWindowTimezone:
    type: string
  MaintenanceWindowsForTargetList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ManagedInstanceId:
    type: string
    pattern: '^mi-[0-9a-f]{17}$'
  MaxConcurrency:
    type: string
    pattern: '^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$'
    minLength: 1
    maxLength: 7
  MaxErrors:
    type: string
    pattern: '^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$'
    minLength: 1
    maxLength: 7
  MaxResults:
    type: integer
    minimum: 1
    maximum: 50
  MaxResultsEC2Compatible:
    type: integer
    minimum: 5
    maximum: 50
  NextToken:
    type: string
  NonCompliantSummary:
    type: object
    properties:
      NonCompliantCount:
        $ref: '#/definitions/[object Object]'
        description: The total number of compliance items that are not compliant.
      SeveritySummary:
        $ref: '#/definitions/[object Object]'
        description: A summary of the non-compliance severity by compliance type
    description: A summary of resources that are not compliant. The summary is organized according to resource type.
  String:
    type: string
  NormalStringMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/String'
  NotificationArn:
    type: string
  NotificationConfig:
    type: object
    properties:
      NotificationArn:
        $ref: '#/definitions/[object Object]'
        description: An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.
      NotificationEvents:
        $ref: '#/definitions/[object Object]'
        description: 'The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.'
      NotificationType:
        $ref: '#/definitions/[object Object]'
        description: 'Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. '
    description: Configurations for sending notifications.
  NotificationEvent:
    type: string
    enum:
      - All
      - InProgress
      - Success
      - TimedOut
      - Cancelled
      - Failed
  NotificationEventList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  NotificationType:
    type: string
    enum:
      - Command
      - Invocation
  OperatingSystem:
    type: string
    enum:
      - WINDOWS
      - AMAZON_LINUX
      - AMAZON_LINUX_2
      - UBUNTU
      - REDHAT_ENTERPRISE_LINUX
      - SUSE
      - CENTOS
  OutputSource:
    type: object
    properties:
      OutputSourceId:
        $ref: '#/definitions/[object Object]'
        description: 'The ID of the output source, for example the URL of an Amazon S3 bucket.'
      OutputSourceType:
        $ref: '#/definitions/[object Object]'
        description: 'The type of source where the association execution details are stored, for example, Amazon S3.'
    description: Information about the source where the association execution details are stored.
  OutputSourceId:
    type: string
    minLength: 36
    maxLength: 36
  OutputSourceType:
    type: string
  OwnerInformation:
    type: string
    minLength: 1
    maxLength: 128
    format: password
  PSParameterName:
    type: string
    minLength: 1
    maxLength: 2048
  PSParameterSelector:
    type: string
    minLength: 0
    maxLength: 128
  PSParameterValue:
    type: string
    minLength: 1
    maxLength: 4096
  PSParameterVersion:
    type: integer
  Parameter:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the parameter.
      Type:
        $ref: '#/definitions/[object Object]'
        description: 'The type of parameter. Valid values include the following: String, String list, Secure string.'
      Value:
        $ref: '#/definitions/[object Object]'
        description: The parameter value.
      Version:
        $ref: '#/definitions/[object Object]'
        description: The parameter version.
      Selector:
        $ref: '#/definitions/[object Object]'
        description: '<p>Either the version number or the label used to retrieve the parameter value. Specify selectors by using one of the following formats:</p> <p>parameter_name:version</p> <p>parameter_name:label</p>'
      SourceResult:
        $ref: '#/definitions/[object Object]'
        description: Applies to parameters that reference information in other AWS services. SourceResult is the raw result or response from the source.
      LastModifiedDate:
        $ref: '#/definitions/[object Object]'
        description: Date the parameter was last changed or updated and the parameter version was created.
      ARN:
        $ref: '#/definitions/[object Object]'
        description: The Amazon Resource Name (ARN) of the parameter.
    description: An Amazon EC2 Systems Manager parameter in Parameter Store.
  ParameterDescription:
    type: string
    minLength: 0
    maxLength: 1024
  ParameterHistory:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the parameter.
      Type:
        $ref: '#/definitions/[object Object]'
        description: The type of parameter used.
      KeyId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the query key used for this parameter.
      LastModifiedDate:
        $ref: '#/definitions/[object Object]'
        description: Date the parameter was last changed or updated.
      LastModifiedUser:
        $ref: '#/definitions/[object Object]'
        description: Amazon Resource Name (ARN) of the AWS user who last changed the parameter.
      Description:
        $ref: '#/definitions/[object Object]'
        description: Information about the parameter.
      Value:
        $ref: '#/definitions/[object Object]'
        description: The parameter value.
      AllowedPattern:
        $ref: '#/definitions/[object Object]'
        description: <p>Parameter names can include the following letters and symbols.</p> <p>a-zA-Z0-9_.-</p>
      Version:
        $ref: '#/definitions/[object Object]'
        description: The parameter version.
      Labels:
        $ref: '#/definitions/[object Object]'
        description: Labels assigned to the parameter version.
    description: Information about parameter usage.
  ParameterHistoryList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ParameterKeyId:
    type: string
    pattern: '^([a-zA-Z0-9:/_-]+)$'
    minLength: 1
    maxLength: 256
  ParameterLabel:
    type: string
    minLength: 1
    maxLength: 100
  ParameterLabelList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 10
  ParameterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ParameterMetadata:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The parameter name.
      Type:
        $ref: '#/definitions/[object Object]'
        description: 'The type of parameter. Valid parameter types include the following: String, String list, Secure string.'
      KeyId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the query key used for this parameter.
      LastModifiedDate:
        $ref: '#/definitions/[object Object]'
        description: Date the parameter was last changed or updated.
      LastModifiedUser:
        $ref: '#/definitions/[object Object]'
        description: Amazon Resource Name (ARN) of the AWS user who last changed the parameter.
      Description:
        $ref: '#/definitions/[object Object]'
        description: Description of the parameter actions.
      AllowedPattern:
        $ref: '#/definitions/[object Object]'
        description: <p>A parameter name can include only the following letters and symbols.</p> <p>a-zA-Z0-9_.-</p>
      Version:
        $ref: '#/definitions/[object Object]'
        description: The parameter version.
    description: Metada includes information like the ARN of the last user and the date/time the parameter was last used.
  ParameterMetadataList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ParameterName:
    type: string
  ParameterNameList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 10
  ParameterStringFilter:
    type: object
    required:
      - Key
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: The name of the filter.
      Option:
        $ref: '#/definitions/[object Object]'
        description: 'Valid options are Equals and BeginsWith. For Path filter, valid options are Recursive and OneLevel.'
      Values:
        $ref: '#/definitions/[object Object]'
        description: The value you want to search for.
    description: <p>One or more filters. Use a filter to return a more specific list of results.</p> <note> <p>The <code>Name</code> field can't be used with the <a>GetParametersByPath</a> API action.</p> </note>
  ParameterStringFilterKey:
    type: string
    pattern: 'tag:.+|Name|Type|KeyId|Path|Label'
    minLength: 1
    maxLength: 132
  ParameterStringFilterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ParameterStringFilterValue:
    type: string
    minLength: 1
    maxLength: 1024
  ParameterStringFilterValueList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 50
  ParameterStringQueryOption:
    type: string
    minLength: 1
    maxLength: 10
  ParameterType:
    type: string
    enum:
      - String
      - StringList
      - SecureString
  ParameterValue:
    type: string
  ParameterValueList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  Parameters:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ParameterName'
        value:
          $ref: '#/definitions/ParameterValueList'
  ParametersFilter:
    type: object
    required:
      - Key
      - Values
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: The name of the filter.
      Values:
        $ref: '#/definitions/[object Object]'
        description: The filter values.
    description: 'This data type is deprecated. Instead, use <a>ParameterStringFilter</a>.'
  ParametersFilterKey:
    type: string
    enum:
      - Name
      - Type
      - KeyId
  ParametersFilterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ParametersFilterValue:
    type: string
    minLength: 1
    maxLength: 1024
  ParametersFilterValueList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 50
  Patch:
    type: object
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: The ID of the patch (this is different than the Microsoft Knowledge Base ID).
      ReleaseDate:
        $ref: '#/definitions/[object Object]'
        description: The date the patch was released.
      Title:
        $ref: '#/definitions/[object Object]'
        description: The title of the patch.
      Description:
        $ref: '#/definitions/[object Object]'
        description: The description of the patch.
      ContentUrl:
        $ref: '#/definitions/[object Object]'
        description: The URL where more information can be obtained about the patch.
      Vendor:
        $ref: '#/definitions/[object Object]'
        description: The name of the vendor providing the patch.
      ProductFamily:
        $ref: '#/definitions/[object Object]'
        description: 'The product family the patch is applicable for (for example, Windows).'
      Product:
        $ref: '#/definitions/[object Object]'
        description: 'The specific product the patch is applicable for (for example, WindowsServer2016).'
      Classification:
        $ref: '#/definitions/[object Object]'
        description: 'The classification of the patch (for example, SecurityUpdates, Updates, CriticalUpdates).'
      MsrcSeverity:
        $ref: '#/definitions/[object Object]'
        description: 'The severity of the patch (for example Critical, Important, Moderate).'
      KbNumber:
        $ref: '#/definitions/[object Object]'
        description: The Microsoft Knowledge Base ID of the patch.
      MsrcNumber:
        $ref: '#/definitions/[object Object]'
        description: The ID of the MSRC bulletin the patch is related to.
      Language:
        $ref: '#/definitions/[object Object]'
        description: The language of the patch if it's language-specific.
    description: Represents metadata about a patch.
  PatchAction:
    type: string
    enum:
      - ALLOW_AS_DEPENDENCY
      - BLOCK
  PatchBaselineIdentity:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the patch baseline.
      BaselineName:
        $ref: '#/definitions/[object Object]'
        description: The name of the patch baseline.
      OperatingSystem:
        $ref: '#/definitions/[object Object]'
        description: 'Defines the operating system the patch baseline applies to. The Default value is WINDOWS. '
      BaselineDescription:
        $ref: '#/definitions/[object Object]'
        description: The description of the patch baseline.
      DefaultBaseline:
        $ref: '#/definitions/[object Object]'
        description: 'Whether this is the default baseline. Note that Systems Manager supports creating multiple default patch baselines. For example, you can create a default patch baseline for each operating system.'
    description: Defines the basic information about a patch baseline.
  PatchBaselineIdentityList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  PatchBaselineMaxResults:
    type: integer
    minimum: 1
    maximum: 100
  PatchClassification:
    type: string
  PatchComplianceData:
    type: object
    required:
      - Title
      - KBId
      - Classification
      - Severity
      - State
      - InstalledTime
    properties:
      Title:
        $ref: '#/definitions/[object Object]'
        description: The title of the patch.
      KBId:
        $ref: '#/definitions/[object Object]'
        description: The operating system-specific ID of the patch.
      Classification:
        $ref: '#/definitions/[object Object]'
        description: 'The classification of the patch (for example, SecurityUpdates, Updates, CriticalUpdates).'
      Severity:
        $ref: '#/definitions/[object Object]'
        description: 'The severity of the patch (for example, Critical, Important, Moderate).'
      State:
        $ref: '#/definitions/[object Object]'
        description: '<p>The state of the patch on the instance, such as INSTALLED or FAILED.</p> <p>For descriptions of each patch state, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-compliance-about.html#sysman-compliance-monitor-patch">About Patch Compliance</a> in the <i>AWS Systems Manager User Guide</i>.</p>'
      InstalledTime:
        $ref: '#/definitions/[object Object]'
        description: The date/time the patch was installed on the instance. Note that not all operating systems provide this level of information.
    description: Information about the state of a patch on a particular instance as it relates to the patch baseline used to patch the instance.
  PatchComplianceDataList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  PatchComplianceDataState:
    type: string
    enum:
      - INSTALLED
      - INSTALLED_OTHER
      - INSTALLED_REJECTED
      - MISSING
      - NOT_APPLICABLE
      - FAILED
  PatchComplianceLevel:
    type: string
    enum:
      - CRITICAL
      - HIGH
      - MEDIUM
      - LOW
      - INFORMATIONAL
      - UNSPECIFIED
  PatchComplianceMaxResults:
    type: integer
    minimum: 10
    maximum: 100
  PatchContentUrl:
    type: string
  PatchDeploymentStatus:
    type: string
    enum:
      - APPROVED
      - PENDING_APPROVAL
      - EXPLICIT_APPROVED
      - EXPLICIT_REJECTED
  PatchDescription:
    type: string
  PatchFailedCount:
    type: integer
  PatchFilter:
    type: object
    required:
      - Key
      - Values
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: <p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>
      Values:
        $ref: '#/definitions/[object Object]'
        description: <p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>
    description: '<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>'
  PatchFilterGroup:
    type: object
    required:
      - PatchFilters
    properties:
      PatchFilters:
        $ref: '#/definitions/[object Object]'
        description: The set of patch filters that make up the group.
    description: 'A set of patch filters, typically used for approval rules.'
  PatchFilterKey:
    type: string
    enum:
      - PRODUCT
      - CLASSIFICATION
      - MSRC_SEVERITY
      - PATCH_ID
      - SECTION
      - PRIORITY
      - SEVERITY
  PatchFilterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 0
    maxItems: 4
  PatchFilterValue:
    type: string
    minLength: 1
    maxLength: 64
  PatchFilterValueList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 20
  PatchGroup:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 256
  PatchGroupList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  PatchGroupPatchBaselineMapping:
    type: object
    properties:
      PatchGroup:
        $ref: '#/definitions/[object Object]'
        description: The name of the patch group registered with the patch baseline.
      BaselineIdentity:
        $ref: '#/definitions/[object Object]'
        description: The patch baseline the patch group is registered with.
    description: The mapping between a patch group and the patch baseline the patch group is registered with.
  PatchGroupPatchBaselineMappingList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  PatchId:
    type: string
    minLength: 1
    maxLength: 100
  PatchIdList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 0
    maxItems: 50
  PatchInstalledCount:
    type: integer
  PatchInstalledOtherCount:
    type: integer
  PatchInstalledRejectedCount:
    type: integer
  PatchKbNumber:
    type: string
  PatchLanguage:
    type: string
  PatchList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  PatchMissingCount:
    type: integer
  PatchMsrcNumber:
    type: string
  PatchMsrcSeverity:
    type: string
  PatchNotApplicableCount:
    type: integer
  PatchOperationType:
    type: string
    enum:
      - Scan
      - Install
  PatchOrchestratorFilter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: The key for the filter.
      Values:
        $ref: '#/definitions/[object Object]'
        description: The value for the filter.
    description: Defines a filter used in Patch Manager APIs.
  PatchOrchestratorFilterKey:
    type: string
    minLength: 1
    maxLength: 128
  PatchOrchestratorFilterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 0
    maxItems: 5
  PatchOrchestratorFilterValue:
    type: string
    minLength: 1
    maxLength: 256
  PatchOrchestratorFilterValues:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  PatchProduct:
    type: string
  PatchProductFamily:
    type: string
  PatchRule:
    type: object
    required:
      - PatchFilterGroup
      - ApproveAfterDays
    properties:
      PatchFilterGroup:
        $ref: '#/definitions/[object Object]'
        description: The patch filter group that defines the criteria for the rule.
      ComplianceLevel:
        $ref: '#/definitions/[object Object]'
        description: 'A compliance severity level for all approved patches in a patch baseline. Valid compliance severity levels include the following: Unspecified, Critical, High, Medium, Low, and Informational.'
      ApproveAfterDays:
        $ref: '#/definitions/[object Object]'
        description: 'The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline. For example, a value of <code>7</code> means that patches are approved seven days after they are released. '
      EnableNonSecurity:
        $ref: '#/definitions/[object Object]'
        description: 'For instances identified by the approval rule filters, enables a patch baseline to apply non-security updates available in the specified repository. The default value is ''false''. Applies to Linux instances only.'
    description: Defines an approval rule for a patch baseline.
  PatchRuleGroup:
    type: object
    required:
      - PatchRules
    properties:
      PatchRules:
        $ref: '#/definitions/[object Object]'
        description: The rules that make up the rule group.
    description: A set of rules defining the approval rules for a patch baseline.
  PatchRuleList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 0
    maxItems: 10
  PatchSeverity:
    type: string
  PatchSource:
    type: object
    required:
      - Name
      - Products
      - Configuration
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name specified to identify the patch source.
      Products:
        $ref: '#/definitions/[object Object]'
        description: 'The specific operating system versions a patch repository applies to, such as "Ubuntu16.04", "AmazonLinux2016.09", "RedhatEnterpriseLinux7.2" or "Suse12.7". For lists of supported product values, see <a>PatchFilter</a>.'
      Configuration:
        $ref: '#/definitions/[object Object]'
        description: '<p>The value of the yum repo configuration. For example:</p> <p> <code>cachedir=/var/cache/yum/$basesearch</code> </p> <p> <code>$releasever</code> </p> <p> <code>keepcache=0</code> </p> <p> <code>debuglevel=2</code> </p>'
    description: 'Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.'
  PatchSourceConfiguration:
    type: string
    minLength: 1
    maxLength: 512
    format: password
  PatchSourceList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 0
    maxItems: 20
  PatchSourceName:
    type: string
    pattern: '^[a-zA-Z0-9_\-.]{3,50}$'
  PatchSourceProduct:
    type: string
    minLength: 1
    maxLength: 128
  PatchSourceProductList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 20
  PatchStatus:
    type: object
    properties:
      DeploymentStatus:
        $ref: '#/definitions/[object Object]'
        description: 'The approval status of a patch (APPROVED, PENDING_APPROVAL, EXPLICIT_APPROVED, EXPLICIT_REJECTED).'
      ComplianceLevel:
        $ref: '#/definitions/[object Object]'
        description: The compliance severity level for a patch.
      ApprovalDate:
        $ref: '#/definitions/[object Object]'
        description: The date the patch was approved (or will be approved if the status is PENDING_APPROVAL).
    description: Information about the approval status of a patch.
  PatchTitle:
    type: string
  PatchVendor:
    type: string
  PingStatus:
    type: string
    enum:
      - Online
      - ConnectionLost
      - Inactive
  PlatformType:
    type: string
    enum:
      - Windows
      - Linux
  PlatformTypeList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  Product:
    type: string
  ProgressCounters:
    type: object
    properties:
      TotalSteps:
        $ref: '#/definitions/[object Object]'
        description: The total number of steps executed in all specified AWS Regions and accounts for the current Automation execution.
      SuccessSteps:
        $ref: '#/definitions/[object Object]'
        description: The total number of steps that successfully completed in all specified AWS Regions and accounts for the current Automation execution.
      FailedSteps:
        $ref: '#/definitions/[object Object]'
        description: The total number of steps that failed to execute in all specified AWS Regions and accounts for the current Automation execution.
      CancelledSteps:
        $ref: '#/definitions/[object Object]'
        description: The total number of steps that the system cancelled in all specified AWS Regions and accounts for the current Automation execution.
      TimedOutSteps:
        $ref: '#/definitions/[object Object]'
        description: The total number of steps that timed out in all specified AWS Regions and accounts for the current Automation execution.
    description: An aggregate of step execution statuses displayed in the AWS Console for a multi-Region and multi-account Automation execution.
  PutInventoryMessage:
    type: string
  Region:
    type: string
  Regions:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 50
  RegistrationLimit:
    type: integer
    minimum: 1
    maximum: 1000
  RegistrationsCount:
    type: integer
    minimum: 1
    maximum: 1000
  RemainingCount:
    type: integer
  ResolvedTargets:
    type: object
    properties:
      ParameterValues:
        $ref: '#/definitions/[object Object]'
        description: A list of parameter values sent to targets that resolved during the Automation execution.
      Truncated:
        $ref: '#/definitions/[object Object]'
        description: A boolean value indicating whether the resolved target list is truncated.
    description: Information about targets that resolved during the Automation execution.
  ResourceComplianceSummaryItem:
    type: object
    properties:
      ComplianceType:
        $ref: '#/definitions/[object Object]'
        description: The compliance type.
      ResourceType:
        $ref: '#/definitions/[object Object]'
        description: The resource type.
      ResourceId:
        $ref: '#/definitions/[object Object]'
        description: The resource ID.
      Status:
        $ref: '#/definitions/[object Object]'
        description: The compliance status for the resource.
      OverallSeverity:
        $ref: '#/definitions/[object Object]'
        description: The highest severity item found for the resource. The resource is compliant for this item.
      ExecutionSummary:
        $ref: '#/definitions/[object Object]'
        description: Information about the execution.
      CompliantSummary:
        $ref: '#/definitions/[object Object]'
        description: A list of items that are compliant for the resource.
      NonCompliantSummary:
        $ref: '#/definitions/[object Object]'
        description: A list of items that aren't compliant for the resource.
    description: 'Compliance summary information for a specific resource. '
  ResourceComplianceSummaryItemList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ResourceCount:
    type: integer
  ResourceCountByStatus:
    type: string
  ResourceDataSyncAWSKMSKeyARN:
    type: string
    pattern: 'arn:.*'
    minLength: 1
    maxLength: 512
  ResourceDataSyncCreatedTime:
    type: string
    format: date-time
  ResourceDataSyncItem:
    type: object
    properties:
      SyncName:
        $ref: '#/definitions/[object Object]'
        description: The name of the Resource Data Sync.
      S3Destination:
        $ref: '#/definitions/[object Object]'
        description: Configuration information for the target Amazon S3 bucket.
      LastSyncTime:
        $ref: '#/definitions/[object Object]'
        description: The last time the configuration attempted to sync (UTC).
      LastSuccessfulSyncTime:
        $ref: '#/definitions/[object Object]'
        description: The last time the sync operations returned a status of <code>SUCCESSFUL</code> (UTC).
      LastStatus:
        $ref: '#/definitions/[object Object]'
        description: The status reported by the last sync.
      SyncCreatedTime:
        $ref: '#/definitions/[object Object]'
        description: The date and time the configuration was created (UTC).
      LastSyncStatusMessage:
        $ref: '#/definitions/[object Object]'
        description: The status message details reported by the last sync.
    description: 'Information about a Resource Data Sync configuration, including its current status and last successful sync.'
  ResourceDataSyncItemList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ResourceDataSyncName:
    type: string
    minLength: 1
    maxLength: 64
  ResourceDataSyncS3BucketName:
    type: string
    minLength: 1
    maxLength: 2048
  ResourceDataSyncS3Destination:
    type: object
    required:
      - BucketName
      - SyncFormat
      - Region
    properties:
      BucketName:
        $ref: '#/definitions/[object Object]'
        description: The name of the Amazon S3 bucket where the aggregated data is stored.
      Prefix:
        $ref: '#/definitions/[object Object]'
        description: An Amazon S3 prefix for the bucket.
      SyncFormat:
        $ref: '#/definitions/[object Object]'
        description: 'A supported sync format. The following format is currently supported: JsonSerDe'
      Region:
        $ref: '#/definitions/[object Object]'
        description: The AWS Region with the Amazon S3 bucket targeted by the Resource Data Sync.
      AWSKMSKeyARN:
        $ref: '#/definitions/[object Object]'
        description: The ARN of an encryption key for a destination in Amazon S3. Must belong to the same region as the destination Amazon S3 bucket.
    description: Information about the target Amazon S3 bucket for the Resource Data Sync.
  ResourceDataSyncS3Format:
    type: string
    enum:
      - JsonSerDe
  ResourceDataSyncS3Prefix:
    type: string
    minLength: 1
    maxLength: 256
  ResourceDataSyncS3Region:
    type: string
    minLength: 1
    maxLength: 64
  ResourceId:
    type: string
  ResourceType:
    type: string
    enum:
      - ManagedInstance
      - Document
      - EC2Instance
  ResourceTypeForTagging:
    type: string
    enum:
      - Document
      - ManagedInstance
      - MaintenanceWindow
      - Parameter
      - PatchBaseline
  ResponseCode:
    type: integer
  ResultAttribute:
    type: object
    required:
      - TypeName
    properties:
      TypeName:
        $ref: '#/definitions/[object Object]'
        description: 'Name of the inventory item type. Valid value: AWS:InstanceInformation. Default Value: AWS:InstanceInformation.'
    description: The inventory item result attribute.
  ResultAttributeList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 1
  S3BucketName:
    type: string
    minLength: 3
    maxLength: 63
  S3KeyPrefix:
    type: string
    maxLength: 500
  S3OutputLocation:
    type: object
    properties:
      OutputS3Region:
        $ref: '#/definitions/[object Object]'
        description: '(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.'
      OutputS3BucketName:
        $ref: '#/definitions/[object Object]'
        description: The name of the Amazon S3 bucket.
      OutputS3KeyPrefix:
        $ref: '#/definitions/[object Object]'
        description: The Amazon S3 bucket subfolder.
    description: An Amazon S3 bucket where you want to store the results of this request.
  S3OutputUrl:
    type: object
    properties:
      OutputUrl:
        $ref: '#/definitions/[object Object]'
        description: A URL for an Amazon S3 bucket where you want to store the results of this request.
    description: A URL for the Amazon S3 bucket where you want to store the results of this request.
  S3Region:
    type: string
    minLength: 3
    maxLength: 20
  ScheduleExpression:
    type: string
    minLength: 1
    maxLength: 256
  ScheduledWindowExecution:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the Maintenance Window to be run.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the Maintenance Window to be run.
      ExecutionTime:
        $ref: '#/definitions/[object Object]'
        description: 'The time, in ISO-8601 Extended format, that the Maintenance Window is scheduled to be run.'
    description: Information about a scheduled execution for a Maintenance Window.
  ScheduledWindowExecutionList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ServiceRole:
    type: string
  Session:
    type: object
    properties:
      SessionId:
        $ref: '#/definitions/[object Object]'
        description: The ID of the session.
      Target:
        $ref: '#/definitions/[object Object]'
        description: The instance that the Session Manager session connected to.
      Status:
        $ref: '#/definitions/[object Object]'
        description: 'The status of the session. For example, "Connected" or "Terminated".'
      StartDate:
        $ref: '#/definitions/[object Object]'
        description: 'The date and time, in ISO-8601 Extended format, when the session began.'
      EndDate:
        $ref: '#/definitions/[object Object]'
        description: 'The date and time, in ISO-8601 Extended format, when the session was terminated.'
      DocumentName:
        $ref: '#/definitions/[object Object]'
        description: 'The name of the Session Manager SSM document used to define the parameters and plugin settings for the session. For example, <code>SSM-SessionManagerRunShell</code>.'
      Owner:
        $ref: '#/definitions/[object Object]'
        description: The ID of the AWS user account that started the session.
      Details:
        $ref: '#/definitions/[object Object]'
        description: Reserved for future use.
      OutputUrl:
        $ref: '#/definitions/[object Object]'
        description: Reserved for future use.
    description: Information about a Session Manager connection to an instance.
  SessionDetails:
    type: string
    minLength: 1
    maxLength: 1024
  SessionFilter:
    type: object
    required:
      - key
      - value
    properties:
      key:
        $ref: '#/definitions/[object Object]'
        description: The name of the filter.
      value:
        $ref: '#/definitions/[object Object]'
        description: '<p>The filter value. Valid values for each filter key are as follows:</p> <ul> <li> <p>InvokedAfter: Specify a timestamp to limit your results. For example, specify 2018-08-29T00:00:00Z to see sessions that started August 29, 2018, and later.</p> </li> <li> <p>InvokedBefore: Specify a timestamp to limit your results. For example, specify 2018-08-29T00:00:00Z to see sessions that started before August 29, 2018.</p> </li> <li> <p>Target: Specify an instance to which session connections have been made.</p> </li> <li> <p>Owner: Specify an AWS user account to see a list of sessions started by that user.</p> </li> <li> <p>Status: Specify a valid session status to see a list of all sessions with that status. Status values you can specify include:</p> <ul> <li> <p>Connected</p> </li> <li> <p>Connecting</p> </li> <li> <p>Disconnected</p> </li> <li> <p>Terminated</p> </li> <li> <p>Terminating</p> </li> <li> <p>Failed</p> </li> </ul> </li> </ul>'
    description: Describes a filter for Session Manager information.
  SessionFilterKey:
    type: string
    enum:
      - InvokedAfter
      - InvokedBefore
      - Target
      - Owner
      - Status
  SessionFilterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 5
  SessionFilterValue:
    type: string
    minLength: 1
    maxLength: 200
  SessionId:
    type: string
    minLength: 1
    maxLength: 96
  SessionList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  SessionManagerCloudWatchOutputUrl:
    type: string
    minLength: 1
    maxLength: 2083
  SessionManagerOutputUrl:
    type: object
    properties:
      S3OutputUrl:
        $ref: '#/definitions/[object Object]'
        description: Reserved for future use.
      CloudWatchOutputUrl:
        $ref: '#/definitions/[object Object]'
        description: Reserved for future use.
    description: Reserved for future use.
  SessionManagerParameterName:
    type: string
    minLength: 1
    maxLength: 255
  SessionManagerParameterValue:
    type: string
    minLength: 1
    maxLength: 65535
  SessionManagerParameterValueList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  SessionManagerParameters:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/SessionManagerParameterName'
        value:
          $ref: '#/definitions/SessionManagerParameterValueList'
  SessionManagerS3OutputUrl:
    type: string
    minLength: 1
    maxLength: 2083
  SessionMaxResults:
    type: integer
    minimum: 1
    maximum: 200
  SessionOwner:
    type: string
    minLength: 1
    maxLength: 256
  SessionState:
    type: string
    enum:
      - Active
      - History
  SessionStatus:
    type: string
    enum:
      - Connected
      - Connecting
      - Disconnected
      - Terminated
      - Terminating
      - Failed
  SessionTarget:
    type: string
    minLength: 1
    maxLength: 50
  SeveritySummary:
    type: object
    properties:
      CriticalCount:
        $ref: '#/definitions/[object Object]'
        description: The total number of resources or compliance items that have a severity level of critical. Critical severity is determined by the organization that published the compliance items.
      HighCount:
        $ref: '#/definitions/[object Object]'
        description: The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.
      MediumCount:
        $ref: '#/definitions/[object Object]'
        description: The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.
      LowCount:
        $ref: '#/definitions/[object Object]'
        description: The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.
      InformationalCount:
        $ref: '#/definitions/[object Object]'
        description: The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.
      UnspecifiedCount:
        $ref: '#/definitions/[object Object]'
        description: The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.
    description: The number of managed instances found for each patch severity level defined in the request filter.
  SignalType:
    type: string
    enum:
      - Approve
      - Reject
      - StartStep
      - StopStep
      - Resume
  SnapshotDownloadUrl:
    type: string
  SnapshotId:
    type: string
    pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
    minLength: 36
    maxLength: 36
  StandardErrorContent:
    type: string
    maxLength: 8000
  StandardOutputContent:
    type: string
    maxLength: 24000
  StatusAdditionalInfo:
    type: string
    maxLength: 1024
  StatusDetails:
    type: string
    minLength: 0
    maxLength: 100
  StatusMessage:
    type: string
    minLength: 1
    maxLength: 1024
  StepExecution:
    type: object
    properties:
      StepName:
        $ref: '#/definitions/[object Object]'
        description: The name of this execution step.
      Action:
        $ref: '#/definitions/[object Object]'
        description: The action this step performs. The action determines the behavior of the step.
      TimeoutSeconds:
        $ref: '#/definitions/[object Object]'
        description: The timeout seconds of the step.
      OnFailure:
        $ref: '#/definitions/[object Object]'
        description: The action to take if the step fails. The default value is Abort.
      MaxAttempts:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of tries to run the action of the step. The default value is 1.
      ExecutionStartTime:
        $ref: '#/definitions/[object Object]'
        description: 'If a step has begun execution, this contains the time the step started. If the step is in Pending status, this field is not populated.'
      ExecutionEndTime:
        $ref: '#/definitions/[object Object]'
        description: 'If a step has finished execution, this contains the time the execution ended. If the step has not yet concluded, this field is not populated.'
      StepStatus:
        $ref: '#/definitions/[object Object]'
        description: 'The execution status for this step. Valid values include: Pending, InProgress, Success, Cancelled, Failed, and TimedOut.'
      ResponseCode:
        $ref: '#/definitions/[object Object]'
        description: The response code returned by the execution of the step.
      Inputs:
        $ref: '#/definitions/[object Object]'
        description: Fully-resolved values passed into the step before execution.
      Outputs:
        $ref: '#/definitions/[object Object]'
        description: Returned values from the execution of the step.
      Response:
        $ref: '#/definitions/[object Object]'
        description: A message associated with the response code for an execution.
      FailureMessage:
        $ref: '#/definitions/[object Object]'
        description: 'If a step failed, this message explains why the execution failed.'
      FailureDetails:
        $ref: '#/definitions/[object Object]'
        description: Information about the Automation failure.
      StepExecutionId:
        $ref: '#/definitions/[object Object]'
        description: The unique ID of a step execution.
      OverriddenParameters:
        $ref: '#/definitions/[object Object]'
        description: A user-specified list of parameters to override when executing a step.
      IsEnd:
        $ref: '#/definitions/[object Object]'
        description: The flag which can be used to end automation no matter whether the step succeeds or fails.
      NextStep:
        $ref: '#/definitions/[object Object]'
        description: The next step after the step succeeds.
      IsCritical:
        $ref: '#/definitions/[object Object]'
        description: The flag which can be used to help decide whether the failure of current step leads to the Automation failure.
      ValidNextSteps:
        $ref: '#/definitions/[object Object]'
        description: 'Strategies used when step fails, we support Continue and Abort. Abort will fail the automation when the step fails. Continue will ignore the failure of current step and allow automation to execute the next step. With conditional branching, we add step:stepName to support the automation to go to another specific step.'
      Targets:
        $ref: '#/definitions/[object Object]'
        description: The targets for the step execution.
      TargetLocation:
        $ref: '#/definitions/[object Object]'
        description: The combination of AWS Regions and accounts targeted by the current Automation execution.
    description: Detailed information about an the execution state of an Automation step.
  StepExecutionFilter:
    type: object
    required:
      - Key
      - Values
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: 'One or more keys to limit the results. Valid filter keys include the following: StepName, Action, StepExecutionId, StepExecutionStatus, StartTimeBefore, StartTimeAfter.'
      Values:
        $ref: '#/definitions/[object Object]'
        description: The values of the filter key.
    description: A filter to limit the amount of step execution information returned by the call.
  StepExecutionFilterKey:
    type: string
    enum:
      - StartTimeBefore
      - StartTimeAfter
      - StepExecutionStatus
      - StepExecutionId
      - StepName
      - Action
  StepExecutionFilterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 6
  StepExecutionFilterValue:
    type: string
    minLength: 1
    maxLength: 150
  StepExecutionFilterValueList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 10
  StepExecutionList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  StopType:
    type: string
    enum:
      - Complete
      - Cancel
  StreamUrl:
    type: string
  StringDateTime:
    type: string
    pattern: '^([\-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d(?!:))?)?(\17[0-5]\d([\.,]\d)?)?([zZ]|([\-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$'
  StringList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  Tag:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: The name of the tag.
      Value:
        $ref: '#/definitions/[object Object]'
        description: The value of the tag.
    description: 'Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.'
  TagKey:
    type: string
    pattern: '^\(\?!^\(\?i\)aws:\)\(\?=^[\p\{L\}\p\{Z\}\p\{N\}_.:/=\+\-@]*$\).*$'
    minLength: 1
    maxLength: 128
  TagList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  TagValue:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 256
  Target:
    type: object
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: 'User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.'
      Values:
        $ref: '#/definitions/[object Object]'
        description: 'User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.'
    description: '<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don''t provide one or more instance IDs in the call.</p> <p/>'
  TargetCount:
    type: integer
  TargetKey:
    type: string
    pattern: '^[\p{L}\p{Z}\p{N}_.:/=\-@]*$'
    minLength: 1
    maxLength: 128
  TargetLocation:
    type: object
    properties:
      Accounts:
        $ref: '#/definitions/[object Object]'
        description: The AWS accounts targeted by the current Automation execution.
      Regions:
        $ref: '#/definitions/[object Object]'
        description: The AWS Regions targeted by the current Automation execution.
      TargetLocationMaxConcurrency:
        $ref: '#/definitions/[object Object]'
        description: 'The maxium number of AWS accounts and AWS regions allowed to run the Automation concurrently '
      TargetLocationMaxErrors:
        $ref: '#/definitions/[object Object]'
        description: 'The maxium number of errors allowed before the system stops queueing additional Automation executions for the currently executing Automation. '
      ExecutionRoleName:
        $ref: '#/definitions/[object Object]'
        description: The Automation execution role used by the currently executing Automation.
    description: The combination of AWS Regions and accounts targeted by the current Automation execution.
  TargetLocations:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 100
  TargetMapKey:
    type: string
    minLength: 1
    maxLength: 50
  TargetMapValueList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 0
    maxItems: 25
  TargetMap:
    type: array
    minItems: 1
    maxItems: 20
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/TargetMapKey'
        value:
          $ref: '#/definitions/TargetMapValueList'
  TargetMapValue:
    type: string
    minLength: 1
    maxLength: 50
  TargetMaps:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 0
    maxItems: 300
  TargetParameterList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  TargetType:
    type: string
    pattern: '^\/[\w\.\-\:\/]*$'
    maxLength: 200
  TargetValue:
    type: string
  TargetValues:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 0
    maxItems: 50
  Targets:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 0
    maxItems: 5
  TimeoutSeconds:
    type: integer
    minimum: 30
    maximum: 2592000
  TokenValue:
    type: string
    minLength: 0
    maxLength: 300
  TotalCount:
    type: integer
  Url:
    type: string
  ValidNextStep:
    type: string
    minLength: 1
    maxLength: 65535
  ValidNextStepList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  Version:
    type: string
    pattern: '^[0-9]{1,6}(\.[0-9]{1,6}){2,3}$'
