swagger: '2.0'
info:
  version: '2015-12-10'
  x-release: v4
  title: AWS Service Catalog
  description: '<fullname>AWS Service Catalog</fullname> <p> <a href="https://aws.amazon.com/servicecatalog/">AWS Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for use on AWS. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href="http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html">AWS Service Catalog Concepts</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: servicecatalog
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/servicecatalog-2015-12-10.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/servicecatalog/'
host: servicecatalog.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AcceptPortfolioShare
      description: Accepts an offer to share the specified portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AcceptPortfolioShareOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AcceptPortfolioShareInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AssociatePrincipalWithPortfolio':
    post:
      operationId: AssociatePrincipalWithPortfolio
      description: Associates the specified principal ARN with the specified portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociatePrincipalWithPortfolioOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssociatePrincipalWithPortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AssociateProductWithPortfolio':
    post:
      operationId: AssociateProductWithPortfolio
      description: Associates the specified product with the specified portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateProductWithPortfolioOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssociateProductWithPortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AssociateServiceActionWithProvisioningArtifact':
    post:
      operationId: AssociateServiceActionWithProvisioningArtifact
      description: Associates a self-service action with a provisioning artifact.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateServiceActionWithProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: DuplicateResourceException
          schema:
            $ref: '#/definitions/DuplicateResourceException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssociateServiceActionWithProvisioningArtifactInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AssociateTagOptionWithResource':
    post:
      operationId: AssociateTagOptionWithResource
      description: Associate the specified TagOption with the specified portfolio or product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateTagOptionWithResourceOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: DuplicateResourceException
          schema:
            $ref: '#/definitions/DuplicateResourceException'
        '485':
          description: InvalidStateException
          schema:
            $ref: '#/definitions/InvalidStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssociateTagOptionWithResourceInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#BatchAssociateServiceActionWithProvisioningArtifact':
    post:
      operationId: BatchAssociateServiceActionWithProvisioningArtifact
      description: Associates multiple self-service actions with provisioning artifacts.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchAssociateServiceActionWithProvisioningArtifactOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/BatchAssociateServiceActionWithProvisioningArtifactInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#BatchDisassociateServiceActionFromProvisioningArtifact':
    post:
      operationId: BatchDisassociateServiceActionFromProvisioningArtifact
      description: Disassociates a batch of self-service actions from the specified provisioning artifact.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchDisassociateServiceActionFromProvisioningArtifactOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/BatchDisassociateServiceActionFromProvisioningArtifactInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CopyProduct':
    post:
      operationId: CopyProduct
      description: '<p>Copies the specified source product to the specified target product or a new product.</p> <p>You can copy a product to the same account or another account. You can copy a product to the same region or another region.</p> <p>This operation is performed asynchronously. To track the progress of the operation, use <a>DescribeCopyProductStatus</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CopyProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CopyProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateConstraint':
    post:
      operationId: CreateConstraint
      description: Creates a constraint.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateConstraintOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: DuplicateResourceException
          schema:
            $ref: '#/definitions/DuplicateResourceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateConstraintInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreatePortfolio':
    post:
      operationId: CreatePortfolio
      description: Creates a portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePortfolioOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreatePortfolioShare':
    post:
      operationId: CreatePortfolioShare
      description: Shares the specified portfolio with the specified account or organization node. Shares to an organization node can only be created by the master account of an Organization. AWSOrganizationsAccess must be enabled in order to create a portfolio share to an organization node.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePortfolioShareOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '483':
          description: OperationNotSupportedException
          schema:
            $ref: '#/definitions/OperationNotSupportedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePortfolioShareInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateProduct':
    post:
      operationId: CreateProduct
      description: Creates a product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateProductOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateProvisionedProductPlan':
    post:
      operationId: CreateProvisionedProductPlan
      description: '<p>Creates a plan. A plan includes the list of resources to be created (when provisioning a new product) or modified (when updating a provisioned product) when the plan is executed.</p> <p>You can create one plan per provisioned product. To create a plan for an existing provisioned product, the product status must be AVAILBLE or TAINTED.</p> <p>To view the resource changes in the change set, use <a>DescribeProvisionedProductPlan</a>. To create or modify the provisioned product, use <a>ExecuteProvisionedProductPlan</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateProvisionedProductPlanOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidStateException
          schema:
            $ref: '#/definitions/InvalidStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateProvisionedProductPlanInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateProvisioningArtifact':
    post:
      operationId: CreateProvisioningArtifact
      description: <p>Creates a provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot create a provisioning artifact for a product that was shared with you.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateProvisioningArtifactInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateServiceAction':
    post:
      operationId: CreateServiceAction
      description: Creates a self-service action.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateServiceActionOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateServiceActionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateTagOption':
    post:
      operationId: CreateTagOption
      description: Creates a TagOption.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTagOptionOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: DuplicateResourceException
          schema:
            $ref: '#/definitions/DuplicateResourceException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTagOptionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteConstraint':
    post:
      operationId: DeleteConstraint
      description: Deletes the specified constraint.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteConstraintOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteConstraintInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeletePortfolio':
    post:
      operationId: DeletePortfolio
      description: '<p>Deletes the specified portfolio.</p> <p>You cannot delete a portfolio if it was shared with you or if it has associated products, users, constraints, or shared accounts.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeletePortfolioOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '483':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeletePortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeletePortfolioShare':
    post:
      operationId: DeletePortfolioShare
      description: Stops sharing the specified portfolio with the specified account or organization node. Shares to an organization node can only be deleted by the master account of an Organization.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeletePortfolioShareOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '482':
          description: OperationNotSupportedException
          schema:
            $ref: '#/definitions/OperationNotSupportedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeletePortfolioShareInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteProduct':
    post:
      operationId: DeleteProduct
      description: <p>Deletes the specified product.</p> <p>You cannot delete a product if it was shared with you or is associated with a portfolio.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '483':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteProvisionedProductPlan':
    post:
      operationId: DeleteProvisionedProductPlan
      description: Deletes the specified plan.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteProvisionedProductPlanOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteProvisionedProductPlanInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteProvisioningArtifact':
    post:
      operationId: DeleteProvisioningArtifact
      description: '<p>Deletes the specified provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot delete a provisioning artifact associated with a product that was shared with you. You cannot delete the last provisioning artifact for a product, because a product must have at least one provisioning artifact.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteProvisioningArtifactInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteServiceAction':
    post:
      operationId: DeleteServiceAction
      description: Deletes a self-service action.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteServiceActionOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteServiceActionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteTagOption':
    post:
      operationId: DeleteTagOption
      description: <p>Deletes the specified TagOption.</p> <p>You cannot delete a TagOption if it is associated with a product or portfolio.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTagOptionOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteTagOptionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeConstraint':
    post:
      operationId: DescribeConstraint
      description: Gets information about the specified constraint.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConstraintOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConstraintInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeCopyProductStatus':
    post:
      operationId: DescribeCopyProductStatus
      description: Gets the status of the specified copy product operation.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeCopyProductStatusOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeCopyProductStatusInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribePortfolio':
    post:
      operationId: DescribePortfolio
      description: Gets information about the specified portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribePortfolioOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribePortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribePortfolioShareStatus':
    post:
      operationId: DescribePortfolioShareStatus
      description: Gets the status of the specified portfolio share operation. This API can only be called by the master account in the organization.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribePortfolioShareStatusOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '482':
          description: OperationNotSupportedException
          schema:
            $ref: '#/definitions/OperationNotSupportedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribePortfolioShareStatusInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeProduct':
    post:
      operationId: DescribeProduct
      description: Gets information about the specified product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeProductAsAdmin':
    post:
      operationId: DescribeProductAsAdmin
      description: Gets information about the specified product. This operation is run with administrator access.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProductAsAdminOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProductAsAdminInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeProductView':
    post:
      operationId: DescribeProductView
      description: Gets information about the specified product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProductViewOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProductViewInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeProvisionedProduct':
    post:
      operationId: DescribeProvisionedProduct
      description: Gets information about the specified provisioned product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProvisionedProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProvisionedProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeProvisionedProductPlan':
    post:
      operationId: DescribeProvisionedProductPlan
      description: Gets information about the resource changes for the specified plan.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProvisionedProductPlanOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProvisionedProductPlanInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeProvisioningArtifact':
    post:
      operationId: DescribeProvisioningArtifact
      description: Gets information about the specified provisioning artifact (also known as a version) for the specified product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProvisioningArtifactInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeProvisioningParameters':
    post:
      operationId: DescribeProvisioningParameters
      description: '<p>Gets information about the configuration required to provision the specified product using the specified provisioning artifact.</p> <p>If the output contains a TagOption key with an empty list of values, there is a TagOption conflict for that key. The end user cannot take action to fix the conflict, and launch is not blocked. In subsequent calls to <a>ProvisionProduct</a>, do not include conflicted TagOption keys as tags, or this causes the error "Parameter validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i>". Tag the provisioned product with the value <code>sc-tagoption-conflict-portfolioId-productId</code>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProvisioningParametersOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProvisioningParametersInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeRecord':
    post:
      operationId: DescribeRecord
      description: '<p>Gets information about the specified request operation.</p> <p>Use this operation after calling a request operation (for example, <a>ProvisionProduct</a>, <a>TerminateProvisionedProduct</a>, or <a>UpdateProvisionedProduct</a>). </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRecordOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeRecordInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeServiceAction':
    post:
      operationId: DescribeServiceAction
      description: Describes a self-service action.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeServiceActionOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeServiceActionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeTagOption':
    post:
      operationId: DescribeTagOption
      description: Gets information about the specified TagOption.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTagOptionOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTagOptionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DisableAWSOrganizationsAccess':
    post:
      operationId: DisableAWSOrganizationsAccess
      description: Disable portfolio sharing through AWS Organizations feature. This feature will not delete your current shares but it will prevent you from creating new shares throughout your organization. Current shares will not be in sync with your organization structure if it changes after calling this API. This API can only be called by the master account in the organization.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisableAWSOrganizationsAccessOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidStateException
          schema:
            $ref: '#/definitions/InvalidStateException'
        '482':
          description: OperationNotSupportedException
          schema:
            $ref: '#/definitions/OperationNotSupportedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisableAWSOrganizationsAccessInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DisassociatePrincipalFromPortfolio':
    post:
      operationId: DisassociatePrincipalFromPortfolio
      description: Disassociates a previously associated principal ARN from a specified portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociatePrincipalFromPortfolioOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisassociatePrincipalFromPortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DisassociateProductFromPortfolio':
    post:
      operationId: DisassociateProductFromPortfolio
      description: 'Disassociates the specified product from the specified portfolio. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateProductFromPortfolioOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateProductFromPortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DisassociateServiceActionFromProvisioningArtifact':
    post:
      operationId: DisassociateServiceActionFromProvisioningArtifact
      description: Disassociates the specified self-service action association from the specified provisioning artifact.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateServiceActionFromProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateServiceActionFromProvisioningArtifactInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DisassociateTagOptionFromResource':
    post:
      operationId: DisassociateTagOptionFromResource
      description: Disassociates the specified TagOption from the specified resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateTagOptionFromResourceOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateTagOptionFromResourceInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#EnableAWSOrganizationsAccess':
    post:
      operationId: EnableAWSOrganizationsAccess
      description: '<p>Enable portfolio sharing feature through AWS Organizations. This API will allow Service Catalog to receive updates on your organization in order to sync your shares with the current structure. This API can only be called by the master account in the organization.</p> <p>By calling this API Service Catalog will make a call to organizations:EnableAWSServiceAccess on your behalf so that your shares can be in sync with any changes in your AWS Organizations structure.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EnableAWSOrganizationsAccessOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidStateException
          schema:
            $ref: '#/definitions/InvalidStateException'
        '482':
          description: OperationNotSupportedException
          schema:
            $ref: '#/definitions/OperationNotSupportedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/EnableAWSOrganizationsAccessInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ExecuteProvisionedProductPlan':
    post:
      operationId: ExecuteProvisionedProductPlan
      description: Provisions or modifies a product based on the resource changes for the specified plan.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ExecuteProvisionedProductPlanOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidStateException
          schema:
            $ref: '#/definitions/InvalidStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ExecuteProvisionedProductPlanInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ExecuteProvisionedProductServiceAction':
    post:
      operationId: ExecuteProvisionedProductServiceAction
      description: Executes a self-service action against a provisioned product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ExecuteProvisionedProductServiceActionOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidStateException
          schema:
            $ref: '#/definitions/InvalidStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ExecuteProvisionedProductServiceActionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetAWSOrganizationsAccessStatus':
    post:
      operationId: GetAWSOrganizationsAccessStatus
      description: Get the Access Status for AWS Organization portfolio share feature. This API can only be called by the master account in the organization.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAWSOrganizationsAccessStatusOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: OperationNotSupportedException
          schema:
            $ref: '#/definitions/OperationNotSupportedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetAWSOrganizationsAccessStatusInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListAcceptedPortfolioShares':
    post:
      operationId: ListAcceptedPortfolioShares
      description: Lists all portfolios for which sharing was accepted by this account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAcceptedPortfolioSharesOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: OperationNotSupportedException
          schema:
            $ref: '#/definitions/OperationNotSupportedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAcceptedPortfolioSharesInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListConstraintsForPortfolio':
    post:
      operationId: ListConstraintsForPortfolio
      description: Lists the constraints for the specified portfolio and product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListConstraintsForPortfolioOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListConstraintsForPortfolioInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListLaunchPaths':
    post:
      operationId: ListLaunchPaths
      description: 'Lists the paths to the specified product. A path is how the user has access to a specified product, and is necessary when provisioning a product. A path also determines the constraints put on the product.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLaunchPathsOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListLaunchPathsInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListOrganizationPortfolioAccess':
    post:
      operationId: ListOrganizationPortfolioAccess
      description: Lists the organization nodes that have access to the specified portfolio. This API can only be called by the master account in the organization.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOrganizationPortfolioAccessOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '482':
          description: OperationNotSupportedException
          schema:
            $ref: '#/definitions/OperationNotSupportedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListOrganizationPortfolioAccessInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListPortfolioAccess':
    post:
      operationId: ListPortfolioAccess
      description: Lists the account IDs that have access to the specified portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPortfolioAccessOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPortfolioAccessInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListPortfolios':
    post:
      operationId: ListPortfolios
      description: Lists all portfolios in the catalog.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPortfoliosOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPortfoliosInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListPortfoliosForProduct':
    post:
      operationId: ListPortfoliosForProduct
      description: Lists all portfolios that the specified product is associated with.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPortfoliosForProductOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPortfoliosForProductInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListPrincipalsForPortfolio':
    post:
      operationId: ListPrincipalsForPortfolio
      description: Lists all principal ARNs associated with the specified portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPrincipalsForPortfolioOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPrincipalsForPortfolioInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListProvisionedProductPlans':
    post:
      operationId: ListProvisionedProductPlans
      description: Lists the plans for the specified provisioned product or all plans to which the user has access.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProvisionedProductPlansOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListProvisionedProductPlansInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListProvisioningArtifacts':
    post:
      operationId: ListProvisioningArtifacts
      description: Lists all provisioning artifacts (also known as versions) for the specified product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProvisioningArtifactsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListProvisioningArtifactsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListProvisioningArtifactsForServiceAction':
    post:
      operationId: ListProvisioningArtifactsForServiceAction
      description: Lists all provisioning artifacts (also known as versions) for the specified self-service action.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProvisioningArtifactsForServiceActionOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListProvisioningArtifactsForServiceActionInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListRecordHistory':
    post:
      operationId: ListRecordHistory
      description: Lists the specified requests or all performed requests.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRecordHistoryOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListRecordHistoryInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListResourcesForTagOption':
    post:
      operationId: ListResourcesForTagOption
      description: Lists the resources associated with the specified TagOption.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResourcesForTagOptionOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListResourcesForTagOptionInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListServiceActions':
    post:
      operationId: ListServiceActions
      description: Lists all self-service actions.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListServiceActionsOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListServiceActionsInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListServiceActionsForProvisioningArtifact':
    post:
      operationId: ListServiceActionsForProvisioningArtifact
      description: Returns a paginated list of self-service actions associated with the specified Product ID and Provisioning Artifact ID.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListServiceActionsForProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListServiceActionsForProvisioningArtifactInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListTagOptions':
    post:
      operationId: ListTagOptions
      description: Lists the specified TagOptions or all TagOptions.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagOptionsOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTagOptionsInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ProvisionProduct':
    post:
      operationId: ProvisionProduct
      description: '<p>Provisions the specified product.</p> <p>A provisioned product is a resourced instance of a product. For example, provisioning a product based on a CloudFormation template launches a CloudFormation stack and its underlying resources. You can check the status of this request using <a>DescribeRecord</a>.</p> <p>If the request contains a tag key with an empty list of values, there is a tag conflict for that key. Do not include conflicted keys as tags, or this causes the error "Parameter validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i>".</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProvisionProductOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: DuplicateResourceException
          schema:
            $ref: '#/definitions/DuplicateResourceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProvisionProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RejectPortfolioShare':
    post:
      operationId: RejectPortfolioShare
      description: Rejects an offer to share the specified portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RejectPortfolioShareOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RejectPortfolioShareInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ScanProvisionedProducts':
    post:
      operationId: ScanProvisionedProducts
      description: '<p>Lists the provisioned products that are available (not terminated).</p> <p>To use additional filtering, see <a>SearchProvisionedProducts</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ScanProvisionedProductsOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ScanProvisionedProductsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SearchProducts':
    post:
      operationId: SearchProducts
      description: Gets information about the products to which the caller has access.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchProductsOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SearchProductsInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SearchProductsAsAdmin':
    post:
      operationId: SearchProductsAsAdmin
      description: Gets information about the products for the specified portfolio or all products.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchProductsAsAdminOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SearchProductsAsAdminInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SearchProvisionedProducts':
    post:
      operationId: SearchProvisionedProducts
      description: Gets information about the provisioned products that meet the specified criteria.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchProvisionedProductsOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SearchProvisionedProductsInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#TerminateProvisionedProduct':
    post:
      operationId: TerminateProvisionedProduct
      description: <p>Terminates the specified provisioned product.</p> <p>This operation does not delete any records associated with the provisioned product.</p> <p>You can check the status of this request using <a>DescribeRecord</a>.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TerminateProvisionedProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TerminateProvisionedProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateConstraint':
    post:
      operationId: UpdateConstraint
      description: Updates the specified constraint.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateConstraintOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateConstraintInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdatePortfolio':
    post:
      operationId: UpdatePortfolio
      description: <p>Updates the specified portfolio.</p> <p>You cannot update a product that was shared with you.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdatePortfolioOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateProduct':
    post:
      operationId: UpdateProduct
      description: Updates the specified product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '482':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateProvisionedProduct':
    post:
      operationId: UpdateProvisionedProduct
      description: '<p>Requests updates to the configuration of the specified provisioned product.</p> <p>If there are tags associated with the object, they cannot be updated or added. Depending on the specific updates requested, this operation can update with no interruption, with some interruption, or replace the provisioned product entirely.</p> <p>You can check the status of this request using <a>DescribeRecord</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateProvisionedProductOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateProvisionedProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateProvisioningArtifact':
    post:
      operationId: UpdateProvisioningArtifact
      description: <p>Updates the specified provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot update a provisioning artifact for a product that was shared with you.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateProvisioningArtifactInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateServiceAction':
    post:
      operationId: UpdateServiceAction
      description: Updates a self-service action.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateServiceActionOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateServiceActionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateTagOption':
    post:
      operationId: UpdateTagOption
      description: Updates the specified TagOption.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateTagOptionOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: DuplicateResourceException
          schema:
            $ref: '#/definitions/DuplicateResourceException'
        '483':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTagOptionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AcceptPortfolioShareOutput:
    type: object
    properties: {}
  AcceptPortfolioShareInput:
    type: object
    required:
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/[object Object]'
        description: The portfolio identifier.
      PortfolioShareType:
        $ref: '#/definitions/[object Object]'
        description: '<p>The type of shared portfolios to accept. The default is to accept imported portfolios.</p> <ul> <li> <p> <code>AWS_ORGANIZATIONS</code> - Accept portfolios shared by the master account of your organization.</p> </li> <li> <p> <code>IMPORTED</code> - Accept imported portfolios.</p> </li> <li> <p> <code>AWS_SERVICECATALOG</code> - Not supported. (Throws ResourceNotFoundException.)</p> </li> </ul> <p>For example, <code>aws servicecatalog accept-portfolio-share --portfolio-id "port-2qwzkwxt3y5fk" --portfolio-share-type AWS_ORGANIZATIONS</code> </p>'
  InvalidParametersException: {}
  ResourceNotFoundException: {}
  LimitExceededException: {}
  AssociatePrincipalWithPortfolioOutput:
    type: object
    properties: {}
  AssociatePrincipalWithPortfolioInput:
    type: object
    required:
      - PortfolioId
      - PrincipalARN
      - PrincipalType
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/[object Object]'
        description: The portfolio identifier.
      PrincipalARN:
        $ref: '#/definitions/[object Object]'
        description: 'The ARN of the principal (IAM user, role, or group).'
      PrincipalType:
        $ref: '#/definitions/[object Object]'
        description: The principal type. The supported value is <code>IAM</code>.
  AssociateProductWithPortfolioOutput:
    type: object
    properties: {}
  AssociateProductWithPortfolioInput:
    type: object
    required:
      - ProductId
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      PortfolioId:
        $ref: '#/definitions/[object Object]'
        description: The portfolio identifier.
      SourcePortfolioId:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the source portfolio.
  AssociateServiceActionWithProvisioningArtifactOutput:
    type: object
    properties: {}
  AssociateServiceActionWithProvisioningArtifactInput:
    type: object
    required:
      - ProductId
      - ProvisioningArtifactId
      - ServiceActionId
    properties:
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: 'The product identifier. For example, <code>prod-abcdzk7xy33qa</code>.'
      ProvisioningArtifactId:
        $ref: '#/definitions/[object Object]'
        description: 'The identifier of the provisioning artifact. For example, <code>pa-4abcdjnxjj6ne</code>.'
      ServiceActionId:
        $ref: '#/definitions/[object Object]'
        description: 'The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.'
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
  DuplicateResourceException: {}
  AssociateTagOptionWithResourceOutput:
    type: object
    properties: {}
  AssociateTagOptionWithResourceInput:
    type: object
    required:
      - ResourceId
      - TagOptionId
    properties:
      ResourceId:
        $ref: '#/definitions/[object Object]'
        description: The resource identifier.
      TagOptionId:
        $ref: '#/definitions/[object Object]'
        description: The TagOption identifier.
  TagOptionNotMigratedException: {}
  InvalidStateException: {}
  BatchAssociateServiceActionWithProvisioningArtifactOutput:
    type: object
    properties:
      FailedServiceActionAssociations:
        $ref: '#/definitions/[object Object]'
        description: 'An object that contains a list of errors, along with information to help you identify the self-service action.'
  BatchAssociateServiceActionWithProvisioningArtifactInput:
    type: object
    required:
      - ServiceActionAssociations
    properties:
      ServiceActionAssociations:
        $ref: '#/definitions/[object Object]'
        description: 'One or more associations, each consisting of the Action ID, the Product ID, and the Provisioning Artifact ID.'
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
  BatchDisassociateServiceActionFromProvisioningArtifactOutput:
    type: object
    properties:
      FailedServiceActionAssociations:
        $ref: '#/definitions/[object Object]'
        description: 'An object that contains a list of errors, along with information to help you identify the self-service action.'
  BatchDisassociateServiceActionFromProvisioningArtifactInput:
    type: object
    required:
      - ServiceActionAssociations
    properties:
      ServiceActionAssociations:
        $ref: '#/definitions/[object Object]'
        description: 'One or more associations, each consisting of the Action ID, the Product ID, and the Provisioning Artifact ID.'
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
  CopyProductOutput:
    type: object
    properties:
      CopyProductToken:
        $ref: '#/definitions/[object Object]'
        description: The token to use to track the progress of the operation.
  CopyProductInput:
    type: object
    required:
      - SourceProductArn
      - IdempotencyToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      SourceProductArn:
        $ref: '#/definitions/[object Object]'
        description: The Amazon Resource Name (ARN) of the source product.
      TargetProductId:
        $ref: '#/definitions/[object Object]'
        description: 'The identifier of the target product. By default, a new product is created.'
      TargetProductName:
        $ref: '#/definitions/[object Object]'
        description: A name for the target product. The default is the name of the source product.
      SourceProvisioningArtifactIdentifiers:
        $ref: '#/definitions/[object Object]'
        description: 'The identifiers of the provisioning artifacts (also known as versions) of the product to copy. By default, all provisioning artifacts are copied.'
      CopyOptions:
        $ref: '#/definitions/[object Object]'
        description: 'The copy options. If the value is <code>CopyTags</code>, the tags from the source product are copied to the target product.'
      IdempotencyToken:
        $ref: '#/definitions/[object Object]'
        description: ' A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request. '
  CreateConstraintOutput:
    type: object
    properties:
      ConstraintDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the constraint.
      ConstraintParameters:
        $ref: '#/definitions/[object Object]'
        description: The constraint parameters.
      Status:
        $ref: '#/definitions/[object Object]'
        description: The status of the current request.
  CreateConstraintInput:
    type: object
    required:
      - PortfolioId
      - ProductId
      - Parameters
      - Type
      - IdempotencyToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/[object Object]'
        description: The portfolio identifier.
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      Parameters:
        $ref: '#/definitions/[object Object]'
        description: '<p>The constraint parameters, in JSON format. The syntax depends on the constraint type as follows:</p> <dl> <dt>LAUNCH</dt> <dd> <p>Specify the <code>RoleArn</code> property as follows:</p> <p> <code>{"RoleArn" : "arn:aws:iam::123456789012:role/LaunchRole"}</code> </p> <p>You cannot have both a <code>LAUNCH</code> and a <code>STACKSET</code> constraint.</p> <p>You also cannot have more than one <code>LAUNCH</code> constraint on a product and portfolio.</p> </dd> <dt>NOTIFICATION</dt> <dd> <p>Specify the <code>NotificationArns</code> property as follows:</p> <p> <code>{"NotificationArns" : ["arn:aws:sns:us-east-1:123456789012:Topic"]}</code> </p> </dd> <dt>STACKSET</dt> <dd> <p>Specify the <code>Parameters</code> property as follows:</p> <p> <code>{"Version": "String", "Properties": {"AccountList": [ "String" ], "RegionList": [ "String" ], "AdminRole": "String", "ExecutionRole": "String"}}</code> </p> <p>You cannot have both a <code>LAUNCH</code> and a <code>STACKSET</code> constraint.</p> <p>You also cannot have more than one <code>STACKSET</code> constraint on a product and portfolio.</p> <p>Products with a <code>STACKSET</code> constraint will launch an AWS CloudFormation stack set.</p> </dd> <dt>TEMPLATE</dt> <dd> <p>Specify the <code>Rules</code> property. For more information, see <a href="http://docs.aws.amazon.com/servicecatalog/latest/adminguide/reference-template_constraint_rules.html">Template Constraint Rules</a>.</p> </dd> </dl>'
      Type:
        $ref: '#/definitions/[object Object]'
        description: <p>The type of constraint.</p> <ul> <li> <p> <code>LAUNCH</code> </p> </li> <li> <p> <code>NOTIFICATION</code> </p> </li> <li> <p> <code>STACKSET</code> </p> </li> <li> <p> <code>TEMPLATE</code> </p> </li> </ul>
      Description:
        $ref: '#/definitions/[object Object]'
        description: The description of the constraint.
      IdempotencyToken:
        $ref: '#/definitions/[object Object]'
        description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
  CreatePortfolioOutput:
    type: object
    properties:
      PortfolioDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the portfolio.
      Tags:
        $ref: '#/definitions/[object Object]'
        description: Information about the tags associated with the portfolio.
  CreatePortfolioInput:
    type: object
    required:
      - DisplayName
      - ProviderName
      - IdempotencyToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      DisplayName:
        $ref: '#/definitions/[object Object]'
        description: The name to use for display purposes.
      Description:
        $ref: '#/definitions/[object Object]'
        description: The description of the portfolio.
      ProviderName:
        $ref: '#/definitions/[object Object]'
        description: The name of the portfolio provider.
      Tags:
        $ref: '#/definitions/[object Object]'
        description: One or more tags.
      IdempotencyToken:
        $ref: '#/definitions/[object Object]'
        description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
  CreatePortfolioShareOutput:
    type: object
    properties:
      PortfolioShareToken:
        $ref: '#/definitions/[object Object]'
        description: The portfolio share unique identifier. This will only be returned if portfolio is shared to an organization node.
  CreatePortfolioShareInput:
    type: object
    required:
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/[object Object]'
        description: The portfolio identifier.
      AccountId:
        $ref: '#/definitions/[object Object]'
        description: 'The AWS account ID. For example, <code>123456789012</code>.'
      OrganizationNode:
        $ref: '#/definitions/[object Object]'
        description: 'The organization node to whom you are going to share. If <code>OrganizationNode</code> is passed in, <code>PortfolioShare</code> will be created for the node and its children (when applies), and a <code>PortfolioShareToken</code> will be returned in the output in order for the administrator to monitor the status of the <code>PortfolioShare</code> creation process.'
  OperationNotSupportedException: {}
  CreateProductOutput:
    type: object
    properties:
      ProductViewDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the product view.
      ProvisioningArtifactDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the provisioning artifact.
      Tags:
        $ref: '#/definitions/[object Object]'
        description: Information about the tags associated with the product.
  CreateProductInput:
    type: object
    required:
      - Name
      - Owner
      - ProductType
      - ProvisioningArtifactParameters
      - IdempotencyToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the product.
      Owner:
        $ref: '#/definitions/[object Object]'
        description: The owner of the product.
      Description:
        $ref: '#/definitions/[object Object]'
        description: The description of the product.
      Distributor:
        $ref: '#/definitions/[object Object]'
        description: The distributor of the product.
      SupportDescription:
        $ref: '#/definitions/[object Object]'
        description: The support information about the product.
      SupportEmail:
        $ref: '#/definitions/[object Object]'
        description: The contact email for product support.
      SupportUrl:
        $ref: '#/definitions/[object Object]'
        description: The contact URL for product support.
      ProductType:
        $ref: '#/definitions/[object Object]'
        description: The type of product.
      Tags:
        $ref: '#/definitions/[object Object]'
        description: One or more tags.
      ProvisioningArtifactParameters:
        $ref: '#/definitions/[object Object]'
        description: The configuration of the provisioning artifact.
      IdempotencyToken:
        $ref: '#/definitions/[object Object]'
        description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
  CreateProvisionedProductPlanOutput:
    type: object
    properties:
      PlanName:
        $ref: '#/definitions/[object Object]'
        description: The name of the plan.
      PlanId:
        $ref: '#/definitions/[object Object]'
        description: The plan identifier.
      ProvisionProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      ProvisionedProductName:
        $ref: '#/definitions/[object Object]'
        description: The user-friendly name of the provisioned product.
      ProvisioningArtifactId:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the provisioning artifact.
  CreateProvisionedProductPlanInput:
    type: object
    required:
      - PlanName
      - PlanType
      - ProductId
      - ProvisionedProductName
      - ProvisioningArtifactId
      - IdempotencyToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PlanName:
        $ref: '#/definitions/[object Object]'
        description: The name of the plan.
      PlanType:
        $ref: '#/definitions/[object Object]'
        description: The plan type.
      NotificationArns:
        $ref: '#/definitions/[object Object]'
        description: Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.
      PathId:
        $ref: '#/definitions/[object Object]'
        description: 'The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use <a>ListLaunchPaths</a>.'
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      ProvisionedProductName:
        $ref: '#/definitions/[object Object]'
        description: A user-friendly name for the provisioned product. This value must be unique for the AWS account and cannot be updated after the product is provisioned.
      ProvisioningArtifactId:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the provisioning artifact.
      ProvisioningParameters:
        $ref: '#/definitions/[object Object]'
        description: Parameters specified by the administrator that are required for provisioning the product.
      IdempotencyToken:
        $ref: '#/definitions/[object Object]'
        description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
      Tags:
        $ref: '#/definitions/[object Object]'
        description: One or more tags.
  CreateProvisioningArtifactOutput:
    type: object
    properties:
      ProvisioningArtifactDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the provisioning artifact.
      Info:
        $ref: '#/definitions/[object Object]'
        description: 'The URL of the CloudFormation template in Amazon S3, in JSON format.'
      Status:
        $ref: '#/definitions/[object Object]'
        description: The status of the current request.
  CreateProvisioningArtifactInput:
    type: object
    required:
      - ProductId
      - Parameters
      - IdempotencyToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      Parameters:
        $ref: '#/definitions/[object Object]'
        description: The configuration for the provisioning artifact.
      IdempotencyToken:
        $ref: '#/definitions/[object Object]'
        description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
  CreateServiceActionOutput:
    type: object
    properties:
      ServiceActionDetail:
        $ref: '#/definitions/[object Object]'
        description: An object containing information about the self-service action.
  CreateServiceActionInput:
    type: object
    required:
      - Name
      - DefinitionType
      - Definition
      - IdempotencyToken
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The self-service action name.
      DefinitionType:
        $ref: '#/definitions/[object Object]'
        description: 'The service action definition type. For example, <code>SSM_AUTOMATION</code>.'
      Definition:
        $ref: '#/definitions/[object Object]'
        description: '<p>The self-service action definition. Can be one of the following:</p> <dl> <dt>Name</dt> <dd> <p>The name of the AWS Systems Manager Document. For example, <code>AWS-RestartEC2Instance</code>.</p> </dd> <dt>Version</dt> <dd> <p>The AWS Systems Manager automation document version. For example, <code>"Version": "1"</code> </p> </dd> <dt>AssumeRole</dt> <dd> <p>The Amazon Resource Name (ARN) of the role that performs the self-service actions on your behalf. For example, <code>"AssumeRole": "arn:aws:iam::12345678910:role/ActionRole"</code>.</p> <p>To reuse the provisioned product launch role, set to <code>"AssumeRole": "LAUNCH_ROLE"</code>.</p> </dd> <dt>Parameters</dt> <dd> <p>The list of parameters in JSON format.</p> <p>For example: <code>[{\"Name\":\"InstanceId\",\"Type\":\"TARGET\"}]</code>.</p> </dd> </dl>'
      Description:
        $ref: '#/definitions/[object Object]'
        description: The self-service action description.
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      IdempotencyToken:
        $ref: '#/definitions/[object Object]'
        description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
  CreateTagOptionOutput:
    type: object
    properties:
      TagOptionDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the TagOption.
  CreateTagOptionInput:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: The TagOption key.
      Value:
        $ref: '#/definitions/[object Object]'
        description: The TagOption value.
  DeleteConstraintOutput:
    type: object
    properties: {}
  DeleteConstraintInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the constraint.
  DeletePortfolioOutput:
    type: object
    properties: {}
  DeletePortfolioInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/[object Object]'
        description: The portfolio identifier.
  ResourceInUseException: {}
  DeletePortfolioShareOutput:
    type: object
    properties:
      PortfolioShareToken:
        $ref: '#/definitions/[object Object]'
        description: The portfolio share unique identifier. This will only be returned if delete is made to an organization node.
  DeletePortfolioShareInput:
    type: object
    required:
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/[object Object]'
        description: The portfolio identifier.
      AccountId:
        $ref: '#/definitions/[object Object]'
        description: The AWS account ID.
      OrganizationNode:
        $ref: '#/definitions/[object Object]'
        description: The organization node to whom you are going to stop sharing.
  DeleteProductOutput:
    type: object
    properties: {}
  DeleteProductInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
  DeleteProvisionedProductPlanOutput:
    type: object
    properties: {}
  DeleteProvisionedProductPlanInput:
    type: object
    required:
      - PlanId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PlanId:
        $ref: '#/definitions/[object Object]'
        description: The plan identifier.
      IgnoreErrors:
        $ref: '#/definitions/[object Object]'
        description: 'If set to true, AWS Service Catalog stops managing the specified provisioned product even if it cannot delete the underlying resources.'
  DeleteProvisioningArtifactOutput:
    type: object
    properties: {}
  DeleteProvisioningArtifactInput:
    type: object
    required:
      - ProductId
      - ProvisioningArtifactId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      ProvisioningArtifactId:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the provisioning artifact.
  DeleteServiceActionOutput:
    type: object
    properties: {}
  DeleteServiceActionInput:
    type: object
    required:
      - Id
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: 'The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.'
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
  DeleteTagOptionOutput:
    type: object
    properties: {}
  DeleteTagOptionInput:
    type: object
    required:
      - Id
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: The TagOption identifier.
  DescribeConstraintOutput:
    type: object
    properties:
      ConstraintDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the constraint.
      ConstraintParameters:
        $ref: '#/definitions/[object Object]'
        description: The constraint parameters.
      Status:
        $ref: '#/definitions/[object Object]'
        description: The status of the current request.
  DescribeConstraintInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the constraint.
  DescribeCopyProductStatusOutput:
    type: object
    properties:
      CopyProductStatus:
        $ref: '#/definitions/[object Object]'
        description: The status of the copy product operation.
      TargetProductId:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the copied product.
      StatusDetail:
        $ref: '#/definitions/[object Object]'
        description: The status message.
  DescribeCopyProductStatusInput:
    type: object
    required:
      - CopyProductToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      CopyProductToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the copy product operation. This token is returned by <a>CopyProduct</a>.
  DescribePortfolioOutput:
    type: object
    properties:
      PortfolioDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the portfolio.
      Tags:
        $ref: '#/definitions/[object Object]'
        description: Information about the tags associated with the portfolio.
      TagOptions:
        $ref: '#/definitions/[object Object]'
        description: Information about the TagOptions associated with the portfolio.
  DescribePortfolioInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/[object Object]'
        description: The portfolio identifier.
  DescribePortfolioShareStatusOutput:
    type: object
    properties:
      PortfolioShareToken:
        $ref: '#/definitions/[object Object]'
        description: 'The token for the portfolio share operation. For example, <code>share-6v24abcdefghi</code>.'
      PortfolioId:
        $ref: '#/definitions/[object Object]'
        description: The portfolio identifier.
      OrganizationNodeValue:
        $ref: '#/definitions/[object Object]'
        description: 'Organization node identifier. It can be either account id, organizational unit id or organization id.'
      Status:
        $ref: '#/definitions/[object Object]'
        description: Status of the portfolio share operation.
      ShareDetails:
        $ref: '#/definitions/[object Object]'
        description: Information about the portfolio share operation.
  DescribePortfolioShareStatusInput:
    type: object
    required:
      - PortfolioShareToken
    properties:
      PortfolioShareToken:
        $ref: '#/definitions/[object Object]'
        description: The token for the portfolio share operation. This token is returned either by CreatePortfolioShare or by DeletePortfolioShare.
  DescribeProductOutput:
    type: object
    properties:
      ProductViewSummary:
        $ref: '#/definitions/[object Object]'
        description: Summary information about the product view.
      ProvisioningArtifacts:
        $ref: '#/definitions/[object Object]'
        description: Information about the provisioning artifacts for the specified product.
  DescribeProductInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
  DescribeProductAsAdminOutput:
    type: object
    properties:
      ProductViewDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the product view.
      ProvisioningArtifactSummaries:
        $ref: '#/definitions/[object Object]'
        description: Information about the provisioning artifacts (also known as versions) for the specified product.
      Tags:
        $ref: '#/definitions/[object Object]'
        description: Information about the tags associated with the product.
      TagOptions:
        $ref: '#/definitions/[object Object]'
        description: Information about the TagOptions associated with the product.
  DescribeProductAsAdminInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
  DescribeProductViewOutput:
    type: object
    properties:
      ProductViewSummary:
        $ref: '#/definitions/[object Object]'
        description: Summary information about the product.
      ProvisioningArtifacts:
        $ref: '#/definitions/[object Object]'
        description: Information about the provisioning artifacts for the product.
  DescribeProductViewInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/[object Object]'
        description: The product view identifier.
  DescribeProvisionedProductOutput:
    type: object
    properties:
      ProvisionedProductDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the provisioned product.
      CloudWatchDashboards:
        $ref: '#/definitions/[object Object]'
        description: Any CloudWatch dashboards that were created when provisioning the product.
  DescribeProvisionedProductInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/[object Object]'
        description: The provisioned product identifier.
  DescribeProvisionedProductPlanOutput:
    type: object
    properties:
      ProvisionedProductPlanDetails:
        $ref: '#/definitions/[object Object]'
        description: Information about the plan.
      ResourceChanges:
        $ref: '#/definitions/[object Object]'
        description: Information about the resource changes that will occur when the plan is executed.
      NextPageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  DescribeProvisionedProductPlanInput:
    type: object
    required:
      - PlanId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PlanId:
        $ref: '#/definitions/[object Object]'
        description: The plan identifier.
      PageSize:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  DescribeProvisioningArtifactOutput:
    type: object
    properties:
      ProvisioningArtifactDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the provisioning artifact.
      Info:
        $ref: '#/definitions/[object Object]'
        description: The URL of the CloudFormation template in Amazon S3.
      Status:
        $ref: '#/definitions/[object Object]'
        description: The status of the current request.
  DescribeProvisioningArtifactInput:
    type: object
    required:
      - ProvisioningArtifactId
      - ProductId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProvisioningArtifactId:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the provisioning artifact.
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      Verbose:
        $ref: '#/definitions/[object Object]'
        description: Indicates whether a verbose level of detail is enabled.
  DescribeProvisioningParametersOutput:
    type: object
    properties:
      ProvisioningArtifactParameters:
        $ref: '#/definitions/[object Object]'
        description: Information about the parameters used to provision the product.
      ConstraintSummaries:
        $ref: '#/definitions/[object Object]'
        description: Information about the constraints used to provision the product.
      UsageInstructions:
        $ref: '#/definitions/[object Object]'
        description: 'Any additional metadata specifically related to the provisioning of the product. For example, see the <code>Version</code> field of the CloudFormation template.'
      TagOptions:
        $ref: '#/definitions/[object Object]'
        description: Information about the TagOptions associated with the resource.
      ProvisioningArtifactPreferences:
        $ref: '#/definitions/[object Object]'
        description: 'An object that contains information about preferences, such as regions and accounts, for the provisioning artifact.'
  DescribeProvisioningParametersInput:
    type: object
    required:
      - ProductId
      - ProvisioningArtifactId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      ProvisioningArtifactId:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the provisioning artifact.
      PathId:
        $ref: '#/definitions/[object Object]'
        description: 'The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use <a>ListLaunchPaths</a>.'
  DescribeRecordOutput:
    type: object
    properties:
      RecordDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the product.
      RecordOutputs:
        $ref: '#/definitions/[object Object]'
        description: 'Information about the product created as the result of a request. For example, the output for a CloudFormation-backed product that creates an S3 bucket would include the S3 bucket URL.'
      NextPageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  DescribeRecordInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/[object Object]'
        description: The record identifier of the provisioned product. This identifier is returned by the request operation.
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
      PageSize:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return with this call.
  DescribeServiceActionOutput:
    type: object
    properties:
      ServiceActionDetail:
        $ref: '#/definitions/[object Object]'
        description: Detailed information about the self-service action.
  DescribeServiceActionInput:
    type: object
    required:
      - Id
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: The self-service action identifier.
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
  DescribeTagOptionOutput:
    type: object
    properties:
      TagOptionDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the TagOption.
  DescribeTagOptionInput:
    type: object
    required:
      - Id
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: The TagOption identifier.
  DisableAWSOrganizationsAccessOutput:
    type: object
    properties: {}
  DisableAWSOrganizationsAccessInput:
    type: object
    properties: {}
  DisassociatePrincipalFromPortfolioOutput:
    type: object
    properties: {}
  DisassociatePrincipalFromPortfolioInput:
    type: object
    required:
      - PortfolioId
      - PrincipalARN
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/[object Object]'
        description: The portfolio identifier.
      PrincipalARN:
        $ref: '#/definitions/[object Object]'
        description: 'The ARN of the principal (IAM user, role, or group).'
  DisassociateProductFromPortfolioOutput:
    type: object
    properties: {}
  DisassociateProductFromPortfolioInput:
    type: object
    required:
      - ProductId
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      PortfolioId:
        $ref: '#/definitions/[object Object]'
        description: The portfolio identifier.
  DisassociateServiceActionFromProvisioningArtifactOutput:
    type: object
    properties: {}
  DisassociateServiceActionFromProvisioningArtifactInput:
    type: object
    required:
      - ProductId
      - ProvisioningArtifactId
      - ServiceActionId
    properties:
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: 'The product identifier. For example, <code>prod-abcdzk7xy33qa</code>.'
      ProvisioningArtifactId:
        $ref: '#/definitions/[object Object]'
        description: 'The identifier of the provisioning artifact. For example, <code>pa-4abcdjnxjj6ne</code>.'
      ServiceActionId:
        $ref: '#/definitions/[object Object]'
        description: 'The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.'
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
  DisassociateTagOptionFromResourceOutput:
    type: object
    properties: {}
  DisassociateTagOptionFromResourceInput:
    type: object
    required:
      - ResourceId
      - TagOptionId
    properties:
      ResourceId:
        $ref: '#/definitions/[object Object]'
        description: The resource identifier.
      TagOptionId:
        $ref: '#/definitions/[object Object]'
        description: The TagOption identifier.
  EnableAWSOrganizationsAccessOutput:
    type: object
    properties: {}
  EnableAWSOrganizationsAccessInput:
    type: object
    properties: {}
  ExecuteProvisionedProductPlanOutput:
    type: object
    properties:
      RecordDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the result of provisioning the product.
  ExecuteProvisionedProductPlanInput:
    type: object
    required:
      - PlanId
      - IdempotencyToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PlanId:
        $ref: '#/definitions/[object Object]'
        description: The plan identifier.
      IdempotencyToken:
        $ref: '#/definitions/[object Object]'
        description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
  ExecuteProvisionedProductServiceActionOutput:
    type: object
    properties:
      RecordDetail:
        $ref: '#/definitions/[object Object]'
        description: An object containing detailed information about the result of provisioning the product.
  ExecuteProvisionedProductServiceActionInput:
    type: object
    required:
      - ProvisionedProductId
      - ServiceActionId
      - ExecuteToken
    properties:
      ProvisionedProductId:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the provisioned product.
      ServiceActionId:
        $ref: '#/definitions/[object Object]'
        description: 'The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.'
      ExecuteToken:
        $ref: '#/definitions/[object Object]'
        description: An idempotency token that uniquely identifies the execute request.
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
  GetAWSOrganizationsAccessStatusOutput:
    type: object
    properties:
      AccessStatus:
        $ref: '#/definitions/[object Object]'
        description: The status of the portfolio share feature.
  GetAWSOrganizationsAccessStatusInput:
    type: object
    properties: {}
  ListAcceptedPortfolioSharesOutput:
    type: object
    properties:
      PortfolioDetails:
        $ref: '#/definitions/[object Object]'
        description: Information about the portfolios.
      NextPageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListAcceptedPortfolioSharesInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
      PageSize:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return with this call.
      PortfolioShareType:
        $ref: '#/definitions/[object Object]'
        description: <p>The type of shared portfolios to list. The default is to list imported portfolios.</p> <ul> <li> <p> <code>AWS_ORGANIZATIONS</code> - List portfolios shared by the master account of your organization</p> </li> <li> <p> <code>AWS_SERVICECATALOG</code> - List default portfolios</p> </li> <li> <p> <code>IMPORTED</code> - List imported portfolios</p> </li> </ul>
  ListConstraintsForPortfolioOutput:
    type: object
    properties:
      ConstraintDetails:
        $ref: '#/definitions/[object Object]'
        description: Information about the constraints.
      NextPageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListConstraintsForPortfolioInput:
    type: object
    required:
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/[object Object]'
        description: The portfolio identifier.
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      PageSize:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  ListLaunchPathsOutput:
    type: object
    properties:
      LaunchPathSummaries:
        $ref: '#/definitions/[object Object]'
        description: Information about the launch path.
      NextPageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListLaunchPathsInput:
    type: object
    required:
      - ProductId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      PageSize:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  ListOrganizationPortfolioAccessOutput:
    type: object
    properties:
      OrganizationNodes:
        $ref: '#/definitions/[object Object]'
        description: Displays information about the organization nodes.
      NextPageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListOrganizationPortfolioAccessInput:
    type: object
    required:
      - PortfolioId
      - OrganizationNodeType
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/[object Object]'
        description: 'The portfolio identifier. For example, <code>port-2abcdext3y5fk</code>.'
      OrganizationNodeType:
        $ref: '#/definitions/[object Object]'
        description: <p>The organization node type that will be returned in the output.</p> <ul> <li> <p> <code>ORGANIZATION</code> - Organization that has access to the portfolio. </p> </li> <li> <p> <code>ORGANIZATIONAL_UNIT</code> - Organizational unit that has access to the portfolio within your organization.</p> </li> <li> <p> <code>ACCOUNT</code> - Account that has access to the portfolio within your organization.</p> </li> </ul>
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
      PageSize:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return with this call.
  ListPortfolioAccessOutput:
    type: object
    properties:
      AccountIds:
        $ref: '#/definitions/[object Object]'
        description: Information about the AWS accounts with access to the portfolio.
      NextPageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListPortfolioAccessInput:
    type: object
    required:
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/[object Object]'
        description: The portfolio identifier.
  ListPortfoliosOutput:
    type: object
    properties:
      PortfolioDetails:
        $ref: '#/definitions/[object Object]'
        description: Information about the portfolios.
      NextPageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListPortfoliosInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
      PageSize:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return with this call.
  ListPortfoliosForProductOutput:
    type: object
    properties:
      PortfolioDetails:
        $ref: '#/definitions/[object Object]'
        description: Information about the portfolios.
      NextPageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListPortfoliosForProductInput:
    type: object
    required:
      - ProductId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
      PageSize:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return with this call.
  ListPrincipalsForPortfolioOutput:
    type: object
    properties:
      Principals:
        $ref: '#/definitions/[object Object]'
        description: The IAM principals (users or roles) associated with the portfolio.
      NextPageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListPrincipalsForPortfolioInput:
    type: object
    required:
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/[object Object]'
        description: The portfolio identifier.
      PageSize:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  ListProvisionedProductPlansOutput:
    type: object
    properties:
      ProvisionedProductPlans:
        $ref: '#/definitions/[object Object]'
        description: Information about the plans.
      NextPageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListProvisionedProductPlansInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProvisionProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      PageSize:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
      AccessLevelFilter:
        $ref: '#/definitions/[object Object]'
        description: The access level to use to obtain results. The default is <code>User</code>.
  ListProvisioningArtifactsOutput:
    type: object
    properties:
      ProvisioningArtifactDetails:
        $ref: '#/definitions/[object Object]'
        description: Information about the provisioning artifacts.
      NextPageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListProvisioningArtifactsInput:
    type: object
    required:
      - ProductId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
  ListProvisioningArtifactsForServiceActionOutput:
    type: object
    properties:
      ProvisioningArtifactViews:
        $ref: '#/definitions/[object Object]'
        description: An array of objects with information about product views and provisioning artifacts.
      NextPageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListProvisioningArtifactsForServiceActionInput:
    type: object
    required:
      - ServiceActionId
    properties:
      ServiceActionId:
        $ref: '#/definitions/[object Object]'
        description: 'The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.'
      PageSize:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
  ListRecordHistoryOutput:
    type: object
    properties:
      RecordDetails:
        $ref: '#/definitions/[object Object]'
        description: 'The records, in reverse chronological order.'
      NextPageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListRecordHistoryInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      AccessLevelFilter:
        $ref: '#/definitions/[object Object]'
        description: The access level to use to obtain results. The default is <code>User</code>.
      SearchFilter:
        $ref: '#/definitions/[object Object]'
        description: The search filter to scope the results.
      PageSize:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  ListResourcesForTagOptionOutput:
    type: object
    properties:
      ResourceDetails:
        $ref: '#/definitions/[object Object]'
        description: Information about the resources.
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  ListResourcesForTagOptionInput:
    type: object
    required:
      - TagOptionId
    properties:
      TagOptionId:
        $ref: '#/definitions/[object Object]'
        description: The TagOption identifier.
      ResourceType:
        $ref: '#/definitions/[object Object]'
        description: <p>The resource type.</p> <ul> <li> <p> <code>Portfolio</code> </p> </li> <li> <p> <code>Product</code> </p> </li> </ul>
      PageSize:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  ListServiceActionsOutput:
    type: object
    properties:
      ServiceActionSummaries:
        $ref: '#/definitions/[object Object]'
        description: An object containing information about the service actions associated with the provisioning artifact.
      NextPageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListServiceActionsInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PageSize:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  ListServiceActionsForProvisioningArtifactOutput:
    type: object
    properties:
      ServiceActionSummaries:
        $ref: '#/definitions/[object Object]'
        description: An object containing information about the self-service actions associated with the provisioning artifact.
      NextPageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListServiceActionsForProvisioningArtifactInput:
    type: object
    required:
      - ProductId
      - ProvisioningArtifactId
    properties:
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: 'The product identifier. For example, <code>prod-abcdzk7xy33qa</code>.'
      ProvisioningArtifactId:
        $ref: '#/definitions/[object Object]'
        description: 'The identifier of the provisioning artifact. For example, <code>pa-4abcdjnxjj6ne</code>.'
      PageSize:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
  ListTagOptionsOutput:
    type: object
    properties:
      TagOptionDetails:
        $ref: '#/definitions/[object Object]'
        description: Information about the TagOptions.
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  ListTagOptionsInput:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/[object Object]'
        description: 'The search filters. If no search filters are specified, the output includes all TagOptions.'
      PageSize:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  ProvisionProductOutput:
    type: object
    properties:
      RecordDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the result of provisioning the product.
  ProvisionProductInput:
    type: object
    required:
      - ProductId
      - ProvisioningArtifactId
      - ProvisionedProductName
      - ProvisionToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      ProvisioningArtifactId:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the provisioning artifact.
      PathId:
        $ref: '#/definitions/[object Object]'
        description: 'The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use <a>ListLaunchPaths</a>.'
      ProvisionedProductName:
        $ref: '#/definitions/[object Object]'
        description: A user-friendly name for the provisioned product. This value must be unique for the AWS account and cannot be updated after the product is provisioned.
      ProvisioningParameters:
        $ref: '#/definitions/[object Object]'
        description: Parameters specified by the administrator that are required for provisioning the product.
      ProvisioningPreferences:
        $ref: '#/definitions/[object Object]'
        description: An object that contains information about the provisioning preferences for a stack set.
      Tags:
        $ref: '#/definitions/[object Object]'
        description: One or more tags.
      NotificationArns:
        $ref: '#/definitions/[object Object]'
        description: Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.
      ProvisionToken:
        $ref: '#/definitions/[object Object]'
        description: An idempotency token that uniquely identifies the provisioning request.
  RejectPortfolioShareOutput:
    type: object
    properties: {}
  RejectPortfolioShareInput:
    type: object
    required:
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/[object Object]'
        description: The portfolio identifier.
      PortfolioShareType:
        $ref: '#/definitions/[object Object]'
        description: '<p>The type of shared portfolios to reject. The default is to reject imported portfolios.</p> <ul> <li> <p> <code>AWS_ORGANIZATIONS</code> - Reject portfolios shared by the master account of your organization.</p> </li> <li> <p> <code>IMPORTED</code> - Reject imported portfolios.</p> </li> <li> <p> <code>AWS_SERVICECATALOG</code> - Not supported. (Throws ResourceNotFoundException.)</p> </li> </ul> <p>For example, <code>aws servicecatalog reject-portfolio-share --portfolio-id "port-2qwzkwxt3y5fk" --portfolio-share-type AWS_ORGANIZATIONS</code> </p>'
  ScanProvisionedProductsOutput:
    type: object
    properties:
      ProvisionedProducts:
        $ref: '#/definitions/[object Object]'
        description: Information about the provisioned products.
      NextPageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ScanProvisionedProductsInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      AccessLevelFilter:
        $ref: '#/definitions/[object Object]'
        description: The access level to use to obtain results. The default is <code>User</code>.
      PageSize:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  SearchProductsOutput:
    type: object
    properties:
      ProductViewSummaries:
        $ref: '#/definitions/[object Object]'
        description: Information about the product views.
      ProductViewAggregations:
        $ref: '#/definitions/[object Object]'
        description: The product view aggregations.
      NextPageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  SearchProductsInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Filters:
        $ref: '#/definitions/[object Object]'
        description: 'The search filters. If no search filters are specified, the output includes all products to which the caller has access.'
      PageSize:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return with this call.
      SortBy:
        $ref: '#/definitions/[object Object]'
        description: 'The sort field. If no value is specified, the results are not sorted.'
      SortOrder:
        $ref: '#/definitions/[object Object]'
        description: 'The sort order. If no value is specified, the results are not sorted.'
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  SearchProductsAsAdminOutput:
    type: object
    properties:
      ProductViewDetails:
        $ref: '#/definitions/[object Object]'
        description: Information about the product views.
      NextPageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  SearchProductsAsAdminInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/[object Object]'
        description: The portfolio identifier.
      Filters:
        $ref: '#/definitions/[object Object]'
        description: 'The search filters. If no search filters are specified, the output includes all products to which the administrator has access.'
      SortBy:
        $ref: '#/definitions/[object Object]'
        description: 'The sort field. If no value is specified, the results are not sorted.'
      SortOrder:
        $ref: '#/definitions/[object Object]'
        description: 'The sort order. If no value is specified, the results are not sorted.'
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
      PageSize:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return with this call.
      ProductSource:
        $ref: '#/definitions/[object Object]'
        description: Access level of the source of the product.
  SearchProvisionedProductsOutput:
    type: object
    properties:
      ProvisionedProducts:
        $ref: '#/definitions/[object Object]'
        description: Information about the provisioned products.
      TotalResultsCount:
        $ref: '#/definitions/[object Object]'
        description: The number of provisioned products found.
      NextPageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  SearchProvisionedProductsInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      AccessLevelFilter:
        $ref: '#/definitions/[object Object]'
        description: The access level to use to obtain results. The default is <code>User</code>.
      Filters:
        $ref: '#/definitions/[object Object]'
        description: '<p>The search filters.</p> <p>When the key is <code>SearchQuery</code>, the searchable fields are <code>arn</code>, <code>createdTime</code>, <code>id</code>, <code>lastRecordId</code>, <code>idempotencyToken</code>, <code>name</code>, <code>physicalId</code>, <code>productId</code>, <code>provisioningArtifact</code>, <code>type</code>, <code>status</code>, <code>tags</code>, <code>userArn</code>, and <code>userArnSession</code>.</p> <p>Example: <code>"SearchQuery":["status:AVAILABLE"]</code> </p>'
      SortBy:
        $ref: '#/definitions/[object Object]'
        description: 'The sort field. If no value is specified, the results are not sorted. The valid values are <code>arn</code>, <code>id</code>, <code>name</code>, and <code>lastRecordId</code>.'
      SortOrder:
        $ref: '#/definitions/[object Object]'
        description: 'The sort order. If no value is specified, the results are not sorted.'
      PageSize:
        $ref: '#/definitions/[object Object]'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/[object Object]'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  TerminateProvisionedProductOutput:
    type: object
    properties:
      RecordDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the result of this request.
  TerminateProvisionedProductInput:
    type: object
    required:
      - TerminateToken
    properties:
      ProvisionedProductName:
        $ref: '#/definitions/[object Object]'
        description: The name of the provisioned product. You cannot specify both <code>ProvisionedProductName</code> and <code>ProvisionedProductId</code>.
      ProvisionedProductId:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the provisioned product. You cannot specify both <code>ProvisionedProductName</code> and <code>ProvisionedProductId</code>.
      TerminateToken:
        $ref: '#/definitions/[object Object]'
        description: 'An idempotency token that uniquely identifies the termination request. This token is only valid during the termination process. After the provisioned product is terminated, subsequent requests to terminate the same provisioned product always return <b>ResourceNotFound</b>.'
      IgnoreErrors:
        $ref: '#/definitions/[object Object]'
        description: 'If set to true, AWS Service Catalog stops managing the specified provisioned product even if it cannot delete the underlying resources.'
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
  UpdateConstraintOutput:
    type: object
    properties:
      ConstraintDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the constraint.
      ConstraintParameters:
        $ref: '#/definitions/[object Object]'
        description: The constraint parameters.
      Status:
        $ref: '#/definitions/[object Object]'
        description: The status of the current request.
  UpdateConstraintInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the constraint.
      Description:
        $ref: '#/definitions/[object Object]'
        description: The updated description of the constraint.
  UpdatePortfolioOutput:
    type: object
    properties:
      PortfolioDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the portfolio.
      Tags:
        $ref: '#/definitions/[object Object]'
        description: Information about the tags associated with the portfolio.
  UpdatePortfolioInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/[object Object]'
        description: The portfolio identifier.
      DisplayName:
        $ref: '#/definitions/[object Object]'
        description: The name to use for display purposes.
      Description:
        $ref: '#/definitions/[object Object]'
        description: The updated description of the portfolio.
      ProviderName:
        $ref: '#/definitions/[object Object]'
        description: The updated name of the portfolio provider.
      AddTags:
        $ref: '#/definitions/[object Object]'
        description: The tags to add.
      RemoveTags:
        $ref: '#/definitions/[object Object]'
        description: The tags to remove.
  UpdateProductOutput:
    type: object
    properties:
      ProductViewDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the product view.
      Tags:
        $ref: '#/definitions/[object Object]'
        description: Information about the tags associated with the product.
  UpdateProductInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The updated product name.
      Owner:
        $ref: '#/definitions/[object Object]'
        description: The updated owner of the product.
      Description:
        $ref: '#/definitions/[object Object]'
        description: The updated description of the product.
      Distributor:
        $ref: '#/definitions/[object Object]'
        description: The updated distributor of the product.
      SupportDescription:
        $ref: '#/definitions/[object Object]'
        description: The updated support description for the product.
      SupportEmail:
        $ref: '#/definitions/[object Object]'
        description: The updated support email for the product.
      SupportUrl:
        $ref: '#/definitions/[object Object]'
        description: The updated support URL for the product.
      AddTags:
        $ref: '#/definitions/[object Object]'
        description: The tags to add to the product.
      RemoveTags:
        $ref: '#/definitions/[object Object]'
        description: The tags to remove from the product.
  UpdateProvisionedProductOutput:
    type: object
    properties:
      RecordDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the result of the request.
  UpdateProvisionedProductInput:
    type: object
    required:
      - UpdateToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProvisionedProductName:
        $ref: '#/definitions/[object Object]'
        description: The updated name of the provisioned product. You cannot specify both <code>ProvisionedProductName</code> and <code>ProvisionedProductId</code>.
      ProvisionedProductId:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the provisioned product. You cannot specify both <code>ProvisionedProductName</code> and <code>ProvisionedProductId</code>.
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the product.
      ProvisioningArtifactId:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the provisioning artifact.
      PathId:
        $ref: '#/definitions/[object Object]'
        description: 'The new path identifier. This value is optional if the product has a default path, and required if the product has more than one path.'
      ProvisioningParameters:
        $ref: '#/definitions/[object Object]'
        description: The new parameters.
      ProvisioningPreferences:
        $ref: '#/definitions/[object Object]'
        description: An object that contains information about the provisioning preferences for a stack set.
      UpdateToken:
        $ref: '#/definitions/[object Object]'
        description: The idempotency token that uniquely identifies the provisioning update request.
  UpdateProvisioningArtifactOutput:
    type: object
    properties:
      ProvisioningArtifactDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the provisioning artifact.
      Info:
        $ref: '#/definitions/[object Object]'
        description: The URL of the CloudFormation template in Amazon S3.
      Status:
        $ref: '#/definitions/[object Object]'
        description: The status of the current request.
  UpdateProvisioningArtifactInput:
    type: object
    required:
      - ProductId
      - ProvisioningArtifactId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      ProvisioningArtifactId:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the provisioning artifact.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The updated name of the provisioning artifact.
      Description:
        $ref: '#/definitions/[object Object]'
        description: The updated description of the provisioning artifact.
      Active:
        $ref: '#/definitions/[object Object]'
        description: Indicates whether the product version is active.
  UpdateServiceActionOutput:
    type: object
    properties:
      ServiceActionDetail:
        $ref: '#/definitions/[object Object]'
        description: Detailed information about the self-service action.
  UpdateServiceActionInput:
    type: object
    required:
      - Id
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: The self-service action identifier.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The self-service action name.
      Definition:
        $ref: '#/definitions/[object Object]'
        description: A map that defines the self-service action.
      Description:
        $ref: '#/definitions/[object Object]'
        description: The self-service action description.
      AcceptLanguage:
        $ref: '#/definitions/[object Object]'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
  UpdateTagOptionOutput:
    type: object
    properties:
      TagOptionDetail:
        $ref: '#/definitions/[object Object]'
        description: Information about the TagOption.
  UpdateTagOptionInput:
    type: object
    required:
      - Id
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: The TagOption identifier.
      Value:
        $ref: '#/definitions/[object Object]'
        description: The updated value.
      Active:
        $ref: '#/definitions/[object Object]'
        description: The updated active state.
  AcceptLanguage:
    type: string
    maxLength: 100
  '[object Object]': {}
  AccessLevelFilter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: <p>The access level.</p> <ul> <li> <p> <code>Account</code> - Filter results based on the account.</p> </li> <li> <p> <code>Role</code> - Filter results based on the federated role of the specified user.</p> </li> <li> <p> <code>User</code> - Filter results based on the specified user.</p> </li> </ul>
      Value:
        $ref: '#/definitions/[object Object]'
        description: The user to which the access level applies. The only supported value is <code>Self</code>.
    description: The access level to use to filter results.
  AccessLevelFilterKey:
    type: string
    enum:
      - Account
      - Role
      - User
  AccessLevelFilterValue:
    type: string
  AccessStatus:
    type: string
    enum:
      - ENABLED
      - UNDER_CHANGE
      - DISABLED
  AccountId:
    type: string
    pattern: '^[0-9]{12}$'
  AccountIds:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  AddTags:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    maxItems: 20
  AllowedValue:
    type: string
  AllowedValues:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ApproximateCount:
    type: integer
  AttributeValue:
    type: string
  CausingEntity:
    type: string
  ChangeAction:
    type: string
    enum:
      - ADD
      - MODIFY
      - REMOVE
  CloudWatchDashboard:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the CloudWatch dashboard.
    description: Information about a CloudWatch dashboard.
  CloudWatchDashboardName:
    type: string
  CloudWatchDashboards:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ConstraintDescription:
    type: string
    maxLength: 2000
  ConstraintDetail:
    type: object
    properties:
      ConstraintId:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the constraint.
      Type:
        $ref: '#/definitions/[object Object]'
        description: <p>The type of constraint.</p> <ul> <li> <p> <code>LAUNCH</code> </p> </li> <li> <p> <code>NOTIFICATION</code> </p> </li> <li> <p>STACKSET</p> </li> <li> <p> <code>TEMPLATE</code> </p> </li> </ul>
      Description:
        $ref: '#/definitions/[object Object]'
        description: The description of the constraint.
      Owner:
        $ref: '#/definitions/[object Object]'
        description: The owner of the constraint.
    description: Information about a constraint.
  ConstraintDetails:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ConstraintParameters:
    type: string
  ConstraintSummaries:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ConstraintSummary:
    type: object
    properties:
      Type:
        $ref: '#/definitions/[object Object]'
        description: <p>The type of constraint.</p> <ul> <li> <p> <code>LAUNCH</code> </p> </li> <li> <p> <code>NOTIFICATION</code> </p> </li> <li> <p>STACKSET</p> </li> <li> <p> <code>TEMPLATE</code> </p> </li> </ul>
      Description:
        $ref: '#/definitions/[object Object]'
        description: The description of the constraint.
    description: Summary information about a constraint.
  ConstraintType:
    type: string
    minLength: 1
    maxLength: 1024
  CopyOption:
    type: string
    enum:
      - CopyTags
  CopyOptions:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  CopyProductStatus:
    type: string
    enum:
      - SUCCEEDED
      - IN_PROGRESS
      - FAILED
  CreatedTime:
    type: string
    format: date-time
  CreationTime:
    type: string
    format: date-time
  DefaultValue:
    type: string
  Description:
    type: string
  Error:
    type: string
  ErrorCode:
    type: string
  ErrorDescription:
    type: string
  EvaluationType:
    type: string
    enum:
      - STATIC
      - DYNAMIC
  FailedServiceActionAssociation:
    type: object
    properties:
      ServiceActionId:
        $ref: '#/definitions/[object Object]'
        description: 'The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.'
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: 'The product identifier. For example, <code>prod-abcdzk7xy33qa</code>.'
      ProvisioningArtifactId:
        $ref: '#/definitions/[object Object]'
        description: 'The identifier of the provisioning artifact. For example, <code>pa-4abcdjnxjj6ne</code>.'
      ErrorCode:
        $ref: '#/definitions/[object Object]'
        description: The error code. Valid values are listed below.
      ErrorMessage:
        $ref: '#/definitions/[object Object]'
        description: A text description of the error.
    description: 'An object containing information about the error, along with identifying information about the self-service action and its associations.'
  FailedServiceActionAssociations:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    maxItems: 50
  HasDefaultPath:
    type: boolean
  Id:
    type: string
    pattern: '^[a-zA-Z0-9_\-]*'
    minLength: 1
    maxLength: 100
  IdempotencyToken:
    type: string
    pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'
    minLength: 1
    maxLength: 128
  IgnoreErrors:
    type: boolean
  InstructionType:
    type: string
  InstructionValue:
    type: string
  LastRequestId:
    type: string
  LaunchPathSummaries:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  LaunchPathSummary:
    type: object
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the product path.
      ConstraintSummaries:
        $ref: '#/definitions/[object Object]'
        description: The constraints on the portfolio-product relationship.
      Tags:
        $ref: '#/definitions/[object Object]'
        description: The tags associated with this product path.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the portfolio to which the user was assigned.
    description: Summary information about a product path for a user.
  ListRecordHistorySearchFilter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: <p>The filter key.</p> <ul> <li> <p> <code>product</code> - Filter results based on the specified product identifier.</p> </li> <li> <p> <code>provisionedproduct</code> - Filter results based on the provisioned product identifier.</p> </li> </ul>
      Value:
        $ref: '#/definitions/[object Object]'
        description: The filter value.
    description: The search filter to use when listing history records.
  ListTagOptionsFilters:
    type: object
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: The TagOption key.
      Value:
        $ref: '#/definitions/[object Object]'
        description: The TagOption value.
      Active:
        $ref: '#/definitions/[object Object]'
        description: The active state.
    description: Filters to use when listing TagOptions.
  LogicalResourceId:
    type: string
  Message:
    type: string
  Namespaces:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  NoEcho:
    type: boolean
  NotificationArn:
    type: string
    pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
    minLength: 1
    maxLength: 1224
  NotificationArns:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    maxItems: 5
  OrganizationNode:
    type: object
    properties:
      Type:
        $ref: '#/definitions/[object Object]'
        description: The organization node type.
      Value:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the organization node.
    description: Information about the organization node.
  OrganizationNodeType:
    type: string
    enum:
      - ORGANIZATION
      - ORGANIZATIONAL_UNIT
      - ACCOUNT
  OrganizationNodeValue:
    type: string
    pattern: '(^[0-9]{12}$)|(^arn:aws:organizations::\d{12}:organization\/o-[a-z0-9]{10,32})|(^o-[a-z0-9]{10,32}$)|(^arn:aws:organizations::\d{12}:ou\/o-[a-z0-9]{10,32}\/ou-[0-9a-z]{4,32}-[0-9a-z]{8,32}$)|(^ou-[0-9a-z]{4,32}-[a-z0-9]{8,32}$)'
  OrganizationNodes:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  OutputKey:
    type: string
  OutputValue:
    type: string
  PageSize:
    type: integer
    minimum: 0
    maximum: 20
  PageToken:
    type: string
    pattern: '[\u0009\u000a\u000d\u0020-\uD7FF\uE000-\uFFFD]*'
    maxLength: 2024
  ParameterConstraints:
    type: object
    properties:
      AllowedValues:
        $ref: '#/definitions/[object Object]'
        description: The values that the administrator has allowed for the parameter.
    description: The constraints that the administrator has put on the parameter.
  ParameterKey:
    type: string
    minLength: 1
    maxLength: 1000
  ParameterType:
    type: string
  ParameterValue:
    type: string
    maxLength: 4096
  PhysicalId:
    type: string
  PhysicalResourceId:
    type: string
  PlanResourceType:
    type: string
    minLength: 1
    maxLength: 256
  PortfolioDescription:
    type: string
    maxLength: 2000
  PortfolioDetail:
    type: object
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: The portfolio identifier.
      ARN:
        $ref: '#/definitions/[object Object]'
        description: The ARN assigned to the portfolio.
      DisplayName:
        $ref: '#/definitions/[object Object]'
        description: The name to use for display purposes.
      Description:
        $ref: '#/definitions/[object Object]'
        description: The description of the portfolio.
      CreatedTime:
        $ref: '#/definitions/[object Object]'
        description: The UTC time stamp of the creation time.
      ProviderName:
        $ref: '#/definitions/[object Object]'
        description: The name of the portfolio provider.
    description: Information about a portfolio.
  PortfolioDetails:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  PortfolioDisplayName:
    type: string
    minLength: 1
    maxLength: 100
  PortfolioName:
    type: string
  PortfolioShareToken:
    type: string
  PortfolioShareType:
    type: string
    enum:
      - IMPORTED
      - AWS_SERVICECATALOG
      - AWS_ORGANIZATIONS
  Principal:
    type: object
    properties:
      PrincipalARN:
        $ref: '#/definitions/[object Object]'
        description: 'The ARN of the principal (IAM user, role, or group).'
      PrincipalType:
        $ref: '#/definitions/[object Object]'
        description: The principal type. The supported value is <code>IAM</code>.
    description: Information about a principal.
  PrincipalARN:
    type: string
    minLength: 1
    maxLength: 1000
  PrincipalType:
    type: string
    enum:
      - IAM
  Principals:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ProductArn:
    type: string
    pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
    minLength: 1
    maxLength: 1224
  ProductSource:
    type: string
    enum:
      - ACCOUNT
  ProductType:
    type: string
    enum:
      - CLOUD_FORMATION_TEMPLATE
      - MARKETPLACE
    maxLength: 8191
  ProductViewAggregationType:
    type: string
  ProductViewAggregationValue:
    type: object
    properties:
      Value:
        $ref: '#/definitions/[object Object]'
        description: The value of the product view aggregation.
      ApproximateCount:
        $ref: '#/definitions/[object Object]'
        description: An approximate count of the products that match the value.
    description: 'A single product view aggregation value/count pair, containing metadata about each product to which the calling user has access.'
  ProductViewAggregationValues:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ProductViewAggregations:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ProductViewAggregationType'
        value:
          $ref: '#/definitions/ProductViewAggregationValues'
  ProductViewDetail:
    type: object
    properties:
      ProductViewSummary:
        $ref: '#/definitions/[object Object]'
        description: Summary information about the product view.
      Status:
        $ref: '#/definitions/[object Object]'
        description: <p>The status of the product.</p> <ul> <li> <p> <code>AVAILABLE</code> - The product is ready for use.</p> </li> <li> <p> <code>CREATING</code> - Product creation has started; the product is not ready for use.</p> </li> <li> <p> <code>FAILED</code> - An action failed.</p> </li> </ul>
      ProductARN:
        $ref: '#/definitions/[object Object]'
        description: The ARN of the product.
      CreatedTime:
        $ref: '#/definitions/[object Object]'
        description: The UTC time stamp of the creation time.
    description: Information about a product view.
  ProductViewDetails:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ProductViewDistributor:
    type: string
  ProductViewFilterBy:
    type: string
    enum:
      - FullTextSearch
      - Owner
      - ProductType
      - SourceProductId
  ProductViewFilterValue:
    type: string
  ProductViewFilterValues:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ProductViewFilters:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ProductViewFilterBy'
        value:
          $ref: '#/definitions/ProductViewFilterValues'
  ProductViewName:
    type: string
    maxLength: 8191
  ProductViewOwner:
    type: string
    maxLength: 8191
  ProductViewShortDescription:
    type: string
    maxLength: 8191
  ProductViewSortBy:
    type: string
    enum:
      - Title
      - VersionCount
      - CreationDate
  ProductViewSummaries:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ProductViewSummary:
    type: object
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: The product view identifier.
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the product.
      Owner:
        $ref: '#/definitions/[object Object]'
        description: The owner of the product. Contact the product administrator for the significance of this value.
      ShortDescription:
        $ref: '#/definitions/[object Object]'
        description: Short description of the product.
      Type:
        $ref: '#/definitions/[object Object]'
        description: 'The product type. Contact the product administrator for the significance of this value. If this value is <code>MARKETPLACE</code>, the product was created by AWS Marketplace.'
      Distributor:
        $ref: '#/definitions/[object Object]'
        description: The distributor of the product. Contact the product administrator for the significance of this value.
      HasDefaultPath:
        $ref: '#/definitions/[object Object]'
        description: 'Indicates whether the product has a default path. If the product does not have a default path, call <a>ListLaunchPaths</a> to disambiguate between paths. Otherwise, <a>ListLaunchPaths</a> is not required, and the output of <a>ProductViewSummary</a> can be used directly with <a>DescribeProvisioningParameters</a>.'
      SupportEmail:
        $ref: '#/definitions/[object Object]'
        description: The email contact information to obtain support for this Product.
      SupportDescription:
        $ref: '#/definitions/[object Object]'
        description: The description of the support for this Product.
      SupportUrl:
        $ref: '#/definitions/[object Object]'
        description: The URL information to obtain support for this Product.
    description: Summary information about a product view.
  PropertyName:
    type: string
  ProviderName:
    type: string
    minLength: 1
    maxLength: 50
  ProvisionedProductAttribute:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The user-friendly name of the provisioned product.
      Arn:
        $ref: '#/definitions/[object Object]'
        description: The ARN of the provisioned product.
      Type:
        $ref: '#/definitions/[object Object]'
        description: The type of provisioned product. The supported values are <code>CFN_STACK</code> and <code>CFN_STACKSET</code>.
      Id:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the provisioned product.
      Status:
        $ref: '#/definitions/[object Object]'
        description: '<p>The current status of the provisioned product.</p> <ul> <li> <p> <code>AVAILABLE</code> - Stable state, ready to perform any operation. The most recent operation succeeded and completed.</p> </li> <li> <p> <code>UNDER_CHANGE</code> - Transitive state, operations performed might not have valid results. Wait for an <code>AVAILABLE</code> status before performing operations.</p> </li> <li> <p> <code>TAINTED</code> - Stable state, ready to perform any operation. The stack has completed the requested operation but is not exactly what was requested. For example, a request to update to a new version failed and the stack rolled back to the current version.</p> </li> <li> <p> <code>ERROR</code> - An unexpected error occurred, the provisioned product exists but the stack is not running. For example, CloudFormation received a parameter value that was not valid and could not launch the stack.</p> </li> </ul>'
      StatusMessage:
        $ref: '#/definitions/[object Object]'
        description: The current status message of the provisioned product.
      CreatedTime:
        $ref: '#/definitions/[object Object]'
        description: The UTC time stamp of the creation time.
      IdempotencyToken:
        $ref: '#/definitions/[object Object]'
        description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
      LastRecordId:
        $ref: '#/definitions/[object Object]'
        description: The record identifier of the last request performed on this provisioned product.
      Tags:
        $ref: '#/definitions/[object Object]'
        description: One or more tags.
      PhysicalId:
        $ref: '#/definitions/[object Object]'
        description: 'The assigned identifier for the resource, such as an EC2 instance ID or an S3 bucket name.'
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      ProvisioningArtifactId:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the provisioning artifact.
      UserArn:
        $ref: '#/definitions/[object Object]'
        description: The Amazon Resource Name (ARN) of the IAM user.
      UserArnSession:
        $ref: '#/definitions/[object Object]'
        description: The ARN of the IAM user in the session. This ARN might contain a session ID.
    description: Information about a provisioned product.
  ProvisionedProductAttributes:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ProvisionedProductDetail:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The user-friendly name of the provisioned product.
      Arn:
        $ref: '#/definitions/[object Object]'
        description: The ARN of the provisioned product.
      Type:
        $ref: '#/definitions/[object Object]'
        description: The type of provisioned product. The supported values are <code>CFN_STACK</code> and <code>CFN_STACKSET</code>.
      Id:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the provisioned product.
      Status:
        $ref: '#/definitions/[object Object]'
        description: '<p>The current status of the provisioned product.</p> <ul> <li> <p> <code>AVAILABLE</code> - Stable state, ready to perform any operation. The most recent operation succeeded and completed.</p> </li> <li> <p> <code>UNDER_CHANGE</code> - Transitive state, operations performed might not have valid results. Wait for an <code>AVAILABLE</code> status before performing operations.</p> </li> <li> <p> <code>TAINTED</code> - Stable state, ready to perform any operation. The stack has completed the requested operation but is not exactly what was requested. For example, a request to update to a new version failed and the stack rolled back to the current version.</p> </li> <li> <p> <code>ERROR</code> - An unexpected error occurred, the provisioned product exists but the stack is not running. For example, CloudFormation received a parameter value that was not valid and could not launch the stack.</p> </li> </ul>'
      StatusMessage:
        $ref: '#/definitions/[object Object]'
        description: The current status message of the provisioned product.
      CreatedTime:
        $ref: '#/definitions/[object Object]'
        description: The UTC time stamp of the creation time.
      IdempotencyToken:
        $ref: '#/definitions/[object Object]'
        description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
      LastRecordId:
        $ref: '#/definitions/[object Object]'
        description: The record identifier of the last request performed on this provisioned product.
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: 'The product identifier. For example, <code>prod-abcdzk7xy33qa</code>.'
      ProvisioningArtifactId:
        $ref: '#/definitions/[object Object]'
        description: 'The identifier of the provisioning artifact. For example, <code>pa-4abcdjnxjj6ne</code>.'
    description: Information about a provisioned product.
  ProvisionedProductDetails:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ProvisionedProductViewFilterBy:
    type: string
    enum:
      - SearchQuery
  ProvisionedProductViewFilterValues:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ProvisionedProductFilters:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ProvisionedProductViewFilterBy'
        value:
          $ref: '#/definitions/ProvisionedProductViewFilterValues'
  ProvisionedProductId:
    type: string
  ProvisionedProductName:
    type: string
    pattern: '[a-zA-Z0-9][a-zA-Z0-9._-]*'
    minLength: 1
    maxLength: 128
  ProvisionedProductNameOrArn:
    type: string
    pattern: '[a-zA-Z0-9][a-zA-Z0-9._-]{0,127}|arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
    minLength: 1
    maxLength: 1224
  ProvisionedProductPlanDetails:
    type: object
    properties:
      CreatedTime:
        $ref: '#/definitions/[object Object]'
        description: The UTC time stamp of the creation time.
      PathId:
        $ref: '#/definitions/[object Object]'
        description: 'The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use <a>ListLaunchPaths</a>.'
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      PlanName:
        $ref: '#/definitions/[object Object]'
        description: The name of the plan.
      PlanId:
        $ref: '#/definitions/[object Object]'
        description: The plan identifier.
      ProvisionProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      ProvisionProductName:
        $ref: '#/definitions/[object Object]'
        description: The user-friendly name of the provisioned product.
      PlanType:
        $ref: '#/definitions/[object Object]'
        description: The plan type.
      ProvisioningArtifactId:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the provisioning artifact.
      Status:
        $ref: '#/definitions/[object Object]'
        description: The status.
      UpdatedTime:
        $ref: '#/definitions/[object Object]'
        description: The time when the plan was last updated.
      NotificationArns:
        $ref: '#/definitions/[object Object]'
        description: Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.
      ProvisioningParameters:
        $ref: '#/definitions/[object Object]'
        description: Parameters specified by the administrator that are required for provisioning the product.
      Tags:
        $ref: '#/definitions/[object Object]'
        description: One or more tags.
      StatusMessage:
        $ref: '#/definitions/[object Object]'
        description: The status message.
    description: Information about a plan.
  ProvisionedProductPlanName:
    type: string
  ProvisionedProductPlanStatus:
    type: string
    enum:
      - CREATE_IN_PROGRESS
      - CREATE_SUCCESS
      - CREATE_FAILED
      - EXECUTE_IN_PROGRESS
      - EXECUTE_SUCCESS
      - EXECUTE_FAILED
  ProvisionedProductPlanSummary:
    type: object
    properties:
      PlanName:
        $ref: '#/definitions/[object Object]'
        description: The name of the plan.
      PlanId:
        $ref: '#/definitions/[object Object]'
        description: The plan identifier.
      ProvisionProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      ProvisionProductName:
        $ref: '#/definitions/[object Object]'
        description: The user-friendly name of the provisioned product.
      PlanType:
        $ref: '#/definitions/[object Object]'
        description: The plan type.
      ProvisioningArtifactId:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the provisioning artifact.
    description: Summary information about a plan.
  ProvisionedProductPlanType:
    type: string
    enum:
      - CLOUDFORMATION
  ProvisionedProductPlans:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ProvisionedProductStatus:
    type: string
    enum:
      - AVAILABLE
      - UNDER_CHANGE
      - TAINTED
      - ERROR
      - PLAN_IN_PROGRESS
  ProvisionedProductStatusMessage:
    type: string
  ProvisionedProductType:
    type: string
  ProvisionedProductViewFilterValue:
    type: string
  ProvisioningArtifact:
    type: object
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the provisioning artifact.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the provisioning artifact.
      Description:
        $ref: '#/definitions/[object Object]'
        description: The description of the provisioning artifact.
      CreatedTime:
        $ref: '#/definitions/[object Object]'
        description: The UTC time stamp of the creation time.
    description: Information about a provisioning artifact. A provisioning artifact is also known as a product version.
  ProvisioningArtifactActive:
    type: boolean
  ProvisioningArtifactCreatedTime:
    type: string
    format: date-time
  ProvisioningArtifactDescription:
    type: string
  ProvisioningArtifactDetail:
    type: object
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the provisioning artifact.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the provisioning artifact.
      Description:
        $ref: '#/definitions/[object Object]'
        description: The description of the provisioning artifact.
      Type:
        $ref: '#/definitions/[object Object]'
        description: <p>The type of provisioning artifact.</p> <ul> <li> <p> <code>CLOUD_FORMATION_TEMPLATE</code> - AWS CloudFormation template</p> </li> <li> <p> <code>MARKETPLACE_AMI</code> - AWS Marketplace AMI</p> </li> <li> <p> <code>MARKETPLACE_CAR</code> - AWS Marketplace Clusters and AWS Resources</p> </li> </ul>
      CreatedTime:
        $ref: '#/definitions/[object Object]'
        description: The UTC time stamp of the creation time.
      Active:
        $ref: '#/definitions/[object Object]'
        description: Indicates whether the product version is active.
    description: Information about a provisioning artifact (also known as a version) for a product.
  ProvisioningArtifactDetails:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ProvisioningArtifactInfoKey:
    type: string
  ProvisioningArtifactInfoValue:
    type: string
  ProvisioningArtifactInfo:
    type: array
    minItems: 1
    maxItems: 100
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ProvisioningArtifactInfoKey'
        value:
          $ref: '#/definitions/ProvisioningArtifactInfoValue'
  ProvisioningArtifactName:
    type: string
  ProvisioningArtifactParameter:
    type: object
    properties:
      ParameterKey:
        $ref: '#/definitions/[object Object]'
        description: The parameter key.
      DefaultValue:
        $ref: '#/definitions/[object Object]'
        description: The default value.
      ParameterType:
        $ref: '#/definitions/[object Object]'
        description: The parameter type.
      IsNoEcho:
        $ref: '#/definitions/[object Object]'
        description: 'If this value is true, the value for this parameter is obfuscated from view when the parameter is retrieved. This parameter is used to hide sensitive information.'
      Description:
        $ref: '#/definitions/[object Object]'
        description: The description of the parameter.
      ParameterConstraints:
        $ref: '#/definitions/[object Object]'
        description: Constraints that the administrator has put on a parameter.
    description: Information about a parameter used to provision a product.
  ProvisioningArtifactParameters:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ProvisioningArtifactPreferences:
    type: object
    properties:
      StackSetAccounts:
        $ref: '#/definitions/[object Object]'
        description: <p>One or more AWS accounts where stack instances are deployed from the stack set. These accounts can be scoped in <code>ProvisioningPreferences$StackSetAccounts</code> and <code>UpdateProvisioningPreferences$StackSetAccounts</code>.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p>
      StackSetRegions:
        $ref: '#/definitions/[object Object]'
        description: <p>One or more AWS Regions where stack instances are deployed from the stack set. These regions can be scoped in <code>ProvisioningPreferences$StackSetRegions</code> and <code>UpdateProvisioningPreferences$StackSetRegions</code>.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p>
    description: '<p>The user-defined preferences that will be applied during product provisioning, unless overridden by <code>ProvisioningPreferences</code> or <code>UpdateProvisioningPreferences</code>.</p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a> in the <i>AWS CloudFormation User Guide</i>.</p>'
  ProvisioningArtifactProperties:
    type: object
    required:
      - Info
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: 'The name of the provisioning artifact (for example, v1 v2beta). No spaces are allowed.'
      Description:
        $ref: '#/definitions/[object Object]'
        description: 'The description of the provisioning artifact, including how it differs from the previous provisioning artifact.'
      Info:
        $ref: '#/definitions/[object Object]'
        description: '<p>The URL of the CloudFormation template in Amazon S3. Specify the URL in JSON format as follows:</p> <p> <code>"LoadTemplateFromURL": "https://s3.amazonaws.com/cf-templates-ozkq9d3hgiq2-us-east-1/..."</code> </p>'
      Type:
        $ref: '#/definitions/[object Object]'
        description: <p>The type of provisioning artifact.</p> <ul> <li> <p> <code>CLOUD_FORMATION_TEMPLATE</code> - AWS CloudFormation template</p> </li> <li> <p> <code>MARKETPLACE_AMI</code> - AWS Marketplace AMI</p> </li> <li> <p> <code>MARKETPLACE_CAR</code> - AWS Marketplace Clusters and AWS Resources</p> </li> </ul>
    description: Information about a provisioning artifact (also known as a version) for a product.
  ProvisioningArtifactPropertyName:
    type: string
    enum:
      - Id
  ProvisioningArtifactPropertyValue:
    type: string
  ProvisioningArtifactSummaries:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ProvisioningArtifactSummary:
    type: object
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the provisioning artifact.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the provisioning artifact.
      Description:
        $ref: '#/definitions/[object Object]'
        description: The description of the provisioning artifact.
      CreatedTime:
        $ref: '#/definitions/[object Object]'
        description: The UTC time stamp of the creation time.
      ProvisioningArtifactMetadata:
        $ref: '#/definitions/[object Object]'
        description: The metadata for the provisioning artifact. This is used with AWS Marketplace products.
    description: Summary information about a provisioning artifact (also known as a version) for a product.
  ProvisioningArtifactType:
    type: string
    enum:
      - CLOUD_FORMATION_TEMPLATE
      - MARKETPLACE_AMI
      - MARKETPLACE_CAR
  ProvisioningArtifactView:
    type: object
    properties:
      ProductViewSummary:
        $ref: '#/definitions/[object Object]'
        description: Summary information about a product view.
      ProvisioningArtifact:
        $ref: '#/definitions/[object Object]'
        description: Information about a provisioning artifact. A provisioning artifact is also known as a product version.
    description: An object that contains summary information about a product view and a provisioning artifact.
  ProvisioningArtifactViews:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ProvisioningArtifacts:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ProvisioningParameter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: The parameter key.
      Value:
        $ref: '#/definitions/[object Object]'
        description: The parameter value.
    description: Information about a parameter used to provision a product.
  ProvisioningParameters:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ProvisioningPreferences:
    type: object
    properties:
      StackSetAccounts:
        $ref: '#/definitions/[object Object]'
        description: '<p>One or more AWS accounts that will have access to the provisioned product.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>The AWS accounts specified should be within the list of accounts in the <code>STACKSET</code> constraint. To get the list of accounts in the <code>STACKSET</code> constraint, use the <code>DescribeProvisioningParameters</code> operation.</p> <p>If no values are specified, the default value is all accounts from the <code>STACKSET</code> constraint.</p>'
      StackSetRegions:
        $ref: '#/definitions/[object Object]'
        description: '<p>One or more AWS Regions where the provisioned product will be available.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>The specified regions should be within the list of regions from the <code>STACKSET</code> constraint. To get the list of regions in the <code>STACKSET</code> constraint, use the <code>DescribeProvisioningParameters</code> operation.</p> <p>If no values are specified, the default value is all regions from the <code>STACKSET</code> constraint.</p>'
      StackSetFailureToleranceCount:
        $ref: '#/definitions/[object Object]'
        description: '<p>The number of accounts, per region, for which this operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn''t attempt the operation in any subsequent regions.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>Conditional: You must specify either <code>StackSetFailureToleranceCount</code> or <code>StackSetFailureTolerancePercentage</code>, but not both.</p> <p>The default value is <code>0</code> if no value is specified.</p>'
      StackSetFailureTolerancePercentage:
        $ref: '#/definitions/[object Object]'
        description: '<p>The percentage of accounts, per region, for which this stack operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn''t attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>Conditional: You must specify either <code>StackSetFailureToleranceCount</code> or <code>StackSetFailureTolerancePercentage</code>, but not both.</p>'
      StackSetMaxConcurrencyCount:
        $ref: '#/definitions/[object Object]'
        description: '<p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>StackSetFailureToleranceCount</code>. <code>StackSetMaxConcurrentCount</code> is at most one more than the <code>StackSetFailureToleranceCount</code>.</p> <p>Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>Conditional: You must specify either <code>StackSetMaxConcurrentCount</code> or <code>StackSetMaxConcurrentPercentage</code>, but not both.</p>'
      StackSetMaxConcurrencyPercentage:
        $ref: '#/definitions/[object Object]'
        description: '<p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, AWS Service Catalog sets the number as <code>1</code> instead.</p> <p>Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>Conditional: You must specify either <code>StackSetMaxConcurrentCount</code> or <code>StackSetMaxConcurrentPercentage</code>, but not both.</p>'
    description: The user-defined preferences that will be applied when updating a provisioned product. Not all preferences are applicable to all provisioned product types.
  RecordDetail:
    type: object
    properties:
      RecordId:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the record.
      ProvisionedProductName:
        $ref: '#/definitions/[object Object]'
        description: The user-friendly name of the provisioned product.
      Status:
        $ref: '#/definitions/[object Object]'
        description: '<p>The status of the provisioned product.</p> <ul> <li> <p> <code>CREATED</code> - The request was created but the operation has not started.</p> </li> <li> <p> <code>IN_PROGRESS</code> - The requested operation is in progress.</p> </li> <li> <p> <code>IN_PROGRESS_IN_ERROR</code> - The provisioned product is under change but the requested operation failed and some remediation is occurring. For example, a rollback.</p> </li> <li> <p> <code>SUCCEEDED</code> - The requested operation has successfully completed.</p> </li> <li> <p> <code>FAILED</code> - The requested operation has unsuccessfully completed. Investigate using the error messages returned.</p> </li> </ul>'
      CreatedTime:
        $ref: '#/definitions/[object Object]'
        description: The UTC time stamp of the creation time.
      UpdatedTime:
        $ref: '#/definitions/[object Object]'
        description: The time when the record was last updated.
      ProvisionedProductType:
        $ref: '#/definitions/[object Object]'
        description: The type of provisioned product. The supported values are <code>CFN_STACK</code> and <code>CFN_STACKSET</code>.
      RecordType:
        $ref: '#/definitions/[object Object]'
        description: <p>The record type.</p> <ul> <li> <p> <code>PROVISION_PRODUCT</code> </p> </li> <li> <p> <code>UPDATE_PROVISIONED_PRODUCT</code> </p> </li> <li> <p> <code>TERMINATE_PROVISIONED_PRODUCT</code> </p> </li> </ul>
      ProvisionedProductId:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the provisioned product.
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: The product identifier.
      ProvisioningArtifactId:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the provisioning artifact.
      PathId:
        $ref: '#/definitions/[object Object]'
        description: The path identifier.
      RecordErrors:
        $ref: '#/definitions/[object Object]'
        description: The errors that occurred.
      RecordTags:
        $ref: '#/definitions/[object Object]'
        description: One or more tags.
    description: Information about a request operation.
  RecordDetails:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  RecordError:
    type: object
    properties:
      Code:
        $ref: '#/definitions/[object Object]'
        description: The numeric value of the error.
      Description:
        $ref: '#/definitions/[object Object]'
        description: The description of the error.
    description: The error code and description resulting from an operation.
  RecordErrors:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  RecordOutput:
    type: object
    properties:
      OutputKey:
        $ref: '#/definitions/[object Object]'
        description: The output key.
      OutputValue:
        $ref: '#/definitions/[object Object]'
        description: The output value.
      Description:
        $ref: '#/definitions/[object Object]'
        description: The description of the output.
    description: 'The output for the product created as the result of a request. For example, the output for a CloudFormation-backed product that creates an S3 bucket would include the S3 bucket URL.'
  RecordOutputs:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  RecordStatus:
    type: string
    enum:
      - CREATED
      - IN_PROGRESS
      - IN_PROGRESS_IN_ERROR
      - SUCCEEDED
      - FAILED
  RecordTag:
    type: object
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: The key for this tag.
      Value:
        $ref: '#/definitions/[object Object]'
        description: The value for this tag.
    description: 'Information about a tag, which is a key-value pair.'
  RecordTagKey:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
    minLength: 1
    maxLength: 128
  RecordTagValue:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
    minLength: 1
    maxLength: 256
  RecordTags:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    maxItems: 50
  RecordType:
    type: string
  Region:
    type: string
  Replacement:
    type: string
    enum:
      - 'TRUE'
      - 'FALSE'
      - CONDITIONAL
  RequiresRecreation:
    type: string
    enum:
      - NEVER
      - CONDITIONALLY
      - ALWAYS
  ResourceARN:
    type: string
    minLength: 1
    maxLength: 150
  ResourceAttribute:
    type: string
    enum:
      - PROPERTIES
      - METADATA
      - CREATIONPOLICY
      - UPDATEPOLICY
      - DELETIONPOLICY
      - TAGS
  ResourceChange:
    type: object
    properties:
      Action:
        $ref: '#/definitions/[object Object]'
        description: The change action.
      LogicalResourceId:
        $ref: '#/definitions/[object Object]'
        description: 'The ID of the resource, as defined in the CloudFormation template.'
      PhysicalResourceId:
        $ref: '#/definitions/[object Object]'
        description: 'The ID of the resource, if it was already created.'
      ResourceType:
        $ref: '#/definitions/[object Object]'
        description: The type of resource.
      Replacement:
        $ref: '#/definitions/[object Object]'
        description: 'If the change type is <code>Modify</code>, indicates whether the existing resource is deleted and replaced with a new one.'
      Scope:
        $ref: '#/definitions/[object Object]'
        description: The change scope.
      Details:
        $ref: '#/definitions/[object Object]'
        description: Information about the resource changes.
    description: Information about a resource change that will occur when a plan is executed.
  ResourceChangeDetail:
    type: object
    properties:
      Target:
        $ref: '#/definitions/[object Object]'
        description: Information about the resource attribute to be modified.
      Evaluation:
        $ref: '#/definitions/[object Object]'
        description: 'For static evaluations, the value of the resource attribute will change and the new value is known. For dynamic evaluations, the value might change, and any new value will be determined when the plan is updated.'
      CausingEntity:
        $ref: '#/definitions/[object Object]'
        description: The ID of the entity that caused the change.
    description: Information about a change to a resource attribute.
  ResourceChangeDetails:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ResourceChanges:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ResourceDetail:
    type: object
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: The identifier of the resource.
      ARN:
        $ref: '#/definitions/[object Object]'
        description: The ARN of the resource.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the resource.
      Description:
        $ref: '#/definitions/[object Object]'
        description: The description of the resource.
      CreatedTime:
        $ref: '#/definitions/[object Object]'
        description: The creation time of the resource.
    description: Information about a resource.
  ResourceDetailARN:
    type: string
  ResourceDetailCreatedTime:
    type: string
    format: date-time
  ResourceDetailDescription:
    type: string
  ResourceDetailId:
    type: string
  ResourceDetailName:
    type: string
  ResourceDetails:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ResourceId:
    type: string
  ResourceTargetDefinition:
    type: object
    properties:
      Attribute:
        $ref: '#/definitions/[object Object]'
        description: The attribute to be changed.
      Name:
        $ref: '#/definitions/[object Object]'
        description: 'If the attribute is <code>Properties</code>, the value is the name of the property. Otherwise, the value is null.'
      RequiresRecreation:
        $ref: '#/definitions/[object Object]'
        description: 'If the attribute is <code>Properties</code>, indicates whether a change to this property causes the resource to be re-created.'
    description: Information about a change to a resource attribute.
  ResourceType:
    type: string
  Scope:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  SearchFilterKey:
    type: string
  SearchFilterValue:
    type: string
  SearchProvisionedProductsPageSize:
    type: integer
    minimum: 0
    maximum: 100
  ServiceActionAssociation:
    type: object
    required:
      - ServiceActionId
      - ProductId
      - ProvisioningArtifactId
    properties:
      ServiceActionId:
        $ref: '#/definitions/[object Object]'
        description: 'The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>.'
      ProductId:
        $ref: '#/definitions/[object Object]'
        description: 'The product identifier. For example, <code>prod-abcdzk7xy33qa</code>.'
      ProvisioningArtifactId:
        $ref: '#/definitions/[object Object]'
        description: 'The identifier of the provisioning artifact. For example, <code>pa-4abcdjnxjj6ne</code>.'
    description: 'A self-service action association consisting of the Action ID, the Product ID, and the Provisioning Artifact ID.'
  ServiceActionAssociationErrorCode:
    type: string
    enum:
      - DUPLICATE_RESOURCE
      - INTERNAL_FAILURE
      - LIMIT_EXCEEDED
      - RESOURCE_NOT_FOUND
      - THROTTLING
  ServiceActionAssociationErrorMessage:
    type: string
    minLength: 1
    maxLength: 1024
  ServiceActionAssociations:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    minItems: 1
    maxItems: 50
  ServiceActionDefinitionKey:
    type: string
    enum:
      - Name
      - Version
      - AssumeRole
      - Parameters
  ServiceActionDefinitionValue:
    type: string
    minLength: 1
    maxLength: 1024
  ServiceActionDefinitionMap:
    type: array
    minItems: 1
    maxItems: 100
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ServiceActionDefinitionKey'
        value:
          $ref: '#/definitions/ServiceActionDefinitionValue'
  ServiceActionDefinitionType:
    type: string
    enum:
      - SSM_AUTOMATION
  ServiceActionDescription:
    type: string
    maxLength: 1024
  ServiceActionDetail:
    type: object
    properties:
      ServiceActionSummary:
        $ref: '#/definitions/[object Object]'
        description: Summary information about the self-service action.
      Definition:
        $ref: '#/definitions/[object Object]'
        description: A map that defines the self-service action.
    description: An object containing detailed information about the self-service action.
  ServiceActionName:
    type: string
    pattern: '^[a-zA-Z0-9_\-.]*'
    minLength: 1
    maxLength: 256
  ServiceActionSummaries:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ServiceActionSummary:
    type: object
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: The self-service action identifier.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The self-service action name.
      Description:
        $ref: '#/definitions/[object Object]'
        description: The self-service action description.
      DefinitionType:
        $ref: '#/definitions/[object Object]'
        description: 'The self-service action definition type. For example, <code>SSM_AUTOMATION</code>.'
    description: Detailed information about the self-service action.
  ShareDetails:
    type: object
    properties:
      SuccessfulShares:
        $ref: '#/definitions/[object Object]'
        description: List of accounts for whom the operation succeeded.
      ShareErrors:
        $ref: '#/definitions/[object Object]'
        description: List of errors.
    description: Information about the portfolio share operation.
  ShareError:
    type: object
    properties:
      Accounts:
        $ref: '#/definitions/[object Object]'
        description: List of accounts impacted by the error.
      Message:
        $ref: '#/definitions/[object Object]'
        description: Information about the error.
      Error:
        $ref: '#/definitions/[object Object]'
        description: Error type that happened when processing the operation.
    description: Errors that occurred during the portfolio share operation.
  ShareErrors:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ShareStatus:
    type: string
    enum:
      - NOT_STARTED
      - IN_PROGRESS
      - COMPLETED
      - COMPLETED_WITH_ERRORS
      - ERROR
  SortField:
    type: string
  SortOrder:
    type: string
    enum:
      - ASCENDING
      - DESCENDING
  SourceProvisioningArtifactProperties:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  SourceProvisioningArtifactPropertiesMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ProvisioningArtifactPropertyName'
        value:
          $ref: '#/definitions/ProvisioningArtifactPropertyValue'
  StackSetAccounts:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  StackSetFailureToleranceCount:
    type: integer
    minimum: 0
  StackSetFailureTolerancePercentage:
    type: integer
    minimum: 0
    maximum: 100
  StackSetMaxConcurrencyCount:
    type: integer
    minimum: 1
  StackSetMaxConcurrencyPercentage:
    type: integer
    minimum: 1
    maximum: 100
  StackSetOperationType:
    type: string
    enum:
      - CREATE
      - UPDATE
      - DELETE
  StackSetRegions:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  Status:
    type: string
    enum:
      - AVAILABLE
      - CREATING
      - FAILED
  StatusDetail:
    type: string
  StatusMessage:
    type: string
    pattern: '[\u0009\u000a\u000d\u0020-\uD7FF\uE000-\uFFFD]*'
  SuccessfulShares:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  SupportDescription:
    type: string
    maxLength: 8191
  SupportEmail:
    type: string
    maxLength: 254
  SupportUrl:
    type: string
    maxLength: 2083
  Tag:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: The tag key.
      Value:
        $ref: '#/definitions/[object Object]'
        description: The value for this key.
    description: Information about a tag. A tag is a key-value pair. Tags are propagated to the resources created when provisioning a product.
  TagKey:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 128
  TagKeys:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  TagOptionActive:
    type: boolean
  TagOptionDetail:
    type: object
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: The TagOption key.
      Value:
        $ref: '#/definitions/[object Object]'
        description: The TagOption value.
      Active:
        $ref: '#/definitions/[object Object]'
        description: The TagOption active state.
      Id:
        $ref: '#/definitions/[object Object]'
        description: The TagOption identifier.
    description: Information about a TagOption.
  TagOptionDetails:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  TagOptionId:
    type: string
    minLength: 1
    maxLength: 100
  TagOptionKey:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 128
  TagOptionSummaries:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  TagOptionSummary:
    type: object
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: The TagOption key.
      Values:
        $ref: '#/definitions/[object Object]'
        description: The TagOption value.
    description: Summary information about a TagOption.
  TagOptionValue:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 256
  TagOptionValues:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  TagValue:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 256
  Tags:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    maxItems: 50
  TotalResultsCount:
    type: integer
  UpdateProvisioningParameter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/[object Object]'
        description: The parameter key.
      Value:
        $ref: '#/definitions/[object Object]'
        description: The parameter value.
      UsePreviousValue:
        $ref: '#/definitions/[object Object]'
        description: 'If set to true, <code>Value</code> is ignored and the previous parameter value is kept.'
    description: The parameter key-value pair used to update a provisioned product.
  UpdateProvisioningParameters:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  UpdateProvisioningPreferences:
    type: object
    properties:
      StackSetAccounts:
        $ref: '#/definitions/[object Object]'
        description: '<p>One or more AWS accounts that will have access to the provisioned product.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>The AWS accounts specified should be within the list of accounts in the <code>STACKSET</code> constraint. To get the list of accounts in the <code>STACKSET</code> constraint, use the <code>DescribeProvisioningParameters</code> operation.</p> <p>If no values are specified, the default value is all accounts from the <code>STACKSET</code> constraint.</p>'
      StackSetRegions:
        $ref: '#/definitions/[object Object]'
        description: '<p>One or more AWS Regions where the provisioned product will be available.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>The specified regions should be within the list of regions from the <code>STACKSET</code> constraint. To get the list of regions in the <code>STACKSET</code> constraint, use the <code>DescribeProvisioningParameters</code> operation.</p> <p>If no values are specified, the default value is all regions from the <code>STACKSET</code> constraint.</p>'
      StackSetFailureToleranceCount:
        $ref: '#/definitions/[object Object]'
        description: '<p>The number of accounts, per region, for which this operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn''t attempt the operation in any subsequent regions.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>Conditional: You must specify either <code>StackSetFailureToleranceCount</code> or <code>StackSetFailureTolerancePercentage</code>, but not both.</p> <p>The default value is <code>0</code> if no value is specified.</p>'
      StackSetFailureTolerancePercentage:
        $ref: '#/definitions/[object Object]'
        description: '<p>The percentage of accounts, per region, for which this stack operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn''t attempt the operation in any subsequent regions.</p> <p>When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>Conditional: You must specify either <code>StackSetFailureToleranceCount</code> or <code>StackSetFailureTolerancePercentage</code>, but not both.</p>'
      StackSetMaxConcurrencyCount:
        $ref: '#/definitions/[object Object]'
        description: '<p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>StackSetFailureToleranceCount</code>. <code>StackSetMaxConcurrentCount</code> is at most one more than the <code>StackSetFailureToleranceCount</code>.</p> <p>Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>Conditional: You must specify either <code>StackSetMaxConcurrentCount</code> or <code>StackSetMaxConcurrentPercentage</code>, but not both.</p>'
      StackSetMaxConcurrencyPercentage:
        $ref: '#/definitions/[object Object]'
        description: '<p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, AWS Service Catalog sets the number as <code>1</code> instead.</p> <p>Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <p>Conditional: You must specify either <code>StackSetMaxConcurrentCount</code> or <code>StackSetMaxConcurrentPercentage</code>, but not both.</p>'
      StackSetOperationType:
        $ref: '#/definitions/[object Object]'
        description: '<p>Determines what action AWS Service Catalog performs to a stack set or a stack instance represented by the provisioned product. The default value is <code>UPDATE</code> if nothing is specified.</p> <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product type.</p> <dl> <dt>CREATE</dt> <dd> <p>Creates a new stack instance in the stack set represented by the provisioned product. In this case, only new stack instances are created based on accounts and regions; if new ProductId or ProvisioningArtifactID are passed, they will be ignored.</p> </dd> <dt>UPDATE</dt> <dd> <p>Updates the stack set represented by the provisioned product and also its stack instances.</p> </dd> <dt>DELETE</dt> <dd> <p>Deletes a stack instance in the stack set represented by the provisioned product.</p> </dd> </dl>'
    description: The user-defined preferences that will be applied when updating a provisioned product. Not all preferences are applicable to all provisioned product types.
  UpdatedTime:
    type: string
    format: date-time
  UsageInstruction:
    type: object
    properties:
      Type:
        $ref: '#/definitions/[object Object]'
        description: The usage instruction type for the value.
      Value:
        $ref: '#/definitions/[object Object]'
        description: The usage instruction value for this type.
    description: Additional information provided by the administrator.
  UsageInstructions:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  UsePreviousValue:
    type: boolean
  UserArn:
    type: string
  UserArnSession:
    type: string
  Verbose:
    type: boolean
