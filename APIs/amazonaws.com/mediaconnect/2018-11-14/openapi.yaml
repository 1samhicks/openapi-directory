openapi: 3.0.0
info:
  version: '2018-11-14'
  x-release: v4
  title: AWS MediaConnect
  description: API for AWS Elemental MediaConnect
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: mediaconnect
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mediaconnect-2018-11-14.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/mediaconnect/'
servers:
  - url: 'http://mediaconnect.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS MediaConnect multi-region endpoint
  - url: 'https://mediaconnect.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS MediaConnect multi-region endpoint
  - url: 'http://mediaconnect.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS MediaConnect endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://mediaconnect.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS MediaConnect endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/v1/flows/{flowArn}/outputs':
    post:
      operationId: AddFlowOutputs
      description: Adds outputs to an existing flow. You can create up to 50 outputs per flow.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddFlowOutputsResponse'
        '480':
          description: AddFlowOutputs420Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddFlowOutputs420Exception'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The flow that you want to add outputs to.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - outputs
              properties:
                outputs:
                  description: A list of outputs that you want to add.
                  type: array
                  items:
                    $ref: '#/components/schemas/AddOutputRequest'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v1/flows/{flowArn}/source':
    post:
      operationId: AddFlowSources
      description: Adds Sources to flow
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddFlowSourcesResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The flow that you want to mutate.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sources
              properties:
                sources:
                  description: A list of sources that you want to add.
                  type: array
                  items:
                    $ref: '#/components/schemas/SetSourceRequest'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v1/flows/{flowArn}/vpcInterfaces':
    post:
      operationId: AddFlowVpcInterfaces
      description: Adds VPC interfaces to flow
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddFlowVpcInterfacesResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The flow that you want to mutate.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - vpcInterfaces
              properties:
                vpcInterfaces:
                  description: A list of VPC interfaces that you want to add.
                  type: array
                  items:
                    $ref: '#/components/schemas/VpcInterfaceRequest'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/flows:
    post:
      operationId: CreateFlow
      description: Creates a new flow. The request must include one source. The request optionally can include outputs (up to 50) and entitlements (up to 50).
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFlowResponse'
        '480':
          description: CreateFlow420Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFlow420Exception'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                availabilityZone:
                  description: The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS Region.
                  type: string
                entitlements:
                  description: The entitlements that you want to grant on a flow.
                  type: array
                  items:
                    $ref: '#/components/schemas/GrantEntitlementRequest'
                name:
                  description: The name of the flow.
                  type: string
                outputs:
                  description: The outputs that you want to add to this flow.
                  type: array
                  items:
                    $ref: '#/components/schemas/AddOutputRequest'
                source:
                  description: The settings for the source of the flow.
                  type: object
                  properties:
                    Decryption:
                      allOf:
                        - $ref: '#/components/schemas/Encryption'
                        - xml:
                            name: decryption
                          description: The type of encryption that is used on the content ingested from this source.
                    Description:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: description
                          description: A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.
                    EntitlementArn:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: entitlementArn
                          description: 'The ARN of the entitlement that allows you to subscribe to this flow. The entitlement is set by the flow originator, and the ARN is generated as part of the originator''s flow.'
                    IngestPort:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: ingestPort
                          description: The port that the flow will be listening on for incoming content.
                    MaxBitrate:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: maxBitrate
                          description: 'The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.'
                    MaxLatency:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: maxLatency
                          description: The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.
                    Name:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: name
                          description: The name of the source.
                    Protocol:
                      allOf:
                        - $ref: '#/components/schemas/Protocol'
                        - xml:
                            name: protocol
                          description: The protocol that is used by the source.
                    StreamId:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: streamId
                          description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.
                    VpcInterfaceName:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: vpcInterfaceName
                          description: The name of the VPC interface to use for this source.
                    WhitelistCidr:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: whitelistCidr
                          description: 'The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'
                sourceFailoverConfig:
                  description: The settings for source failover
                  type: object
                  properties:
                    RecoveryWindow:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: recoveryWindow
                          description: Search window time to look for dash-7 packets
                    State:
                      allOf:
                        - $ref: '#/components/schemas/State'
                        - xml:
                            name: state
                sources:
                  description: ''
                  type: array
                  items:
                    $ref: '#/components/schemas/SetSourceRequest'
                vpcInterfaces:
                  description: The VPC interfaces you want on the flow.
                  type: array
                  items:
                    $ref: '#/components/schemas/VpcInterfaceRequest'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListFlows
      description: Displays a list of flows that are associated with this account. This request returns a paginated result.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFlowsResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of results to return per API request. For example, you submit a ListFlows request with MaxResults set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a NextToken value that you can use to fetch the next batch of results.) The service might return fewer results than the MaxResults value. If MaxResults is not included in the request, the service defaults to pagination with a maximum of 10 results per page.'
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: 'The token that identifies which batch of results that you want to see. For example, you submit a ListFlows request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListFlows request a second time and specify the NextToken value.'
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/v1/flows/{flowArn}':
    delete:
      operationId: DeleteFlow
      description: 'Deletes a flow. Before you can delete a flow, you must stop the flow.'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFlowResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The ARN of the flow that you want to delete.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeFlow
      description: 'Displays the details of a flow. The response includes the flow ARN, name, and Availability Zone, as well as details about the source, outputs, and entitlements.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFlowResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The ARN of the flow that you want to describe.
          schema:
            type: string
    put:
      operationId: UpdateFlow
      description: Updates flow
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFlowResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The flow that you want to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceFailoverConfig:
                  description: The settings for source failover
                  type: object
                  properties:
                    RecoveryWindow:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: recoveryWindow
                          description: Recovery window time to look for dash-7 packets
                    State:
                      allOf:
                        - $ref: '#/components/schemas/State'
                        - xml:
                            name: state
  '/v1/flows/{flowArn}/entitlements':
    post:
      operationId: GrantFlowEntitlements
      description: Grants entitlements to an existing flow.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrantFlowEntitlementsResponse'
        '480':
          description: GrantFlowEntitlements420Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrantFlowEntitlements420Exception'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The flow that you want to grant entitlements on.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - entitlements
              properties:
                entitlements:
                  description: The list of entitlements that you want to grant.
                  type: array
                  items:
                    $ref: '#/components/schemas/GrantEntitlementRequest'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/entitlements:
    get:
      operationId: ListEntitlements
      description: Displays a list of all entitlements that have been granted to this account. This request returns 20 results per page.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEntitlementsResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of results to return per API request. For example, you submit a ListEntitlements request with MaxResults set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a NextToken value that you can use to fetch the next batch of results.) The service might return fewer results than the MaxResults value. If MaxResults is not included in the request, the service defaults to pagination with a maximum of 20 results per page.'
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: 'The token that identifies which batch of results that you want to see. For example, you submit a ListEntitlements request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListEntitlements request a second time and specify the NextToken value.'
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: List all tags on an AWS Elemental MediaConnect resource
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) that identifies the AWS Elemental MediaConnect resource for which to list the tags.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: 'Associates the specified tags to a resource with the specified resourceArn. If existing tags on a resource are not specified in the request parameters, they are not changed. When a resource is deleted, the tags associated with that resource are deleted as well.'
      responses:
        '204':
          description: Success
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) that identifies the AWS Elemental MediaConnect resource to which to add tags.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: 'A map from tag keys to values. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
  '/v1/flows/{flowArn}/outputs/{outputArn}':
    delete:
      operationId: RemoveFlowOutput
      description: 'Removes an output from an existing flow. This request can be made only on an output that does not have an entitlement associated with it. If the output has an entitlement, you must revoke the entitlement instead. When an entitlement is revoked from a flow, the service automatically removes the associated output.'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveFlowOutputResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The flow that you want to remove an output from.
          schema:
            type: string
        - name: outputArn
          in: path
          required: true
          description: The ARN of the output that you want to remove.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateFlowOutput
      description: Updates an existing flow output.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFlowOutputResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The flow that is associated with the output that you want to update.
          schema:
            type: string
        - name: outputArn
          in: path
          required: true
          description: The ARN of the output that you want to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cidrAllowList:
                  description: 'The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'
                  type: array
                  items:
                    $ref: '#/components/schemas/__string'
                description:
                  description: A description of the output. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the end user.
                  type: string
                destination:
                  description: The IP address where you want to send the output.
                  type: string
                encryption:
                  description: Information about the encryption of the flow.
                  type: object
                  properties:
                    Algorithm:
                      allOf:
                        - $ref: '#/components/schemas/Algorithm'
                        - xml:
                            name: algorithm
                          description: 'The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).'
                    ConstantInitializationVector:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: constantInitializationVector
                          description: 'A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.'
                    DeviceId:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: deviceId
                          description: The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                    KeyType:
                      allOf:
                        - $ref: '#/components/schemas/KeyType'
                        - xml:
                            name: keyType
                          description: 'The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'
                    Region:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: region
                          description: The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                    ResourceId:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: resourceId
                          description: An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                    RoleArn:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: roleArn
                          description: The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).
                    SecretArn:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: secretArn
                          description: The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.
                    Url:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: url
                          description: The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                maxLatency:
                  description: The maximum latency in milliseconds for Zixi-based streams.
                  type: integer
                port:
                  description: The port to use when content is distributed to this output.
                  type: integer
                protocol:
                  description: The protocol to use for the output.
                  type: string
                  enum:
                    - zixi-push
                    - rtp-fec
                    - rtp
                    - zixi-pull
                    - rist
                remoteId:
                  description: The remote ID for the Zixi-pull stream.
                  type: string
                smoothingLatency:
                  description: 'The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams.'
                  type: integer
                streamId:
                  description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.
                  type: string
                vpcInterfaceAttachment:
                  description: The settings for attaching a VPC interface to an output.
                  type: object
                  properties:
                    VpcInterfaceName:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: vpcInterfaceName
                          description: The name of the VPC interface to use for this output.
  '/v1/flows/{flowArn}/source/{sourceArn}':
    delete:
      operationId: RemoveFlowSource
      description: Removes a source from an existing flow. This request can be made only if there is more than one source on the flow.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveFlowSourceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The flow that you want to remove a source from.
          schema:
            type: string
        - name: sourceArn
          in: path
          required: true
          description: The ARN of the source that you want to remove.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateFlowSource
      description: Updates the source of a flow.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFlowSourceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The flow that is associated with the source that you want to update.
          schema:
            type: string
        - name: sourceArn
          in: path
          required: true
          description: The ARN of the source that you want to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                decryption:
                  description: Information about the encryption of the flow.
                  type: object
                  properties:
                    Algorithm:
                      allOf:
                        - $ref: '#/components/schemas/Algorithm'
                        - xml:
                            name: algorithm
                          description: 'The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).'
                    ConstantInitializationVector:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: constantInitializationVector
                          description: 'A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.'
                    DeviceId:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: deviceId
                          description: The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                    KeyType:
                      allOf:
                        - $ref: '#/components/schemas/KeyType'
                        - xml:
                            name: keyType
                          description: 'The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'
                    Region:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: region
                          description: The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                    ResourceId:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: resourceId
                          description: An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                    RoleArn:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: roleArn
                          description: The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).
                    SecretArn:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: secretArn
                          description: The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.
                    Url:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: url
                          description: The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                description:
                  description: A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.
                  type: string
                entitlementArn:
                  description: 'The ARN of the entitlement that allows you to subscribe to this flow. The entitlement is set by the flow originator, and the ARN is generated as part of the originator''s flow.'
                  type: string
                ingestPort:
                  description: The port that the flow will be listening on for incoming content.
                  type: integer
                maxBitrate:
                  description: 'The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.'
                  type: integer
                maxLatency:
                  description: The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.
                  type: integer
                protocol:
                  description: The protocol that is used by the source.
                  type: string
                  enum:
                    - zixi-push
                    - rtp-fec
                    - rtp
                    - zixi-pull
                    - rist
                streamId:
                  description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.
                  type: string
                vpcInterfaceName:
                  description: The name of the VPC Interface to configure this Source with.
                  type: string
                whitelistCidr:
                  description: 'The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'
                  type: string
  '/v1/flows/{flowArn}/vpcInterfaces/{vpcInterfaceName}':
    delete:
      operationId: RemoveFlowVpcInterface
      description: 'Removes a VPC Interface from an existing flow. This request can be made only on a VPC interface that does not have a Source or Output associated with it. If the VPC interface is referenced by a Source or Output, you must first delete or update the Source or Output to no longer reference the VPC interface.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveFlowVpcInterfaceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The flow that you want to remove a VPC interface from.
          schema:
            type: string
        - name: vpcInterfaceName
          in: path
          required: true
          description: The name of the VPC interface that you want to remove.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v1/flows/{flowArn}/entitlements/{entitlementArn}':
    delete:
      operationId: RevokeFlowEntitlement
      description: 'Revokes an entitlement from a flow. Once an entitlement is revoked, the content becomes unavailable to the subscriber and the associated output is removed.'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeFlowEntitlementResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: entitlementArn
          in: path
          required: true
          description: The ARN of the entitlement that you want to revoke.
          schema:
            type: string
        - name: flowArn
          in: path
          required: true
          description: The flow that you want to revoke an entitlement from.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateFlowEntitlement
      description: 'You can change an entitlement''s description, subscribers, and encryption. If you change the subscribers, the service will remove the outputs that are are used by the subscribers that are removed.'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFlowEntitlementResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: entitlementArn
          in: path
          required: true
          description: The ARN of the entitlement that you want to update.
          schema:
            type: string
        - name: flowArn
          in: path
          required: true
          description: The flow that is associated with the entitlement that you want to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: A description of the entitlement. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the subscriber or end user.
                  type: string
                encryption:
                  description: Information about the encryption of the flow.
                  type: object
                  properties:
                    Algorithm:
                      allOf:
                        - $ref: '#/components/schemas/Algorithm'
                        - xml:
                            name: algorithm
                          description: 'The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).'
                    ConstantInitializationVector:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: constantInitializationVector
                          description: 'A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.'
                    DeviceId:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: deviceId
                          description: The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                    KeyType:
                      allOf:
                        - $ref: '#/components/schemas/KeyType'
                        - xml:
                            name: keyType
                          description: 'The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'
                    Region:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: region
                          description: The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                    ResourceId:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: resourceId
                          description: An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                    RoleArn:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: roleArn
                          description: The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).
                    SecretArn:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: secretArn
                          description: The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.
                    Url:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: url
                          description: The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                entitlementStatus:
                  description: 'An indication of whether you want to enable the entitlement to allow access, or disable it to stop streaming content to the subscriber’s flow temporarily. If you don’t specify the entitlementStatus field in your request, MediaConnect leaves the value unchanged.'
                  type: string
                  enum:
                    - ENABLED
                    - DISABLED
                subscribers:
                  description: The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.
                  type: array
                  items:
                    $ref: '#/components/schemas/__string'
  '/v1/flows/start/{flowArn}':
    post:
      operationId: StartFlow
      description: Starts a flow.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartFlowResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The ARN of the flow that you want to start.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v1/flows/stop/{flowArn}':
    post:
      operationId: StopFlow
      description: Stops a flow.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopFlowResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The ARN of the flow that you want to stop.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Deletes specified tags from a resource.
      responses:
        '204':
          description: Success
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) that identifies the AWS Elemental MediaConnect resource from which to delete tags.
          schema:
            type: string
        - name: tagKeys
          in: query
          required: true
          description: The keys of the tags to be removed.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AddFlowOutputsResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that these outputs were added to.
        Outputs:
          allOf:
            - $ref: '#/components/schemas/__listOfOutput'
            - xml:
                name: outputs
              description: The details of the newly added outputs.
    AddOutputRequest:
      type: object
      required:
        - Protocol
      properties:
        CidrAllowList:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: cidrAllowList
              description: 'The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description of the output. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the end user.
        Destination:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: destination
              description: The IP address from which video will be sent to output destinations.
        Encryption:
          allOf:
            - $ref: '#/components/schemas/Encryption'
            - xml:
                name: encryption
              description: 'The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'
        MaxLatency:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxLatency
              description: The maximum latency in milliseconds for Zixi-based streams.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the output. This value must be unique within the current flow.
        Port:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: port
              description: The port to use when content is distributed to this output.
        Protocol:
          allOf:
            - $ref: '#/components/schemas/Protocol'
            - xml:
                name: protocol
              description: The protocol to use for the output.
        RemoteId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: remoteId
              description: The remote ID for the Zixi-pull output stream.
        SmoothingLatency:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: smoothingLatency
              description: 'The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams.'
        StreamId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: streamId
              description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.
        VpcInterfaceAttachment:
          allOf:
            - $ref: '#/components/schemas/VpcInterfaceAttachment'
            - xml:
                name: vpcInterfaceAttachment
              description: The name of the VPC interface attachment to use for this output.
      description: The output that you want to add to this flow.
    AddFlowOutputs420Exception: {}
    BadRequestException: {}
    InternalServerErrorException: {}
    ForbiddenException: {}
    NotFoundException: {}
    ServiceUnavailableException: {}
    TooManyRequestsException: {}
    AddFlowSourcesResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that these sources were added to.
        Sources:
          allOf:
            - $ref: '#/components/schemas/__listOfSource'
            - xml:
                name: sources
              description: The details of the newly added sources.
    SetSourceRequest:
      type: object
      properties:
        Decryption:
          allOf:
            - $ref: '#/components/schemas/Encryption'
            - xml:
                name: decryption
              description: The type of encryption that is used on the content ingested from this source.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.
        EntitlementArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: entitlementArn
              description: 'The ARN of the entitlement that allows you to subscribe to this flow. The entitlement is set by the flow originator, and the ARN is generated as part of the originator''s flow.'
        IngestPort:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: ingestPort
              description: The port that the flow will be listening on for incoming content.
        MaxBitrate:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxBitrate
              description: 'The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.'
        MaxLatency:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxLatency
              description: The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the source.
        Protocol:
          allOf:
            - $ref: '#/components/schemas/Protocol'
            - xml:
                name: protocol
              description: The protocol that is used by the source.
        StreamId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: streamId
              description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.
        VpcInterfaceName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: vpcInterfaceName
              description: The name of the VPC interface to use for this source.
        WhitelistCidr:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: whitelistCidr
              description: 'The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'
      description: The settings for the source of the flow.
    AddFlowVpcInterfacesResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that these VPC interfaces were added to.
        VpcInterfaces:
          allOf:
            - $ref: '#/components/schemas/__listOfVpcInterface'
            - xml:
                name: vpcInterfaces
              description: The details of the newly added VPC interfaces.
    VpcInterfaceRequest:
      type: object
      required:
        - SubnetId
        - SecurityGroupIds
        - RoleArn
        - Name
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the VPC Interface. This value must be unique within the current flow.
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: Role Arn MediaConnect can assumes to create ENIs in customer's account
        SecurityGroupIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: securityGroupIds
              description: Security Group IDs to be used on ENI.
        SubnetId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: subnetId
              description: Subnet must be in the AZ of the Flow
      description: Desired VPC Interface for a Flow
    CreateFlowResponse:
      type: object
      properties:
        Flow:
          allOf:
            - $ref: '#/components/schemas/Flow'
            - xml:
                name: flow
    GrantEntitlementRequest:
      type: object
      required:
        - Subscribers
      properties:
        DataTransferSubscriberFeePercent:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: dataTransferSubscriberFeePercent
              description: Percentage from 0-100 of the data transfer cost to be billed to the subscriber.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description of the entitlement. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the subscriber or end user.
        Encryption:
          allOf:
            - $ref: '#/components/schemas/Encryption'
            - xml:
                name: encryption
              description: The type of encryption that will be used on the output that is associated with this entitlement.
        EntitlementStatus:
          allOf:
            - $ref: '#/components/schemas/EntitlementStatus'
            - xml:
                name: entitlementStatus
              description: 'An indication of whether the new entitlement should be enabled or disabled as soon as it is created. If you don’t specify the entitlementStatus field in your request, MediaConnect sets it to ENABLED.'
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the entitlement. This value must be unique within the current flow.
        Subscribers:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: subscribers
              description: The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flows using your content as the source.
      description: The entitlements that you want to grant on a flow.
    Encryption:
      type: object
      required:
        - Algorithm
        - RoleArn
      properties:
        Algorithm:
          allOf:
            - $ref: '#/components/schemas/Algorithm'
            - xml:
                name: algorithm
              description: 'The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).'
        ConstantInitializationVector:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: constantInitializationVector
              description: 'A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.'
        DeviceId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: deviceId
              description: The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.
        KeyType:
          allOf:
            - $ref: '#/components/schemas/KeyType'
            - xml:
                name: keyType
              description: 'The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'
        Region:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: region
              description: The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.
        ResourceId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: resourceId
              description: An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).
        SecretArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: secretArn
              description: The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.
        Url:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: url
              description: The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.
      description: Information about the encryption of the flow.
    __string:
      type: string
    __integer:
      type: integer
    Protocol:
      type: string
      enum:
        - zixi-push
        - rtp-fec
        - rtp
        - zixi-pull
        - rist
    State:
      type: string
      enum:
        - ENABLED
        - DISABLED
    CreateFlow420Exception: {}
    DeleteFlowResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that was deleted.
        Status:
          allOf:
            - $ref: '#/components/schemas/Status'
            - xml:
                name: status
              description: The status of the flow when the DeleteFlow process begins.
    DescribeFlowResponse:
      type: object
      properties:
        Flow:
          allOf:
            - $ref: '#/components/schemas/Flow'
            - xml:
                name: flow
        Messages:
          allOf:
            - $ref: '#/components/schemas/Messages'
            - xml:
                name: messages
    GrantFlowEntitlementsResponse:
      type: object
      properties:
        Entitlements:
          allOf:
            - $ref: '#/components/schemas/__listOfEntitlement'
            - xml:
                name: entitlements
              description: The entitlements that were just granted.
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that these entitlements were granted to.
    GrantFlowEntitlements420Exception: {}
    ListEntitlementsResponse:
      type: object
      properties:
        Entitlements:
          allOf:
            - $ref: '#/components/schemas/__listOfListedEntitlement'
            - xml:
                name: entitlements
              description: A list of entitlements that have been granted to you from other AWS accounts.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
              description: 'The token that identifies which batch of results that you want to see. For example, you submit a ListEntitlements request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListEntitlements request a second time and specify the NextToken value.'
    ListFlowsResponse:
      type: object
      properties:
        Flows:
          allOf:
            - $ref: '#/components/schemas/__listOfListedFlow'
            - xml:
                name: flows
              description: A list of flow summaries.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
              description: 'The token that identifies which batch of results that you want to see. For example, you submit a ListFlows request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListFlows request a second time and specify the NextToken value.'
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/__mapOf__string'
            - xml:
                name: tags
              description: 'A map from tag keys to values. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.'
    RemoveFlowOutputResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that is associated with the output you removed.
        OutputArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: outputArn
              description: The ARN of the output that was removed.
    RemoveFlowSourceResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that is associated with the source you removed.
        SourceArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: sourceArn
              description: The ARN of the source that was removed.
    RemoveFlowVpcInterfaceResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that is associated with the VPC interface you removed.
        NonDeletedNetworkInterfaceIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: nonDeletedNetworkInterfaceIds
              description: IDs of network interfaces associated with the removed VPC interface that Media Connect was unable to remove.
        VpcInterfaceName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: vpcInterfaceName
              description: The name of the VPC interface that was removed.
    RevokeFlowEntitlementResponse:
      type: object
      properties:
        EntitlementArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: entitlementArn
              description: The ARN of the entitlement that was revoked.
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that the entitlement was revoked from.
    StartFlowResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that you started.
        Status:
          allOf:
            - $ref: '#/components/schemas/Status'
            - xml:
                name: status
              description: The status of the flow when the StartFlow process begins.
    StopFlowResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that you stopped.
        Status:
          allOf:
            - $ref: '#/components/schemas/Status'
            - xml:
                name: status
              description: The status of the flow when the StopFlow process begins.
    UpdateFlowResponse:
      type: object
      properties:
        Flow:
          allOf:
            - $ref: '#/components/schemas/Flow'
            - xml:
                name: flow
    UpdateFlowEntitlementResponse:
      type: object
      properties:
        Entitlement:
          allOf:
            - $ref: '#/components/schemas/Entitlement'
            - xml:
                name: entitlement
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that this entitlement was granted on.
    Algorithm:
      type: string
      enum:
        - aes128
        - aes192
        - aes256
    KeyType:
      type: string
      enum:
        - speke
        - static-key
    UpdateFlowOutputResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that is associated with the updated output.
        Output:
          allOf:
            - $ref: '#/components/schemas/Output'
            - xml:
                name: output
    UpdateFlowSourceResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that you want to update.
        Source:
          allOf:
            - $ref: '#/components/schemas/Source'
            - xml:
                name: source
              description: The settings for the source of the flow.
    __listOfAddOutputRequest:
      type: array
      items:
        $ref: '#/components/schemas/AddOutputRequest'
    AddFlowOutputsRequest:
      type: object
      required:
        - Outputs
      title: AddFlowOutputsRequest
      properties:
        Outputs:
          allOf:
            - $ref: '#/components/schemas/__listOfAddOutputRequest'
            - xml:
                name: outputs
              description: A list of outputs that you want to add.
      description: A request to add outputs to the specified flow.
    __listOfOutput:
      type: array
      items:
        $ref: '#/components/schemas/Output'
    __listOfSetSourceRequest:
      type: array
      items:
        $ref: '#/components/schemas/SetSourceRequest'
    AddFlowSourcesRequest:
      type: object
      required:
        - Sources
      title: AddFlowSourcesRequest
      properties:
        Sources:
          allOf:
            - $ref: '#/components/schemas/__listOfSetSourceRequest'
            - xml:
                name: sources
              description: A list of sources that you want to add.
      description: A request to add sources to the flow.
    __listOfSource:
      type: array
      items:
        $ref: '#/components/schemas/Source'
    __listOfVpcInterfaceRequest:
      type: array
      items:
        $ref: '#/components/schemas/VpcInterfaceRequest'
    AddFlowVpcInterfacesRequest:
      type: object
      required:
        - VpcInterfaces
      title: AddFlowVpcInterfacesRequest
      properties:
        VpcInterfaces:
          allOf:
            - $ref: '#/components/schemas/__listOfVpcInterfaceRequest'
            - xml:
                name: vpcInterfaces
              description: A list of VPC interfaces that you want to add.
      description: A request to add VPC interfaces to the flow.
    __listOfVpcInterface:
      type: array
      items:
        $ref: '#/components/schemas/VpcInterface'
    __listOf__string:
      type: array
      items:
        $ref: '#/components/schemas/__string'
    VpcInterfaceAttachment:
      type: object
      properties:
        VpcInterfaceName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: vpcInterfaceName
              description: The name of the VPC interface to use for this output.
      description: The settings for attaching a VPC interface to an output.
    __listOfGrantEntitlementRequest:
      type: array
      items:
        $ref: '#/components/schemas/GrantEntitlementRequest'
    FailoverConfig:
      type: object
      properties:
        RecoveryWindow:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: recoveryWindow
              description: Search window time to look for dash-7 packets
        State:
          allOf:
            - $ref: '#/components/schemas/State'
            - xml:
                name: state
      description: The settings for source failover
    CreateFlowRequest:
      type: object
      required:
        - Name
      title: CreateFlowRequest
      properties:
        AvailabilityZone:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: availabilityZone
              description: The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS Region.
        Entitlements:
          allOf:
            - $ref: '#/components/schemas/__listOfGrantEntitlementRequest'
            - xml:
                name: entitlements
              description: The entitlements that you want to grant on a flow.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the flow.
        Outputs:
          allOf:
            - $ref: '#/components/schemas/__listOfAddOutputRequest'
            - xml:
                name: outputs
              description: The outputs that you want to add to this flow.
        Source:
          allOf:
            - $ref: '#/components/schemas/SetSourceRequest'
            - xml:
                name: source
        SourceFailoverConfig:
          allOf:
            - $ref: '#/components/schemas/FailoverConfig'
            - xml:
                name: sourceFailoverConfig
        Sources:
          allOf:
            - $ref: '#/components/schemas/__listOfSetSourceRequest'
            - xml:
                name: sources
        VpcInterfaces:
          allOf:
            - $ref: '#/components/schemas/__listOfVpcInterfaceRequest'
            - xml:
                name: vpcInterfaces
              description: The VPC interfaces you want on the flow.
      description: Creates a new flow. The request must include one source. The request optionally can include outputs (up to 50) and entitlements (up to 50).
    Flow:
      type: object
      required:
        - Status
        - Entitlements
        - Outputs
        - AvailabilityZone
        - FlowArn
        - Source
        - Name
      properties:
        AvailabilityZone:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: availabilityZone
              description: The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description of the flow. This value is not used or seen outside of the current AWS Elemental MediaConnect account.
        EgressIp:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: egressIp
              description: The IP address from which video will be sent to output destinations.
        Entitlements:
          allOf:
            - $ref: '#/components/schemas/__listOfEntitlement'
            - xml:
                name: entitlements
              description: The entitlements in this flow.
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: 'The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.'
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the flow.
        Outputs:
          allOf:
            - $ref: '#/components/schemas/__listOfOutput'
            - xml:
                name: outputs
              description: The outputs in this flow.
        Source:
          allOf:
            - $ref: '#/components/schemas/Source'
            - xml:
                name: source
        SourceFailoverConfig:
          allOf:
            - $ref: '#/components/schemas/FailoverConfig'
            - xml:
                name: sourceFailoverConfig
        Sources:
          allOf:
            - $ref: '#/components/schemas/__listOfSource'
            - xml:
                name: sources
        Status:
          allOf:
            - $ref: '#/components/schemas/Status'
            - xml:
                name: status
              description: The current status of the flow.
        VpcInterfaces:
          allOf:
            - $ref: '#/components/schemas/__listOfVpcInterface'
            - xml:
                name: vpcInterfaces
              description: The VPC Interfaces for this flow.
      description: 'The settings for a flow, including its source, outputs, and entitlements.'
    DeleteFlowRequest:
      type: object
      title: DeleteFlowRequest
      properties: {}
    Status:
      type: string
      enum:
        - STANDBY
        - ACTIVE
        - UPDATING
        - DELETING
        - STARTING
        - STOPPING
        - ERROR
    DescribeFlowRequest:
      type: object
      title: DescribeFlowRequest
      properties: {}
    Messages:
      type: object
      required:
        - Errors
      properties:
        Errors:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: errors
              description: A list of errors that might have been generated from processes on this flow.
      description: Messages that provide the state of the flow.
    EntitlementStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
    Entitlement:
      type: object
      required:
        - EntitlementArn
        - Subscribers
        - Name
      properties:
        DataTransferSubscriberFeePercent:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: dataTransferSubscriberFeePercent
              description: Percentage from 0-100 of the data transfer cost to be billed to the subscriber.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description of the entitlement.
        Encryption:
          allOf:
            - $ref: '#/components/schemas/Encryption'
            - xml:
                name: encryption
              description: The type of encryption that will be used on the output that is associated with this entitlement.
        EntitlementArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: entitlementArn
              description: The ARN of the entitlement.
        EntitlementStatus:
          allOf:
            - $ref: '#/components/schemas/EntitlementStatus'
            - xml:
                name: entitlementStatus
              description: An indication of whether the entitlement is enabled.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the entitlement.
        Subscribers:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: subscribers
              description: The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.
      description: The settings for a flow entitlement.
    __listOfEntitlement:
      type: array
      items:
        $ref: '#/components/schemas/Entitlement'
    Source:
      type: object
      required:
        - SourceArn
        - Name
      properties:
        DataTransferSubscriberFeePercent:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: dataTransferSubscriberFeePercent
              description: Percentage from 0-100 of the data transfer cost to be billed to the subscriber.
        Decryption:
          allOf:
            - $ref: '#/components/schemas/Encryption'
            - xml:
                name: decryption
              description: The type of encryption that is used on the content ingested from this source.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.
        EntitlementArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: entitlementArn
              description: The ARN of the entitlement that allows you to subscribe to content that comes from another AWS account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow.
        IngestIp:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: ingestIp
              description: The IP address that the flow will be listening on for incoming content.
        IngestPort:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: ingestPort
              description: The port that the flow will be listening on for incoming content.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the source.
        SourceArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: sourceArn
              description: The ARN of the source.
        Transport:
          allOf:
            - $ref: '#/components/schemas/Transport'
            - xml:
                name: transport
              description: Attributes related to the transport stream that are used in the source.
        VpcInterfaceName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: vpcInterfaceName
              description: The name of the VPC Interface this Source is configured with.
        WhitelistCidr:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: whitelistCidr
              description: 'The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'
      description: The settings for the source of the flow.
    GrantFlowEntitlementsRequest:
      type: object
      required:
        - Entitlements
      title: GrantFlowEntitlementsRequest
      properties:
        Entitlements:
          allOf:
            - $ref: '#/components/schemas/__listOfGrantEntitlementRequest'
            - xml:
                name: entitlements
              description: The list of entitlements that you want to grant.
      description: A request to grant entitlements on a flow.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    ListEntitlementsRequest:
      type: object
      title: ListEntitlementsRequest
      properties: {}
    __listOfListedEntitlement:
      type: array
      items:
        $ref: '#/components/schemas/ListedEntitlement'
    ListFlowsRequest:
      type: object
      title: ListFlowsRequest
      properties: {}
    __listOfListedFlow:
      type: array
      items:
        $ref: '#/components/schemas/ListedFlow'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    __mapOf__string:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__string'
    ListedEntitlement:
      type: object
      required:
        - EntitlementArn
        - EntitlementName
      properties:
        DataTransferSubscriberFeePercent:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: dataTransferSubscriberFeePercent
              description: Percentage from 0-100 of the data transfer cost to be billed to the subscriber.
        EntitlementArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: entitlementArn
              description: The ARN of the entitlement.
        EntitlementName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: entitlementName
              description: The name of the entitlement.
      description: An entitlement that has been granted to you from other AWS accounts.
    SourceType:
      type: string
      enum:
        - OWNED
        - ENTITLED
    ListedFlow:
      type: object
      required:
        - Status
        - Description
        - SourceType
        - AvailabilityZone
        - FlowArn
        - Name
      properties:
        AvailabilityZone:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: availabilityZone
              description: The Availability Zone that the flow was created in.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description of the flow.
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the flow.
        SourceType:
          allOf:
            - $ref: '#/components/schemas/SourceType'
            - xml:
                name: sourceType
              description: The type of source. This value is either owned (originated somewhere other than an AWS Elemental MediaConnect flow owned by another AWS account) or entitled (originated at an AWS Elemental MediaConnect flow owned by another AWS account).
        Status:
          allOf:
            - $ref: '#/components/schemas/Status'
            - xml:
                name: status
              description: The current status of the flow.
      description: 'Provides a summary of a flow, including its ARN, Availability Zone, and source type.'
    Transport:
      type: object
      required:
        - Protocol
      properties:
        CidrAllowList:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: cidrAllowList
              description: 'The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'
        MaxBitrate:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxBitrate
              description: 'The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.'
        MaxLatency:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxLatency
              description: The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.
        Protocol:
          allOf:
            - $ref: '#/components/schemas/Protocol'
            - xml:
                name: protocol
              description: The protocol that is used by the source or output.
        RemoteId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: remoteId
              description: The remote ID for the Zixi-pull stream.
        SmoothingLatency:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: smoothingLatency
              description: 'The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams.'
        StreamId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: streamId
              description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.
      description: Attributes related to the transport stream that are used in a source or output.
    Output:
      type: object
      required:
        - OutputArn
        - Name
      properties:
        DataTransferSubscriberFeePercent:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: dataTransferSubscriberFeePercent
              description: Percentage from 0-100 of the data transfer cost to be billed to the subscriber.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description of the output.
        Destination:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: destination
              description: The address where you want to send the output.
        Encryption:
          allOf:
            - $ref: '#/components/schemas/Encryption'
            - xml:
                name: encryption
              description: 'The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'
        EntitlementArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: entitlementArn
              description: The ARN of the entitlement on the originator''s flow. This value is relevant only on entitled flows.
        MediaLiveInputArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: mediaLiveInputArn
              description: The input ARN of the AWS Elemental MediaLive channel. This parameter is relevant only for outputs that were added by creating a MediaLive input.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the output. This value must be unique within the current flow.
        OutputArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: outputArn
              description: The ARN of the output.
        Port:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: port
              description: The port to use when content is distributed to this output.
        Transport:
          allOf:
            - $ref: '#/components/schemas/Transport'
            - xml:
                name: transport
              description: Attributes related to the transport stream that are used in the output.
        VpcInterfaceAttachment:
          allOf:
            - $ref: '#/components/schemas/VpcInterfaceAttachment'
            - xml:
                name: vpcInterfaceAttachment
              description: The name of the VPC interface attachment to use for this output.
      description: The settings for an output.
    RemoveFlowOutputRequest:
      type: object
      title: RemoveFlowOutputRequest
      properties: {}
    RemoveFlowSourceRequest:
      type: object
      title: RemoveFlowSourceRequest
      properties: {}
    RemoveFlowVpcInterfaceRequest:
      type: object
      title: RemoveFlowVpcInterfaceRequest
      properties: {}
    RevokeFlowEntitlementRequest:
      type: object
      title: RevokeFlowEntitlementRequest
      properties: {}
    StartFlowRequest:
      type: object
      title: StartFlowRequest
      properties: {}
    StopFlowRequest:
      type: object
      title: StopFlowRequest
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - Tags
      title: TagResourceRequest
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/__mapOf__string'
            - xml:
                name: tags
              description: 'A map from tag keys to values. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.'
      description: 'The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.'
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateEncryption:
      type: object
      properties:
        Algorithm:
          allOf:
            - $ref: '#/components/schemas/Algorithm'
            - xml:
                name: algorithm
              description: 'The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).'
        ConstantInitializationVector:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: constantInitializationVector
              description: 'A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.'
        DeviceId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: deviceId
              description: The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.
        KeyType:
          allOf:
            - $ref: '#/components/schemas/KeyType'
            - xml:
                name: keyType
              description: 'The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'
        Region:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: region
              description: The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.
        ResourceId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: resourceId
              description: An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).
        SecretArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: secretArn
              description: The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.
        Url:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: url
              description: The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.
      description: Information about the encryption of the flow.
    UpdateFailoverConfig:
      type: object
      properties:
        RecoveryWindow:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: recoveryWindow
              description: Recovery window time to look for dash-7 packets
        State:
          allOf:
            - $ref: '#/components/schemas/State'
            - xml:
                name: state
      description: The settings for source failover
    UpdateFlowEntitlementRequest:
      type: object
      title: UpdateFlowEntitlementRequest
      properties:
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description of the entitlement. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the subscriber or end user.
        Encryption:
          allOf:
            - $ref: '#/components/schemas/UpdateEncryption'
            - xml:
                name: encryption
              description: The type of encryption that will be used on the output associated with this entitlement.
        EntitlementStatus:
          allOf:
            - $ref: '#/components/schemas/EntitlementStatus'
            - xml:
                name: entitlementStatus
              description: 'An indication of whether you want to enable the entitlement to allow access, or disable it to stop streaming content to the subscriber’s flow temporarily. If you don’t specify the entitlementStatus field in your request, MediaConnect leaves the value unchanged.'
        Subscribers:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: subscribers
              description: The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.
      description: The entitlement fields that you want to update.
    UpdateFlowOutputRequest:
      type: object
      title: UpdateFlowOutputRequest
      properties:
        CidrAllowList:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: cidrAllowList
              description: 'The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description of the output. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the end user.
        Destination:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: destination
              description: The IP address where you want to send the output.
        Encryption:
          allOf:
            - $ref: '#/components/schemas/UpdateEncryption'
            - xml:
                name: encryption
              description: 'The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'
        MaxLatency:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxLatency
              description: The maximum latency in milliseconds for Zixi-based streams.
        Port:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: port
              description: The port to use when content is distributed to this output.
        Protocol:
          allOf:
            - $ref: '#/components/schemas/Protocol'
            - xml:
                name: protocol
              description: The protocol to use for the output.
        RemoteId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: remoteId
              description: The remote ID for the Zixi-pull stream.
        SmoothingLatency:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: smoothingLatency
              description: 'The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams.'
        StreamId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: streamId
              description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.
        VpcInterfaceAttachment:
          allOf:
            - $ref: '#/components/schemas/VpcInterfaceAttachment'
            - xml:
                name: vpcInterfaceAttachment
              description: The name of the VPC interface attachment to use for this output.
      description: The fields that you want to update in the output.
    UpdateFlowRequest:
      type: object
      title: UpdateFlowRequest
      properties:
        SourceFailoverConfig:
          allOf:
            - $ref: '#/components/schemas/UpdateFailoverConfig'
            - xml:
                name: sourceFailoverConfig
      description: A request to update flow.
    UpdateFlowSourceRequest:
      type: object
      title: UpdateFlowSourceRequest
      properties:
        Decryption:
          allOf:
            - $ref: '#/components/schemas/UpdateEncryption'
            - xml:
                name: decryption
              description: The type of encryption used on the content ingested from this source.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.
        EntitlementArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: entitlementArn
              description: 'The ARN of the entitlement that allows you to subscribe to this flow. The entitlement is set by the flow originator, and the ARN is generated as part of the originator''s flow.'
        IngestPort:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: ingestPort
              description: The port that the flow will be listening on for incoming content.
        MaxBitrate:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxBitrate
              description: 'The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.'
        MaxLatency:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxLatency
              description: The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.
        Protocol:
          allOf:
            - $ref: '#/components/schemas/Protocol'
            - xml:
                name: protocol
              description: The protocol that is used by the source.
        StreamId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: streamId
              description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.
        VpcInterfaceName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: vpcInterfaceName
              description: The name of the VPC Interface to configure this Source with.
        WhitelistCidr:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: whitelistCidr
              description: 'The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'
      description: A request to update the source of a flow.
    VpcInterface:
      type: object
      required:
        - NetworkInterfaceIds
        - SubnetId
        - SecurityGroupIds
        - RoleArn
        - Name
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: Immutable and has to be a unique against other VpcInterfaces in this Flow
        NetworkInterfaceIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: networkInterfaceIds
              description: IDs of the network interfaces created in customer's account by MediaConnect.
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: Role Arn MediaConnect can assumes to create ENIs in customer's account
        SecurityGroupIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: securityGroupIds
              description: Security Group IDs to be used on ENI.
        SubnetId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: subnetId
              description: Subnet must be in the AZ of the Flow
      description: The settings for a VPC Source.
security:
  - hmac: []
