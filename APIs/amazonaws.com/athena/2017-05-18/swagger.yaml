swagger: '2.0'
schemes:
  - https
  - http
host: athena.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: '<p>Amazon Athena is an interactive query service that lets you use standard SQL to analyze data directly in Amazon S3. You can point Athena at your data in Amazon S3 and run ad-hoc queries and get results in seconds. Athena is serverless, so there is no infrastructure to set up or manage. You pay only for the queries you run. Athena scales automatically—executing queries in parallel—so results are fast, even with large datasets and complex queries. For more information, see <a href="http://docs.aws.amazon.com/athena/latest/ug/what-is.html">What is Amazon Athena</a> in the <i>Amazon Athena User Guide</i>.</p> <p>If you connect to Athena using the JDBC driver, use version 1.1.0 of the driver or later with the Amazon Athena API. Earlier version drivers do not support the API. For more information and to download the driver, see <a href="https://docs.aws.amazon.com/athena/latest/ug/connect-with-jdbc.html">Accessing Amazon Athena with JDBC</a>.</p> <p>For code samples using the AWS SDK for Java, see <a href="https://docs.aws.amazon.com/athena/latest/ug/code-samples.html">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon Athena
  version: '2017-05-18'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/athena-2017-05-18.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: athena
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/athena/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  '/#X-Amz-Target=AmazonAthena.BatchGetNamedQuery':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns the details of a single named query or a list of up to 50 queries, which you provide as an array of query ID strings. Requires you to have access to the workgroup in which the queries were saved. Use <a>ListNamedQueriesInput</a> to get the list of named query IDs in the specified workgroup. If information could not be retrieved for a submitted query ID, information about the query ID submitted is listed under <a>UnprocessedNamedQueryId</a>. Named queries differ from executed queries. Use <a>BatchGetQueryExecutionInput</a> to get details about each unique query execution, and <a>ListQueryExecutionsInput</a> to get a list of query execution IDs.'
      operationId: BatchGetNamedQuery
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BatchGetNamedQueryInput'
        - enum:
            - AmazonAthena.BatchGetNamedQuery
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchGetNamedQueryOutput'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
  '/#X-Amz-Target=AmazonAthena.BatchGetQueryExecution':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns the details of a single query execution or a list of up to 50 query executions, which you provide as an array of query execution ID strings. Requires you to have access to the workgroup in which the queries ran. To get a list of query execution IDs, use <a>ListQueryExecutionsInput$WorkGroup</a>. Query executions differ from named (saved) queries. Use <a>BatchGetNamedQueryInput</a> to get details about named queries.'
      operationId: BatchGetQueryExecution
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BatchGetQueryExecutionInput'
        - enum:
            - AmazonAthena.BatchGetQueryExecution
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchGetQueryExecutionOutput'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
  '/#X-Amz-Target=AmazonAthena.CreateNamedQuery':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a named query in the specified workgroup. Requires that you have access to the workgroup.</p> <p>For code samples using the AWS SDK for Java, see <a href="http://docs.aws.amazon.com/athena/latest/ug/code-samples.html">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>'
      operationId: CreateNamedQuery
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateNamedQueryInput'
        - enum:
            - AmazonAthena.CreateNamedQuery
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateNamedQueryOutput'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
  '/#X-Amz-Target=AmazonAthena.CreateWorkGroup':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a workgroup with the specified name.
      operationId: CreateWorkGroup
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateWorkGroupInput'
        - enum:
            - AmazonAthena.CreateWorkGroup
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateWorkGroupOutput'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
  '/#X-Amz-Target=AmazonAthena.DeleteNamedQuery':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Deletes the named query if you have access to the workgroup in which the query was saved.</p> <p>For code samples using the AWS SDK for Java, see <a href="http://docs.aws.amazon.com/athena/latest/ug/code-samples.html">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>'
      operationId: DeleteNamedQuery
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteNamedQueryInput'
        - enum:
            - AmazonAthena.DeleteNamedQuery
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteNamedQueryOutput'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
  '/#X-Amz-Target=AmazonAthena.DeleteWorkGroup':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes the workgroup with the specified name. The primary workgroup cannot be deleted.
      operationId: DeleteWorkGroup
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteWorkGroupInput'
        - enum:
            - AmazonAthena.DeleteWorkGroup
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteWorkGroupOutput'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
  '/#X-Amz-Target=AmazonAthena.GetNamedQuery':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns information about a single query. Requires that you have access to the workgroup in which the query was saved.
      operationId: GetNamedQuery
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetNamedQueryInput'
        - enum:
            - AmazonAthena.GetNamedQuery
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetNamedQueryOutput'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
  '/#X-Amz-Target=AmazonAthena.GetQueryExecution':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns information about a single execution of a query if you have access to the workgroup in which the query ran. Each time a query executes, information about the query execution is saved with a unique ID.'
      operationId: GetQueryExecution
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetQueryExecutionInput'
        - enum:
            - AmazonAthena.GetQueryExecution
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetQueryExecutionOutput'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
  '/#X-Amz-Target=AmazonAthena.GetQueryResults':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns the results of a single query execution specified by <code>QueryExecutionId</code> if you have access to the workgroup in which the query ran. This request does not execute the query but returns results. Use <a>StartQueryExecution</a> to run a query.
      operationId: GetQueryResults
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetQueryResultsInput'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AmazonAthena.GetQueryResults
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetQueryResultsOutput'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
  '/#X-Amz-Target=AmazonAthena.GetWorkGroup':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns information about the workgroup with the specified name.
      operationId: GetWorkGroup
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetWorkGroupInput'
        - enum:
            - AmazonAthena.GetWorkGroup
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetWorkGroupOutput'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
  '/#X-Amz-Target=AmazonAthena.ListNamedQueries':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Provides a list of available query IDs only for queries saved in the specified workgroup. Requires that you have access to the workgroup.</p> <p>For code samples using the AWS SDK for Java, see <a href="http://docs.aws.amazon.com/athena/latest/ug/code-samples.html">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>'
      operationId: ListNamedQueries
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListNamedQueriesInput'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AmazonAthena.ListNamedQueries
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListNamedQueriesOutput'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
  '/#X-Amz-Target=AmazonAthena.ListQueryExecutions':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Provides a list of available query execution IDs for the queries in the specified workgroup. Requires you to have access to the workgroup in which the queries ran.</p> <p>For code samples using the AWS SDK for Java, see <a href="http://docs.aws.amazon.com/athena/latest/ug/code-samples.html">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>'
      operationId: ListQueryExecutions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListQueryExecutionsInput'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AmazonAthena.ListQueryExecutions
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListQueryExecutionsOutput'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
  '/#X-Amz-Target=AmazonAthena.ListTagsForResource':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists the tags associated with this workgroup.
      operationId: ListTagsForResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceInput'
        - enum:
            - AmazonAthena.ListTagsForResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceOutput'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#X-Amz-Target=AmazonAthena.ListWorkGroups':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists available workgroups for the account.
      operationId: ListWorkGroups
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListWorkGroupsInput'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
        - enum:
            - AmazonAthena.ListWorkGroups
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListWorkGroupsOutput'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
  '/#X-Amz-Target=AmazonAthena.StartQueryExecution':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Runs the SQL query statements contained in the <code>Query</code>. Requires you to have access to the workgroup in which the query ran.</p> <p>For code samples using the AWS SDK for Java, see <a href="http://docs.aws.amazon.com/athena/latest/ug/code-samples.html">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>'
      operationId: StartQueryExecution
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartQueryExecutionInput'
        - enum:
            - AmazonAthena.StartQueryExecution
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartQueryExecutionOutput'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/#X-Amz-Target=AmazonAthena.StopQueryExecution':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Stops a query execution. Requires you to have access to the workgroup in which the query ran.</p> <p>For code samples using the AWS SDK for Java, see <a href="http://docs.aws.amazon.com/athena/latest/ug/code-samples.html">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>'
      operationId: StopQueryExecution
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StopQueryExecutionInput'
        - enum:
            - AmazonAthena.StopQueryExecution
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopQueryExecutionOutput'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
  '/#X-Amz-Target=AmazonAthena.TagResource':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Adds one or more tags to the resource, such as a workgroup. A tag is a label that you assign to an AWS Athena resource (a workgroup). Each tag consists of a key and an optional value, both of which you define. Tags enable you to categorize resources (workgroups) in Athena, for example, by purpose, owner, or environment. Use a consistent set of tag keys to make it easier to search and filter workgroups in your account. For best practices, see <a href="https://aws.amazon.com/answers/account-management/aws-tagging-strategies/">AWS Tagging Strategies</a>. The key length is from 1 (minimum) to 128 (maximum) Unicode characters in UTF-8. The tag value length is from 0 (minimum) to 256 (maximum) Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys and values are case-sensitive. Tag keys must be unique per resource. If you specify more than one, separate them by commas.'
      operationId: TagResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagResourceInput'
        - enum:
            - AmazonAthena.TagResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceOutput'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#X-Amz-Target=AmazonAthena.UntagResource':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Removes one or more tags from the workgroup resource. Takes as an input a list of TagKey Strings separated by commas, and removes their tags at the same time.'
      operationId: UntagResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UntagResourceInput'
        - enum:
            - AmazonAthena.UntagResource
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceOutput'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#X-Amz-Target=AmazonAthena.UpdateWorkGroup':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates the workgroup with the specified name. The workgroup's name cannot be changed.
      operationId: UpdateWorkGroup
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateWorkGroupInput'
        - enum:
            - AmazonAthena.UpdateWorkGroup
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateWorkGroupOutput'
        '480':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
definitions:
  AmazonResourceName:
    maxLength: 1011
    minLength: 1
    type: string
  BatchGetNamedQueryInput:
    properties:
      NamedQueryIds:
        $ref: '#/definitions/NamedQueryIdList'
        description: An array of query IDs.
    required:
      - NamedQueryIds
    type: object
  BatchGetNamedQueryOutput:
    properties:
      NamedQueries:
        $ref: '#/definitions/NamedQueryList'
        description: Information about the named query IDs submitted.
      UnprocessedNamedQueryIds:
        $ref: '#/definitions/UnprocessedNamedQueryIdList'
        description: Information about provided query IDs.
    type: object
  BatchGetQueryExecutionInput:
    properties:
      QueryExecutionIds:
        $ref: '#/definitions/QueryExecutionIdList'
        description: An array of query execution IDs.
    required:
      - QueryExecutionIds
    type: object
  BatchGetQueryExecutionOutput:
    properties:
      QueryExecutions:
        $ref: '#/definitions/QueryExecutionList'
        description: Information about a query execution.
      UnprocessedQueryExecutionIds:
        $ref: '#/definitions/UnprocessedQueryExecutionIdList'
        description: Information about the query executions that failed to run.
    type: object
  Boolean:
    type: boolean
  BoxedBoolean:
    type: boolean
  BytesScannedCutoffValue:
    minimum: 10000000
    type: integer
  ColumnInfo:
    description: Information about the columns in a query execution result.
    properties:
      CaseSensitive:
        $ref: '#/definitions/Boolean'
        description: Indicates whether values in the column are case-sensitive.
      CatalogName:
        $ref: '#/definitions/String'
        description: The catalog to which the query results belong.
      Label:
        $ref: '#/definitions/String'
        description: A column label.
      Name:
        $ref: '#/definitions/String'
        description: The name of the column.
      Nullable:
        $ref: '#/definitions/ColumnNullable'
        description: Indicates the column's nullable status.
      Precision:
        $ref: '#/definitions/Integer'
        description: 'For <code>DECIMAL</code> data types, specifies the total number of digits, up to 38. For performance reasons, we recommend up to 18 digits.'
      Scale:
        $ref: '#/definitions/Integer'
        description: 'For <code>DECIMAL</code> data types, specifies the total number of digits in the fractional part of the value. Defaults to 0.'
      SchemaName:
        $ref: '#/definitions/String'
        description: The schema name (database name) to which the query results belong.
      TableName:
        $ref: '#/definitions/String'
        description: The table name for the query results.
      Type:
        $ref: '#/definitions/String'
        description: The data type of the column.
    required:
      - Name
      - Type
    type: object
  ColumnInfoList:
    items:
      $ref: '#/definitions/ColumnInfo'
    type: array
  ColumnNullable:
    enum:
      - NOT_NULL
      - NULLABLE
      - UNKNOWN
    type: string
  CreateNamedQueryInput:
    properties:
      ClientRequestToken:
        $ref: '#/definitions/IdempotencyToken'
        description: '<p>A unique case-sensitive string used to ensure the request to create the query is idempotent (executes only once). If another <code>CreateNamedQuery</code> request is received, the same response is returned and another query is not created. If a parameter has changed, for example, the <code>QueryString</code>, an error is returned.</p> <important> <p>This token is listed as not required because AWS SDKs (for example the AWS SDK for Java) auto-generate the token for users. If you are not using the AWS SDK or the AWS CLI, you must provide this token or the action will fail.</p> </important>'
      Database:
        $ref: '#/definitions/DatabaseString'
        description: The database to which the query belongs.
      Description:
        $ref: '#/definitions/DescriptionString'
        description: The query description.
      Name:
        $ref: '#/definitions/NameString'
        description: The query name.
      QueryString:
        $ref: '#/definitions/QueryString'
        description: The contents of the query with all query statements.
      WorkGroup:
        $ref: '#/definitions/WorkGroupName'
        description: The name of the workgroup in which the named query is being created.
    required:
      - Name
      - Database
      - QueryString
    type: object
  CreateNamedQueryOutput:
    properties:
      NamedQueryId:
        $ref: '#/definitions/NamedQueryId'
        description: The unique ID of the query.
    type: object
  CreateWorkGroupInput:
    properties:
      Configuration:
        $ref: '#/definitions/WorkGroupConfiguration'
        description: 'The configuration for the workgroup, which includes the location in Amazon S3 where query results are stored, the encryption configuration, if any, used for encrypting query results, whether the Amazon CloudWatch Metrics are enabled for the workgroup, the limit for the amount of bytes scanned (cutoff) per query, if it is specified, and whether workgroup''s settings (specified with EnforceWorkGroupConfiguration) in the WorkGroupConfiguration override client-side settings. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.'
      Description:
        $ref: '#/definitions/WorkGroupDescriptionString'
        description: The workgroup description.
      Name:
        $ref: '#/definitions/WorkGroupName'
        description: The workgroup name.
      Tags:
        $ref: '#/definitions/TagList'
        description: 'One or more tags, separated by commas, that you want to attach to the workgroup as you create it.'
    required:
      - Name
    type: object
  CreateWorkGroupOutput:
    properties: {}
    type: object
  DatabaseString:
    maxLength: 255
    minLength: 1
    type: string
  Date:
    format: date-time
    type: string
  Datum:
    description: A piece of data (a field in the table).
    properties:
      VarCharValue:
        $ref: '#/definitions/datumString'
        description: The value of the datum.
    type: object
  DeleteNamedQueryInput:
    properties:
      NamedQueryId:
        $ref: '#/definitions/NamedQueryId'
        description: The unique ID of the query to delete.
    required:
      - NamedQueryId
    type: object
  DeleteNamedQueryOutput:
    properties: {}
    type: object
  DeleteWorkGroupInput:
    properties:
      RecursiveDeleteOption:
        $ref: '#/definitions/BoxedBoolean'
        description: The option to delete the workgroup and its contents even if the workgroup contains any named queries.
      WorkGroup:
        $ref: '#/definitions/WorkGroupName'
        description: The unique name of the workgroup to delete.
    required:
      - WorkGroup
    type: object
  DeleteWorkGroupOutput:
    properties: {}
    type: object
  DescriptionString:
    maxLength: 1024
    minLength: 1
    type: string
  EncryptionConfiguration:
    description: 'If query results are encrypted in Amazon S3, indicates the encryption option used (for example, <code>SSE-KMS</code> or <code>CSE-KMS</code>) and key information.'
    properties:
      EncryptionOption:
        $ref: '#/definitions/EncryptionOption'
        description: '<p>Indicates whether Amazon S3 server-side encryption with Amazon S3-managed keys (<code>SSE-S3</code>), server-side encryption with KMS-managed keys (<code>SSE-KMS</code>), or client-side encryption with KMS-managed keys (CSE-KMS) is used.</p> <p>If a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup''s setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup. </p>'
      KmsKey:
        $ref: '#/definitions/String'
        description: 'For <code>SSE-KMS</code> and <code>CSE-KMS</code>, this is the KMS key ARN or ID.'
    required:
      - EncryptionOption
    type: object
  EncryptionOption:
    enum:
      - SSE_S3
      - SSE_KMS
      - CSE_KMS
    type: string
  ErrorCode:
    description: 'The error code returned when the query execution failed to process, or when the processing request for the named query failed.'
    maxLength: 256
    minLength: 1
    type: string
  ErrorMessage:
    type: string
  GetNamedQueryInput:
    properties:
      NamedQueryId:
        $ref: '#/definitions/NamedQueryId'
        description: The unique ID of the query. Use <a>ListNamedQueries</a> to get query IDs.
    required:
      - NamedQueryId
    type: object
  GetNamedQueryOutput:
    properties:
      NamedQuery:
        $ref: '#/definitions/NamedQuery'
        description: Information about the query.
    type: object
  GetQueryExecutionInput:
    properties:
      QueryExecutionId:
        $ref: '#/definitions/QueryExecutionId'
        description: The unique ID of the query execution.
    required:
      - QueryExecutionId
    type: object
  GetQueryExecutionOutput:
    properties:
      QueryExecution:
        $ref: '#/definitions/QueryExecution'
        description: Information about the query execution.
    type: object
  GetQueryResultsInput:
    properties:
      MaxResults:
        $ref: '#/definitions/MaxQueryResults'
        description: The maximum number of results (rows) to return in this request.
      NextToken:
        $ref: '#/definitions/Token'
        description: The token that specifies where to start pagination if a previous request was truncated.
      QueryExecutionId:
        $ref: '#/definitions/QueryExecutionId'
        description: The unique ID of the query execution.
    required:
      - QueryExecutionId
    type: object
  GetQueryResultsOutput:
    properties:
      NextToken:
        $ref: '#/definitions/Token'
        description: A token to be used by the next request if this request is truncated.
      ResultSet:
        $ref: '#/definitions/ResultSet'
        description: The results of the query execution.
      UpdateCount:
        $ref: '#/definitions/Long'
        description: 'The number of rows inserted with a CREATE TABLE AS SELECT statement. '
    type: object
  GetWorkGroupInput:
    properties:
      WorkGroup:
        $ref: '#/definitions/WorkGroupName'
        description: The name of the workgroup.
    required:
      - WorkGroup
    type: object
  GetWorkGroupOutput:
    properties:
      WorkGroup:
        $ref: '#/definitions/WorkGroup'
        description: Information about the workgroup.
    type: object
  IdempotencyToken:
    maxLength: 128
    minLength: 32
    type: string
  Integer:
    type: integer
  InternalServerException: {}
  InvalidRequestException: {}
  ListNamedQueriesInput:
    properties:
      MaxResults:
        $ref: '#/definitions/MaxNamedQueriesCount'
        description: The maximum number of queries to return in this request.
      NextToken:
        $ref: '#/definitions/Token'
        description: The token that specifies where to start pagination if a previous request was truncated.
      WorkGroup:
        $ref: '#/definitions/WorkGroupName'
        description: The name of the workgroup from which the named queries are being returned.
    type: object
  ListNamedQueriesOutput:
    properties:
      NamedQueryIds:
        $ref: '#/definitions/NamedQueryIdList'
        description: The list of unique query IDs.
      NextToken:
        $ref: '#/definitions/Token'
        description: A token to be used by the next request if this request is truncated.
    type: object
  ListQueryExecutionsInput:
    properties:
      MaxResults:
        $ref: '#/definitions/MaxQueryExecutionsCount'
        description: The maximum number of query executions to return in this request.
      NextToken:
        $ref: '#/definitions/Token'
        description: The token that specifies where to start pagination if a previous request was truncated.
      WorkGroup:
        $ref: '#/definitions/WorkGroupName'
        description: The name of the workgroup from which queries are being returned.
    type: object
  ListQueryExecutionsOutput:
    properties:
      NextToken:
        $ref: '#/definitions/Token'
        description: A token to be used by the next request if this request is truncated.
      QueryExecutionIds:
        $ref: '#/definitions/QueryExecutionIdList'
        description: The unique IDs of each query execution as an array of strings.
    type: object
  ListTagsForResourceInput:
    properties:
      MaxResults:
        $ref: '#/definitions/MaxTagsCount'
        description: The maximum number of results to be returned per request that lists the tags for the workgroup resource.
      NextToken:
        $ref: '#/definitions/Token'
        description: 'The token for the next set of results, or null if there are no additional results for this request, where the request lists the tags for the workgroup resource with the specified ARN.'
      ResourceARN:
        $ref: '#/definitions/AmazonResourceName'
        description: Lists the tags for the workgroup resource with the specified ARN.
    required:
      - ResourceARN
    type: object
  ListTagsForResourceOutput:
    properties:
      NextToken:
        $ref: '#/definitions/Token'
        description: A token to be used by the next request if this request is truncated.
      Tags:
        $ref: '#/definitions/TagList'
        description: The list of tags associated with this workgroup.
    type: object
  ListWorkGroupsInput:
    properties:
      MaxResults:
        $ref: '#/definitions/MaxWorkGroupsCount'
        description: The maximum number of workgroups to return in this request.
      NextToken:
        $ref: '#/definitions/Token'
        description: A token to be used by the next request if this request is truncated.
    type: object
  ListWorkGroupsOutput:
    properties:
      NextToken:
        $ref: '#/definitions/Token'
        description: A token to be used by the next request if this request is truncated.
      WorkGroups:
        $ref: '#/definitions/WorkGroupsList'
        description: 'The list of workgroups, including their names, descriptions, creation times, and states.'
    type: object
  Long:
    type: integer
  MaxNamedQueriesCount:
    maximum: 50
    minimum: 0
    type: integer
  MaxQueryExecutionsCount:
    maximum: 50
    minimum: 0
    type: integer
  MaxQueryResults:
    maximum: 1000
    minimum: 1
    type: integer
  MaxTagsCount:
    minimum: 75
    type: integer
  MaxWorkGroupsCount:
    maximum: 50
    minimum: 1
    type: integer
  NameString:
    maxLength: 128
    minLength: 1
    type: string
  NamedQuery:
    description: 'A query, where <code>QueryString</code> is the list of SQL query statements that comprise the query.'
    properties:
      Database:
        $ref: '#/definitions/DatabaseString'
        description: The database to which the query belongs.
      Description:
        $ref: '#/definitions/DescriptionString'
        description: The query description.
      Name:
        $ref: '#/definitions/NameString'
        description: The query name.
      NamedQueryId:
        $ref: '#/definitions/NamedQueryId'
        description: The unique identifier of the query.
      QueryString:
        $ref: '#/definitions/QueryString'
        description: The SQL query statements that comprise the query.
      WorkGroup:
        $ref: '#/definitions/WorkGroupName'
        description: The name of the workgroup that contains the named query.
    required:
      - Name
      - Database
      - QueryString
    type: object
  NamedQueryId:
    type: string
  NamedQueryIdList:
    items:
      $ref: '#/definitions/NamedQueryId'
    maxItems: 50
    minItems: 1
    type: array
  NamedQueryList:
    items:
      $ref: '#/definitions/NamedQuery'
    type: array
  QueryExecution:
    description: Information about a single instance of a query execution.
    properties:
      Query:
        $ref: '#/definitions/QueryString'
        description: The SQL query statements which the query execution ran.
      QueryExecutionContext:
        $ref: '#/definitions/QueryExecutionContext'
        description: The database in which the query execution occurred.
      QueryExecutionId:
        $ref: '#/definitions/QueryExecutionId'
        description: The unique identifier for each query execution.
      ResultConfiguration:
        $ref: '#/definitions/ResultConfiguration'
        description: 'The location in Amazon S3 where query results were stored and the encryption option, if any, used for query results. These are known as "client-side settings". If workgroup settings override client-side settings, then the query uses the location for the query results and the encryption configuration that are specified for the workgroup.'
      StatementType:
        $ref: '#/definitions/StatementType'
        description: 'The type of query statement that was run. <code>DDL</code> indicates DDL query statements. <code>DML</code> indicates DML (Data Manipulation Language) query statements, such as <code>CREATE TABLE AS SELECT</code>. <code>UTILITY</code> indicates query statements other than DDL and DML, such as <code>SHOW CREATE TABLE</code>, or <code>DESCRIBE &lt;table&gt;</code>.'
      Statistics:
        $ref: '#/definitions/QueryExecutionStatistics'
        description: 'The amount of data scanned during the query execution and the amount of time that it took to execute, and the type of statement that was run.'
      Status:
        $ref: '#/definitions/QueryExecutionStatus'
        description: 'The completion date, current state, submission time, and state change reason (if applicable) for the query execution.'
      WorkGroup:
        $ref: '#/definitions/WorkGroupName'
        description: The name of the workgroup in which the query ran.
    type: object
  QueryExecutionContext:
    description: The database in which the query execution occurs.
    properties:
      Database:
        $ref: '#/definitions/DatabaseString'
        description: The name of the database.
    type: object
  QueryExecutionId:
    type: string
  QueryExecutionIdList:
    items:
      $ref: '#/definitions/QueryExecutionId'
    maxItems: 50
    minItems: 1
    type: array
  QueryExecutionList:
    items:
      $ref: '#/definitions/QueryExecution'
    type: array
  QueryExecutionState:
    enum:
      - QUEUED
      - RUNNING
      - SUCCEEDED
      - FAILED
      - CANCELLED
    type: string
  QueryExecutionStatistics:
    description: 'The amount of data scanned during the query execution and the amount of time that it took to execute, and the type of statement that was run.'
    properties:
      DataScannedInBytes:
        $ref: '#/definitions/Long'
        description: The number of bytes in the data that was queried.
      EngineExecutionTimeInMillis:
        $ref: '#/definitions/Long'
        description: The number of milliseconds that the query took to execute.
    type: object
  QueryExecutionStatus:
    description: 'The completion date, current state, submission time, and state change reason (if applicable) for the query execution.'
    properties:
      CompletionDateTime:
        $ref: '#/definitions/Date'
        description: The date and time that the query completed.
      State:
        $ref: '#/definitions/QueryExecutionState'
        description: 'The state of query execution. <code>QUEUED</code> state is listed but is not used by Athena and is reserved for future use. <code>RUNNING</code> indicates that the query has been submitted to the service, and Athena will execute the query as soon as resources are available. <code>SUCCEEDED</code> indicates that the query completed without errors. <code>FAILED</code> indicates that the query experienced an error and did not complete processing. <code>CANCELLED</code> indicates that a user input interrupted query execution. '
      StateChangeReason:
        $ref: '#/definitions/String'
        description: Further detail about the status of the query.
      SubmissionDateTime:
        $ref: '#/definitions/Date'
        description: The date and time that the query was submitted.
    type: object
  QueryString:
    maxLength: 262144
    minLength: 1
    type: string
  ResourceNotFoundException: {}
  ResultConfiguration:
    description: 'The location in Amazon S3 where query results are stored and the encryption option, if any, used for query results. These are known as "client-side settings". If workgroup settings override client-side settings, then the query uses the workgroup settings.'
    properties:
      EncryptionConfiguration:
        $ref: '#/definitions/EncryptionConfiguration'
        description: 'If query results are encrypted in Amazon S3, indicates the encryption option used (for example, <code>SSE-KMS</code> or <code>CSE-KMS</code>) and key information. This is a client-side setting. If workgroup settings override client-side settings, then the query uses the encryption configuration that is specified for the workgroup, and also uses the location for storing query results specified in the workgroup. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a> and <a href="https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html">Workgroup Settings Override Client-Side Settings</a>.'
      OutputLocation:
        $ref: '#/definitions/String'
        description: 'The location in Amazon S3 where your query results are stored, such as <code>s3://path/to/query/bucket/</code>. To run the query, you must specify the query results location using one of the ways: either for individual queries using either this setting (client-side), or in the workgroup, using <a>WorkGroupConfiguration</a>. If none of them is set, Athena issues an error that no output location is provided. For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/querying.html">Query Results</a>. If workgroup settings override client-side settings, then the query uses the settings specified for the workgroup. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.'
    type: object
  ResultConfigurationUpdates:
    description: 'The information about the updates in the query results, such as output location and encryption configuration for the query results.'
    properties:
      EncryptionConfiguration:
        $ref: '#/definitions/EncryptionConfiguration'
        description: The encryption configuration for the query results.
      OutputLocation:
        $ref: '#/definitions/String'
        description: 'The location in Amazon S3 where your query results are stored, such as <code>s3://path/to/query/bucket/</code>. For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/querying.html">Query Results</a> If workgroup settings override client-side settings, then the query uses the location for the query results and the encryption configuration that are specified for the workgroup. The "workgroup settings override" is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.'
      RemoveEncryptionConfiguration:
        $ref: '#/definitions/BoxedBoolean'
        description: 'If set to "true", indicates that the previously-specified encryption configuration (also known as the client-side setting) for queries in this workgroup should be ignored and set to null. If set to "false" or not set, and a value is present in the EncryptionConfiguration in ResultConfigurationUpdates (the client-side setting), the EncryptionConfiguration in the workgroup''s ResultConfiguration will be updated with the new value. For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html">Workgroup Settings Override Client-Side Settings</a>.'
      RemoveOutputLocation:
        $ref: '#/definitions/BoxedBoolean'
        description: 'If set to "true", indicates that the previously-specified query results location (also known as a client-side setting) for queries in this workgroup should be ignored and set to null. If set to "false" or not set, and a value is present in the OutputLocation in ResultConfigurationUpdates (the client-side setting), the OutputLocation in the workgroup''s ResultConfiguration will be updated with the new value. For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html">Workgroup Settings Override Client-Side Settings</a>.'
    type: object
  ResultSet:
    description: The metadata and rows that comprise a query result set. The metadata describes the column structure and data types.
    properties:
      ResultSetMetadata:
        $ref: '#/definitions/ResultSetMetadata'
        description: The metadata that describes the column structure and data types of a table of query results.
      Rows:
        $ref: '#/definitions/RowList'
        description: The rows in the table.
    type: object
  ResultSetMetadata:
    description: 'The metadata that describes the column structure and data types of a table of query results. '
    properties:
      ColumnInfo:
        $ref: '#/definitions/ColumnInfoList'
        description: Information about the columns returned in a query result metadata.
    type: object
  Row:
    description: The rows that comprise a query result table.
    properties:
      Data:
        $ref: '#/definitions/datumList'
        description: The data that populates a row in a query result table.
    type: object
  RowList:
    items:
      $ref: '#/definitions/Row'
    type: array
  StartQueryExecutionInput:
    properties:
      ClientRequestToken:
        $ref: '#/definitions/IdempotencyToken'
        description: '<p>A unique case-sensitive string used to ensure the request to create the query is idempotent (executes only once). If another <code>StartQueryExecution</code> request is received, the same response is returned and another query is not created. If a parameter has changed, for example, the <code>QueryString</code>, an error is returned.</p> <important> <p>This token is listed as not required because AWS SDKs (for example the AWS SDK for Java) auto-generate the token for users. If you are not using the AWS SDK or the AWS CLI, you must provide this token or the action will fail.</p> </important>'
      QueryExecutionContext:
        $ref: '#/definitions/QueryExecutionContext'
        description: The database within which the query executes.
      QueryString:
        $ref: '#/definitions/QueryString'
        description: The SQL query statements to be executed.
      ResultConfiguration:
        $ref: '#/definitions/ResultConfiguration'
        description: 'Specifies information about where and how to save the results of the query execution. If the query runs in a workgroup, then workgroup''s settings may override query settings. This affects the query results location. The workgroup settings override is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.'
      WorkGroup:
        $ref: '#/definitions/WorkGroupName'
        description: The name of the workgroup in which the query is being started.
    required:
      - QueryString
    type: object
  StartQueryExecutionOutput:
    properties:
      QueryExecutionId:
        $ref: '#/definitions/QueryExecutionId'
        description: The unique ID of the query that ran as a result of this request.
    type: object
  StatementType:
    enum:
      - DDL
      - DML
      - UTILITY
    type: string
  StopQueryExecutionInput:
    properties:
      QueryExecutionId:
        $ref: '#/definitions/QueryExecutionId'
        description: The unique ID of the query execution to stop.
    required:
      - QueryExecutionId
    type: object
  StopQueryExecutionOutput:
    properties: {}
    type: object
  String:
    type: string
  Tag:
    description: 'A tag that you can add to a resource. A tag is a label that you assign to an AWS Athena resource (a workgroup). Each tag consists of a key and an optional value, both of which you define. Tags enable you to categorize workgroups in Athena, for example, by purpose, owner, or environment. Use a consistent set of tag keys to make it easier to search and filter workgroups in your account. The maximum tag key length is 128 Unicode characters in UTF-8. The maximum tag value length is 256 Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys and values are case-sensitive. Tag keys must be unique per resource. '
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: 'A tag key. The tag key length is from 1 to 128 Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys are case-sensitive and must be unique per resource. '
      Value:
        $ref: '#/definitions/TagValue'
        description: 'A tag value. The tag value length is from 0 to 256 Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag values are case-sensitive. '
    type: object
  TagKey:
    maxLength: 128
    minLength: 1
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    type: array
  TagList:
    items:
      $ref: '#/definitions/Tag'
    type: array
  TagResourceInput:
    properties:
      ResourceARN:
        $ref: '#/definitions/AmazonResourceName'
        description: Requests that one or more tags are added to the resource (such as a workgroup) for the specified ARN.
      Tags:
        $ref: '#/definitions/TagList'
        description: 'One or more tags, separated by commas, to be added to the resource, such as a workgroup.'
    required:
      - ResourceARN
      - Tags
    type: object
  TagResourceOutput:
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    minLength: 0
    type: string
  Token:
    maxLength: 1024
    minLength: 1
    type: string
  TooManyRequestsException: {}
  UnprocessedNamedQueryId:
    description: Information about a named query ID that could not be processed.
    properties:
      ErrorCode:
        $ref: '#/definitions/ErrorCode'
        description: 'The error code returned when the processing request for the named query failed, if applicable.'
      ErrorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: 'The error message returned when the processing request for the named query failed, if applicable.'
      NamedQueryId:
        $ref: '#/definitions/NamedQueryId'
        description: The unique identifier of the named query.
    type: object
  UnprocessedNamedQueryIdList:
    items:
      $ref: '#/definitions/UnprocessedNamedQueryId'
    type: array
  UnprocessedQueryExecutionId:
    description: Describes a query execution that failed to process.
    properties:
      ErrorCode:
        $ref: '#/definitions/ErrorCode'
        description: 'The error code returned when the query execution failed to process, if applicable.'
      ErrorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: 'The error message returned when the query execution failed to process, if applicable.'
      QueryExecutionId:
        $ref: '#/definitions/QueryExecutionId'
        description: The unique identifier of the query execution.
    type: object
  UnprocessedQueryExecutionIdList:
    items:
      $ref: '#/definitions/UnprocessedQueryExecutionId'
    type: array
  UntagResourceInput:
    properties:
      ResourceARN:
        $ref: '#/definitions/AmazonResourceName'
        description: Removes one or more tags from the workgroup resource for the specified ARN.
      TagKeys:
        $ref: '#/definitions/TagKeyList'
        description: Removes the tags associated with one or more tag keys from the workgroup resource.
    required:
      - ResourceARN
      - TagKeys
    type: object
  UntagResourceOutput:
    properties: {}
    type: object
  UpdateWorkGroupInput:
    properties:
      ConfigurationUpdates:
        $ref: '#/definitions/WorkGroupConfigurationUpdates'
        description: The workgroup configuration that will be updated for the given workgroup.
      Description:
        $ref: '#/definitions/WorkGroupDescriptionString'
        description: The workgroup description.
      State:
        $ref: '#/definitions/WorkGroupState'
        description: The workgroup state that will be updated for the given workgroup.
      WorkGroup:
        $ref: '#/definitions/WorkGroupName'
        description: The specified workgroup that will be updated.
    required:
      - WorkGroup
    type: object
  UpdateWorkGroupOutput:
    properties: {}
    type: object
  WorkGroup:
    description: 'A workgroup, which contains a name, description, creation time, state, and other configuration, listed under <a>WorkGroup$Configuration</a>. Each workgroup enables you to isolate queries for you or your group of users from other queries in the same account, to configure the query results location and the encryption configuration (known as workgroup settings), to enable sending query metrics to Amazon CloudWatch, and to establish per-query data usage control limits for all queries in a workgroup. The workgroup settings override is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.'
    properties:
      Configuration:
        $ref: '#/definitions/WorkGroupConfiguration'
        description: 'The configuration of the workgroup, which includes the location in Amazon S3 where query results are stored, the encryption configuration, if any, used for query results; whether the Amazon CloudWatch Metrics are enabled for the workgroup; whether workgroup settings override client-side settings; and the data usage limits for the amount of data scanned per query or per workgroup. The workgroup settings override is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.'
      CreationTime:
        $ref: '#/definitions/Date'
        description: The date and time the workgroup was created.
      Description:
        $ref: '#/definitions/WorkGroupDescriptionString'
        description: The workgroup description.
      Name:
        $ref: '#/definitions/WorkGroupName'
        description: The workgroup name.
      State:
        $ref: '#/definitions/WorkGroupState'
        description: 'The state of the workgroup: ENABLED or DISABLED.'
    required:
      - Name
    type: object
  WorkGroupConfiguration:
    description: 'The configuration of the workgroup, which includes the location in Amazon S3 where query results are stored, the encryption option, if any, used for query results, whether the Amazon CloudWatch Metrics are enabled for the workgroup and whether workgroup settings override query settings, and the data usage limits for the amount of data scanned per query or per workgroup. The workgroup settings override is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>. '
    properties:
      BytesScannedCutoffPerQuery:
        $ref: '#/definitions/BytesScannedCutoffValue'
        description: The upper data usage limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan.
      EnforceWorkGroupConfiguration:
        $ref: '#/definitions/BoxedBoolean'
        description: 'If set to "true", the settings for the workgroup override client-side settings. If set to "false", client-side settings are used. For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html">Workgroup Settings Override Client-Side Settings</a>.'
      PublishCloudWatchMetricsEnabled:
        $ref: '#/definitions/BoxedBoolean'
        description: Indicates that the Amazon CloudWatch metrics are enabled for the workgroup.
      RequesterPaysEnabled:
        $ref: '#/definitions/BoxedBoolean'
        description: 'If set to <code>true</code>, allows members assigned to a workgroup to reference Amazon S3 Requester Pays buckets in queries. If set to <code>false</code>, workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is <code>false</code>. For more information about Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html">Requester Pays Buckets</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
      ResultConfiguration:
        $ref: '#/definitions/ResultConfiguration'
        description: 'The configuration for the workgroup, which includes the location in Amazon S3 where query results are stored and the encryption option, if any, used for query results. To run the query, you must specify the query results location using one of the ways: either in the workgroup using this setting, or for individual queries (client-side), using <a>ResultConfiguration$OutputLocation</a>. If none of them is set, Athena issues an error that no output location is provided. For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/querying.html">Query Results</a>.'
    type: object
  WorkGroupConfigurationUpdates:
    description: 'The configuration information that will be updated for this workgroup, which includes the location in Amazon S3 where query results are stored, the encryption option, if any, used for query results, whether the Amazon CloudWatch Metrics are enabled for the workgroup, whether the workgroup settings override the client-side settings, and the data usage limit for the amount of bytes scanned per query, if it is specified.'
    properties:
      BytesScannedCutoffPerQuery:
        $ref: '#/definitions/BytesScannedCutoffValue'
        description: The upper limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan.
      EnforceWorkGroupConfiguration:
        $ref: '#/definitions/BoxedBoolean'
        description: 'If set to "true", the settings for the workgroup override client-side settings. If set to "false" client-side settings are used. For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html">Workgroup Settings Override Client-Side Settings</a>.'
      PublishCloudWatchMetricsEnabled:
        $ref: '#/definitions/BoxedBoolean'
        description: Indicates whether this workgroup enables publishing metrics to Amazon CloudWatch.
      RemoveBytesScannedCutoffPerQuery:
        $ref: '#/definitions/BoxedBoolean'
        description: 'Indicates that the data usage control limit per query is removed. <a>WorkGroupConfiguration$BytesScannedCutoffPerQuery</a> '
      RequesterPaysEnabled:
        $ref: '#/definitions/BoxedBoolean'
        description: 'If set to <code>true</code>, allows members assigned to a workgroup to specify Amazon S3 Requester Pays buckets in queries. If set to <code>false</code>, workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is <code>false</code>. For more information about Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html">Requester Pays Buckets</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
      ResultConfigurationUpdates:
        $ref: '#/definitions/ResultConfigurationUpdates'
        description: The result configuration information about the queries in this workgroup that will be updated. Includes the updated results location and an updated option for encrypting query results.
    type: object
  WorkGroupDescriptionString:
    maxLength: 1024
    minLength: 0
    type: string
  WorkGroupName:
    pattern: '[a-zA-z0-9._-]{1,128}'
    type: string
  WorkGroupState:
    enum:
      - ENABLED
      - DISABLED
    type: string
  WorkGroupSummary:
    description: 'The summary information for the workgroup, which includes its name, state, description, and the date and time it was created.'
    properties:
      CreationTime:
        $ref: '#/definitions/Date'
        description: The workgroup creation date and time.
      Description:
        $ref: '#/definitions/WorkGroupDescriptionString'
        description: The workgroup description.
      Name:
        $ref: '#/definitions/WorkGroupName'
        description: The name of the workgroup.
      State:
        $ref: '#/definitions/WorkGroupState'
        description: The state of the workgroup.
    type: object
  WorkGroupsList:
    items:
      $ref: '#/definitions/WorkGroupSummary'
    maxItems: 50
    minItems: 0
    type: array
  datumList:
    items:
      $ref: '#/definitions/Datum'
    type: array
  datumString:
    type: string
x-servers:
  - description: The Amazon Athena multi-region endpoint
    url: 'http://athena.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The Amazon Athena multi-region endpoint
    url: 'https://athena.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The Amazon Athena endpoint for China (Beijing) and China (Ningxia)
    url: 'http://athena.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
  - description: The Amazon Athena endpoint for China (Beijing) and China (Ningxia)
    url: 'https://athena.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
