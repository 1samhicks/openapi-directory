swagger: '2.0'
schemes:
  - https
  - http
host: managedblockchain.amazonaws.com
basePath: /
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: '<p/> <p>Amazon Managed Blockchain is a fully managed service for creating and managing blockchain networks using open source frameworks. Blockchain allows you to build applications where multiple parties can securely and transparently run transactions and share data without the need for a trusted, central authority. Currently, Managed Blockchain supports the Hyperledger Fabric open source framework. </p>'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon Managed Blockchain
  version: '2018-09-24'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/managedblockchain-2018-09-24.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: managedblockchain
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/managedblockchain/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /invitations:
    get:
      description: Returns a listing of all invitations made on the specified network.
      operationId: ListInvitations
      parameters:
        - description: The maximum number of invitations to return.
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: The pagination token that indicates the next set of results to retrieve.
          in: query
          maxLength: 128
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListInvitationsOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/invitations/{invitationId}':
    delete:
      description: Rejects an invitation to join a network. This action can be called by a principal in an AWS account that has received an invitation to create a member and join a network.
      operationId: RejectInvitation
      parameters:
        - description: The unique identifier of the invitation to reject.
          in: path
          maxLength: 32
          minLength: 1
          name: invitationId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RejectInvitationOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: IllegalActionException
          schema:
            $ref: '#/definitions/IllegalActionException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /networks:
    get:
      description: Returns information about the networks in which the current AWS account has members.
      operationId: ListNetworks
      parameters:
        - description: The name of the network.
          in: query
          name: name
          required: false
          type: string
        - description: 'An optional framework specifier. If provided, only networks of this framework type are listed.'
          enum:
            - HYPERLEDGER_FABRIC
          in: query
          name: framework
          required: false
          type: string
        - description: 'An optional status specifier. If provided, only networks currently in this status are listed.'
          enum:
            - CREATING
            - AVAILABLE
            - CREATE_FAILED
            - DELETING
            - DELETED
          in: query
          name: status
          required: false
          type: string
        - description: The maximum number of networks to list.
          in: query
          maximum: 10
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: The pagination token that indicates the next set of results to retrieve.
          in: query
          maxLength: 128
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListNetworksOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a new blockchain network using Amazon Managed Blockchain.
      operationId: CreateNetwork
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientRequestToken:
                description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time. This identifier is required only if you make a service request directly using an HTTP client. It is generated automatically if you use an AWS SDK or the AWS CLI.'
                maxLength: 64
                minLength: 1
                type: string
              Description:
                description: An optional description for the network.
                maxLength: 128
                type: string
              Framework:
                description: The blockchain framework that the network uses.
                enum:
                  - HYPERLEDGER_FABRIC
                type: string
              FrameworkConfiguration:
                description: ' Configuration properties relevant to the network for the blockchain framework that the network uses. '
                properties:
                  Fabric:
                    $ref: '#/definitions/NetworkFabricConfiguration'
                    description: ' Hyperledger Fabric configuration properties for a Managed Blockchain network that uses Hyperledger Fabric. '
                type: object
              FrameworkVersion:
                description: The version of the blockchain framework that the network uses.
                maxLength: 8
                minLength: 1
                type: string
              MemberConfiguration:
                description: Configuration properties of the member.
                properties:
                  Description:
                    $ref: '#/definitions/DescriptionString'
                    description: An optional description of the member.
                  FrameworkConfiguration:
                    $ref: '#/definitions/MemberFrameworkConfiguration'
                    description: Configuration properties of the blockchain framework relevant to the member.
                  Name:
                    $ref: '#/definitions/NetworkMemberNameString'
                    description: The name of the member.
                type: object
              Name:
                description: The name of the network.
                maxLength: 64
                minLength: 1
                pattern: .*\S.*
                type: string
              VotingPolicy:
                description: ' The voting rules for the network to decide if a proposal is accepted '
                properties:
                  ApprovalThresholdPolicy:
                    $ref: '#/definitions/ApprovalThresholdPolicy'
                    description: 'Defines the rules for the network for voting on proposals, such as the percentage of <code>YES</code> votes required for the proposal to be approved and the duration of the proposal. The policy applies to all proposals and is specified when the network is created.'
                type: object
            required:
              - ClientRequestToken
              - Name
              - Framework
              - FrameworkVersion
              - VotingPolicy
              - MemberConfiguration
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateNetworkOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
  '/networks/{networkId}':
    get:
      description: Returns detailed information about a network.
      operationId: GetNetwork
      parameters:
        - description: The unique identifier of the network to get information about.
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetNetworkOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/networks/{networkId}/members':
    get:
      description: Returns a listing of the members in a network and properties of their configurations.
      operationId: ListMembers
      parameters:
        - description: The unique identifier of the network for which to list members.
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: The optional name of the member to list.
          in: query
          name: name
          required: false
          type: string
        - description: 'An optional status specifier. If provided, only members currently in this status are listed.'
          enum:
            - CREATING
            - AVAILABLE
            - CREATE_FAILED
            - DELETING
            - DELETED
          in: query
          name: status
          required: false
          type: string
        - description: 'An optional Boolean value. If provided, the request is limited either to members that the current AWS account owns (<code>true</code>) or that other AWS accounts own (<code>false</code>). If omitted, all members are listed.'
          in: query
          name: isOwned
          required: false
          type: boolean
        - description: The maximum number of members to return in the request.
          in: query
          maximum: 20
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: The pagination token that indicates the next set of results to retrieve.
          in: query
          maxLength: 128
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListMembersOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a member within a Managed Blockchain network.
      operationId: CreateMember
      parameters:
        - description: The unique identifier of the network in which the member is created.
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientRequestToken:
                description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time. This identifier is required only if you make a service request directly using an HTTP client. It is generated automatically if you use an AWS SDK or the AWS CLI.'
                maxLength: 64
                minLength: 1
                type: string
              InvitationId:
                description: The unique identifier of the invitation that is sent to the member to join the network.
                maxLength: 32
                minLength: 1
                type: string
              MemberConfiguration:
                description: Configuration properties of the member.
                properties:
                  Description:
                    $ref: '#/definitions/DescriptionString'
                    description: An optional description of the member.
                  FrameworkConfiguration:
                    $ref: '#/definitions/MemberFrameworkConfiguration'
                    description: Configuration properties of the blockchain framework relevant to the member.
                  Name:
                    $ref: '#/definitions/NetworkMemberNameString'
                    description: The name of the member.
                type: object
            required:
              - ClientRequestToken
              - InvitationId
              - MemberConfiguration
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateMemberOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '484':
          description: ResourceNotReadyException
          schema:
            $ref: '#/definitions/ResourceNotReadyException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '487':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
  '/networks/{networkId}/members/{memberId}':
    delete:
      description: 'Deletes a member. Deleting a member removes the member and all associated resources from the network. <code>DeleteMember</code> can only be called for a specified <code>MemberId</code> if the principal performing the action is associated with the AWS account that owns the member. In all other cases, the <code>DeleteMember</code> action is carried out as the result of an approved proposal to remove a member. If <code>MemberId</code> is the last member in a network specified by the last AWS account, the network is deleted also.'
      operationId: DeleteMember
      parameters:
        - description: The unique identifier of the network from which the member is removed.
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: The unique identifier of the member to remove.
          in: path
          maxLength: 32
          minLength: 1
          name: memberId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteMemberOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceNotReadyException
          schema:
            $ref: '#/definitions/ResourceNotReadyException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    get:
      description: Returns detailed information about a member.
      operationId: GetMember
      parameters:
        - description: The unique identifier of the network to which the member belongs.
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: The unique identifier of the member.
          in: path
          maxLength: 32
          minLength: 1
          name: memberId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMemberOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/networks/{networkId}/members/{memberId}/nodes':
    get:
      description: Returns information about the nodes within a network.
      operationId: ListNodes
      parameters:
        - description: The unique identifier of the network for which to list nodes.
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: The unique identifier of the member who owns the nodes to list.
          in: path
          maxLength: 32
          minLength: 1
          name: memberId
          required: true
          type: string
        - description: 'An optional status specifier. If provided, only nodes currently in this status are listed.'
          enum:
            - CREATING
            - AVAILABLE
            - CREATE_FAILED
            - DELETING
            - DELETED
            - FAILED
          in: query
          name: status
          required: false
          type: string
        - description: The maximum number of nodes to list.
          in: query
          maximum: 20
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: The pagination token that indicates the next set of results to retrieve.
          in: query
          maxLength: 128
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListNodesOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a peer node in a member.
      operationId: CreateNode
      parameters:
        - description: The unique identifier of the network in which this node runs.
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: The unique identifier of the member that owns this node.
          in: path
          maxLength: 32
          minLength: 1
          name: memberId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              ClientRequestToken:
                description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time. This identifier is required only if you make a service request directly using an HTTP client. It is generated automatically if you use an AWS SDK or the AWS CLI.'
                maxLength: 64
                minLength: 1
                type: string
              NodeConfiguration:
                description: Configuration properties of a peer node.
                properties:
                  AvailabilityZone:
                    $ref: '#/definitions/AvailabilityZoneString'
                    description: The Availability Zone in which the node exists.
                  InstanceType:
                    $ref: '#/definitions/InstanceTypeString'
                    description: The Amazon Managed Blockchain instance type for the node.
                type: object
            required:
              - ClientRequestToken
              - NodeConfiguration
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateNodeOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '484':
          description: ResourceNotReadyException
          schema:
            $ref: '#/definitions/ResourceNotReadyException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '487':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
  '/networks/{networkId}/members/{memberId}/nodes/{nodeId}':
    delete:
      description: Deletes a peer node from a member that your AWS account owns. All data on the node is lost and cannot be recovered.
      operationId: DeleteNode
      parameters:
        - description: The unique identifier of the network that the node belongs to.
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: The unique identifier of the member that owns this node.
          in: path
          maxLength: 32
          minLength: 1
          name: memberId
          required: true
          type: string
        - description: The unique identifier of the node.
          in: path
          maxLength: 32
          minLength: 1
          name: nodeId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteNodeOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceNotReadyException
          schema:
            $ref: '#/definitions/ResourceNotReadyException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    get:
      description: Returns detailed information about a peer node.
      operationId: GetNode
      parameters:
        - description: The unique identifier of the network to which the node belongs.
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: The unique identifier of the member that owns the node.
          in: path
          maxLength: 32
          minLength: 1
          name: memberId
          required: true
          type: string
        - description: The unique identifier of the node.
          in: path
          maxLength: 32
          minLength: 1
          name: nodeId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetNodeOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/networks/{networkId}/proposals':
    get:
      description: Returns a listing of proposals for the network.
      operationId: ListProposals
      parameters:
        - description: ' The unique identifier of the network. '
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: ' The maximum number of proposals to return. '
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: ' The pagination token that indicates the next set of results to retrieve. '
          in: query
          maxLength: 128
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProposalsOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Creates a proposal for a change to the network that other members of the network can vote on, for example, a proposal to add a new member to the network. Any member can create a proposal.'
      operationId: CreateProposal
      parameters:
        - description: ' The unique identifier of the network for which the proposal is made.'
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Actions:
                description: ' The actions to carry out if a proposal is <code>APPROVED</code>. '
                properties:
                  Invitations:
                    $ref: '#/definitions/InviteActionList'
                    description: ' The actions to perform for an <code>APPROVED</code> proposal to invite an AWS account to create a member and join the network. '
                  Removals:
                    $ref: '#/definitions/RemoveActionList'
                    description: ' The actions to perform for an <code>APPROVED</code> proposal to remove a member from the network, which deletes the member and all associated member resources from the network. '
                type: object
              ClientRequestToken:
                description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time. This identifier is required only if you make a service request directly using an HTTP client. It is generated automatically if you use an AWS SDK or the AWS CLI.'
                maxLength: 64
                minLength: 1
                type: string
              Description:
                description: 'A description for the proposal that is visible to voting members, for example, "Proposal to add Example Corp. as member."'
                maxLength: 128
                type: string
              MemberId:
                description: The unique identifier of the member that is creating the proposal. This identifier is especially useful for identifying the member making the proposal when multiple members exist in a single AWS account.
                maxLength: 32
                minLength: 1
                type: string
            required:
              - ClientRequestToken
              - MemberId
              - Actions
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateProposalOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceNotReadyException
          schema:
            $ref: '#/definitions/ResourceNotReadyException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
  '/networks/{networkId}/proposals/{proposalId}':
    get:
      description: Returns detailed information about a proposal.
      operationId: GetProposal
      parameters:
        - description: The unique identifier of the network for which the proposal is made.
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: The unique identifier of the proposal.
          in: path
          maxLength: 32
          minLength: 1
          name: proposalId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetProposalOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/networks/{networkId}/proposals/{proposalId}/votes':
    get:
      description: 'Returns the listing of votes for a specified proposal, including the value of each vote and the unique identifier of the member that cast the vote.'
      operationId: ListProposalVotes
      parameters:
        - description: ' The unique identifier of the network. '
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: ' The unique identifier of the proposal. '
          in: path
          maxLength: 32
          minLength: 1
          name: proposalId
          required: true
          type: string
        - description: ' The maximum number of votes to return. '
          in: query
          maximum: 100
          minimum: 1
          name: maxResults
          required: false
          type: integer
        - description: ' The pagination token that indicates the next set of results to retrieve. '
          in: query
          maxLength: 128
          name: nextToken
          required: false
          type: string
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProposalVotesOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Casts a vote for a specified <code>ProposalId</code> on behalf of a member. The member to vote as, specified by <code>VoterMemberId</code>, must be in the same AWS account as the principal that calls the action.'
      operationId: VoteOnProposal
      parameters:
        - description: ' The unique identifier of the network. '
          in: path
          maxLength: 32
          minLength: 1
          name: networkId
          required: true
          type: string
        - description: ' The unique identifier of the proposal. '
          in: path
          maxLength: 32
          minLength: 1
          name: proposalId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              Vote:
                description: ' The value of the vote. '
                enum:
                  - 'YES'
                  - 'NO'
                type: string
              VoterMemberId:
                description: 'The unique identifier of the member casting the vote. '
                maxLength: 32
                minLength: 1
                type: string
            required:
              - VoterMemberId
              - Vote
            type: object
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VoteOnProposalOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: IllegalActionException
          schema:
            $ref: '#/definitions/IllegalActionException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: InternalServiceErrorException
          schema:
            $ref: '#/definitions/InternalServiceErrorException'
definitions:
  AccessDeniedException: {}
  ApprovalThresholdPolicy:
    description: A policy type that defines the voting rules for the network. The rules decide if a proposal is approved. Approval may be based on criteria such as the percentage of <code>YES</code> votes and the duration of the proposal. The policy applies to all proposals and is specified when the network is created.
    properties:
      ProposalDurationInHours:
        $ref: '#/definitions/ProposalDurationInt'
        description: 'The duration from the time that a proposal is created until it expires. If members cast neither the required number of <code>YES</code> votes to approve the proposal nor the number of <code>NO</code> votes required to reject it before the duration expires, the proposal is <code>EXPIRED</code> and <code>ProposalActions</code> are not carried out.'
      ThresholdComparator:
        $ref: '#/definitions/ThresholdComparator'
        description: Determines whether the vote percentage must be greater than the <code>ThresholdPercentage</code> or must be greater than or equal to the <code>ThreholdPercentage</code> to be approved.
      ThresholdPercentage:
        $ref: '#/definitions/ThresholdPercentageInt'
        description: 'The percentage of votes among all members that must be <code>YES</code> for a proposal to be approved. For example, a <code>ThresholdPercentage</code> value of <code>50</code> indicates 50%. The <code>ThresholdComparator</code> determines the precise comparison. If a <code>ThresholdPercentage</code> value of <code>50</code> is specified on a network with 10 members, along with a <code>ThresholdComparator</code> value of <code>GREATER_THAN</code>, this indicates that 6 <code>YES</code> votes are required for the proposal to be approved.'
    type: object
  AvailabilityZoneString:
    type: string
  ClientRequestTokenString:
    maxLength: 64
    minLength: 1
    type: string
  CreateMemberInput:
    properties:
      ClientRequestToken:
        $ref: '#/definitions/ClientRequestTokenString'
        description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time. This identifier is required only if you make a service request directly using an HTTP client. It is generated automatically if you use an AWS SDK or the AWS CLI.'
      InvitationId:
        $ref: '#/definitions/ResourceIdString'
        description: The unique identifier of the invitation that is sent to the member to join the network.
      MemberConfiguration:
        $ref: '#/definitions/MemberConfiguration'
        description: Member configuration parameters.
    required:
      - ClientRequestToken
      - InvitationId
      - MemberConfiguration
    type: object
  CreateMemberOutput:
    properties:
      MemberId:
        $ref: '#/definitions/ResourceIdString'
        description: The unique identifier of the member.
    type: object
  CreateNetworkInput:
    properties:
      ClientRequestToken:
        $ref: '#/definitions/ClientRequestTokenString'
        description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time. This identifier is required only if you make a service request directly using an HTTP client. It is generated automatically if you use an AWS SDK or the AWS CLI.'
      Description:
        $ref: '#/definitions/DescriptionString'
        description: An optional description for the network.
      Framework:
        $ref: '#/definitions/Framework'
        description: The blockchain framework that the network uses.
      FrameworkConfiguration:
        $ref: '#/definitions/NetworkFrameworkConfiguration'
        description: ' Configuration properties of the blockchain framework relevant to the network configuration. '
      FrameworkVersion:
        $ref: '#/definitions/FrameworkVersionString'
        description: The version of the blockchain framework that the network uses.
      MemberConfiguration:
        $ref: '#/definitions/MemberConfiguration'
        description: Configuration properties for the first member within the network.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the network.
      VotingPolicy:
        $ref: '#/definitions/VotingPolicy'
        description: ' The voting rules used by the network to determine if a proposal is approved. '
    required:
      - ClientRequestToken
      - Name
      - Framework
      - FrameworkVersion
      - VotingPolicy
      - MemberConfiguration
    type: object
  CreateNetworkOutput:
    properties:
      MemberId:
        $ref: '#/definitions/ResourceIdString'
        description: The unique identifier for the first member within the network.
      NetworkId:
        $ref: '#/definitions/ResourceIdString'
        description: The unique identifier for the network.
    type: object
  CreateNodeInput:
    properties:
      ClientRequestToken:
        $ref: '#/definitions/ClientRequestTokenString'
        description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time. This identifier is required only if you make a service request directly using an HTTP client. It is generated automatically if you use an AWS SDK or the AWS CLI.'
      NodeConfiguration:
        $ref: '#/definitions/NodeConfiguration'
        description: The properties of a node configuration.
    required:
      - ClientRequestToken
      - NodeConfiguration
    type: object
  CreateNodeOutput:
    properties:
      NodeId:
        $ref: '#/definitions/ResourceIdString'
        description: The unique identifier of the node.
    type: object
  CreateProposalInput:
    properties:
      Actions:
        $ref: '#/definitions/ProposalActions'
        description: 'The type of actions proposed, such as inviting a member or removing a member. The types of <code>Actions</code> in a proposal are mutually exclusive. For example, a proposal with <code>Invitations</code> actions cannot also contain <code>Removals</code> actions.'
      ClientRequestToken:
        $ref: '#/definitions/ClientRequestTokenString'
        description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time. This identifier is required only if you make a service request directly using an HTTP client. It is generated automatically if you use an AWS SDK or the AWS CLI.'
      Description:
        $ref: '#/definitions/DescriptionString'
        description: 'A description for the proposal that is visible to voting members, for example, "Proposal to add Example Corp. as member."'
      MemberId:
        $ref: '#/definitions/ResourceIdString'
        description: The unique identifier of the member that is creating the proposal. This identifier is especially useful for identifying the member making the proposal when multiple members exist in a single AWS account.
    required:
      - ClientRequestToken
      - MemberId
      - Actions
    type: object
  CreateProposalOutput:
    properties:
      ProposalId:
        $ref: '#/definitions/ResourceIdString'
        description: The unique identifier of the proposal.
    type: object
  DeleteMemberInput:
    properties: {}
    type: object
  DeleteMemberOutput:
    properties: {}
    type: object
  DeleteNodeInput:
    properties: {}
    type: object
  DeleteNodeOutput:
    properties: {}
    type: object
  DescriptionString:
    maxLength: 128
    type: string
  Edition:
    enum:
      - STARTER
      - STANDARD
    type: string
  Framework:
    enum:
      - HYPERLEDGER_FABRIC
    type: string
  FrameworkVersionString:
    maxLength: 8
    minLength: 1
    type: string
  GetMemberInput:
    properties: {}
    type: object
  GetMemberOutput:
    properties:
      Member:
        $ref: '#/definitions/Member'
        description: The properties of a member.
    type: object
  GetNetworkInput:
    properties: {}
    type: object
  GetNetworkOutput:
    properties:
      Network:
        $ref: '#/definitions/Network'
        description: An object containing network configuration parameters.
    type: object
  GetNodeInput:
    properties: {}
    type: object
  GetNodeOutput:
    properties:
      Node:
        $ref: '#/definitions/Node'
        description: Properties of the node configuration.
    type: object
  GetProposalInput:
    properties: {}
    type: object
  GetProposalOutput:
    properties:
      Proposal:
        $ref: '#/definitions/Proposal'
        description: Information about a proposal.
    type: object
  IllegalActionException: {}
  InstanceTypeString:
    type: string
  InternalServiceErrorException: {}
  InvalidRequestException: {}
  Invitation:
    description: An invitation to an AWS account to create a member and join the network.
    properties:
      CreationDate:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the invitation was created.
      ExpirationDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time that the invitation expires. This is the <code>CreationDate</code> plus the <code>ProposalDurationInHours</code> that is specified in the <code>ProposalThresholdPolicy</code>. After this date and time, the invitee can no longer create a member and join the network using this <code>InvitationId</code>.'
      InvitationId:
        $ref: '#/definitions/ResourceIdString'
        description: The unique identifier for the invitation.
      NetworkSummary:
        $ref: '#/definitions/NetworkSummary'
      Status:
        $ref: '#/definitions/InvitationStatus'
        description: '<p>The status of the invitation:</p> <ul> <li> <p> <code>PENDING</code> - The invitee has not created a member to join the network, and the invitation has not yet expired.</p> </li> <li> <p> <code>ACCEPTING</code> - The invitee has begun creating a member, and creation has not yet completed.</p> </li> <li> <p> <code>ACCEPTED</code> - The invitee created a member and joined the network using the <code>InvitationID</code>.</p> </li> <li> <p> <code>REJECTED</code> - The invitee rejected the invitation.</p> </li> <li> <p> <code>EXPIRED</code> - The invitee neither created a member nor rejected the invitation before the <code>ExpirationDate</code>.</p> </li> </ul>'
    type: object
  InvitationList:
    items:
      $ref: '#/definitions/Invitation'
    type: array
  InvitationStatus:
    enum:
      - PENDING
      - ACCEPTED
      - ACCEPTING
      - REJECTED
      - EXPIRED
    type: string
  InviteAction:
    description: An action to invite a specific AWS account to create a member and join the network. The <code>InviteAction</code> is carried out when a <code>Proposal</code> is <code>APPROVED</code>.
    properties:
      Principal:
        $ref: '#/definitions/PrincipalString'
        description: The AWS account ID to invite.
    required:
      - Principal
    type: object
  InviteActionList:
    items:
      $ref: '#/definitions/InviteAction'
    type: array
  IsOwned:
    type: boolean
  ListInvitationsInput:
    properties: {}
    type: object
  ListInvitationsOutput:
    properties:
      Invitations:
        $ref: '#/definitions/InvitationList'
        description: The invitations for the network.
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: The pagination token that indicates the next set of results to retrieve.
    type: object
  ListMembersInput:
    properties: {}
    type: object
  ListMembersOutput:
    properties:
      Members:
        $ref: '#/definitions/MemberSummaryList'
        description: An array of <code>MemberSummary</code> objects. Each object contains details about a network member.
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: The pagination token that indicates the next set of results to retrieve.
    type: object
  ListNetworksInput:
    properties: {}
    type: object
  ListNetworksOutput:
    properties:
      Networks:
        $ref: '#/definitions/NetworkSummaryList'
        description: An array of <code>NetworkSummary</code> objects that contain configuration properties for each network.
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: The pagination token that indicates the next set of results to retrieve.
    type: object
  ListNodesInput:
    properties: {}
    type: object
  ListNodesOutput:
    properties:
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: The pagination token that indicates the next set of results to retrieve.
      Nodes:
        $ref: '#/definitions/NodeSummaryList'
        description: An array of <code>NodeSummary</code> objects that contain configuration properties for each node.
    type: object
  ListProposalVotesInput:
    properties: {}
    type: object
  ListProposalVotesOutput:
    properties:
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: ' The pagination token that indicates the next set of results to retrieve. '
      ProposalVotes:
        $ref: '#/definitions/ProposalVoteList'
        description: ' The listing of votes. '
    type: object
  ListProposalsInput:
    properties: {}
    type: object
  ListProposalsOutput:
    properties:
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: The pagination token that indicates the next set of results to retrieve.
      Proposals:
        $ref: '#/definitions/ProposalSummaryList'
        description: The summary of each proposal made on the network.
    type: object
  Member:
    description: Member configuration properties.
    properties:
      CreationDate:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the member was created.
      Description:
        $ref: '#/definitions/DescriptionString'
        description: An optional description for the member.
      FrameworkAttributes:
        $ref: '#/definitions/MemberFrameworkAttributes'
        description: Attributes relevant to a member for the blockchain framework that the Managed Blockchain network uses.
      Id:
        $ref: '#/definitions/ResourceIdString'
        description: The unique identifier of the member.
      Name:
        $ref: '#/definitions/NetworkMemberNameString'
        description: The name of the member.
      NetworkId:
        $ref: '#/definitions/ResourceIdString'
        description: The unique identifier of the network to which the member belongs.
      Status:
        $ref: '#/definitions/MemberStatus'
        description: '<p>The status of a member.</p> <ul> <li> <p> <code>CREATING</code> - The AWS account is in the process of creating a member.</p> </li> <li> <p> <code>AVAILABLE</code> - The member has been created and can participate in the network.</p> </li> <li> <p> <code>CREATE_FAILED</code> - The AWS account attempted to create a member and creation failed.</p> </li> <li> <p> <code>DELETING</code> - The member and all associated resources are in the process of being deleted. Either the AWS account that owns the member deleted it, or the member is being deleted as the result of an <code>APPROVED</code> <code>PROPOSAL</code> to remove the member.</p> </li> <li> <p> <code>DELETED</code> - The member can no longer participate on the network and all associated resources are deleted. Either the AWS account that owns the member deleted it, or the member is being deleted as the result of an <code>APPROVED</code> <code>PROPOSAL</code> to remove the member.</p> </li> </ul>'
    type: object
  MemberConfiguration:
    description: Configuration properties of the member.
    properties:
      Description:
        $ref: '#/definitions/DescriptionString'
        description: An optional description of the member.
      FrameworkConfiguration:
        $ref: '#/definitions/MemberFrameworkConfiguration'
        description: Configuration properties of the blockchain framework relevant to the member.
      Name:
        $ref: '#/definitions/NetworkMemberNameString'
        description: The name of the member.
    required:
      - Name
      - FrameworkConfiguration
    type: object
  MemberFabricAttributes:
    description: Attributes of Hyperledger Fabric for a member in a Managed Blockchain network using the Hyperledger Fabric framework.
    properties:
      AdminUsername:
        $ref: '#/definitions/UsernameString'
        description: The user name for the initial administrator user for the member.
      CaEndpoint:
        $ref: '#/definitions/String'
        description: The endpoint used to access the member's certificate authority.
    type: object
  MemberFabricConfiguration:
    description: Configuration properties for Hyperledger Fabric for a member in a Managed Blockchain network using the Hyperledger Fabric framework.
    properties:
      AdminPassword:
        $ref: '#/definitions/PasswordString'
        description: 'The password for the member''s initial administrative user. The <code>AdminPassword</code> must be at least eight characters long and no more than 32 characters. It must contain at least one uppercase letter, one lowercase letter, and one digit. It cannot have a single quote(‘), double quote(“), forward slash(/), backward slash(\), @, or a space.'
      AdminUsername:
        $ref: '#/definitions/UsernameString'
        description: The user name for the member's initial administrative user.
    required:
      - AdminUsername
      - AdminPassword
    type: object
  MemberFrameworkAttributes:
    description: Attributes relevant to a member for the blockchain framework that the Managed Blockchain network uses.
    properties:
      Fabric:
        $ref: '#/definitions/MemberFabricAttributes'
        description: Attributes of Hyperledger Fabric relevant to a member on a Managed Blockchain network that uses Hyperledger Fabric.
    type: object
  MemberFrameworkConfiguration:
    description: Configuration properties relevant to a member for the blockchain framework that the Managed Blockchain network uses.
    properties:
      Fabric:
        $ref: '#/definitions/MemberFabricConfiguration'
        description: Attributes of Hyperledger Fabric for a member on a Managed Blockchain network that uses Hyperledger Fabric.
    type: object
  MemberListMaxResults:
    maximum: 20
    minimum: 1
    type: integer
  MemberStatus:
    enum:
      - CREATING
      - AVAILABLE
      - CREATE_FAILED
      - DELETING
      - DELETED
    type: string
  MemberSummary:
    description: A summary of configuration properties for a member.
    properties:
      CreationDate:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the member was created.
      Description:
        $ref: '#/definitions/DescriptionString'
        description: An optional description of the member.
      Id:
        $ref: '#/definitions/ResourceIdString'
        description: The unique identifier of the member.
      IsOwned:
        $ref: '#/definitions/IsOwned'
        description: An indicator of whether the member is owned by your AWS account or a different AWS account.
      Name:
        $ref: '#/definitions/NetworkMemberNameString'
        description: The name of the member.
      Status:
        $ref: '#/definitions/MemberStatus'
        description: '<p>The status of the member.</p> <ul> <li> <p> <code>CREATING</code> - The AWS account is in the process of creating a member.</p> </li> <li> <p> <code>AVAILABLE</code> - The member has been created and can participate in the network.</p> </li> <li> <p> <code>CREATE_FAILED</code> - The AWS account attempted to create a member and creation failed.</p> </li> <li> <p> <code>DELETING</code> - The member and all associated resources are in the process of being deleted. Either the AWS account that owns the member deleted it, or the member is being deleted as the result of an <code>APPROVED</code> <code>PROPOSAL</code> to remove the member.</p> </li> <li> <p> <code>DELETED</code> - The member can no longer participate on the network and all associated resources are deleted. Either the AWS account that owns the member deleted it, or the member is being deleted as the result of an <code>APPROVED</code> <code>PROPOSAL</code> to remove the member.</p> </li> </ul>'
    type: object
  MemberSummaryList:
    items:
      $ref: '#/definitions/MemberSummary'
    type: array
  NameString:
    maxLength: 64
    minLength: 1
    pattern: .*\S.*
    type: string
  Network:
    description: Network configuration properties.
    properties:
      CreationDate:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the network was created.
      Description:
        $ref: '#/definitions/DescriptionString'
        description: Attributes of the blockchain framework for the network.
      Framework:
        $ref: '#/definitions/Framework'
        description: The blockchain framework that the network uses.
      FrameworkAttributes:
        $ref: '#/definitions/NetworkFrameworkAttributes'
        description: Attributes of the blockchain framework that the network uses.
      FrameworkVersion:
        $ref: '#/definitions/FrameworkVersionString'
        description: The version of the blockchain framework that the network uses.
      Id:
        $ref: '#/definitions/ResourceIdString'
        description: The unique identifier of the network.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the network.
      Status:
        $ref: '#/definitions/NetworkStatus'
        description: The current status of the network.
      VotingPolicy:
        $ref: '#/definitions/VotingPolicy'
        description: The voting rules for the network to decide if a proposal is accepted.
      VpcEndpointServiceName:
        $ref: '#/definitions/String'
        description: The VPC endpoint service name of the VPC endpoint service of the network. Members use the VPC endpoint service name to create a VPC endpoint to access network resources.
    type: object
  NetworkFabricAttributes:
    description: Attributes of Hyperledger Fabric for a network.
    properties:
      Edition:
        $ref: '#/definitions/Edition'
        description: 'The edition of Amazon Managed Blockchain that Hyperledger Fabric uses. For more information, see <a href="https://aws.amazon.com/managed-blockchain/pricing/">Amazon Managed Blockchain Pricing</a>.'
      OrderingServiceEndpoint:
        $ref: '#/definitions/String'
        description: The endpoint of the ordering service for the network.
    type: object
  NetworkFabricConfiguration:
    description: Hyperledger Fabric configuration properties for the network.
    properties:
      Edition:
        $ref: '#/definitions/Edition'
        description: 'The edition of Amazon Managed Blockchain that the network uses. For more information, see <a href="https://aws.amazon.com/managed-blockchain/pricing/">Amazon Managed Blockchain Pricing</a>.'
    required:
      - Edition
    type: object
  NetworkFrameworkAttributes:
    description: Attributes relevant to the network for the blockchain framework that the network uses.
    properties:
      Fabric:
        $ref: '#/definitions/NetworkFabricAttributes'
        description: Attributes of Hyperledger Fabric for a Managed Blockchain network that uses Hyperledger Fabric.
    type: object
  NetworkFrameworkConfiguration:
    description: ' Configuration properties relevant to the network for the blockchain framework that the network uses. '
    properties:
      Fabric:
        $ref: '#/definitions/NetworkFabricConfiguration'
        description: ' Hyperledger Fabric configuration properties for a Managed Blockchain network that uses Hyperledger Fabric. '
    type: object
  NetworkListMaxResults:
    maximum: 10
    minimum: 1
    type: integer
  NetworkMemberNameString:
    maxLength: 64
    minLength: 1
    pattern: '^(?!-)^[^0-9](?!.*--)[A-Za-z0-9-]+[^- ]$'
    type: string
  NetworkStatus:
    enum:
      - CREATING
      - AVAILABLE
      - CREATE_FAILED
      - DELETING
      - DELETED
    type: string
  NetworkSummary:
    description: A summary of network configuration properties.
    properties:
      CreationDate:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the network was created.
      Description:
        $ref: '#/definitions/DescriptionString'
        description: An optional description of the network.
      Framework:
        $ref: '#/definitions/Framework'
        description: The blockchain framework that the network uses.
      FrameworkVersion:
        $ref: '#/definitions/FrameworkVersionString'
        description: The version of the blockchain framework that the network uses.
      Id:
        $ref: '#/definitions/ResourceIdString'
        description: The unique identifier of the network.
      Name:
        $ref: '#/definitions/NameString'
        description: The name of the network.
      Status:
        $ref: '#/definitions/NetworkStatus'
        description: The current status of the network.
    type: object
  NetworkSummaryList:
    items:
      $ref: '#/definitions/NetworkSummary'
    type: array
  Node:
    description: Configuration properties of a peer node.
    properties:
      AvailabilityZone:
        $ref: '#/definitions/AvailabilityZoneString'
        description: The Availability Zone in which the node exists.
      CreationDate:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the node was created.
      FrameworkAttributes:
        $ref: '#/definitions/NodeFrameworkAttributes'
        description: Attributes of the blockchain framework being used.
      Id:
        $ref: '#/definitions/ResourceIdString'
        description: The unique identifier of the node.
      InstanceType:
        $ref: '#/definitions/InstanceTypeString'
        description: The instance type of the node.
      MemberId:
        $ref: '#/definitions/ResourceIdString'
        description: The unique identifier of the member to which the node belongs.
      NetworkId:
        $ref: '#/definitions/ResourceIdString'
        description: The unique identifier of the network that the node is in.
      Status:
        $ref: '#/definitions/NodeStatus'
        description: The status of the node.
    type: object
  NodeConfiguration:
    description: Configuration properties of a peer node.
    properties:
      AvailabilityZone:
        $ref: '#/definitions/AvailabilityZoneString'
        description: The Availability Zone in which the node exists.
      InstanceType:
        $ref: '#/definitions/InstanceTypeString'
        description: The Amazon Managed Blockchain instance type for the node.
    required:
      - InstanceType
      - AvailabilityZone
    type: object
  NodeFabricAttributes:
    description: Attributes of Hyperledger Fabric for a peer node on a Managed Blockchain network that uses Hyperledger Fabric.
    properties:
      PeerEndpoint:
        $ref: '#/definitions/String'
        description: The endpoint that identifies the peer node for all services except peer channel-based event services.
      PeerEventEndpoint:
        $ref: '#/definitions/String'
        description: The endpoint that identifies the peer node for peer channel-based event services.
    type: object
  NodeFrameworkAttributes:
    description: Attributes relevant to a peer node on a Managed Blockchain network for the blockchain framework that the network uses.
    properties:
      Fabric:
        $ref: '#/definitions/NodeFabricAttributes'
        description: Attributes of Hyperledger Fabric for a peer node on a Managed Blockchain network that uses Hyperledger Fabric.
    type: object
  NodeListMaxResults:
    maximum: 20
    minimum: 1
    type: integer
  NodeStatus:
    enum:
      - CREATING
      - AVAILABLE
      - CREATE_FAILED
      - DELETING
      - DELETED
      - FAILED
    type: string
  NodeSummary:
    description: A summary of configuration properties for a peer node.
    properties:
      AvailabilityZone:
        $ref: '#/definitions/AvailabilityZoneString'
        description: The Availability Zone in which the node exists.
      CreationDate:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the node was created.
      Id:
        $ref: '#/definitions/ResourceIdString'
        description: The unique identifier of the node.
      InstanceType:
        $ref: '#/definitions/InstanceTypeString'
        description: The EC2 instance type for the node.
      Status:
        $ref: '#/definitions/NodeStatus'
        description: The status of the node.
    type: object
  NodeSummaryList:
    items:
      $ref: '#/definitions/NodeSummary'
    type: array
  PaginationToken:
    maxLength: 128
    type: string
  PasswordString:
    format: password
    maxLength: 32
    minLength: 8
    pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?!.*[@''\\"/])[a-zA-Z0-9\S]*$'
    type: string
  PrincipalString:
    type: string
  Proposal:
    description: Properties of a proposal on a Managed Blockchain network.
    properties:
      Actions:
        $ref: '#/definitions/ProposalActions'
        description: The actions to perform on the network if the proposal is <code>APPROVED</code>.
      CreationDate:
        $ref: '#/definitions/Timestamp'
        description: ' The date and time that the proposal was created. '
      Description:
        $ref: '#/definitions/DescriptionString'
        description: The description of the proposal.
      ExpirationDate:
        $ref: '#/definitions/Timestamp'
        description: ' The date and time that the proposal expires. This is the <code>CreationDate</code> plus the <code>ProposalDurationInHours</code> that is specified in the <code>ProposalThresholdPolicy</code>. After this date and time, if members have not cast enough votes to determine the outcome according to the voting policy, the proposal is <code>EXPIRED</code> and <code>Actions</code> are not carried out. '
      NetworkId:
        $ref: '#/definitions/ResourceIdString'
        description: The unique identifier of the network for which the proposal is made.
      NoVoteCount:
        $ref: '#/definitions/VoteCount'
        description: ' The current total of <code>NO</code> votes cast on the proposal by members. '
      OutstandingVoteCount:
        $ref: '#/definitions/VoteCount'
        description: ' The number of votes remaining to be cast on the proposal by members. In other words, the number of members minus the sum of <code>YES</code> votes and <code>NO</code> votes. '
      ProposalId:
        $ref: '#/definitions/ResourceIdString'
        description: The unique identifier of the proposal.
      ProposedByMemberId:
        $ref: '#/definitions/ResourceIdString'
        description: The unique identifier of the member that created the proposal.
      ProposedByMemberName:
        $ref: '#/definitions/NetworkMemberNameString'
        description: The name of the member that created the proposal.
      Status:
        $ref: '#/definitions/ProposalStatus'
        description: '<p>The status of the proposal. Values are as follows:</p> <ul> <li> <p> <code>IN_PROGRESS</code> - The proposal is active and open for member voting.</p> </li> <li> <p> <code>APPROVED</code> - The proposal was approved with sufficient <code>YES</code> votes among members according to the <code>VotingPolicy</code> specified for the <code>Network</code>. The specified proposal actions are carried out.</p> </li> <li> <p> <code>REJECTED</code> - The proposal was rejected with insufficient <code>YES</code> votes among members according to the <code>VotingPolicy</code> specified for the <code>Network</code>. The specified <code>ProposalActions</code> are not carried out.</p> </li> <li> <p> <code>EXPIRED</code> - Members did not cast the number of votes required to determine the proposal outcome before the proposal expired. The specified <code>ProposalActions</code> are not carried out.</p> </li> <li> <p> <code>ACTION_FAILED</code> - One or more of the specified <code>ProposalActions</code> in a proposal that was approved could not be completed because of an error.</p> </li> </ul>'
      YesVoteCount:
        $ref: '#/definitions/VoteCount'
        description: ' The current total of <code>YES</code> votes cast on the proposal by members. '
    type: object
  ProposalActions:
    description: ' The actions to carry out if a proposal is <code>APPROVED</code>. '
    properties:
      Invitations:
        $ref: '#/definitions/InviteActionList'
        description: ' The actions to perform for an <code>APPROVED</code> proposal to invite an AWS account to create a member and join the network. '
      Removals:
        $ref: '#/definitions/RemoveActionList'
        description: ' The actions to perform for an <code>APPROVED</code> proposal to remove a member from the network, which deletes the member and all associated member resources from the network. '
    type: object
  ProposalDurationInt:
    maximum: 168
    minimum: 1
    type: integer
  ProposalListMaxResults:
    maximum: 100
    minimum: 1
    type: integer
  ProposalStatus:
    enum:
      - IN_PROGRESS
      - APPROVED
      - REJECTED
      - EXPIRED
      - ACTION_FAILED
    type: string
  ProposalSummary:
    description: Properties of a proposal.
    properties:
      CreationDate:
        $ref: '#/definitions/Timestamp'
        description: ' The date and time that the proposal was created. '
      Description:
        $ref: '#/definitions/DescriptionString'
        description: ' The description of the proposal. '
      ExpirationDate:
        $ref: '#/definitions/Timestamp'
        description: ' The date and time that the proposal expires. This is the <code>CreationDate</code> plus the <code>ProposalDurationInHours</code> that is specified in the <code>ProposalThresholdPolicy</code>. After this date and time, if members have not cast enough votes to determine the outcome according to the voting policy, the proposal is <code>EXPIRED</code> and <code>Actions</code> are not carried out. '
      ProposalId:
        $ref: '#/definitions/ResourceIdString'
        description: ' The unique identifier of the proposal. '
      ProposedByMemberId:
        $ref: '#/definitions/ResourceIdString'
        description: ' The unique identifier of the member that created the proposal. '
      ProposedByMemberName:
        $ref: '#/definitions/NetworkMemberNameString'
        description: ' The name of the member that created the proposal. '
      Status:
        $ref: '#/definitions/ProposalStatus'
        description: '<p>The status of the proposal. Values are as follows:</p> <ul> <li> <p> <code>IN_PROGRESS</code> - The proposal is active and open for member voting.</p> </li> <li> <p> <code>APPROVED</code> - The proposal was approved with sufficient <code>YES</code> votes among members according to the <code>VotingPolicy</code> specified for the <code>Network</code>. The specified proposal actions are carried out.</p> </li> <li> <p> <code>REJECTED</code> - The proposal was rejected with insufficient <code>YES</code> votes among members according to the <code>VotingPolicy</code> specified for the <code>Network</code>. The specified <code>ProposalActions</code> are not carried out.</p> </li> <li> <p> <code>EXPIRED</code> - Members did not cast the number of votes required to determine the proposal outcome before the proposal expired. The specified <code>ProposalActions</code> are not carried out.</p> </li> <li> <p> <code>ACTION_FAILED</code> - One or more of the specified <code>ProposalActions</code> in a proposal that was approved could not be completed because of an error.</p> </li> </ul>'
    type: object
  ProposalSummaryList:
    items:
      $ref: '#/definitions/ProposalSummary'
    type: array
  ProposalVoteList:
    items:
      $ref: '#/definitions/VoteSummary'
    type: array
  RejectInvitationInput:
    properties: {}
    type: object
  RejectInvitationOutput:
    properties: {}
    type: object
  RemoveAction:
    description: An action to remove a member from a Managed Blockchain network as the result of a removal proposal that is <code>APPROVED</code>. The member and all associated resources are deleted from the network.
    properties:
      MemberId:
        $ref: '#/definitions/ResourceIdString'
        description: The unique identifier of the member to remove.
    required:
      - MemberId
    type: object
  RemoveActionList:
    items:
      $ref: '#/definitions/RemoveAction'
    type: array
  ResourceAlreadyExistsException: {}
  ResourceIdString:
    maxLength: 32
    minLength: 1
    type: string
  ResourceLimitExceededException: {}
  ResourceNotFoundException: {}
  ResourceNotReadyException: {}
  String:
    type: string
  ThresholdComparator:
    enum:
      - GREATER_THAN
      - GREATER_THAN_OR_EQUAL_TO
    type: string
  ThresholdPercentageInt:
    maximum: 100
    minimum: 0
    type: integer
  ThrottlingException: {}
  Timestamp:
    format: date-time
    type: string
  UsernameString:
    maxLength: 16
    minLength: 1
    pattern: '^[a-zA-Z][a-zA-Z0-9]*$'
    type: string
  VoteCount:
    type: integer
  VoteOnProposalInput:
    properties:
      Vote:
        $ref: '#/definitions/VoteValue'
        description: ' The value of the vote. '
      VoterMemberId:
        $ref: '#/definitions/ResourceIdString'
        description: 'The unique identifier of the member casting the vote. '
    required:
      - VoterMemberId
      - Vote
    type: object
  VoteOnProposalOutput:
    properties: {}
    type: object
  VoteSummary:
    description: ' Properties of an individual vote that a member cast for a proposal. '
    properties:
      MemberId:
        $ref: '#/definitions/ResourceIdString'
        description: ' The unique identifier of the member that cast the vote. '
      MemberName:
        $ref: '#/definitions/NetworkMemberNameString'
        description: ' The name of the member that cast the vote. '
      Vote:
        $ref: '#/definitions/VoteValue'
        description: ' The vote value, either <code>YES</code> or <code>NO</code>. '
    type: object
  VoteValue:
    enum:
      - 'YES'
      - 'NO'
    type: string
  VotingPolicy:
    description: ' The voting rules for the network to decide if a proposal is accepted '
    properties:
      ApprovalThresholdPolicy:
        $ref: '#/definitions/ApprovalThresholdPolicy'
        description: 'Defines the rules for the network for voting on proposals, such as the percentage of <code>YES</code> votes required for the proposal to be approved and the duration of the proposal. The policy applies to all proposals and is specified when the network is created.'
    type: object
x-servers:
  - description: The ManagedBlockchain multi-region endpoint
    url: 'http://managedblockchain.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The ManagedBlockchain multi-region endpoint
    url: 'https://managedblockchain.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The ManagedBlockchain endpoint for China (Beijing) and China (Ningxia)
    url: 'http://managedblockchain.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
  - description: The ManagedBlockchain endpoint for China (Beijing) and China (Ningxia)
    url: 'https://managedblockchain.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
