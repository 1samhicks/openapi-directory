swagger: '2.0'
info:
  version: '2018-01-12'
  x-release: v4
  title: Amazon Data Lifecycle Manager
  description: '<fullname>Amazon Data Lifecycle Manager</fullname> <p>With Amazon Data Lifecycle Manager, you can manage the lifecycle of your AWS resources. You create lifecycle policies, which are used to automate operations on the specified resources.</p> <p>Amazon DLM supports Amazon EBS volumes and snapshots. For information about using Amazon DLM with Amazon EBS, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html">Automating the Amazon EBS Snapshot Lifecycle</a> in the <i>Amazon EC2 User Guide</i>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: dlm
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/dlm-2018-01-12.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/dlm/'
host: dlm.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://dlm.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
    description: The Amazon DLM multi-region endpoint
  - url: 'https://dlm.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
    description: The Amazon DLM multi-region endpoint
  - url: 'http://dlm.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
    description: The Amazon DLM endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://dlm.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
    description: The Amazon DLM endpoint for China (Beijing) and China (Ningxia)
consumes:
  - application/json
produces:
  - application/json
parameters:
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /policies:
    post:
      operationId: CreateLifecyclePolicy
      description: Creates a policy to manage the lifecycle of the specified AWS resources. You can create up to 100 lifecycle policies.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLifecyclePolicyResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - ExecutionRoleArn
              - Description
              - State
              - PolicyDetails
            properties:
              ExecutionRoleArn:
                description: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.
                type: string
              Description:
                description: 'A description of the lifecycle policy. The characters ^[0-9A-Za-z _-]+$ are supported.'
                type: string
                minLength: 0
                maxLength: 500
              State:
                description: The desired activation state of the lifecycle policy after creation.
                type: string
                enum:
                  - ENABLED
                  - DISABLED
              PolicyDetails:
                description: Specifies the configuration of a lifecycle policy.
                type: object
                properties:
                  ResourceTypes:
                    $ref: '#/definitions/ResourceTypeValuesList'
                    description: The resource type.
                  TargetTags:
                    $ref: '#/definitions/TargetTagList'
                    description: The single tag that identifies targeted resources for this policy.
                  Schedules:
                    $ref: '#/definitions/ScheduleList'
                    description: The schedule of policy-defined actions.
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetLifecyclePolicies
      description: '<p>Gets summary information about all or the specified data lifecycle policies.</p> <p>To get complete information about a policy, use <a>GetLifecyclePolicy</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLifecyclePoliciesResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: policyIds
          in: query
          required: false
          description: The identifiers of the data lifecycle policies.
          type: array
          items:
            type: string
        - name: state
          in: query
          required: false
          description: The activation state.
          type: string
          enum:
            - ENABLED
            - DISABLED
            - ERROR
        - name: resourceTypes
          in: query
          required: false
          description: The resource type.
          type: array
          items:
            type: string
        - name: targetTags
          in: query
          required: false
          description: <p>The target tag for a policy.</p> <p>Tags are strings in the format <code>key=value</code>.</p>
          type: array
          items:
            type: string
        - name: tagsToAdd
          in: query
          required: false
          description: <p>The tags to add to objects created by the policy.</p> <p>Tags are strings in the format <code>key=value</code>.</p> <p>These user-defined tags are added in addition to the AWS-added lifecycle tags.</p>
          type: array
          items:
            type: string
  '/policies/{policyId}/':
    delete:
      operationId: DeleteLifecyclePolicy
      description: Deletes the specified lifecycle policy and halts the automated operations that the policy specified.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteLifecyclePolicyResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: policyId
          in: path
          required: true
          description: The identifier of the lifecycle policy.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetLifecyclePolicy
      description: Gets detailed information about the specified lifecycle policy.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLifecyclePolicyResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: policyId
          in: path
          required: true
          description: The identifier of the lifecycle policy.
          type: string
  '/policies/{policyId}':
    patch:
      operationId: UpdateLifecyclePolicy
      description: Updates the specified lifecycle policy.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateLifecyclePolicyResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: policyId
          in: path
          required: true
          description: The identifier of the lifecycle policy.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              ExecutionRoleArn:
                description: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.
                type: string
              State:
                description: The desired activation state of the lifecycle policy after creation.
                type: string
                enum:
                  - ENABLED
                  - DISABLED
              Description:
                description: A description of the lifecycle policy.
                type: string
                minLength: 0
                maxLength: 500
              PolicyDetails:
                description: Specifies the configuration of a lifecycle policy.
                type: object
                properties:
                  ResourceTypes:
                    $ref: '#/definitions/ResourceTypeValuesList'
                    description: The resource type.
                  TargetTags:
                    $ref: '#/definitions/TargetTagList'
                    description: The single tag that identifies targeted resources for this policy.
                  Schedules:
                    $ref: '#/definitions/ScheduleList'
                    description: The schedule of policy-defined actions.
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  CreateLifecyclePolicyResponse:
    type: object
    properties:
      PolicyId:
        $ref: '#/definitions/PolicyId'
        description: The identifier of the lifecycle policy.
  ResourceTypeValuesList:
    type: array
    items:
      $ref: '#/definitions/ResourceTypeValues'
    minItems: 1
    maxItems: 1
  TargetTagList:
    type: array
    items:
      $ref: '#/definitions/Tag'
    minItems: 1
    maxItems: 50
  ScheduleList:
    type: array
    items:
      $ref: '#/definitions/Schedule'
    minItems: 1
    maxItems: 1
  InvalidRequestException: {}
  LimitExceededException: {}
  InternalServerException: {}
  DeleteLifecyclePolicyResponse:
    type: object
    properties: {}
  ResourceNotFoundException: {}
  GetLifecyclePoliciesResponse:
    type: object
    properties:
      Policies:
        $ref: '#/definitions/LifecyclePolicySummaryList'
        description: Summary information about the lifecycle policies.
  PolicyId:
    type: string
  ResourceTypeValues:
    type: string
    enum:
      - VOLUME
  TagFilter:
    type: string
  GetLifecyclePolicyResponse:
    type: object
    properties:
      Policy:
        $ref: '#/definitions/LifecyclePolicy'
        description: Detailed information about the lifecycle policy.
  UpdateLifecyclePolicyResponse:
    type: object
    properties: {}
  CopyTags:
    type: boolean
  Count:
    type: integer
    minimum: 1
    maximum: 1000
  ExecutionRoleArn:
    type: string
  PolicyDescription:
    type: string
    minLength: 0
    maxLength: 500
  SettablePolicyStateValues:
    type: string
    enum:
      - ENABLED
      - DISABLED
  PolicyDetails:
    type: object
    properties:
      ResourceTypes:
        $ref: '#/definitions/ResourceTypeValuesList'
        description: The resource type.
      TargetTags:
        $ref: '#/definitions/TargetTagList'
        description: The single tag that identifies targeted resources for this policy.
      Schedules:
        $ref: '#/definitions/ScheduleList'
        description: The schedule of policy-defined actions.
    description: Specifies the configuration of a lifecycle policy.
  CreateLifecyclePolicyRequest:
    type: object
    required:
      - ExecutionRoleArn
      - Description
      - State
      - PolicyDetails
    properties:
      ExecutionRoleArn:
        $ref: '#/definitions/ExecutionRoleArn'
        description: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.
      Description:
        $ref: '#/definitions/PolicyDescription'
        description: 'A description of the lifecycle policy. The characters ^[0-9A-Za-z _-]+$ are supported.'
      State:
        $ref: '#/definitions/SettablePolicyStateValues'
        description: The desired activation state of the lifecycle policy after creation.
      PolicyDetails:
        $ref: '#/definitions/PolicyDetails'
        description: <p>The configuration details of the lifecycle policy.</p> <p>Target tags cannot be re-used across lifecycle policies.</p>
  Interval:
    type: integer
    minimum: 1
  IntervalUnitValues:
    type: string
    enum:
      - HOURS
  TimesList:
    type: array
    items:
      $ref: '#/definitions/Time'
    maxItems: 1
  CreateRule:
    type: object
    required:
      - Interval
      - IntervalUnit
    properties:
      Interval:
        $ref: '#/definitions/Interval'
        description: The interval. The supported values are 12 and 24.
      IntervalUnit:
        $ref: '#/definitions/IntervalUnitValues'
        description: The interval unit.
      Times:
        $ref: '#/definitions/TimesList'
        description: '<p>The time, in UTC, to start the operation.</p> <p>The operation occurs within a one-hour window following the specified time.</p>'
    description: Specifies when to create snapshots of EBS volumes.
  DeleteLifecyclePolicyRequest:
    type: object
    properties: {}
  PolicyIdList:
    type: array
    items:
      $ref: '#/definitions/PolicyId'
  GettablePolicyStateValues:
    type: string
    enum:
      - ENABLED
      - DISABLED
      - ERROR
  TargetTagsFilterList:
    type: array
    items:
      $ref: '#/definitions/TagFilter'
    minItems: 1
    maxItems: 50
  TagsToAddFilterList:
    type: array
    items:
      $ref: '#/definitions/TagFilter'
    minItems: 0
    maxItems: 50
  GetLifecyclePoliciesRequest:
    type: object
    properties: {}
  LifecyclePolicySummaryList:
    type: array
    items:
      $ref: '#/definitions/LifecyclePolicySummary'
  GetLifecyclePolicyRequest:
    type: object
    properties: {}
  LifecyclePolicy:
    type: object
    properties:
      PolicyId:
        $ref: '#/definitions/PolicyId'
        description: The identifier of the lifecycle policy.
      Description:
        $ref: '#/definitions/PolicyDescription'
        description: The description of the lifecycle policy.
      State:
        $ref: '#/definitions/GettablePolicyStateValues'
        description: The activation state of the lifecycle policy.
      ExecutionRoleArn:
        $ref: '#/definitions/ExecutionRoleArn'
        description: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.
      DateCreated:
        $ref: '#/definitions/Timestamp'
        description: The local date and time when the lifecycle policy was created.
      DateModified:
        $ref: '#/definitions/Timestamp'
        description: The local date and time when the lifecycle policy was last modified.
      PolicyDetails:
        $ref: '#/definitions/PolicyDetails'
        description: The configuration of the lifecycle policy
    description: Detailed information about a lifecycle policy.
  Timestamp:
    type: string
    format: date-time
  LifecyclePolicySummary:
    type: object
    properties:
      PolicyId:
        $ref: '#/definitions/PolicyId'
        description: The identifier of the lifecycle policy.
      Description:
        $ref: '#/definitions/PolicyDescription'
        description: The description of the lifecycle policy.
      State:
        $ref: '#/definitions/GettablePolicyStateValues'
        description: The activation state of the lifecycle policy.
    description: Summary information about a lifecycle policy.
  RetainRule:
    type: object
    required:
      - Count
    properties:
      Count:
        $ref: '#/definitions/Count'
        description: 'The number of snapshots to keep for each volume, up to a maximum of 1000.'
    description: Specifies the number of snapshots to keep for each EBS volume.
  ScheduleName:
    type: string
    minLength: 0
    maxLength: 500
  TagsToAddList:
    type: array
    items:
      $ref: '#/definitions/Tag'
    minItems: 0
    maxItems: 50
  Schedule:
    type: object
    properties:
      Name:
        $ref: '#/definitions/ScheduleName'
        description: The name of the schedule.
      CopyTags:
        $ref: '#/definitions/CopyTags'
      TagsToAdd:
        $ref: '#/definitions/TagsToAddList'
        description: The tags to apply to policy-created resources. These user-defined tags are in addition to the AWS-added lifecycle tags.
      CreateRule:
        $ref: '#/definitions/CreateRule'
        description: The create rule.
      RetainRule:
        $ref: '#/definitions/RetainRule'
        description: The retain rule.
    description: Specifies a schedule.
  String:
    type: string
  Tag:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/String'
        description: The tag key.
      Value:
        $ref: '#/definitions/String'
        description: The tag value.
    description: Specifies a tag for a resource.
  Time:
    type: string
    pattern: '^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$'
  UpdateLifecyclePolicyRequest:
    type: object
    properties:
      ExecutionRoleArn:
        $ref: '#/definitions/ExecutionRoleArn'
        description: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.
      State:
        $ref: '#/definitions/SettablePolicyStateValues'
        description: The desired activation state of the lifecycle policy after creation.
      Description:
        $ref: '#/definitions/PolicyDescription'
        description: A description of the lifecycle policy.
      PolicyDetails:
        $ref: '#/definitions/PolicyDetails'
        description: <p>The configuration of the lifecycle policy.</p> <p>Target tags cannot be re-used across policies.</p>
