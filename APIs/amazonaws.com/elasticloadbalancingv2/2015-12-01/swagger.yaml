swagger: '2.0'
schemes:
  - https
  - http
host: elasticloadbalancing.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: '<fullname>Elastic Load Balancing</fullname> <p>A load balancer distributes incoming traffic across targets, such as your EC2 instances. This enables you to increase the availability of your application. The load balancer also monitors the health of its registered targets and ensures that it routes traffic only to healthy targets. You configure your load balancer to accept incoming traffic by specifying one or more listeners, which are configured with a protocol and port number for connections from clients to the load balancer. You configure a target group with a protocol and port number for connections from the load balancer to the targets, and with health check settings to be used when checking the health status of the targets.</p> <p>Elastic Load Balancing supports the following types of load balancers: Application Load Balancers, Network Load Balancers, and Classic Load Balancers. This reference covers Application Load Balancers and Network Load Balancers.</p> <p>An Application Load Balancer makes routing and load balancing decisions at the application layer (HTTP/HTTPS). A Network Load Balancer makes routing and load balancing decisions at the transport layer (TCP/TLS). Both Application Load Balancers and Network Load Balancers can route requests to one or more ports on each EC2 instance or container instance in your virtual private cloud (VPC). For more information, see the <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/">Elastic Load Balancing User Guide</a>.</p> <p>All Elastic Load Balancing operations are idempotent, which means that they complete at most one time. If you repeat an operation, it succeeds.</p>'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Elastic Load Balancing
  version: '2015-12-01'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elasticloadbalancingv2-2015-12-01.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: elasticloadbalancingv2
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/elasticloadbalancing/'
consumes:
  - text/xml
produces:
  - text/xml
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  '/#Action=AddListenerCertificates':
    get:
      description: '<p>Adds the specified SSL server certificate to the certificate list for the specified HTTPS or TLS listener.</p> <p>If the certificate in already in the certificate list, the call is successful but the certificate is not added again.</p> <p>To get the certificate list for a listener, use <a>DescribeListenerCertificates</a>. To remove certificates from the certificate list for a listener, use <a>RemoveListenerCertificates</a>. To replace the default certificate for a listener, use <a>ModifyListener</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#https-listener-certificates">SSL Certificates</a> in the <i>Application Load Balancers Guide</i>.</p>'
      operationId: GET AddListenerCertificates
      parameters:
        - description: The Amazon Resource Name (ARN) of the listener.
          in: query
          name: ListenerArn
          required: true
          type: string
        - description: The certificate to add. You can specify one certificate per call. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.
          in: query
          items:
            type: string
          name: Certificates
          required: true
          type: array
        - enum:
            - AddListenerCertificates
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddListenerCertificatesOutput'
        '480':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '481':
          description: TooManyCertificatesException
          schema:
            $ref: '#/definitions/TooManyCertificatesException'
        '482':
          description: CertificateNotFoundException
          schema:
            $ref: '#/definitions/CertificateNotFoundException'
      x-aws-operation-name: AddListenerCertificates
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Adds the specified SSL server certificate to the certificate list for the specified HTTPS or TLS listener.</p> <p>If the certificate in already in the certificate list, the call is successful but the certificate is not added again.</p> <p>To get the certificate list for a listener, use <a>DescribeListenerCertificates</a>. To remove certificates from the certificate list for a listener, use <a>RemoveListenerCertificates</a>. To replace the default certificate for a listener, use <a>ModifyListener</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#https-listener-certificates">SSL Certificates</a> in the <i>Application Load Balancers Guide</i>.</p>'
      operationId: POST AddListenerCertificates
      parameters:
        - description: The Amazon Resource Name (ARN) of the listener.
          in: formData
          name: ListenerArn
          required: true
          type: string
        - description: The certificate to add. You can specify one certificate per call. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.
          in: formData
          items:
            type: string
          name: Certificates
          required: true
          type: array
        - enum:
            - AddListenerCertificates
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddListenerCertificatesOutput'
        '480':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '481':
          description: TooManyCertificatesException
          schema:
            $ref: '#/definitions/TooManyCertificatesException'
        '482':
          description: CertificateNotFoundException
          schema:
            $ref: '#/definitions/CertificateNotFoundException'
      x-aws-operation-name: AddListenerCertificates
  '/#Action=AddTags':
    get:
      description: '<p>Adds the specified tags to the specified Elastic Load Balancing resource. You can tag your Application Load Balancers, Network Load Balancers, and your target groups.</p> <p>Each tag consists of a key and an optional value. If a resource already has a tag with the same key, <code>AddTags</code> updates its value.</p> <p>To list the current tags for your resources, use <a>DescribeTags</a>. To remove tags from your resources, use <a>RemoveTags</a>.</p>'
      operationId: GET AddTags
      parameters:
        - description: The Amazon Resource Name (ARN) of the resource.
          in: query
          items:
            type: string
          name: ResourceArns
          required: true
          type: array
        - description: The tags. Each resource can have a maximum of 10 tags.
          in: query
          items:
            type: string
          name: Tags
          required: true
          type: array
        - enum:
            - AddTags
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddTagsOutput'
        '480':
          description: DuplicateTagKeysException
          schema:
            $ref: '#/definitions/DuplicateTagKeysException'
        '481':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
        '482':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '483':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
      x-aws-operation-name: AddTags
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Adds the specified tags to the specified Elastic Load Balancing resource. You can tag your Application Load Balancers, Network Load Balancers, and your target groups.</p> <p>Each tag consists of a key and an optional value. If a resource already has a tag with the same key, <code>AddTags</code> updates its value.</p> <p>To list the current tags for your resources, use <a>DescribeTags</a>. To remove tags from your resources, use <a>RemoveTags</a>.</p>'
      operationId: POST AddTags
      parameters:
        - description: The Amazon Resource Name (ARN) of the resource.
          in: formData
          items:
            type: string
          name: ResourceArns
          required: true
          type: array
        - description: The tags. Each resource can have a maximum of 10 tags.
          in: formData
          items:
            type: string
          name: Tags
          required: true
          type: array
        - enum:
            - AddTags
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddTagsOutput'
        '480':
          description: DuplicateTagKeysException
          schema:
            $ref: '#/definitions/DuplicateTagKeysException'
        '481':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
        '482':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '483':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
      x-aws-operation-name: AddTags
  '/#Action=CreateListener':
    get:
      description: '<p>Creates a listener for the specified Application Load Balancer or Network Load Balancer.</p> <p>To update a listener, use <a>ModifyListener</a>. When you are finished with a listener, you can delete it using <a>DeleteListener</a>. If you are finished with both the listener and the load balancer, you can delete them both using <a>DeleteLoadBalancer</a>.</p> <p>This operation is idempotent, which means that it completes at most one time. If you attempt to create multiple listeners with the same settings, each call succeeds.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html">Listeners for Your Application Load Balancers</a> in the <i>Application Load Balancers Guide</i> and <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-listeners.html">Listeners for Your Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>'
      operationId: GET CreateListener
      parameters:
        - description: The Amazon Resource Name (ARN) of the load balancer.
          in: query
          name: LoadBalancerArn
          required: true
          type: string
        - description: 'The protocol for connections from clients to the load balancer. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, and TCP_UDP.'
          enum:
            - HTTP
            - HTTPS
            - TCP
            - TLS
            - UDP
            - TCP_UDP
          in: query
          name: Protocol
          required: true
          type: string
        - description: The port on which the load balancer is listening.
          in: query
          maximum: 65535
          minimum: 1
          name: Port
          required: true
          type: integer
        - description: '[HTTPS and TLS listeners] The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy.'
          in: query
          name: SslPolicy
          required: false
          type: string
        - description: '<p>[HTTPS and TLS listeners] The default certificate for the listener. You must provide exactly one certificate. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.</p> <p>To create a certificate list for the listener, use <a>AddListenerCertificates</a>.</p>'
          in: query
          items:
            type: string
          name: Certificates
          required: false
          type: array
        - description: '<p>The actions for the default rule. The rule must include one forward action or one or more fixed-response actions.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>'
          in: query
          items:
            type: string
          name: DefaultActions
          required: true
          type: array
        - enum:
            - CreateListener
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateListenerOutput'
        '480':
          description: DuplicateListenerException
          schema:
            $ref: '#/definitions/DuplicateListenerException'
        '481':
          description: TooManyListenersException
          schema:
            $ref: '#/definitions/TooManyListenersException'
        '482':
          description: TooManyCertificatesException
          schema:
            $ref: '#/definitions/TooManyCertificatesException'
        '483':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '484':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '485':
          description: TargetGroupAssociationLimitException
          schema:
            $ref: '#/definitions/TargetGroupAssociationLimitException'
        '486':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '487':
          description: IncompatibleProtocolsException
          schema:
            $ref: '#/definitions/IncompatibleProtocolsException'
        '488':
          description: SSLPolicyNotFoundException
          schema:
            $ref: '#/definitions/SSLPolicyNotFoundException'
        '489':
          description: CertificateNotFoundException
          schema:
            $ref: '#/definitions/CertificateNotFoundException'
        '490':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
        '491':
          description: TooManyRegistrationsForTargetIdException
          schema:
            $ref: '#/definitions/TooManyRegistrationsForTargetIdException'
        '492':
          description: TooManyTargetsException
          schema:
            $ref: '#/definitions/TooManyTargetsException'
        '493':
          description: TooManyActionsException
          schema:
            $ref: '#/definitions/TooManyActionsException'
        '494':
          description: InvalidLoadBalancerActionException
          schema:
            $ref: '#/definitions/InvalidLoadBalancerActionException'
      x-aws-operation-name: CreateListener
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a listener for the specified Application Load Balancer or Network Load Balancer.</p> <p>To update a listener, use <a>ModifyListener</a>. When you are finished with a listener, you can delete it using <a>DeleteListener</a>. If you are finished with both the listener and the load balancer, you can delete them both using <a>DeleteLoadBalancer</a>.</p> <p>This operation is idempotent, which means that it completes at most one time. If you attempt to create multiple listeners with the same settings, each call succeeds.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html">Listeners for Your Application Load Balancers</a> in the <i>Application Load Balancers Guide</i> and <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-listeners.html">Listeners for Your Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>'
      operationId: POST CreateListener
      parameters:
        - description: The Amazon Resource Name (ARN) of the load balancer.
          in: formData
          name: LoadBalancerArn
          required: true
          type: string
        - description: 'The protocol for connections from clients to the load balancer. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, and TCP_UDP.'
          enum:
            - HTTP
            - HTTPS
            - TCP
            - TLS
            - UDP
            - TCP_UDP
          in: formData
          name: Protocol
          required: true
          type: string
        - description: The port on which the load balancer is listening.
          in: formData
          maximum: 65535
          minimum: 1
          name: Port
          required: true
          type: integer
        - description: '[HTTPS and TLS listeners] The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy.'
          in: formData
          name: SslPolicy
          required: false
          type: string
        - description: '<p>[HTTPS and TLS listeners] The default certificate for the listener. You must provide exactly one certificate. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.</p> <p>To create a certificate list for the listener, use <a>AddListenerCertificates</a>.</p>'
          in: formData
          items:
            type: string
          name: Certificates
          required: false
          type: array
        - description: '<p>The actions for the default rule. The rule must include one forward action or one or more fixed-response actions.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>'
          in: formData
          items:
            type: string
          name: DefaultActions
          required: true
          type: array
        - enum:
            - CreateListener
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateListenerOutput'
        '480':
          description: DuplicateListenerException
          schema:
            $ref: '#/definitions/DuplicateListenerException'
        '481':
          description: TooManyListenersException
          schema:
            $ref: '#/definitions/TooManyListenersException'
        '482':
          description: TooManyCertificatesException
          schema:
            $ref: '#/definitions/TooManyCertificatesException'
        '483':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '484':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '485':
          description: TargetGroupAssociationLimitException
          schema:
            $ref: '#/definitions/TargetGroupAssociationLimitException'
        '486':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '487':
          description: IncompatibleProtocolsException
          schema:
            $ref: '#/definitions/IncompatibleProtocolsException'
        '488':
          description: SSLPolicyNotFoundException
          schema:
            $ref: '#/definitions/SSLPolicyNotFoundException'
        '489':
          description: CertificateNotFoundException
          schema:
            $ref: '#/definitions/CertificateNotFoundException'
        '490':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
        '491':
          description: TooManyRegistrationsForTargetIdException
          schema:
            $ref: '#/definitions/TooManyRegistrationsForTargetIdException'
        '492':
          description: TooManyTargetsException
          schema:
            $ref: '#/definitions/TooManyTargetsException'
        '493':
          description: TooManyActionsException
          schema:
            $ref: '#/definitions/TooManyActionsException'
        '494':
          description: InvalidLoadBalancerActionException
          schema:
            $ref: '#/definitions/InvalidLoadBalancerActionException'
      x-aws-operation-name: CreateListener
  '/#Action=CreateLoadBalancer':
    get:
      description: '<p>Creates an Application Load Balancer or a Network Load Balancer.</p> <p>When you create a load balancer, you can specify security groups, public subnets, IP address type, and tags. Otherwise, you could do so later using <a>SetSecurityGroups</a>, <a>SetSubnets</a>, <a>SetIpAddressType</a>, and <a>AddTags</a>.</p> <p>To create listeners for your load balancer, use <a>CreateListener</a>. To describe your current load balancers, see <a>DescribeLoadBalancers</a>. When you are finished with a load balancer, you can delete it using <a>DeleteLoadBalancer</a>.</p> <p>For limit information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html">Limits for Your Application Load Balancer</a> in the <i>Application Load Balancers Guide</i> and <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-limits.html">Limits for Your Network Load Balancer</a> in the <i>Network Load Balancers Guide</i>.</p> <p>This operation is idempotent, which means that it completes at most one time. If you attempt to create multiple load balancers with the same settings, each call succeeds.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html">Application Load Balancers</a> in the <i>Application Load Balancers Guide</i> and <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html">Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>'
      operationId: GET CreateLoadBalancer
      parameters:
        - description: '<p>The name of the load balancer.</p> <p>This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, must not begin or end with a hyphen, and must not begin with "internal-".</p>'
          in: query
          name: Name
          required: true
          type: string
        - description: '<p>The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>[Application Load Balancers] You must specify subnets from at least two Availability Zones.</p> <p>[Network Load Balancers] You can specify subnets from one or more Availability Zones.</p>'
          in: query
          items:
            type: string
          name: Subnets
          required: false
          type: array
        - description: '<p>The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>[Application Load Balancers] You must specify subnets from at least two Availability Zones. You cannot specify Elastic IP addresses for your subnets.</p> <p>[Network Load Balancers] You can specify subnets from one or more Availability Zones. You can specify one Elastic IP address per subnet if you need static IP addresses for your load balancer.</p>'
          in: query
          items:
            type: string
          name: SubnetMappings
          required: false
          type: array
        - description: '[Application Load Balancers] The IDs of the security groups for the load balancer.'
          in: query
          items:
            type: string
          name: SecurityGroups
          required: false
          type: array
        - description: '<p>The nodes of an Internet-facing load balancer have public IP addresses. The DNS name of an Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes. Therefore, Internet-facing load balancers can route requests from clients over the internet.</p> <p>The nodes of an internal load balancer have only private IP addresses. The DNS name of an internal load balancer is publicly resolvable to the private IP addresses of the nodes. Therefore, internal load balancers can only route requests from clients with access to the VPC for the load balancer.</p> <p>The default is an Internet-facing load balancer.</p>'
          enum:
            - internet-facing
            - internal
          in: query
          name: Scheme
          required: false
          type: string
        - description: One or more tags to assign to the load balancer.
          in: query
          items:
            type: string
          name: Tags
          required: false
          type: array
        - description: The type of load balancer. The default is <code>application</code>.
          enum:
            - application
            - network
          in: query
          name: Type
          required: false
          type: string
        - description: '[Application Load Balancers] The type of IP addresses used by the subnets for your load balancer. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses). Internal load balancers must use <code>ipv4</code>.'
          enum:
            - ipv4
            - dualstack
          in: query
          name: IpAddressType
          required: false
          type: string
        - enum:
            - CreateLoadBalancer
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLoadBalancerOutput'
        '480':
          description: DuplicateLoadBalancerNameException
          schema:
            $ref: '#/definitions/DuplicateLoadBalancerNameException'
        '481':
          description: TooManyLoadBalancersException
          schema:
            $ref: '#/definitions/TooManyLoadBalancersException'
        '482':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '483':
          description: SubnetNotFoundException
          schema:
            $ref: '#/definitions/SubnetNotFoundException'
        '484':
          description: InvalidSubnetException
          schema:
            $ref: '#/definitions/InvalidSubnetException'
        '485':
          description: InvalidSecurityGroupException
          schema:
            $ref: '#/definitions/InvalidSecurityGroupException'
        '486':
          description: InvalidSchemeException
          schema:
            $ref: '#/definitions/InvalidSchemeException'
        '487':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
        '488':
          description: DuplicateTagKeysException
          schema:
            $ref: '#/definitions/DuplicateTagKeysException'
        '489':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '490':
          description: AllocationIdNotFoundException
          schema:
            $ref: '#/definitions/AllocationIdNotFoundException'
        '491':
          description: AvailabilityZoneNotSupportedException
          schema:
            $ref: '#/definitions/AvailabilityZoneNotSupportedException'
        '492':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
      x-aws-operation-name: CreateLoadBalancer
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates an Application Load Balancer or a Network Load Balancer.</p> <p>When you create a load balancer, you can specify security groups, public subnets, IP address type, and tags. Otherwise, you could do so later using <a>SetSecurityGroups</a>, <a>SetSubnets</a>, <a>SetIpAddressType</a>, and <a>AddTags</a>.</p> <p>To create listeners for your load balancer, use <a>CreateListener</a>. To describe your current load balancers, see <a>DescribeLoadBalancers</a>. When you are finished with a load balancer, you can delete it using <a>DeleteLoadBalancer</a>.</p> <p>For limit information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html">Limits for Your Application Load Balancer</a> in the <i>Application Load Balancers Guide</i> and <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-limits.html">Limits for Your Network Load Balancer</a> in the <i>Network Load Balancers Guide</i>.</p> <p>This operation is idempotent, which means that it completes at most one time. If you attempt to create multiple load balancers with the same settings, each call succeeds.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html">Application Load Balancers</a> in the <i>Application Load Balancers Guide</i> and <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html">Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>'
      operationId: POST CreateLoadBalancer
      parameters:
        - description: '<p>The name of the load balancer.</p> <p>This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, must not begin or end with a hyphen, and must not begin with "internal-".</p>'
          in: formData
          name: Name
          required: true
          type: string
        - description: '<p>The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>[Application Load Balancers] You must specify subnets from at least two Availability Zones.</p> <p>[Network Load Balancers] You can specify subnets from one or more Availability Zones.</p>'
          in: formData
          items:
            type: string
          name: Subnets
          required: false
          type: array
        - description: '<p>The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>[Application Load Balancers] You must specify subnets from at least two Availability Zones. You cannot specify Elastic IP addresses for your subnets.</p> <p>[Network Load Balancers] You can specify subnets from one or more Availability Zones. You can specify one Elastic IP address per subnet if you need static IP addresses for your load balancer.</p>'
          in: formData
          items:
            type: string
          name: SubnetMappings
          required: false
          type: array
        - description: '[Application Load Balancers] The IDs of the security groups for the load balancer.'
          in: formData
          items:
            type: string
          name: SecurityGroups
          required: false
          type: array
        - description: '<p>The nodes of an Internet-facing load balancer have public IP addresses. The DNS name of an Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes. Therefore, Internet-facing load balancers can route requests from clients over the internet.</p> <p>The nodes of an internal load balancer have only private IP addresses. The DNS name of an internal load balancer is publicly resolvable to the private IP addresses of the nodes. Therefore, internal load balancers can only route requests from clients with access to the VPC for the load balancer.</p> <p>The default is an Internet-facing load balancer.</p>'
          enum:
            - internet-facing
            - internal
          in: formData
          name: Scheme
          required: false
          type: string
        - description: One or more tags to assign to the load balancer.
          in: formData
          items:
            type: string
          name: Tags
          required: false
          type: array
        - description: The type of load balancer. The default is <code>application</code>.
          enum:
            - application
            - network
          in: formData
          name: Type
          required: false
          type: string
        - description: '[Application Load Balancers] The type of IP addresses used by the subnets for your load balancer. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses). Internal load balancers must use <code>ipv4</code>.'
          enum:
            - ipv4
            - dualstack
          in: formData
          name: IpAddressType
          required: false
          type: string
        - enum:
            - CreateLoadBalancer
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLoadBalancerOutput'
        '480':
          description: DuplicateLoadBalancerNameException
          schema:
            $ref: '#/definitions/DuplicateLoadBalancerNameException'
        '481':
          description: TooManyLoadBalancersException
          schema:
            $ref: '#/definitions/TooManyLoadBalancersException'
        '482':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '483':
          description: SubnetNotFoundException
          schema:
            $ref: '#/definitions/SubnetNotFoundException'
        '484':
          description: InvalidSubnetException
          schema:
            $ref: '#/definitions/InvalidSubnetException'
        '485':
          description: InvalidSecurityGroupException
          schema:
            $ref: '#/definitions/InvalidSecurityGroupException'
        '486':
          description: InvalidSchemeException
          schema:
            $ref: '#/definitions/InvalidSchemeException'
        '487':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
        '488':
          description: DuplicateTagKeysException
          schema:
            $ref: '#/definitions/DuplicateTagKeysException'
        '489':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '490':
          description: AllocationIdNotFoundException
          schema:
            $ref: '#/definitions/AllocationIdNotFoundException'
        '491':
          description: AvailabilityZoneNotSupportedException
          schema:
            $ref: '#/definitions/AvailabilityZoneNotSupportedException'
        '492':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
      x-aws-operation-name: CreateLoadBalancer
  '/#Action=CreateRule':
    get:
      description: '<p>Creates a rule for the specified listener. The listener must be associated with an Application Load Balancer.</p> <p>Rules are evaluated in priority order, from the lowest value to the highest value. When the conditions for a rule are met, its actions are performed. If the conditions for no rules are met, the actions for the default rule are performed. For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#listener-rules">Listener Rules</a> in the <i>Application Load Balancers Guide</i>.</p> <p>To view your current rules, use <a>DescribeRules</a>. To update a rule, use <a>ModifyRule</a>. To set the priorities of your rules, use <a>SetRulePriorities</a>. To delete a rule, use <a>DeleteRule</a>.</p>'
      operationId: GET CreateRule
      parameters:
        - description: The Amazon Resource Name (ARN) of the listener.
          in: query
          name: ListenerArn
          required: true
          type: string
        - description: 'The conditions. Each rule can include zero or one of the following conditions: <code>http-request-method</code>, <code>host-header</code>, <code>path-pattern</code>, and <code>source-ip</code>, and zero or more of the following conditions: <code>http-header</code> and <code>query-string</code>.'
          in: query
          items:
            type: string
          name: Conditions
          required: true
          type: array
        - description: The rule priority. A listener can't have multiple rules with the same priority.
          in: query
          maximum: 50000
          minimum: 1
          name: Priority
          required: true
          type: integer
        - description: '<p>The actions. Each rule must include exactly one of the following types of actions: <code>forward</code>, <code>fixed-response</code>, or <code>redirect</code>.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>'
          in: query
          items:
            type: string
          name: Actions
          required: true
          type: array
        - enum:
            - CreateRule
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateRuleOutput'
        '480':
          description: PriorityInUseException
          schema:
            $ref: '#/definitions/PriorityInUseException'
        '481':
          description: TooManyTargetGroupsException
          schema:
            $ref: '#/definitions/TooManyTargetGroupsException'
        '482':
          description: TooManyRulesException
          schema:
            $ref: '#/definitions/TooManyRulesException'
        '483':
          description: TargetGroupAssociationLimitException
          schema:
            $ref: '#/definitions/TargetGroupAssociationLimitException'
        '484':
          description: IncompatibleProtocolsException
          schema:
            $ref: '#/definitions/IncompatibleProtocolsException'
        '485':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '486':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '487':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '488':
          description: TooManyRegistrationsForTargetIdException
          schema:
            $ref: '#/definitions/TooManyRegistrationsForTargetIdException'
        '489':
          description: TooManyTargetsException
          schema:
            $ref: '#/definitions/TooManyTargetsException'
        '490':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
        '491':
          description: TooManyActionsException
          schema:
            $ref: '#/definitions/TooManyActionsException'
        '492':
          description: InvalidLoadBalancerActionException
          schema:
            $ref: '#/definitions/InvalidLoadBalancerActionException'
      x-aws-operation-name: CreateRule
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a rule for the specified listener. The listener must be associated with an Application Load Balancer.</p> <p>Rules are evaluated in priority order, from the lowest value to the highest value. When the conditions for a rule are met, its actions are performed. If the conditions for no rules are met, the actions for the default rule are performed. For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#listener-rules">Listener Rules</a> in the <i>Application Load Balancers Guide</i>.</p> <p>To view your current rules, use <a>DescribeRules</a>. To update a rule, use <a>ModifyRule</a>. To set the priorities of your rules, use <a>SetRulePriorities</a>. To delete a rule, use <a>DeleteRule</a>.</p>'
      operationId: POST CreateRule
      parameters:
        - description: The Amazon Resource Name (ARN) of the listener.
          in: formData
          name: ListenerArn
          required: true
          type: string
        - description: 'The conditions. Each rule can include zero or one of the following conditions: <code>http-request-method</code>, <code>host-header</code>, <code>path-pattern</code>, and <code>source-ip</code>, and zero or more of the following conditions: <code>http-header</code> and <code>query-string</code>.'
          in: formData
          items:
            type: string
          name: Conditions
          required: true
          type: array
        - description: The rule priority. A listener can't have multiple rules with the same priority.
          in: formData
          maximum: 50000
          minimum: 1
          name: Priority
          required: true
          type: integer
        - description: '<p>The actions. Each rule must include exactly one of the following types of actions: <code>forward</code>, <code>fixed-response</code>, or <code>redirect</code>.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>'
          in: formData
          items:
            type: string
          name: Actions
          required: true
          type: array
        - enum:
            - CreateRule
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateRuleOutput'
        '480':
          description: PriorityInUseException
          schema:
            $ref: '#/definitions/PriorityInUseException'
        '481':
          description: TooManyTargetGroupsException
          schema:
            $ref: '#/definitions/TooManyTargetGroupsException'
        '482':
          description: TooManyRulesException
          schema:
            $ref: '#/definitions/TooManyRulesException'
        '483':
          description: TargetGroupAssociationLimitException
          schema:
            $ref: '#/definitions/TargetGroupAssociationLimitException'
        '484':
          description: IncompatibleProtocolsException
          schema:
            $ref: '#/definitions/IncompatibleProtocolsException'
        '485':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '486':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '487':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '488':
          description: TooManyRegistrationsForTargetIdException
          schema:
            $ref: '#/definitions/TooManyRegistrationsForTargetIdException'
        '489':
          description: TooManyTargetsException
          schema:
            $ref: '#/definitions/TooManyTargetsException'
        '490':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
        '491':
          description: TooManyActionsException
          schema:
            $ref: '#/definitions/TooManyActionsException'
        '492':
          description: InvalidLoadBalancerActionException
          schema:
            $ref: '#/definitions/InvalidLoadBalancerActionException'
      x-aws-operation-name: CreateRule
  '/#Action=CreateTargetGroup':
    get:
      description: '<p>Creates a target group.</p> <p>To register targets with the target group, use <a>RegisterTargets</a>. To update the health check settings for the target group, use <a>ModifyTargetGroup</a>. To monitor the health of targets in the target group, use <a>DescribeTargetHealth</a>.</p> <p>To route traffic to the targets in a target group, specify the target group in an action using <a>CreateListener</a> or <a>CreateRule</a>.</p> <p>To delete a target group, use <a>DeleteTargetGroup</a>.</p> <p>This operation is idempotent, which means that it completes at most one time. If you attempt to create multiple target groups with the same settings, each call succeeds.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html">Target Groups for Your Application Load Balancers</a> in the <i>Application Load Balancers Guide</i> or <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html">Target Groups for Your Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>'
      operationId: GET CreateTargetGroup
      parameters:
        - description: '<p>The name of the target group.</p> <p>This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.</p>'
          in: query
          name: Name
          required: true
          type: string
        - description: 'The protocol to use for routing traffic to the targets. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, or TCP_UDP. A TCP_UDP listener must be associated with a TCP_UDP target group. If the target is a Lambda function, this parameter does not apply.'
          enum:
            - HTTP
            - HTTPS
            - TCP
            - TLS
            - UDP
            - TCP_UDP
          in: query
          name: Protocol
          required: false
          type: string
        - description: 'The port on which the targets receive traffic. This port is used unless you specify a port override when registering the target. If the target is a Lambda function, this parameter does not apply.'
          in: query
          maximum: 65535
          minimum: 1
          name: Port
          required: false
          type: integer
        - description: 'The identifier of the virtual private cloud (VPC). If the target is a Lambda function, this parameter does not apply. Otherwise, this parameter is required.'
          in: query
          name: VpcId
          required: false
          type: string
        - description: 'The protocol the load balancer uses when performing health checks on targets. For Application Load Balancers, the default is HTTP. For Network Load Balancers, the default is TCP. The TCP protocol is supported for health checks only if the protocol of the target group is TCP, TLS, UDP, or TCP_UDP. The TLS, UDP, and TCP_UDP protocols are not supported for health checks.'
          enum:
            - HTTP
            - HTTPS
            - TCP
            - TLS
            - UDP
            - TCP_UDP
          in: query
          name: HealthCheckProtocol
          required: false
          type: string
        - description: 'The port the load balancer uses when performing health checks on targets. The default is <code>traffic-port</code>, which is the port on which each target receives traffic from the load balancer.'
          in: query
          name: HealthCheckPort
          required: false
          type: string
        - description: 'Indicates whether health checks are enabled. If the target type is <code>lambda</code>, health checks are disabled by default but can be enabled. If the target type is <code>instance</code> or <code>ip</code>, health checks are always enabled and cannot be disabled.'
          in: query
          name: HealthCheckEnabled
          required: false
          type: boolean
        - description: '[HTTP/HTTPS health checks] The ping path that is the destination on the targets for health checks. The default is /.'
          in: query
          maxLength: 1024
          minLength: 1
          name: HealthCheckPath
          required: false
          type: string
        - description: 'The approximate amount of time, in seconds, between health checks of an individual target. For HTTP and HTTPS health checks, the range is 5–300 seconds. For TCP health checks, the supported values are 10 and 30 seconds. If the target type is <code>instance</code> or <code>ip</code>, the default is 30 seconds. If the target type is <code>lambda</code>, the default is 35 seconds.'
          in: query
          maximum: 300
          minimum: 5
          name: HealthCheckIntervalSeconds
          required: false
          type: integer
        - description: 'The amount of time, in seconds, during which no response from a target means a failed health check. For target groups with a protocol of HTTP or HTTPS, the default is 5 seconds. For target groups with a protocol of TCP or TLS, this value must be 6 seconds for HTTP health checks and 10 seconds for TCP and HTTPS health checks. If the target type is <code>lambda</code>, the default is 30 seconds.'
          in: query
          maximum: 120
          minimum: 2
          name: HealthCheckTimeoutSeconds
          required: false
          type: integer
        - description: 'The number of consecutive health checks successes required before considering an unhealthy target healthy. For target groups with a protocol of HTTP or HTTPS, the default is 5. For target groups with a protocol of TCP or TLS, the default is 3. If the target type is <code>lambda</code>, the default is 5.'
          in: query
          maximum: 10
          minimum: 2
          name: HealthyThresholdCount
          required: false
          type: integer
        - description: 'The number of consecutive health check failures required before considering a target unhealthy. For target groups with a protocol of HTTP or HTTPS, the default is 2. For target groups with a protocol of TCP or TLS, this value must be the same as the healthy threshold count. If the target type is <code>lambda</code>, the default is 2.'
          in: query
          maximum: 10
          minimum: 2
          name: UnhealthyThresholdCount
          required: false
          type: integer
        - description: |-
            Information to use when checking for a successful response from a target.
            <p>The HTTP codes.</p> <p>For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values (for example, "200,202") or a range of values (for example, "200-299").</p> <p>For Network Load Balancers, this is 200–399.</p>
          in: query
          name: Matcher.HttpCode
          type: string
        - description: '<p>The type of target that you must specify when registering targets with this target group. You can''t specify targets for a target group using more than one target type.</p> <ul> <li> <p> <code>instance</code> - Targets are specified by instance ID. This is the default value. If the target group protocol is UDP or TCP_UDP, the target type must be <code>instance</code>.</p> </li> <li> <p> <code>ip</code> - Targets are specified by IP address. You can specify IP addresses from the subnets of the virtual private cloud (VPC) for the target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can''t specify publicly routable IP addresses.</p> </li> <li> <p> <code>lambda</code> - The target groups contains a single Lambda function.</p> </li> </ul>'
          enum:
            - instance
            - ip
            - lambda
          in: query
          name: TargetType
          required: false
          type: string
        - enum:
            - CreateTargetGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTargetGroupOutput'
        '480':
          description: DuplicateTargetGroupNameException
          schema:
            $ref: '#/definitions/DuplicateTargetGroupNameException'
        '481':
          description: TooManyTargetGroupsException
          schema:
            $ref: '#/definitions/TooManyTargetGroupsException'
        '482':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
      x-aws-operation-name: CreateTargetGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a target group.</p> <p>To register targets with the target group, use <a>RegisterTargets</a>. To update the health check settings for the target group, use <a>ModifyTargetGroup</a>. To monitor the health of targets in the target group, use <a>DescribeTargetHealth</a>.</p> <p>To route traffic to the targets in a target group, specify the target group in an action using <a>CreateListener</a> or <a>CreateRule</a>.</p> <p>To delete a target group, use <a>DeleteTargetGroup</a>.</p> <p>This operation is idempotent, which means that it completes at most one time. If you attempt to create multiple target groups with the same settings, each call succeeds.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html">Target Groups for Your Application Load Balancers</a> in the <i>Application Load Balancers Guide</i> or <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html">Target Groups for Your Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>'
      operationId: POST CreateTargetGroup
      parameters:
        - description: '<p>The name of the target group.</p> <p>This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.</p>'
          in: formData
          name: Name
          required: true
          type: string
        - description: 'The protocol to use for routing traffic to the targets. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, or TCP_UDP. A TCP_UDP listener must be associated with a TCP_UDP target group. If the target is a Lambda function, this parameter does not apply.'
          enum:
            - HTTP
            - HTTPS
            - TCP
            - TLS
            - UDP
            - TCP_UDP
          in: formData
          name: Protocol
          required: false
          type: string
        - description: 'The port on which the targets receive traffic. This port is used unless you specify a port override when registering the target. If the target is a Lambda function, this parameter does not apply.'
          in: formData
          maximum: 65535
          minimum: 1
          name: Port
          required: false
          type: integer
        - description: 'The identifier of the virtual private cloud (VPC). If the target is a Lambda function, this parameter does not apply. Otherwise, this parameter is required.'
          in: formData
          name: VpcId
          required: false
          type: string
        - description: 'The protocol the load balancer uses when performing health checks on targets. For Application Load Balancers, the default is HTTP. For Network Load Balancers, the default is TCP. The TCP protocol is supported for health checks only if the protocol of the target group is TCP, TLS, UDP, or TCP_UDP. The TLS, UDP, and TCP_UDP protocols are not supported for health checks.'
          enum:
            - HTTP
            - HTTPS
            - TCP
            - TLS
            - UDP
            - TCP_UDP
          in: formData
          name: HealthCheckProtocol
          required: false
          type: string
        - description: 'The port the load balancer uses when performing health checks on targets. The default is <code>traffic-port</code>, which is the port on which each target receives traffic from the load balancer.'
          in: formData
          name: HealthCheckPort
          required: false
          type: string
        - description: 'Indicates whether health checks are enabled. If the target type is <code>lambda</code>, health checks are disabled by default but can be enabled. If the target type is <code>instance</code> or <code>ip</code>, health checks are always enabled and cannot be disabled.'
          in: formData
          name: HealthCheckEnabled
          required: false
          type: boolean
        - description: '[HTTP/HTTPS health checks] The ping path that is the destination on the targets for health checks. The default is /.'
          in: formData
          maxLength: 1024
          minLength: 1
          name: HealthCheckPath
          required: false
          type: string
        - description: 'The approximate amount of time, in seconds, between health checks of an individual target. For HTTP and HTTPS health checks, the range is 5–300 seconds. For TCP health checks, the supported values are 10 and 30 seconds. If the target type is <code>instance</code> or <code>ip</code>, the default is 30 seconds. If the target type is <code>lambda</code>, the default is 35 seconds.'
          in: formData
          maximum: 300
          minimum: 5
          name: HealthCheckIntervalSeconds
          required: false
          type: integer
        - description: 'The amount of time, in seconds, during which no response from a target means a failed health check. For target groups with a protocol of HTTP or HTTPS, the default is 5 seconds. For target groups with a protocol of TCP or TLS, this value must be 6 seconds for HTTP health checks and 10 seconds for TCP and HTTPS health checks. If the target type is <code>lambda</code>, the default is 30 seconds.'
          in: formData
          maximum: 120
          minimum: 2
          name: HealthCheckTimeoutSeconds
          required: false
          type: integer
        - description: 'The number of consecutive health checks successes required before considering an unhealthy target healthy. For target groups with a protocol of HTTP or HTTPS, the default is 5. For target groups with a protocol of TCP or TLS, the default is 3. If the target type is <code>lambda</code>, the default is 5.'
          in: formData
          maximum: 10
          minimum: 2
          name: HealthyThresholdCount
          required: false
          type: integer
        - description: 'The number of consecutive health check failures required before considering a target unhealthy. For target groups with a protocol of HTTP or HTTPS, the default is 2. For target groups with a protocol of TCP or TLS, this value must be the same as the healthy threshold count. If the target type is <code>lambda</code>, the default is 2.'
          in: formData
          maximum: 10
          minimum: 2
          name: UnhealthyThresholdCount
          required: false
          type: integer
        - description: |-
            Information to use when checking for a successful response from a target.
            <p>The HTTP codes.</p> <p>For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values (for example, "200,202") or a range of values (for example, "200-299").</p> <p>For Network Load Balancers, this is 200–399.</p>
          in: formData
          name: Matcher.HttpCode
          type: string
        - description: '<p>The type of target that you must specify when registering targets with this target group. You can''t specify targets for a target group using more than one target type.</p> <ul> <li> <p> <code>instance</code> - Targets are specified by instance ID. This is the default value. If the target group protocol is UDP or TCP_UDP, the target type must be <code>instance</code>.</p> </li> <li> <p> <code>ip</code> - Targets are specified by IP address. You can specify IP addresses from the subnets of the virtual private cloud (VPC) for the target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can''t specify publicly routable IP addresses.</p> </li> <li> <p> <code>lambda</code> - The target groups contains a single Lambda function.</p> </li> </ul>'
          enum:
            - instance
            - ip
            - lambda
          in: formData
          name: TargetType
          required: false
          type: string
        - enum:
            - CreateTargetGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTargetGroupOutput'
        '480':
          description: DuplicateTargetGroupNameException
          schema:
            $ref: '#/definitions/DuplicateTargetGroupNameException'
        '481':
          description: TooManyTargetGroupsException
          schema:
            $ref: '#/definitions/TooManyTargetGroupsException'
        '482':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
      x-aws-operation-name: CreateTargetGroup
  '/#Action=DeleteListener':
    get:
      description: '<p>Deletes the specified listener.</p> <p>Alternatively, your listener is deleted when you delete the load balancer to which it is attached, using <a>DeleteLoadBalancer</a>.</p>'
      operationId: GET DeleteListener
      parameters:
        - description: The Amazon Resource Name (ARN) of the listener.
          in: query
          name: ListenerArn
          required: true
          type: string
        - enum:
            - DeleteListener
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteListenerOutput'
        '480':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
      x-aws-operation-name: DeleteListener
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Deletes the specified listener.</p> <p>Alternatively, your listener is deleted when you delete the load balancer to which it is attached, using <a>DeleteLoadBalancer</a>.</p>'
      operationId: POST DeleteListener
      parameters:
        - description: The Amazon Resource Name (ARN) of the listener.
          in: formData
          name: ListenerArn
          required: true
          type: string
        - enum:
            - DeleteListener
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteListenerOutput'
        '480':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
      x-aws-operation-name: DeleteListener
  '/#Action=DeleteLoadBalancer':
    get:
      description: '<p>Deletes the specified Application Load Balancer or Network Load Balancer and its attached listeners.</p> <p>You can''t delete a load balancer if deletion protection is enabled. If the load balancer does not exist or has already been deleted, the call succeeds.</p> <p>Deleting a load balancer does not affect its registered targets. For example, your EC2 instances continue to run and are still registered to their target groups. If you no longer need these EC2 instances, you can stop or terminate them.</p>'
      operationId: GET DeleteLoadBalancer
      parameters:
        - description: The Amazon Resource Name (ARN) of the load balancer.
          in: query
          name: LoadBalancerArn
          required: true
          type: string
        - enum:
            - DeleteLoadBalancer
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteLoadBalancerOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      x-aws-operation-name: DeleteLoadBalancer
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Deletes the specified Application Load Balancer or Network Load Balancer and its attached listeners.</p> <p>You can''t delete a load balancer if deletion protection is enabled. If the load balancer does not exist or has already been deleted, the call succeeds.</p> <p>Deleting a load balancer does not affect its registered targets. For example, your EC2 instances continue to run and are still registered to their target groups. If you no longer need these EC2 instances, you can stop or terminate them.</p>'
      operationId: POST DeleteLoadBalancer
      parameters:
        - description: The Amazon Resource Name (ARN) of the load balancer.
          in: formData
          name: LoadBalancerArn
          required: true
          type: string
        - enum:
            - DeleteLoadBalancer
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteLoadBalancerOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      x-aws-operation-name: DeleteLoadBalancer
  '/#Action=DeleteRule':
    get:
      description: Deletes the specified rule.
      operationId: GET DeleteRule
      parameters:
        - description: The Amazon Resource Name (ARN) of the rule.
          in: query
          name: RuleArn
          required: true
          type: string
        - enum:
            - DeleteRule
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteRuleOutput'
        '480':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
        '481':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
      x-aws-operation-name: DeleteRule
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes the specified rule.
      operationId: POST DeleteRule
      parameters:
        - description: The Amazon Resource Name (ARN) of the rule.
          in: formData
          name: RuleArn
          required: true
          type: string
        - enum:
            - DeleteRule
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteRuleOutput'
        '480':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
        '481':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
      x-aws-operation-name: DeleteRule
  '/#Action=DeleteTargetGroup':
    get:
      description: <p>Deletes the specified target group.</p> <p>You can delete a target group if it is not referenced by any actions. Deleting a target group also deletes any associated health checks.</p>
      operationId: GET DeleteTargetGroup
      parameters:
        - description: The Amazon Resource Name (ARN) of the target group.
          in: query
          name: TargetGroupArn
          required: true
          type: string
        - enum:
            - DeleteTargetGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTargetGroupOutput'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      x-aws-operation-name: DeleteTargetGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the specified target group.</p> <p>You can delete a target group if it is not referenced by any actions. Deleting a target group also deletes any associated health checks.</p>
      operationId: POST DeleteTargetGroup
      parameters:
        - description: The Amazon Resource Name (ARN) of the target group.
          in: formData
          name: TargetGroupArn
          required: true
          type: string
        - enum:
            - DeleteTargetGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTargetGroupOutput'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      x-aws-operation-name: DeleteTargetGroup
  '/#Action=DeregisterTargets':
    get:
      description: 'Deregisters the specified targets from the specified target group. After the targets are deregistered, they no longer receive traffic from the load balancer.'
      operationId: GET DeregisterTargets
      parameters:
        - description: The Amazon Resource Name (ARN) of the target group.
          in: query
          name: TargetGroupArn
          required: true
          type: string
        - description: 'The targets. If you specified a port override when you registered a target, you must specify both the target ID and the port when you deregister it.'
          in: query
          items:
            type: string
          name: Targets
          required: true
          type: array
        - enum:
            - DeregisterTargets
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterTargetsOutput'
        '480':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '481':
          description: InvalidTargetException
          schema:
            $ref: '#/definitions/InvalidTargetException'
      x-aws-operation-name: DeregisterTargets
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Deregisters the specified targets from the specified target group. After the targets are deregistered, they no longer receive traffic from the load balancer.'
      operationId: POST DeregisterTargets
      parameters:
        - description: The Amazon Resource Name (ARN) of the target group.
          in: formData
          name: TargetGroupArn
          required: true
          type: string
        - description: 'The targets. If you specified a port override when you registered a target, you must specify both the target ID and the port when you deregister it.'
          in: formData
          items:
            type: string
          name: Targets
          required: true
          type: array
        - enum:
            - DeregisterTargets
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterTargetsOutput'
        '480':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '481':
          description: InvalidTargetException
          schema:
            $ref: '#/definitions/InvalidTargetException'
      x-aws-operation-name: DeregisterTargets
  '/#Action=DescribeAccountLimits':
    get:
      description: '<p>Describes the current Elastic Load Balancing resource limits for your AWS account.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html">Limits for Your Application Load Balancers</a> in the <i>Application Load Balancer Guide</i> or <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-limits.html">Limits for Your Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>'
      operationId: GET DescribeAccountLimits
      parameters:
        - description: The marker for the next set of results. (You received this marker from a previous call.)
          in: query
          name: Marker
          required: false
          type: string
        - description: The maximum number of results to return with this call.
          in: query
          maximum: 400
          minimum: 1
          name: PageSize
          required: false
          type: integer
        - enum:
            - DescribeAccountLimits
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAccountLimitsOutput'
      x-aws-operation-name: DescribeAccountLimits
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Describes the current Elastic Load Balancing resource limits for your AWS account.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html">Limits for Your Application Load Balancers</a> in the <i>Application Load Balancer Guide</i> or <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-limits.html">Limits for Your Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>'
      operationId: POST DescribeAccountLimits
      parameters:
        - description: The marker for the next set of results. (You received this marker from a previous call.)
          in: formData
          name: Marker
          required: false
          type: string
        - description: The maximum number of results to return with this call.
          in: formData
          maximum: 400
          minimum: 1
          name: PageSize
          required: false
          type: integer
        - enum:
            - DescribeAccountLimits
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAccountLimitsOutput'
      x-aws-operation-name: DescribeAccountLimits
  '/#Action=DescribeListenerCertificates':
    get:
      description: '<p>Describes the default certificate and the certificate list for the specified HTTPS or TLS listener.</p> <p>If the default certificate is also in the certificate list, it appears twice in the results (once with <code>IsDefault</code> set to true and once with <code>IsDefault</code> set to false).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#https-listener-certificates">SSL Certificates</a> in the <i>Application Load Balancers Guide</i>.</p>'
      operationId: GET DescribeListenerCertificates
      parameters:
        - description: The Amazon Resource Names (ARN) of the listener.
          in: query
          name: ListenerArn
          required: true
          type: string
        - description: The marker for the next set of results. (You received this marker from a previous call.)
          in: query
          name: Marker
          required: false
          type: string
        - description: The maximum number of results to return with this call.
          in: query
          maximum: 400
          minimum: 1
          name: PageSize
          required: false
          type: integer
        - enum:
            - DescribeListenerCertificates
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeListenerCertificatesOutput'
        '480':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
      x-aws-operation-name: DescribeListenerCertificates
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Describes the default certificate and the certificate list for the specified HTTPS or TLS listener.</p> <p>If the default certificate is also in the certificate list, it appears twice in the results (once with <code>IsDefault</code> set to true and once with <code>IsDefault</code> set to false).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#https-listener-certificates">SSL Certificates</a> in the <i>Application Load Balancers Guide</i>.</p>'
      operationId: POST DescribeListenerCertificates
      parameters:
        - description: The Amazon Resource Names (ARN) of the listener.
          in: formData
          name: ListenerArn
          required: true
          type: string
        - description: The marker for the next set of results. (You received this marker from a previous call.)
          in: formData
          name: Marker
          required: false
          type: string
        - description: The maximum number of results to return with this call.
          in: formData
          maximum: 400
          minimum: 1
          name: PageSize
          required: false
          type: integer
        - enum:
            - DescribeListenerCertificates
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeListenerCertificatesOutput'
        '480':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
      x-aws-operation-name: DescribeListenerCertificates
  '/#Action=DescribeListeners':
    get:
      description: '<p>Describes the specified listeners or the listeners for the specified Application Load Balancer or Network Load Balancer. You must specify either a load balancer or one or more listeners.</p> <p>For an HTTPS or TLS listener, the output includes the default certificate for the listener. To describe the certificate list for the listener, use <a>DescribeListenerCertificates</a>.</p>'
      operationId: GET DescribeListeners
      parameters:
        - description: The Amazon Resource Name (ARN) of the load balancer.
          in: query
          name: LoadBalancerArn
          required: false
          type: string
        - description: The Amazon Resource Names (ARN) of the listeners.
          in: query
          items:
            type: string
          name: ListenerArns
          required: false
          type: array
        - description: The marker for the next set of results. (You received this marker from a previous call.)
          in: query
          name: Marker
          required: false
          type: string
        - description: The maximum number of results to return with this call.
          in: query
          maximum: 400
          minimum: 1
          name: PageSize
          required: false
          type: integer
        - enum:
            - DescribeListeners
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeListenersOutput'
        '480':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '481':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '482':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
      x-aws-operation-name: DescribeListeners
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Describes the specified listeners or the listeners for the specified Application Load Balancer or Network Load Balancer. You must specify either a load balancer or one or more listeners.</p> <p>For an HTTPS or TLS listener, the output includes the default certificate for the listener. To describe the certificate list for the listener, use <a>DescribeListenerCertificates</a>.</p>'
      operationId: POST DescribeListeners
      parameters:
        - description: The Amazon Resource Name (ARN) of the load balancer.
          in: formData
          name: LoadBalancerArn
          required: false
          type: string
        - description: The Amazon Resource Names (ARN) of the listeners.
          in: formData
          items:
            type: string
          name: ListenerArns
          required: false
          type: array
        - description: The marker for the next set of results. (You received this marker from a previous call.)
          in: formData
          name: Marker
          required: false
          type: string
        - description: The maximum number of results to return with this call.
          in: formData
          maximum: 400
          minimum: 1
          name: PageSize
          required: false
          type: integer
        - enum:
            - DescribeListeners
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeListenersOutput'
        '480':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '481':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '482':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
      x-aws-operation-name: DescribeListeners
  '/#Action=DescribeLoadBalancerAttributes':
    get:
      description: '<p>Describes the attributes for the specified Application Load Balancer or Network Load Balancer.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html#load-balancer-attributes">Load Balancer Attributes</a> in the <i>Application Load Balancers Guide</i> or <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html#load-balancer-attributes">Load Balancer Attributes</a> in the <i>Network Load Balancers Guide</i>.</p>'
      operationId: GET DescribeLoadBalancerAttributes
      parameters:
        - description: The Amazon Resource Name (ARN) of the load balancer.
          in: query
          name: LoadBalancerArn
          required: true
          type: string
        - enum:
            - DescribeLoadBalancerAttributes
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeLoadBalancerAttributesOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
      x-aws-operation-name: DescribeLoadBalancerAttributes
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Describes the attributes for the specified Application Load Balancer or Network Load Balancer.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html#load-balancer-attributes">Load Balancer Attributes</a> in the <i>Application Load Balancers Guide</i> or <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html#load-balancer-attributes">Load Balancer Attributes</a> in the <i>Network Load Balancers Guide</i>.</p>'
      operationId: POST DescribeLoadBalancerAttributes
      parameters:
        - description: The Amazon Resource Name (ARN) of the load balancer.
          in: formData
          name: LoadBalancerArn
          required: true
          type: string
        - enum:
            - DescribeLoadBalancerAttributes
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeLoadBalancerAttributesOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
      x-aws-operation-name: DescribeLoadBalancerAttributes
  '/#Action=DescribeLoadBalancers':
    get:
      description: '<p>Describes the specified load balancers or all of your load balancers.</p> <p>To describe the listeners for a load balancer, use <a>DescribeListeners</a>. To describe the attributes for a load balancer, use <a>DescribeLoadBalancerAttributes</a>.</p>'
      operationId: GET DescribeLoadBalancers
      parameters:
        - description: The Amazon Resource Names (ARN) of the load balancers. You can specify up to 20 load balancers in a single call.
          in: query
          items:
            type: string
          name: LoadBalancerArns
          required: false
          type: array
        - description: The names of the load balancers.
          in: query
          items:
            type: string
          name: Names
          required: false
          type: array
        - description: The marker for the next set of results. (You received this marker from a previous call.)
          in: query
          name: Marker
          required: false
          type: string
        - description: The maximum number of results to return with this call.
          in: query
          maximum: 400
          minimum: 1
          name: PageSize
          required: false
          type: integer
        - enum:
            - DescribeLoadBalancers
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeLoadBalancersOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
      x-aws-operation-name: DescribeLoadBalancers
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Describes the specified load balancers or all of your load balancers.</p> <p>To describe the listeners for a load balancer, use <a>DescribeListeners</a>. To describe the attributes for a load balancer, use <a>DescribeLoadBalancerAttributes</a>.</p>'
      operationId: POST DescribeLoadBalancers
      parameters:
        - description: The Amazon Resource Names (ARN) of the load balancers. You can specify up to 20 load balancers in a single call.
          in: formData
          items:
            type: string
          name: LoadBalancerArns
          required: false
          type: array
        - description: The names of the load balancers.
          in: formData
          items:
            type: string
          name: Names
          required: false
          type: array
        - description: The marker for the next set of results. (You received this marker from a previous call.)
          in: formData
          name: Marker
          required: false
          type: string
        - description: The maximum number of results to return with this call.
          in: formData
          maximum: 400
          minimum: 1
          name: PageSize
          required: false
          type: integer
        - enum:
            - DescribeLoadBalancers
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeLoadBalancersOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
      x-aws-operation-name: DescribeLoadBalancers
  '/#Action=DescribeRules':
    get:
      description: Describes the specified rules or the rules for the specified listener. You must specify either a listener or one or more rules.
      operationId: GET DescribeRules
      parameters:
        - description: The Amazon Resource Name (ARN) of the listener.
          in: query
          name: ListenerArn
          required: false
          type: string
        - description: The Amazon Resource Names (ARN) of the rules.
          in: query
          items:
            type: string
          name: RuleArns
          required: false
          type: array
        - description: The marker for the next set of results. (You received this marker from a previous call.)
          in: query
          name: Marker
          required: false
          type: string
        - description: The maximum number of results to return with this call.
          in: query
          maximum: 400
          minimum: 1
          name: PageSize
          required: false
          type: integer
        - enum:
            - DescribeRules
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRulesOutput'
        '480':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '481':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
        '482':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
      x-aws-operation-name: DescribeRules
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Describes the specified rules or the rules for the specified listener. You must specify either a listener or one or more rules.
      operationId: POST DescribeRules
      parameters:
        - description: The Amazon Resource Name (ARN) of the listener.
          in: formData
          name: ListenerArn
          required: false
          type: string
        - description: The Amazon Resource Names (ARN) of the rules.
          in: formData
          items:
            type: string
          name: RuleArns
          required: false
          type: array
        - description: The marker for the next set of results. (You received this marker from a previous call.)
          in: formData
          name: Marker
          required: false
          type: string
        - description: The maximum number of results to return with this call.
          in: formData
          maximum: 400
          minimum: 1
          name: PageSize
          required: false
          type: integer
        - enum:
            - DescribeRules
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRulesOutput'
        '480':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '481':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
        '482':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
      x-aws-operation-name: DescribeRules
  '/#Action=DescribeSSLPolicies':
    get:
      description: '<p>Describes the specified policies or all policies used for SSL negotiation.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies">Security Policies</a> in the <i>Application Load Balancers Guide</i>.</p>'
      operationId: GET DescribeSSLPolicies
      parameters:
        - description: The names of the policies.
          in: query
          items:
            type: string
          name: Names
          required: false
          type: array
        - description: The marker for the next set of results. (You received this marker from a previous call.)
          in: query
          name: Marker
          required: false
          type: string
        - description: The maximum number of results to return with this call.
          in: query
          maximum: 400
          minimum: 1
          name: PageSize
          required: false
          type: integer
        - enum:
            - DescribeSSLPolicies
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSSLPoliciesOutput'
        '480':
          description: SSLPolicyNotFoundException
          schema:
            $ref: '#/definitions/SSLPolicyNotFoundException'
      x-aws-operation-name: DescribeSSLPolicies
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Describes the specified policies or all policies used for SSL negotiation.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies">Security Policies</a> in the <i>Application Load Balancers Guide</i>.</p>'
      operationId: POST DescribeSSLPolicies
      parameters:
        - description: The names of the policies.
          in: formData
          items:
            type: string
          name: Names
          required: false
          type: array
        - description: The marker for the next set of results. (You received this marker from a previous call.)
          in: formData
          name: Marker
          required: false
          type: string
        - description: The maximum number of results to return with this call.
          in: formData
          maximum: 400
          minimum: 1
          name: PageSize
          required: false
          type: integer
        - enum:
            - DescribeSSLPolicies
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSSLPoliciesOutput'
        '480':
          description: SSLPolicyNotFoundException
          schema:
            $ref: '#/definitions/SSLPolicyNotFoundException'
      x-aws-operation-name: DescribeSSLPolicies
  '/#Action=DescribeTags':
    get:
      description: 'Describes the tags for the specified resources. You can describe the tags for one or more Application Load Balancers, Network Load Balancers, and target groups.'
      operationId: GET DescribeTags
      parameters:
        - description: The Amazon Resource Names (ARN) of the resources.
          in: query
          items:
            type: string
          name: ResourceArns
          required: true
          type: array
        - enum:
            - DescribeTags
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTagsOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '482':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '483':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
      x-aws-operation-name: DescribeTags
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Describes the tags for the specified resources. You can describe the tags for one or more Application Load Balancers, Network Load Balancers, and target groups.'
      operationId: POST DescribeTags
      parameters:
        - description: The Amazon Resource Names (ARN) of the resources.
          in: formData
          items:
            type: string
          name: ResourceArns
          required: true
          type: array
        - enum:
            - DescribeTags
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTagsOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '482':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '483':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
      x-aws-operation-name: DescribeTags
  '/#Action=DescribeTargetGroupAttributes':
    get:
      description: '<p>Describes the attributes for the specified target group.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html#target-group-attributes">Target Group Attributes</a> in the <i>Application Load Balancers Guide</i> or <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#target-group-attributes">Target Group Attributes</a> in the <i>Network Load Balancers Guide</i>.</p>'
      operationId: GET DescribeTargetGroupAttributes
      parameters:
        - description: The Amazon Resource Name (ARN) of the target group.
          in: query
          name: TargetGroupArn
          required: true
          type: string
        - enum:
            - DescribeTargetGroupAttributes
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTargetGroupAttributesOutput'
        '480':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
      x-aws-operation-name: DescribeTargetGroupAttributes
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Describes the attributes for the specified target group.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html#target-group-attributes">Target Group Attributes</a> in the <i>Application Load Balancers Guide</i> or <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#target-group-attributes">Target Group Attributes</a> in the <i>Network Load Balancers Guide</i>.</p>'
      operationId: POST DescribeTargetGroupAttributes
      parameters:
        - description: The Amazon Resource Name (ARN) of the target group.
          in: formData
          name: TargetGroupArn
          required: true
          type: string
        - enum:
            - DescribeTargetGroupAttributes
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTargetGroupAttributesOutput'
        '480':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
      x-aws-operation-name: DescribeTargetGroupAttributes
  '/#Action=DescribeTargetGroups':
    get:
      description: '<p>Describes the specified target groups or all of your target groups. By default, all target groups are described. Alternatively, you can specify one of the following to filter the results: the ARN of the load balancer, the names of one or more target groups, or the ARNs of one or more target groups.</p> <p>To describe the targets for a target group, use <a>DescribeTargetHealth</a>. To describe the attributes of a target group, use <a>DescribeTargetGroupAttributes</a>.</p>'
      operationId: GET DescribeTargetGroups
      parameters:
        - description: The Amazon Resource Name (ARN) of the load balancer.
          in: query
          name: LoadBalancerArn
          required: false
          type: string
        - description: The Amazon Resource Names (ARN) of the target groups.
          in: query
          items:
            type: string
          name: TargetGroupArns
          required: false
          type: array
        - description: The names of the target groups.
          in: query
          items:
            type: string
          name: Names
          required: false
          type: array
        - description: The marker for the next set of results. (You received this marker from a previous call.)
          in: query
          name: Marker
          required: false
          type: string
        - description: The maximum number of results to return with this call.
          in: query
          maximum: 400
          minimum: 1
          name: PageSize
          required: false
          type: integer
        - enum:
            - DescribeTargetGroups
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTargetGroupsOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
      x-aws-operation-name: DescribeTargetGroups
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Describes the specified target groups or all of your target groups. By default, all target groups are described. Alternatively, you can specify one of the following to filter the results: the ARN of the load balancer, the names of one or more target groups, or the ARNs of one or more target groups.</p> <p>To describe the targets for a target group, use <a>DescribeTargetHealth</a>. To describe the attributes of a target group, use <a>DescribeTargetGroupAttributes</a>.</p>'
      operationId: POST DescribeTargetGroups
      parameters:
        - description: The Amazon Resource Name (ARN) of the load balancer.
          in: formData
          name: LoadBalancerArn
          required: false
          type: string
        - description: The Amazon Resource Names (ARN) of the target groups.
          in: formData
          items:
            type: string
          name: TargetGroupArns
          required: false
          type: array
        - description: The names of the target groups.
          in: formData
          items:
            type: string
          name: Names
          required: false
          type: array
        - description: The marker for the next set of results. (You received this marker from a previous call.)
          in: formData
          name: Marker
          required: false
          type: string
        - description: The maximum number of results to return with this call.
          in: formData
          maximum: 400
          minimum: 1
          name: PageSize
          required: false
          type: integer
        - enum:
            - DescribeTargetGroups
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTargetGroupsOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
      x-aws-operation-name: DescribeTargetGroups
  '/#Action=DescribeTargetHealth':
    get:
      description: Describes the health of the specified targets or all of your targets.
      operationId: GET DescribeTargetHealth
      parameters:
        - description: The Amazon Resource Name (ARN) of the target group.
          in: query
          name: TargetGroupArn
          required: true
          type: string
        - description: The targets.
          in: query
          items:
            type: string
          name: Targets
          required: false
          type: array
        - enum:
            - DescribeTargetHealth
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTargetHealthOutput'
        '480':
          description: InvalidTargetException
          schema:
            $ref: '#/definitions/InvalidTargetException'
        '481':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '482':
          description: HealthUnavailableException
          schema:
            $ref: '#/definitions/HealthUnavailableException'
      x-aws-operation-name: DescribeTargetHealth
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Describes the health of the specified targets or all of your targets.
      operationId: POST DescribeTargetHealth
      parameters:
        - description: The Amazon Resource Name (ARN) of the target group.
          in: formData
          name: TargetGroupArn
          required: true
          type: string
        - description: The targets.
          in: formData
          items:
            type: string
          name: Targets
          required: false
          type: array
        - enum:
            - DescribeTargetHealth
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTargetHealthOutput'
        '480':
          description: InvalidTargetException
          schema:
            $ref: '#/definitions/InvalidTargetException'
        '481':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '482':
          description: HealthUnavailableException
          schema:
            $ref: '#/definitions/HealthUnavailableException'
      x-aws-operation-name: DescribeTargetHealth
  '/#Action=ModifyListener':
    get:
      description: '<p>Modifies the specified properties of the specified listener.</p> <p>Any properties that you do not specify retain their current values. However, changing the protocol from HTTPS to HTTP, or from TLS to TCP, removes the security policy and default certificate properties. If you change the protocol from HTTP to HTTPS, or from TCP to TLS, you must add the security policy and default certificate properties.</p>'
      operationId: GET ModifyListener
      parameters:
        - description: The Amazon Resource Name (ARN) of the listener.
          in: query
          name: ListenerArn
          required: true
          type: string
        - description: The port for connections from clients to the load balancer.
          in: query
          maximum: 65535
          minimum: 1
          name: Port
          required: false
          type: integer
        - description: 'The protocol for connections from clients to the load balancer. Application Load Balancers support the HTTP and HTTPS protocols. Network Load Balancers support the TCP, TLS, UDP, and TCP_UDP protocols.'
          enum:
            - HTTP
            - HTTPS
            - TCP
            - TLS
            - UDP
            - TCP_UDP
          in: query
          name: Protocol
          required: false
          type: string
        - description: '[HTTPS and TLS listeners] The security policy that defines which protocols and ciphers are supported. For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies">Security Policies</a> in the <i>Application Load Balancers Guide</i>.'
          in: query
          name: SslPolicy
          required: false
          type: string
        - description: '<p>[HTTPS and TLS listeners] The default certificate for the listener. You must provide exactly one certificate. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.</p> <p>To create a certificate list, use <a>AddListenerCertificates</a>.</p>'
          in: query
          items:
            type: string
          name: Certificates
          required: false
          type: array
        - description: '<p>The actions for the default rule. The rule must include one forward action or one or more fixed-response actions.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>'
          in: query
          items:
            type: string
          name: DefaultActions
          required: false
          type: array
        - enum:
            - ModifyListener
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyListenerOutput'
        '480':
          description: DuplicateListenerException
          schema:
            $ref: '#/definitions/DuplicateListenerException'
        '481':
          description: TooManyListenersException
          schema:
            $ref: '#/definitions/TooManyListenersException'
        '482':
          description: TooManyCertificatesException
          schema:
            $ref: '#/definitions/TooManyCertificatesException'
        '483':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '484':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '485':
          description: TargetGroupAssociationLimitException
          schema:
            $ref: '#/definitions/TargetGroupAssociationLimitException'
        '486':
          description: IncompatibleProtocolsException
          schema:
            $ref: '#/definitions/IncompatibleProtocolsException'
        '487':
          description: SSLPolicyNotFoundException
          schema:
            $ref: '#/definitions/SSLPolicyNotFoundException'
        '488':
          description: CertificateNotFoundException
          schema:
            $ref: '#/definitions/CertificateNotFoundException'
        '489':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '490':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
        '491':
          description: TooManyRegistrationsForTargetIdException
          schema:
            $ref: '#/definitions/TooManyRegistrationsForTargetIdException'
        '492':
          description: TooManyTargetsException
          schema:
            $ref: '#/definitions/TooManyTargetsException'
        '493':
          description: TooManyActionsException
          schema:
            $ref: '#/definitions/TooManyActionsException'
        '494':
          description: InvalidLoadBalancerActionException
          schema:
            $ref: '#/definitions/InvalidLoadBalancerActionException'
      x-aws-operation-name: ModifyListener
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Modifies the specified properties of the specified listener.</p> <p>Any properties that you do not specify retain their current values. However, changing the protocol from HTTPS to HTTP, or from TLS to TCP, removes the security policy and default certificate properties. If you change the protocol from HTTP to HTTPS, or from TCP to TLS, you must add the security policy and default certificate properties.</p>'
      operationId: POST ModifyListener
      parameters:
        - description: The Amazon Resource Name (ARN) of the listener.
          in: formData
          name: ListenerArn
          required: true
          type: string
        - description: The port for connections from clients to the load balancer.
          in: formData
          maximum: 65535
          minimum: 1
          name: Port
          required: false
          type: integer
        - description: 'The protocol for connections from clients to the load balancer. Application Load Balancers support the HTTP and HTTPS protocols. Network Load Balancers support the TCP, TLS, UDP, and TCP_UDP protocols.'
          enum:
            - HTTP
            - HTTPS
            - TCP
            - TLS
            - UDP
            - TCP_UDP
          in: formData
          name: Protocol
          required: false
          type: string
        - description: '[HTTPS and TLS listeners] The security policy that defines which protocols and ciphers are supported. For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies">Security Policies</a> in the <i>Application Load Balancers Guide</i>.'
          in: formData
          name: SslPolicy
          required: false
          type: string
        - description: '<p>[HTTPS and TLS listeners] The default certificate for the listener. You must provide exactly one certificate. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.</p> <p>To create a certificate list, use <a>AddListenerCertificates</a>.</p>'
          in: formData
          items:
            type: string
          name: Certificates
          required: false
          type: array
        - description: '<p>The actions for the default rule. The rule must include one forward action or one or more fixed-response actions.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>'
          in: formData
          items:
            type: string
          name: DefaultActions
          required: false
          type: array
        - enum:
            - ModifyListener
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyListenerOutput'
        '480':
          description: DuplicateListenerException
          schema:
            $ref: '#/definitions/DuplicateListenerException'
        '481':
          description: TooManyListenersException
          schema:
            $ref: '#/definitions/TooManyListenersException'
        '482':
          description: TooManyCertificatesException
          schema:
            $ref: '#/definitions/TooManyCertificatesException'
        '483':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '484':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '485':
          description: TargetGroupAssociationLimitException
          schema:
            $ref: '#/definitions/TargetGroupAssociationLimitException'
        '486':
          description: IncompatibleProtocolsException
          schema:
            $ref: '#/definitions/IncompatibleProtocolsException'
        '487':
          description: SSLPolicyNotFoundException
          schema:
            $ref: '#/definitions/SSLPolicyNotFoundException'
        '488':
          description: CertificateNotFoundException
          schema:
            $ref: '#/definitions/CertificateNotFoundException'
        '489':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '490':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
        '491':
          description: TooManyRegistrationsForTargetIdException
          schema:
            $ref: '#/definitions/TooManyRegistrationsForTargetIdException'
        '492':
          description: TooManyTargetsException
          schema:
            $ref: '#/definitions/TooManyTargetsException'
        '493':
          description: TooManyActionsException
          schema:
            $ref: '#/definitions/TooManyActionsException'
        '494':
          description: InvalidLoadBalancerActionException
          schema:
            $ref: '#/definitions/InvalidLoadBalancerActionException'
      x-aws-operation-name: ModifyListener
  '/#Action=ModifyLoadBalancerAttributes':
    get:
      description: '<p>Modifies the specified attributes of the specified Application Load Balancer or Network Load Balancer.</p> <p>If any of the specified attributes can''t be modified as requested, the call fails. Any existing attributes that you do not modify retain their current values.</p>'
      operationId: GET ModifyLoadBalancerAttributes
      parameters:
        - description: The Amazon Resource Name (ARN) of the load balancer.
          in: query
          name: LoadBalancerArn
          required: true
          type: string
        - description: The load balancer attributes.
          in: query
          items:
            type: string
          name: Attributes
          required: true
          type: array
        - enum:
            - ModifyLoadBalancerAttributes
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyLoadBalancerAttributesOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
      x-aws-operation-name: ModifyLoadBalancerAttributes
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Modifies the specified attributes of the specified Application Load Balancer or Network Load Balancer.</p> <p>If any of the specified attributes can''t be modified as requested, the call fails. Any existing attributes that you do not modify retain their current values.</p>'
      operationId: POST ModifyLoadBalancerAttributes
      parameters:
        - description: The Amazon Resource Name (ARN) of the load balancer.
          in: formData
          name: LoadBalancerArn
          required: true
          type: string
        - description: The load balancer attributes.
          in: formData
          items:
            type: string
          name: Attributes
          required: true
          type: array
        - enum:
            - ModifyLoadBalancerAttributes
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyLoadBalancerAttributesOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
      x-aws-operation-name: ModifyLoadBalancerAttributes
  '/#Action=ModifyRule':
    get:
      description: '<p>Modifies the specified rule.</p> <p>Any existing properties that you do not modify retain their current values.</p> <p>To modify the actions for the default rule, use <a>ModifyListener</a>.</p>'
      operationId: GET ModifyRule
      parameters:
        - description: The Amazon Resource Name (ARN) of the rule.
          in: query
          name: RuleArn
          required: true
          type: string
        - description: 'The conditions. Each rule can include zero or one of the following conditions: <code>http-request-method</code>, <code>host-header</code>, <code>path-pattern</code>, and <code>source-ip</code>, and zero or more of the following conditions: <code>http-header</code> and <code>query-string</code>.'
          in: query
          items:
            type: string
          name: Conditions
          required: false
          type: array
        - description: '<p>The actions. Each rule must include exactly one of the following types of actions: <code>forward</code>, <code>fixed-response</code>, or <code>redirect</code>.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>'
          in: query
          items:
            type: string
          name: Actions
          required: false
          type: array
        - enum:
            - ModifyRule
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyRuleOutput'
        '480':
          description: TargetGroupAssociationLimitException
          schema:
            $ref: '#/definitions/TargetGroupAssociationLimitException'
        '481':
          description: IncompatibleProtocolsException
          schema:
            $ref: '#/definitions/IncompatibleProtocolsException'
        '482':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
        '483':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '484':
          description: TooManyRegistrationsForTargetIdException
          schema:
            $ref: '#/definitions/TooManyRegistrationsForTargetIdException'
        '485':
          description: TooManyTargetsException
          schema:
            $ref: '#/definitions/TooManyTargetsException'
        '486':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '487':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
        '488':
          description: TooManyActionsException
          schema:
            $ref: '#/definitions/TooManyActionsException'
        '489':
          description: InvalidLoadBalancerActionException
          schema:
            $ref: '#/definitions/InvalidLoadBalancerActionException'
      x-aws-operation-name: ModifyRule
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Modifies the specified rule.</p> <p>Any existing properties that you do not modify retain their current values.</p> <p>To modify the actions for the default rule, use <a>ModifyListener</a>.</p>'
      operationId: POST ModifyRule
      parameters:
        - description: The Amazon Resource Name (ARN) of the rule.
          in: formData
          name: RuleArn
          required: true
          type: string
        - description: 'The conditions. Each rule can include zero or one of the following conditions: <code>http-request-method</code>, <code>host-header</code>, <code>path-pattern</code>, and <code>source-ip</code>, and zero or more of the following conditions: <code>http-header</code> and <code>query-string</code>.'
          in: formData
          items:
            type: string
          name: Conditions
          required: false
          type: array
        - description: '<p>The actions. Each rule must include exactly one of the following types of actions: <code>forward</code>, <code>fixed-response</code>, or <code>redirect</code>.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>'
          in: formData
          items:
            type: string
          name: Actions
          required: false
          type: array
        - enum:
            - ModifyRule
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyRuleOutput'
        '480':
          description: TargetGroupAssociationLimitException
          schema:
            $ref: '#/definitions/TargetGroupAssociationLimitException'
        '481':
          description: IncompatibleProtocolsException
          schema:
            $ref: '#/definitions/IncompatibleProtocolsException'
        '482':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
        '483':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '484':
          description: TooManyRegistrationsForTargetIdException
          schema:
            $ref: '#/definitions/TooManyRegistrationsForTargetIdException'
        '485':
          description: TooManyTargetsException
          schema:
            $ref: '#/definitions/TooManyTargetsException'
        '486':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '487':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
        '488':
          description: TooManyActionsException
          schema:
            $ref: '#/definitions/TooManyActionsException'
        '489':
          description: InvalidLoadBalancerActionException
          schema:
            $ref: '#/definitions/InvalidLoadBalancerActionException'
      x-aws-operation-name: ModifyRule
  '/#Action=ModifyTargetGroup':
    get:
      description: '<p>Modifies the health checks used when evaluating the health state of the targets in the specified target group.</p> <p>To monitor the health of the targets, use <a>DescribeTargetHealth</a>.</p>'
      operationId: GET ModifyTargetGroup
      parameters:
        - description: The Amazon Resource Name (ARN) of the target group.
          in: query
          name: TargetGroupArn
          required: true
          type: string
        - description: '<p>The protocol the load balancer uses when performing health checks on targets. The TCP protocol is supported for health checks only if the protocol of the target group is TCP, TLS, UDP, or TCP_UDP. The TLS, UDP, and TCP_UDP protocols are not supported for health checks.</p> <p>If the protocol of the target group is TCP, you can''t modify this setting.</p>'
          enum:
            - HTTP
            - HTTPS
            - TCP
            - TLS
            - UDP
            - TCP_UDP
          in: query
          name: HealthCheckProtocol
          required: false
          type: string
        - description: The port the load balancer uses when performing health checks on targets.
          in: query
          name: HealthCheckPort
          required: false
          type: string
        - description: '[HTTP/HTTPS health checks] The ping path that is the destination for the health check request.'
          in: query
          maxLength: 1024
          minLength: 1
          name: HealthCheckPath
          required: false
          type: string
        - description: Indicates whether health checks are enabled.
          in: query
          name: HealthCheckEnabled
          required: false
          type: boolean
        - description: '<p>The approximate amount of time, in seconds, between health checks of an individual target. For Application Load Balancers, the range is 5 to 300 seconds. For Network Load Balancers, the supported values are 10 or 30 seconds.</p> <p>If the protocol of the target group is TCP, you can''t modify this setting.</p>'
          in: query
          maximum: 300
          minimum: 5
          name: HealthCheckIntervalSeconds
          required: false
          type: integer
        - description: '<p>[HTTP/HTTPS health checks] The amount of time, in seconds, during which no response means a failed health check.</p> <p>If the protocol of the target group is TCP, you can''t modify this setting.</p>'
          in: query
          maximum: 120
          minimum: 2
          name: HealthCheckTimeoutSeconds
          required: false
          type: integer
        - description: The number of consecutive health checks successes required before considering an unhealthy target healthy.
          in: query
          maximum: 10
          minimum: 2
          name: HealthyThresholdCount
          required: false
          type: integer
        - description: 'The number of consecutive health check failures required before considering the target unhealthy. For Network Load Balancers, this value must be the same as the healthy threshold count.'
          in: query
          maximum: 10
          minimum: 2
          name: UnhealthyThresholdCount
          required: false
          type: integer
        - description: |-
            Information to use when checking for a successful response from a target.
            <p>The HTTP codes.</p> <p>For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values (for example, "200,202") or a range of values (for example, "200-299").</p> <p>For Network Load Balancers, this is 200–399.</p>
          in: query
          name: Matcher.HttpCode
          type: string
        - enum:
            - ModifyTargetGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyTargetGroupOutput'
        '480':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
      x-aws-operation-name: ModifyTargetGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Modifies the health checks used when evaluating the health state of the targets in the specified target group.</p> <p>To monitor the health of the targets, use <a>DescribeTargetHealth</a>.</p>'
      operationId: POST ModifyTargetGroup
      parameters:
        - description: The Amazon Resource Name (ARN) of the target group.
          in: formData
          name: TargetGroupArn
          required: true
          type: string
        - description: '<p>The protocol the load balancer uses when performing health checks on targets. The TCP protocol is supported for health checks only if the protocol of the target group is TCP, TLS, UDP, or TCP_UDP. The TLS, UDP, and TCP_UDP protocols are not supported for health checks.</p> <p>If the protocol of the target group is TCP, you can''t modify this setting.</p>'
          enum:
            - HTTP
            - HTTPS
            - TCP
            - TLS
            - UDP
            - TCP_UDP
          in: formData
          name: HealthCheckProtocol
          required: false
          type: string
        - description: The port the load balancer uses when performing health checks on targets.
          in: formData
          name: HealthCheckPort
          required: false
          type: string
        - description: '[HTTP/HTTPS health checks] The ping path that is the destination for the health check request.'
          in: formData
          maxLength: 1024
          minLength: 1
          name: HealthCheckPath
          required: false
          type: string
        - description: Indicates whether health checks are enabled.
          in: formData
          name: HealthCheckEnabled
          required: false
          type: boolean
        - description: '<p>The approximate amount of time, in seconds, between health checks of an individual target. For Application Load Balancers, the range is 5 to 300 seconds. For Network Load Balancers, the supported values are 10 or 30 seconds.</p> <p>If the protocol of the target group is TCP, you can''t modify this setting.</p>'
          in: formData
          maximum: 300
          minimum: 5
          name: HealthCheckIntervalSeconds
          required: false
          type: integer
        - description: '<p>[HTTP/HTTPS health checks] The amount of time, in seconds, during which no response means a failed health check.</p> <p>If the protocol of the target group is TCP, you can''t modify this setting.</p>'
          in: formData
          maximum: 120
          minimum: 2
          name: HealthCheckTimeoutSeconds
          required: false
          type: integer
        - description: The number of consecutive health checks successes required before considering an unhealthy target healthy.
          in: formData
          maximum: 10
          minimum: 2
          name: HealthyThresholdCount
          required: false
          type: integer
        - description: 'The number of consecutive health check failures required before considering the target unhealthy. For Network Load Balancers, this value must be the same as the healthy threshold count.'
          in: formData
          maximum: 10
          minimum: 2
          name: UnhealthyThresholdCount
          required: false
          type: integer
        - description: |-
            Information to use when checking for a successful response from a target.
            <p>The HTTP codes.</p> <p>For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values (for example, "200,202") or a range of values (for example, "200-299").</p> <p>For Network Load Balancers, this is 200–399.</p>
          in: formData
          name: Matcher.HttpCode
          type: string
        - enum:
            - ModifyTargetGroup
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyTargetGroupOutput'
        '480':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
      x-aws-operation-name: ModifyTargetGroup
  '/#Action=ModifyTargetGroupAttributes':
    get:
      description: Modifies the specified attributes of the specified target group.
      operationId: GET ModifyTargetGroupAttributes
      parameters:
        - description: The Amazon Resource Name (ARN) of the target group.
          in: query
          name: TargetGroupArn
          required: true
          type: string
        - description: The attributes.
          in: query
          items:
            type: string
          name: Attributes
          required: true
          type: array
        - enum:
            - ModifyTargetGroupAttributes
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyTargetGroupAttributesOutput'
        '480':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
      x-aws-operation-name: ModifyTargetGroupAttributes
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Modifies the specified attributes of the specified target group.
      operationId: POST ModifyTargetGroupAttributes
      parameters:
        - description: The Amazon Resource Name (ARN) of the target group.
          in: formData
          name: TargetGroupArn
          required: true
          type: string
        - description: The attributes.
          in: formData
          items:
            type: string
          name: Attributes
          required: true
          type: array
        - enum:
            - ModifyTargetGroupAttributes
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyTargetGroupAttributesOutput'
        '480':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
      x-aws-operation-name: ModifyTargetGroupAttributes
  '/#Action=RegisterTargets':
    get:
      description: '<p>Registers the specified targets with the specified target group.</p> <p>If the target is an EC2 instance, it must be in the <code>running</code> state when you register it.</p> <p>By default, the load balancer routes requests to registered targets using the protocol and port for the target group. Alternatively, you can override the port for a target when you register it. You can register each EC2 instance or IP address with the same target group multiple times using different ports.</p> <p>With a Network Load Balancer, you cannot register instances by instance ID if they have the following instance types: C1, CC1, CC2, CG1, CG2, CR1, CS1, G1, G2, HI1, HS1, M1, M2, M3, and T1. You can register instances of these types by IP address.</p> <p>To remove a target from a target group, use <a>DeregisterTargets</a>.</p>'
      operationId: GET RegisterTargets
      parameters:
        - description: The Amazon Resource Name (ARN) of the target group.
          in: query
          name: TargetGroupArn
          required: true
          type: string
        - description: '<p>The targets.</p> <p>To register a target by instance ID, specify the instance ID. To register a target by IP address, specify the IP address. To register a Lambda function, specify the ARN of the Lambda function.</p>'
          in: query
          items:
            type: string
          name: Targets
          required: true
          type: array
        - enum:
            - RegisterTargets
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterTargetsOutput'
        '480':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '481':
          description: TooManyTargetsException
          schema:
            $ref: '#/definitions/TooManyTargetsException'
        '482':
          description: InvalidTargetException
          schema:
            $ref: '#/definitions/InvalidTargetException'
        '483':
          description: TooManyRegistrationsForTargetIdException
          schema:
            $ref: '#/definitions/TooManyRegistrationsForTargetIdException'
      x-aws-operation-name: RegisterTargets
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Registers the specified targets with the specified target group.</p> <p>If the target is an EC2 instance, it must be in the <code>running</code> state when you register it.</p> <p>By default, the load balancer routes requests to registered targets using the protocol and port for the target group. Alternatively, you can override the port for a target when you register it. You can register each EC2 instance or IP address with the same target group multiple times using different ports.</p> <p>With a Network Load Balancer, you cannot register instances by instance ID if they have the following instance types: C1, CC1, CC2, CG1, CG2, CR1, CS1, G1, G2, HI1, HS1, M1, M2, M3, and T1. You can register instances of these types by IP address.</p> <p>To remove a target from a target group, use <a>DeregisterTargets</a>.</p>'
      operationId: POST RegisterTargets
      parameters:
        - description: The Amazon Resource Name (ARN) of the target group.
          in: formData
          name: TargetGroupArn
          required: true
          type: string
        - description: '<p>The targets.</p> <p>To register a target by instance ID, specify the instance ID. To register a target by IP address, specify the IP address. To register a Lambda function, specify the ARN of the Lambda function.</p>'
          in: formData
          items:
            type: string
          name: Targets
          required: true
          type: array
        - enum:
            - RegisterTargets
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterTargetsOutput'
        '480':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '481':
          description: TooManyTargetsException
          schema:
            $ref: '#/definitions/TooManyTargetsException'
        '482':
          description: InvalidTargetException
          schema:
            $ref: '#/definitions/InvalidTargetException'
        '483':
          description: TooManyRegistrationsForTargetIdException
          schema:
            $ref: '#/definitions/TooManyRegistrationsForTargetIdException'
      x-aws-operation-name: RegisterTargets
  '/#Action=RemoveListenerCertificates':
    get:
      description: '<p>Removes the specified certificate from the certificate list for the specified HTTPS or TLS listener.</p> <p>You can''t remove the default certificate for a listener. To replace the default certificate, call <a>ModifyListener</a>.</p> <p>To list the certificates for your listener, use <a>DescribeListenerCertificates</a>.</p>'
      operationId: GET RemoveListenerCertificates
      parameters:
        - description: The Amazon Resource Name (ARN) of the listener.
          in: query
          name: ListenerArn
          required: true
          type: string
        - description: The certificate to remove. You can specify one certificate per call. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.
          in: query
          items:
            type: string
          name: Certificates
          required: true
          type: array
        - enum:
            - RemoveListenerCertificates
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveListenerCertificatesOutput'
        '480':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '481':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
      x-aws-operation-name: RemoveListenerCertificates
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Removes the specified certificate from the certificate list for the specified HTTPS or TLS listener.</p> <p>You can''t remove the default certificate for a listener. To replace the default certificate, call <a>ModifyListener</a>.</p> <p>To list the certificates for your listener, use <a>DescribeListenerCertificates</a>.</p>'
      operationId: POST RemoveListenerCertificates
      parameters:
        - description: The Amazon Resource Name (ARN) of the listener.
          in: formData
          name: ListenerArn
          required: true
          type: string
        - description: The certificate to remove. You can specify one certificate per call. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.
          in: formData
          items:
            type: string
          name: Certificates
          required: true
          type: array
        - enum:
            - RemoveListenerCertificates
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveListenerCertificatesOutput'
        '480':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '481':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
      x-aws-operation-name: RemoveListenerCertificates
  '/#Action=RemoveTags':
    get:
      description: '<p>Removes the specified tags from the specified Elastic Load Balancing resource.</p> <p>To list the current tags for your resources, use <a>DescribeTags</a>.</p>'
      operationId: GET RemoveTags
      parameters:
        - description: The Amazon Resource Name (ARN) of the resource.
          in: query
          items:
            type: string
          name: ResourceArns
          required: true
          type: array
        - description: The tag keys for the tags to remove.
          in: query
          items:
            type: string
          name: TagKeys
          required: true
          type: array
        - enum:
            - RemoveTags
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveTagsOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '482':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '483':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
        '484':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
      x-aws-operation-name: RemoveTags
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Removes the specified tags from the specified Elastic Load Balancing resource.</p> <p>To list the current tags for your resources, use <a>DescribeTags</a>.</p>'
      operationId: POST RemoveTags
      parameters:
        - description: The Amazon Resource Name (ARN) of the resource.
          in: formData
          items:
            type: string
          name: ResourceArns
          required: true
          type: array
        - description: The tag keys for the tags to remove.
          in: formData
          items:
            type: string
          name: TagKeys
          required: true
          type: array
        - enum:
            - RemoveTags
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveTagsOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '482':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '483':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
        '484':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
      x-aws-operation-name: RemoveTags
  '/#Action=SetIpAddressType':
    get:
      description: Sets the type of IP addresses used by the subnets of the specified Application Load Balancer or Network Load Balancer.
      operationId: GET SetIpAddressType
      parameters:
        - description: The Amazon Resource Name (ARN) of the load balancer.
          in: query
          name: LoadBalancerArn
          required: true
          type: string
        - description: The IP address type. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses). Internal load balancers must use <code>ipv4</code>. Network Load Balancers must use <code>ipv4</code>.
          enum:
            - ipv4
            - dualstack
          in: query
          name: IpAddressType
          required: true
          type: string
        - enum:
            - SetIpAddressType
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetIpAddressTypeOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '482':
          description: InvalidSubnetException
          schema:
            $ref: '#/definitions/InvalidSubnetException'
      x-aws-operation-name: SetIpAddressType
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Sets the type of IP addresses used by the subnets of the specified Application Load Balancer or Network Load Balancer.
      operationId: POST SetIpAddressType
      parameters:
        - description: The Amazon Resource Name (ARN) of the load balancer.
          in: formData
          name: LoadBalancerArn
          required: true
          type: string
        - description: The IP address type. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses). Internal load balancers must use <code>ipv4</code>. Network Load Balancers must use <code>ipv4</code>.
          enum:
            - ipv4
            - dualstack
          in: formData
          name: IpAddressType
          required: true
          type: string
        - enum:
            - SetIpAddressType
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetIpAddressTypeOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '482':
          description: InvalidSubnetException
          schema:
            $ref: '#/definitions/InvalidSubnetException'
      x-aws-operation-name: SetIpAddressType
  '/#Action=SetRulePriorities':
    get:
      description: <p>Sets the priorities of the specified rules.</p> <p>You can reorder the rules as long as there are no priority conflicts in the new order. Any existing rules that you do not specify retain their current priority.</p>
      operationId: GET SetRulePriorities
      parameters:
        - description: The rule priorities.
          in: query
          items:
            type: string
          name: RulePriorities
          required: true
          type: array
        - enum:
            - SetRulePriorities
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetRulePrioritiesOutput'
        '480':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
        '481':
          description: PriorityInUseException
          schema:
            $ref: '#/definitions/PriorityInUseException'
        '482':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
      x-aws-operation-name: SetRulePriorities
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Sets the priorities of the specified rules.</p> <p>You can reorder the rules as long as there are no priority conflicts in the new order. Any existing rules that you do not specify retain their current priority.</p>
      operationId: POST SetRulePriorities
      parameters:
        - description: The rule priorities.
          in: formData
          items:
            type: string
          name: RulePriorities
          required: true
          type: array
        - enum:
            - SetRulePriorities
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetRulePrioritiesOutput'
        '480':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
        '481':
          description: PriorityInUseException
          schema:
            $ref: '#/definitions/PriorityInUseException'
        '482':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
      x-aws-operation-name: SetRulePriorities
  '/#Action=SetSecurityGroups':
    get:
      description: <p>Associates the specified security groups with the specified Application Load Balancer. The specified security groups override the previously associated security groups.</p> <p>You can't specify a security group for a Network Load Balancer.</p>
      operationId: GET SetSecurityGroups
      parameters:
        - description: The Amazon Resource Name (ARN) of the load balancer.
          in: query
          name: LoadBalancerArn
          required: true
          type: string
        - description: The IDs of the security groups.
          in: query
          items:
            type: string
          name: SecurityGroups
          required: true
          type: array
        - enum:
            - SetSecurityGroups
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetSecurityGroupsOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '482':
          description: InvalidSecurityGroupException
          schema:
            $ref: '#/definitions/InvalidSecurityGroupException'
      x-aws-operation-name: SetSecurityGroups
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Associates the specified security groups with the specified Application Load Balancer. The specified security groups override the previously associated security groups.</p> <p>You can't specify a security group for a Network Load Balancer.</p>
      operationId: POST SetSecurityGroups
      parameters:
        - description: The Amazon Resource Name (ARN) of the load balancer.
          in: formData
          name: LoadBalancerArn
          required: true
          type: string
        - description: The IDs of the security groups.
          in: formData
          items:
            type: string
          name: SecurityGroups
          required: true
          type: array
        - enum:
            - SetSecurityGroups
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetSecurityGroupsOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '482':
          description: InvalidSecurityGroupException
          schema:
            $ref: '#/definitions/InvalidSecurityGroupException'
      x-aws-operation-name: SetSecurityGroups
  '/#Action=SetSubnets':
    get:
      description: <p>Enables the Availability Zone for the specified public subnets for the specified Application Load Balancer. The specified subnets replace the previously enabled subnets.</p> <p>You can't change the subnets for a Network Load Balancer.</p>
      operationId: GET SetSubnets
      parameters:
        - description: The Amazon Resource Name (ARN) of the load balancer.
          in: query
          name: LoadBalancerArn
          required: true
          type: string
        - description: The IDs of the public subnets. You must specify subnets from at least two Availability Zones. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.
          in: query
          items:
            type: string
          name: Subnets
          required: false
          type: array
        - description: <p>The IDs of the public subnets. You must specify subnets from at least two Availability Zones. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>You cannot specify Elastic IP addresses for your subnets.</p>
          in: query
          items:
            type: string
          name: SubnetMappings
          required: false
          type: array
        - enum:
            - SetSubnets
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetSubnetsOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '482':
          description: SubnetNotFoundException
          schema:
            $ref: '#/definitions/SubnetNotFoundException'
        '483':
          description: InvalidSubnetException
          schema:
            $ref: '#/definitions/InvalidSubnetException'
        '484':
          description: AllocationIdNotFoundException
          schema:
            $ref: '#/definitions/AllocationIdNotFoundException'
        '485':
          description: AvailabilityZoneNotSupportedException
          schema:
            $ref: '#/definitions/AvailabilityZoneNotSupportedException'
      x-aws-operation-name: SetSubnets
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Enables the Availability Zone for the specified public subnets for the specified Application Load Balancer. The specified subnets replace the previously enabled subnets.</p> <p>You can't change the subnets for a Network Load Balancer.</p>
      operationId: POST SetSubnets
      parameters:
        - description: The Amazon Resource Name (ARN) of the load balancer.
          in: formData
          name: LoadBalancerArn
          required: true
          type: string
        - description: The IDs of the public subnets. You must specify subnets from at least two Availability Zones. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.
          in: formData
          items:
            type: string
          name: Subnets
          required: false
          type: array
        - description: <p>The IDs of the public subnets. You must specify subnets from at least two Availability Zones. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>You cannot specify Elastic IP addresses for your subnets.</p>
          in: formData
          items:
            type: string
          name: SubnetMappings
          required: false
          type: array
        - enum:
            - SetSubnets
          in: query
          name: Action
          required: true
          type: string
        - enum:
            - '2015-12-01'
          in: query
          name: Version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetSubnetsOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '482':
          description: SubnetNotFoundException
          schema:
            $ref: '#/definitions/SubnetNotFoundException'
        '483':
          description: InvalidSubnetException
          schema:
            $ref: '#/definitions/InvalidSubnetException'
        '484':
          description: AllocationIdNotFoundException
          schema:
            $ref: '#/definitions/AllocationIdNotFoundException'
        '485':
          description: AvailabilityZoneNotSupportedException
          schema:
            $ref: '#/definitions/AvailabilityZoneNotSupportedException'
      x-aws-operation-name: SetSubnets
definitions:
  Action:
    description: Information about an action.
    properties:
      AuthenticateCognitoConfig:
        $ref: '#/definitions/AuthenticateCognitoActionConfig'
        description: '[HTTPS listeners] Information for using Amazon Cognito to authenticate users. Specify only when <code>Type</code> is <code>authenticate-cognito</code>.'
      AuthenticateOidcConfig:
        $ref: '#/definitions/AuthenticateOidcActionConfig'
        description: '[HTTPS listeners] Information about an identity provider that is compliant with OpenID Connect (OIDC). Specify only when <code>Type</code> is <code>authenticate-oidc</code>.'
      FixedResponseConfig:
        $ref: '#/definitions/FixedResponseActionConfig'
        description: '[Application Load Balancer] Information for creating an action that returns a custom HTTP response. Specify only when <code>Type</code> is <code>fixed-response</code>.'
      Order:
        $ref: '#/definitions/ActionOrder'
        description: The order for the action. This value is required for rules with multiple actions. The action with the lowest value for order is performed first. The final action to be performed must be a <code>forward</code> or a <code>fixed-response</code> action.
      RedirectConfig:
        $ref: '#/definitions/RedirectActionConfig'
        description: '[Application Load Balancer] Information for creating a redirect action. Specify only when <code>Type</code> is <code>redirect</code>.'
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group. Specify only when <code>Type</code> is <code>forward</code>.
      Type:
        $ref: '#/definitions/ActionTypeEnum'
        description: 'The type of action. Each rule must include exactly one of the following types of actions: <code>forward</code>, <code>fixed-response</code>, or <code>redirect</code>.'
    required:
      - Type
    type: object
  ActionOrder:
    maximum: 50000
    minimum: 1
    type: integer
  ActionTypeEnum:
    enum:
      - forward
      - authenticate-oidc
      - authenticate-cognito
      - redirect
      - fixed-response
    type: string
  Actions:
    items:
      $ref: '#/definitions/Action'
    type: array
  AddListenerCertificatesInput:
    properties:
      Certificates:
        $ref: '#/definitions/CertificateList'
        description: The certificate to add. You can specify one certificate per call. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.
      ListenerArn:
        $ref: '#/definitions/ListenerArn'
        description: The Amazon Resource Name (ARN) of the listener.
    required:
      - ListenerArn
      - Certificates
    type: object
  AddListenerCertificatesOutput:
    properties:
      Certificates:
        $ref: '#/definitions/CertificateList'
        description: Information about the certificates in the certificate list.
    type: object
  AddTagsInput:
    properties:
      ResourceArns:
        $ref: '#/definitions/ResourceArns'
        description: The Amazon Resource Name (ARN) of the resource.
      Tags:
        $ref: '#/definitions/TagList'
        description: The tags. Each resource can have a maximum of 10 tags.
    required:
      - ResourceArns
      - Tags
    type: object
  AddTagsOutput:
    properties: {}
    type: object
  AllocationId:
    type: string
  AllocationIdNotFoundException: {}
  AuthenticateCognitoActionAuthenticationRequestExtraParams:
    additionalProperties:
      $ref: '#/definitions/AuthenticateCognitoActionAuthenticationRequestParamValue'
    type: object
  AuthenticateCognitoActionAuthenticationRequestParamName:
    type: string
  AuthenticateCognitoActionAuthenticationRequestParamValue:
    type: string
  AuthenticateCognitoActionConditionalBehaviorEnum:
    enum:
      - deny
      - allow
      - authenticate
    type: string
  AuthenticateCognitoActionConfig:
    description: Request parameters to use when integrating with Amazon Cognito to authenticate users.
    properties:
      AuthenticationRequestExtraParams:
        $ref: '#/definitions/AuthenticateCognitoActionAuthenticationRequestExtraParams'
        description: The query parameters (up to 10) to include in the redirect request to the authorization endpoint.
      OnUnauthenticatedRequest:
        $ref: '#/definitions/AuthenticateCognitoActionConditionalBehaviorEnum'
        description: '<p>The behavior if the user is not authenticated. The following are possible values:</p> <ul> <li> <p>deny<code/> - Return an HTTP 401 Unauthorized error.</p> </li> <li> <p>allow<code/> - Allow the request to be forwarded to the target.</p> </li> <li> <p>authenticate<code/> - Redirect the request to the IdP authorization endpoint. This is the default value.</p> </li> </ul>'
      Scope:
        $ref: '#/definitions/AuthenticateCognitoActionScope'
        description: '<p>The set of user claims to be requested from the IdP. The default is <code>openid</code>.</p> <p>To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP.</p>'
      SessionCookieName:
        $ref: '#/definitions/AuthenticateCognitoActionSessionCookieName'
        description: The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.
      SessionTimeout:
        $ref: '#/definitions/AuthenticateCognitoActionSessionTimeout'
        description: 'The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).'
      UserPoolArn:
        $ref: '#/definitions/AuthenticateCognitoActionUserPoolArn'
        description: The Amazon Resource Name (ARN) of the Amazon Cognito user pool.
      UserPoolClientId:
        $ref: '#/definitions/AuthenticateCognitoActionUserPoolClientId'
        description: The ID of the Amazon Cognito user pool client.
      UserPoolDomain:
        $ref: '#/definitions/AuthenticateCognitoActionUserPoolDomain'
        description: The domain prefix or fully-qualified domain name of the Amazon Cognito user pool.
    required:
      - UserPoolArn
      - UserPoolClientId
      - UserPoolDomain
    type: object
  AuthenticateCognitoActionScope:
    type: string
  AuthenticateCognitoActionSessionCookieName:
    type: string
  AuthenticateCognitoActionSessionTimeout:
    type: integer
  AuthenticateCognitoActionUserPoolArn:
    type: string
  AuthenticateCognitoActionUserPoolClientId:
    type: string
  AuthenticateCognitoActionUserPoolDomain:
    type: string
  AuthenticateOidcActionAuthenticationRequestExtraParams:
    additionalProperties:
      $ref: '#/definitions/AuthenticateOidcActionAuthenticationRequestParamValue'
    type: object
  AuthenticateOidcActionAuthenticationRequestParamName:
    type: string
  AuthenticateOidcActionAuthenticationRequestParamValue:
    type: string
  AuthenticateOidcActionAuthorizationEndpoint:
    type: string
  AuthenticateOidcActionClientId:
    type: string
  AuthenticateOidcActionClientSecret:
    type: string
  AuthenticateOidcActionConditionalBehaviorEnum:
    enum:
      - deny
      - allow
      - authenticate
    type: string
  AuthenticateOidcActionConfig:
    description: Request parameters when using an identity provider (IdP) that is compliant with OpenID Connect (OIDC) to authenticate users.
    properties:
      AuthenticationRequestExtraParams:
        $ref: '#/definitions/AuthenticateOidcActionAuthenticationRequestExtraParams'
        description: The query parameters (up to 10) to include in the redirect request to the authorization endpoint.
      AuthorizationEndpoint:
        $ref: '#/definitions/AuthenticateOidcActionAuthorizationEndpoint'
        description: 'The authorization endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.'
      ClientId:
        $ref: '#/definitions/AuthenticateOidcActionClientId'
        description: The OAuth 2.0 client identifier.
      ClientSecret:
        $ref: '#/definitions/AuthenticateOidcActionClientSecret'
        description: 'The OAuth 2.0 client secret. This parameter is required if you are creating a rule. If you are modifying a rule, you can omit this parameter if you set <code>UseExistingClientSecret</code> to true.'
      Issuer:
        $ref: '#/definitions/AuthenticateOidcActionIssuer'
        description: 'The OIDC issuer identifier of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.'
      OnUnauthenticatedRequest:
        $ref: '#/definitions/AuthenticateOidcActionConditionalBehaviorEnum'
        description: '<p>The behavior if the user is not authenticated. The following are possible values:</p> <ul> <li> <p>deny<code/> - Return an HTTP 401 Unauthorized error.</p> </li> <li> <p>allow<code/> - Allow the request to be forwarded to the target.</p> </li> <li> <p>authenticate<code/> - Redirect the request to the IdP authorization endpoint. This is the default value.</p> </li> </ul>'
      Scope:
        $ref: '#/definitions/AuthenticateOidcActionScope'
        description: '<p>The set of user claims to be requested from the IdP. The default is <code>openid</code>.</p> <p>To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP.</p>'
      SessionCookieName:
        $ref: '#/definitions/AuthenticateOidcActionSessionCookieName'
        description: The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.
      SessionTimeout:
        $ref: '#/definitions/AuthenticateOidcActionSessionTimeout'
        description: 'The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).'
      TokenEndpoint:
        $ref: '#/definitions/AuthenticateOidcActionTokenEndpoint'
        description: 'The token endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.'
      UseExistingClientSecret:
        $ref: '#/definitions/AuthenticateOidcActionUseExistingClientSecret'
        description: 'Indicates whether to use the existing client secret when modifying a rule. If you are creating a rule, you can omit this parameter or set it to false.'
      UserInfoEndpoint:
        $ref: '#/definitions/AuthenticateOidcActionUserInfoEndpoint'
        description: 'The user info endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.'
    required:
      - Issuer
      - AuthorizationEndpoint
      - TokenEndpoint
      - UserInfoEndpoint
      - ClientId
    type: object
  AuthenticateOidcActionIssuer:
    type: string
  AuthenticateOidcActionScope:
    type: string
  AuthenticateOidcActionSessionCookieName:
    type: string
  AuthenticateOidcActionSessionTimeout:
    type: integer
  AuthenticateOidcActionTokenEndpoint:
    type: string
  AuthenticateOidcActionUseExistingClientSecret:
    type: boolean
  AuthenticateOidcActionUserInfoEndpoint:
    type: string
  AvailabilityZone:
    description: Information about an Availability Zone.
    properties:
      LoadBalancerAddresses:
        $ref: '#/definitions/LoadBalancerAddresses'
        description: '[Network Load Balancers] If you need static IP addresses for your load balancer, you can specify one Elastic IP address per Availability Zone when you create the load balancer.'
      SubnetId:
        $ref: '#/definitions/SubnetId'
        description: The ID of the subnet. You can specify one subnet per Availability Zone.
      ZoneName:
        $ref: '#/definitions/ZoneName'
        description: The name of the Availability Zone.
    type: object
  AvailabilityZoneNotSupportedException: {}
  AvailabilityZones:
    items:
      $ref: '#/definitions/AvailabilityZone'
    type: array
  CanonicalHostedZoneId:
    type: string
  Certificate:
    description: Information about an SSL server certificate.
    properties:
      CertificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The Amazon Resource Name (ARN) of the certificate.
      IsDefault:
        $ref: '#/definitions/Default'
        description: 'Indicates whether the certificate is the default certificate. Do not set this value when specifying a certificate as an input. This value is not included in the output when describing a listener, but is included when describing listener certificates.'
    type: object
  CertificateArn:
    type: string
  CertificateList:
    items:
      $ref: '#/definitions/Certificate'
    type: array
  CertificateNotFoundException: {}
  Cipher:
    description: Information about a cipher used in a policy.
    properties:
      Name:
        $ref: '#/definitions/CipherName'
        description: The name of the cipher.
      Priority:
        $ref: '#/definitions/CipherPriority'
        description: The priority of the cipher.
    type: object
  CipherName:
    type: string
  CipherPriority:
    type: integer
  Ciphers:
    items:
      $ref: '#/definitions/Cipher'
    type: array
  ConditionFieldName:
    maxLength: 64
    type: string
  CreateListenerInput:
    properties:
      Certificates:
        $ref: '#/definitions/CertificateList'
        description: '<p>[HTTPS and TLS listeners] The default certificate for the listener. You must provide exactly one certificate. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.</p> <p>To create a certificate list for the listener, use <a>AddListenerCertificates</a>.</p>'
      DefaultActions:
        $ref: '#/definitions/Actions'
        description: '<p>The actions for the default rule. The rule must include one forward action or one or more fixed-response actions.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>'
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      Port:
        $ref: '#/definitions/Port'
        description: The port on which the load balancer is listening.
      Protocol:
        $ref: '#/definitions/ProtocolEnum'
        description: 'The protocol for connections from clients to the load balancer. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, and TCP_UDP.'
      SslPolicy:
        $ref: '#/definitions/SslPolicyName'
        description: '[HTTPS and TLS listeners] The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy.'
    required:
      - LoadBalancerArn
      - Protocol
      - Port
      - DefaultActions
    type: object
  CreateListenerOutput:
    example:
      Listeners:
        - Certificates:
            - CertificateArn: 'arn:aws:iam::123456789012:server-certificate/my-server-cert'
          DefaultActions:
            - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
              Type: forward
          ListenerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2'
          LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
          Port: 443
          Protocol: HTTPS
          SslPolicy: ELBSecurityPolicy-2015-05
    properties:
      Listeners:
        $ref: '#/definitions/Listeners'
        description: Information about the listener.
    type: object
  CreateLoadBalancerInput:
    properties:
      IpAddressType:
        $ref: '#/definitions/IpAddressType'
        description: '[Application Load Balancers] The type of IP addresses used by the subnets for your load balancer. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses). Internal load balancers must use <code>ipv4</code>.'
      Name:
        $ref: '#/definitions/LoadBalancerName'
        description: '<p>The name of the load balancer.</p> <p>This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, must not begin or end with a hyphen, and must not begin with "internal-".</p>'
      Scheme:
        $ref: '#/definitions/LoadBalancerSchemeEnum'
        description: '<p>The nodes of an Internet-facing load balancer have public IP addresses. The DNS name of an Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes. Therefore, Internet-facing load balancers can route requests from clients over the internet.</p> <p>The nodes of an internal load balancer have only private IP addresses. The DNS name of an internal load balancer is publicly resolvable to the private IP addresses of the nodes. Therefore, internal load balancers can only route requests from clients with access to the VPC for the load balancer.</p> <p>The default is an Internet-facing load balancer.</p>'
      SecurityGroups:
        $ref: '#/definitions/SecurityGroups'
        description: '[Application Load Balancers] The IDs of the security groups for the load balancer.'
      SubnetMappings:
        $ref: '#/definitions/SubnetMappings'
        description: '<p>The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>[Application Load Balancers] You must specify subnets from at least two Availability Zones. You cannot specify Elastic IP addresses for your subnets.</p> <p>[Network Load Balancers] You can specify subnets from one or more Availability Zones. You can specify one Elastic IP address per subnet if you need static IP addresses for your load balancer.</p>'
      Subnets:
        $ref: '#/definitions/Subnets'
        description: '<p>The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>[Application Load Balancers] You must specify subnets from at least two Availability Zones.</p> <p>[Network Load Balancers] You can specify subnets from one or more Availability Zones.</p>'
      Tags:
        $ref: '#/definitions/TagList'
        description: One or more tags to assign to the load balancer.
      Type:
        $ref: '#/definitions/LoadBalancerTypeEnum'
        description: The type of load balancer. The default is <code>application</code>.
    required:
      - Name
    type: object
  CreateLoadBalancerOutput:
    example:
      LoadBalancers:
        - AvailabilityZones:
            - SubnetId: subnet-8360a9e7
              ZoneName: us-west-2a
            - SubnetId: subnet-b7d581c0
              ZoneName: us-west-2b
          CanonicalHostedZoneId: Z2P70J7EXAMPLE
          CreatedTime: '2016-03-25T21:29:48.850Z'
          DNSName: internal-my-internal-load-balancer-1529930873.us-west-2.elb.amazonaws.com
          LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-internal-load-balancer/5b49b8d4303115c2'
          LoadBalancerName: my-internal-load-balancer
          Scheme: internal
          SecurityGroups:
            - sg-5943793c
          State:
            Code: provisioning
          Type: application
          VpcId: vpc-3ac0fb5f
    properties:
      LoadBalancers:
        $ref: '#/definitions/LoadBalancers'
        description: Information about the load balancer.
    type: object
  CreateRuleInput:
    properties:
      Actions:
        $ref: '#/definitions/Actions'
        description: '<p>The actions. Each rule must include exactly one of the following types of actions: <code>forward</code>, <code>fixed-response</code>, or <code>redirect</code>.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>'
      Conditions:
        $ref: '#/definitions/RuleConditionList'
        description: 'The conditions. Each rule can include zero or one of the following conditions: <code>http-request-method</code>, <code>host-header</code>, <code>path-pattern</code>, and <code>source-ip</code>, and zero or more of the following conditions: <code>http-header</code> and <code>query-string</code>.'
      ListenerArn:
        $ref: '#/definitions/ListenerArn'
        description: The Amazon Resource Name (ARN) of the listener.
      Priority:
        $ref: '#/definitions/RulePriority'
        description: The rule priority. A listener can't have multiple rules with the same priority.
    required:
      - ListenerArn
      - Conditions
      - Priority
      - Actions
    type: object
  CreateRuleOutput:
    example:
      Rules:
        - Actions:
            - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
              Type: forward
          Conditions:
            - Field: path-pattern
              Values:
                - /img/*
          IsDefault: false
          Priority: '10'
          RuleArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee'
    properties:
      Rules:
        $ref: '#/definitions/Rules'
        description: Information about the rule.
    type: object
  CreateTargetGroupInput:
    properties:
      HealthCheckEnabled:
        $ref: '#/definitions/HealthCheckEnabled'
        description: 'Indicates whether health checks are enabled. If the target type is <code>lambda</code>, health checks are disabled by default but can be enabled. If the target type is <code>instance</code> or <code>ip</code>, health checks are always enabled and cannot be disabled.'
      HealthCheckIntervalSeconds:
        $ref: '#/definitions/HealthCheckIntervalSeconds'
        description: 'The approximate amount of time, in seconds, between health checks of an individual target. For HTTP and HTTPS health checks, the range is 5–300 seconds. For TCP health checks, the supported values are 10 and 30 seconds. If the target type is <code>instance</code> or <code>ip</code>, the default is 30 seconds. If the target type is <code>lambda</code>, the default is 35 seconds.'
      HealthCheckPath:
        $ref: '#/definitions/Path'
        description: '[HTTP/HTTPS health checks] The ping path that is the destination on the targets for health checks. The default is /.'
      HealthCheckPort:
        $ref: '#/definitions/HealthCheckPort'
        description: 'The port the load balancer uses when performing health checks on targets. The default is <code>traffic-port</code>, which is the port on which each target receives traffic from the load balancer.'
      HealthCheckProtocol:
        $ref: '#/definitions/ProtocolEnum'
        description: 'The protocol the load balancer uses when performing health checks on targets. For Application Load Balancers, the default is HTTP. For Network Load Balancers, the default is TCP. The TCP protocol is supported for health checks only if the protocol of the target group is TCP, TLS, UDP, or TCP_UDP. The TLS, UDP, and TCP_UDP protocols are not supported for health checks.'
      HealthCheckTimeoutSeconds:
        $ref: '#/definitions/HealthCheckTimeoutSeconds'
        description: 'The amount of time, in seconds, during which no response from a target means a failed health check. For target groups with a protocol of HTTP or HTTPS, the default is 5 seconds. For target groups with a protocol of TCP or TLS, this value must be 6 seconds for HTTP health checks and 10 seconds for TCP and HTTPS health checks. If the target type is <code>lambda</code>, the default is 30 seconds.'
      HealthyThresholdCount:
        $ref: '#/definitions/HealthCheckThresholdCount'
        description: 'The number of consecutive health checks successes required before considering an unhealthy target healthy. For target groups with a protocol of HTTP or HTTPS, the default is 5. For target groups with a protocol of TCP or TLS, the default is 3. If the target type is <code>lambda</code>, the default is 5.'
      Matcher:
        $ref: '#/definitions/Matcher'
        description: '[HTTP/HTTPS health checks] The HTTP codes to use when checking for a successful response from a target.'
      Name:
        $ref: '#/definitions/TargetGroupName'
        description: '<p>The name of the target group.</p> <p>This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.</p>'
      Port:
        $ref: '#/definitions/Port'
        description: 'The port on which the targets receive traffic. This port is used unless you specify a port override when registering the target. If the target is a Lambda function, this parameter does not apply.'
      Protocol:
        $ref: '#/definitions/ProtocolEnum'
        description: 'The protocol to use for routing traffic to the targets. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, or TCP_UDP. A TCP_UDP listener must be associated with a TCP_UDP target group. If the target is a Lambda function, this parameter does not apply.'
      TargetType:
        $ref: '#/definitions/TargetTypeEnum'
        description: '<p>The type of target that you must specify when registering targets with this target group. You can''t specify targets for a target group using more than one target type.</p> <ul> <li> <p> <code>instance</code> - Targets are specified by instance ID. This is the default value. If the target group protocol is UDP or TCP_UDP, the target type must be <code>instance</code>.</p> </li> <li> <p> <code>ip</code> - Targets are specified by IP address. You can specify IP addresses from the subnets of the virtual private cloud (VPC) for the target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can''t specify publicly routable IP addresses.</p> </li> <li> <p> <code>lambda</code> - The target groups contains a single Lambda function.</p> </li> </ul>'
      UnhealthyThresholdCount:
        $ref: '#/definitions/HealthCheckThresholdCount'
        description: 'The number of consecutive health check failures required before considering a target unhealthy. For target groups with a protocol of HTTP or HTTPS, the default is 2. For target groups with a protocol of TCP or TLS, this value must be the same as the healthy threshold count. If the target type is <code>lambda</code>, the default is 2.'
      VpcId:
        $ref: '#/definitions/VpcId'
        description: 'The identifier of the virtual private cloud (VPC). If the target is a Lambda function, this parameter does not apply. Otherwise, this parameter is required.'
    required:
      - Name
    type: object
  CreateTargetGroupOutput:
    example:
      TargetGroups:
        - HealthCheckIntervalSeconds: 30
          HealthCheckPath: /
          HealthCheckPort: traffic-port
          HealthCheckProtocol: HTTP
          HealthCheckTimeoutSeconds: 5
          HealthyThresholdCount: 5
          Matcher:
            HttpCode: '200'
          Port: 80
          Protocol: HTTP
          TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
          TargetGroupName: my-targets
          UnhealthyThresholdCount: 2
          VpcId: vpc-3ac0fb5f
    properties:
      TargetGroups:
        $ref: '#/definitions/TargetGroups'
        description: Information about the target group.
    type: object
  CreatedTime:
    format: date-time
    type: string
  DNSName:
    type: string
  Default:
    type: boolean
  DeleteListenerInput:
    properties:
      ListenerArn:
        $ref: '#/definitions/ListenerArn'
        description: The Amazon Resource Name (ARN) of the listener.
    required:
      - ListenerArn
    type: object
  DeleteListenerOutput:
    properties: {}
    type: object
  DeleteLoadBalancerInput:
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
    required:
      - LoadBalancerArn
    type: object
  DeleteLoadBalancerOutput:
    properties: {}
    type: object
  DeleteRuleInput:
    properties:
      RuleArn:
        $ref: '#/definitions/RuleArn'
        description: The Amazon Resource Name (ARN) of the rule.
    required:
      - RuleArn
    type: object
  DeleteRuleOutput:
    properties: {}
    type: object
  DeleteTargetGroupInput:
    properties:
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
    required:
      - TargetGroupArn
    type: object
  DeleteTargetGroupOutput:
    properties: {}
    type: object
  DeregisterTargetsInput:
    properties:
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
      Targets:
        $ref: '#/definitions/TargetDescriptions'
        description: 'The targets. If you specified a port override when you registered a target, you must specify both the target ID and the port when you deregister it.'
    required:
      - TargetGroupArn
      - Targets
    type: object
  DeregisterTargetsOutput:
    properties: {}
    type: object
  DescribeAccountLimitsInput:
    properties:
      Marker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results. (You received this marker from a previous call.)
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return with this call.
    type: object
  DescribeAccountLimitsOutput:
    properties:
      Limits:
        $ref: '#/definitions/Limits'
        description: Information about the limits.
      NextMarker:
        $ref: '#/definitions/Marker'
        description: 'If there are additional results, this is the marker for the next set of results. Otherwise, this is null.'
    type: object
  DescribeListenerCertificatesInput:
    properties:
      ListenerArn:
        $ref: '#/definitions/ListenerArn'
        description: The Amazon Resource Names (ARN) of the listener.
      Marker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results. (You received this marker from a previous call.)
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return with this call.
    required:
      - ListenerArn
    type: object
  DescribeListenerCertificatesOutput:
    properties:
      Certificates:
        $ref: '#/definitions/CertificateList'
        description: Information about the certificates.
      NextMarker:
        $ref: '#/definitions/Marker'
        description: 'If there are additional results, this is the marker for the next set of results. Otherwise, this is null.'
    type: object
  DescribeListenersInput:
    properties:
      ListenerArns:
        $ref: '#/definitions/ListenerArns'
        description: The Amazon Resource Names (ARN) of the listeners.
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      Marker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results. (You received this marker from a previous call.)
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return with this call.
    type: object
  DescribeListenersOutput:
    example:
      Listeners:
        - DefaultActions:
            - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
              Type: forward
          ListenerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2'
          LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
          Port: 80
          Protocol: HTTP
    properties:
      Listeners:
        $ref: '#/definitions/Listeners'
        description: Information about the listeners.
      NextMarker:
        $ref: '#/definitions/Marker'
        description: 'If there are additional results, this is the marker for the next set of results. Otherwise, this is null.'
    type: object
  DescribeLoadBalancerAttributesInput:
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
    required:
      - LoadBalancerArn
    type: object
  DescribeLoadBalancerAttributesOutput:
    example:
      Attributes:
        - Key: access_logs.s3.enabled
          Value: 'false'
        - Key: idle_timeout.timeout_seconds
          Value: '60'
        - Key: access_logs.s3.prefix
          Value: ''
        - Key: deletion_protection.enabled
          Value: 'false'
        - Key: access_logs.s3.bucket
          Value: ''
    properties:
      Attributes:
        $ref: '#/definitions/LoadBalancerAttributes'
        description: Information about the load balancer attributes.
    type: object
  DescribeLoadBalancersInput:
    properties:
      LoadBalancerArns:
        $ref: '#/definitions/LoadBalancerArns'
        description: The Amazon Resource Names (ARN) of the load balancers. You can specify up to 20 load balancers in a single call.
      Marker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results. (You received this marker from a previous call.)
      Names:
        $ref: '#/definitions/LoadBalancerNames'
        description: The names of the load balancers.
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return with this call.
    type: object
  DescribeLoadBalancersOutput:
    example:
      LoadBalancers:
        - AvailabilityZones:
            - SubnetId: subnet-8360a9e7
              ZoneName: us-west-2a
            - SubnetId: subnet-b7d581c0
              ZoneName: us-west-2b
          CanonicalHostedZoneId: Z2P70J7EXAMPLE
          CreatedTime: '2016-03-25T21:26:12.920Z'
          DNSName: my-load-balancer-424835706.us-west-2.elb.amazonaws.com
          LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
          LoadBalancerName: my-load-balancer
          Scheme: internet-facing
          SecurityGroups:
            - sg-5943793c
          State:
            Code: active
          Type: application
          VpcId: vpc-3ac0fb5f
    properties:
      LoadBalancers:
        $ref: '#/definitions/LoadBalancers'
        description: Information about the load balancers.
      NextMarker:
        $ref: '#/definitions/Marker'
        description: 'If there are additional results, this is the marker for the next set of results. Otherwise, this is null.'
    type: object
  DescribeRulesInput:
    properties:
      ListenerArn:
        $ref: '#/definitions/ListenerArn'
        description: The Amazon Resource Name (ARN) of the listener.
      Marker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results. (You received this marker from a previous call.)
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return with this call.
      RuleArns:
        $ref: '#/definitions/RuleArns'
        description: The Amazon Resource Names (ARN) of the rules.
    type: object
  DescribeRulesOutput:
    example:
      Rules:
        - Actions:
            - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
              Type: forward
          Conditions:
            - Field: path-pattern
              Values:
                - /img/*
          IsDefault: false
          Priority: '10'
          RuleArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee'
    properties:
      NextMarker:
        $ref: '#/definitions/Marker'
        description: 'If there are additional results, this is the marker for the next set of results. Otherwise, this is null.'
      Rules:
        $ref: '#/definitions/Rules'
        description: Information about the rules.
    type: object
  DescribeSSLPoliciesInput:
    properties:
      Marker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results. (You received this marker from a previous call.)
      Names:
        $ref: '#/definitions/SslPolicyNames'
        description: The names of the policies.
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return with this call.
    type: object
  DescribeSSLPoliciesOutput:
    example:
      SslPolicies:
        - Ciphers:
            - Name: ECDHE-ECDSA-AES128-GCM-SHA256
              Priority: 1
            - Name: ECDHE-RSA-AES128-GCM-SHA256
              Priority: 2
            - Name: ECDHE-ECDSA-AES128-SHA256
              Priority: 3
            - Name: ECDHE-RSA-AES128-SHA256
              Priority: 4
            - Name: ECDHE-ECDSA-AES128-SHA
              Priority: 5
            - Name: ECDHE-RSA-AES128-SHA
              Priority: 6
            - Name: DHE-RSA-AES128-SHA
              Priority: 7
            - Name: ECDHE-ECDSA-AES256-GCM-SHA384
              Priority: 8
            - Name: ECDHE-RSA-AES256-GCM-SHA384
              Priority: 9
            - Name: ECDHE-ECDSA-AES256-SHA384
              Priority: 10
            - Name: ECDHE-RSA-AES256-SHA384
              Priority: 11
            - Name: ECDHE-RSA-AES256-SHA
              Priority: 12
            - Name: ECDHE-ECDSA-AES256-SHA
              Priority: 13
            - Name: AES128-GCM-SHA256
              Priority: 14
            - Name: AES128-SHA256
              Priority: 15
            - Name: AES128-SHA
              Priority: 16
            - Name: AES256-GCM-SHA384
              Priority: 17
            - Name: AES256-SHA256
              Priority: 18
            - Name: AES256-SHA
              Priority: 19
          Name: ELBSecurityPolicy-2015-05
          SslProtocols:
            - TLSv1
            - TLSv1.1
            - TLSv1.2
    properties:
      NextMarker:
        $ref: '#/definitions/Marker'
        description: 'If there are additional results, this is the marker for the next set of results. Otherwise, this is null.'
      SslPolicies:
        $ref: '#/definitions/SslPolicies'
        description: Information about the policies.
    type: object
  DescribeTagsInput:
    properties:
      ResourceArns:
        $ref: '#/definitions/ResourceArns'
        description: The Amazon Resource Names (ARN) of the resources.
    required:
      - ResourceArns
    type: object
  DescribeTagsOutput:
    example:
      TagDescriptions:
        - ResourceArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
          Tags:
            - Key: project
              Value: lima
            - Key: department
              Value: digital-media
    properties:
      TagDescriptions:
        $ref: '#/definitions/TagDescriptions'
        description: Information about the tags.
    type: object
  DescribeTargetGroupAttributesInput:
    properties:
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
    required:
      - TargetGroupArn
    type: object
  DescribeTargetGroupAttributesOutput:
    example:
      Attributes:
        - Key: stickiness.enabled
          Value: 'false'
        - Key: deregistration_delay.timeout_seconds
          Value: '300'
        - Key: stickiness.type
          Value: lb_cookie
        - Key: stickiness.lb_cookie.duration_seconds
          Value: '86400'
    properties:
      Attributes:
        $ref: '#/definitions/TargetGroupAttributes'
        description: Information about the target group attributes
    type: object
  DescribeTargetGroupsInput:
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      Marker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results. (You received this marker from a previous call.)
      Names:
        $ref: '#/definitions/TargetGroupNames'
        description: The names of the target groups.
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return with this call.
      TargetGroupArns:
        $ref: '#/definitions/TargetGroupArns'
        description: The Amazon Resource Names (ARN) of the target groups.
    type: object
  DescribeTargetGroupsOutput:
    example:
      TargetGroups:
        - HealthCheckIntervalSeconds: 30
          HealthCheckPath: /
          HealthCheckPort: traffic-port
          HealthCheckProtocol: HTTP
          HealthCheckTimeoutSeconds: 5
          HealthyThresholdCount: 5
          LoadBalancerArns:
            - 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
          Matcher:
            HttpCode: '200'
          Port: 80
          Protocol: HTTP
          TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
          TargetGroupName: my-targets
          UnhealthyThresholdCount: 2
          VpcId: vpc-3ac0fb5f
    properties:
      NextMarker:
        $ref: '#/definitions/Marker'
        description: 'If there are additional results, this is the marker for the next set of results. Otherwise, this is null.'
      TargetGroups:
        $ref: '#/definitions/TargetGroups'
        description: Information about the target groups.
    type: object
  DescribeTargetHealthInput:
    properties:
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
      Targets:
        $ref: '#/definitions/TargetDescriptions'
        description: The targets.
    required:
      - TargetGroupArn
    type: object
  DescribeTargetHealthOutput:
    example:
      TargetHealthDescriptions:
        - HealthCheckPort: '80'
          Target:
            Id: i-0f76fade
            Port: 80
          TargetHealth:
            State: healthy
    properties:
      TargetHealthDescriptions:
        $ref: '#/definitions/TargetHealthDescriptions'
        description: Information about the health of the targets.
    type: object
  Description:
    type: string
  DuplicateListenerException: {}
  DuplicateLoadBalancerNameException: {}
  DuplicateTagKeysException: {}
  DuplicateTargetGroupNameException: {}
  FixedResponseActionConfig:
    description: Information about an action that returns a custom HTTP response.
    properties:
      ContentType:
        $ref: '#/definitions/FixedResponseActionContentType'
        description: '<p>The content type.</p> <p>Valid Values: text/plain | text/css | text/html | application/javascript | application/json</p>'
      MessageBody:
        $ref: '#/definitions/FixedResponseActionMessage'
        description: The message.
      StatusCode:
        $ref: '#/definitions/FixedResponseActionStatusCode'
        description: 'The HTTP response code (2XX, 4XX, or 5XX).'
    required:
      - StatusCode
    type: object
  FixedResponseActionContentType:
    maxLength: 32
    minLength: 0
    type: string
  FixedResponseActionMessage:
    maxLength: 1024
    minLength: 0
    type: string
  FixedResponseActionStatusCode:
    pattern: ^(2|4|5)\d\d$
    type: string
  HealthCheckEnabled:
    type: boolean
  HealthCheckIntervalSeconds:
    maximum: 300
    minimum: 5
    type: integer
  HealthCheckPort:
    type: string
  HealthCheckThresholdCount:
    maximum: 10
    minimum: 2
    type: integer
  HealthCheckTimeoutSeconds:
    maximum: 120
    minimum: 2
    type: integer
  HealthUnavailableException: {}
  HostHeaderConditionConfig:
    description: Information about a host header condition.
    properties:
      Values:
        $ref: '#/definitions/ListOfString'
        description: '<p>One or more host names. The maximum size of each name is 128 characters. The comparison is case insensitive. The following wildcard characters are supported: * (matches 0 or more characters) and ? (matches exactly 1 character).</p> <p>If you specify multiple strings, the condition is satisfied if one of the strings matches the host name.</p>'
    type: object
  HttpCode:
    type: string
  HttpHeaderConditionConfig:
    description: <p>Information about an HTTP header condition.</p> <p>There is a set of standard HTTP header fields. You can also define custom HTTP header fields.</p>
    properties:
      HttpHeaderName:
        $ref: '#/definitions/HttpHeaderConditionName'
        description: <p>The name of the HTTP header field. The maximum size is 40 characters. The header name is case insensitive. The allowed characters are specified by RFC 7230. Wildcards are not supported.</p> <p>You can't use an HTTP header condition to specify the host header. Use <a>HostHeaderConditionConfig</a> to specify a host header condition.</p>
      Values:
        $ref: '#/definitions/ListOfString'
        description: '<p>One or more strings to compare against the value of the HTTP header. The maximum size of each string is 128 characters. The comparison strings are case insensitive. The following wildcard characters are supported: * (matches 0 or more characters) and ? (matches exactly 1 character).</p> <p>If the same header appears multiple times in the request, we search them in order until a match is found.</p> <p>If you specify multiple strings, the condition is satisfied if one of the strings matches the value of the HTTP header. To require that all of the strings are a match, create one condition per string.</p>'
    type: object
  HttpHeaderConditionName:
    type: string
  HttpRequestMethodConditionConfig:
    description: '<p>Information about an HTTP method condition.</p> <p>HTTP defines a set of request methods, also referred to as HTTP verbs. For more information, see the <a href="https://www.iana.org/assignments/http-methods/http-methods.xhtml">HTTP Method Registry</a>. You can also define custom HTTP methods.</p>'
    properties:
      Values:
        $ref: '#/definitions/ListOfString'
        description: '<p>The name of the request method. The maximum size is 40 characters. The allowed characters are A-Z, hyphen (-), and underscore (_). The comparison is case sensitive. Wildcards are not supported; therefore, the method name must be an exact match.</p> <p>If you specify multiple strings, the condition is satisfied if one of the strings matches the HTTP request method. We recommend that you route GET and HEAD requests in the same way, because the response to a HEAD request may be cached.</p>'
    type: object
  IncompatibleProtocolsException: {}
  InvalidConfigurationRequestException: {}
  InvalidLoadBalancerActionException: {}
  InvalidSchemeException: {}
  InvalidSecurityGroupException: {}
  InvalidSubnetException: {}
  InvalidTargetException: {}
  IpAddress:
    type: string
  IpAddressType:
    enum:
      - ipv4
      - dualstack
    type: string
  IsDefault:
    type: boolean
  Limit:
    description: Information about an Elastic Load Balancing resource limit for your AWS account.
    properties:
      Max:
        $ref: '#/definitions/Max'
        description: The maximum value of the limit.
      Name:
        $ref: '#/definitions/Name'
        description: '<p>The name of the limit. The possible values are:</p> <ul> <li> <p>application-load-balancers</p> </li> <li> <p>listeners-per-application-load-balancer</p> </li> <li> <p>listeners-per-network-load-balancer</p> </li> <li> <p>network-load-balancers</p> </li> <li> <p>rules-per-application-load-balancer</p> </li> <li> <p>target-groups</p> </li> <li> <p>targets-per-application-load-balancer</p> </li> <li> <p>targets-per-availability-zone-per-network-load-balancer</p> </li> <li> <p>targets-per-network-load-balancer</p> </li> </ul>'
    type: object
  Limits:
    items:
      $ref: '#/definitions/Limit'
    type: array
  ListOfString:
    items:
      $ref: '#/definitions/StringValue'
    type: array
  Listener:
    description: Information about a listener.
    properties:
      Certificates:
        $ref: '#/definitions/CertificateList'
        description: '[HTTPS or TLS listener] The default certificate for the listener.'
      DefaultActions:
        $ref: '#/definitions/Actions'
        description: The default actions for the listener.
      ListenerArn:
        $ref: '#/definitions/ListenerArn'
        description: The Amazon Resource Name (ARN) of the listener.
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      Port:
        $ref: '#/definitions/Port'
        description: The port on which the load balancer is listening.
      Protocol:
        $ref: '#/definitions/ProtocolEnum'
        description: The protocol for connections from clients to the load balancer.
      SslPolicy:
        $ref: '#/definitions/SslPolicyName'
        description: '[HTTPS or TLS listener] The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy.'
    type: object
  ListenerArn:
    type: string
  ListenerArns:
    items:
      $ref: '#/definitions/ListenerArn'
    type: array
  ListenerNotFoundException: {}
  Listeners:
    items:
      $ref: '#/definitions/Listener'
    type: array
  LoadBalancer:
    description: Information about a load balancer.
    properties:
      AvailabilityZones:
        $ref: '#/definitions/AvailabilityZones'
        description: The Availability Zones for the load balancer.
      CanonicalHostedZoneId:
        $ref: '#/definitions/CanonicalHostedZoneId'
        description: The ID of the Amazon Route 53 hosted zone associated with the load balancer.
      CreatedTime:
        $ref: '#/definitions/CreatedTime'
        description: The date and time the load balancer was created.
      DNSName:
        $ref: '#/definitions/DNSName'
        description: The public DNS name of the load balancer.
      IpAddressType:
        $ref: '#/definitions/IpAddressType'
        description: The type of IP addresses used by the subnets for your load balancer. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses).
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      LoadBalancerName:
        $ref: '#/definitions/LoadBalancerName'
        description: The name of the load balancer.
      Scheme:
        $ref: '#/definitions/LoadBalancerSchemeEnum'
        description: '<p>The nodes of an Internet-facing load balancer have public IP addresses. The DNS name of an Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes. Therefore, Internet-facing load balancers can route requests from clients over the internet.</p> <p>The nodes of an internal load balancer have only private IP addresses. The DNS name of an internal load balancer is publicly resolvable to the private IP addresses of the nodes. Therefore, internal load balancers can only route requests from clients with access to the VPC for the load balancer.</p>'
      SecurityGroups:
        $ref: '#/definitions/SecurityGroups'
        description: The IDs of the security groups for the load balancer.
      State:
        $ref: '#/definitions/LoadBalancerState'
        description: The state of the load balancer.
      Type:
        $ref: '#/definitions/LoadBalancerTypeEnum'
        description: The type of load balancer.
      VpcId:
        $ref: '#/definitions/VpcId'
        description: The ID of the VPC for the load balancer.
    type: object
  LoadBalancerAddress:
    description: Information about a static IP address for a load balancer.
    properties:
      AllocationId:
        $ref: '#/definitions/AllocationId'
        description: '[Network Load Balancers] The allocation ID of the Elastic IP address.'
      IpAddress:
        $ref: '#/definitions/IpAddress'
        description: The static IP address.
    type: object
  LoadBalancerAddresses:
    items:
      $ref: '#/definitions/LoadBalancerAddress'
    type: array
  LoadBalancerArn:
    type: string
  LoadBalancerArns:
    items:
      $ref: '#/definitions/LoadBalancerArn'
    type: array
  LoadBalancerAttribute:
    description: Information about a load balancer attribute.
    properties:
      Key:
        $ref: '#/definitions/LoadBalancerAttributeKey'
        description: '<p>The name of the attribute.</p> <p>The following attributes are supported by both Application Load Balancers and Network Load Balancers:</p> <ul> <li> <p> <code>access_logs.s3.enabled</code> - Indicates whether access logs are enabled. The value is <code>true</code> or <code>false</code>. The default is <code>false</code>.</p> </li> <li> <p> <code>access_logs.s3.bucket</code> - The name of the S3 bucket for the access logs. This attribute is required if access logs are enabled. The bucket must exist in the same region as the load balancer and have a bucket policy that grants Elastic Load Balancing permissions to write to the bucket.</p> </li> <li> <p> <code>access_logs.s3.prefix</code> - The prefix for the location in the S3 bucket for the access logs.</p> </li> <li> <p> <code>deletion_protection.enabled</code> - Indicates whether deletion protection is enabled. The value is <code>true</code> or <code>false</code>. The default is <code>false</code>.</p> </li> </ul> <p>The following attributes are supported by only Application Load Balancers:</p> <ul> <li> <p> <code>idle_timeout.timeout_seconds</code> - The idle timeout value, in seconds. The valid range is 1-4000 seconds. The default is 60 seconds.</p> </li> <li> <p> <code>routing.http2.enabled</code> - Indicates whether HTTP/2 is enabled. The value is <code>true</code> or <code>false</code>. The default is <code>true</code>.</p> </li> </ul> <p>The following attributes are supported by only Network Load Balancers:</p> <ul> <li> <p> <code>load_balancing.cross_zone.enabled</code> - Indicates whether cross-zone load balancing is enabled. The value is <code>true</code> or <code>false</code>. The default is <code>false</code>.</p> </li> </ul>'
      Value:
        $ref: '#/definitions/LoadBalancerAttributeValue'
        description: The value of the attribute.
    type: object
  LoadBalancerAttributeKey:
    maxLength: 256
    pattern: '^[a-zA-Z0-9._]+$'
    type: string
  LoadBalancerAttributeValue:
    maxLength: 1024
    type: string
  LoadBalancerAttributes:
    items:
      $ref: '#/definitions/LoadBalancerAttribute'
    maxItems: 20
    type: array
  LoadBalancerName:
    type: string
  LoadBalancerNames:
    items:
      $ref: '#/definitions/LoadBalancerName'
    type: array
  LoadBalancerNotFoundException: {}
  LoadBalancerSchemeEnum:
    enum:
      - internet-facing
      - internal
    type: string
  LoadBalancerState:
    description: Information about the state of the load balancer.
    properties:
      Code:
        $ref: '#/definitions/LoadBalancerStateEnum'
        description: 'The state code. The initial state of the load balancer is <code>provisioning</code>. After the load balancer is fully set up and ready to route traffic, its state is <code>active</code>. If the load balancer could not be set up, its state is <code>failed</code>.'
      Reason:
        $ref: '#/definitions/StateReason'
        description: A description of the state.
    type: object
  LoadBalancerStateEnum:
    enum:
      - active
      - provisioning
      - active_impaired
      - failed
    type: string
  LoadBalancerTypeEnum:
    enum:
      - application
      - network
    type: string
  LoadBalancers:
    items:
      $ref: '#/definitions/LoadBalancer'
    type: array
  Marker:
    type: string
  Matcher:
    description: Information to use when checking for a successful response from a target.
    properties:
      HttpCode:
        $ref: '#/definitions/HttpCode'
        description: '<p>The HTTP codes.</p> <p>For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values (for example, "200,202") or a range of values (for example, "200-299").</p> <p>For Network Load Balancers, this is 200–399.</p>'
    required:
      - HttpCode
    type: object
  Max:
    type: string
  ModifyListenerInput:
    properties:
      Certificates:
        $ref: '#/definitions/CertificateList'
        description: '<p>[HTTPS and TLS listeners] The default certificate for the listener. You must provide exactly one certificate. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.</p> <p>To create a certificate list, use <a>AddListenerCertificates</a>.</p>'
      DefaultActions:
        $ref: '#/definitions/Actions'
        description: '<p>The actions for the default rule. The rule must include one forward action or one or more fixed-response actions.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>'
      ListenerArn:
        $ref: '#/definitions/ListenerArn'
        description: The Amazon Resource Name (ARN) of the listener.
      Port:
        $ref: '#/definitions/Port'
        description: The port for connections from clients to the load balancer.
      Protocol:
        $ref: '#/definitions/ProtocolEnum'
        description: 'The protocol for connections from clients to the load balancer. Application Load Balancers support the HTTP and HTTPS protocols. Network Load Balancers support the TCP, TLS, UDP, and TCP_UDP protocols.'
      SslPolicy:
        $ref: '#/definitions/SslPolicyName'
        description: '[HTTPS and TLS listeners] The security policy that defines which protocols and ciphers are supported. For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies">Security Policies</a> in the <i>Application Load Balancers Guide</i>.'
    required:
      - ListenerArn
    type: object
  ModifyListenerOutput:
    example:
      Listeners:
        - Certificates:
            - CertificateArn: 'arn:aws:iam::123456789012:server-certificate/my-new-server-cert'
          DefaultActions:
            - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
              Type: forward
          ListenerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/0467ef3c8400ae65'
          LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
          Port: 443
          Protocol: HTTPS
          SslPolicy: ELBSecurityPolicy-2015-05
    properties:
      Listeners:
        $ref: '#/definitions/Listeners'
        description: Information about the modified listener.
    type: object
  ModifyLoadBalancerAttributesInput:
    properties:
      Attributes:
        $ref: '#/definitions/LoadBalancerAttributes'
        description: The load balancer attributes.
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
    required:
      - LoadBalancerArn
      - Attributes
    type: object
  ModifyLoadBalancerAttributesOutput:
    example:
      Attributes:
        - Key: access_logs.s3.enabled
          Value: 'true'
        - Key: access_logs.s3.bucket
          Value: my-load-balancer-logs
        - Key: access_logs.s3.prefix
          Value: myapp
        - Key: idle_timeout.timeout_seconds
          Value: '60'
        - Key: deletion_protection.enabled
          Value: 'false'
    properties:
      Attributes:
        $ref: '#/definitions/LoadBalancerAttributes'
        description: Information about the load balancer attributes.
    type: object
  ModifyRuleInput:
    properties:
      Actions:
        $ref: '#/definitions/Actions'
        description: '<p>The actions. Each rule must include exactly one of the following types of actions: <code>forward</code>, <code>fixed-response</code>, or <code>redirect</code>.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>'
      Conditions:
        $ref: '#/definitions/RuleConditionList'
        description: 'The conditions. Each rule can include zero or one of the following conditions: <code>http-request-method</code>, <code>host-header</code>, <code>path-pattern</code>, and <code>source-ip</code>, and zero or more of the following conditions: <code>http-header</code> and <code>query-string</code>.'
      RuleArn:
        $ref: '#/definitions/RuleArn'
        description: The Amazon Resource Name (ARN) of the rule.
    required:
      - RuleArn
    type: object
  ModifyRuleOutput:
    example:
      Rules:
        - Actions:
            - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
              Type: forward
          Conditions:
            - Field: path-pattern
              Values:
                - /images/*
          IsDefault: false
          Priority: '10'
          RuleArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee'
    properties:
      Rules:
        $ref: '#/definitions/Rules'
        description: Information about the modified rule.
    type: object
  ModifyTargetGroupAttributesInput:
    properties:
      Attributes:
        $ref: '#/definitions/TargetGroupAttributes'
        description: The attributes.
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
    required:
      - TargetGroupArn
      - Attributes
    type: object
  ModifyTargetGroupAttributesOutput:
    example:
      Attributes:
        - Key: stickiness.enabled
          Value: 'false'
        - Key: deregistration_delay.timeout_seconds
          Value: '600'
        - Key: stickiness.type
          Value: lb_cookie
        - Key: stickiness.lb_cookie.duration_seconds
          Value: '86400'
    properties:
      Attributes:
        $ref: '#/definitions/TargetGroupAttributes'
        description: Information about the attributes.
    type: object
  ModifyTargetGroupInput:
    properties:
      HealthCheckEnabled:
        $ref: '#/definitions/HealthCheckEnabled'
        description: Indicates whether health checks are enabled.
      HealthCheckIntervalSeconds:
        $ref: '#/definitions/HealthCheckIntervalSeconds'
        description: '<p>The approximate amount of time, in seconds, between health checks of an individual target. For Application Load Balancers, the range is 5 to 300 seconds. For Network Load Balancers, the supported values are 10 or 30 seconds.</p> <p>If the protocol of the target group is TCP, you can''t modify this setting.</p>'
      HealthCheckPath:
        $ref: '#/definitions/Path'
        description: '[HTTP/HTTPS health checks] The ping path that is the destination for the health check request.'
      HealthCheckPort:
        $ref: '#/definitions/HealthCheckPort'
        description: The port the load balancer uses when performing health checks on targets.
      HealthCheckProtocol:
        $ref: '#/definitions/ProtocolEnum'
        description: '<p>The protocol the load balancer uses when performing health checks on targets. The TCP protocol is supported for health checks only if the protocol of the target group is TCP, TLS, UDP, or TCP_UDP. The TLS, UDP, and TCP_UDP protocols are not supported for health checks.</p> <p>If the protocol of the target group is TCP, you can''t modify this setting.</p>'
      HealthCheckTimeoutSeconds:
        $ref: '#/definitions/HealthCheckTimeoutSeconds'
        description: '<p>[HTTP/HTTPS health checks] The amount of time, in seconds, during which no response means a failed health check.</p> <p>If the protocol of the target group is TCP, you can''t modify this setting.</p>'
      HealthyThresholdCount:
        $ref: '#/definitions/HealthCheckThresholdCount'
        description: The number of consecutive health checks successes required before considering an unhealthy target healthy.
      Matcher:
        $ref: '#/definitions/Matcher'
        description: '<p>[HTTP/HTTPS health checks] The HTTP codes to use when checking for a successful response from a target.</p> <p>If the protocol of the target group is TCP, you can''t modify this setting.</p>'
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
      UnhealthyThresholdCount:
        $ref: '#/definitions/HealthCheckThresholdCount'
        description: 'The number of consecutive health check failures required before considering the target unhealthy. For Network Load Balancers, this value must be the same as the healthy threshold count.'
    required:
      - TargetGroupArn
    type: object
  ModifyTargetGroupOutput:
    example:
      TargetGroups:
        - HealthCheckIntervalSeconds: 30
          HealthCheckPort: '443'
          HealthCheckProtocol: HTTPS
          HealthCheckTimeoutSeconds: 5
          HealthyThresholdCount: 5
          LoadBalancerArns:
            - 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
          Matcher:
            HttpCode: '200'
          Port: 443
          Protocol: HTTPS
          TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-https-targets/2453ed029918f21f'
          TargetGroupName: my-https-targets
          UnhealthyThresholdCount: 2
          VpcId: vpc-3ac0fb5f
    properties:
      TargetGroups:
        $ref: '#/definitions/TargetGroups'
        description: Information about the modified target group.
    type: object
  Name:
    type: string
  OperationNotPermittedException: {}
  PageSize:
    maximum: 400
    minimum: 1
    type: integer
  Path:
    maxLength: 1024
    minLength: 1
    type: string
  PathPatternConditionConfig:
    description: Information about a path pattern condition.
    properties:
      Values:
        $ref: '#/definitions/ListOfString'
        description: '<p>One or more path patterns to compare against the request URL. The maximum size of each string is 128 characters. The comparison is case sensitive. The following wildcard characters are supported: * (matches 0 or more characters) and ? (matches exactly 1 character).</p> <p>If you specify multiple strings, the condition is satisfied if one of them matches the request URL. The path pattern is compared only to the path of the URL, not to its query string. To compare against the query string, use <a>QueryStringConditionConfig</a>.</p>'
    type: object
  Port:
    maximum: 65535
    minimum: 1
    type: integer
  PriorityInUseException: {}
  ProtocolEnum:
    enum:
      - HTTP
      - HTTPS
      - TCP
      - TLS
      - UDP
      - TCP_UDP
    type: string
  QueryStringConditionConfig:
    description: '<p>Information about a query string condition.</p> <p>The query string component of a URI starts after the first ''?'' character and is terminated by either a ''#'' character or the end of the URI. A typical query string contains key/value pairs separated by ''&amp;'' characters. The allowed characters are specified by RFC 3986. Any character can be percentage encoded.</p>'
    properties:
      Values:
        $ref: '#/definitions/QueryStringKeyValuePairList'
        description: '<p>One or more key/value pairs or values to find in the query string. The maximum size of each string is 128 characters. The comparison is case insensitive. The following wildcard characters are supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal ''*'' or ''?'' character in a query string, you must escape these characters in <code>Values</code> using a ''\'' character.</p> <p>If you specify multiple key/value pairs or values, the condition is satisfied if one of them is found in the query string.</p>'
    type: object
  QueryStringKeyValuePair:
    description: Information about a key/value pair.
    properties:
      Key:
        $ref: '#/definitions/StringValue'
        description: The key. You can omit the key.
      Value:
        $ref: '#/definitions/StringValue'
        description: The value.
    type: object
  QueryStringKeyValuePairList:
    items:
      $ref: '#/definitions/QueryStringKeyValuePair'
    type: array
  RedirectActionConfig:
    description: '<p>Information about a redirect action.</p> <p>A URI consists of the following components: protocol://hostname:port/path?query. You must modify at least one of the following components to avoid a redirect loop: protocol, hostname, port, or path. Any components that you do not modify retain their original values.</p> <p>You can reuse URI components using the following reserved keywords:</p> <ul> <li> <p>#{protocol}</p> </li> <li> <p>#{host}</p> </li> <li> <p>#{port}</p> </li> <li> <p>#{path} (the leading "/" is removed)</p> </li> <li> <p>#{query}</p> </li> </ul> <p>For example, you can change the path to "/new/#{path}", the hostname to "example.#{host}", or the query to "#{query}&amp;value=xyz".</p>'
    properties:
      Host:
        $ref: '#/definitions/RedirectActionHost'
        description: 'The hostname. This component is not percent-encoded. The hostname can contain #{host}.'
      Path:
        $ref: '#/definitions/RedirectActionPath'
        description: 'The absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}.'
      Port:
        $ref: '#/definitions/RedirectActionPort'
        description: 'The port. You can specify a value from 1 to 65535 or #{port}.'
      Protocol:
        $ref: '#/definitions/RedirectActionProtocol'
        description: 'The protocol. You can specify HTTP, HTTPS, or #{protocol}. You can redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to HTTPS. You cannot redirect HTTPS to HTTP.'
      Query:
        $ref: '#/definitions/RedirectActionQuery'
        description: 'The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?", as it is automatically added. You can specify any of the reserved keywords.'
      StatusCode:
        $ref: '#/definitions/RedirectActionStatusCodeEnum'
        description: The HTTP redirect code. The redirect is either permanent (HTTP 301) or temporary (HTTP 302).
    required:
      - StatusCode
    type: object
  RedirectActionHost:
    maxLength: 128
    minLength: 1
    type: string
  RedirectActionPath:
    maxLength: 128
    minLength: 1
    type: string
  RedirectActionPort:
    type: string
  RedirectActionProtocol:
    pattern: '^(HTTPS?|#\{protocol\})$'
    type: string
  RedirectActionQuery:
    maxLength: 128
    minLength: 0
    type: string
  RedirectActionStatusCodeEnum:
    enum:
      - HTTP_301
      - HTTP_302
    type: string
  RegisterTargetsInput:
    properties:
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
      Targets:
        $ref: '#/definitions/TargetDescriptions'
        description: '<p>The targets.</p> <p>To register a target by instance ID, specify the instance ID. To register a target by IP address, specify the IP address. To register a Lambda function, specify the ARN of the Lambda function.</p>'
    required:
      - TargetGroupArn
      - Targets
    type: object
  RegisterTargetsOutput:
    properties: {}
    type: object
  RemoveListenerCertificatesInput:
    properties:
      Certificates:
        $ref: '#/definitions/CertificateList'
        description: The certificate to remove. You can specify one certificate per call. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.
      ListenerArn:
        $ref: '#/definitions/ListenerArn'
        description: The Amazon Resource Name (ARN) of the listener.
    required:
      - ListenerArn
      - Certificates
    type: object
  RemoveListenerCertificatesOutput:
    properties: {}
    type: object
  RemoveTagsInput:
    properties:
      ResourceArns:
        $ref: '#/definitions/ResourceArns'
        description: The Amazon Resource Name (ARN) of the resource.
      TagKeys:
        $ref: '#/definitions/TagKeys'
        description: The tag keys for the tags to remove.
    required:
      - ResourceArns
      - TagKeys
    type: object
  RemoveTagsOutput:
    properties: {}
    type: object
  ResourceArn:
    type: string
  ResourceArns:
    items:
      $ref: '#/definitions/ResourceArn'
    type: array
  ResourceInUseException: {}
  Rule:
    description: Information about a rule.
    properties:
      Actions:
        $ref: '#/definitions/Actions'
        description: 'The actions. Each rule must include exactly one of the following types of actions: <code>forward</code>, <code>redirect</code>, or <code>fixed-response</code>, and it must be the last action to be performed.'
      Conditions:
        $ref: '#/definitions/RuleConditionList'
        description: 'The conditions. Each rule can include zero or one of the following conditions: <code>http-request-method</code>, <code>host-header</code>, <code>path-pattern</code>, and <code>source-ip</code>, and zero or more of the following conditions: <code>http-header</code> and <code>query-string</code>.'
      IsDefault:
        $ref: '#/definitions/IsDefault'
        description: Indicates whether this is the default rule.
      Priority:
        $ref: '#/definitions/String'
        description: The priority.
      RuleArn:
        $ref: '#/definitions/RuleArn'
        description: The Amazon Resource Name (ARN) of the rule.
    type: object
  RuleArn:
    type: string
  RuleArns:
    items:
      $ref: '#/definitions/RuleArn'
    type: array
  RuleCondition:
    description: Information about a condition for a rule.
    properties:
      Field:
        $ref: '#/definitions/ConditionFieldName'
        description: '<p>The field in the HTTP request. The following are the possible values:</p> <ul> <li> <p> <code>http-header</code> </p> </li> <li> <p> <code>http-request-method</code> </p> </li> <li> <p> <code>host-header</code> </p> </li> <li> <p> <code>path-pattern</code> </p> </li> <li> <p> <code>query-string</code> </p> </li> <li> <p> <code>source-ip</code> </p> </li> </ul>'
      HostHeaderConfig:
        $ref: '#/definitions/HostHeaderConditionConfig'
        description: Information for a host header condition. Specify only when <code>Field</code> is <code>host-header</code>.
      HttpHeaderConfig:
        $ref: '#/definitions/HttpHeaderConditionConfig'
        description: Information for an HTTP header condition. Specify only when <code>Field</code> is <code>http-header</code>.
      HttpRequestMethodConfig:
        $ref: '#/definitions/HttpRequestMethodConditionConfig'
        description: Information for an HTTP method condition. Specify only when <code>Field</code> is <code>http-request-method</code>.
      PathPatternConfig:
        $ref: '#/definitions/PathPatternConditionConfig'
        description: Information for a path pattern condition. Specify only when <code>Field</code> is <code>path-pattern</code>.
      QueryStringConfig:
        $ref: '#/definitions/QueryStringConditionConfig'
        description: Information for a query string condition. Specify only when <code>Field</code> is <code>query-string</code>.
      SourceIpConfig:
        $ref: '#/definitions/SourceIpConditionConfig'
        description: Information for a source IP condition. Specify only when <code>Field</code> is <code>source-ip</code>.
      Values:
        $ref: '#/definitions/ListOfString'
        description: '<p>The condition value. You can use <code>Values</code> if the rule contains only <code>host-header</code> and <code>path-pattern</code> conditions. Otherwise, you can use <code>HostHeaderConfig</code> for <code>host-header</code> conditions and <code>PathPatternConfig</code> for <code>path-pattern</code> conditions.</p> <p>If <code>Field</code> is <code>host-header</code>, you can specify a single host name (for example, my.example.com). A host name is case insensitive, can be up to 128 characters in length, and can contain any of the following characters.</p> <ul> <li> <p>A-Z, a-z, 0-9</p> </li> <li> <p>- .</p> </li> <li> <p>* (matches 0 or more characters)</p> </li> <li> <p>? (matches exactly 1 character)</p> </li> </ul> <p>If <code>Field</code> is <code>path-pattern</code>, you can specify a single path pattern (for example, /img/*). A path pattern is case-sensitive, can be up to 128 characters in length, and can contain any of the following characters.</p> <ul> <li> <p>A-Z, a-z, 0-9</p> </li> <li> <p>_ - . $ / ~ " '' @ : +</p> </li> <li> <p>&amp; (using &amp;amp;)</p> </li> <li> <p>* (matches 0 or more characters)</p> </li> <li> <p>? (matches exactly 1 character)</p> </li> </ul>'
    type: object
  RuleConditionList:
    items:
      $ref: '#/definitions/RuleCondition'
    type: array
  RuleNotFoundException: {}
  RulePriority:
    maximum: 50000
    minimum: 1
    type: integer
  RulePriorityList:
    items:
      $ref: '#/definitions/RulePriorityPair'
    type: array
  RulePriorityPair:
    description: Information about the priorities for the rules for a listener.
    properties:
      Priority:
        $ref: '#/definitions/RulePriority'
        description: The rule priority.
      RuleArn:
        $ref: '#/definitions/RuleArn'
        description: The Amazon Resource Name (ARN) of the rule.
    type: object
  Rules:
    items:
      $ref: '#/definitions/Rule'
    type: array
  SSLPolicyNotFoundException: {}
  SecurityGroupId:
    type: string
  SecurityGroups:
    items:
      $ref: '#/definitions/SecurityGroupId'
    type: array
  SetIpAddressTypeInput:
    properties:
      IpAddressType:
        $ref: '#/definitions/IpAddressType'
        description: The IP address type. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses). Internal load balancers must use <code>ipv4</code>. Network Load Balancers must use <code>ipv4</code>.
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
    required:
      - LoadBalancerArn
      - IpAddressType
    type: object
  SetIpAddressTypeOutput:
    properties:
      IpAddressType:
        $ref: '#/definitions/IpAddressType'
        description: The IP address type.
    type: object
  SetRulePrioritiesInput:
    properties:
      RulePriorities:
        $ref: '#/definitions/RulePriorityList'
        description: The rule priorities.
    required:
      - RulePriorities
    type: object
  SetRulePrioritiesOutput:
    example:
      Rules:
        - Actions:
            - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
              Type: forward
          Conditions:
            - Field: path-pattern
              Values:
                - /img/*
          IsDefault: false
          Priority: '5'
          RuleArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/1291d13826f405c3'
    properties:
      Rules:
        $ref: '#/definitions/Rules'
        description: Information about the rules.
    type: object
  SetSecurityGroupsInput:
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      SecurityGroups:
        $ref: '#/definitions/SecurityGroups'
        description: The IDs of the security groups.
    required:
      - LoadBalancerArn
      - SecurityGroups
    type: object
  SetSecurityGroupsOutput:
    example:
      SecurityGroupIds:
        - sg-5943793c
    properties:
      SecurityGroupIds:
        $ref: '#/definitions/SecurityGroups'
        description: The IDs of the security groups associated with the load balancer.
    type: object
  SetSubnetsInput:
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      SubnetMappings:
        $ref: '#/definitions/SubnetMappings'
        description: <p>The IDs of the public subnets. You must specify subnets from at least two Availability Zones. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>You cannot specify Elastic IP addresses for your subnets.</p>
      Subnets:
        $ref: '#/definitions/Subnets'
        description: The IDs of the public subnets. You must specify subnets from at least two Availability Zones. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.
    required:
      - LoadBalancerArn
    type: object
  SetSubnetsOutput:
    example:
      AvailabilityZones:
        - SubnetId: subnet-8360a9e7
          ZoneName: us-west-2a
        - SubnetId: subnet-b7d581c0
          ZoneName: us-west-2b
    properties:
      AvailabilityZones:
        $ref: '#/definitions/AvailabilityZones'
        description: Information about the subnet and Availability Zone.
    type: object
  SourceIpConditionConfig:
    description: '<p>Information about a source IP condition.</p> <p>You can use this condition to route based on the IP address of the source that connects to the load balancer. If a client is behind a proxy, this is the IP address of the proxy not the IP address of the client.</p>'
    properties:
      Values:
        $ref: '#/definitions/ListOfString'
        description: '<p>One or more source IP addresses, in CIDR format. You can use both IPv4 and IPv6 addresses. Wildcards are not supported.</p> <p>If you specify multiple addresses, the condition is satisfied if the source IP address of the request matches one of the CIDR blocks. This condition is not satisfied by the addresses in the X-Forwarded-For header. To search for addresses in the X-Forwarded-For header, use <a>HttpHeaderConditionConfig</a>.</p>'
    type: object
  SslPolicies:
    items:
      $ref: '#/definitions/SslPolicy'
    type: array
  SslPolicy:
    description: Information about a policy used for SSL negotiation.
    properties:
      Ciphers:
        $ref: '#/definitions/Ciphers'
        description: The ciphers.
      Name:
        $ref: '#/definitions/SslPolicyName'
        description: The name of the policy.
      SslProtocols:
        $ref: '#/definitions/SslProtocols'
        description: The protocols.
    type: object
  SslPolicyName:
    type: string
  SslPolicyNames:
    items:
      $ref: '#/definitions/SslPolicyName'
    type: array
  SslProtocol:
    type: string
  SslProtocols:
    items:
      $ref: '#/definitions/SslProtocol'
    type: array
  StateReason:
    type: string
  String:
    type: string
  StringValue:
    type: string
  SubnetId:
    type: string
  SubnetMapping:
    description: Information about a subnet mapping.
    properties:
      AllocationId:
        $ref: '#/definitions/AllocationId'
        description: '[Network Load Balancers] The allocation ID of the Elastic IP address.'
      SubnetId:
        $ref: '#/definitions/SubnetId'
        description: The ID of the subnet.
    type: object
  SubnetMappings:
    items:
      $ref: '#/definitions/SubnetMapping'
    type: array
  SubnetNotFoundException: {}
  Subnets:
    items:
      $ref: '#/definitions/SubnetId'
    type: array
  Tag:
    description: Information about a tag.
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: The key of the tag.
      Value:
        $ref: '#/definitions/TagValue'
        description: The value of the tag.
    required:
      - Key
    type: object
  TagDescription:
    description: The tags associated with a resource.
    properties:
      ResourceArn:
        $ref: '#/definitions/ResourceArn'
        description: The Amazon Resource Name (ARN) of the resource.
      Tags:
        $ref: '#/definitions/TagList'
        description: Information about the tags.
    type: object
  TagDescriptions:
    items:
      $ref: '#/definitions/TagDescription'
    type: array
  TagKey:
    maxLength: 128
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  TagKeys:
    items:
      $ref: '#/definitions/TagKey'
    type: array
  TagList:
    items:
      $ref: '#/definitions/Tag'
    minItems: 1
    type: array
  TagValue:
    maxLength: 256
    minLength: 0
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  TargetDescription:
    description: Information about a target.
    properties:
      AvailabilityZone:
        $ref: '#/definitions/ZoneName'
        description: '<p>An Availability Zone or <code>all</code>. This determines whether the target receives traffic from the load balancer nodes in the specified Availability Zone or from all enabled Availability Zones for the load balancer.</p> <p>This parameter is not supported if the target type of the target group is <code>instance</code>.</p> <p>If the target type is <code>ip</code> and the IP address is in a subnet of the VPC for the target group, the Availability Zone is automatically detected and this parameter is optional. If the IP address is outside the VPC, this parameter is required.</p> <p>With an Application Load Balancer, if the target type is <code>ip</code> and the IP address is outside the VPC for the target group, the only supported value is <code>all</code>.</p> <p>If the target type is <code>lambda</code>, this parameter is optional and the only supported value is <code>all</code>.</p>'
      Id:
        $ref: '#/definitions/TargetId'
        description: 'The ID of the target. If the target type of the target group is <code>instance</code>, specify an instance ID. If the target type is <code>ip</code>, specify an IP address. If the target type is <code>lambda</code>, specify the ARN of the Lambda function.'
      Port:
        $ref: '#/definitions/Port'
        description: The port on which the target is listening.
    required:
      - Id
    type: object
  TargetDescriptions:
    items:
      $ref: '#/definitions/TargetDescription'
    type: array
  TargetGroup:
    description: Information about a target group.
    properties:
      HealthCheckEnabled:
        $ref: '#/definitions/HealthCheckEnabled'
        description: Indicates whether health checks are enabled.
      HealthCheckIntervalSeconds:
        $ref: '#/definitions/HealthCheckIntervalSeconds'
        description: 'The approximate amount of time, in seconds, between health checks of an individual target.'
      HealthCheckPath:
        $ref: '#/definitions/Path'
        description: The destination for the health check request.
      HealthCheckPort:
        $ref: '#/definitions/HealthCheckPort'
        description: The port to use to connect with the target.
      HealthCheckProtocol:
        $ref: '#/definitions/ProtocolEnum'
        description: The protocol to use to connect with the target.
      HealthCheckTimeoutSeconds:
        $ref: '#/definitions/HealthCheckTimeoutSeconds'
        description: 'The amount of time, in seconds, during which no response means a failed health check.'
      HealthyThresholdCount:
        $ref: '#/definitions/HealthCheckThresholdCount'
        description: The number of consecutive health checks successes required before considering an unhealthy target healthy.
      LoadBalancerArns:
        $ref: '#/definitions/LoadBalancerArns'
        description: The Amazon Resource Names (ARN) of the load balancers that route traffic to this target group.
      Matcher:
        $ref: '#/definitions/Matcher'
        description: The HTTP codes to use when checking for a successful response from a target.
      Port:
        $ref: '#/definitions/Port'
        description: The port on which the targets are listening.
      Protocol:
        $ref: '#/definitions/ProtocolEnum'
        description: The protocol to use for routing traffic to the targets.
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
      TargetGroupName:
        $ref: '#/definitions/TargetGroupName'
        description: The name of the target group.
      TargetType:
        $ref: '#/definitions/TargetTypeEnum'
        description: The type of target that you must specify when registering targets with this target group. The possible values are <code>instance</code> (targets are specified by instance ID) or <code>ip</code> (targets are specified by IP address).
      UnhealthyThresholdCount:
        $ref: '#/definitions/HealthCheckThresholdCount'
        description: The number of consecutive health check failures required before considering the target unhealthy.
      VpcId:
        $ref: '#/definitions/VpcId'
        description: The ID of the VPC for the targets.
    type: object
  TargetGroupArn:
    type: string
  TargetGroupArns:
    items:
      $ref: '#/definitions/TargetGroupArn'
    type: array
  TargetGroupAssociationLimitException: {}
  TargetGroupAttribute:
    description: Information about a target group attribute.
    properties:
      Key:
        $ref: '#/definitions/TargetGroupAttributeKey'
        description: '<p>The name of the attribute.</p> <p>The following attribute is supported by both Application Load Balancers and Network Load Balancers:</p> <ul> <li> <p> <code>deregistration_delay.timeout_seconds</code> - The amount of time, in seconds, for Elastic Load Balancing to wait before changing the state of a deregistering target from <code>draining</code> to <code>unused</code>. The range is 0-3600 seconds. The default value is 300 seconds. If the target is a Lambda function, this attribute is not supported.</p> </li> </ul> <p>The following attributes are supported by Application Load Balancers if the target is not a Lambda function:</p> <ul> <li> <p> <code>slow_start.duration_seconds</code> - The time period, in seconds, during which a newly registered target receives a linearly increasing share of the traffic to the target group. After this time period ends, the target receives its full share of traffic. The range is 30-900 seconds (15 minutes). Slow start mode is disabled by default.</p> </li> <li> <p> <code>stickiness.enabled</code> - Indicates whether sticky sessions are enabled. The value is <code>true</code> or <code>false</code>. The default is <code>false</code>.</p> </li> <li> <p> <code>stickiness.type</code> - The type of sticky sessions. The possible value is <code>lb_cookie</code>.</p> </li> <li> <p> <code>stickiness.lb_cookie.duration_seconds</code> - The time period, in seconds, during which requests from a client should be routed to the same target. After this time period expires, the load balancer-generated cookie is considered stale. The range is 1 second to 1 week (604800 seconds). The default value is 1 day (86400 seconds).</p> </li> </ul> <p>The following attribute is supported only if the target is a Lambda function.</p> <ul> <li> <p> <code>lambda.multi_value_headers.enabled</code> - Indicates whether the request and response headers exchanged between the load balancer and the Lambda function include arrays of values or strings. The value is <code>true</code> or <code>false</code>. The default is <code>false</code>. If the value is <code>false</code> and the request contains a duplicate header field name or query parameter key, the load balancer uses the last value sent by the client.</p> </li> </ul> <p>The following attribute is supported only by Network Load Balancers:</p> <ul> <li> <p> <code>proxy_protocol_v2.enabled</code> - Indicates whether Proxy Protocol version 2 is enabled. The value is <code>true</code> or <code>false</code>. The default is <code>false</code>.</p> </li> </ul>'
      Value:
        $ref: '#/definitions/TargetGroupAttributeValue'
        description: The value of the attribute.
    type: object
  TargetGroupAttributeKey:
    maxLength: 256
    pattern: '^[a-zA-Z0-9._]+$'
    type: string
  TargetGroupAttributeValue:
    type: string
  TargetGroupAttributes:
    items:
      $ref: '#/definitions/TargetGroupAttribute'
    type: array
  TargetGroupName:
    type: string
  TargetGroupNames:
    items:
      $ref: '#/definitions/TargetGroupName'
    type: array
  TargetGroupNotFoundException: {}
  TargetGroups:
    items:
      $ref: '#/definitions/TargetGroup'
    type: array
  TargetHealth:
    description: Information about the current health of a target.
    properties:
      Description:
        $ref: '#/definitions/Description'
        description: 'A description of the target health that provides additional details. If the state is <code>healthy</code>, a description is not provided.'
      Reason:
        $ref: '#/definitions/TargetHealthReasonEnum'
        description: '<p>The reason code.</p> <p>If the target state is <code>healthy</code>, a reason code is not provided.</p> <p>If the target state is <code>initial</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Elb.RegistrationInProgress</code> - The target is in the process of being registered with the load balancer.</p> </li> <li> <p> <code>Elb.InitialHealthChecking</code> - The load balancer is still sending the target the minimum number of health checks required to determine its health status.</p> </li> </ul> <p>If the target state is <code>unhealthy</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.ResponseCodeMismatch</code> - The health checks did not return an expected HTTP code.</p> </li> <li> <p> <code>Target.Timeout</code> - The health check requests timed out.</p> </li> <li> <p> <code>Target.FailedHealthChecks</code> - The load balancer received an error while establishing a connection to the target or the target response was malformed.</p> </li> <li> <p> <code>Elb.InternalError</code> - The health checks failed due to an internal error.</p> </li> </ul> <p>If the target state is <code>unused</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.NotRegistered</code> - The target is not registered with the target group.</p> </li> <li> <p> <code>Target.NotInUse</code> - The target group is not used by any load balancer or the target is in an Availability Zone that is not enabled for its load balancer.</p> </li> <li> <p> <code>Target.IpUnusable</code> - The target IP address is reserved for use by a load balancer.</p> </li> <li> <p> <code>Target.InvalidState</code> - The target is in the stopped or terminated state.</p> </li> </ul> <p>If the target state is <code>draining</code>, the reason code can be the following value:</p> <ul> <li> <p> <code>Target.DeregistrationInProgress</code> - The target is in the process of being deregistered and the deregistration delay period has not expired.</p> </li> </ul> <p>If the target state is <code>unavailable</code>, the reason code can be the following value:</p> <ul> <li> <p> <code>Target.HealthCheckDisabled</code> - Health checks are disabled for the target group.</p> </li> </ul>'
      State:
        $ref: '#/definitions/TargetHealthStateEnum'
        description: The state of the target.
    type: object
  TargetHealthDescription:
    description: Information about the health of a target.
    properties:
      HealthCheckPort:
        $ref: '#/definitions/HealthCheckPort'
        description: The port to use to connect with the target.
      Target:
        $ref: '#/definitions/TargetDescription'
        description: The description of the target.
      TargetHealth:
        $ref: '#/definitions/TargetHealth'
        description: The health information for the target.
    type: object
  TargetHealthDescriptions:
    items:
      $ref: '#/definitions/TargetHealthDescription'
    type: array
  TargetHealthReasonEnum:
    enum:
      - Elb.RegistrationInProgress
      - Elb.InitialHealthChecking
      - Target.ResponseCodeMismatch
      - Target.Timeout
      - Target.FailedHealthChecks
      - Target.NotRegistered
      - Target.NotInUse
      - Target.DeregistrationInProgress
      - Target.InvalidState
      - Target.IpUnusable
      - Target.HealthCheckDisabled
      - Elb.InternalError
    type: string
  TargetHealthStateEnum:
    enum:
      - initial
      - healthy
      - unhealthy
      - unused
      - draining
      - unavailable
    type: string
  TargetId:
    type: string
  TargetTypeEnum:
    enum:
      - instance
      - ip
      - lambda
    type: string
  TooManyActionsException: {}
  TooManyCertificatesException: {}
  TooManyListenersException: {}
  TooManyLoadBalancersException: {}
  TooManyRegistrationsForTargetIdException: {}
  TooManyRulesException: {}
  TooManyTagsException: {}
  TooManyTargetGroupsException: {}
  TooManyTargetsException: {}
  UnsupportedProtocolException: {}
  VpcId:
    type: string
  ZoneName:
    type: string
x-servers:
  - description: The Elastic Load Balancing v2 multi-region endpoint
    url: 'http://elasticloadbalancing.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The Elastic Load Balancing v2 multi-region endpoint
    url: 'https://elasticloadbalancing.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The general Elastic Load Balancing v2 endpoint for US East (N. Virginia)
    url: 'http://elasticloadbalancing.amazonaws.com'
    variables: {}
  - description: The general Elastic Load Balancing v2 endpoint for US East (N. Virginia)
    url: 'https://elasticloadbalancing.amazonaws.com'
    variables: {}
  - description: The Elastic Load Balancing v2 endpoint for China (Beijing) and China (Ningxia)
    url: 'http://elasticloadbalancing.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
  - description: The Elastic Load Balancing v2 endpoint for China (Beijing) and China (Ningxia)
    url: 'https://elasticloadbalancing.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
