swagger: '2.0'
info:
  version: '2016-04-12'
  x-release: v4
  title: AWS X-Ray
  description: AWS X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: xray
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/xray-2016-04-12.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/xray/'
host: xray.amazonaws.com
basePath: /
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /Traces:
    post:
      operationId: BatchGetTraces
      description: Retrieves a list of traces specified by ID. Each trace is a collection of segment documents that originates from a single request. Use <code>GetTraceSummaries</code> to get a list of trace IDs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchGetTracesResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/BatchGetTracesRequest'
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /CreateGroup:
    post:
      operationId: CreateGroup
      description: 'Creates a group resource with a name and a filter expression. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateGroupResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /CreateSamplingRule:
    post:
      operationId: CreateSamplingRule
      description: 'Creates a rule to control sampling behavior for instrumented applications. Services retrieve rules with <a>GetSamplingRules</a>, and evaluate each rule in ascending order of <i>priority</i> for each request. If a rule matches, the service records a trace, borrowing it from the reservoir size. After 10 seconds, the service reports back to X-Ray with <a>GetSamplingTargets</a> to get updated versions of each in-use rule. The updated rule contains a trace quota that the service can use instead of borrowing from the reservoir.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSamplingRuleResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
        '482':
          description: RuleLimitExceededException
          schema:
            $ref: '#/definitions/RuleLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateSamplingRuleRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /DeleteGroup:
    post:
      operationId: DeleteGroup
      description: Deletes a group resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteGroupResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /DeleteSamplingRule:
    post:
      operationId: DeleteSamplingRule
      description: Deletes a sampling rule.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteSamplingRuleResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteSamplingRuleRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /EncryptionConfig:
    post:
      operationId: GetEncryptionConfig
      description: Retrieves the current encryption configuration for X-Ray data.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetEncryptionConfigResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetEncryptionConfigRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /GetGroup:
    post:
      operationId: GetGroup
      description: Retrieves group resource details.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetGroupResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /Groups:
    post:
      operationId: GetGroups
      description: Retrieves all active group details.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetGroupsResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetGroupsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /GetSamplingRules:
    post:
      operationId: GetSamplingRules
      description: Retrieves all sampling rules.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSamplingRulesResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetSamplingRulesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /SamplingStatisticSummaries:
    post:
      operationId: GetSamplingStatisticSummaries
      description: Retrieves information about recent sampling results for all sampling rules.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSamplingStatisticSummariesResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetSamplingStatisticSummariesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /SamplingTargets:
    post:
      operationId: GetSamplingTargets
      description: 'Requests a sampling quota for rules that the service is using to sample requests. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSamplingTargetsResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetSamplingTargetsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /ServiceGraph:
    post:
      operationId: GetServiceGraph
      description: 'Retrieves a document that describes services that process incoming requests, and downstream services that they call as a result. Root services process incoming requests and make calls to downstream services. Root services are applications that use the AWS X-Ray SDK. Downstream services can be other applications, AWS resources, HTTP web APIs, or SQL databases.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetServiceGraphResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetServiceGraphRequest'
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /TraceGraph:
    post:
      operationId: GetTraceGraph
      description: Retrieves a service graph for one or more specific trace IDs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTraceGraphResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetTraceGraphRequest'
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /TraceSummaries:
    post:
      operationId: GetTraceSummaries
      description: '<p>Retrieves IDs and metadata for traces available for a specified time frame using an optional filter. To get the full traces, pass the trace IDs to <code>BatchGetTraces</code>.</p> <p>A filter expression can target traced requests that hit specific service nodes or edges, have errors, or come from a known user. For example, the following filter expression targets traces that pass through <code>api.example.com</code>:</p> <p> <code>service("api.example.com")</code> </p> <p>This filter expression finds traces that have an annotation named <code>account</code> with the value <code>12345</code>:</p> <p> <code>annotation.account = "12345"</code> </p> <p>For a full list of indexed fields and keywords that you can use in filter expressions, see <a href="http://docs.aws.amazon.com/xray/latest/devguide/xray-console-filters.html">Using Filter Expressions</a> in the <i>AWS X-Ray Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTraceSummariesResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetTraceSummariesRequest'
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /PutEncryptionConfig:
    post:
      operationId: PutEncryptionConfig
      description: Updates the encryption configuration for X-Ray data.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutEncryptionConfigResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutEncryptionConfigRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /TelemetryRecords:
    post:
      operationId: PutTelemetryRecords
      description: Used by the AWS X-Ray daemon to upload telemetry.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutTelemetryRecordsResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutTelemetryRecordsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /TraceSegments:
    post:
      operationId: PutTraceSegments
      description: '<p>Uploads segment documents to AWS X-Ray. The X-Ray SDK generates segment documents and sends them to the X-Ray daemon, which uploads them in batches. A segment document can be a completed segment, an in-progress segment, or an array of subsegments.</p> <p>Segments must include the following fields. For the full segment document schema, see <a href="https://docs.aws.amazon.com/xray/latest/devguide/xray-api-segmentdocuments.html">AWS X-Ray Segment Documents</a> in the <i>AWS X-Ray Developer Guide</i>.</p> <p class="title"> <b>Required Segment Document Fields</b> </p> <ul> <li> <p> <code>name</code> - The name of the service that handled the request.</p> </li> <li> <p> <code>id</code> - A 64-bit identifier for the segment, unique among segments in the same trace, in 16 hexadecimal digits.</p> </li> <li> <p> <code>trace_id</code> - A unique identifier that connects all segments and subsegments originating from a single client request.</p> </li> <li> <p> <code>start_time</code> - Time the segment or subsegment was created, in floating point seconds in epoch time, accurate to milliseconds. For example, <code>1480615200.010</code> or <code>1.480615200010E9</code>.</p> </li> <li> <p> <code>end_time</code> - Time the segment or subsegment was closed. For example, <code>1480615200.090</code> or <code>1.480615200090E9</code>. Specify either an <code>end_time</code> or <code>in_progress</code>.</p> </li> <li> <p> <code>in_progress</code> - Set to <code>true</code> instead of specifying an <code>end_time</code> to record that a segment has been started, but is not complete. Send an in progress segment when your application receives a request that will take a long time to serve, to trace the fact that the request was received. When the response is sent, send the complete segment to overwrite the in-progress segment.</p> </li> </ul> <p>A <code>trace_id</code> consists of three numbers separated by hyphens. For example, 1-58406520-a006649127e371903a2de979. This includes:</p> <p class="title"> <b>Trace ID Format</b> </p> <ul> <li> <p>The version number, i.e. <code>1</code>.</p> </li> <li> <p>The time of the original request, in Unix epoch time, in 8 hexadecimal digits. For example, 10:00AM December 2nd, 2016 PST in epoch time is <code>1480615200</code> seconds, or <code>58406520</code> in hexadecimal.</p> </li> <li> <p>A 96-bit identifier for the trace, globally unique, in 24 hexadecimal digits.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutTraceSegmentsResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutTraceSegmentsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /UpdateGroup:
    post:
      operationId: UpdateGroup
      description: Updates a group resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateGroupResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /UpdateSamplingRule:
    post:
      operationId: UpdateSamplingRule
      description: Modifies a sampling rule's configuration.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateSamplingRuleResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSamplingRuleRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  BatchGetTracesResult:
    type: object
    properties:
      Traces:
        $ref: '#/definitions/[object Object]'
        description: Full traces for the specified requests.
      UnprocessedTraceIds:
        $ref: '#/definitions/[object Object]'
        description: Trace IDs of requests that haven't been processed.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: Pagination token. Not used.
  BatchGetTracesRequest:
    type: object
    required:
      - TraceIds
    properties:
      TraceIds:
        $ref: '#/definitions/[object Object]'
        description: Specify the trace IDs of requests for which to retrieve segments.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: Pagination token. Not used.
  InvalidRequestException: {}
  ThrottledException: {}
  CreateGroupResult:
    type: object
    properties:
      Group:
        $ref: '#/definitions/[object Object]'
        description: 'The group that was created. Contains the name of the group that was created, the ARN of the group that was generated based on the group name, and the filter expression that was assigned to the group.'
  CreateGroupRequest:
    type: object
    required:
      - GroupName
    properties:
      GroupName:
        $ref: '#/definitions/[object Object]'
        description: The case-sensitive name of the new group. Default is a reserved name and names must be unique.
      FilterExpression:
        $ref: '#/definitions/[object Object]'
        description: The filter expression defining criteria by which to group traces.
  CreateSamplingRuleResult:
    type: object
    properties:
      SamplingRuleRecord:
        $ref: '#/definitions/[object Object]'
        description: The saved rule definition and metadata.
  CreateSamplingRuleRequest:
    type: object
    required:
      - SamplingRule
    properties:
      SamplingRule:
        $ref: '#/definitions/[object Object]'
        description: The rule definition.
  RuleLimitExceededException: {}
  DeleteGroupResult:
    type: object
    properties: {}
  DeleteGroupRequest:
    type: object
    properties:
      GroupName:
        $ref: '#/definitions/[object Object]'
        description: The case-sensitive name of the group.
      GroupARN:
        $ref: '#/definitions/[object Object]'
        description: The ARN of the group that was generated on creation.
  DeleteSamplingRuleResult:
    type: object
    properties:
      SamplingRuleRecord:
        $ref: '#/definitions/[object Object]'
        description: The deleted rule definition and metadata.
  DeleteSamplingRuleRequest:
    type: object
    properties:
      RuleName:
        $ref: '#/definitions/[object Object]'
        description: 'The name of the sampling rule. Specify a rule by either name or ARN, but not both.'
      RuleARN:
        $ref: '#/definitions/[object Object]'
        description: 'The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.'
  GetEncryptionConfigResult:
    type: object
    properties:
      EncryptionConfig:
        $ref: '#/definitions/[object Object]'
        description: The encryption configuration document.
  GetEncryptionConfigRequest:
    type: object
    properties: {}
  GetGroupResult:
    type: object
    properties:
      Group:
        $ref: '#/definitions/[object Object]'
        description: 'The group that was requested. Contains the name of the group, the ARN of the group, and the filter expression that assigned to the group.'
  GetGroupRequest:
    type: object
    properties:
      GroupName:
        $ref: '#/definitions/[object Object]'
        description: The case-sensitive name of the group.
      GroupARN:
        $ref: '#/definitions/[object Object]'
        description: The ARN of the group that was generated on creation.
  GetGroupsResult:
    type: object
    properties:
      Groups:
        $ref: '#/definitions/[object Object]'
        description: The collection of all active groups.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: Pagination token. Not used.
  GetGroupsRequest:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: Pagination token. Not used.
  GetSamplingRulesResult:
    type: object
    properties:
      SamplingRuleRecords:
        $ref: '#/definitions/[object Object]'
        description: Rule definitions and metadata.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: Pagination token. Not used.
  GetSamplingRulesRequest:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: Pagination token. Not used.
  GetSamplingStatisticSummariesResult:
    type: object
    properties:
      SamplingStatisticSummaries:
        $ref: '#/definitions/[object Object]'
        description: Information about the number of requests instrumented for each sampling rule.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: Pagination token. Not used.
  GetSamplingStatisticSummariesRequest:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: Pagination token. Not used.
  GetSamplingTargetsResult:
    type: object
    properties:
      SamplingTargetDocuments:
        $ref: '#/definitions/[object Object]'
        description: Updated rules that the service should use to sample requests.
      LastRuleModification:
        $ref: '#/definitions/[object Object]'
        description: 'The last time a user changed the sampling rule configuration. If the sampling rule configuration changed since the service last retrieved it, the service should call <a>GetSamplingRules</a> to get the latest version.'
      UnprocessedStatistics:
        $ref: '#/definitions/[object Object]'
        description: Information about <a>SamplingStatisticsDocument</a> that X-Ray could not process.
  GetSamplingTargetsRequest:
    type: object
    required:
      - SamplingStatisticsDocuments
    properties:
      SamplingStatisticsDocuments:
        $ref: '#/definitions/[object Object]'
        description: Information about rules that the service is using to sample requests.
  GetServiceGraphResult:
    type: object
    properties:
      StartTime:
        $ref: '#/definitions/[object Object]'
        description: The start of the time frame for which the graph was generated.
      EndTime:
        $ref: '#/definitions/[object Object]'
        description: The end of the time frame for which the graph was generated.
      Services:
        $ref: '#/definitions/[object Object]'
        description: The services that have processed a traced request during the specified time frame.
      ContainsOldGroupVersions:
        $ref: '#/definitions/[object Object]'
        description: 'A flag indicating whether the group''s filter expression has been consistent, or if the returned service graph may show traces from an older version of the group''s filter expression.'
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: Pagination token. Not used.
  GetServiceGraphRequest:
    type: object
    required:
      - StartTime
      - EndTime
    properties:
      StartTime:
        $ref: '#/definitions/[object Object]'
        description: The start of the time frame for which to generate a graph.
      EndTime:
        $ref: '#/definitions/[object Object]'
        description: The end of the timeframe for which to generate a graph.
      GroupName:
        $ref: '#/definitions/[object Object]'
        description: The name of a group to generate a graph based on.
      GroupARN:
        $ref: '#/definitions/[object Object]'
        description: The ARN of a group to generate a graph based on.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: Pagination token. Not used.
  GetTraceGraphResult:
    type: object
    properties:
      Services:
        $ref: '#/definitions/[object Object]'
        description: The services that have processed one of the specified requests.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: Pagination token. Not used.
  GetTraceGraphRequest:
    type: object
    required:
      - TraceIds
    properties:
      TraceIds:
        $ref: '#/definitions/[object Object]'
        description: Trace IDs of requests for which to generate a service graph.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: Pagination token. Not used.
  GetTraceSummariesResult:
    type: object
    properties:
      TraceSummaries:
        $ref: '#/definitions/[object Object]'
        description: Trace IDs and metadata for traces that were found in the specified time frame.
      ApproximateTime:
        $ref: '#/definitions/[object Object]'
        description: The start time of this page of results.
      TracesProcessedCount:
        $ref: '#/definitions/[object Object]'
        description: 'The total number of traces processed, including traces that did not match the specified filter expression.'
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: 'If the requested time frame contained more than one page of results, you can use this token to retrieve the next page. The first page contains the most most recent results, closest to the end of the time frame.'
  GetTraceSummariesRequest:
    type: object
    required:
      - StartTime
      - EndTime
    properties:
      StartTime:
        $ref: '#/definitions/[object Object]'
        description: The start of the time frame for which to retrieve traces.
      EndTime:
        $ref: '#/definitions/[object Object]'
        description: The end of the time frame for which to retrieve traces.
      Sampling:
        $ref: '#/definitions/[object Object]'
        description: Set to <code>true</code> to get summaries for only a subset of available traces.
      FilterExpression:
        $ref: '#/definitions/[object Object]'
        description: Specify a filter expression to retrieve trace summaries for services or requests that meet certain requirements.
      NextToken:
        $ref: '#/definitions/[object Object]'
        description: Specify the pagination token returned by a previous request to retrieve the next page of results.
  PutEncryptionConfigResult:
    type: object
    properties:
      EncryptionConfig:
        $ref: '#/definitions/[object Object]'
        description: The new encryption configuration.
  PutEncryptionConfigRequest:
    type: object
    required:
      - Type
    properties:
      KeyId:
        $ref: '#/definitions/[object Object]'
        description: '<p>An AWS KMS customer master key (CMK) in one of the following formats:</p> <ul> <li> <p> <b>Alias</b> - The name of the key. For example, <code>alias/MyKey</code>.</p> </li> <li> <p> <b>Key ID</b> - The KMS key ID of the key. For example, <code>ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</code>.</p> </li> <li> <p> <b>ARN</b> - The full Amazon Resource Name of the key ID or alias. For example, <code>arn:aws:kms:us-east-2:123456789012:key/ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</code>. Use this format to specify a key in a different account.</p> </li> </ul> <p>Omit this key if you set <code>Type</code> to <code>NONE</code>.</p>'
      Type:
        $ref: '#/definitions/[object Object]'
        description: The type of encryption. Set to <code>KMS</code> to use your own key for encryption. Set to <code>NONE</code> for default encryption.
  PutTelemetryRecordsResult:
    type: object
    properties: {}
  PutTelemetryRecordsRequest:
    type: object
    required:
      - TelemetryRecords
    properties:
      TelemetryRecords:
        $ref: '#/definitions/[object Object]'
        description: <p/>
      EC2InstanceId:
        $ref: '#/definitions/[object Object]'
        description: <p/>
      Hostname:
        $ref: '#/definitions/[object Object]'
        description: <p/>
      ResourceARN:
        $ref: '#/definitions/[object Object]'
        description: <p/>
  PutTraceSegmentsResult:
    type: object
    properties:
      UnprocessedTraceSegments:
        $ref: '#/definitions/[object Object]'
        description: Segments that failed processing.
  PutTraceSegmentsRequest:
    type: object
    required:
      - TraceSegmentDocuments
    properties:
      TraceSegmentDocuments:
        $ref: '#/definitions/[object Object]'
        description: A string containing a JSON document defining one or more segments or subsegments.
  UpdateGroupResult:
    type: object
    properties:
      Group:
        $ref: '#/definitions/[object Object]'
        description: 'The group that was updated. Contains the name of the group that was updated, the ARN of the group that was updated, and the updated filter expression assigned to the group.'
  UpdateGroupRequest:
    type: object
    properties:
      GroupName:
        $ref: '#/definitions/[object Object]'
        description: The case-sensitive name of the group.
      GroupARN:
        $ref: '#/definitions/[object Object]'
        description: The ARN that was generated upon creation.
      FilterExpression:
        $ref: '#/definitions/[object Object]'
        description: The updated filter expression defining criteria by which to group traces.
  UpdateSamplingRuleResult:
    type: object
    properties:
      SamplingRuleRecord:
        $ref: '#/definitions/[object Object]'
        description: The updated rule definition and metadata.
  UpdateSamplingRuleRequest:
    type: object
    required:
      - SamplingRuleUpdate
    properties:
      SamplingRuleUpdate:
        $ref: '#/definitions/[object Object]'
        description: The rule and fields to change.
  '[object Object]': {}
  Alias:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The canonical name of the alias.
      Names:
        $ref: '#/definitions/[object Object]'
        description: 'A list of names for the alias, including the canonical name.'
      Type:
        $ref: '#/definitions/[object Object]'
        description: The type of the alias.
    description: An alias for an edge.
  AliasList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  AliasNames:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  AnnotationKey:
    type: string
  AnnotationValue:
    type: object
    properties:
      NumberValue:
        $ref: '#/definitions/[object Object]'
        description: Value for a Number annotation.
      BooleanValue:
        $ref: '#/definitions/[object Object]'
        description: Value for a Boolean annotation.
      StringValue:
        $ref: '#/definitions/[object Object]'
        description: Value for a String annotation.
    description: 'Value of a segment annotation. Has one of three value types: Number, Boolean or String.'
  ValuesWithServiceIds:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  Annotations:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AnnotationKey'
        value:
          $ref: '#/definitions/ValuesWithServiceIds'
  AttributeKey:
    type: string
    minLength: 1
    maxLength: 32
  AttributeValue:
    type: string
    minLength: 1
    maxLength: 32
  AttributeMap:
    type: array
    maxItems: 5
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AttributeKey'
        value:
          $ref: '#/definitions/AttributeValue'
  AvailabilityZoneDetail:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of a corresponding availability zone.
    description: A list of availability zones corresponding to the segments in a trace.
  BackendConnectionErrors:
    type: object
    properties:
      TimeoutCount:
        $ref: '#/definitions/[object Object]'
        description: <p/>
      ConnectionRefusedCount:
        $ref: '#/definitions/[object Object]'
        description: <p/>
      HTTPCode4XXCount:
        $ref: '#/definitions/[object Object]'
        description: <p/>
      HTTPCode5XXCount:
        $ref: '#/definitions/[object Object]'
        description: <p/>
      UnknownHostCount:
        $ref: '#/definitions/[object Object]'
        description: <p/>
      OtherCount:
        $ref: '#/definitions/[object Object]'
        description: <p/>
    description: <p/>
  Boolean:
    type: boolean
  BorrowCount:
    type: integer
    minimum: 0
  ClientID:
    type: string
    minLength: 24
    maxLength: 24
  Double:
    type: number
    format: double
  EC2InstanceId:
    type: string
    maxLength: 20
  Edge:
    type: object
    properties:
      ReferenceId:
        $ref: '#/definitions/[object Object]'
        description: Identifier of the edge. Unique within a service map.
      StartTime:
        $ref: '#/definitions/[object Object]'
        description: The start time of the first segment on the edge.
      EndTime:
        $ref: '#/definitions/[object Object]'
        description: The end time of the last segment on the edge.
      SummaryStatistics:
        $ref: '#/definitions/[object Object]'
        description: Response statistics for segments on the edge.
      ResponseTimeHistogram:
        $ref: '#/definitions/[object Object]'
        description: A histogram that maps the spread of client response times on an edge.
      Aliases:
        $ref: '#/definitions/[object Object]'
        description: Aliases for the edge.
    description: Information about a connection between two services.
  EdgeList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  EdgeStatistics:
    type: object
    properties:
      OkCount:
        $ref: '#/definitions/[object Object]'
        description: The number of requests that completed with a 2xx Success status code.
      ErrorStatistics:
        $ref: '#/definitions/[object Object]'
        description: Information about requests that failed with a 4xx Client Error status code.
      FaultStatistics:
        $ref: '#/definitions/[object Object]'
        description: Information about requests that failed with a 5xx Server Error status code.
      TotalCount:
        $ref: '#/definitions/[object Object]'
        description: The total number of completed requests.
      TotalResponseTime:
        $ref: '#/definitions/[object Object]'
        description: The aggregate response time of completed requests.
    description: Response statistics for an edge.
  EncryptionConfig:
    type: object
    properties:
      KeyId:
        $ref: '#/definitions/[object Object]'
        description: 'The ID of the customer master key (CMK) used for encryption, if applicable.'
      Status:
        $ref: '#/definitions/[object Object]'
        description: 'The encryption status. While the status is <code>UPDATING</code>, X-Ray may encrypt data with a combination of the new and old settings.'
      Type:
        $ref: '#/definitions/[object Object]'
        description: The type of encryption. Set to <code>KMS</code> for encryption with CMKs. Set to <code>NONE</code> for default encryption.
    description: A configuration document that specifies encryption configuration settings.
  EncryptionKeyId:
    type: string
    minLength: 1
    maxLength: 3000
  EncryptionStatus:
    type: string
    enum:
      - UPDATING
      - ACTIVE
  EncryptionType:
    type: string
    enum:
      - NONE
      - KMS
  ErrorRootCause:
    type: object
    properties:
      Services:
        $ref: '#/definitions/[object Object]'
        description: 'A list of services corresponding to an error. A service identifies a segment and it contains a name, account ID, type, and inferred flag.'
    description: The root cause of a trace summary error.
  ErrorRootCauseEntity:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the entity.
      Exceptions:
        $ref: '#/definitions/[object Object]'
        description: The types and messages of the exceptions.
      Remote:
        $ref: '#/definitions/[object Object]'
        description: A flag that denotes a remote subsegment.
    description: A collection of segments and corresponding subsegments associated to a trace summary error.
  ErrorRootCauseEntityPath:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ErrorRootCauseService:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The service name.
      Names:
        $ref: '#/definitions/[object Object]'
        description: A collection of associated service names.
      Type:
        $ref: '#/definitions/[object Object]'
        description: The type associated to the service.
      AccountId:
        $ref: '#/definitions/[object Object]'
        description: The account ID associated to the service.
      EntityPath:
        $ref: '#/definitions/[object Object]'
        description: 'The path of root cause entities found on the service. '
      Inferred:
        $ref: '#/definitions/[object Object]'
        description: A Boolean value indicating if the service is inferred from the trace.
    description: A collection of fields identifying the services in a trace summary error.
  ErrorRootCauseServices:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ErrorRootCauses:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ErrorStatistics:
    type: object
    properties:
      ThrottleCount:
        $ref: '#/definitions/[object Object]'
        description: The number of requests that failed with a 419 throttling status code.
      OtherCount:
        $ref: '#/definitions/[object Object]'
        description: The number of requests that failed with untracked 4xx Client Error status codes.
      TotalCount:
        $ref: '#/definitions/[object Object]'
        description: The total number of requests that failed with a 4xx Client Error status code.
    description: Information about requests that failed with a 4xx Client Error status code.
  FaultRootCause:
    type: object
    properties:
      Services:
        $ref: '#/definitions/[object Object]'
        description: 'A list of corresponding services. A service identifies a segment and it contains a name, account ID, type, and inferred flag.'
    description: The root cause information for a trace summary fault.
  FaultRootCauseEntity:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the entity.
      Exceptions:
        $ref: '#/definitions/[object Object]'
        description: The types and messages of the exceptions.
      Remote:
        $ref: '#/definitions/[object Object]'
        description: A flag that denotes a remote subsegment.
    description: A collection of segments and corresponding subsegments associated to a trace summary fault error.
  FaultRootCauseEntityPath:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  FaultRootCauseService:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The service name.
      Names:
        $ref: '#/definitions/[object Object]'
        description: A collection of associated service names.
      Type:
        $ref: '#/definitions/[object Object]'
        description: The type associated to the service.
      AccountId:
        $ref: '#/definitions/[object Object]'
        description: The account ID associated to the service.
      EntityPath:
        $ref: '#/definitions/[object Object]'
        description: 'The path of root cause entities found on the service. '
      Inferred:
        $ref: '#/definitions/[object Object]'
        description: A Boolean value indicating if the service is inferred from the trace.
    description: A collection of fields identifying the services in a trace summary fault.
  FaultRootCauseServices:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  FaultRootCauses:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  FaultStatistics:
    type: object
    properties:
      OtherCount:
        $ref: '#/definitions/[object Object]'
        description: The number of requests that failed with untracked 5xx Server Error status codes.
      TotalCount:
        $ref: '#/definitions/[object Object]'
        description: The total number of requests that failed with a 5xx Server Error status code.
    description: Information about requests that failed with a 5xx Server Error status code.
  FilterExpression:
    type: string
    minLength: 1
    maxLength: 2000
  FixedRate:
    type: number
    format: double
    minimum: 0
    maximum: 1
  GetGroupsNextToken:
    type: string
    minLength: 1
    maxLength: 100
  Group:
    type: object
    properties:
      GroupName:
        $ref: '#/definitions/[object Object]'
        description: The unique case-sensitive name of the group.
      GroupARN:
        $ref: '#/definitions/[object Object]'
        description: The ARN of the group generated based on the GroupName.
      FilterExpression:
        $ref: '#/definitions/[object Object]'
        description: The filter expression defining the parameters to include traces.
    description: Details and metadata for a group.
  GroupARN:
    type: string
    minLength: 1
    maxLength: 400
  GroupName:
    type: string
    minLength: 1
    maxLength: 32
  GroupSummary:
    type: object
    properties:
      GroupName:
        $ref: '#/definitions/[object Object]'
        description: The unique case-sensitive name of the group.
      GroupARN:
        $ref: '#/definitions/[object Object]'
        description: The ARN of the group generated based on the GroupName.
      FilterExpression:
        $ref: '#/definitions/[object Object]'
        description: The filter expression defining the parameters to include traces.
    description: Details for a group without metadata.
  GroupSummaryList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  HTTPMethod:
    type: string
    maxLength: 10
  Histogram:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  HistogramEntry:
    type: object
    properties:
      Value:
        $ref: '#/definitions/[object Object]'
        description: The value of the entry.
      Count:
        $ref: '#/definitions/[object Object]'
        description: The prevalence of the entry.
    description: 'An entry in a histogram for a statistic. A histogram maps the range of observed values on the X axis, and the prevalence of each value on the Y axis.'
  Host:
    type: string
    maxLength: 64
  Hostname:
    type: string
    maxLength: 255
  Http:
    type: object
    properties:
      HttpURL:
        $ref: '#/definitions/[object Object]'
        description: The request URL.
      HttpStatus:
        $ref: '#/definitions/[object Object]'
        description: The response status.
      HttpMethod:
        $ref: '#/definitions/[object Object]'
        description: The request method.
      UserAgent:
        $ref: '#/definitions/[object Object]'
        description: The request's user agent string.
      ClientIp:
        $ref: '#/definitions/[object Object]'
        description: The IP address of the requestor.
    description: Information about an HTTP request.
  InstanceIdDetail:
    type: object
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: The ID of a corresponding EC2 instance.
    description: 'A list of EC2 instance IDs corresponding to the segments in a trace. '
  Integer:
    type: integer
  NullableBoolean:
    type: boolean
  NullableDouble:
    type: number
    format: double
  NullableInteger:
    type: integer
  NullableLong:
    type: integer
  Priority:
    type: integer
    minimum: 1
    maximum: 9999
  RequestCount:
    type: integer
    minimum: 0
  ReservoirSize:
    type: integer
    minimum: 0
  ResourceARN:
    type: string
    maxLength: 500
  ResourceARNDetail:
    type: object
    properties:
      ARN:
        $ref: '#/definitions/[object Object]'
        description: The ARN of a corresponding resource.
    description: A list of resources ARNs corresponding to the segments in a trace.
  ResponseTimeRootCause:
    type: object
    properties:
      Services:
        $ref: '#/definitions/[object Object]'
        description: 'A list of corresponding services. A service identifies a segment and contains a name, account ID, type, and inferred flag.'
    description: The root cause information for a response time warning.
  ResponseTimeRootCauseEntity:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the entity.
      Coverage:
        $ref: '#/definitions/[object Object]'
        description: The types and messages of the exceptions.
      Remote:
        $ref: '#/definitions/[object Object]'
        description: A flag that denotes a remote subsegment.
    description: A collection of segments and corresponding subsegments associated to a response time warning.
  ResponseTimeRootCauseEntityPath:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ResponseTimeRootCauseService:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The service name.
      Names:
        $ref: '#/definitions/[object Object]'
        description: A collection of associated service names.
      Type:
        $ref: '#/definitions/[object Object]'
        description: The type associated to the service.
      AccountId:
        $ref: '#/definitions/[object Object]'
        description: The account ID associated to the service.
      EntityPath:
        $ref: '#/definitions/[object Object]'
        description: 'The path of root cause entities found on the service. '
      Inferred:
        $ref: '#/definitions/[object Object]'
        description: A Boolean value indicating if the service is inferred from the trace.
    description: A collection of fields identifying the service in a response time warning.
  ResponseTimeRootCauseServices:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ResponseTimeRootCauses:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  RootCauseException:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: The name of the exception.
      Message:
        $ref: '#/definitions/[object Object]'
        description: The message of the exception.
    description: The exception associated with a root cause.
  RootCauseExceptions:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  RuleName:
    type: string
    minLength: 1
    maxLength: 32
  SampledCount:
    type: integer
    minimum: 0
  SamplingRule:
    type: object
    required:
      - ResourceARN
      - Priority
      - FixedRate
      - ReservoirSize
      - ServiceName
      - ServiceType
      - Host
      - HTTPMethod
      - URLPath
      - Version
    properties:
      RuleName:
        $ref: '#/definitions/[object Object]'
        description: 'The name of the sampling rule. Specify a rule by either name or ARN, but not both.'
      RuleARN:
        $ref: '#/definitions/[object Object]'
        description: 'The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.'
      ResourceARN:
        $ref: '#/definitions/[object Object]'
        description: Matches the ARN of the AWS resource on which the service runs.
      Priority:
        $ref: '#/definitions/[object Object]'
        description: The priority of the sampling rule.
      FixedRate:
        $ref: '#/definitions/[object Object]'
        description: 'The percentage of matching requests to instrument, after the reservoir is exhausted.'
      ReservoirSize:
        $ref: '#/definitions/[object Object]'
        description: 'A fixed number of matching requests to instrument per second, prior to applying the fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.'
      ServiceName:
        $ref: '#/definitions/[object Object]'
        description: Matches the <code>name</code> that the service uses to identify itself in segments.
      ServiceType:
        $ref: '#/definitions/[object Object]'
        description: Matches the <code>origin</code> that the service uses to identify its type in segments.
      Host:
        $ref: '#/definitions/[object Object]'
        description: Matches the hostname from a request URL.
      HTTPMethod:
        $ref: '#/definitions/[object Object]'
        description: Matches the HTTP method of a request.
      URLPath:
        $ref: '#/definitions/[object Object]'
        description: Matches the path from a request URL.
      Version:
        $ref: '#/definitions/[object Object]'
        description: The version of the sampling rule format (<code>1</code>).
      Attributes:
        $ref: '#/definitions/[object Object]'
        description: Matches attributes derived from the request.
    description: 'A sampling rule that services use to decide whether to instrument a request. Rule fields can match properties of the service, or properties of a request. The service can ignore rules that don''t match its properties.'
  SamplingRuleRecord:
    type: object
    properties:
      SamplingRule:
        $ref: '#/definitions/[object Object]'
        description: The sampling rule.
      CreatedAt:
        $ref: '#/definitions/[object Object]'
        description: When the rule was created.
      ModifiedAt:
        $ref: '#/definitions/[object Object]'
        description: When the rule was last modified.
    description: A <a>SamplingRule</a> and its metadata.
  SamplingRuleRecordList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  SamplingRuleUpdate:
    type: object
    properties:
      RuleName:
        $ref: '#/definitions/[object Object]'
        description: 'The name of the sampling rule. Specify a rule by either name or ARN, but not both.'
      RuleARN:
        $ref: '#/definitions/[object Object]'
        description: 'The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.'
      ResourceARN:
        $ref: '#/definitions/[object Object]'
        description: Matches the ARN of the AWS resource on which the service runs.
      Priority:
        $ref: '#/definitions/[object Object]'
        description: The priority of the sampling rule.
      FixedRate:
        $ref: '#/definitions/[object Object]'
        description: 'The percentage of matching requests to instrument, after the reservoir is exhausted.'
      ReservoirSize:
        $ref: '#/definitions/[object Object]'
        description: 'A fixed number of matching requests to instrument per second, prior to applying the fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.'
      Host:
        $ref: '#/definitions/[object Object]'
        description: Matches the hostname from a request URL.
      ServiceName:
        $ref: '#/definitions/[object Object]'
        description: Matches the <code>name</code> that the service uses to identify itself in segments.
      ServiceType:
        $ref: '#/definitions/[object Object]'
        description: Matches the <code>origin</code> that the service uses to identify its type in segments.
      HTTPMethod:
        $ref: '#/definitions/[object Object]'
        description: Matches the HTTP method of a request.
      URLPath:
        $ref: '#/definitions/[object Object]'
        description: Matches the path from a request URL.
      Attributes:
        $ref: '#/definitions/[object Object]'
        description: Matches attributes derived from the request.
    description: A document specifying changes to a sampling rule's configuration.
  SamplingStatisticSummary:
    type: object
    properties:
      RuleName:
        $ref: '#/definitions/[object Object]'
        description: The name of the sampling rule.
      Timestamp:
        $ref: '#/definitions/[object Object]'
        description: The start time of the reporting window.
      RequestCount:
        $ref: '#/definitions/[object Object]'
        description: The number of requests that matched the rule.
      BorrowCount:
        $ref: '#/definitions/[object Object]'
        description: The number of requests recorded with borrowed reservoir quota.
      SampledCount:
        $ref: '#/definitions/[object Object]'
        description: The number of requests recorded.
    description: Aggregated request sampling data for a sampling rule across all services for a 10 second window.
  SamplingStatisticSummaryList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  SamplingStatisticsDocument:
    type: object
    required:
      - RuleName
      - ClientID
      - Timestamp
      - RequestCount
      - SampledCount
    properties:
      RuleName:
        $ref: '#/definitions/[object Object]'
        description: The name of the sampling rule.
      ClientID:
        $ref: '#/definitions/[object Object]'
        description: A unique identifier for the service in hexadecimal.
      Timestamp:
        $ref: '#/definitions/[object Object]'
        description: The current time.
      RequestCount:
        $ref: '#/definitions/[object Object]'
        description: The number of requests that matched the rule.
      SampledCount:
        $ref: '#/definitions/[object Object]'
        description: The number of requests recorded.
      BorrowCount:
        $ref: '#/definitions/[object Object]'
        description: The number of requests recorded with borrowed reservoir quota.
    description: Request sampling results for a single rule from a service. Results are for the last 10 seconds unless the service has been assigned a longer reporting interval after a previous call to <a>GetSamplingTargets</a>.
  SamplingStatisticsDocumentList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
    maxItems: 25
  SamplingTargetDocument:
    type: object
    properties:
      RuleName:
        $ref: '#/definitions/[object Object]'
        description: The name of the sampling rule.
      FixedRate:
        $ref: '#/definitions/[object Object]'
        description: 'The percentage of matching requests to instrument, after the reservoir is exhausted.'
      ReservoirQuota:
        $ref: '#/definitions/[object Object]'
        description: The number of requests per second that X-Ray allocated this service.
      ReservoirQuotaTTL:
        $ref: '#/definitions/[object Object]'
        description: When the reservoir quota expires.
      Interval:
        $ref: '#/definitions/[object Object]'
        description: The number of seconds for the service to wait before getting sampling targets again.
    description: 'Temporary changes to a sampling rule configuration. To meet the global sampling target for a rule, X-Ray calculates a new reservoir for each service based on the recent sampling results of all services that called <a>GetSamplingTargets</a>.'
  SamplingTargetDocumentList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  Segment:
    type: object
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: The segment's ID.
      Document:
        $ref: '#/definitions/[object Object]'
        description: The segment document.
    description: '<p>A segment from a trace that has been ingested by the X-Ray service. The segment can be compiled from documents uploaded with <a>PutTraceSegments</a>, or an <code>inferred</code> segment for a downstream service, generated from a subsegment sent by the service that called it.</p> <p>For the full segment document schema, see <a href="https://docs.aws.amazon.com/xray/latest/devguide/xray-api-segmentdocuments.html">AWS X-Ray Segment Documents</a> in the <i>AWS X-Ray Developer Guide</i>.</p>'
  SegmentDocument:
    type: string
    minLength: 1
  SegmentId:
    type: string
  SegmentList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  Service:
    type: object
    properties:
      ReferenceId:
        $ref: '#/definitions/[object Object]'
        description: Identifier for the service. Unique within the service map.
      Name:
        $ref: '#/definitions/[object Object]'
        description: The canonical name of the service.
      Names:
        $ref: '#/definitions/[object Object]'
        description: 'A list of names for the service, including the canonical name.'
      Root:
        $ref: '#/definitions/[object Object]'
        description: Indicates that the service was the first service to process a request.
      AccountId:
        $ref: '#/definitions/[object Object]'
        description: Identifier of the AWS account in which the service runs.
      Type:
        $ref: '#/definitions/[object Object]'
        description: '<p>The type of service.</p> <ul> <li> <p>AWS Resource - The type of an AWS resource. For example, <code>AWS::EC2::Instance</code> for a application running on Amazon EC2 or <code>AWS::DynamoDB::Table</code> for an Amazon DynamoDB table that the application used.</p> </li> <li> <p>AWS Service - The type of an AWS service. For example, <code>AWS::DynamoDB</code> for downstream calls to Amazon DynamoDB that didn''t target a specific table.</p> </li> <li> <p> <code>client</code> - Represents the clients that sent requests to a root service.</p> </li> <li> <p> <code>remote</code> - A downstream service of indeterminate type.</p> </li> </ul>'
      State:
        $ref: '#/definitions/[object Object]'
        description: The service's state.
      StartTime:
        $ref: '#/definitions/[object Object]'
        description: The start time of the first segment that the service generated.
      EndTime:
        $ref: '#/definitions/[object Object]'
        description: The end time of the last segment that the service generated.
      Edges:
        $ref: '#/definitions/[object Object]'
        description: Connections to downstream services.
      SummaryStatistics:
        $ref: '#/definitions/[object Object]'
        description: Aggregated statistics for the service.
      DurationHistogram:
        $ref: '#/definitions/[object Object]'
        description: A histogram that maps the spread of service durations.
      ResponseTimeHistogram:
        $ref: '#/definitions/[object Object]'
        description: A histogram that maps the spread of service response times.
    description: 'Information about an application that processed requests, users that made requests, or downstream services, resources and applications that an application used.'
  ServiceId:
    type: object
    properties:
      Name:
        $ref: '#/definitions/[object Object]'
        description: <p/>
      Names:
        $ref: '#/definitions/[object Object]'
        description: <p/>
      AccountId:
        $ref: '#/definitions/[object Object]'
        description: <p/>
      Type:
        $ref: '#/definitions/[object Object]'
        description: <p/>
    description: <p/>
  ServiceIds:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ServiceList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ServiceName:
    type: string
    maxLength: 64
  ServiceNames:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ServiceStatistics:
    type: object
    properties:
      OkCount:
        $ref: '#/definitions/[object Object]'
        description: The number of requests that completed with a 2xx Success status code.
      ErrorStatistics:
        $ref: '#/definitions/[object Object]'
        description: Information about requests that failed with a 4xx Client Error status code.
      FaultStatistics:
        $ref: '#/definitions/[object Object]'
        description: Information about requests that failed with a 5xx Server Error status code.
      TotalCount:
        $ref: '#/definitions/[object Object]'
        description: The total number of completed requests.
      TotalResponseTime:
        $ref: '#/definitions/[object Object]'
        description: The aggregate response time of completed requests.
    description: Response statistics for a service.
  ServiceType:
    type: string
    maxLength: 64
  String:
    type: string
  TelemetryRecord:
    type: object
    required:
      - Timestamp
    properties:
      Timestamp:
        $ref: '#/definitions/[object Object]'
        description: <p/>
      SegmentsReceivedCount:
        $ref: '#/definitions/[object Object]'
        description: <p/>
      SegmentsSentCount:
        $ref: '#/definitions/[object Object]'
        description: <p/>
      SegmentsSpilloverCount:
        $ref: '#/definitions/[object Object]'
        description: <p/>
      SegmentsRejectedCount:
        $ref: '#/definitions/[object Object]'
        description: <p/>
      BackendConnectionErrors:
        $ref: '#/definitions/[object Object]'
        description: <p/>
    description: <p/>
  TelemetryRecordList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  Timestamp:
    type: string
    format: date-time
  Trace:
    type: object
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: The unique identifier for the request that generated the trace's segments and subsegments.
      Duration:
        $ref: '#/definitions/[object Object]'
        description: The length of time in seconds between the start time of the root segment and the end time of the last segment that completed.
      Segments:
        $ref: '#/definitions/[object Object]'
        description: Segment documents for the segments and subsegments that comprise the trace.
    description: A collection of segment documents with matching trace IDs.
  TraceAvailabilityZones:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  TraceId:
    type: string
    minLength: 1
    maxLength: 35
  TraceIdList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  TraceInstanceIds:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  TraceList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  TraceResourceARNs:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  TraceSegmentDocument:
    type: string
  TraceSegmentDocumentList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  TraceSummary:
    type: object
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: The unique identifier for the request that generated the trace's segments and subsegments.
      Duration:
        $ref: '#/definitions/[object Object]'
        description: The length of time in seconds between the start time of the root segment and the end time of the last segment that completed.
      ResponseTime:
        $ref: '#/definitions/[object Object]'
        description: 'The length of time in seconds between the start and end times of the root segment. If the service performs work asynchronously, the response time measures the time before the response is sent to the user, while the duration measures the amount of time before the last traced activity completes.'
      HasFault:
        $ref: '#/definitions/[object Object]'
        description: One or more of the segment documents has a 500 series error.
      HasError:
        $ref: '#/definitions/[object Object]'
        description: One or more of the segment documents has a 400 series error.
      HasThrottle:
        $ref: '#/definitions/[object Object]'
        description: One or more of the segment documents has a 429 throttling error.
      IsPartial:
        $ref: '#/definitions/[object Object]'
        description: One or more of the segment documents is in progress.
      Http:
        $ref: '#/definitions/[object Object]'
        description: Information about the HTTP request served by the trace.
      Annotations:
        $ref: '#/definitions/[object Object]'
        description: Annotations from the trace's segment documents.
      Users:
        $ref: '#/definitions/[object Object]'
        description: Users from the trace's segment documents.
      ServiceIds:
        $ref: '#/definitions/[object Object]'
        description: Service IDs from the trace's segment documents.
      ResourceARNs:
        $ref: '#/definitions/[object Object]'
        description: A list of resource ARNs for any resource corresponding to the trace segments.
      InstanceIds:
        $ref: '#/definitions/[object Object]'
        description: A list of EC2 instance IDs for any instance corresponding to the trace segments.
      AvailabilityZones:
        $ref: '#/definitions/[object Object]'
        description: A list of availability zones for any zone corresponding to the trace segments.
      EntryPoint:
        $ref: '#/definitions/[object Object]'
        description: The root of a trace.
      FaultRootCauses:
        $ref: '#/definitions/[object Object]'
        description: A collection of FaultRootCause structures corresponding to the the trace segments.
      ErrorRootCauses:
        $ref: '#/definitions/[object Object]'
        description: A collection of ErrorRootCause structures corresponding to the trace segments.
      ResponseTimeRootCauses:
        $ref: '#/definitions/[object Object]'
        description: A collection of ResponseTimeRootCause structures corresponding to the trace segments.
      Revision:
        $ref: '#/definitions/[object Object]'
        description: The revision number of a trace.
    description: Metadata generated from the segment documents in a trace.
  TraceSummaryList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  TraceUser:
    type: object
    properties:
      UserName:
        $ref: '#/definitions/[object Object]'
        description: The user's name.
      ServiceIds:
        $ref: '#/definitions/[object Object]'
        description: Services that the user's request hit.
    description: Information about a user recorded in segment documents.
  TraceUsers:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  URLPath:
    type: string
    maxLength: 128
  UnprocessedStatistics:
    type: object
    properties:
      RuleName:
        $ref: '#/definitions/[object Object]'
        description: The name of the sampling rule.
      ErrorCode:
        $ref: '#/definitions/[object Object]'
        description: The error code.
      Message:
        $ref: '#/definitions/[object Object]'
        description: The error message.
    description: Sampling statistics from a call to <a>GetSamplingTargets</a> that X-Ray could not process.
  UnprocessedStatisticsList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  UnprocessedTraceIdList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  UnprocessedTraceSegment:
    type: object
    properties:
      Id:
        $ref: '#/definitions/[object Object]'
        description: The segment's ID.
      ErrorCode:
        $ref: '#/definitions/[object Object]'
        description: The error that caused processing to fail.
      Message:
        $ref: '#/definitions/[object Object]'
        description: The error message.
    description: Information about a segment that failed processing.
  UnprocessedTraceSegmentList:
    type: array
    items:
      $ref: '#/definitions/[object Object]'
  ValueWithServiceIds:
    type: object
    properties:
      AnnotationValue:
        $ref: '#/definitions/[object Object]'
        description: Values of the annotation.
      ServiceIds:
        $ref: '#/definitions/[object Object]'
        description: Services to which the annotation applies.
    description: Information about a segment annotation.
  Version:
    type: integer
    minimum: 1
