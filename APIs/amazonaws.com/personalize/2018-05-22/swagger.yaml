swagger: '2.0'
schemes:
  - https
  - http
host: personalize.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: Amazon Personalize is a machine learning service that makes it easy to add individualized recommendations to customers.
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon Personalize
  version: '2018-05-22'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://twitter.com/awscloud/profile_image?size=original'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/personalize-2018-05-22.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: personalize
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/personalize/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  '/#X-Amz-Target=AmazonPersonalize.CreateCampaign':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a campaign by deploying a solution version. When a client calls the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html">GetRecommendations</a> and <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetPersonalizedRanking.html">GetPersonalizedRanking</a> APIs, a campaign is specified in the request.</p> <p> <b>Minimum Provisioned TPS and Auto-Scaling</b> </p> <p>A transaction is a single <code>GetRecommendations</code> or <code>GetPersonalizedRanking</code> call. Transactions per second (TPS) is the throughput and unit of billing for Amazon Personalize. The minimum provisioned TPS (<code>minProvisionedTPS</code>) specifies the baseline throughput provisioned by Amazon Personalize, and thus, the minimum billing charge. If your TPS increases beyond <code>minProvisionedTPS</code>, Amazon Personalize auto-scales the provisioned capacity up and down, but never below <code>minProvisionedTPS</code>, to maintain a 70% utilization. There''s a short time delay while the capacity is increased that might cause loss of transactions. It''s recommended to start with a low <code>minProvisionedTPS</code>, track your usage using Amazon CloudWatch metrics, and then increase the <code>minProvisionedTPS</code> as necessary.</p> <p> <b>Status</b> </p> <p>A campaign can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul> <p>To get the campaign status, call <a>DescribeCampaign</a>.</p> <note> <p>Wait until the <code>status</code> of the campaign is <code>ACTIVE</code> before asking the campaign for recommendations.</p> </note> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>ListCampaigns</a> </p> </li> <li> <p> <a>DescribeCampaign</a> </p> </li> <li> <p> <a>UpdateCampaign</a> </p> </li> <li> <p> <a>DeleteCampaign</a> </p> </li> </ul>'
      operationId: CreateCampaign
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateCampaignRequest'
        - enum:
            - AmazonPersonalize.CreateCampaign
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateCampaignResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  '/#X-Amz-Target=AmazonPersonalize.CreateDataset':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates an empty dataset and adds it to the specified dataset group. Use <a>CreateDatasetImportJob</a> to import your training data to a dataset.</p> <p>There are three types of datasets:</p> <ul> <li> <p>Interactions</p> </li> <li> <p>Items</p> </li> <li> <p>Users</p> </li> </ul> <p>Each dataset type has an associated schema with required field types. Only the <code>Interactions</code> dataset is required in order to train a model (also referred to as creating a solution).</p> <p>A dataset can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul> <p>To get the status of the dataset, call <a>DescribeDataset</a>.</p> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>CreateDatasetGroup</a> </p> </li> <li> <p> <a>ListDatasets</a> </p> </li> <li> <p> <a>DescribeDataset</a> </p> </li> <li> <p> <a>DeleteDataset</a> </p> </li> </ul>'
      operationId: CreateDataset
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateDatasetRequest'
        - enum:
            - AmazonPersonalize.CreateDataset
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDatasetResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  '/#X-Amz-Target=AmazonPersonalize.CreateDatasetGroup':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates an empty dataset group. A dataset group contains related datasets that supply data for training a model. A dataset group can contain at most three datasets, one for each type of dataset:</p> <ul> <li> <p>Interactions</p> </li> <li> <p>Items</p> </li> <li> <p>Users</p> </li> </ul> <p>To train a model (create a solution), a dataset group that contains an <code>Interactions</code> dataset is required. Call <a>CreateDataset</a> to add a dataset to the group.</p> <p>A dataset group can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING</p> </li> </ul> <p>To get the status of the dataset group, call <a>DescribeDatasetGroup</a>. If the status shows as CREATE FAILED, the response includes a <code>failureReason</code> key, which describes why the creation failed.</p> <note> <p>You must wait until the <code>status</code> of the dataset group is <code>ACTIVE</code> before adding a dataset to the group.</p> </note> <p>You can specify an AWS Key Management Service (KMS) key to encrypt the datasets in the group. If you specify a KMS key, you must also include an AWS Identity and Access Management (IAM) role that has permission to access the key.</p> <p class="title"> <b>APIs that require a dataset group ARN in the request</b> </p> <ul> <li> <p> <a>CreateDataset</a> </p> </li> <li> <p> <a>CreateEventTracker</a> </p> </li> <li> <p> <a>CreateSolution</a> </p> </li> </ul> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>ListDatasetGroups</a> </p> </li> <li> <p> <a>DescribeDatasetGroup</a> </p> </li> <li> <p> <a>DeleteDatasetGroup</a> </p> </li> </ul>'
      operationId: CreateDatasetGroup
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateDatasetGroupRequest'
        - enum:
            - AmazonPersonalize.CreateDatasetGroup
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDatasetGroupResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  '/#X-Amz-Target=AmazonPersonalize.CreateDatasetImportJob':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a job that imports training data from your data source (an Amazon S3 bucket) to an Amazon Personalize dataset. To allow Amazon Personalize to import the training data, you must specify an AWS Identity and Access Management (IAM) role that has permission to read from the data source.</p> <important> <p>The dataset import job replaces any previous data in the dataset.</p> </important> <p> <b>Status</b> </p> <p>A dataset import job can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul> <p>To get the status of the import job, call <a>DescribeDatasetImportJob</a>, providing the Amazon Resource Name (ARN) of the dataset import job. The dataset import is complete when the status shows as ACTIVE. If the status shows as CREATE FAILED, the response includes a <code>failureReason</code> key, which describes why the job failed.</p> <note> <p>Importing takes time. You must wait until the status shows as ACTIVE before training a model using the dataset.</p> </note> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>ListDatasetImportJobs</a> </p> </li> <li> <p> <a>DescribeDatasetImportJob</a> </p> </li> </ul>'
      operationId: CreateDatasetImportJob
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateDatasetImportJobRequest'
        - enum:
            - AmazonPersonalize.CreateDatasetImportJob
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDatasetImportJobResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  '/#X-Amz-Target=AmazonPersonalize.CreateEventTracker':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates an event tracker that you use when sending event data to the specified dataset group using the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_UBS_PutEvents.html">PutEvents</a> API.</p> <p>When Amazon Personalize creates an event tracker, it also creates an <i>event-interactions</i> dataset in the dataset group associated with the event tracker. The event-interactions dataset stores the event data from the <code>PutEvents</code> call. The contents of this dataset are not available to the user.</p> <note> <p>Only one event tracker can be associated with a dataset group. You will get an error if you call <code>CreateEventTracker</code> using the same dataset group as an existing event tracker.</p> </note> <p>When you send event data you include your tracking ID. The tracking ID identifies the customer and authorizes the customer to send the data.</p> <p>The event tracker can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul> <p>To get the status of the event tracker, call <a>DescribeEventTracker</a>.</p> <note> <p>The event tracker must be in the ACTIVE state before using the tracking ID.</p> </note> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>ListEventTrackers</a> </p> </li> <li> <p> <a>DescribeEventTracker</a> </p> </li> <li> <p> <a>DeleteEventTracker</a> </p> </li> </ul>'
      operationId: CreateEventTracker
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateEventTrackerRequest'
        - enum:
            - AmazonPersonalize.CreateEventTracker
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateEventTrackerResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  '/#X-Amz-Target=AmazonPersonalize.CreateSchema':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Creates an Amazon Personalize schema from the specified schema string. The schema you create must be in Avro JSON format.</p> <p>Amazon Personalize recognizes three schema variants. Each schema is associated with a dataset type and has a set of required field and keywords. You specify a schema when you call <a>CreateDataset</a>.</p> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>ListSchemas</a> </p> </li> <li> <p> <a>DescribeSchema</a> </p> </li> <li> <p> <a>DeleteSchema</a> </p> </li> </ul>
      operationId: CreateSchema
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateSchemaRequest'
        - enum:
            - AmazonPersonalize.CreateSchema
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSchemaResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  '/#X-Amz-Target=AmazonPersonalize.CreateSolution':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates the configuration for training a model. A trained model is known as a solution. After the configuration is created, you train the model (create a solution) by calling the <a>CreateSolutionVersion</a> operation. Every time you call <code>CreateSolutionVersion</code>, a new version of the solution is created.</p> <p>After creating a solution version, you check its accuracy by calling <a>GetSolutionMetrics</a>. When you are satisfied with the version, you deploy it using <a>CreateCampaign</a>. The campaign provides recommendations to a client through the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html">GetRecommendations</a> API.</p> <p>To train a model, Amazon Personalize requires training data and a recipe. The training data comes from the dataset group that you provide in the request. A recipe specifies the training algorithm and a feature transformation. You can specify one of the predefined recipes provided by Amazon Personalize. Alternatively, you can specify <code>performAutoML</code> and Amazon Personalize will analyze your data and select the optimum USER_PERSONALIZATION recipe for you.</p> <p> <b>Status</b> </p> <p>A solution can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul> <p>To get the status of the solution, call <a>DescribeSolution</a>. Wait until the status shows as ACTIVE before calling <code>CreateSolutionVersion</code>.</p> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>ListSolutions</a> </p> </li> <li> <p> <a>CreateSolutionVersion</a> </p> </li> <li> <p> <a>DescribeSolution</a> </p> </li> <li> <p> <a>DeleteSolution</a> </p> </li> </ul> <ul> <li> <p> <a>ListSolutionVersions</a> </p> </li> <li> <p> <a>DescribeSolutionVersion</a> </p> </li> </ul>'
      operationId: CreateSolution
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateSolutionRequest'
        - enum:
            - AmazonPersonalize.CreateSolution
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSolutionResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  '/#X-Amz-Target=AmazonPersonalize.CreateSolutionVersion':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Trains or retrains an active solution. A solution is created using the <a>CreateSolution</a> operation and must be in the ACTIVE state before calling <code>CreateSolutionVersion</code>. A new version of the solution is created every time you call this operation.</p> <p> <b>Status</b> </p> <p>A solution version can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul> <p>To get the status of the version, call <a>DescribeSolutionVersion</a>. Wait until the status shows as ACTIVE before calling <code>CreateCampaign</code>.</p> <p>If the status shows as CREATE FAILED, the response includes a <code>failureReason</code> key, which describes why the job failed.</p> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>ListSolutionVersions</a> </p> </li> <li> <p> <a>DescribeSolutionVersion</a> </p> </li> </ul> <ul> <li> <p> <a>ListSolutions</a> </p> </li> <li> <p> <a>CreateSolution</a> </p> </li> <li> <p> <a>DescribeSolution</a> </p> </li> <li> <p> <a>DeleteSolution</a> </p> </li> </ul>'
      operationId: CreateSolutionVersion
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateSolutionVersionRequest'
        - enum:
            - AmazonPersonalize.CreateSolutionVersion
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSolutionVersionResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  '/#X-Amz-Target=AmazonPersonalize.DeleteCampaign':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Removes a campaign by deleting the solution deployment. The solution that the campaign is based on is not deleted and can be redeployed when needed. A deleted campaign can no longer be specified in a <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html">GetRecommendations</a> request. For more information on campaigns, see <a>CreateCampaign</a>.'
      operationId: DeleteCampaign
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteCampaignRequest'
        - enum:
            - AmazonPersonalize.DeleteCampaign
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  '/#X-Amz-Target=AmazonPersonalize.DeleteDataset':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Deletes a dataset. You can''t delete a dataset if an associated <code>DatasetImportJob</code> or <code>SolutionVersion</code> is in the CREATE PENDING or IN PROGRESS state. For more information on datasets, see <a>CreateDataset</a>.'
      operationId: DeleteDataset
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDatasetRequest'
        - enum:
            - AmazonPersonalize.DeleteDataset
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  '/#X-Amz-Target=AmazonPersonalize.DeleteDatasetGroup':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Deletes a dataset group. Before you delete a dataset group, you must delete the following:</p> <ul> <li> <p>All associated event trackers.</p> </li> <li> <p>All associated solutions.</p> </li> <li> <p>All datasets in the dataset group.</p> </li> </ul>'
      operationId: DeleteDatasetGroup
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDatasetGroupRequest'
        - enum:
            - AmazonPersonalize.DeleteDatasetGroup
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  '/#X-Amz-Target=AmazonPersonalize.DeleteEventTracker':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Deletes the event tracker. Does not delete the event-interactions dataset from the associated dataset group. For more information on event trackers, see <a>CreateEventTracker</a>.'
      operationId: DeleteEventTracker
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteEventTrackerRequest'
        - enum:
            - AmazonPersonalize.DeleteEventTracker
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  '/#X-Amz-Target=AmazonPersonalize.DeleteSchema':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Deletes a schema. Before deleting a schema, you must delete all datasets referencing the schema. For more information on schemas, see <a>CreateSchema</a>.'
      operationId: DeleteSchema
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteSchemaRequest'
        - enum:
            - AmazonPersonalize.DeleteSchema
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  '/#X-Amz-Target=AmazonPersonalize.DeleteSolution':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Deletes all versions of a solution and the <code>Solution</code> object itself. Before deleting a solution, you must delete all campaigns based on the solution. To determine what campaigns are using the solution, call <a>ListCampaigns</a> and supply the Amazon Resource Name (ARN) of the solution. You can''t delete a solution if an associated <code>SolutionVersion</code> is in the CREATE PENDING or IN PROGRESS state. For more information on solutions, see <a>CreateSolution</a>.'
      operationId: DeleteSolution
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteSolutionRequest'
        - enum:
            - AmazonPersonalize.DeleteSolution
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  '/#X-Amz-Target=AmazonPersonalize.DescribeAlgorithm':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Describes the given algorithm.
      operationId: DescribeAlgorithm
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAlgorithmRequest'
        - enum:
            - AmazonPersonalize.DescribeAlgorithm
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAlgorithmResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#X-Amz-Target=AmazonPersonalize.DescribeCampaign':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Describes the given campaign, including its status.</p> <p>A campaign can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul> <p>When the <code>status</code> is <code>CREATE FAILED</code>, the response includes the <code>failureReason</code> key, which describes why.</p> <p>For more information on campaigns, see <a>CreateCampaign</a>.</p>'
      operationId: DescribeCampaign
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeCampaignRequest'
        - enum:
            - AmazonPersonalize.DescribeCampaign
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeCampaignResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#X-Amz-Target=AmazonPersonalize.DescribeDataset':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Describes the given dataset. For more information on datasets, see <a>CreateDataset</a>.'
      operationId: DescribeDataset
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDatasetRequest'
        - enum:
            - AmazonPersonalize.DescribeDataset
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDatasetResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#X-Amz-Target=AmazonPersonalize.DescribeDatasetGroup':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Describes the given dataset group. For more information on dataset groups, see <a>CreateDatasetGroup</a>.'
      operationId: DescribeDatasetGroup
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDatasetGroupRequest'
        - enum:
            - AmazonPersonalize.DescribeDatasetGroup
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDatasetGroupResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#X-Amz-Target=AmazonPersonalize.DescribeDatasetImportJob':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Describes the dataset import job created by <a>CreateDatasetImportJob</a>, including the import job status.'
      operationId: DescribeDatasetImportJob
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDatasetImportJobRequest'
        - enum:
            - AmazonPersonalize.DescribeDatasetImportJob
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDatasetImportJobResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#X-Amz-Target=AmazonPersonalize.DescribeEventTracker':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Describes an event tracker. The response includes the <code>trackingId</code> and <code>status</code> of the event tracker. For more information on event trackers, see <a>CreateEventTracker</a>.'
      operationId: DescribeEventTracker
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEventTrackerRequest'
        - enum:
            - AmazonPersonalize.DescribeEventTracker
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEventTrackerResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#X-Amz-Target=AmazonPersonalize.DescribeFeatureTransformation':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Describes the given feature transformation.
      operationId: DescribeFeatureTransformation
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeFeatureTransformationRequest'
        - enum:
            - AmazonPersonalize.DescribeFeatureTransformation
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeFeatureTransformationResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#X-Amz-Target=AmazonPersonalize.DescribeRecipe':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Describes a recipe.</p> <p>A recipe contains three items:</p> <ul> <li> <p>An algorithm that trains a model.</p> </li> <li> <p>Hyperparameters that govern the training.</p> </li> <li> <p>Feature transformation information for modifying the input data before training.</p> </li> </ul> <p>Amazon Personalize provides a set of predefined recipes. You specify a recipe when you create a solution with the <a>CreateSolution</a> API. <code>CreateSolution</code> trains a model by using the algorithm in the specified recipe and a training dataset. The solution, when deployed as a campaign, can provide recommendations using the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html">GetRecommendations</a> API.</p>'
      operationId: DescribeRecipe
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeRecipeRequest'
        - enum:
            - AmazonPersonalize.DescribeRecipe
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRecipeResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#X-Amz-Target=AmazonPersonalize.DescribeSchema':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Describes a schema. For more information on schemas, see <a>CreateSchema</a>.'
      operationId: DescribeSchema
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSchemaRequest'
        - enum:
            - AmazonPersonalize.DescribeSchema
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSchemaResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#X-Amz-Target=AmazonPersonalize.DescribeSolution':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Describes a solution. For more information on solutions, see <a>CreateSolution</a>.'
      operationId: DescribeSolution
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSolutionRequest'
        - enum:
            - AmazonPersonalize.DescribeSolution
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSolutionResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#X-Amz-Target=AmazonPersonalize.DescribeSolutionVersion':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Describes a specific version of a solution. For more information on solutions, see <a>CreateSolution</a>.'
      operationId: DescribeSolutionVersion
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSolutionVersionRequest'
        - enum:
            - AmazonPersonalize.DescribeSolutionVersion
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSolutionVersionResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#X-Amz-Target=AmazonPersonalize.GetSolutionMetrics':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets the metrics for the specified solution version.
      operationId: GetSolutionMetrics
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetSolutionMetricsRequest'
        - enum:
            - AmazonPersonalize.GetSolutionMetrics
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSolutionMetricsResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  '/#X-Amz-Target=AmazonPersonalize.ListCampaigns':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a list of campaigns that use the given solution. When a solution is not specified, all the campaigns associated with the account are listed. The response provides the properties for each campaign, including the Amazon Resource Name (ARN). For more information on campaigns, see <a>CreateCampaign</a>.'
      operationId: ListCampaigns
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListCampaignsRequest'
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - enum:
            - AmazonPersonalize.ListCampaigns
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCampaignsResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  '/#X-Amz-Target=AmazonPersonalize.ListDatasetGroups':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a list of dataset groups. The response provides the properties for each dataset group, including the Amazon Resource Name (ARN). For more information on dataset groups, see <a>CreateDatasetGroup</a>.'
      operationId: ListDatasetGroups
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListDatasetGroupsRequest'
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - enum:
            - AmazonPersonalize.ListDatasetGroups
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDatasetGroupsResponse'
        '480':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  '/#X-Amz-Target=AmazonPersonalize.ListDatasetImportJobs':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a list of dataset import jobs that use the given dataset. When a dataset is not specified, all the dataset import jobs associated with the account are listed. The response provides the properties for each dataset import job, including the Amazon Resource Name (ARN). For more information on dataset import jobs, see <a>CreateDatasetImportJob</a>. For more information on datasets, see <a>CreateDataset</a>.'
      operationId: ListDatasetImportJobs
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListDatasetImportJobsRequest'
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - enum:
            - AmazonPersonalize.ListDatasetImportJobs
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDatasetImportJobsResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  '/#X-Amz-Target=AmazonPersonalize.ListDatasets':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns the list of datasets contained in the given dataset group. The response provides the properties for each dataset, including the Amazon Resource Name (ARN). For more information on datasets, see <a>CreateDataset</a>.'
      operationId: ListDatasets
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListDatasetsRequest'
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - enum:
            - AmazonPersonalize.ListDatasets
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDatasetsResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  '/#X-Amz-Target=AmazonPersonalize.ListEventTrackers':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns the list of event trackers associated with the account. The response provides the properties for each event tracker, including the Amazon Resource Name (ARN) and tracking ID. For more information on event trackers, see <a>CreateEventTracker</a>.'
      operationId: ListEventTrackers
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListEventTrackersRequest'
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - enum:
            - AmazonPersonalize.ListEventTrackers
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListEventTrackersResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  '/#X-Amz-Target=AmazonPersonalize.ListRecipes':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a list of available recipes. The response provides the properties for each recipe, including the recipe''s Amazon Resource Name (ARN).'
      operationId: ListRecipes
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListRecipesRequest'
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - enum:
            - AmazonPersonalize.ListRecipes
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRecipesResponse'
        '480':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  '/#X-Amz-Target=AmazonPersonalize.ListSchemas':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns the list of schemas associated with the account. The response provides the properties for each schema, including the Amazon Resource Name (ARN). For more information on schemas, see <a>CreateSchema</a>.'
      operationId: ListSchemas
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListSchemasRequest'
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - enum:
            - AmazonPersonalize.ListSchemas
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSchemasResponse'
        '480':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  '/#X-Amz-Target=AmazonPersonalize.ListSolutionVersions':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a list of solution versions for the given solution. When a solution is not specified, all the solution versions associated with the account are listed. The response provides the properties for each solution version, including the Amazon Resource Name (ARN). For more information on solutions, see <a>CreateSolution</a>.'
      operationId: ListSolutionVersions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListSolutionVersionsRequest'
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - enum:
            - AmazonPersonalize.ListSolutionVersions
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSolutionVersionsResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#X-Amz-Target=AmazonPersonalize.ListSolutions':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a list of solutions that use the given dataset group. When a dataset group is not specified, all the solutions associated with the account are listed. The response provides the properties for each solution, including the Amazon Resource Name (ARN). For more information on solutions, see <a>CreateSolution</a>.'
      operationId: ListSolutions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListSolutionsRequest'
        - description: Pagination limit
          in: query
          name: maxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
        - enum:
            - AmazonPersonalize.ListSolutions
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSolutionsResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  '/#X-Amz-Target=AmazonPersonalize.UpdateCampaign':
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Updates a campaign by either deploying a new solution or changing the value of the campaign''s <code>minProvisionedTPS</code> parameter.</p> <p>To update a campaign, the campaign status must be ACTIVE or CREATE FAILED. Check the campaign status using the <a>DescribeCampaign</a> API.</p> <note> <p>You must wait until the <code>status</code> of the updated campaign is <code>ACTIVE</code> before asking the campaign for recommendations.</p> </note> <p>For more information on campaigns, see <a>CreateCampaign</a>.</p>'
      operationId: UpdateCampaign
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateCampaignRequest'
        - enum:
            - AmazonPersonalize.UpdateCampaign
          in: header
          name: X-Amz-Target
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateCampaignResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
definitions:
  AccountId:
    maxLength: 256
    type: string
  Algorithm:
    description: Describes a custom algorithm.
    properties:
      algorithmArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the algorithm.
      algorithmImage:
        $ref: '#/definitions/AlgorithmImage'
        description: The URI of the Docker container for the algorithm image.
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the algorithm was created.
      defaultHyperParameterRanges:
        $ref: '#/definitions/DefaultHyperParameterRanges'
        description: 'Specifies the default hyperparameters, their ranges, and whether they are tunable. A tunable hyperparameter can have its value determined during hyperparameter optimization (HPO).'
      defaultHyperParameters:
        $ref: '#/definitions/HyperParameters'
        description: Specifies the default hyperparameters.
      defaultResourceConfig:
        $ref: '#/definitions/ResourceConfig'
        description: Specifies the default maximum number of training jobs and parallel training jobs.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the algorithm was last updated.
      name:
        $ref: '#/definitions/Name'
        description: The name of the algorithm.
      roleArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the role.
      trainingInputMode:
        $ref: '#/definitions/TrainingInputMode'
        description: The training input mode.
    type: object
  AlgorithmImage:
    description: Describes an algorithm image.
    properties:
      dockerURI:
        $ref: '#/definitions/DockerURI'
        description: The URI of the Docker container for the algorithm image.
      name:
        $ref: '#/definitions/Name'
        description: The name of the algorithm image.
    required:
      - dockerURI
    type: object
  Arn:
    maxLength: 256
    pattern: 'arn:([a-z\d-]+):personalize:.*:.*:.+'
    type: string
  ArnList:
    items:
      $ref: '#/definitions/Arn'
    maxItems: 100
    type: array
  AutoMLConfig:
    description: 'When the solution performs AutoML (<code>performAutoML</code> is true in <a>CreateSolution</a>), Amazon Personalize determines which recipe, from the specified list, optimizes the given metric. Amazon Personalize then uses that recipe for the solution.'
    properties:
      metricName:
        $ref: '#/definitions/MetricName'
        description: The metric to optimize.
      recipeList:
        $ref: '#/definitions/ArnList'
        description: The list of candidate recipes.
    type: object
  AutoMLResult:
    description: 'When the solution performs AutoML (<code>performAutoML</code> is true in <a>CreateSolution</a>), specifies the recipe that best optimized the specified metric.'
    properties:
      bestRecipeArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the best recipe.
    type: object
  AvroSchema:
    maxLength: 10000
    type: string
  Campaign:
    description: 'Describes a deployed solution version, otherwise known as a campaign. For more information on campaigns, see <a>CreateCampaign</a>.'
    properties:
      campaignArn:
        $ref: '#/definitions/Arn'
        description: 'The Amazon Resource Name (ARN) of the campaign. '
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix format) that the campaign was created.
      failureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If a campaign fails, the reason behind the failure.'
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix format) that the campaign was last updated.
      latestCampaignUpdate:
        $ref: '#/definitions/CampaignUpdateSummary'
      minProvisionedTPS:
        $ref: '#/definitions/TransactionsPerSecond'
        description: Specifies the requested minimum provisioned transactions (recommendations) per second.
      name:
        $ref: '#/definitions/Name'
        description: The name of the campaign.
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of a specific version of the solution.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the campaign.</p> <p>A campaign can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
    type: object
  CampaignSummary:
    description: 'Provides a summary of the properties of a campaign. For a complete listing, call the <a>DescribeCampaign</a> API.'
    properties:
      campaignArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the campaign.
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the campaign was created.
      failureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If a campaign fails, the reason behind the failure.'
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the campaign was last updated.
      name:
        $ref: '#/definitions/Name'
        description: The name of the campaign.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the campaign.</p> <p>A campaign can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
    type: object
  CampaignUpdateSummary:
    description: 'Provides a summary of the properties of a campaign update. For a complete listing, call the <a>DescribeCampaign</a> API.'
    properties:
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the campaign update was created.
      failureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If a campaign update fails, the reason behind the failure.'
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the campaign update was last updated.
      minProvisionedTPS:
        $ref: '#/definitions/TransactionsPerSecond'
        description: Specifies the requested minimum provisioned transactions (recommendations) per second that Amazon Personalize will support.
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the deployed solution version.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the campaign update.</p> <p>A campaign update can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
    type: object
  Campaigns:
    items:
      $ref: '#/definitions/CampaignSummary'
    maxItems: 100
    type: array
  CategoricalHyperParameterRange:
    description: Provides the name and range of a categorical hyperparameter.
    properties:
      name:
        $ref: '#/definitions/ParameterName'
        description: The name of the hyperparameter.
      values:
        $ref: '#/definitions/CategoricalValues'
        description: A list of the categories for the hyperparameter.
    type: object
  CategoricalHyperParameterRanges:
    items:
      $ref: '#/definitions/CategoricalHyperParameterRange'
    maxItems: 100
    type: array
  CategoricalValue:
    maxLength: 1000
    type: string
  CategoricalValues:
    items:
      $ref: '#/definitions/CategoricalValue'
    maxItems: 100
    type: array
  ContinuousHyperParameterRange:
    description: Provides the name and range of a continuous hyperparameter.
    properties:
      maxValue:
        $ref: '#/definitions/ContinuousMaxValue'
        description: The maximum allowable value for the hyperparameter.
      minValue:
        $ref: '#/definitions/ContinuousMinValue'
        description: The minimum allowable value for the hyperparameter.
      name:
        $ref: '#/definitions/ParameterName'
        description: The name of the hyperparameter.
    type: object
  ContinuousHyperParameterRanges:
    items:
      $ref: '#/definitions/ContinuousHyperParameterRange'
    maxItems: 100
    type: array
  ContinuousMaxValue:
    format: double
    minimum: -1000000
    type: number
  ContinuousMinValue:
    format: double
    minimum: -1000000
    type: number
  CreateCampaignRequest:
    properties:
      minProvisionedTPS:
        $ref: '#/definitions/TransactionsPerSecond'
        description: Specifies the requested minimum provisioned transactions (recommendations) per second that Amazon Personalize will support.
      name:
        $ref: '#/definitions/Name'
        description: A name for the new campaign. The campaign name must be unique within your account.
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the solution version to deploy.
    required:
      - name
      - solutionVersionArn
      - minProvisionedTPS
    type: object
  CreateCampaignResponse:
    properties:
      campaignArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the campaign.
    type: object
  CreateDatasetGroupRequest:
    properties:
      kmsKeyArn:
        $ref: '#/definitions/KmsKeyArn'
        description: The Amazon Resource Name (ARN) of a KMS key used to encrypt the datasets.
      name:
        $ref: '#/definitions/Name'
        description: The name for the new dataset group.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the IAM role that has permissions to access the KMS key. Supplying an IAM role is only valid when also specifying a KMS key.
    required:
      - name
    type: object
  CreateDatasetGroupResponse:
    properties:
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the new dataset group.
    type: object
  CreateDatasetImportJobRequest:
    properties:
      dataSource:
        $ref: '#/definitions/DataSource'
        description: The Amazon S3 bucket that contains the training data to import.
      datasetArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the dataset that receives the imported data.
      jobName:
        $ref: '#/definitions/Name'
        description: The name for the dataset import job.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the IAM role that has permissions to read from the Amazon S3 data source.
    required:
      - jobName
      - datasetArn
      - dataSource
      - roleArn
    type: object
  CreateDatasetImportJobResponse:
    properties:
      datasetImportJobArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the dataset import job.
    type: object
  CreateDatasetRequest:
    properties:
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group to add the dataset to.
      datasetType:
        $ref: '#/definitions/DatasetType'
        description: '<p>The type of dataset.</p> <p>One of the following (case insensitive) values:</p> <ul> <li> <p>Interactions</p> </li> <li> <p>Items</p> </li> <li> <p>Users</p> </li> </ul>'
      name:
        $ref: '#/definitions/Name'
        description: The name for the dataset.
      schemaArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the schema to associate with the dataset. The schema defines the dataset fields.
    required:
      - name
      - schemaArn
      - datasetGroupArn
      - datasetType
    type: object
  CreateDatasetResponse:
    properties:
      datasetArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the dataset.
    type: object
  CreateEventTrackerRequest:
    properties:
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group that receives the event data.
      name:
        $ref: '#/definitions/Name'
        description: The name for the event tracker.
    required:
      - name
      - datasetGroupArn
    type: object
  CreateEventTrackerResponse:
    properties:
      eventTrackerArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the event tracker.
      trackingId:
        $ref: '#/definitions/TrackingId'
        description: 'The ID of the event tracker. Include this ID in requests to the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_UBS_PutEvents.html">PutEvents</a> API.'
    type: object
  CreateSchemaRequest:
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name for the schema.
      schema:
        $ref: '#/definitions/AvroSchema'
        description: A schema in Avro JSON format.
    required:
      - name
      - schema
    type: object
  CreateSchemaResponse:
    properties:
      schemaArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the created schema.
    type: object
  CreateSolutionRequest:
    properties:
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group that provides the training data.
      eventType:
        $ref: '#/definitions/EventType'
        description: 'When your have multiple event types (using an <code>EVENT_TYPE</code> schema field), this parameter specifies which event type (for example, ''click'' or ''like'') is used for training the model.'
      name:
        $ref: '#/definitions/Name'
        description: The name for the solution.
      performAutoML:
        $ref: '#/definitions/PerformAutoML'
        description: '<p>Whether to perform automated machine learning (AutoML). The default is <code>false</code>. For this case, you must specify <code>recipeArn</code>.</p> <p>When set to <code>true</code>, Amazon Personalize analyzes your training data and selects the optimal USER_PERSONALIZATION recipe and hyperparameters. In this case, you must omit <code>recipeArn</code>. Amazon Personalize determines the optimal recipe by running tests with different values for the hyperparameters. AutoML lengthens the training process as compared to selecting a specific recipe.</p>'
      performHPO:
        $ref: '#/definitions/PerformHPO'
        description: '<p>Whether to perform hyperparameter optimization (HPO) on the specified or selected recipe. The default is <code>false</code>.</p> <p>When performing AutoML, this parameter is always <code>true</code> and you should not set it to <code>false</code>.</p>'
      recipeArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the recipe to use for model training. Only specified when <code>performAutoML</code> is false.
      solutionConfig:
        $ref: '#/definitions/SolutionConfig'
        description: 'The configuration to use with the solution. When <code>performAutoML</code> is set to true, Amazon Personalize only evaluates the <code>autoMLConfig</code> section of the solution configuration.'
    required:
      - name
      - datasetGroupArn
    type: object
  CreateSolutionResponse:
    properties:
      solutionArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the solution.
    type: object
  CreateSolutionVersionRequest:
    properties:
      solutionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the solution containing the training configuration information.
    required:
      - solutionArn
    type: object
  CreateSolutionVersionResponse:
    properties:
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the new solution version.
    type: object
  DataSource:
    description: Describes the data source that contains the data to upload to a dataset.
    properties:
      dataLocation:
        $ref: '#/definitions/S3Location'
        description: '<p>The path to the Amazon S3 bucket where the data that you want to upload to your dataset is stored. For example: </p> <p> <code>s3://bucket-name/training-data.csv</code> </p>'
    type: object
  Dataset:
    description: Provides metadata for a dataset.
    properties:
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The creation date and time (in Unix time) of the dataset.
      datasetArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset that you want metadata for.
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group.
      datasetType:
        $ref: '#/definitions/DatasetType'
        description: '<p>One of the following values:</p> <ul> <li> <p>Interactions</p> </li> <li> <p>Items</p> </li> <li> <p>Users</p> </li> </ul>'
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: A time stamp that shows when the dataset was updated.
      name:
        $ref: '#/definitions/Name'
        description: The name of the dataset.
      schemaArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the associated schema.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the dataset.</p> <p>A dataset can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
    type: object
  DatasetGroup:
    description: '<p>A dataset group is a collection of related datasets (Interactions, User, and Item). You create a dataset group by calling <a>CreateDatasetGroup</a>. You then create a dataset and add it to a dataset group by calling <a>CreateDataset</a>. The dataset group is used to create and train a solution by calling <a>CreateSolution</a>. A dataset group can contain only one of each type of dataset.</p> <p>You can specify an AWS Key Management Service (KMS) key to encrypt the datasets in the group.</p>'
    properties:
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The creation date and time (in Unix time) of the dataset group.
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group.
      failureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If creating a dataset group fails, provides the reason why.'
      kmsKeyArn:
        $ref: '#/definitions/KmsKeyArn'
        description: The Amazon Resource Name (ARN) of the KMS key used to encrypt the datasets.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The last update date and time (in Unix time) of the dataset group.
      name:
        $ref: '#/definitions/Name'
        description: The name of the dataset group.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the IAM role that has permissions to create the dataset group.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The current status of the dataset group.</p> <p>A dataset group can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING</p> </li> </ul>'
    type: object
  DatasetGroupSummary:
    description: 'Provides a summary of the properties of a dataset group. For a complete listing, call the <a>DescribeDatasetGroup</a> API.'
    properties:
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the dataset group was created.
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group.
      failureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If creating a dataset group fails, the reason behind the failure.'
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the dataset group was last updated.
      name:
        $ref: '#/definitions/Name'
        description: The name of the dataset group.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the dataset group.</p> <p>A dataset group can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING</p> </li> </ul>'
    type: object
  DatasetGroups:
    items:
      $ref: '#/definitions/DatasetGroupSummary'
    maxItems: 100
    type: array
  DatasetImportJob:
    description: '<p>Describes a job that imports training data from a data source (Amazon S3 bucket) to an Amazon Personalize dataset. For more information, see <a>CreateDatasetImportJob</a>.</p> <p>A dataset import job can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul>'
    properties:
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The creation date and time (in Unix time) of the dataset import job.
      dataSource:
        $ref: '#/definitions/DataSource'
        description: The Amazon S3 bucket that contains the training data to import.
      datasetArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset that receives the imported data.
      datasetImportJobArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the dataset import job.
      failureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If a dataset import job fails, provides the reason why.'
      jobName:
        $ref: '#/definitions/Name'
        description: The name of the import job.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) the dataset was last updated.
      roleArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the AWS Identity and Access Management (IAM) role that has permissions to read from the Amazon S3 data source.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the dataset import job.</p> <p>A dataset import job can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul>'
    type: object
  DatasetImportJobSummary:
    description: 'Provides a summary of the properties of a dataset import job. For a complete listing, call the <a>DescribeDatasetImportJob</a> API.'
    properties:
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the dataset import job was created.
      datasetImportJobArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset import job.
      failureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If a dataset import job fails, the reason behind the failure.'
      jobName:
        $ref: '#/definitions/Name'
        description: The name of the dataset import job.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the dataset was last updated.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the dataset import job.</p> <p>A dataset import job can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul>'
    type: object
  DatasetImportJobs:
    items:
      $ref: '#/definitions/DatasetImportJobSummary'
    maxItems: 100
    type: array
  DatasetSchema:
    description: 'Describes the schema for a dataset. For more information on schemas, see <a>CreateSchema</a>.'
    properties:
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the schema was created.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the schema was last updated.
      name:
        $ref: '#/definitions/Name'
        description: The name of the schema.
      schema:
        $ref: '#/definitions/AvroSchema'
        description: The schema.
      schemaArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the schema.
    type: object
  DatasetSchemaSummary:
    description: 'Provides a summary of the properties of a dataset schema. For a complete listing, call the <a>DescribeSchema</a> API.'
    properties:
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the schema was created.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the schema was last updated.
      name:
        $ref: '#/definitions/Name'
        description: The name of the schema.
      schemaArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the schema.
    type: object
  DatasetSummary:
    description: 'Provides a summary of the properties of a dataset. For a complete listing, call the <a>DescribeDataset</a> API.'
    properties:
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the dataset was created.
      datasetArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset.
      datasetType:
        $ref: '#/definitions/DatasetType'
        description: '<p>The dataset type. One of the following values:</p> <ul> <li> <p>Interactions</p> </li> <li> <p>Items</p> </li> <li> <p>Users</p> </li> <li> <p>Event-Interactions</p> </li> </ul>'
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the dataset was last updated.
      name:
        $ref: '#/definitions/Name'
        description: The name of the dataset.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the dataset.</p> <p>A dataset can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
    type: object
  DatasetType:
    maxLength: 256
    type: string
  Datasets:
    items:
      $ref: '#/definitions/DatasetSummary'
    maxItems: 100
    type: array
  Date:
    format: date-time
    type: string
  DefaultCategoricalHyperParameterRange:
    description: Provides the name and default range of a categorical hyperparameter and whether the hyperparameter is tunable. A tunable hyperparameter can have its value determined during hyperparameter optimization (HPO).
    properties:
      isTunable:
        $ref: '#/definitions/Tunable'
        description: Whether the hyperparameter is tunable.
      name:
        $ref: '#/definitions/ParameterName'
        description: The name of the hyperparameter.
      values:
        $ref: '#/definitions/CategoricalValues'
        description: A list of the categories for the hyperparameter.
    type: object
  DefaultCategoricalHyperParameterRanges:
    items:
      $ref: '#/definitions/DefaultCategoricalHyperParameterRange'
    maxItems: 100
    type: array
  DefaultContinuousHyperParameterRange:
    description: Provides the name and default range of a continuous hyperparameter and whether the hyperparameter is tunable. A tunable hyperparameter can have its value determined during hyperparameter optimization (HPO).
    properties:
      isTunable:
        $ref: '#/definitions/Tunable'
        description: Whether the hyperparameter is tunable.
      maxValue:
        $ref: '#/definitions/ContinuousMaxValue'
        description: The maximum allowable value for the hyperparameter.
      minValue:
        $ref: '#/definitions/ContinuousMinValue'
        description: The minimum allowable value for the hyperparameter.
      name:
        $ref: '#/definitions/ParameterName'
        description: The name of the hyperparameter.
    type: object
  DefaultContinuousHyperParameterRanges:
    items:
      $ref: '#/definitions/DefaultContinuousHyperParameterRange'
    maxItems: 100
    type: array
  DefaultHyperParameterRanges:
    description: 'Specifies the hyperparameters and their default ranges. Hyperparameters can be categorical, continuous, or integer-valued.'
    properties:
      categoricalHyperParameterRanges:
        $ref: '#/definitions/DefaultCategoricalHyperParameterRanges'
        description: The categorical hyperparameters and their default ranges.
      continuousHyperParameterRanges:
        $ref: '#/definitions/DefaultContinuousHyperParameterRanges'
        description: The continuous hyperparameters and their default ranges.
      integerHyperParameterRanges:
        $ref: '#/definitions/DefaultIntegerHyperParameterRanges'
        description: The integer-valued hyperparameters and their default ranges.
    type: object
  DefaultIntegerHyperParameterRange:
    description: Provides the name and default range of a integer-valued hyperparameter and whether the hyperparameter is tunable. A tunable hyperparameter can have its value determined during hyperparameter optimization (HPO).
    properties:
      isTunable:
        $ref: '#/definitions/Tunable'
        description: Indicates whether the hyperparameter is tunable.
      maxValue:
        $ref: '#/definitions/IntegerMaxValue'
        description: The maximum allowable value for the hyperparameter.
      minValue:
        $ref: '#/definitions/IntegerMinValue'
        description: The minimum allowable value for the hyperparameter.
      name:
        $ref: '#/definitions/ParameterName'
        description: The name of the hyperparameter.
    type: object
  DefaultIntegerHyperParameterRanges:
    items:
      $ref: '#/definitions/DefaultIntegerHyperParameterRange'
    maxItems: 100
    type: array
  DeleteCampaignRequest:
    properties:
      campaignArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the campaign to delete.
    required:
      - campaignArn
    type: object
  DeleteDatasetGroupRequest:
    properties:
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the dataset group to delete.
    required:
      - datasetGroupArn
    type: object
  DeleteDatasetRequest:
    properties:
      datasetArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset to delete.
    required:
      - datasetArn
    type: object
  DeleteEventTrackerRequest:
    properties:
      eventTrackerArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the event tracker to delete.
    required:
      - eventTrackerArn
    type: object
  DeleteSchemaRequest:
    properties:
      schemaArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the schema to delete.
    required:
      - schemaArn
    type: object
  DeleteSolutionRequest:
    properties:
      solutionArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the solution to delete.
    required:
      - solutionArn
    type: object
  DescribeAlgorithmRequest:
    properties:
      algorithmArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the algorithm to describe.
    required:
      - algorithmArn
    type: object
  DescribeAlgorithmResponse:
    properties:
      algorithm:
        $ref: '#/definitions/Algorithm'
        description: A listing of the properties of the algorithm.
    type: object
  DescribeCampaignRequest:
    properties:
      campaignArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the campaign.
    required:
      - campaignArn
    type: object
  DescribeCampaignResponse:
    properties:
      campaign:
        $ref: '#/definitions/Campaign'
        description: The properties of the campaign.
    type: object
  DescribeDatasetGroupRequest:
    properties:
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group to describe.
    required:
      - datasetGroupArn
    type: object
  DescribeDatasetGroupResponse:
    properties:
      datasetGroup:
        $ref: '#/definitions/DatasetGroup'
        description: A listing of the dataset group's properties.
    type: object
  DescribeDatasetImportJobRequest:
    properties:
      datasetImportJobArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset import job to describe.
    required:
      - datasetImportJobArn
    type: object
  DescribeDatasetImportJobResponse:
    properties:
      datasetImportJob:
        $ref: '#/definitions/DatasetImportJob'
        description: '<p>Information about the dataset import job, including the status.</p> <p>The status is one of the following values:</p> <ul> <li> <p>CREATE PENDING</p> </li> <li> <p>CREATE IN_PROGRESS</p> </li> <li> <p>ACTIVE</p> </li> <li> <p>CREATE FAILED</p> </li> </ul>'
    type: object
  DescribeDatasetRequest:
    properties:
      datasetArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset to describe.
    required:
      - datasetArn
    type: object
  DescribeDatasetResponse:
    properties:
      dataset:
        $ref: '#/definitions/Dataset'
        description: A listing of the dataset's properties.
    type: object
  DescribeEventTrackerRequest:
    properties:
      eventTrackerArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the event tracker to describe.
    required:
      - eventTrackerArn
    type: object
  DescribeEventTrackerResponse:
    properties:
      eventTracker:
        $ref: '#/definitions/EventTracker'
        description: An object that describes the event tracker.
    type: object
  DescribeFeatureTransformationRequest:
    properties:
      featureTransformationArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the feature transformation to describe.
    required:
      - featureTransformationArn
    type: object
  DescribeFeatureTransformationResponse:
    properties:
      featureTransformation:
        $ref: '#/definitions/FeatureTransformation'
        description: A listing of the FeatureTransformation properties.
    type: object
  DescribeRecipeRequest:
    properties:
      recipeArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the recipe to describe.
    required:
      - recipeArn
    type: object
  DescribeRecipeResponse:
    properties:
      recipe:
        $ref: '#/definitions/Recipe'
        description: An object that describes the recipe.
    type: object
  DescribeSchemaRequest:
    properties:
      schemaArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the schema to retrieve.
    required:
      - schemaArn
    type: object
  DescribeSchemaResponse:
    properties:
      schema:
        $ref: '#/definitions/DatasetSchema'
        description: The requested schema.
    type: object
  DescribeSolutionRequest:
    properties:
      solutionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the solution to describe.
    required:
      - solutionArn
    type: object
  DescribeSolutionResponse:
    properties:
      solution:
        $ref: '#/definitions/Solution'
        description: An object that describes the solution.
    type: object
  DescribeSolutionVersionRequest:
    properties:
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the solution version.
    required:
      - solutionVersionArn
    type: object
  DescribeSolutionVersionResponse:
    properties:
      solutionVersion:
        $ref: '#/definitions/SolutionVersion'
        description: The solution version.
    type: object
  Description:
    type: string
  DockerURI:
    maxLength: 256
    type: string
  EventTracker:
    description: Provides information about an event tracker.
    properties:
      accountId:
        $ref: '#/definitions/AccountId'
        description: The Amazon AWS account that owns the event tracker.
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix format) that the event tracker was created.
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group that receives the event data.
      eventTrackerArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the event tracker.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the event tracker was last updated.
      name:
        $ref: '#/definitions/Name'
        description: The name of the event tracker.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the event tracker.</p> <p>An event tracker can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
      trackingId:
        $ref: '#/definitions/TrackingId'
        description: 'The ID of the event tracker. Include this ID in requests to the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_UBS_PutEvents.html">PutEvents</a> API.'
    type: object
  EventTrackerSummary:
    description: 'Provides a summary of the properties of an event tracker. For a complete listing, call the <a>DescribeEventTracker</a> API.'
    properties:
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the event tracker was created.
      eventTrackerArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the event tracker.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the event tracker was last updated.
      name:
        $ref: '#/definitions/Name'
        description: The name of the event tracker.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the event tracker.</p> <p>An event tracker can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
    type: object
  EventTrackers:
    items:
      $ref: '#/definitions/EventTrackerSummary'
    maxItems: 100
    type: array
  EventType:
    maxLength: 256
    type: string
  EventValueThreshold:
    maxLength: 256
    type: string
  FailureReason:
    type: string
  FeatureTransformation:
    description: Provides feature transformation information. Feature transformation is the process of modifying raw input data into a form more suitable for model training.
    properties:
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The creation date and time (in Unix time) of the feature transformation.
      defaultParameters:
        $ref: '#/definitions/FeaturizationParameters'
        description: Provides the default parameters for feature transformation.
      featureTransformationArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the FeatureTransformation object.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The last update date and time (in Unix time) of the feature transformation.
      name:
        $ref: '#/definitions/Name'
        description: The name of the feature transformation.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the feature transformation.</p> <p>A feature transformation can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul>'
    type: object
  FeatureTransformationParameters:
    additionalProperties:
      $ref: '#/definitions/ParameterValue'
    maxProperties: 100
    type: object
  FeaturizationParameters:
    additionalProperties:
      $ref: '#/definitions/ParameterValue'
    maxProperties: 100
    type: object
  GetSolutionMetricsRequest:
    properties:
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the solution version for which to get metrics.
    required:
      - solutionVersionArn
    type: object
  GetSolutionMetricsResponse:
    properties:
      metrics:
        $ref: '#/definitions/Metrics'
        description: The metrics for the solution version.
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The same solution version ARN as specified in the request.
    type: object
  HPOConfig:
    description: Describes the properties for hyperparameter optimization (HPO). For use with the bring-your-own-recipe feature. Do not use for Amazon Personalize native recipes.
    properties:
      algorithmHyperParameterRanges:
        $ref: '#/definitions/HyperParameterRanges'
        description: The hyperparameters and their allowable ranges.
      hpoObjective:
        $ref: '#/definitions/HPOObjective'
        description: The metric to optimize during HPO.
      hpoResourceConfig:
        $ref: '#/definitions/HPOResourceConfig'
        description: Describes the resource configuration for HPO.
    type: object
  HPOObjective:
    description: The metric to optimize during hyperparameter optimization (HPO).
    properties:
      metricName:
        $ref: '#/definitions/MetricName'
        description: The name of the metric.
      metricRegex:
        $ref: '#/definitions/MetricRegex'
        description: A regular expression for finding the metric in the training job logs.
      type:
        $ref: '#/definitions/HPOObjectiveType'
        description: The data type of the metric.
    type: object
  HPOObjectiveType:
    maxLength: 256
    type: string
  HPOResource:
    maxLength: 256
    type: string
  HPOResourceConfig:
    description: Describes the resource configuration for hyperparameter optimization (HPO).
    properties:
      maxNumberOfTrainingJobs:
        $ref: '#/definitions/HPOResource'
        description: The maximum number of training jobs.
      maxParallelTrainingJobs:
        $ref: '#/definitions/HPOResource'
        description: The maximum number of parallel training jobs.
    type: object
  HyperParameterRanges:
    description: 'Specifies the hyperparameters and their ranges. Hyperparameters can be categorical, continuous, or integer-valued.'
    properties:
      categoricalHyperParameterRanges:
        $ref: '#/definitions/CategoricalHyperParameterRanges'
        description: The categorical hyperparameters and their ranges.
      continuousHyperParameterRanges:
        $ref: '#/definitions/ContinuousHyperParameterRanges'
        description: The continuous hyperparameters and their ranges.
      integerHyperParameterRanges:
        $ref: '#/definitions/IntegerHyperParameterRanges'
        description: The integer-valued hyperparameters and their ranges.
    type: object
  HyperParameters:
    additionalProperties:
      $ref: '#/definitions/ParameterValue'
    maxProperties: 100
    type: object
  IntegerHyperParameterRange:
    description: Provides the name and range of an integer-valued hyperparameter.
    properties:
      maxValue:
        $ref: '#/definitions/IntegerMaxValue'
        description: The maximum allowable value for the hyperparameter.
      minValue:
        $ref: '#/definitions/IntegerMinValue'
        description: The minimum allowable value for the hyperparameter.
      name:
        $ref: '#/definitions/ParameterName'
        description: The name of the hyperparameter.
    type: object
  IntegerHyperParameterRanges:
    items:
      $ref: '#/definitions/IntegerHyperParameterRange'
    maxItems: 100
    type: array
  IntegerMaxValue:
    maximum: 1000000
    type: integer
  IntegerMinValue:
    minimum: -1000000
    type: integer
  InvalidInputException: {}
  InvalidNextTokenException: {}
  KmsKeyArn:
    type: string
  LimitExceededException: {}
  ListCampaignsRequest:
    properties:
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of campaigns to return.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token returned from the previous call to <code>ListCampaigns</code> for getting the next set of campaigns (if they exist).
      solutionArn:
        $ref: '#/definitions/Arn'
        description: 'The Amazon Resource Name (ARN) of the solution to list the campaigns for. When a solution is not specified, all the campaigns associated with the account are listed.'
    type: object
  ListCampaignsResponse:
    properties:
      campaigns:
        $ref: '#/definitions/Campaigns'
        description: A list of the campaigns.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token for getting the next set of campaigns (if they exist).
    type: object
  ListDatasetGroupsRequest:
    properties:
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of dataset groups to return.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token returned from the previous call to <code>ListDatasetGroups</code> for getting the next set of dataset groups (if they exist).
    type: object
  ListDatasetGroupsResponse:
    properties:
      datasetGroups:
        $ref: '#/definitions/DatasetGroups'
        description: The list of your dataset groups.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token for getting the next set of dataset groups (if they exist).
    type: object
  ListDatasetImportJobsRequest:
    properties:
      datasetArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset to list the dataset import jobs for.
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of dataset import jobs to return.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token returned from the previous call to <code>ListDatasetImportJobs</code> for getting the next set of dataset import jobs (if they exist).
    type: object
  ListDatasetImportJobsResponse:
    properties:
      datasetImportJobs:
        $ref: '#/definitions/DatasetImportJobs'
        description: The list of dataset import jobs.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token for getting the next set of dataset import jobs (if they exist).
    type: object
  ListDatasetsRequest:
    properties:
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group that contains the datasets to list.
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of datasets to return.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token returned from the previous call to <code>ListDatasetImportJobs</code> for getting the next set of dataset import jobs (if they exist).
    type: object
  ListDatasetsResponse:
    properties:
      datasets:
        $ref: '#/definitions/Datasets'
        description: An array of <code>Dataset</code> objects. Each object provides metadata information.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token for getting the next set of datasets (if they exist).
    type: object
  ListEventTrackersRequest:
    properties:
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The ARN of a dataset group used to filter the response.
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of event trackers to return.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token returned from the previous call to <code>ListEventTrackers</code> for getting the next set of event trackers (if they exist).
    type: object
  ListEventTrackersResponse:
    properties:
      eventTrackers:
        $ref: '#/definitions/EventTrackers'
        description: A list of event trackers.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token for getting the next set of event trackers (if they exist).
    type: object
  ListRecipesRequest:
    properties:
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of recipes to return.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token returned from the previous call to <code>ListRecipes</code> for getting the next set of recipes (if they exist).
      recipeProvider:
        $ref: '#/definitions/RecipeProvider'
        description: The default is <code>SERVICE</code>.
    type: object
  ListRecipesResponse:
    properties:
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token for getting the next set of recipes.
      recipes:
        $ref: '#/definitions/Recipes'
        description: The list of available recipes.
    type: object
  ListSchemasRequest:
    properties:
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of schemas to return.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token returned from the previous call to <code>ListSchemas</code> for getting the next set of schemas (if they exist).
    type: object
  ListSchemasResponse:
    properties:
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token used to get the next set of schemas (if they exist).
      schemas:
        $ref: '#/definitions/Schemas'
        description: A list of schemas.
    type: object
  ListSolutionVersionsRequest:
    properties:
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of solution versions to return.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token returned from the previous call to <code>ListSolutionVersions</code> for getting the next set of solution versions (if they exist).
      solutionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the solution.
    type: object
  ListSolutionVersionsResponse:
    properties:
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token for getting the next set of solution versions (if they exist).
      solutionVersions:
        $ref: '#/definitions/SolutionVersions'
        description: A list of solution versions describing the version properties.
    type: object
  ListSolutionsRequest:
    properties:
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group.
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of solutions to return.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token returned from the previous call to <code>ListSolutions</code> for getting the next set of solutions (if they exist).
    type: object
  ListSolutionsResponse:
    properties:
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token for getting the next set of solutions (if they exist).
      solutions:
        $ref: '#/definitions/Solutions'
        description: A list of the current solutions.
    type: object
  MaxResults:
    maximum: 100
    minimum: 1
    type: integer
  MetricName:
    maxLength: 256
    type: string
  MetricRegex:
    maxLength: 256
    type: string
  MetricValue:
    format: double
    type: number
  Metrics:
    additionalProperties:
      $ref: '#/definitions/MetricValue'
    maxProperties: 100
    type: object
  Name:
    maxLength: 63
    minLength: 1
    pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
    type: string
  NextToken:
    maxLength: 1300
    type: string
  ParameterName:
    maxLength: 256
    type: string
  ParameterValue:
    maxLength: 1000
    type: string
  PerformAutoML:
    type: boolean
  PerformHPO:
    type: boolean
  Recipe:
    description: 'Provides information about a recipe. Each recipe provides an algorithm that Amazon Personalize uses in model training when you use the <a>CreateSolution</a> operation. '
    properties:
      algorithmArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the algorithm that Amazon Personalize uses to train the model.
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix format) that the recipe was created.
      description:
        $ref: '#/definitions/Description'
        description: The description of the recipe.
      featureTransformationArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the FeatureTransformation object.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix format) that the recipe was last updated.
      name:
        $ref: '#/definitions/Name'
        description: The name of the recipe.
      recipeArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the recipe.
      recipeType:
        $ref: '#/definitions/RecipeType'
        description: '<p>One of the following values:</p> <ul> <li> <p>PERSONALIZED_RANKING</p> </li> <li> <p>RELATED_ITEMS</p> </li> <li> <p>USER_PERSONALIZATION</p> </li> </ul>'
      status:
        $ref: '#/definitions/Status'
        description: The status of the recipe.
    type: object
  RecipeProvider:
    enum:
      - SERVICE
    type: string
  RecipeSummary:
    description: 'Provides a summary of the properties of a recipe. For a complete listing, call the <a>DescribeRecipe</a> API.'
    properties:
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the recipe was created.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the recipe was last updated.
      name:
        $ref: '#/definitions/Name'
        description: The name of the recipe.
      recipeArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the recipe.
      status:
        $ref: '#/definitions/Status'
        description: The status of the recipe.
    type: object
  RecipeType:
    maxLength: 256
    type: string
  Recipes:
    items:
      $ref: '#/definitions/RecipeSummary'
    maxItems: 100
    type: array
  ResourceAlreadyExistsException: {}
  ResourceConfig:
    additionalProperties:
      $ref: '#/definitions/ParameterValue'
    maxProperties: 100
    type: object
  ResourceInUseException: {}
  ResourceNotFoundException: {}
  RoleArn:
    maxLength: 256
    pattern: 'arn:([a-z\d-]+):iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+'
    type: string
  S3Location:
    maxLength: 256
    type: string
  Schemas:
    items:
      $ref: '#/definitions/DatasetSchemaSummary'
    maxItems: 100
    type: array
  Solution:
    description: An object that provides information about a solution. A solution is a trained model that can be deployed as a campaign.
    properties:
      autoMLResult:
        $ref: '#/definitions/AutoMLResult'
        description: 'When <code>performAutoML</code> is true, specifies the best recipe found.'
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The creation date and time (in Unix time) of the solution.
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group that provides the training data.
      eventType:
        $ref: '#/definitions/EventType'
        description: 'The event type (for example, ''click'' or ''like'') that is used for training the model.'
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the solution was last updated.
      latestSolutionVersion:
        $ref: '#/definitions/SolutionVersionSummary'
        description: 'Describes the latest version of the solution, including the status and the ARN.'
      name:
        $ref: '#/definitions/Name'
        description: The name of the solution.
      performAutoML:
        $ref: '#/definitions/PerformAutoML'
        description: 'When true, Amazon Personalize performs a search for the best USER_PERSONALIZATION recipe from the list specified in the solution configuration (<code>recipeArn</code> must not be specified). When false (the default), Amazon Personalize uses <code>recipeArn</code> for training.'
      performHPO:
        $ref: '#/definitions/PerformHPO'
        description: Whether to perform hyperparameter optimization (HPO) on the chosen recipe. The default is <code>false</code>.
      recipeArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the recipe used to create the solution.
      solutionArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the solution.
      solutionConfig:
        $ref: '#/definitions/SolutionConfig'
        description: Describes the configuration properties for the solution.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the solution.</p> <p>A solution can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
    type: object
  SolutionConfig:
    description: Describes the configuration properties for the solution.
    properties:
      algorithmHyperParameters:
        $ref: '#/definitions/HyperParameters'
        description: Lists the hyperparameter names and ranges.
      autoMLConfig:
        $ref: '#/definitions/AutoMLConfig'
        description: The <a>AutoMLConfig</a> object containing a list of recipes to search when AutoML is performed.
      eventValueThreshold:
        $ref: '#/definitions/EventValueThreshold'
        description: Only events with a value greater than or equal to this threshold are used for training a model.
      featureTransformationParameters:
        $ref: '#/definitions/FeatureTransformationParameters'
        description: Lists the feature transformation parameters.
      hpoConfig:
        $ref: '#/definitions/HPOConfig'
        description: Describes the properties for hyperparameter optimization (HPO). For use with the bring-your-own-recipe feature. Not used with Amazon Personalize predefined recipes.
    type: object
  SolutionSummary:
    description: 'Provides a summary of the properties of a solution. For a complete listing, call the <a>DescribeSolution</a> API.'
    properties:
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the solution was created.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the solution was last updated.
      name:
        $ref: '#/definitions/Name'
        description: The name of the solution.
      solutionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the solution.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the solution.</p> <p>A solution can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
    type: object
  SolutionVersion:
    description: An object that provides information about a specific version of a <a>Solution</a>.
    properties:
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that this version of the solution was created.
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group providing the training data.
      eventType:
        $ref: '#/definitions/EventType'
        description: 'The event type (for example, ''click'' or ''like'') that is used for training the model.'
      failureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If training a solution version fails, the reason behind the failure.'
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the solution was last updated.
      performAutoML:
        $ref: '#/definitions/PerformAutoML'
        description: 'When true, Amazon Personalize performs a search for the most optimal recipe according to the solution configuration. When false (the default), Amazon Personalize uses <code>recipeArn</code>.'
      performHPO:
        $ref: '#/definitions/PerformHPO'
        description: Whether to perform hyperparameter optimization (HPO) on the chosen recipe. The default is <code>false</code>.
      recipeArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the recipe used in the solution.
      solutionArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the solution.
      solutionConfig:
        $ref: '#/definitions/SolutionConfig'
        description: Describes the configuration properties for the solution.
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the solution version.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the solution version.</p> <p>A solution version can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul>'
    type: object
  SolutionVersionSummary:
    description: 'Provides a summary of the properties of a solution version. For a complete listing, call the <a>DescribeSolutionVersion</a> API.'
    properties:
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that this version of a solution was created.
      failureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If a solution version fails, the reason behind the failure.'
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the solution version was last updated.
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the solution version.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the solution version.</p> <p>A solution version can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul>'
    type: object
  SolutionVersions:
    items:
      $ref: '#/definitions/SolutionVersionSummary'
    maxItems: 100
    type: array
  Solutions:
    items:
      $ref: '#/definitions/SolutionSummary'
    maxItems: 100
    type: array
  Status:
    maxLength: 256
    type: string
  TrackingId:
    maxLength: 256
    type: string
  TrainingInputMode:
    maxLength: 256
    type: string
  TransactionsPerSecond:
    minimum: 1
    type: integer
  Tunable:
    type: boolean
  UpdateCampaignRequest:
    properties:
      campaignArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the campaign.
      minProvisionedTPS:
        $ref: '#/definitions/TransactionsPerSecond'
        description: Specifies the requested minimum provisioned transactions (recommendations) per second that Amazon Personalize will support.
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The ARN of a new solution version to deploy.
    required:
      - campaignArn
    type: object
  UpdateCampaignResponse:
    properties:
      campaignArn:
        $ref: '#/definitions/Arn'
        description: The same campaign ARN as given in the request.
    type: object
x-servers:
  - description: The Amazon Personalize multi-region endpoint
    url: 'http://personalize.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The Amazon Personalize multi-region endpoint
    url: 'https://personalize.{region}.amazonaws.com'
    variables:
      region:
        default: us-east-1
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
  - description: The Amazon Personalize endpoint for China (Beijing) and China (Ningxia)
    url: 'http://personalize.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
  - description: The Amazon Personalize endpoint for China (Beijing) and China (Ningxia)
    url: 'https://personalize.{region}.amazonaws.com.cn'
    variables:
      region:
        default: cn-north-1
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
