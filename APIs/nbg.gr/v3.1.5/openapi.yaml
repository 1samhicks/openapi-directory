openapi: 3.0.1
servers:
  - description: Sandbox Server
    url: https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5
  - description: Production Server
    url: https://services.nbg.gr/apis/open-banking/v3.1.5/aisp
info:
  contact:
    email: developer@nbg.gr
  description: "## Functionality at a glance\r

    \r

    The NBG \"UK OPB - Account and Transaction v3.1.5\" API follows the [UK
    Open Banking Specification\r

    \    v3.1.5](https://openbankinguk.github.io/read-write-api-site3/v3.1.\
    5/profiles/account-and-transaction-api-profile.html)\r

    \r

    This Account and Transaction API Specification describes the flows and
    payloads for retrieving a list of accounts and their transactions.\r

    \r

    The API endpoints described here allow a AISP to:  \r

    \r

    * Create the Consent with the appropriate permissions in order to be
    able to access the API Endpoints\r

    \r

    * Retrieve the list of accounts\r

    \r

    * Retrieve an account's details\r

    \r

    * Retrieve an account's balances\r

    \r

    * Retrieve an account's transactions\r

    \r

    * Retrieve an account's beneficiaries\r

    \r

    * Retrieve an account's standing orders\r

    \r

    * Retrieve an account's party\r

    \r

    * Retrieve an account's scheduled payments\r

    \r

    * Retrieve an account's statements\r

    \r

    \r

    \r

    ## Quick Getting Started\r

    \r

    \r

    1. **Login/Register** to the NBG Technology HUB\r

    \r

    2. Go to **\"APPS\"**\r

    \r

    3. Select your Organization and go to step 4. If you want to create a
    new Organization click **\\\"CREATE AN ORGANIZATION\\\"** and follow the
    steps below:\r

    \t1. Enter the title of your Organization\r

    \t2. Enter a short description of your Organization (optional)\r

    \t3. Click **\"SUBMIT\"**\r

    \r

    4. Select the Organization of choice and click **\"ADD AN
    APPLICATION\"** \r

    \t  1. Fill in the forms (title and short description)\r

    \t  2. Check **\\\"Authorization Code\\\" and \\\"Client
    Credentials\\\"** \r

    \t  3. Enter the **OAuth Redirect and Post Logout URIs** (these are the
    URIs that we will redirect the user upon logging in and logging out
    respectively)\r

    \t\t  \r

    \t\t  You can use the following redirect URL to easily test the API
    through the portal: *https://developer.nbg.gr/oauth2/redoc-callback*\r

    \t  4. Click **\"SUBMIT\"**\r

    \t  5. Store the APPs **\"Client ID\"** and **\"Client Secret\"**\r

    5. Go to **\"API PRODUCTS\"** and select the **ACCOUNT INFORMATION - UK
    OPEN BANKING API**\r

    \r

    6. Click **\\\"START USING THIS API\\\"**, choose your app and click\r

    **\"SUBSCRIBE\"**\r

    \r

    7. Get an Access Token using the Access Token Flow and the API scopes
    provided in the Authentication and Authorization (OAuth2) section below\r

    \r

    8. Create a Sandbox\r

    \r

    9. Play with the API \r

    \r

    \r

    ### Sandbox Flow\r

    \r

    The Sandbox Flow matches the Production Flow. The difference lies into
    the Data used. Instead of live\r

    data, the Sandbox flow uses mocked data.\r

    \r

    \r

    ### Production Flow  \r

    \r

    The Production Flow is described in the [UK Open Banking v3.1.5\r

    Specification](https://openbankinguk.github.io/read-write-api-site3/v3.\
    1.5/profiles/account-and-transaction-api-profile.html)\r

    \r

    More details about the implementation specifics followed, please visit
    section **UK OPB Implementation\r

    Specifics**\r

    \r

    \r

    ## Authentication and Authorization (OAuth2)\r

    \r

    This API version uses the OAuth2 protocol for authentication and
    authorization, which means that a\r

    Bearer (access token) should be acquired. An access token can be
    retrieved using the client_id and\r

    client_secret of the APP that you created and subscribed in this API,
    and your own credentials\r

    (username, password) that you use to sign in the NBG Technology HUB. The
    scopes are defined below:\r

    \r

    **Authorization Endpoint:** \r

    \r

    \t  https://my.nbg.gr/identity/connect/authorize\r

    \r

    \r

    **Token Endpoint:** \r

    \r

    \t  https://my.nbg.gr/identity/connect/token\r

    \r

    ### Authorization Code ###\r

    \r

    **Sandbox Scopes:** \r

    \r

    \t  sandbox-uk-account-info-api-v1 offline_access\r

    \r

    \r

    **Production Scopes:** \r

    \r

    \t  accounts offline_access\r

    \r

    ### Client Credentials ###\r

    \r

    **Sandbox Scopes:** \r

    \r

    \t  sandbox-uk-account-info-api-v1\r

    \r

    \r

    **Production Scopes:** \r

    \r

    \t  accounts\r

    \r

    \r

    See more [here](https://developer.nbg.gr/oauth-document)\r

    \r

    ## QWAC Certificates\r

    \r

    TPPs are required to present a QWAC certificate during API consumption.
    The API checks that this certificate has been provided and is valid. In
    sandbox mode the certificate validations are optional. To validate your
    certificate in sandbox implementation, please send us your QWAC certificate
    at developer@nbg.gr and set the HTTP Header
    **\\\"x-sandbox-qwac-certificate-check\\\"** with the value **\\\"true\\\"**
    in your requests. \r

    \r

    ## SMS Challenge (One Time Password)\r

    \r

    In order to successfully authorize an Accounts Access you will need to
    provide the SMS OTP (One Time Password) in the corresponding Accounts
    Consent UI Screen.\r

    \r

    By default the SMS OTP will be sent to the mobile number declared upon
    singing up in the NBG Technology HUB. \r

    \r

    \r

    \r

    ## Create your Sandbox\r

    \r

    Create a new Sandbox application by invoking the POST /sandbox. This
    call will generate a new Sandbox\r

    with a unique sandbox-id.\r

    \r

    \r

    __Important!__ Before proceeding save the sandbox id you just created.\r

    \r

    \r

    When you create a sandbox, users and sandbox specific data are generated
    as sample data.\r

    \r

    \r

    ## Start Testing\r

    \r

    Once you have your sandbox-id, you can start invoking the rest of the
    operations by providing the\r

    mandatory http header **sandbox-id**  and the http headers described
    below.\r

    \r

    \r

    ## Important notes\r

    \r

    \r

    **Request headers**\r

    \r

    \r

    The following HTTP header parameters are required for every call:\r

    \r

    \r

    1. Authorization. The Auth2 Token\r

    \r

    2. sandbox-id. Your Sandbox ID\r

    \r

    \r

    **Consent**\r

    \r

    \r

    In order to be able to effectively start using the Endpoints the
    appropriate Consent needs to be\r

    created and set to the 'Authorised' status. \r

    \r

    \r

    In order to create the Consent you need to at least set the required
    **permissions** and the **Risk**\r

    sections. \r

    \r

    \r

    Optionally you may set the \r

    \r

    \r

    1. ExpirationDateTime. When the Consent expires \r

    \r

    \r

    2. TransactionFromDateTime. Start Date to retrieve the transactions \r

    \r

    \r

    3. TransactionToDateTime. End Date to retrieve the transactions \r

    \r

    **Not Implemented Endpoints**\r

    \r

    The following endpoints are not implemented in the API\r

    \r

    1. GET /balances\r

    2. GET /transactions\r

    3. GET /beneficiaries\r

    4. GET /accounts/\\{AccountId\\}/direct-debits\r

    5. GET /direct-debits\r

    6. GET /standing-orders\r

    7. GET /accounts/\\{AccountId\\}/product\r

    8. GET /products\r

    9. GET /accounts/\\{AccountId\\}/offers\r

    10. GET /offers\r

    11. GET /scheduled-payments\r

    12. GET /statements\r

    \r

    \r

    ## Error Codes\r

    \r

    The error codes and their description can be found\r

    [here](https://openbankinguk.github.io/read-write-api-site3/v3.1.5/prof\
    iles/read-write-data-api-profile.html#error-response-structure)\r

    \r

    \r

    # UK OPB Implementation Specifics \r

    \r

    Below you may find more specific information & limitations regarding the
    implementation followed in the Production API.\r

    \r

    \r

    ## Token Endpoint Client Authentication\r

    \r

    At this point the supported __Client Authentication__ method is
    \"__Client Secret Basic__\" - usage of \"Client ID\" & \"Client Secret\".\r

    \r

    \r

    ## Consent Authorization\r

    \r

    For a PSU to Authorize a Consent, they need to be redirected to the
    appropriate Consent UI.\r

    \r

    For this redirection to take place the TPP needs to follow the
    Authorization Endpoint by amending the generated \"Consent ID\", like this:
    https://my.nbg.gr/identity/connect/authorize?consent_id={{consent_id}}&clie\
    nt_id={{client_id}}&scope={{scope}}&redirect_uri={{redirect_uri}}&response_\
    type=code\r

    \r

    Once the PSU is redirected to the Consent Authorization Screen, they
    need to enter their IBank (Production) or Developer Portal (Sandbox)
    Credentials and either Authorize or Reject the Consent.\r

    \r

    At this point the Consent is binded with the PSU.\r

    \r

    \r

    ## Debtor Account\r

    Currently, only the \"UK.OBIE.IBAN\" scheme is supported.\r

    \r

    \r

    \r

    # Feedback and Questions\r

    \r

    We would love to hear your feedback and answer your questions. Send us
    at\r

    [developer@nbg.gr](developer@nbg.gr)\r

    \r

    \r

    Check out our [Sandbox Postman\r

    Collection](https://github.com/NBG-Developer-Portal/Account-Information\
    -UK-Open-Banking)!\r

    \r

    \r

    ________________________________________\r

    \r

    Created by [**NBG**](https://www.nbg.gr/).


    \ # Entities\ 


    \ Below, the main entities are documented.

    \ <a name=OBExternalPermissions1Code></a>\ 

    ## OBExternalPermissions1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Specifies the Open Banking account access data types. This is a
    list of the data clusters being consented by the PSU, and requested for
    authorisation with the ASPSP.| <ul style=\"padding-left:
    0\"><li>ReadAccountsBasic</li><li>ReadAccountsDetail</li><li>ReadBalances</\
    li><li>ReadBeneficiariesBasic</li><li>ReadBeneficiariesDetail</li><li>ReadD\
    irectDebits</li><li>ReadOffers</li><li>ReadPAN</li><li>ReadParty</li><li>Re\
    adPartyPSU</li><li>ReadProducts</li><li>ReadScheduledPaymentsBasic</li><li>\
    ReadScheduledPaymentsDetail</li><li>ReadStandingOrdersBasic</li><li>ReadSta\
    ndingOrdersDetail</li><li>ReadStatementsBasic</li><li>ReadStatementsDetail<\
    /li><li>ReadTransactionsBasic</li><li>ReadTransactionsCredits</li><li>ReadT\
    ransactionsDebits</li><li>ReadTransactionsDetail</li></ul>|


    \ <a name=OBReadData1></a>\ 

    ## OBReadData1\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Permissions| Specifies the Open Banking account access data types.
    This is a list of the data clusters being consented by the PSU, and
    requested for authorisation with the ASPSP.|
    array[[OBExternalPermissions1Code](#OBExternalPermissions1Code)]|

    | ExpirationDateTime| Specified date and time the permissions will
    expire. If this is not populated, the permissions will be open ended. All
    dates in the JSON payloads are represented in ISO 8601 date-time
    format.  All date-time fields in responses must include the timezone. An
    example is below: 2017-04-05T10:43:07+00:00| string|

    | TransactionFromDateTime| Specified start date and time for the
    transaction query period. If this is not populated, the start date will be
    open ended, and data will be returned from the earliest available
    transaction. All dates in the JSON payloads are represented in ISO 8601
    date-time format.  All date-time fields in responses must include the
    timezone. An example is below: 2017-04-05T10:43:07+00:00| string|

    | TransactionToDateTime| Specified end date and time for the transaction
    query period. If this is not populated, the end date will be open ended, and
    data will be returned to the latest available transaction. All dates in the
    JSON payloads are represented in ISO 8601 date-time format.  All date-time
    fields in responses must include the timezone. An example is below:
    2017-04-05T10:43:07+00:00| string|


    \ <a name=OBRisk2></a>\ 

    ## OBRisk2\ 

    The Risk section is sent by the initiating party to the ASPSP. It is
    used to specify additional details for risk scoring for Account Info.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|


    \ <a name=OBReadConsent1></a>\ 

    ## OBReadConsent1\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadData1](#OBReadData1)</summary><ul><li>Permissions
    [array[[OBExternalPermissions1Code](#OBExternalPermissions1Code)]]</li>
    <li>ExpirationDateTime [string]</li> <li>TransactionFromDateTime
    [string]</li> <li>TransactionToDateTime [string]</li> </ul></details> |\ 

    | Risk | Entity |
    <details><summary>[OBRisk2](#OBRisk2)</summary><ul></ul></details> |\ 


    \ <a name=OBExternalRequestStatus1Code></a>\ 

    ## OBExternalRequestStatus1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Specifies the status of consent resource in code form.| <ul
    style=\"padding-left:
    0\"><li>Authorised</li><li>AwaitingAuthorisation</li><li>Rejected</li><li>R\
    evoked</li></ul>|


    \ <a name=OBReadDataConsentResponse1></a>\ 

    ## OBReadDataConsentResponse1\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | ConsentId| Unique identification as assigned to identify the account
    access consent resource.| string|

    | CreationDateTime| Date and time at which the resource was created. All
    dates in the JSON payloads are represented in ISO 8601 date-time
    format.  All date-time fields in responses must include the timezone. An
    example is below: 2017-04-05T10:43:07+00:00| string|

    | Status | Entity |
    <details><summary>[OBExternalRequestStatus1Code](#OBExternalRequestStatus1C\
    ode)</summary><ul></ul></details> |\ 

    | StatusUpdateDateTime| Date and time at which the resource status was
    updated. All dates in the JSON payloads are represented in ISO 8601
    date-time format.  All date-time fields in responses must include the
    timezone. An example is below: 2017-04-05T10:43:07+00:00| string|

    | Permissions| Specifies the Open Banking account access data types.
    This is a list of the data clusters being consented by the PSU, and
    requested for authorisation with the ASPSP.|
    array[[OBExternalPermissions1Code](#OBExternalPermissions1Code)]|

    | ExpirationDateTime| Specified date and time the permissions will
    expire. If this is not populated, the permissions will be open ended. All
    dates in the JSON payloads are represented in ISO 8601 date-time
    format.  All date-time fields in responses must include the timezone. An
    example is below: 2017-04-05T10:43:07+00:00| string|

    | TransactionFromDateTime| Specified start date and time for the
    transaction query period. If this is not populated, the start date will be
    open ended, and data will be returned from the earliest available
    transaction. All dates in the JSON payloads are represented in ISO 8601
    date-time format.  All date-time fields in responses must include the
    timezone. An example is below: 2017-04-05T10:43:07+00:00| string|

    | TransactionToDateTime| Specified end date and time for the transaction
    query period. If this is not populated, the end date will be open ended, and
    data will be returned to the latest available transaction. All dates in the
    JSON payloads are represented in ISO 8601 date-time format.  All date-time
    fields in responses must include the timezone. An example is below:
    2017-04-05T10:43:07+00:00| string|


    \ <a name=Links></a>\ 

    ## Links\ 

    Links relevant to the payload\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Self| -| string|

    | First| -| string|

    | Prev| -| string|

    | Next| -| string|

    | Last| -| string|


    \ <a name=Meta></a>\ 

    ## Meta\ 

    Meta Data relevant to the payload\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | TotalPages| -| integer|

    | FirstAvailableDateTime| All dates in the JSON payloads are represented
    in ISO 8601 date-time format. All date-time fields in responses must include
    the timezone.An example is below: 2017-04-05T10:43:07+00:00| string|

    | LastAvailableDateTime| All dates in the JSON payloads are represented
    in ISO 8601 date-time format. All date-time fields in responses must include
    the timezone.An example is below: 2017-04-05T10:43:07+00:00| string|


    \ <a name=OBReadConsentResponse1></a>\ 

    ## OBReadConsentResponse1\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadDataConsentResponse1](#OBReadDataConsentResponse1)\
    </summary><ul><li>ConsentId [string]</li> <li>CreationDateTime [string]</li>
    <li><details><summary>Status
    [[OBExternalRequestStatus1Code](#OBExternalRequestStatus1Code)]</summary><u\
    l></ul></details></li><li>StatusUpdateDateTime [string]</li> <li>Permissions
    [array[[OBExternalPermissions1Code](#OBExternalPermissions1Code)]]</li>
    <li>ExpirationDateTime [string]</li> <li>TransactionFromDateTime
    [string]</li> <li>TransactionToDateTime [string]</li> </ul></details> |\ 

    | Risk | Entity |
    <details><summary>[OBRisk2](#OBRisk2)</summary><ul></ul></details> |\ 

    | Links | Entity |
    <details><summary>[Links](#Links)</summary><ul><li>Self [string]</li>
    <li>First [string]</li> <li>Prev [string]</li> <li>Next [string]</li>
    <li>Last [string]</li> </ul></details> |\ 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li>FirstAvailableDateTime [string]</li> <li>LastAvailableDateTime
    [string]</li> </ul></details> |\ 


    \ <a name=ErrorCode></a>\ 

    ## ErrorCode\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| This is Data Type gives a low level textual error code to help
    categorise an error response. The applicable HTTP response code is also
    given.| <ul style=\"padding-left:
    0\"><li>UK.OBIE.Field.Expected</li><li>UK.OBIE.Field.Invalid</li><li>UK.OBI\
    E.Field.InvalidDate</li><li>UK.OBIE.Field.Missing</li><li>UK.OBIE.Field.Une\
    xpected</li><li>UK.OBIE.Header.Invalid</li><li>UK.OBIE.Header.Missing</li><\
    li>UK.OBIE.Resource.ConsentMismatch</li><li>UK.OBIE.Resource.InvalidConsent\
    Status</li><li>UK.OBIE.Resource.InvalidFormat</li><li>UK.OBIE.Resource.NotF\
    ound</li><li>UK.OBIE.Rules.AfterCutOffDateTime</li><li>UK.OBIE.Rules.Duplic\
    ateReference</li><li>UK.OBIE.Signature.Invalid</li><li>UK.OBIE.Signature.In\
    validClaim</li><li>UK.OBIE.Signature.MissingClaim</li><li>UK.OBIE.Signature\
    .Malformed</li><li>UK.OBIE.Signature.Missing</li><li>UK.OBIE.Signature.Unex\
    pected</li><li>UK.OBIE.Unsupported.AccountIdentifier</li><li>UK.OBIE.Unsupp\
    orted.AccountSecondaryIdentifier</li><li>UK.OBIE.Unsupported.Currency</li><\
    li>UK.OBIE.Unsupported.EventType</li><li>UK.OBIE.Unsupported.Frequency</li>\
    <li>UK.OBIE.Unsupported.LocalInstrument</li><li>UK.OBIE.Unsupported.Scheme<\
    /li><li>UK.OBIE.Reauthenticate</li><li>UK.OBIE.Rules.ResourceAlreadyExists<\
    /li><li>UK.OBIE.UnexpectedError</li></ul>|


    \ <a name=OBError1></a>\ 

    ## OBError1\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | ErrorCode | Entity |
    <details><summary>[ErrorCode](#ErrorCode)</summary><ul></ul></details> |\ 

    | Message| A description of the error that occurred. e.g., 'A mandatory
    field isn't supplied' or 'RequestedExecutionDateTime must be in future'OBIE
    doesn't standardise this field| string|

    | Path| Recommended but optional reference to the JSON Path of the field
    with error, e.g., Data.Initiation.InstructedAmount.Currency| string|

    | Url| URL to help remediate the problem, or provide more information,
    or to API Reference, or help etc| string|


    \ <a name=OBErrorResponse1></a>\ 

    ## OBErrorResponse1\ 

    An array of detail error codes, and messages, and URLs to documentation
    to help remediation.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Code| High level textual error code, to help categorize the errors.|
    string|

    | Id| A unique reference for the error instance, for audit purposes, in
    case of unknown/unclassified errors.| string|

    | Message| Brief Error message, e.g., 'There is something wrong with the
    request parameters provided'| string|

    | Errors| Gets or Sets Errors| array[[OBError1](#OBError1)]|


    \ <a name=OBAccountStatus1Code></a>\ 

    ## OBAccountStatus1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| -| <ul style=\"padding-left:
    0\"><li>Deleted</li><li>Disabled</li><li>Enabled</li><li>Pending</li><li>Pr\
    oForma</li></ul>|


    \ <a name=OBExternalAccountType1Code></a>\ 

    ## OBExternalAccountType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| -| <ul style=\"padding-left:
    0\"><li>Business</li><li>Personal</li></ul>|


    \ <a name=OBExternalAccountSubType1Code></a>\ 

    ## OBExternalAccountSubType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| -| <ul style=\"padding-left:
    0\"><li>ChargeCard</li><li>CreditCard</li><li>CurrentAccount</li><li>EMoney\
    </li><li>Loan</li><li>Mortgage</li><li>PrePaidCard</li><li>Savings</li></ul\
    >|


    \ <a name=OBCashAccount5></a>\ 

    ## OBCashAccount5\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | SchemeName| Name of the identification scheme, in a coded form as
    published in an external list.| string|

    | Identification| Identification assigned by an institution to identify
    an account. This identification is known by the account owner.| string|

    | Name| The account name is the name or names of the account owner(s)
    represented at an account level, as displayed by the ASPSP's online
    channels. Note, the account name is not the product name or the nickname of
    the account.| string|

    | SecondaryIdentification| This is secondary identification of the
    account, as assigned by the account servicing institution. This can be used
    by building societies to additionally identify accounts with a roll
    number(in addition to a sort code and account number combination).| string|


    \ <a name=OBBranchAndFinancialInstitutionIdentification5></a>\ 

    ## OBBranchAndFinancialInstitutionIdentification5\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | SchemeName| Name of the identification scheme, in a coded form as
    published in an external list.| string|

    | Identification| Unique and unambiguous identification of the servicing
    institution.| string|


    \ <a name=OBAccount6></a>\ 

    ## OBAccount6\ 

    Unambiguous identification of the account to which credit and debit
    entries are made.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId| A unique and immutable identifier used to identify the
    account resource. This identifier has no meaning to the account owner.|
    string|

    | Status | Entity |
    <details><summary>[OBAccountStatus1Code](#OBAccountStatus1Code)</summary><u\
    l></ul></details> |\ 

    | StatusUpdateDateTime| Date and time at which the resource status was
    updated.All dates in the JSON payloads are represented in ISO 8601 date-time
    format.  All date-time fields in responses must include the timezone. An
    example is below: 2017-04-05T10:43:07+00:00| string|

    | Currency| Identification of the currency in which the account is
    held.  Usage: Currency should only be used in case one and the same account
    number covers several currencies and the initiating party needs to identify
    which currency needs to be used for settlement on the account.| string|

    | AccountType | Entity |
    <details><summary>[OBExternalAccountType1Code](#OBExternalAccountType1Code)\
    </summary><ul></ul></details> |\ 

    | AccountSubType | Entity |
    <details><summary>[OBExternalAccountSubType1Code](#OBExternalAccountSubType\
    1Code)</summary><ul></ul></details> |\ 

    | Description| Specifies the description of the account type.| string|

    | Nickname| The nickname of the account, assigned by the account owner
    in order to provide an additional means of identification of the account.|
    string|

    | OpeningDate| Date on which the account and related basic services are
    effectively operational for the account owner.All dates in the JSON payloads
    are represented in ISO 8601 date-time format.  All date-time fields in
    responses must include the timezone. An example is below:
    2017-04-05T10:43:07+00:00| string|

    | MaturityDate| Maturity date of the account.All dates in the JSON
    payloads are represented in ISO 8601 date-time format.  All date-time fields
    in responses must include the timezone. An example is below:
    2017-04-05T10:43:07+00:00| string|

    | Account| Provides the details to identify an account.|
    array[[OBCashAccount5](#OBCashAccount5)]|

    | Servicer | Entity |
    <details><summary>[OBBranchAndFinancialInstitutionIdentification5](#OBBranc\
    hAndFinancialInstitutionIdentification5)</summary><ul><li>SchemeName
    [string]</li> <li>Identification [string]</li> </ul></details> |\ 


    \ <a name=OBReadDataAccount5></a>\ 

    ## OBReadDataAccount5\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Account| Unambiguous identification of the account to which credit and
    debit entries are made.| array[[OBAccount6](#OBAccount6)]|


    \ <a name=OBReadAccount5></a>\ 

    ## OBReadAccount5\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadDataAccount5](#OBReadDataAccount5)</summary><ul><l\
    i>Account [array[[OBAccount6](#OBAccount6)]]</li> </ul></details> |\ 

    | Links | Entity |
    <details><summary>[Links](#Links)</summary><ul><li>Self [string]</li>
    <li>First [string]</li> <li>Prev [string]</li> <li>Next [string]</li>
    <li>Last [string]</li> </ul></details> |\ 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li>FirstAvailableDateTime [string]</li> <li>LastAvailableDateTime
    [string]</li> </ul></details> |\ 


    \ <a name=OBCreditDebitCode></a>\ 

    ## OBCreditDebitCode\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| -| <ul style=\"padding-left:
    0\"><li>Credit</li><li>Debit</li></ul>|


    \ <a name=OBBalanceType1Code></a>\ 

    ## OBBalanceType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| -| <ul style=\"padding-left:
    0\"><li>ClosingAvailable</li><li>ClosingBooked</li><li>ClosingCleared</li><\
    li>Expected</li><li>ForwardAvailable</li><li>Information</li><li>InterimAva\
    ilable</li><li>InterimBooked</li><li>InterimCleared</li><li>OpeningAvailabl\
    e</li><li>OpeningBooked</li><li>OpeningCleared</li><li>PreviouslyClosedBook\
    ed</li></ul>|


    \ <a name=OBActiveOrHistoricCurrencyAndAmount></a>\ 

    ## OBActiveOrHistoricCurrencyAndAmount\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Amount| A number of monetary units specified in an active currency
    where the unit of currency is explicit and compliant with ISO 4217.| string|

    | Currency| A code allocated to a currency by a Maintenance Agency under
    an international identification scheme, as described in the latest edition
    of the international standard ISO 4217 \"Codes for the representation of
    currencies and funds\".| string|


    \ <a name=OBExternalLimitType1Code></a>\ 

    ## OBExternalLimitType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| -| <ul style=\"padding-left:
    0\"><li>Available</li><li>Credit</li><li>Emergency</li><li>Pre-Agreed</li><\
    li>Temporary</li></ul>|


    \ <a name=OBCreditLine1></a>\ 

    ## OBCreditLine1\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Included| Indicates whether or not the credit line is included in the
    balance of the account. Usage: If not present, credit line is not included
    in the balance amount of the account.| boolean|

    | Type | Entity |
    <details><summary>[OBExternalLimitType1Code](#OBExternalLimitType1Code)</su\
    mmary><ul></ul></details> |\ 

    | Amount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoric\
    CurrencyAndAmount)</summary><ul><li>Amount [string]</li> <li>Currency
    [string]</li> </ul></details> |\ 


    \ <a name=OBCashBalance1></a>\ 

    ## OBCashBalance1\ 

    Set of elements used to define the balance details.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId| A unique and immutable identifier used to identify the
    account resource. This identifier has no meaning to the account owner.|
    string|

    | CreditDebitIndicator | Entity |
    <details><summary>[OBCreditDebitCode](#OBCreditDebitCode)</summary><ul></ul\
    ></details> |\ 

    | Type | Entity |
    <details><summary>[OBBalanceType1Code](#OBBalanceType1Code)</summary><ul></\
    ul></details> |\ 

    | DateTime| Indicates the date (and time) of the balance.All dates in
    the JSON payloads are represented in ISO 8601 date-time format.  All
    date-time fields in responses must include the timezone. An example is
    below: 2017-04-05T10:43:07+00:00| string|

    | Amount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoric\
    CurrencyAndAmount)</summary><ul><li>Amount [string]</li> <li>Currency
    [string]</li> </ul></details> |\ 

    | CreditLine| Set of elements used to provide details on the credit
    line.| array[[OBCreditLine1](#OBCreditLine1)]|


    \ <a name=OBReadDataBalance1></a>\ 

    ## OBReadDataBalance1\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Balance| Set of elements used to define the balance details.|
    array[[OBCashBalance1](#OBCashBalance1)]|


    \ <a name=OBReadBalance1></a>\ 

    ## OBReadBalance1\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadDataBalance1](#OBReadDataBalance1)</summary><ul><l\
    i>Balance [array[[OBCashBalance1](#OBCashBalance1)]]</li> </ul></details>
    |\ 

    | Links | Entity |
    <details><summary>[Links](#Links)</summary><ul><li>Self [string]</li>
    <li>First [string]</li> <li>Prev [string]</li> <li>Next [string]</li>
    <li>Last [string]</li> </ul></details> |\ 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li>FirstAvailableDateTime [string]</li> <li>LastAvailableDateTime
    [string]</li> </ul></details> |\ 


    \ <a name=OBBeneficiaryType1Code></a>\ 

    ## OBBeneficiaryType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Specifies the Beneficiary Type.| <ul style=\"padding-left:
    0\"><li>Trusted</li><li>Ordinary</li></ul>|


    \ <a name=OBSupplementaryData1></a>\ 

    ## OBSupplementaryData1\ 

    Additional information that can not be captured in the structured fields
    and/or any other specific block.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|


    \ <a name=OBAddressTypeCode></a>\ 

    ## OBAddressTypeCode\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Identifies the nature of the postal address.| <ul
    style=\"padding-left:
    0\"><li>Business</li><li>Correspondence</li><li>DeliveryTo</li><li>MailTo</\
    li><li>POBox</li><li>Postal</li><li>Residential</li><li>Statement</li></ul>|


    \ <a name=OBPostalAddress6></a>\ 

    ## OBPostalAddress6\ 

    Information that locates and identifies a specific address, as defined
    by postal services.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | AddressType | Entity |
    <details><summary>[OBAddressTypeCode](#OBAddressTypeCode)</summary><ul></ul\
    ></details> |\ 

    | Department| Identification of a division of a large organisation or
    building.| string|

    | SubDepartment| Identification of a sub-division of a large
    organisation or building.| string|

    | StreetName| Name of a street or thoroughfare.| string|

    | BuildingNumber| Number that identifies the position of a building on a
    street.| string|

    | PostCode| Identifier consisting of a group of letters and/or numbers
    that is added to a postal address to assist the sorting of mail.| string|

    | TownName| Name of a built-up area, with defined boundaries, and a
    local government.| string|

    | CountrySubDivision| Identifies a subdivision of a country such as
    state, region, county.| string|

    | Country| Nation with its own government.| string|

    | AddressLine| Information that locates and identifies a specific
    address, as defined by postal services, presented in free format text.|
    array|


    \ <a name=OBBranchAndFinancialInstitutionIdentification6></a>\ 

    ## OBBranchAndFinancialInstitutionIdentification6\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | SchemeName| Name of the identification scheme, in a coded form as
    published in an external list.| string|

    | Identification| Unique and unambiguous identification of the servicing
    institution.| string|

    | Name| Name by which an agent is known and which is usually used to
    identify that agent.| string|

    | PostalAddress | Entity |
    <details><summary>[OBPostalAddress6](#OBPostalAddress6)</summary><ul><li><d\
    etails><summary>AddressType
    [[OBAddressTypeCode](#OBAddressTypeCode)]</summary><ul></ul></details></li>\
    <li>Department [string]</li> <li>SubDepartment [string]</li> <li>StreetName
    [string]</li> <li>BuildingNumber [string]</li> <li>PostCode [string]</li>
    <li>TownName [string]</li> <li>CountrySubDivision [string]</li> <li>Country
    [string]</li> <li>AddressLine [array]</li> </ul></details> |\ 


    \ <a name=OBBeneficiary5></a>\ 

    ## OBBeneficiary5\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId| A unique and immutable identifier used to identify the
    account resource. This identifier has no meaning to the account owner.|
    string|

    | BeneficiaryId| A unique and immutable identifier used to identify the
    beneficiary resource. This identifier has no meaning to the account owner.|
    string|

    | BeneficiaryType | Entity |
    <details><summary>[OBBeneficiaryType1Code](#OBBeneficiaryType1Code)</summar\
    y><ul></ul></details> |\ 

    | Reference| Unique reference, as assigned by the creditor, to
    unambiguously refer to the payment transaction. Usage: If available, the
    initiating party should provide this reference in the structured remittance
    information, to enable reconciliation by the creditor upon receipt of the
    amount of money. If the business context requires the use of a creditor
    reference or a payment remit identification, and only one identifier can be
    passed through the end-to-end chain, the creditor's reference or payment
    remittance identification should be quoted in the end-to-end transaction
    identification.| string|

    | SupplementaryData | Entity |
    <details><summary>[OBSupplementaryData1](#OBSupplementaryData1)</summary><u\
    l></ul></details> |\ 

    | CreditorAgent | Entity |
    <details><summary>[OBBranchAndFinancialInstitutionIdentification6](#OBBranc\
    hAndFinancialInstitutionIdentification6)</summary><ul><li>SchemeName
    [string]</li> <li>Identification [string]</li> <li>Name [string]</li>
    <li><details><summary>PostalAddress
    [[OBPostalAddress6](#OBPostalAddress6)]</summary><ul><li><details><summary>\
    AddressType
    [[OBAddressTypeCode](#OBAddressTypeCode)]</summary><ul></ul></details></li>\
    <li>Department [string]</li> <li>SubDepartment [string]</li> <li>StreetName
    [string]</li> <li>BuildingNumber [string]</li> <li>PostCode [string]</li>
    <li>TownName [string]</li> <li>CountrySubDivision [string]</li> <li>Country
    [string]</li> <li>AddressLine [array]</li>
    </ul></details></li></ul></details> |\ 

    | CreditorAccount | Entity |
    <details><summary>[OBCashAccount5](#OBCashAccount5)</summary><ul><li>Scheme\
    Name [string]</li> <li>Identification [string]</li> <li>Name [string]</li>
    <li>SecondaryIdentification [string]</li> </ul></details> |\ 


    \ <a name=OBReadDataBeneficiary5></a>\ 

    ## OBReadDataBeneficiary5\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Beneficiary| -| array[[OBBeneficiary5](#OBBeneficiary5)]|


    \ <a name=OBReadBeneficiary5></a>\ 

    ## OBReadBeneficiary5\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadDataBeneficiary5](#OBReadDataBeneficiary5)</summar\
    y><ul><li>Beneficiary [array[[OBBeneficiary5](#OBBeneficiary5)]]</li>
    </ul></details> |\ 

    | Links | Entity |
    <details><summary>[Links](#Links)</summary><ul><li>Self [string]</li>
    <li>First [string]</li> <li>Prev [string]</li> <li>Next [string]</li>
    <li>Last [string]</li> </ul></details> |\ 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li>FirstAvailableDateTime [string]</li> <li>LastAvailableDateTime
    [string]</li> </ul></details> |\ 


    \ <a name=OBExternalDirectDebitStatus1Code></a>\ 

    ## OBExternalDirectDebitStatus1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| -| <ul style=\"padding-left:
    0\"><li>Active</li><li>Inactive</li></ul>|


    \ <a name=OBDirectDebit2></a>\ 

    ## OBDirectDebit2\ 

    Account to or from which a cash entry is made.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId| A unique and immutable identifier used to identify the
    account resource. This identifier has no meaning to the account owner.|
    string|

    | DirectDebitId| A unique and immutable identifier used to identify the
    direct debit resource. This identifier has no meaning to the account owner.|
    string|

    | MandateIdentification| Direct Debit reference. For AUDDIS service
    users provide Core Reference. For non AUDDIS service users provide Core
    reference if possible or last used reference.| string|

    | DirectDebitStatusCode | Entity |
    <details><summary>[OBExternalDirectDebitStatus1Code](#OBExternalDirectDebit\
    Status1Code)</summary><ul></ul></details> |\ 

    | Name| Name of Service User.| string|

    | PreviousPaymentDateTime| Date of most recent direct debit
    collection.All dates in the JSON payloads are represented in ISO 8601
    date-time format. All date-time fields in responses must include the
    timezone.An example is below: 2017-04-05T10:43:07+00:00| string|

    | Frequency| Regularity with which direct debit instructions are to be
    created and processed.| string|

    | PreviousPaymentAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoric\
    CurrencyAndAmount)</summary><ul><li>Amount [string]</li> <li>Currency
    [string]</li> </ul></details> |\ 


    \ <a name=OBReadDataDirectDebit2></a>\ 

    ## OBReadDataDirectDebit2\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | DirectDebit| Account to or from which a cash entry is made.|
    array[[OBDirectDebit2](#OBDirectDebit2)]|


    \ <a name=OBReadDirectDebit2></a>\ 

    ## OBReadDirectDebit2\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadDataDirectDebit2](#OBReadDataDirectDebit2)</summar\
    y><ul><li>DirectDebit [array[[OBDirectDebit2](#OBDirectDebit2)]]</li>
    </ul></details> |\ 

    | Links | Entity |
    <details><summary>[Links](#Links)</summary><ul><li>Self [string]</li>
    <li>First [string]</li> <li>Prev [string]</li> <li>Next [string]</li>
    <li>Last [string]</li> </ul></details> |\ 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li>FirstAvailableDateTime [string]</li> <li>LastAvailableDateTime
    [string]</li> </ul></details> |\ 


    \ <a name=OBExternalOfferType1Code></a>\ 

    ## OBExternalOfferType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| -| <ul style=\"padding-left:
    0\"><li>BalanceTransfer</li><li>LimitIncrease</li><li>MoneyTransfer</li><li\
    >Other</li><li>PromotionalRate</li></ul>|


    \ <a name=OBOffer1></a>\ 

    ## OBOffer1\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId| A unique and immutable identifier used to identify the
    account resource. This identifier has no meaning to the account owner.|
    string|

    | OfferId| A unique and immutable identifier used to identify the offer
    resource. This identifier has no meaning to the account owner.| string|

    | OfferType | Entity |
    <details><summary>[OBExternalOfferType1Code](#OBExternalOfferType1Code)</su\
    mmary><ul></ul></details> |\ 

    | Description| Further details of the offer.| string|

    | StartDateTime| Date and time at which the offer starts.All dates in
    the JSON payloads are represented in ISO 8601 date-time format.  All
    date-time fields in responses must include the timezone. An example is
    below: 2017-04-05T10:43:07+00:00| string|

    | EndDateTime| Date and time at which the offer ends.All dates in the
    JSON payloads are represented in ISO 8601 date-time format.  All date-time
    fields in responses must include the timezone. An example is below:
    2017-04-05T10:43:07+00:00| string|

    | Rate| Rate associated with the offer type.| string|

    | Value| Value associated with the offer type.| integer|

    | Term| Further details of the term of the offer.| string|

    | URL| URL (Uniform Resource Locator) where documentation on the offer
    can be found| string|

    | Amount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoric\
    CurrencyAndAmount)</summary><ul><li>Amount [string]</li> <li>Currency
    [string]</li> </ul></details> |\ 

    | Fee | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoric\
    CurrencyAndAmount)</summary><ul><li>Amount [string]</li> <li>Currency
    [string]</li> </ul></details> |\ 


    \ <a name=OBReadDataOffer1></a>\ 

    ## OBReadDataOffer1\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Offer| -| array[[OBOffer1](#OBOffer1)]|


    \ <a name=OBReadOffer1></a>\ 

    ## OBReadOffer1\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadDataOffer1](#OBReadDataOffer1)</summary><ul><li>Of\
    fer [array[[OBOffer1](#OBOffer1)]]</li> </ul></details> |\ 

    | Links | Entity |
    <details><summary>[Links](#Links)</summary><ul><li>Self [string]</li>
    <li>First [string]</li> <li>Prev [string]</li> <li>Next [string]</li>
    <li>Last [string]</li> </ul></details> |\ 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li>FirstAvailableDateTime [string]</li> <li>LastAvailableDateTime
    [string]</li> </ul></details> |\ 


    \ <a name=OBExternalPartyType1Code></a>\ 

    ## OBExternalPartyType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| -| <ul style=\"padding-left:
    0\"><li>Delegate</li><li>Joint</li><li>Sole</li></ul>|


    \ <a name=OBRelationship1></a>\ 

    ## OBRelationship1\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Related| Absolute URI to the related resource.| string|

    | Id| Unique identification as assigned by the ASPSP to uniquely
    identify the related resource.| string|


    \ <a name=OBPartyRelationships1></a>\ 

    ## OBPartyRelationships1\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Account | Entity |
    <details><summary>[OBRelationship1](#OBRelationship1)</summary><ul><li>Rela\
    ted [string]</li> <li>Id [string]</li> </ul></details> |\ 


    \ <a name=OBPostalAddress8></a>\ 

    ## OBPostalAddress8\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | AddressType | Entity |
    <details><summary>[OBAddressTypeCode](#OBAddressTypeCode)</summary><ul></ul\
    ></details> |\ 

    | AddressLine| Information that locates and identifies a specific
    address, as defined by postal services, that is presented in free format
    text.| array|

    | StreetName| Name of a street or thoroughfare.| string|

    | BuildingNumber| Number that identifies the position of a building on a
    street.| string|

    | PostCode| Identifier consisting of a group of letters and/or numbers
    that is added to a postal address to assist the sorting of mail.| string|

    | TownName| Name of a built-up area, with defined boundaries, and a
    local government.| string|

    | CountrySubDivision| Identifies a subdivision of a country eg, state,
    region, county.| string|

    | Country| Nation with its own government, occupying a particular
    territory.| string|


    \ <a name=OBParty2></a>\ 

    ## OBParty2\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | PartyId| A unique and immutable identifier used to identify the
    customer resource. This identifier has no meaning to the account owner.|
    string|

    | PartyNumber| Number assigned by an agent to identify its customer.|
    string|

    | PartyType | Entity |
    <details><summary>[OBExternalPartyType1Code](#OBExternalPartyType1Code)</su\
    mmary><ul></ul></details> |\ 

    | Name| Name by which a party is known and which is usually used to
    identify that party.| string|

    | FullLegalName| Specifies a character string with a maximum length of
    350 characters.| string|

    | LegalStructure| Legal standing of the party.| string|

    | BeneficialOwnership| A flag to indicate a party's beneficial ownership
    of the related account.| boolean|

    | AccountRole| A party’s role with respect to the related account.|
    string|

    | EmailAddress| Address for electronic mail (e-mail).| string|

    | Phone| Collection of information that identifies a phone number, as
    defined by telecom services.| string|

    | Mobile| Collection of information that identifies a mobile phone
    number, as defined by telecom services.| string|

    | Relationships | Entity |
    <details><summary>[OBPartyRelationships1](#OBPartyRelationships1)</summary>\
    <ul><li><details><summary>Account
    [[OBRelationship1](#OBRelationship1)]</summary><ul><li>Related [string]</li>
    <li>Id [string]</li> </ul></details></li></ul></details> |\ 

    | Address| Postal address of a party.|
    array[[OBPostalAddress8](#OBPostalAddress8)]|


    \ <a name=OBReadDataParty2></a>\ 

    ## OBReadDataParty2\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Party | Entity |
    <details><summary>[OBParty2](#OBParty2)</summary><ul><li>PartyId
    [string]</li> <li>PartyNumber [string]</li> <li><details><summary>PartyType
    [[OBExternalPartyType1Code](#OBExternalPartyType1Code)]</summary><ul></ul><\
    /details></li><li>Name [string]</li> <li>FullLegalName [string]</li>
    <li>LegalStructure [string]</li> <li>BeneficialOwnership [boolean]</li>
    <li>AccountRole [string]</li> <li>EmailAddress [string]</li> <li>Phone
    [string]</li> <li>Mobile [string]</li> <li><details><summary>Relationships
    [[OBPartyRelationships1](#OBPartyRelationships1)]</summary><ul><li><details\
    ><summary>Account
    [[OBRelationship1](#OBRelationship1)]</summary><ul><li>Related [string]</li>
    <li>Id [string]</li> </ul></details></li></ul></details></li><li>Address
    [array[[OBPostalAddress8](#OBPostalAddress8)]]</li> </ul></details> |\ 


    \ <a name=OBReadParty2></a>\ 

    ## OBReadParty2\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadDataParty2](#OBReadDataParty2)</summary><ul><li><d\
    etails><summary>Party [[OBParty2](#OBParty2)]</summary><ul><li>PartyId
    [string]</li> <li>PartyNumber [string]</li> <li><details><summary>PartyType
    [[OBExternalPartyType1Code](#OBExternalPartyType1Code)]</summary><ul></ul><\
    /details></li><li>Name [string]</li> <li>FullLegalName [string]</li>
    <li>LegalStructure [string]</li> <li>BeneficialOwnership [boolean]</li>
    <li>AccountRole [string]</li> <li>EmailAddress [string]</li> <li>Phone
    [string]</li> <li>Mobile [string]</li> <li><details><summary>Relationships
    [[OBPartyRelationships1](#OBPartyRelationships1)]</summary><ul><li><details\
    ><summary>Account
    [[OBRelationship1](#OBRelationship1)]</summary><ul><li>Related [string]</li>
    <li>Id [string]</li> </ul></details></li></ul></details></li><li>Address
    [array[[OBPostalAddress8](#OBPostalAddress8)]]</li>
    </ul></details></li></ul></details> |\ 

    | Links | Entity |
    <details><summary>[Links](#Links)</summary><ul><li>Self [string]</li>
    <li>First [string]</li> <li>Prev [string]</li> <li>Next [string]</li>
    <li>Last [string]</li> </ul></details> |\ 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li>FirstAvailableDateTime [string]</li> <li>LastAvailableDateTime
    [string]</li> </ul></details> |\ 


    \ <a name=OBReadDataParty3></a>\ 

    ## OBReadDataParty3\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Party| -| array[[OBParty2](#OBParty2)]|


    \ <a name=OBReadParty3></a>\ 

    ## OBReadParty3\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadDataParty3](#OBReadDataParty3)</summary><ul><li>Pa\
    rty [array[[OBParty2](#OBParty2)]]</li> </ul></details> |\ 

    | Links | Entity |
    <details><summary>[Links](#Links)</summary><ul><li>Self [string]</li>
    <li>First [string]</li> <li>Prev [string]</li> <li>Next [string]</li>
    <li>Last [string]</li> </ul></details> |\ 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li>FirstAvailableDateTime [string]</li> <li>LastAvailableDateTime
    [string]</li> </ul></details> |\ 


    \ <a name=OBExternalProductType1Code></a>\ 

    ## OBExternalProductType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Product type : Personal Current Account, Business Current
    Account| <ul style=\"padding-left:
    0\"><li>BusinessCurrentAccount</li><li>CommercialCreditCard</li><li>Other</\
    li><li>PersonalCurrentAccount</li><li>SMELoan</li></ul>|


    \ <a name=OBOtherProductSegment1Code></a>\ 

    ## OBOtherProductSegment1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| -| <ul style=\"padding-left:
    0\"><li>GEAS</li><li>GEBA</li><li>GEBR</li><li>GEBU</li><li>GECI</li><li>GE\
    CS</li><li>GEFB</li><li>GEFG</li><li>GEG</li><li>GEGR</li><li>GEGS</li><li>\
    GEOT</li><li>GEOV</li><li>GEPA</li><li>GEPR</li><li>GERE</li><li>GEST</li><\
    li>GEYA</li><li>GEYO</li><li>PSCA</li><li>PSES</li><li>PSNC</li><li>PSNP</l\
    i><li>PSRG</li><li>PSSS</li><li>PSST</li><li>PSSW</li></ul>|


    \ <a name=OBPeriod1Code></a>\ 

    ## OBPeriod1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| The unit of period (days, weeks, months etc.) of the promotional
    length| <ul style=\"padding-left:
    0\"><li>PACT</li><li>PDAY</li><li>PHYR</li><li>PMTH</li><li>PQTR</li><li>PW\
    EK</li><li>PYER</li></ul>|


    \ <a name=OBOtherCodeType1></a>\ 

    ## OBOtherCodeType1\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Code| The four letter Mnemonic used within an XML file to identify a
    code| string|

    | Name| Long name associated with the code| string|

    | Description| Description to describe the purpose of the code| string|


    \ <a name=OBOtherProductDetails1></a>\ 

    ## OBOtherProductDetails1\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Segment| Market segmentation is a marketing term referring to the
    aggregating of prospective buyers into groups, or segments, that have common
    needs and respond similarly to a marketing action. Market segmentation
    enables companies to target different categories of consumers who perceive
    the full value of certain products and services differently from one
    another. Read more: Market Segmentation
    http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd|
    array[[OBOtherProductSegment1Code](#OBOtherProductSegment1Code)]|

    | FeeFreeLength| The length/duration of the fee free period| integer|

    | FeeFreeLengthPeriod | Entity |
    <details><summary>[OBPeriod1Code](#OBPeriod1Code)</summary><ul></ul></detai\
    ls> |\ 

    | MonthlyMaximumCharge| The maximum relevant charges that could accrue
    as defined fully in Part 7 of the CMA order| string|

    | Notes| Optional additional notes to supplement the Core product
    details| array|

    | OtherSegment | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 


    \ <a name=OBTierBandType1Code></a>\ 

    ## OBTierBandType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| The methodology of how credit interest is paid/applied. It can
    be:- 1. Banded Interest rates are banded. i.e. Increasing rate on whole
    balance as balance increases. 2. Tiered Interest rates are tiered. i.e.
    increasing rate for each tier as balance increases, but interest paid on
    tier fixed for that tier and not on whole balance. 3. Whole The same
    interest rate is applied irrespective of the product holder's account
    balance| <ul style=\"padding-left:
    0\"><li>INBA</li><li>INTI</li><li>INWH</li></ul>|


    \ <a name=OBInterestCalculationMethod1Code></a>\ 

    ## OBInterestCalculationMethod1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| -| <ul style=\"padding-left:
    0\"><li>ITCO</li><li>ITOT</li><li>ITSI</li></ul>|


    \ <a name=OBInterestDestination1Code></a>\ 

    ## OBInterestDestination1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Describes whether accrued interest is payable only to the BCA or
    to another bank account| <ul style=\"padding-left:
    0\"><li>INOT</li><li>INPA</li><li>INSC</li></ul>|


    \ <a name=OBFrequency1Code></a>\ 

    ## OBFrequency1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| How often is credit interest calculated for the account.| <ul
    style=\"padding-left:
    0\"><li>FQAT</li><li>FQDY</li><li>FQHY</li><li>FQMY</li><li>FQOT</li><li>FQ\
    QY</li><li>FQSD</li><li>FQWY</li><li>FQYY</li></ul>|


    \ <a name=OBInterestFixedVariableType1Code></a>\ 

    ## OBInterestFixedVariableType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Type of interest rate, Fixed or Variable| <ul
    style=\"padding-left: 0\"><li>INFI</li><li>INVA</li></ul>|


    \ <a name=OBInterestRateType1Code></a>\ 

    ## OBInterestRateType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Interest rate types, other than AER, which financial
    institutions may use to describe the annual interest rate payable to the
    account holder's account.| <ul style=\"padding-left:
    0\"><li>INBB</li><li>INFR</li><li>INGR</li><li>INLR</li><li>INNE</li><li>IN\
    OT</li></ul>|


    \ <a name=OBTierBand1></a>\ 

    ## OBTierBand1\ 

    Tier Band Details\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Identification| Unique and unambiguous identification of a  Tier Band
    for the Product.| string|

    | TierValueMinimum| Minimum deposit value for which the credit interest
    tier applies.| string|

    | TierValueMaximum| Maximum deposit value for which the credit interest
    tier applies.| string|

    | CalculationFrequency | Entity |
    <details><summary>[OBFrequency1Code](#OBFrequency1Code)</summary><ul></ul><\
    /details> |\ 

    | ApplicationFrequency | Entity |
    <details><summary>[OBFrequency1Code](#OBFrequency1Code)</summary><ul></ul><\
    /details> |\ 

    | DepositInterestAppliedCoverage | Entity |
    <details><summary>[OBTierBandType1Code](#OBTierBandType1Code)</summary><ul>\
    </ul></details> |\ 

    | FixedVariableInterestRateType | Entity |
    <details><summary>[OBInterestFixedVariableType1Code](#OBInterestFixedVariab\
    leType1Code)</summary><ul></ul></details> |\ 

    | AER| The annual equivalent rate (AER) is interest that is calculated
    under the assumption that any interest paid is combined with the original
    balance and the next interest payment will be based on the slightly higher
    account balance. Overall, this means that interest can be compounded several
    times in a year depending on the number of times that interest payments are
    made.  Read more: Annual Equivalent Rate (AER)
    http://www.investopedia.com/terms/a/aer.asp#ixzz4gfR7IO1A| string|

    | BankInterestRateType | Entity |
    <details><summary>[OBInterestRateType1Code](#OBInterestRateType1Code)</summ\
    ary><ul></ul></details> |\ 

    | BankInterestRate| Bank Interest for the product| string|

    | Notes| Optional additional notes to supplement the Tier Band details|
    array|

    | OtherBankInterestType | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 

    | OtherApplicationFrequency | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 

    | OtherCalculationFrequency | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 


    \ <a name=OBTierBandSet1></a>\ 

    ## OBTierBandSet1\ 

    The group of tiers or bands for which credit interest can be applied.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | TierBandMethod | Entity |
    <details><summary>[OBTierBandType1Code](#OBTierBandType1Code)</summary><ul>\
    </ul></details> |\ 

    | CalculationMethod | Entity |
    <details><summary>[OBInterestCalculationMethod1Code](#OBInterestCalculation\
    Method1Code)</summary><ul></ul></details> |\ 

    | Destination | Entity |
    <details><summary>[OBInterestDestination1Code](#OBInterestDestination1Code)\
    </summary><ul></ul></details> |\ 

    | Notes| Optional additional notes to supplement the Tier Band Set
    details| array|

    | OtherCalculationMethod | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 

    | OtherDestination | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 

    | TierBand| Tier Band Details| array[[OBTierBand1](#OBTierBand1)]|


    \ <a name=OBCreditInterest1></a>\ 

    ## OBCreditInterest1\ 

    Details about the interest that may be payable to the Account holders\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | TierBandSet| -| array[[OBTierBandSet1](#OBTierBandSet1)]|


    \ <a name=OBOverdraftType1Code></a>\ 

    ## OBOverdraftType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| An overdraft can either be 'committed' which means that the
    facility cannot be withdrawn without reasonable notification before it's
    agreed end date, or 'on demand' which means that the financial institution
    can demand repayment at any point in time.| <ul style=\"padding-left:
    0\"><li>OVCO</li><li>OVOD</li><li>OVOT</li></ul>|


    \ <a name=OBOverdraftFeeType1Code></a>\ 

    ## OBOverdraftFeeType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Fee/charge type which is being capped| <ul style=\"padding-left:
    0\"><li>FBAO</li><li>FBAR</li><li>FBEB</li><li>FBIT</li><li>FBOR</li><li>FB\
    OS</li><li>FBSC</li><li>FBTO</li><li>FBUB</li><li>FBUT</li><li>FTOT</li><li\
    >FTUT</li></ul>|


    \ <a name=OBMinMaxType1Code></a>\ 

    ## OBMinMaxType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Min Max type| <ul style=\"padding-left:
    0\"><li>FMMN</li><li>FMMX</li></ul>|


    \ <a name=OBOverdraftFeeChargeCap1></a>\ 

    ## OBOverdraftFeeChargeCap1\ 

    Details about any caps (maximum charges) that apply to a particular
    fee/charge. Capping can either be based on an amount (in gbp), an amount (in
    items) or a rate.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | FeeType| -|
    array[[OBOverdraftFeeType1Code](#OBOverdraftFeeType1Code)]|

    | MinMaxType | Entity |
    <details><summary>[OBMinMaxType1Code](#OBMinMaxType1Code)</summary><ul></ul\
    ></details> |\ 

    | FeeCapOccurrence| Indicates whether the advertised overdraft rate is
    guaranteed to be offered to a borrower by the bank e.g. if it's part of a
    government scheme, or whether the rate may vary dependent on the applicant's
    circumstances.| integer|

    | FeeCapAmount| Cap amount charged for a fee/charge| string|

    | CappingPeriod | Entity |
    <details><summary>[OBPeriod1Code](#OBPeriod1Code)</summary><ul></ul></detai\
    ls> |\ 

    | Notes| Notes related to Overdraft fee charge cap| array|

    | OtherFeeType| -| array[[OBOtherCodeType1](#OBOtherCodeType1)]|


    \ <a name=OBFeeFrequency1Code></a>\ 

    ## OBFeeFrequency1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Frequency at which the overdraft charge is applied to the
    account| <ul style=\"padding-left:
    0\"><li>FEAC</li><li>FEAO</li><li>FECP</li><li>FEDA</li><li>FEHO</li><li>FE\
    I</li><li>FEMO</li><li>FEOA</li><li>FEOT</li><li>FEPC</li><li>FEPH</li><li>\
    FEPO</li><li>FEPS</li><li>FEPT</li><li>FEPTA</li><li>FEPTP</li><li>FEQU</li\
    ><li>FESM</li><li>FEST</li><li>FEWE</li><li>FEYE</li></ul>|


    \ <a name=OBOverdraftFeesChargeDetails1></a>\ 

    ## OBOverdraftFeesChargeDetails1\ 

    Details about the fees/charges\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | FeeType | Entity |
    <details><summary>[OBOverdraftFeeType1Code](#OBOverdraftFeeType1Code)</summ\
    ary><ul></ul></details> |\ 

    | NegotiableIndicator| Indicates whether fee and charges are negotiable|
    boolean|

    | OverdraftControlIndicator| Indicates if the fee/charge is already
    covered by an 'Overdraft Control' fee or not.| boolean|

    | IncrementalBorrowingAmount| Every additional tranche of an overdraft
    balance to which an overdraft fee is applied| string|

    | FeeAmount| Amount charged for an overdraft fee/charge (where it is
    charged in terms of an amount rather than a rate)| string|

    | FeeRate| Rate charged for overdraft fee/charge (where it is charged in
    terms of a rate rather than an amount)| string|

    | FeeRateType | Entity |
    <details><summary>[OBInterestRateType1Code](#OBInterestRateType1Code)</summ\
    ary><ul></ul></details> |\ 

    | ApplicationFrequency | Entity |
    <details><summary>[OBFeeFrequency1Code](#OBFeeFrequency1Code)</summary><ul>\
    </ul></details> |\ 

    | CalculationFrequency | Entity |
    <details><summary>[OBFeeFrequency1Code](#OBFeeFrequency1Code)</summary><ul>\
    </ul></details> |\ 

    | Notes| Free text for capturing any other info related to Overdraft
    Fees Charge Details| array|

    | OverdraftFeeChargeCap| -|
    array[[OBOverdraftFeeChargeCap1](#OBOverdraftFeeChargeCap1)]|

    | OtherFeeType | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 

    | OtherFeeRateType | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 

    | OtherApplicationFrequency | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 

    | OtherCalculationFrequency | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 


    \ <a name=OBOverdraftFeesCharges1></a>\ 

    ## OBOverdraftFeesCharges1\ 

    Overdraft fees and charges\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | OverdraftFeeChargeCap| -|
    array[[OBOverdraftFeeChargeCap1](#OBOverdraftFeeChargeCap1)]|

    | OverdraftFeeChargeDetail| -|
    array[[OBOverdraftFeesChargeDetails1](#OBOverdraftFeesChargeDetails1)]|


    \ <a name=OBOverdraftTierBand1></a>\ 

    ## OBOverdraftTierBand1\ 

    Provides overdraft details for a specific tier or band\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Identification| Unique and unambiguous identification of a  Tier Band
    for a overdraft.| string|

    | TierValueMin| Minimum value of Overdraft Tier/Band| string|

    | TierValueMax| Maximum value of Overdraft Tier/Band| string|

    | EAR| EAR means Effective Annual Rate and/or Equivalent Annual Rate
    (frequently used interchangeably), being the actual annual interest rate of
    an Overdraft.| string|

    | AgreementLengthMin| Specifies the minimum length of a band for a fixed
    overdraft agreement| integer|

    | AgreementLengthMax| Specifies the maximum length of a band for a fixed
    overdraft agreement| integer|

    | AgreementPeriod | Entity |
    <details><summary>[OBPeriod1Code](#OBPeriod1Code)</summary><ul></ul></detai\
    ls> |\ 

    | OverdraftInterestChargingCoverage | Entity |
    <details><summary>[OBTierBandType1Code](#OBTierBandType1Code)</summary><ul>\
    </ul></details> |\ 

    | BankGuaranteedIndicator| Indicates whether the advertised overdraft
    rate is guaranteed to be offered to a borrower by the bank e.g. if it�s part
    of a government scheme, or whether the rate may vary dependent on the
    applicant�s circumstances.| boolean|

    | Notes| Optional additional notes to supplement the Tier/band details|
    array|

    | OverdraftFeesCharges| -|
    array[[OBOverdraftFeesCharges1](#OBOverdraftFeesCharges1)]|


    \ <a name=OBOverdraftTierbandSet1></a>\ 

    ## OBOverdraftTierbandSet1\ 

    Tier band set details\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | TierBandMethod | Entity |
    <details><summary>[OBTierBandType1Code](#OBTierBandType1Code)</summary><ul>\
    </ul></details> |\ 

    | OverdraftType | Entity |
    <details><summary>[OBOverdraftType1Code](#OBOverdraftType1Code)</summary><u\
    l></ul></details> |\ 

    | Identification| Unique and unambiguous identification of a  Tier Band
    for a overdraft product.| string|

    | AuthorisedIndicator| Indicates if the Overdraft is authorised (Y) or
    unauthorised (N)| boolean|

    | BufferAmount| When a customer exceeds their credit limit, a financial
    institution will not charge the customer unauthorised overdraft charges if
    they do not exceed by more than the buffer amount. Note: Authorised
    overdraft charges may still apply.| string|

    | Notes| Optional additional notes to supplement the overdraft Tier Band
    Set details| array|

    | OverdraftTierBand| -|
    array[[OBOverdraftTierBand1](#OBOverdraftTierBand1)]|

    | OverdraftFeesCharges| -|
    array[[OBOverdraftFeesCharges1](#OBOverdraftFeesCharges1)]|


    \ <a name=OBOverdraft1></a>\ 

    ## OBOverdraft1\ 

    Borrowing details\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Notes| Associated Notes about the overdraft rates| array|

    | OverdraftTierBandSet| Tier band set details|
    array[[OBOverdraftTierbandSet1](#OBOverdraftTierbandSet1)]|


    \ <a name=OBFeeType1Code></a>\ 

    ## OBFeeType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Fee/Charge Type| <ul style=\"padding-left:
    0\"><li>FEPF</li><li>FTOT</li><li>FYAF</li><li>FYAM</li><li>FYAQ</li><li>FY\
    CP</li><li>FYDB</li><li>FYMI</li><li>FYXX</li></ul>|


    \ <a name=OBFeeCategory1Code></a>\ 

    ## OBFeeCategory1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Categorisation of fees and charges into standard categories.|
    <ul style=\"padding-left: 0\"><li>FCOT</li><li>FCRE</li><li>FCSV</li></ul>|


    \ <a name=OBOtherFeeChargeDetailType></a>\ 

    ## OBOtherFeeChargeDetailType\ 

    Other Fee/charge type which is not available in the standard code set\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Code| The four letter Mnemonic used within an XML file to identify a
    code| string|

    | FeeCategory | Entity |
    <details><summary>[OBFeeCategory1Code](#OBFeeCategory1Code)</summary><ul></\
    ul></details> |\ 

    | Name| Long name associated with the code| string|

    | Description| Description to describe the purpose of the code| string|


    \ <a name=OBLoanInterestFeesChargeDetail1></a>\ 

    ## OBLoanInterestFeesChargeDetail1\ 

    Other fees/charges details\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | FeeType | Entity |
    <details><summary>[OBFeeType1Code](#OBFeeType1Code)</summary><ul></ul></det\
    ails> |\ 

    | NegotiableIndicator| Fee/charge which is usually negotiable rather
    than a fixed amount| boolean|

    | FeeAmount| Fee Amount charged for a fee/charge (where it is charged in
    terms of an amount rather than a rate)| string|

    | FeeRate| Rate charged for Fee/Charge (where it is charged in terms of
    a rate rather than an amount)| string|

    | FeeRateType | Entity |
    <details><summary>[OBInterestRateType1Code](#OBInterestRateType1Code)</summ\
    ary><ul></ul></details> |\ 

    | ApplicationFrequency | Entity |
    <details><summary>[OBFeeFrequency1Code](#OBFeeFrequency1Code)</summary><ul>\
    </ul></details> |\ 

    | CalculationFrequency | Entity |
    <details><summary>[OBFeeFrequency1Code](#OBFeeFrequency1Code)</summary><ul>\
    </ul></details> |\ 

    | Notes| Optional additional notes to supplement the fee/charge
    details.| array|

    | OtherFeeType | Entity |
    <details><summary>[OBOtherFeeChargeDetailType](#OBOtherFeeChargeDetailType)\
    </summary><ul><li>Code [string]</li> <li><details><summary>FeeCategory
    [[OBFeeCategory1Code](#OBFeeCategory1Code)]</summary><ul></ul></details></l\
    i><li>Name [string]</li> <li>Description [string]</li> </ul></details> |\ 

    | OtherFeeRateType | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 

    | OtherApplicationFrequency | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 

    | OtherCalculationFrequency | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 


    \ <a name=OBLoanInterestFeesChargeCap1></a>\ 

    ## OBLoanInterestFeesChargeCap1\ 

    Details about any caps (minimum/maximum charges) that apply to a
    particular fee/charge\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | FeeType| -| array[[OBFeeType1Code](#OBFeeType1Code)]|

    | MinMaxType | Entity |
    <details><summary>[OBMinMaxType1Code](#OBMinMaxType1Code)</summary><ul></ul\
    ></details> |\ 

    | FeeCapOccurrence| Fee/charges are captured dependent on the number of
    occurrences rather than capped at a particular amount| integer|

    | FeeCapAmount| Cap amount charged for a fee/charge (where it is charged
    in terms of an amount rather than a rate)| string|

    | CappingPeriod | Entity |
    <details><summary>[OBFeeFrequency1Code](#OBFeeFrequency1Code)</summary><ul>\
    </ul></details> |\ 

    | Notes| Free text for adding extra details for fee charge cap| array|

    | OtherFeeType| -| array[[OBOtherCodeType1](#OBOtherCodeType1)]|


    \ <a name=OBLoanInterestFeesCharges1></a>\ 

    ## OBLoanInterestFeesCharges1\ 

    Contains details of fees and charges which are not associated with
    either LoanRepayment or features/benefits\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | LoanInterestFeeChargeDetail| -|
    array[[OBLoanInterestFeesChargeDetail1](#OBLoanInterestFeesChargeDetail1)]|

    | LoanInterestFeeChargeCap| -|
    array[[OBLoanInterestFeesChargeCap1](#OBLoanInterestFeesChargeCap1)]|


    \ <a name=OBLoanInterestTierBand1></a>\ 

    ## OBLoanInterestTierBand1\ 

    Tier Band Details\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Identification| Unique and unambiguous identification of a  Tier Band
    for a SME Loan.| string|

    | TierValueMinimum| Minimum loan value for which the loan interest tier
    applies.| string|

    | TierValueMaximum| Maximum loan value for which the loan interest tier
    applies.| string|

    | TierValueMinTerm| Minimum loan term for which the loan interest tier
    applies.| integer|

    | MinTermPeriod | Entity |
    <details><summary>[OBPeriod1Code](#OBPeriod1Code)</summary><ul></ul></detai\
    ls> |\ 

    | TierValueMaxTerm| Maximum loan term for which the loan interest tier
    applies.| integer|

    | MaxTermPeriod | Entity |
    <details><summary>[OBPeriod1Code](#OBPeriod1Code)</summary><ul></ul></detai\
    ls> |\ 

    | FixedVariableInterestRateType | Entity |
    <details><summary>[OBInterestFixedVariableType1Code](#OBInterestFixedVariab\
    leType1Code)</summary><ul></ul></details> |\ 

    | RepAPR| The annual equivalent rate (AER) is interest that is
    calculated under the assumption that any interest paid is combined with the
    original balance and the next interest payment will be based on the slightly
    higher account balance. Overall, this means that interest can be compounded
    several times in a year depending on the number of times that interest
    payments are made.  For SME Loan, this APR is the representative APR which
    includes any account fees.| string|

    | LoanProviderInterestRateType | Entity |
    <details><summary>[OBInterestRateType1Code](#OBInterestRateType1Code)</summ\
    ary><ul></ul></details> |\ 

    | LoanProviderInterestRate| Loan provider Interest for the SME Loan
    product| string|

    | Notes| Optional additional notes to supplement the Tier Band details|
    array|

    | OtherLoanProviderInterestRateType | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 

    | LoanInterestFeesCharges| -|
    array[[OBLoanInterestFeesCharges1](#OBLoanInterestFeesCharges1)]|


    \ <a name=OBLoanInterestTierBandSet1></a>\ 

    ## OBLoanInterestTierBandSet1\ 

    The group of tiers or bands for which debit interest can be applied.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | TierBandMethod | Entity |
    <details><summary>[OBTierBandType1Code](#OBTierBandType1Code)</summary><ul>\
    </ul></details> |\ 

    | Identification| Loan interest tierbandset identification. Used
    by  loan providers for internal use purpose.| string|

    | CalculationMethod | Entity |
    <details><summary>[OBInterestCalculationMethod1Code](#OBInterestCalculation\
    Method1Code)</summary><ul></ul></details> |\ 

    | Notes| Optional additional notes to supplement the Tier Band Set
    details| array|

    | OtherCalculationMethod | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 

    | LoanInterestTierBand| -|
    array[[OBLoanInterestTierBand1](#OBLoanInterestTierBand1)]|

    | LoanInterestFeesCharges| -|
    array[[OBLoanInterestFeesCharges1](#OBLoanInterestFeesCharges1)]|


    \ <a name=OBLoanInterest1></a>\ 

    ## OBLoanInterest1\ 

    Details about the interest that may be payable to the SME Loan holders\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Notes| Optional additional notes to supplement the LoanInterest|
    array|

    | LoanInterestTierBandSet| -|
    array[[OBLoanInterestTierBandSet1](#OBLoanInterestTierBandSet1)]|


    \ <a name=OBRepaymentType1Code></a>\ 

    ## OBRepaymentType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Repayment type| <ul style=\"padding-left:
    0\"><li>USBA</li><li>USBU</li><li>USCI</li><li>USCS</li><li>USER</li><li>US\
    FA</li><li>USFB</li><li>USFI</li><li>USIO</li><li>USOT</li><li>USPF</li><li\
    >USRW</li><li>USSL</li></ul>|


    \ <a name=OBRepaymentFrequency1Code></a>\ 

    ## OBRepaymentFrequency1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Repayment frequency| <ul style=\"padding-left:
    0\"><li>SMDA</li><li>SMFL</li><li>SMFO</li><li>SMHY</li><li>SMMO</li><li>SM\
    OT</li><li>SMQU</li><li>SMWE</li><li>SMYE</li></ul>|


    \ <a name=OBRepaymentAmountType1Code></a>\ 

    ## OBRepaymentAmountType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| The repayment is for paying just the interest only or both
    interest and capital or bullet amount or balance to date etc| <ul
    style=\"padding-left:
    0\"><li>RABD</li><li>RABL</li><li>RACI</li><li>RAFC</li><li>RAIO</li><li>RA\
    LT</li><li>USOT</li></ul>|


    \ <a name=OBRepaymentFeeChargeDetail1></a>\ 

    ## OBRepaymentFeeChargeDetail1\ 

    Details about specific fees/charges that are applied for repayment\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | FeeType | Entity |
    <details><summary>[OBFeeType1Code](#OBFeeType1Code)</summary><ul></ul></det\
    ails> |\ 

    | NegotiableIndicator| Fee/charge which is usually negotiable rather
    than a fixed amount| boolean|

    | FeeAmount| Fee Amount charged for a fee/charge (where it is charged in
    terms of an amount rather than a rate)| string|

    | FeeRate| Rate charged for Fee/Charge (where it is charged in terms of
    a rate rather than an amount)| string|

    | FeeRateType | Entity |
    <details><summary>[OBInterestRateType1Code](#OBInterestRateType1Code)</summ\
    ary><ul></ul></details> |\ 

    | ApplicationFrequency | Entity |
    <details><summary>[OBFeeFrequency1Code](#OBFeeFrequency1Code)</summary><ul>\
    </ul></details> |\ 

    | CalculationFrequency | Entity |
    <details><summary>[OBFeeFrequency1Code](#OBFeeFrequency1Code)</summary><ul>\
    </ul></details> |\ 

    | Notes| Optional additional notes to supplement the fee/charge details|
    array|

    | OtherFeeType | Entity |
    <details><summary>[OBOtherFeeChargeDetailType](#OBOtherFeeChargeDetailType)\
    </summary><ul><li>Code [string]</li> <li><details><summary>FeeCategory
    [[OBFeeCategory1Code](#OBFeeCategory1Code)]</summary><ul></ul></details></l\
    i><li>Name [string]</li> <li>Description [string]</li> </ul></details> |\ 

    | OtherFeeRateType | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 

    | OtherApplicationFrequency | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 

    | OtherCalculationFrequency | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 


    \ <a name=OBRepaymentFeeChargeCap1></a>\ 

    ## OBRepaymentFeeChargeCap1\ 

    RepaymentFeeChargeCap sets daily, weekly, monthly, yearly limits on the
    fees that are charged\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | FeeType| -| array[[OBFeeType1Code](#OBFeeType1Code)]|

    | MinMaxType | Entity |
    <details><summary>[OBMinMaxType1Code](#OBMinMaxType1Code)</summary><ul></ul\
    ></details> |\ 

    | FeeCapOccurrence| Fee/Charges are captured dependent on the number of
    occurrences rather than capped at a particular amount| integer|

    | FeeCapAmount| Cap amount charged for a fee/charge (where it is charged
    in terms of an amount rather than a rate)| string|

    | CappingPeriod | Entity |
    <details><summary>[OBPeriod1Code](#OBPeriod1Code)</summary><ul></ul></detai\
    ls> |\ 

    | Notes| Free text for adding extra details for fee charge cap| array|

    | OtherFeeType| -| array[[OBOtherCodeType1](#OBOtherCodeType1)]|


    \ <a name=OBRepaymentFeeCharges1></a>\ 

    ## OBRepaymentFeeCharges1\ 

    Applicable fee/charges for repayment such as prepayment, full early
    repayment or non repayment.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | RepaymentFeeChargeDetail| -|
    array[[OBRepaymentFeeChargeDetail1](#OBRepaymentFeeChargeDetail1)]|

    | RepaymentFeeChargeCap| -|
    array[[OBRepaymentFeeChargeCap1](#OBRepaymentFeeChargeCap1)]|


    \ <a name=OBRepaymentHoliday1></a>\ 

    ## OBRepaymentHoliday1\ 

    Details of capital repayment holiday if any\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | MaxHolidayLength| The maximum length/duration of a Repayment Holiday|
    integer|

    | MaxHolidayPeriod | Entity |
    <details><summary>[OBPeriod1Code](#OBPeriod1Code)</summary><ul></ul></detai\
    ls> |\ 

    | Notes| Free text for adding details for repayment holiday| array|


    \ <a name=OBRepayment1></a>\ 

    ## OBRepayment1\ 

    Repayment details of the Loan product\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | RepaymentType | Entity |
    <details><summary>[OBRepaymentType1Code](#OBRepaymentType1Code)</summary><u\
    l></ul></details> |\ 

    | RepaymentFrequency | Entity |
    <details><summary>[OBRepaymentFrequency1Code](#OBRepaymentFrequency1Code)</\
    summary><ul></ul></details> |\ 

    | AmountType | Entity |
    <details><summary>[OBRepaymentAmountType1Code](#OBRepaymentAmountType1Code)\
    </summary><ul></ul></details> |\ 

    | Notes| Optional additional notes to supplement the Repayment| array|

    | OtherRepaymentType | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 

    | OtherRepaymentFrequency | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 

    | OtherAmountType | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 

    | RepaymentFeeCharges | Entity |
    <details><summary>[OBRepaymentFeeCharges1](#OBRepaymentFeeCharges1)</summar\
    y><ul><li>RepaymentFeeChargeDetail
    [array[[OBRepaymentFeeChargeDetail1](#OBRepaymentFeeChargeDetail1)]]</li>
    <li>RepaymentFeeChargeCap
    [array[[OBRepaymentFeeChargeCap1](#OBRepaymentFeeChargeCap1)]]</li>
    </ul></details> |\ 

    | RepaymentHoliday| -|
    array[[OBRepaymentHoliday1](#OBRepaymentHoliday1)]|


    \ <a name=OBTariffType1Code></a>\ 

    ## OBTariffType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| TariffType which defines the fee and charges.| <ul
    style=\"padding-left: 0\"><li>TTEL</li><li>TTMX</li><li>TTOT</li></ul>|


    \ <a name=OBFeeChargeCap1></a>\ 

    ## OBFeeChargeCap1\ 

    Details about any caps (maximum charges) that apply to a particular or
    group of fee/charge\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | FeeType| -| array[[OBFeeType1Code](#OBFeeType1Code)]|

    | MinMaxType | Entity |
    <details><summary>[OBMinMaxType1Code](#OBMinMaxType1Code)</summary><ul></ul\
    ></details> |\ 

    | FeeCapOccurrence| Fee/Charges are captured dependent on the number of
    occurrences rather than capped at a particular amount| integer|

    | FeeCapAmount| Cap amount charged for a fee/charge (where it is charged
    in terms of an amount rather than a rate)| string|

    | CappingPeriod | Entity |
    <details><summary>[OBPeriod1Code](#OBPeriod1Code)</summary><ul></ul></detai\
    ls> |\ 

    | Notes| Free text for adding extra details for fee charge cap| array|

    | OtherFeeType| -| array[[OBOtherCodeType1](#OBOtherCodeType1)]|


    \ <a name=OBFeeApplicableRange1></a>\ 

    ## OBFeeApplicableRange1\ 

    Range or amounts or rates for which the fee/charge applies\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | MinimumAmount| Minimum Amount on which fee/charge is applicable (where
    it is expressed as an amount)| string|

    | MaximumAmount| Maximum Amount on which fee is applicable (where it is
    expressed as an amount)| string|

    | MinimumRate| Minimum rate on which fee/charge is applicable(where it
    is expressed as an rate)| string|

    | MaximumRate| Maximum rate on which fee/charge is applicable(where it
    is expressed as an rate)| string|


    \ <a name=OBFeeChargeDetail1></a>\ 

    ## OBFeeChargeDetail1\ 

    Other fees/charges details\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | FeeCategory | Entity |
    <details><summary>[OBFeeCategory1Code](#OBFeeCategory1Code)</summary><ul></\
    ul></details> |\ 

    | FeeType | Entity |
    <details><summary>[OBFeeType1Code](#OBFeeType1Code)</summary><ul></ul></det\
    ails> |\ 

    | NegotiableIndicator| Fee/charge which is usually negotiable rather
    than a fixed amount| boolean|

    | FeeAmount| Fee Amount charged for a fee/charge (where it is charged in
    terms of an amount rather than a rate)| string|

    | FeeRate| Rate charged for Fee/Charge (where it is charged in terms of
    a rate rather than an amount)| string|

    | FeeRateType | Entity |
    <details><summary>[OBInterestRateType1Code](#OBInterestRateType1Code)</summ\
    ary><ul></ul></details> |\ 

    | ApplicationFrequency | Entity |
    <details><summary>[OBFeeFrequency1Code](#OBFeeFrequency1Code)</summary><ul>\
    </ul></details> |\ 

    | CalculationFrequency | Entity |
    <details><summary>[OBFeeFrequency1Code](#OBFeeFrequency1Code)</summary><ul>\
    </ul></details> |\ 

    | Notes| Optional additional notes to supplement the fee/charge
    details.| array|

    | FeeChargeCap| -| array[[OBFeeChargeCap1](#OBFeeChargeCap1)]|

    | OtherFeeCategoryType | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 

    | OtherFeeType | Entity |
    <details><summary>[OBOtherFeeChargeDetailType](#OBOtherFeeChargeDetailType)\
    </summary><ul><li>Code [string]</li> <li><details><summary>FeeCategory
    [[OBFeeCategory1Code](#OBFeeCategory1Code)]</summary><ul></ul></details></l\
    i><li>Name [string]</li> <li>Description [string]</li> </ul></details> |\ 

    | OtherFeeRateType | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 

    | OtherApplicationFrequency | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 

    | OtherCalculationFrequency | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 

    | FeeApplicableRange | Entity |
    <details><summary>[OBFeeApplicableRange1](#OBFeeApplicableRange1)</summary>\
    <ul><li>MinimumAmount [string]</li> <li>MaximumAmount [string]</li>
    <li>MinimumRate [string]</li> <li>MaximumRate [string]</li> </ul></details>
    |\ 


    \ <a name=OBOtherFeesAndCharges1></a>\ 

    ## OBOtherFeesAndCharges1\ 

    Contains details of fees and charges which are not associated with
    either Overdraft or features/benefits\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | TariffType | Entity |
    <details><summary>[OBTariffType1Code](#OBTariffType1Code)</summary><ul></ul\
    ></details> |\ 

    | TariffName| Name of the tariff| string|

    | OtherTariffType | Entity |
    <details><summary>[OBOtherCodeType1](#OBOtherCodeType1)</summary><ul><li>Co\
    de [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> |\ 

    | FeeChargeDetail| -| array[[OBFeeChargeDetail1](#OBFeeChargeDetail1)]|

    | FeeChargeCap| -| array[[OBFeeChargeCap1](#OBFeeChargeCap1)]|


    \ <a name=OBOtherProductType1></a>\ 

    ## OBOtherProductType1\ 

    Other product type details associated with the account.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Name| Long name associated with the product| string|

    | Description| Description of the Product associated with the account|
    string|

    | ProductDetails | Entity |
    <details><summary>[OBOtherProductDetails1](#OBOtherProductDetails1)</summar\
    y><ul><li>Segment
    [array[[OBOtherProductSegment1Code](#OBOtherProductSegment1Code)]]</li>
    <li>FeeFreeLength [integer]</li> <li><details><summary>FeeFreeLengthPeriod
    [[OBPeriod1Code](#OBPeriod1Code)]</summary><ul></ul></details></li><li>Mont\
    hlyMaximumCharge [string]</li> <li>Notes [array]</li>
    <li><details><summary>OtherSegment
    [[OBOtherCodeType1](#OBOtherCodeType1)]</summary><ul><li>Code [string]</li>
    <li>Name [string]</li> <li>Description [string]</li>
    </ul></details></li></ul></details> |\ 

    | CreditInterest | Entity |
    <details><summary>[OBCreditInterest1](#OBCreditInterest1)</summary><ul><li>\
    TierBandSet [array[[OBTierBandSet1](#OBTierBandSet1)]]</li> </ul></details>
    |\ 

    | Overdraft | Entity |
    <details><summary>[OBOverdraft1](#OBOverdraft1)</summary><ul><li>Notes
    [array]</li> <li>OverdraftTierBandSet
    [array[[OBOverdraftTierbandSet1](#OBOverdraftTierbandSet1)]]</li>
    </ul></details> |\ 

    | LoanInterest | Entity |
    <details><summary>[OBLoanInterest1](#OBLoanInterest1)</summary><ul><li>Notes
    [array]</li> <li>LoanInterestTierBandSet
    [array[[OBLoanInterestTierBandSet1](#OBLoanInterestTierBandSet1)]]</li>
    </ul></details> |\ 

    | Repayment | Entity |
    <details><summary>[OBRepayment1](#OBRepayment1)</summary><ul><li><details><\
    summary>RepaymentType
    [[OBRepaymentType1Code](#OBRepaymentType1Code)]</summary><ul></ul></details\
    ></li><li><details><summary>RepaymentFrequency
    [[OBRepaymentFrequency1Code](#OBRepaymentFrequency1Code)]</summary><ul></ul\
    ></details></li><li><details><summary>AmountType
    [[OBRepaymentAmountType1Code](#OBRepaymentAmountType1Code)]</summary><ul></\
    ul></details></li><li>Notes [array]</li>
    <li><details><summary>OtherRepaymentType
    [[OBOtherCodeType1](#OBOtherCodeType1)]</summary><ul><li>Code [string]</li>
    <li>Name [string]</li> <li>Description [string]</li>
    </ul></details></li><li><details><summary>OtherRepaymentFrequency
    [[OBOtherCodeType1](#OBOtherCodeType1)]</summary><ul><li>Code [string]</li>
    <li>Name [string]</li> <li>Description [string]</li>
    </ul></details></li><li><details><summary>OtherAmountType
    [[OBOtherCodeType1](#OBOtherCodeType1)]</summary><ul><li>Code [string]</li>
    <li>Name [string]</li> <li>Description [string]</li>
    </ul></details></li><li><details><summary>RepaymentFeeCharges
    [[OBRepaymentFeeCharges1](#OBRepaymentFeeCharges1)]</summary><ul><li>Repaym\
    entFeeChargeDetail
    [array[[OBRepaymentFeeChargeDetail1](#OBRepaymentFeeChargeDetail1)]]</li>
    <li>RepaymentFeeChargeCap
    [array[[OBRepaymentFeeChargeCap1](#OBRepaymentFeeChargeCap1)]]</li>
    </ul></details></li><li>RepaymentHoliday
    [array[[OBRepaymentHoliday1](#OBRepaymentHoliday1)]]</li> </ul></details>
    |\ 

    | OtherFeesCharges| -|
    array[[OBOtherFeesAndCharges1](#OBOtherFeesAndCharges1)]|

    | SupplementaryData | Entity |
    <details><summary>[OBSupplementaryData1](#OBSupplementaryData1)</summary><u\
    l></ul></details> |\ 


    \ <a name=OBBCAProductSegment1Code></a>\ 

    ## OBBCAProductSegment1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| -| <ul style=\"padding-left:
    0\"><li>ClientAccount</li><li>Standard</li><li>NonCommercialChaitiesClbSoc<\
    /li><li>NonCommercialPublicAuthGovt</li><li>Religious</li><li>SectorSpecifi\
    c</li><li>Startup</li><li>Switcher</li></ul>|


    \ <a name=OBBCAProductDetails1></a>\ 

    ## OBBCAProductDetails1\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Segment| Market segmentation is a marketing term referring to the
    aggregating of prospective buyers into groups, or segments, that have common
    needs and respond similarly to a marketing action. Market segmentation
    enables companies to target different categories of consumers who perceive
    the full value of certain products and services differently from one
    another.  Read more: Market Segmentation
    http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd  W\
    ith respect to BCA products, they are segmented in relation to different
    markets that they wish to focus on.|
    array[[OBBCAProductSegment1Code](#OBBCAProductSegment1Code)]|

    | FeeFreeLength| The length/duration of the fee free period| number|

    | FeeFreeLengthPeriod | Entity |
    <details><summary>[OBPeriod1Code](#OBPeriod1Code)</summary><ul></ul></detai\
    ls> |\ 

    | Notes| Optional additional notes to supplement the Core product
    details| array|


    \ <a name=OBBCAData1></a>\ 

    ## OBBCAData1\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | ProductDetails | Entity |
    <details><summary>[OBBCAProductDetails1](#OBBCAProductDetails1)</summary><u\
    l><li>Segment
    [array[[OBBCAProductSegment1Code](#OBBCAProductSegment1Code)]]</li>
    <li>FeeFreeLength [number]</li> <li><details><summary>FeeFreeLengthPeriod
    [[OBPeriod1Code](#OBPeriod1Code)]</summary><ul></ul></details></li><li>Notes
    [array]</li> </ul></details> |\ 

    | CreditInterest | Entity |
    <details><summary>[OBCreditInterest1](#OBCreditInterest1)</summary><ul><li>\
    TierBandSet [array[[OBTierBandSet1](#OBTierBandSet1)]]</li> </ul></details>
    |\ 

    | Overdraft | Entity |
    <details><summary>[OBOverdraft1](#OBOverdraft1)</summary><ul><li>Notes
    [array]</li> <li>OverdraftTierBandSet
    [array[[OBOverdraftTierbandSet1](#OBOverdraftTierbandSet1)]]</li>
    </ul></details> |\ 

    | OtherFeesCharges| Contains details of fees and charges which are not
    associated with either Overdraft or features/benefits|
    array[[OBOtherFeesAndCharges1](#OBOtherFeesAndCharges1)]|


    \ <a name=OBPCAProductSegment1Code></a>\ 

    ## OBPCAProductSegment1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| -| <ul style=\"padding-left:
    0\"><li>Basic</li><li>BenefitAndReward</li><li>CreditInterest</li><li>Cashb\
    ack</li><li>General</li><li>Graduate</li><li>Other</li><li>Overdraft</li><l\
    i>Packaged</li><li>Premium</li><li>Reward</li><li>Student</li><li>YoungAdul\
    t</li><li>Youth</li></ul>|


    \ <a name=OBPCAProductDetails1></a>\ 

    ## OBPCAProductDetails1\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Segment| Market segmentation is a marketing term referring to the
    aggregating of prospective buyers into groups, or segments, that have common
    needs and respond similarly to a marketing action. Market segmentation
    enables companies to target different categories of consumers who perceive
    the full value of certain products and services differently from one
    another.  Read more: Market Segmentation
    http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd  W\
    ith respect to PCA products, they are segmented in relation to different
    markets that they wish to focus on.|
    array[[OBPCAProductSegment1Code](#OBPCAProductSegment1Code)]|

    | MonthlyMaximumCharge| The maximum relevant charges that could accrue
    as defined fully in Part 7 of the CMA order| string|

    | Notes| Optional additional notes to supplement the Core product
    details| array|


    \ <a name=OBPCAData1></a>\ 

    ## OBPCAData1\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | ProductDetails | Entity |
    <details><summary>[OBPCAProductDetails1](#OBPCAProductDetails1)</summary><u\
    l><li>Segment
    [array[[OBPCAProductSegment1Code](#OBPCAProductSegment1Code)]]</li>
    <li>MonthlyMaximumCharge [string]</li> <li>Notes [array]</li>
    </ul></details> |\ 

    | CreditInterest | Entity |
    <details><summary>[OBCreditInterest1](#OBCreditInterest1)</summary><ul><li>\
    TierBandSet [array[[OBTierBandSet1](#OBTierBandSet1)]]</li> </ul></details>
    |\ 

    | Overdraft | Entity |
    <details><summary>[OBOverdraft1](#OBOverdraft1)</summary><ul><li>Notes
    [array]</li> <li>OverdraftTierBandSet
    [array[[OBOverdraftTierbandSet1](#OBOverdraftTierbandSet1)]]</li>
    </ul></details> |\ 

    | OtherFeesCharges | Entity |
    <details><summary>[OBOtherFeesAndCharges1](#OBOtherFeesAndCharges1)</summar\
    y><ul><li><details><summary>TariffType
    [[OBTariffType1Code](#OBTariffType1Code)]</summary><ul></ul></details></li>\
    <li>TariffName [string]</li> <li><details><summary>OtherTariffType
    [[OBOtherCodeType1](#OBOtherCodeType1)]</summary><ul><li>Code [string]</li>
    <li>Name [string]</li> <li>Description [string]</li>
    </ul></details></li><li>FeeChargeDetail
    [array[[OBFeeChargeDetail1](#OBFeeChargeDetail1)]]</li> <li>FeeChargeCap
    [array[[OBFeeChargeCap1](#OBFeeChargeCap1)]]</li> </ul></details> |\ 


    \ <a name=OBProduct2></a>\ 

    ## OBProduct2\ 

    Product details associated with the Account\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | ProductName| The name of the Product used for marketing purposes from
    a customer perspective. I.e. what the customer would recognise.| string|

    | ProductId| The unique ID that has been internally assigned by the
    financial institution to each of the current account banking products they
    market to their retail and/or small to medium enterprise (SME) customers.|
    string|

    | AccountId| A unique and immutable identifier used to identify the
    account resource. This identifier has no meaning to the account owner.|
    string|

    | SecondaryProductId| Any secondary Identification which  supports
    Product Identifier to uniquely identify the current account banking
    products.| string|

    | ProductType | Entity |
    <details><summary>[OBExternalProductType1Code](#OBExternalProductType1Code)\
    </summary><ul></ul></details> |\ 

    | MarketingStateId| Unique and unambiguous identification of a  Product
    Marketing State.| string|

    | OtherProductType | Entity |
    <details><summary>[OBOtherProductType1](#OBOtherProductType1)</summary><ul>\
    <li>Name [string]</li> <li>Description [string]</li>
    <li><details><summary>ProductDetails
    [[OBOtherProductDetails1](#OBOtherProductDetails1)]</summary><ul><li>Segment
    [array[[OBOtherProductSegment1Code](#OBOtherProductSegment1Code)]]</li>
    <li>FeeFreeLength [integer]</li> <li><details><summary>FeeFreeLengthPeriod
    [[OBPeriod1Code](#OBPeriod1Code)]</summary><ul></ul></details></li><li>Mont\
    hlyMaximumCharge [string]</li> <li>Notes [array]</li>
    <li><details><summary>OtherSegment
    [[OBOtherCodeType1](#OBOtherCodeType1)]</summary><ul><li>Code [string]</li>
    <li>Name [string]</li> <li>Description [string]</li>
    </ul></details></li></ul></details></li><li><details><summary>CreditInterest
    [[OBCreditInterest1](#OBCreditInterest1)]</summary><ul><li>TierBandSet
    [array[[OBTierBandSet1](#OBTierBandSet1)]]</li>
    </ul></details></li><li><details><summary>Overdraft
    [[OBOverdraft1](#OBOverdraft1)]</summary><ul><li>Notes [array]</li>
    <li>OverdraftTierBandSet
    [array[[OBOverdraftTierbandSet1](#OBOverdraftTierbandSet1)]]</li>
    </ul></details></li><li><details><summary>LoanInterest
    [[OBLoanInterest1](#OBLoanInterest1)]</summary><ul><li>Notes [array]</li>
    <li>LoanInterestTierBandSet
    [array[[OBLoanInterestTierBandSet1](#OBLoanInterestTierBandSet1)]]</li>
    </ul></details></li><li><details><summary>Repayment
    [[OBRepayment1](#OBRepayment1)]</summary><ul><li><details><summary>Repaymen\
    tType
    [[OBRepaymentType1Code](#OBRepaymentType1Code)]</summary><ul></ul></details\
    ></li><li><details><summary>RepaymentFrequency
    [[OBRepaymentFrequency1Code](#OBRepaymentFrequency1Code)]</summary><ul></ul\
    ></details></li><li><details><summary>AmountType
    [[OBRepaymentAmountType1Code](#OBRepaymentAmountType1Code)]</summary><ul></\
    ul></details></li><li>Notes [array]</li>
    <li><details><summary>OtherRepaymentType
    [[OBOtherCodeType1](#OBOtherCodeType1)]</summary><ul><li>Code [string]</li>
    <li>Name [string]</li> <li>Description [string]</li>
    </ul></details></li><li><details><summary>OtherRepaymentFrequency
    [[OBOtherCodeType1](#OBOtherCodeType1)]</summary><ul><li>Code [string]</li>
    <li>Name [string]</li> <li>Description [string]</li>
    </ul></details></li><li><details><summary>OtherAmountType
    [[OBOtherCodeType1](#OBOtherCodeType1)]</summary><ul><li>Code [string]</li>
    <li>Name [string]</li> <li>Description [string]</li>
    </ul></details></li><li><details><summary>RepaymentFeeCharges
    [[OBRepaymentFeeCharges1](#OBRepaymentFeeCharges1)]</summary><ul><li>Repaym\
    entFeeChargeDetail
    [array[[OBRepaymentFeeChargeDetail1](#OBRepaymentFeeChargeDetail1)]]</li>
    <li>RepaymentFeeChargeCap
    [array[[OBRepaymentFeeChargeCap1](#OBRepaymentFeeChargeCap1)]]</li>
    </ul></details></li><li>RepaymentHoliday
    [array[[OBRepaymentHoliday1](#OBRepaymentHoliday1)]]</li>
    </ul></details></li><li>OtherFeesCharges
    [array[[OBOtherFeesAndCharges1](#OBOtherFeesAndCharges1)]]</li>
    <li><details><summary>SupplementaryData
    [[OBSupplementaryData1](#OBSupplementaryData1)]</summary><ul></ul></details\
    ></li></ul></details> |\ 

    | BCA | Entity |
    <details><summary>[OBBCAData1](#OBBCAData1)</summary><ul><li><details><summ\
    ary>ProductDetails
    [[OBBCAProductDetails1](#OBBCAProductDetails1)]</summary><ul><li>Segment
    [array[[OBBCAProductSegment1Code](#OBBCAProductSegment1Code)]]</li>
    <li>FeeFreeLength [number]</li> <li><details><summary>FeeFreeLengthPeriod
    [[OBPeriod1Code](#OBPeriod1Code)]</summary><ul></ul></details></li><li>Notes
    [array]</li> </ul></details></li><li><details><summary>CreditInterest
    [[OBCreditInterest1](#OBCreditInterest1)]</summary><ul><li>TierBandSet
    [array[[OBTierBandSet1](#OBTierBandSet1)]]</li>
    </ul></details></li><li><details><summary>Overdraft
    [[OBOverdraft1](#OBOverdraft1)]</summary><ul><li>Notes [array]</li>
    <li>OverdraftTierBandSet
    [array[[OBOverdraftTierbandSet1](#OBOverdraftTierbandSet1)]]</li>
    </ul></details></li><li>OtherFeesCharges
    [array[[OBOtherFeesAndCharges1](#OBOtherFeesAndCharges1)]]</li>
    </ul></details> |\ 

    | PCA | Entity |
    <details><summary>[OBPCAData1](#OBPCAData1)</summary><ul><li><details><summ\
    ary>ProductDetails
    [[OBPCAProductDetails1](#OBPCAProductDetails1)]</summary><ul><li>Segment
    [array[[OBPCAProductSegment1Code](#OBPCAProductSegment1Code)]]</li>
    <li>MonthlyMaximumCharge [string]</li> <li>Notes [array]</li>
    </ul></details></li><li><details><summary>CreditInterest
    [[OBCreditInterest1](#OBCreditInterest1)]</summary><ul><li>TierBandSet
    [array[[OBTierBandSet1](#OBTierBandSet1)]]</li>
    </ul></details></li><li><details><summary>Overdraft
    [[OBOverdraft1](#OBOverdraft1)]</summary><ul><li>Notes [array]</li>
    <li>OverdraftTierBandSet
    [array[[OBOverdraftTierbandSet1](#OBOverdraftTierbandSet1)]]</li>
    </ul></details></li><li><details><summary>OtherFeesCharges
    [[OBOtherFeesAndCharges1](#OBOtherFeesAndCharges1)]</summary><ul><li><detai\
    ls><summary>TariffType
    [[OBTariffType1Code](#OBTariffType1Code)]</summary><ul></ul></details></li>\
    <li>TariffName [string]</li> <li><details><summary>OtherTariffType
    [[OBOtherCodeType1](#OBOtherCodeType1)]</summary><ul><li>Code [string]</li>
    <li>Name [string]</li> <li>Description [string]</li>
    </ul></details></li><li>FeeChargeDetail
    [array[[OBFeeChargeDetail1](#OBFeeChargeDetail1)]]</li> <li>FeeChargeCap
    [array[[OBFeeChargeCap1](#OBFeeChargeCap1)]]</li>
    </ul></details></li></ul></details> |\ 


    \ <a name=OBReadDataProduct2></a>\ 

    ## OBReadDataProduct2\ 

    Aligning with the read write specs structure.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Product| -| array[[OBProduct2](#OBProduct2)]|


    \ <a name=OBReadProduct2></a>\ 

    ## OBReadProduct2\ 

    Product details of Other Product which is not avaiable in the standard
    list\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadDataProduct2](#OBReadDataProduct2)</summary><ul><l\
    i>Product [array[[OBProduct2](#OBProduct2)]]</li> </ul></details> |\ 

    | Links | Entity |
    <details><summary>[Links](#Links)</summary><ul><li>Self [string]</li>
    <li>First [string]</li> <li>Prev [string]</li> <li>Next [string]</li>
    <li>Last [string]</li> </ul></details> |\ 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li>FirstAvailableDateTime [string]</li> <li>LastAvailableDateTime
    [string]</li> </ul></details> |\ 


    \ <a name=SandboxRequest></a>\ 

    ## SandboxRequest\ 

    Request to create a new sandbox\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | sandboxId| Sandbox Id| string|


    \ <a name=SandboxRetryCacheEntry></a>\ 

    ## SandboxRetryCacheEntry\ 

    Keeps the number of calls without x-fapi-customer-ip-address header
    present\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | cacheKey| Cache key| string|

    | count| Number of retries ( up to 4 )| integer|

    | expirationTimestamp| Expiration timestamp of the entry| string|


    \ <a name=SandboxBankAccountInfo></a>\ 

    ## SandboxBankAccountInfo\ 

    General account information\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | currency| Currency (EUR, USD ...)| string|

    | iban| Account's IBAN| string|

    | accountType| Account's type (Business, Personal)| string|

    | accountSubType| Account's sub-type (ChargeCard, CreditCard,
    CurrentAccount ...)| string|

    | description| Account's description| string|

    | alias| Account's alias| string|

    | openingDate| Account's opening date| string|

    | availableBalance| Account's available balance| number|

    | ledgerBalance| Account's ledger balance| number|


    \ <a name=SandboxParty></a>\ 

    ## SandboxParty\ 

    Connected party information\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | id| Party id| string|

    | name| Name| string|


    \ <a name=SandboxBeneficiary></a>\ 

    ## SandboxBeneficiary\ 

    Beneficiary information\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | name| Beneficiary name| string|


    \ <a name=SandboxStandingOrder></a>\ 

    ## SandboxStandingOrder\ 

    Standing order information\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | description| Standing order short description| string|

    | frequency| Standing order frequency| string|

    | firstPaymentDate| Standing order first collection date| string|

    | nextPaymentDate| Standing order next collection date| string|

    | finalPaymentDate| Standing order final collection date| string|

    | lastPaymentDate| Standing order last executed payment date| string|

    | status| Standing order status (Active, Inactive)| string|

    | amount| Standing order amount| number|


    \ <a name=SandboxScheduledPayment></a>\ 

    ## SandboxScheduledPayment\ 

    Scheduled payment information\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | description| Scheduled payment's short description| string|

    | executionDate| Scheduled payment's execution date| string|

    | amount| Amount| number|

    | senderReference| Debtor / Sender reference| string|


    \ <a name=SandboxStatement></a>\ 

    ## SandboxStatement\ 

    Statement information\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | number| Statement number| string|

    | year| Statement year| integer|

    | month| Statement month| integer|


    \ <a name=SandboxTransaction></a>\ 

    ## SandboxTransaction\ 

    Transaction information\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | amount| Amount| number|

    | currency| Currency (EUR, USD ...)| string|

    | creditDebit| Credit / Debit indicator| string|

    | valueDateTime| Valeur| string|

    | bookingDateTime| Booking date time| string|

    | description| Description| string|

    | accountingBalance| Balance| number|


    \ <a name=SandboxBankAccount></a>\ 

    ## SandboxBankAccount\ 

    Sandbox bank account\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | info | Entity |
    <details><summary>[SandboxBankAccountInfo](#SandboxBankAccountInfo)</summar\
    y><ul><li>currency [string]</li> <li>iban [string]</li> <li>accountType
    [string]</li> <li>accountSubType [string]</li> <li>description [string]</li>
    <li>alias [string]</li> <li>openingDate [string]</li> <li>availableBalance
    [number]</li> <li>ledgerBalance [number]</li> </ul></details> |\ 

    | party | Entity |
    <details><summary>[SandboxParty](#SandboxParty)</summary><ul><li>id
    [string]</li> <li>name [string]</li> </ul></details> |\ 

    | beneficiaries| List of account's beneficiaries|
    array[[SandboxBeneficiary](#SandboxBeneficiary)]|

    | standingOrders| List of account's standing orders|
    array[[SandboxStandingOrder](#SandboxStandingOrder)]|

    | scheduledPayments| List of account's scheduled payments|
    array[[SandboxScheduledPayment](#SandboxScheduledPayment)]|

    | statements| List of account's statements|
    array[[SandboxStatement](#SandboxStatement)]|

    | transactions| List of account's transactions|
    array[[SandboxTransaction](#SandboxTransaction)]|


    \ <a name=SandboxCardInfo></a>\ 

    ## SandboxCardInfo\ 

    Sandbox card information\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | number| Card number| string|

    | description| Description| string|

    | holderName| Holder name| string|

    | expiration| Expiration date (05/2022)| string|

    | type| Type| string|

    | subType| Sub type| string|

    | availableBalance| Available balance| number|

    | ledgerBalance| Ledger balance| number|


    \ <a name=SandboxCard></a>\ 

    ## SandboxCard\ 

    Sandbox card\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | info | Entity |
    <details><summary>[SandboxCardInfo](#SandboxCardInfo)</summary><ul><li>numb\
    er [string]</li> <li>description [string]</li> <li>holderName [string]</li>
    <li>expiration [string]</li> <li>type [string]</li> <li>subType
    [string]</li> <li>availableBalance [number]</li> <li>ledgerBalance
    [number]</li> </ul></details> |\ 

    | party | Entity |
    <details><summary>[SandboxParty](#SandboxParty)</summary><ul><li>id
    [string]</li> <li>name [string]</li> </ul></details> |\ 

    | statements| Card statements|
    array[[SandboxStatement](#SandboxStatement)]|

    | transactions| Card transactions|
    array[[SandboxTransaction](#SandboxTransaction)]|


    \ <a name=SandboxUser></a>\ 

    ## SandboxUser\ 

    User data\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | userId| Connected user id| string|

    | retryCacheEntries| Retry cache entries|
    array[[SandboxRetryCacheEntry](#SandboxRetryCacheEntry)]|

    | accounts| List of accounts|
    array[[SandboxBankAccount](#SandboxBankAccount)]|

    | cards| List of cards| array[[SandboxCard](#SandboxCard)]|


    \ <a name=Sandbox></a>\ 

    ## Sandbox\ 

    Sandbox model\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | sandboxId| Sandbox id| string|

    | users| List of users| array[[SandboxUser](#SandboxUser)]|


    \ <a name=OBExternalScheduleType1Code></a>\ 

    ## OBExternalScheduleType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| -| <ul style=\"padding-left:
    0\"><li>Arrival</li><li>Execution</li></ul>|


    \ <a name=OBScheduledPayment3></a>\ 

    ## OBScheduledPayment3\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId| A unique and immutable identifier used to identify the
    account resource. This identifier has no meaning to the account owner.|
    string|

    | ScheduledPaymentId| A unique and immutable identifier used to identify
    the scheduled payment resource. This identifier has no meaning to the
    account owner.| string|

    | ScheduledPaymentDateTime| The date on which the scheduled payment will
    be made.All dates in the JSON payloads are represented in ISO 8601 date-time
    format. All date-time fields in responses must include the timezone.An
    example is below: 2017-04-05T10:43:07+00:00| string|

    | ScheduledType | Entity |
    <details><summary>[OBExternalScheduleType1Code](#OBExternalScheduleType1Cod\
    e)</summary><ul></ul></details> |\ 

    | Reference| Unique reference, as assigned by the creditor, to
    unambiguously refer to the payment transaction. Usage: If available, the
    initiating party should provide this reference in the structured remittance
    information, to enable reconciliation by the creditor upon receipt of the
    amount of money. If the business context requires the use of a creditor
    reference or a payment remit identification, and only one identifier can be
    passed through the end-to-end chain, the creditor's reference or payment
    remittance identification should be quoted in the end-to-end transaction
    identification.| string|

    | DebtorReference| A reference value provided by the PSU to the PISP
    while setting up the scheduled payment.| string|

    | InstructedAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoric\
    CurrencyAndAmount)</summary><ul><li>Amount [string]</li> <li>Currency
    [string]</li> </ul></details> |\ 

    | CreditorAgent | Entity |
    <details><summary>[OBBranchAndFinancialInstitutionIdentification5](#OBBranc\
    hAndFinancialInstitutionIdentification5)</summary><ul><li>SchemeName
    [string]</li> <li>Identification [string]</li> </ul></details> |\ 

    | CreditorAccount | Entity |
    <details><summary>[OBCashAccount5](#OBCashAccount5)</summary><ul><li>Scheme\
    Name [string]</li> <li>Identification [string]</li> <li>Name [string]</li>
    <li>SecondaryIdentification [string]</li> </ul></details> |\ 


    \ <a name=OBReadDataScheduledPayment3></a>\ 

    ## OBReadDataScheduledPayment3\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | ScheduledPayment| -|
    array[[OBScheduledPayment3](#OBScheduledPayment3)]|


    \ <a name=OBReadScheduledPayment3></a>\ 

    ## OBReadScheduledPayment3\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadDataScheduledPayment3](#OBReadDataScheduledPayment\
    3)</summary><ul><li>ScheduledPayment
    [array[[OBScheduledPayment3](#OBScheduledPayment3)]]</li> </ul></details>
    |\ 

    | Links | Entity |
    <details><summary>[Links](#Links)</summary><ul><li>Self [string]</li>
    <li>First [string]</li> <li>Prev [string]</li> <li>Next [string]</li>
    <li>Last [string]</li> </ul></details> |\ 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li>FirstAvailableDateTime [string]</li> <li>LastAvailableDateTime
    [string]</li> </ul></details> |\ 


    \ <a name=OBExternalStandingOrderStatus1Code></a>\ 

    ## OBExternalStandingOrderStatus1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| -| <ul style=\"padding-left:
    0\"><li>Active</li><li>Inactive</li></ul>|


    \ <a name=OBStandingOrder5></a>\ 

    ## OBStandingOrder5\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId| A unique and immutable identifier used to identify the
    account resource. This identifier has no meaning to the account owner.|
    string|

    | StandingOrderId| A unique and immutable identifier used to identify
    the standing order resource. This identifier has no meaning to the account
    owner.| string|

    | Frequency| Individual Definitions: NotKnown - Not Known EvryDay -
    Every day EvryWorkgDay - Every working day IntrvlDay - An interval specified
    in number of calendar days(02 to 31) IntrvlWkDay - An interval specified in
    weeks(01 to 09), and the day within the week(01 to 07) WkInMnthDay - A
    monthly interval, specifying the week of the month(01 to 05) and day within
    the week(01 to 07) IntrvlMnthDay - An interval specified in months(between
    01 to 06, 12, 24), specifying the day within the month(-05 to -01, 01 to 31)
    QtrDay - Quarterly(either ENGLISH, SCOTTISH, or RECEIVED) ENGLISH = Paid on
    the 25th March, 24th June, 29th September and 25th December. SCOTTISH = Paid
    on the 2nd February, 15th May, 1st August and 11th November. RECEIVED = Paid
    on the 20th March, 19th June, 24th September and 20th December. Individual
    Patterns: NotKnown (ScheduleCode) EvryDay (ScheduleCode) EvryWorkgDay
    (ScheduleCode) IntrvlDay:NoOfDay (ScheduleCode + NoOfDay)
    IntrvlWkDay:IntervalInWeeks:DayInWeek(ScheduleCode + IntervalInWeeks +
    DayInWeek) WkInMnthDay:WeekInMonth:DayInWeek(ScheduleCode + WeekInMonth +
    DayInWeek) IntrvlMnthDay:IntervalInMonths:DayInMonth(ScheduleCode +
    IntervalInMonths + DayInMonth) QtrDay: + either(ENGLISH, SCOTTISH or
    RECEIVED) ScheduleCode + QuarterDay The regular expression for this element
    combines five smaller versions for each permitted pattern.To aid legibility
    - the components are presented individually here: NotKnown EvryDay
    EvryWorkgDay IntrvlDay:((0[2-9])|([1 - 2][0 - 9])|3[0-1])
    IntrvlWkDay:0[1-9]:0[1-7] WkInMnthDay:0[1-5]:0[1-7]
    IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12] [0-9]|3[01])
    QtrDay:(ENGLISH|SCOTTISH|RECEIVED) Full Regular Expression:
    ^(NotKnown)$|^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1 - 2][0 -
    9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^\
    (IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12]
    [0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$| string|

    | Reference| Unique reference, as assigned by the creditor, to
    unambiguously refer to the payment transaction. Usage: If available, the
    initiating party should provide this reference in the structured remittance
    information, to enable reconciliation by the creditor upon receipt of the
    amount of money. If the business context requires the use of a creditor
    reference or a payment remit identification, and only one identifier can be
    passed through the end-to-end chain, the creditor's reference or payment
    remittance identification should be quoted in the end-to-end transaction
    identification.| string|

    | FirstPaymentDateTime| The date on which the first payment for a
    Standing Order schedule will be made.All dates in the JSON payloads are
    represented in ISO 8601 date-time format. All date-time fields in responses
    must include the timezone.An example is below: 2017-04-05T10:43:07+00:00|
    string|

    | NextPaymentDateTime| The date on which the next payment for a Standing
    Order schedule will be made.All dates in the JSON payloads are represented
    in ISO 8601 date-time format. All date-time fields in responses must include
    the timezone.An example is below: 2017-04-05T10:43:07+00:00| string|

    | LastPaymentDateTime| The date on which the last (most recent) payment
    for a Standing Order schedule was made.All dates in the JSON payloads are
    represented in ISO 8601 date-time format. All date-time fields in responses
    must include the timezone.An example is below: 2017-04-05T10:43:07+00:00|
    string|

    | FinalPaymentDateTime| The date on which the final payment for a
    Standing Order schedule will be made.All dates in the JSON payloads are
    represented in ISO 8601 date-time format. All date-time fields in responses
    must include the timezone.An example is below: 2017-04-05T10:43:07+00:00|
    string|

    | NumberOfPayments| Number of the payments that will be made in
    completing this frequency sequence including any executed since the sequence
    start date.| string|

    | StandingOrderStatusCode | Entity |
    <details><summary>[OBExternalStandingOrderStatus1Code](#OBExternalStandingO\
    rderStatus1Code)</summary><ul></ul></details> |\ 

    | FirstPaymentAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoric\
    CurrencyAndAmount)</summary><ul><li>Amount [string]</li> <li>Currency
    [string]</li> </ul></details> |\ 

    | NextPaymentAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoric\
    CurrencyAndAmount)</summary><ul><li>Amount [string]</li> <li>Currency
    [string]</li> </ul></details> |\ 

    | LastPaymentAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoric\
    CurrencyAndAmount)</summary><ul><li>Amount [string]</li> <li>Currency
    [string]</li> </ul></details> |\ 

    | FinalPaymentAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoric\
    CurrencyAndAmount)</summary><ul><li>Amount [string]</li> <li>Currency
    [string]</li> </ul></details> |\ 

    | CreditorAgent | Entity |
    <details><summary>[OBBranchAndFinancialInstitutionIdentification5](#OBBranc\
    hAndFinancialInstitutionIdentification5)</summary><ul><li>SchemeName
    [string]</li> <li>Identification [string]</li> </ul></details> |\ 

    | CreditorAccount | Entity |
    <details><summary>[OBCashAccount5](#OBCashAccount5)</summary><ul><li>Scheme\
    Name [string]</li> <li>Identification [string]</li> <li>Name [string]</li>
    <li>SecondaryIdentification [string]</li> </ul></details> |\ 

    | SupplementaryData | Entity |
    <details><summary>[OBSupplementaryData1](#OBSupplementaryData1)</summary><u\
    l></ul></details> |\ 


    \ <a name=OBReadDataStandingOrder5></a>\ 

    ## OBReadDataStandingOrder5\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | StandingOrder| -| array[[OBStandingOrder5](#OBStandingOrder5)]|


    \ <a name=OBReadStandingOrder6></a>\ 

    ## OBReadStandingOrder6\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadDataStandingOrder5](#OBReadDataStandingOrder5)</su\
    mmary><ul><li>StandingOrder
    [array[[OBStandingOrder5](#OBStandingOrder5)]]</li> </ul></details> |\ 

    | Links | Entity |
    <details><summary>[Links](#Links)</summary><ul><li>Self [string]</li>
    <li>First [string]</li> <li>Prev [string]</li> <li>Next [string]</li>
    <li>Last [string]</li> </ul></details> |\ 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li>FirstAvailableDateTime [string]</li> <li>LastAvailableDateTime
    [string]</li> </ul></details> |\ 


    \ <a name=OBExternalStatementType1Code></a>\ 

    ## OBExternalStatementType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| -| <ul style=\"padding-left:
    0\"><li>AccountClosure</li><li>AccountOpening</li><li>Annual</li><li>Interi\
    m</li><li>RegularPeriodic</li></ul>|


    \ <a name=OBStatementBenefit1></a>\ 

    ## OBStatementBenefit1\ 

    Set of elements used to provide details of a benefit or reward amount
    for the statement resource.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Type| Benefit type, in a coded form.| string|

    | Amount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoric\
    CurrencyAndAmount)</summary><ul><li>Amount [string]</li> <li>Currency
    [string]</li> </ul></details> |\ 


    \ <a name=OBStatementFee2></a>\ 

    ## OBStatementFee2\ 

    Set of elements used to provide details of a fee for the statement
    resource.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Description| Description that may be available for the statement fee.|
    string|

    | CreditDebitIndicator | Entity |
    <details><summary>[OBCreditDebitCode](#OBCreditDebitCode)</summary><ul></ul\
    ></details> |\ 

    | Type| Fee type, in a coded form.| string|

    | Rate| Rate charged for Statement Fee (where it is charged in terms of
    a rate rather than an amount)| number|

    | RateType| Description that may be available for the statement fee rate
    type.| string|

    | Frequency| How frequently the fee is applied to the Account.| string|

    | Amount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoric\
    CurrencyAndAmount)</summary><ul><li>Amount [string]</li> <li>Currency
    [string]</li> </ul></details> |\ 


    \ <a name=OBStatementInterest2></a>\ 

    ## OBStatementInterest2\ 

    Set of elements used to provide details of a generic interest amount
    related to the statement resource.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Description| Description that may be available for the statement
    interest.| string|

    | CreditDebitIndicator | Entity |
    <details><summary>[OBCreditDebitCode](#OBCreditDebitCode)</summary><ul></ul\
    ></details> |\ 

    | Type| Interest amount type, in a coded form.| string|

    | Rate| Field representing a percentage (e.g. 0.05 represents 5% and
    0.9525 represents 95.25%). Note the number of decimal places may vary.|
    number|

    | RateType| Description that may be available for the statement Interest
    rate type.| string|

    | Frequency| Specifies the statement fee type requested| string|

    | Amount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoric\
    CurrencyAndAmount)</summary><ul><li>Amount [string]</li> <li>Currency
    [string]</li> </ul></details> |\ 


    \ <a name=OBStatementAmount1></a>\ 

    ## OBStatementAmount1\ 

    Set of elements used to provide details of a generic amount for the
    statement resource.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | CreditDebitIndicator | Entity |
    <details><summary>[OBCreditDebitCode](#OBCreditDebitCode)</summary><ul></ul\
    ></details> |\ 

    | Type| Amount type, in a coded form.| string|

    | Amount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoric\
    CurrencyAndAmount)</summary><ul><li>Amount [string]</li> <li>Currency
    [string]</li> </ul></details> |\ 


    \ <a name=OBStatementDateTime1></a>\ 

    ## OBStatementDateTime1\ 

    Set of elements used to provide details of a generic date time for the
    statement resource.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | DateTime| Date and time associated with the date time type.All dates
    in the JSON payloads are represented in ISO 8601 date-time format. All
    date-time fields in responses must include the timezone.An example is below:
    2017-04-05T10:43:07+00:00| string|

    | Type| Date time type, in a coded form.| string|


    \ <a name=OBStatementRate1></a>\ 

    ## OBStatementRate1\ 

    Set of elements used to provide details of a generic rate related to the
    statement resource.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Rate| Rate associated with the statement rate type.| string|

    | Type| Statement rate type, in a coded form.| string|


    \ <a name=OBStatementValue1></a>\ 

    ## OBStatementValue1\ 

    Set of elements used to provide details of a generic number value
    related to the statement resource.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Value| Value associated with the statement value type.| string|

    | Type| Statement value type, in a coded form.| string|


    \ <a name=OBStatement2></a>\ 

    ## OBStatement2\ 

    Provides further details on a statement resource.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId| A unique and immutable identifier used to identify the
    account resource. This identifier has no meaning to the account owner.|
    string|

    | StatementId| Unique identifier for the statement resource within an
    servicing institution. This identifier is both unique and immutable.|
    string|

    | StatementReference| Unique reference for the statement. This reference
    may be optionally populated if available.| string|

    | Type | Entity |
    <details><summary>[OBExternalStatementType1Code](#OBExternalStatementType1C\
    ode)</summary><ul></ul></details> |\ 

    | StartDateTime| Date and time at which the statement period starts.All
    dates in the JSON payloads are represented in ISO 8601 date-time format. All
    date-time fields in responses must include the timezone.An example is below:
    2017-04-05T10:43:07+00:00| string|

    | EndDateTime| Date and time at which the statement period starts.All
    dates in the JSON payloads are represented in ISO 8601 date-time format. All
    date-time fields in responses must include the timezone.An example is below:
    2017-04-05T10:43:07+00:00| string|

    | CreationDateTime| Date and time at which the statement period
    starts.All dates in the JSON payloads are represented in ISO 8601 date-time
    format. All date-time fields in responses must include the timezone.An
    example is below: 2017-04-05T10:43:07+00:00| string|

    | StatementDescription| Other descriptions that may be available for the
    statement resource.| array|

    | StatementBenefit| Set of elements used to provide details of a benefit
    or reward amount for the statement resource.|
    array[[OBStatementBenefit1](#OBStatementBenefit1)]|

    | StatementFee| Set of elements used to provide details of a fee for the
    statement resource.| array[[OBStatementFee2](#OBStatementFee2)]|

    | StatementInterest| Set of elements used to provide details of a
    generic interest amount related to the statement resource.|
    array[[OBStatementInterest2](#OBStatementInterest2)]|

    | StatementAmount| Set of elements used to provide details of a generic
    amount for the statement resource.|
    array[[OBStatementAmount1](#OBStatementAmount1)]|

    | StatementDateTime| Set of elements used to provide details of a
    generic date time for the statement resource.|
    array[[OBStatementDateTime1](#OBStatementDateTime1)]|

    | StatementRate| Set of elements used to provide details of a generic
    rate related to the statement resource.|
    array[[OBStatementRate1](#OBStatementRate1)]|

    | StatementValue| Set of elements used to provide details of a generic
    number value related to the statement resource.|
    array[[OBStatementValue1](#OBStatementValue1)]|


    \ <a name=OBReadDataStatement2></a>\ 

    ## OBReadDataStatement2\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Statement| Provides further details on a statement resource.|
    array[[OBStatement2](#OBStatement2)]|


    \ <a name=OBReadStatement2></a>\ 

    ## OBReadStatement2\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadDataStatement2](#OBReadDataStatement2)</summary><u\
    l><li>Statement [array[[OBStatement2](#OBStatement2)]]</li> </ul></details>
    |\ 

    | Links | Entity |
    <details><summary>[Links](#Links)</summary><ul><li>Self [string]</li>
    <li>First [string]</li> <li>Prev [string]</li> <li>Next [string]</li>
    <li>Last [string]</li> </ul></details> |\ 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li>FirstAvailableDateTime [string]</li> <li>LastAvailableDateTime
    [string]</li> </ul></details> |\ 


    \ <a name=OBEntryStatus1Code></a>\ 

    ## OBEntryStatus1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| -| <ul style=\"padding-left:
    0\"><li>Booked</li><li>Pending</li></ul>|


    \ <a name=OBTransactionMutability1Code></a>\ 

    ## OBTransactionMutability1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| -| <ul style=\"padding-left:
    0\"><li>Mutable</li><li>Immutable</li></ul>|


    \ <a name=OBCurrencyExchange5></a>\ 

    ## OBCurrencyExchange5\ 

    Set of elements used to provide details on the currency exchange.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | SourceCurrency| Currency from which an amount is to be converted in a
    currency conversion.| string|

    | TargetCurrency| Currency into which an amount is to be converted in a
    currency conversion.| string|

    | UnitCurrency| Currency in which the rate of exchange is expressed in a
    currency exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.|
    string|

    | ExchangeRate| Factor used to convert an amount from one currency into
    another. This reflects the price at which one currency was bought with
    another currency. Usage: ExchangeRate expresses the ratio between
    UnitCurrency and QuotedCurrency (ExchangeRate =
    UnitCurrency/QuotedCurrency).| number|

    | ContractIdentification| Unique identification to unambiguously
    identify the foreign exchange contract.| string|

    | QuotationDate| Date and time at which an exchange rate is quoted.All
    dates in the JSON payloads are represented in ISO 8601 date-time
    format.  All date-time fields in responses must include the timezone. An
    example is below: 2017-04-05T10:43:07+00:00| string|

    | InstructedAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoric\
    CurrencyAndAmount)</summary><ul><li>Amount [string]</li> <li>Currency
    [string]</li> </ul></details> |\ 


    \ <a name=OBBankTransactionCodeStructure1></a>\ 

    ## OBBankTransactionCodeStructure1\ 

    Set of elements used to fully identify the type of underlying
    transaction resulting in an entry.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Code| Specifies the family within a domain.| string|

    | SubCode| Specifies the sub-product family within a specific family.|
    string|


    \ <a name=ProprietaryBankTransactionCodeStructure1></a>\ 

    ## ProprietaryBankTransactionCodeStructure1\ 

    Set of elements to fully identify a proprietary bank transaction code.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Code| Proprietary bank transaction code to identify the underlying
    transaction.| string|

    | Issuer| Identification of the issuer of the proprietary bank
    transaction code.| string|


    \ <a name=OBTransactionCashBalance></a>\ 

    ## OBTransactionCashBalance\ 

    Set of elements used to define the balance as a numerical representation
    of the net increases and decreases in an account after a transaction entry
    is applied to the account.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | CreditDebitIndicator | Entity |
    <details><summary>[OBCreditDebitCode](#OBCreditDebitCode)</summary><ul></ul\
    ></details> |\ 

    | Type | Entity |
    <details><summary>[OBBalanceType1Code](#OBBalanceType1Code)</summary><ul></\
    ul></details> |\ 

    | Amount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoric\
    CurrencyAndAmount)</summary><ul><li>Amount [string]</li> <li>Currency
    [string]</li> </ul></details> |\ 


    \ <a name=OBMerchantDetails1></a>\ 

    ## OBMerchantDetails1\ 

    Details of the merchant involved in the transaction.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | MerchantName| Name by which the merchant is known.| string|

    | MerchantCategoryCode| Category code conform to ISO 18245, related to
    the type of services or goods the merchant provides for the transaction.|
    string|


    \ <a name=OBCashAccount6></a>\ 

    ## OBCashAccount6\ 

    Unambiguous identification of the account of the creditor, in the case
    of a debit transaction.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | SchemeName| Name of the identification scheme, in a coded form as
    published in an external list.| string|

    | Identification| Identification assigned by an institution to identify
    an account. This identification is known by the account owner.| string|

    | Name| The account name is the name or names of the account owner(s)
    represented at an account level, as displayed by the ASPSP's online
    channels. Note, the account name is not the product name or the nickname of
    the account.| string|

    | SecondaryIdentification| This is secondary identification of the
    account, as assigned by the account servicing institution. This can be used
    by building societies to additionally identify accounts with a roll
    number(in addition to a sort code and account number combination).| string|


    \ <a name=OBExternalCardSchemeType1Code></a>\ 

    ## OBExternalCardSchemeType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Name of the card scheme.| <ul style=\"padding-left:
    0\"><li>AmericanExpress</li><li>Diners</li><li>Discover</li><li>MasterCard<\
    /li><li>VISA</li></ul>|


    \ <a name=OBExternalCardAuthorisationType1Code></a>\ 

    ## OBExternalCardAuthorisationType1Code\ 

    ### Attributes\ 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| The card authorisation type.| <ul style=\"padding-left:
    0\"><li>ConsumerDevice</li><li>Contactless</li><li>None</li><li>PIN</li></u\
    l>|


    \ <a name=OBTransactionCardInstrument1></a>\ 

    ## OBTransactionCardInstrument1\ 

    Set of elements to describe the card instrument used in the
    transaction.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | CardSchemeName | Entity |
    <details><summary>[OBExternalCardSchemeType1Code](#OBExternalCardSchemeType\
    1Code)</summary><ul></ul></details> |\ 

    | AuthorisationType | Entity |
    <details><summary>[OBExternalCardAuthorisationType1Code](#OBExternalCardAut\
    horisationType1Code)</summary><ul></ul></details> |\ 

    | Name| Name of the cardholder using the card instrument.| string|

    | Identification| Identification assigned by an institution to identify
    the card instrument used in the transaction. This identification is known by
    the account owner, and may be masked.| string|


    \ <a name=OBTransaction6></a>\ 

    ## OBTransaction6\ 

    Provides further details on an entry in the report.\ 


    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId| A unique and immutable identifier used to identify the
    account resource. This identifier has no meaning to the account owner.|
    string|

    | TransactionId| Unique identifier for the transaction within an
    servicing institution. This identifier is both unique and immutable.|
    string|

    | TransactionReference| Unique reference for the transaction. This
    reference is optionally populated, and may as an example be the FPID in the
    Faster Payments context.| string|

    | StatementReference| Unique reference for the statement. This reference
    may be optionally populated if available.| array|

    | CreditDebitIndicator | Entity |
    <details><summary>[OBCreditDebitCode](#OBCreditDebitCode)</summary><ul></ul\
    ></details> |\ 

    | Status | Entity |
    <details><summary>[OBEntryStatus1Code](#OBEntryStatus1Code)</summary><ul></\
    ul></details> |\ 

    | TransactionMutability | Entity |
    <details><summary>[OBTransactionMutability1Code](#OBTransactionMutability1C\
    ode)</summary><ul></ul></details> |\ 

    | BookingDateTime| Date and time when a transaction entry is posted to
    an account on the account servicer's books. Usage: Booking date is the
    expected booking date, unless the status is booked, in which case it is the
    actual booking date.All dates in the JSON payloads are represented in ISO
    8601 date-time format. All date-time fields in responses must include the
    timezone.An example is below: 2017-04-05T10:43:07+00:00| string|

    | ValueDateTime| Date and time at which assets become available to the
    account owner in case of a credit entry, or cease to be available to the
    account owner in case of a debit transaction entry. Usage: If transaction
    entry status is pending and value date is present, then the value date
    refers to an expected/requested value date. For transaction entries subject
    to availability/float and for which availability information is provided,
    the value date must not be used.In this case the availability component
    identifies the number of availability days.All dates in the JSON payloads
    are represented in ISO 8601 date-time format. All date-time fields in
    responses must include the timezone.An example is below:
    2017-04-05T10:43:07+00:00| string|

    | TransactionInformation| Further details of the transaction. This is
    the transaction narrative, which is unstructured text.| string|

    | AddressLine| Information that locates and identifies a specific
    address for a transaction entry, that is presented in free format text|
    string|

    | Amount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoric\
    CurrencyAndAmount)</summary><ul><li>Amount [string]</li> <li>Currency
    [string]</li> </ul></details> |\ 

    | ChargeAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoric\
    CurrencyAndAmount)</summary><ul><li>Amount [string]</li> <li>Currency
    [string]</li> </ul></details> |\ 

    | CurrencyExchange | Entity |
    <details><summary>[OBCurrencyExchange5](#OBCurrencyExchange5)</summary><ul>\
    <li>SourceCurrency [string]</li> <li>TargetCurrency [string]</li>
    <li>UnitCurrency [string]</li> <li>ExchangeRate [number]</li>
    <li>ContractIdentification [string]</li> <li>QuotationDate [string]</li>
    <li><details><summary>InstructedAmount
    [[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount\
    )]</summary><ul><li>Amount [string]</li> <li>Currency [string]</li>
    </ul></details></li></ul></details> |\ 

    | BankTransactionCode | Entity |
    <details><summary>[OBBankTransactionCodeStructure1](#OBBankTransactionCodeS\
    tructure1)</summary><ul><li>Code [string]</li> <li>SubCode [string]</li>
    </ul></details> |\ 

    | ProprietaryBankTransactionCode | Entity |
    <details><summary>[ProprietaryBankTransactionCodeStructure1](#ProprietaryBa\
    nkTransactionCodeStructure1)</summary><ul><li>Code [string]</li> <li>Issuer
    [string]</li> </ul></details> |\ 

    | Balance | Entity |
    <details><summary>[OBTransactionCashBalance](#OBTransactionCashBalance)</su\
    mmary><ul><li><details><summary>CreditDebitIndicator
    [[OBCreditDebitCode](#OBCreditDebitCode)]</summary><ul></ul></details></li>\
    <li><details><summary>Type
    [[OBBalanceType1Code](#OBBalanceType1Code)]</summary><ul></ul></details></l\
    i><li><details><summary>Amount
    [[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount\
    )]</summary><ul><li>Amount [string]</li> <li>Currency [string]</li>
    </ul></details></li></ul></details> |\ 

    | MerchantDetails | Entity |
    <details><summary>[OBMerchantDetails1](#OBMerchantDetails1)</summary><ul><l\
    i>MerchantName [string]</li> <li>MerchantCategoryCode [string]</li>
    </ul></details> |\ 

    | CreditorAgent | Entity |
    <details><summary>[OBBranchAndFinancialInstitutionIdentification6](#OBBranc\
    hAndFinancialInstitutionIdentification6)</summary><ul><li>SchemeName
    [string]</li> <li>Identification [string]</li> <li>Name [string]</li>
    <li><details><summary>PostalAddress
    [[OBPostalAddress6](#OBPostalAddress6)]</summary><ul><li><details><summary>\
    AddressType
    [[OBAddressTypeCode](#OBAddressTypeCode)]</summary><ul></ul></details></li>\
    <li>Department [string]</li> <li>SubDepartment [string]</li> <li>StreetName
    [string]</li> <li>BuildingNumber [string]</li> <li>PostCode [string]</li>
    <li>TownName [string]</li> <li>CountrySubDivision [string]</li> <li>Country
    [string]</li> <li>AddressLine [array]</li>
    </ul></details></li></ul></details> |\ 

    | CreditorAccount | Entity |
    <details><summary>[OBCashAccount6](#OBCashAccount6)</summary><ul><li>Scheme\
    Name [string]</li> <li>Identification [string]</li> <li>Name [string]</li>
    <li>SecondaryIdentification [string]</li> </ul></details> |\ 

    | DebtorAgent | Entity |
    <details><summary>[OBBranchAndFinancialInstitutionIdentification6](#OBBranc\
    hAndFinancialInstitutionIdentification6)</summary><ul><li>SchemeName
    [string]</li> <li>Identification [string]</li> <li>Name [string]</li>
    <li><details><summary>PostalAddress
    [[OBPostalAddress6](#OBPostalAddress6)]</summary><ul><li><details><summary>\
    AddressType
    [[OBAddressTypeCode](#OBAddressTypeCode)]</summary><ul></ul></details></li>\
    <li>Department [string]</li> <li>SubDepartment [string]</li> <li>StreetName
    [string]</li> <li>BuildingNumber [string]</li> <li>PostCode [string]</li>
    <li>TownName [string]</li> <li>CountrySubDivision [string]</li> <li>Country
    [string]</li> <li>AddressLine [array]</li>
    </ul></details></li></ul></details> |\ 

    | DebtorAccount | Entity |
    <details><summary>[OBCashAccount6](#OBCashAccount6)</summary><ul><li>Scheme\
    Name [string]</li> <li>Identification [string]</li> <li>Name [string]</li>
    <li>SecondaryIdentification [string]</li> </ul></details> |\ 

    | CardInstrument | Entity |
    <details><summary>[OBTransactionCardInstrument1](#OBTransactionCardInstrume\
    nt1)</summary><ul><li><details><summary>CardSchemeName
    [[OBExternalCardSchemeType1Code](#OBExternalCardSchemeType1Code)]</summary>\
    <ul></ul></details></li><li><details><summary>AuthorisationType
    [[OBExternalCardAuthorisationType1Code](#OBExternalCardAuthorisationType1Co\
    de)]</summary><ul></ul></details></li><li>Name [string]</li>
    <li>Identification [string]</li> </ul></details> |\ 

    | SupplementaryData | Entity |
    <details><summary>[OBSupplementaryData1](#OBSupplementaryData1)</summary><u\
    l></ul></details> |\ 


    \ <a name=OBReadDataTransaction6></a>\ 

    ## OBReadDataTransaction6\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Transaction| Provides further details on an entry in the report.|
    array[[OBTransaction6](#OBTransaction6)]|


    \ <a name=OBReadTransaction6></a>\ 

    ## OBReadTransaction6\ 



    ### Attributes\ 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadDataTransaction6](#OBReadDataTransaction6)</summar\
    y><ul><li>Transaction [array[[OBTransaction6](#OBTransaction6)]]</li>
    </ul></details> |\ 

    | Links | Entity |
    <details><summary>[Links](#Links)</summary><ul><li>Self [string]</li>
    <li>First [string]</li> <li>Prev [string]</li> <li>Next [string]</li>
    <li>Last [string]</li> </ul></details> |\ 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li>FirstAvailableDateTime [string]</li> <li>LastAvailableDateTime
    [string]</li> </ul></details> |\ \n"
  title: Account and Transaction API Specification - UK
  version: v3.1.5
  x-apisguru-categories:
    - financial
  x-origin:
    - format: openapi
      url: https://developer.nbg.gr/api.gateway/publicportal/sites/default/files/2020-09/NBGSwagger-account-and_transaction_api_specification_uk-v3.1.5-swagger%20%284%29.yaml
      version: "3.0"
  x-providerName: nbg.gr
security:
  - Client-Id: []
paths:
  /account-access-consents:
    post:
      description: Create Account Access Consents
      parameters:
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OBReadConsent1"
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/OBReadConsent1"
        description: Default
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadConsentResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadConsentResponse1"
          description: Account Access Consents Created
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Create Account Access Consents
      tags:
        - AccountAccess
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"Data\":{\"Permissions\":[\"ReadAccountsBasic\"],\"ExpirationDateTime\":\"<ADD STRING VALUE>\",\"TransactionFromDateTime\":\"<ADD STRING VALUE>\",\"TransactionToDateTime\":\"<ADD STRING VALUE>\"},\"Risk\":{}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"Data\":{\"Permissions\":[\"ReadAccountsBasic\"],\"ExpirationDateTime\":\"<ADD STRING VALUE>\",\"TransactionFromDateTime\":\"<ADD STRING VALUE>\",\"TransactionToDateTime\":\"<ADD STRING VALUE>\"},\"Risk\":{}}", ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"strings"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents"

            	payload := strings.NewReader("{\"Data\":{\"Permissions\":[\"ReadAccountsBasic\"],\"ExpirationDateTime\":\"<ADD STRING VALUE>\",\"TransactionFromDateTime\":\"<ADD STRING VALUE>\",\"TransactionToDateTime\":\"<ADD STRING VALUE>\"},\"Risk\":{}}")

            	req, _ := http.NewRequest("POST", url, payload)

            	req.Header.Add("accept", "application/json")
            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType, "{\"Data\":{\"Permissions\":[\"ReadAccountsBasic\"],\"ExpirationDateTime\":\"<ADD STRING VALUE>\",\"TransactionFromDateTime\":\"<ADD STRING VALUE>\",\"TransactionToDateTime\":\"<ADD STRING VALUE>\"},\"Risk\":{}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { Data:
                  { Permissions: [ 'ReadAccountsBasic' ],
                    ExpirationDateTime: '<ADD STRING VALUE>',
                    TransactionFromDateTime: '<ADD STRING VALUE>',
                    TransactionToDateTime: '<ADD STRING VALUE>' },
                 Risk: {} },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"Data\":{\"Permissions\":[\"ReadAccountsBasic\"],\"ExpirationDateTime\":\"<ADD STRING VALUE>\",\"TransactionFromDateTime\":\"<ADD STRING VALUE>\",\"TransactionToDateTime\":\"<ADD STRING VALUE>\"},\"Risk\":{}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"Data\":{\"Permissions\":[\"ReadAccountsBasic\"],\"ExpirationDateTime\":\"<ADD STRING VALUE>\",\"TransactionFromDateTime\":\"<ADD STRING VALUE>\",\"TransactionToDateTime\":\"<ADD STRING VALUE>\"},\"Risk\":{}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents", payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"Data\":{\"Permissions\":[\"ReadAccountsBasic\"],\"ExpirationDateTime\":\"<ADD STRING VALUE>\",\"TransactionFromDateTime\":\"<ADD STRING VALUE>\",\"TransactionToDateTime\":\"<ADD STRING VALUE>\"},\"Risk\":{}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents \
              --header 'accept: application/json' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --data '{"Data":{"Permissions":["ReadAccountsBasic"],"ExpirationDateTime":"<ADD STRING VALUE>","TransactionFromDateTime":"<ADD STRING VALUE>","TransactionToDateTime":"<ADD STRING VALUE>"},"Risk":{}}'
  "/account-access-consents/{consentId}":
    delete:
      description: Delete Account Access Consents by Consent ID
      parameters:
        - description: ConsentId
          in: path
          name: consentId
          required: true
          schema:
            description: ConsentId
            nullable: true
            type: string
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Account Access Consents Deleted
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Delete Account Access Consents
      tags:
        - AccountAccess
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents/%7BconsentId%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents/%7BconsentId%7D");

            var request = new RestRequest(Method.DELETE);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents/%7BconsentId%7D"

            	req, _ := http.NewRequest("DELETE", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents/%7BconsentId%7D")
              .delete(null)
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'DELETE',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents/%7BconsentId%7D',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents/%7BconsentId%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("DELETE", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents/%7BconsentId%7D", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents/%7BconsentId%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Delete.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request DELETE \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents/%7BconsentId%7D \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
    get:
      description: Get Account Access Consents by Consent ID
      parameters:
        - description: ConsentId
          in: path
          name: consentId
          required: true
          schema:
            description: ConsentId
            nullable: true
            type: string
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadConsentResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadConsentResponse1"
          description: Account Access Consents Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Account Access Consents
      tags:
        - AccountAccess
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents/%7BconsentId%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents/%7BconsentId%7D");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents/%7BconsentId%7D"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents/%7BconsentId%7D")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents/%7BconsentId%7D',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents/%7BconsentId%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents/%7BconsentId%7D", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents/%7BconsentId%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/account-access-consents/%7BconsentId%7D \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  /accounts:
    get:
      description: Get Accounts
      parameters:
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadAccount5"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadAccount5"
          description: Accounts Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Accounts
      tags:
        - Accounts
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  "/accounts/{accountId}":
    get:
      description: Get Accounts by Account ID
      parameters:
        - description: AccountId
          in: path
          name: accountId
          required: true
          schema:
            description: AccountId
            nullable: true
            type: string
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadAccount5"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadAccount5"
          description: Accounts Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Accounts
      tags:
        - Accounts
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  "/accounts/{accountId}/balances":
    get:
      description: Get Balances by Account ID
      parameters:
        - description: AccountId
          in: path
          name: accountId
          required: true
          schema:
            description: AccountId
            nullable: true
            type: string
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadBalance1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadBalance1"
          description: Balances Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Balances
      tags:
        - Balances
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/balances");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/balances");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/balances"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/balances")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/balances',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/balances",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/balances", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/balances")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/balances \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  "/accounts/{accountId}/beneficiaries":
    get:
      description: Get Beneficiaries by Account ID
      parameters:
        - description: AccountId
          in: path
          name: accountId
          required: true
          schema:
            description: AccountId
            nullable: true
            type: string
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadBeneficiary5"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadBeneficiary5"
          description: Beneficiaries Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Beneficiaries
      tags:
        - Beneficiaries
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/beneficiaries");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/beneficiaries");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/beneficiaries"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/beneficiaries")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/beneficiaries',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/beneficiaries",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/beneficiaries", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/beneficiaries")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/beneficiaries \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  "/accounts/{accountId}/direct-debits":
    get:
      description: Get Direct Debits by Account ID
      parameters:
        - description: AccountId
          in: path
          name: accountId
          required: true
          schema:
            description: AccountId
            nullable: true
            type: string
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadDirectDebit2"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadDirectDebit2"
          description: Direct Debits Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Direct Debits
      tags:
        - DirectDebits
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/direct-debits");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/direct-debits");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/direct-debits"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/direct-debits")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/direct-debits',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/direct-debits",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/direct-debits", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/direct-debits")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/direct-debits \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  "/accounts/{accountId}/offers":
    get:
      description: Get Offers by Account ID
      parameters:
        - description: AccountId
          in: path
          name: accountId
          required: true
          schema:
            description: AccountId
            nullable: true
            type: string
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadOffer1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadOffer1"
          description: Offers Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Offers
      tags:
        - Offers
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/offers");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/offers");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/offers"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/offers")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/offers',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/offers",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/offers", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/offers")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/offers \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  "/accounts/{accountId}/parties":
    get:
      description: Get Parties by Account ID
      parameters:
        - description: AccountId
          in: path
          name: accountId
          required: true
          schema:
            description: AccountId
            nullable: true
            type: string
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadParty3"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadParty3"
          description: Party Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Parties
      tags:
        - Parties
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/parties");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/parties");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/parties"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/parties")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/parties',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/parties",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/parties", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/parties")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/parties \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  "/accounts/{accountId}/party":
    get:
      description: Get Party by Account ID
      parameters:
        - description: AccountId
          in: path
          name: accountId
          required: true
          schema:
            description: AccountId
            nullable: true
            type: string
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadParty2"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadParty2"
          description: Party Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Party
      tags:
        - Parties
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/party");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/party");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/party"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/party")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/party',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/party",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/party", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/party")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/party \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  "/accounts/{accountId}/product":
    get:
      description: Get Products by Account ID
      parameters:
        - description: AccountId
          in: path
          name: accountId
          required: true
          schema:
            description: AccountId
            nullable: true
            type: string
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadProduct2"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadProduct2"
          description: Products Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Products
      tags:
        - Products
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/product");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/product");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/product"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/product")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/product',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/product",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/product", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/product")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/product \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  "/accounts/{accountId}/scheduled-payments":
    get:
      description: Get Scheduled Payments by Account ID
      parameters:
        - description: AccountId
          in: path
          name: accountId
          required: true
          schema:
            description: AccountId
            nullable: true
            type: string
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadScheduledPayment3"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadScheduledPayment3"
          description: Scheduled Payments Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Scheduled Payments
      tags:
        - ScheduledPayments
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/scheduled-payments");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/scheduled-payments");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/scheduled-payments"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/scheduled-payments")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/scheduled-payments',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/scheduled-payments",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/scheduled-payments", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/scheduled-payments")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/scheduled-payments \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  "/accounts/{accountId}/standing-orders":
    get:
      description: Get Standing Orders by Account ID
      parameters:
        - description: AccountId
          in: path
          name: accountId
          required: true
          schema:
            description: AccountId
            nullable: true
            type: string
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadStandingOrder6"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadStandingOrder6"
          description: Standing Orders Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Standing Orders
      tags:
        - StandingOrders
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/standing-orders");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/standing-orders");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/standing-orders"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/standing-orders")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/standing-orders',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/standing-orders",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/standing-orders", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/standing-orders")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/standing-orders \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  "/accounts/{accountId}/statements":
    get:
      description: Get Statements by Account ID
      parameters:
        - description: AccountId
          in: path
          name: accountId
          required: true
          schema:
            description: AccountId
            nullable: true
            type: string
        - description: The UTC ISO 8601 Date Time to filter statements FROM NB Time
            component is optional - set to 00:00:00 for just Date. If the Date
            Time contains a timezone, the ASPSP must ignore the timezone
            component.
          in: query
          name: fromStatementDateTime
          schema:
            description: The UTC ISO 8601 Date Time to filter statements FROM NB Time
              component is optional - set to 00:00:00 for just Date. If the Date
              Time contains a timezone, the ASPSP must ignore the timezone
              component.
            format: date-time
            nullable: true
            type: string
        - description: The UTC ISO 8601 Date Time to filter statements TO NB Time
            component is optional - set to 00:00:00 for just Date. If the Date
            Time contains a timezone, the ASPSP must ignore the timezone
            component.
          in: query
          name: toStatementDateTime
          schema:
            description: The UTC ISO 8601 Date Time to filter statements TO NB Time
              component is optional - set to 00:00:00 for just Date. If the Date
              Time contains a timezone, the ASPSP must ignore the timezone
              component.
            format: date-time
            nullable: true
            type: string
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadStatement2"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadStatement2"
          description: Statements Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Statements
      tags:
        - Statements
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements',
              qs:
               { fromStatementDateTime: 'SOME_STRING_VALUE',
                 toStatementDateTime: 'SOME_STRING_VALUE' },
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url 'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  "/accounts/{accountId}/statements/{statementId}":
    get:
      description: Get Statements by Account ID and Statement ID
      parameters:
        - description: AccountId
          in: path
          name: accountId
          required: true
          schema:
            description: AccountId
            nullable: true
            type: string
        - description: StatementId
          in: path
          name: statementId
          required: true
          schema:
            description: StatementId
            nullable: true
            type: string
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadStatement2"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadStatement2"
          description: Statements Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Statements
      tags:
        - Statements
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  "/accounts/{accountId}/statements/{statementId}/file":
    get:
      description: Get Statements by Account ID and Statement ID (File)
      parameters:
        - description: AccountId
          in: path
          name: accountId
          required: true
          schema:
            description: AccountId
            nullable: true
            type: string
        - description: StatementId
          in: path
          name: statementId
          required: true
          schema:
            description: StatementId
            nullable: true
            type: string
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: Statements Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Statements
      tags:
        - Statements
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/file");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/pdf");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/file");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/pdf");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/file"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/pdf")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/file")
              .get()
              .addHeader("content-type", "application/pdf")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/file',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/pdf' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/file",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/pdf",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/pdf",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/file", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/file")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/pdf'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/file \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/pdf' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  "/accounts/{accountId}/statements/{statementId}/transactions":
    get:
      description: Get Transactions by Account ID and Statement ID
      parameters:
        - description: AccountId
          in: path
          name: accountId
          required: true
          schema:
            description: AccountId
            nullable: true
            type: string
        - description: StatementId
          in: path
          name: statementId
          required: true
          schema:
            description: StatementId
            nullable: true
            type: string
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadTransaction6"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadTransaction6"
          description: Transactions Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Transactions
      tags:
        - Transactions
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/transactions");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/transactions");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/transactions"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/transactions")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/transactions',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/transactions",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/transactions", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/transactions")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/statements/%7BstatementId%7D/transactions \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  "/accounts/{accountId}/transactions":
    get:
      description: Get Transactions by Account ID
      parameters:
        - description: AccountId
          in: path
          name: accountId
          required: true
          schema:
            description: AccountId
            nullable: true
            type: string
        - description: The UTC ISO 8601 Date Time to filter transactions FROM NB Time
            component is optional - set to 00:00:00 for just Date. If the Date
            Time contains a timezone, the ASPSP must ignore the timezone
            component.
          in: query
          name: fromBookingDateTime
          schema:
            description: The UTC ISO 8601 Date Time to filter transactions FROM NB Time
              component is optional - set to 00:00:00 for just Date. If the Date
              Time contains a timezone, the ASPSP must ignore the timezone
              component.
            format: date-time
            nullable: true
            type: string
        - description: The UTC ISO 8601 Date Time to filter transactions TO NB Time
            component is optional - set to 00:00:00 for just Date. If the Date
            Time contains a timezone, the ASPSP must ignore the timezone
            component.
          in: query
          name: toBookingDateTime
          schema:
            description: The UTC ISO 8601 Date Time to filter transactions TO NB Time
              component is optional - set to 00:00:00 for just Date. If the Date
              Time contains a timezone, the ASPSP must ignore the timezone
              component.
            format: date-time
            nullable: true
            type: string
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadTransaction6"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadTransaction6"
          description: Transactions Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Transactions
      tags:
        - Transactions
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/transactions',
              qs:
               { fromBookingDateTime: 'SOME_STRING_VALUE',
                 toBookingDateTime: 'SOME_STRING_VALUE' },
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url 'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/accounts/%7BaccountId%7D/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  /balances:
    get:
      description: Get Balances
      parameters:
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadBalance1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadBalance1"
          description: Balances Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Balances
      tags:
        - Balances
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/balances");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/balances");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/balances"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/balances")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/balances',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/balances",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/balances", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/balances")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/balances \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  /beneficiaries:
    get:
      description: Get Beneficiaries
      parameters:
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadBeneficiary5"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadBeneficiary5"
          description: Beneficiaries Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Beneficiaries
      tags:
        - Beneficiaries
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/beneficiaries");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/beneficiaries");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/beneficiaries"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/beneficiaries")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/beneficiaries',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/beneficiaries",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/beneficiaries", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/beneficiaries")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/beneficiaries \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  /direct-debits:
    get:
      description: Get Direct Debits
      parameters:
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadDirectDebit2"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadDirectDebit2"
          description: Direct Debits Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Direct Debits
      tags:
        - DirectDebits
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/direct-debits");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/direct-debits");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/direct-debits"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/direct-debits")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/direct-debits',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/direct-debits",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/direct-debits", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/direct-debits")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/direct-debits \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  /offers:
    get:
      description: Get Offers
      parameters:
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadOffer1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadOffer1"
          description: Offers Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Offers
      tags:
        - Offers
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/offers");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/offers");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/offers"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/offers")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/offers',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/offers",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/offers", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/offers")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/offers \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  /party:
    get:
      description: Get Party
      parameters:
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadParty2"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadParty2"
          description: Party Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Party
      tags:
        - Parties
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/party");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/party");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/party"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/party")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/party',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/party",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/party", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/party")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/party \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  /products:
    get:
      description: Get Products
      parameters:
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadProduct2"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadProduct2"
          description: Products Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Products
      tags:
        - Products
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/products");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/products");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/products"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/products")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/products',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/products",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/products", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/products")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/products \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  /sandbox:
    post:
      description: Create Sandbox
      parameters:
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SandboxRequest"
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/SandboxRequest"
        description: SandboxRequest
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sandbox"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/Sandbox"
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "405":
          description: Method Not Allowed
        "406":
          description: Not Acceptable
        "415":
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
      summary: Create Sandbox
      tags:
        - Sandbox
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"sandboxId\":\"<ADD STRING VALUE>\"}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"sandboxId\":\"<ADD STRING VALUE>\"}", ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"strings"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox"

            	payload := strings.NewReader("{\"sandboxId\":\"<ADD STRING VALUE>\"}")

            	req, _ := http.NewRequest("POST", url, payload)

            	req.Header.Add("accept", "application/json")
            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType, "{\"sandboxId\":\"<ADD STRING VALUE>\"}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body: { sandboxId: '<ADD STRING VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"sandboxId\":\"<ADD STRING VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"sandboxId\":\"<ADD STRING VALUE>\"}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox", payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"sandboxId\":\"<ADD STRING VALUE>\"}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox \
              --header 'accept: application/json' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --data '{"sandboxId":"<ADD STRING VALUE>"}'
    put:
      description: Import Sandbox
      parameters:
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Sandbox"
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/Sandbox"
        description: Sandbox
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
        "406":
          description: Not Acceptable
        "415":
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
      summary: Import Sandbox
      tags:
        - Sandbox
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PUT");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"sandboxId\":\"<ADD STRING VALUE>\",\"users\":[{\"userId\":\"<ADD STRING VALUE>\",\"retryCacheEntries\":[{\"cacheKey\":\"<ADD STRING VALUE>\",\"count\":0,\"expirationTimestamp\":\"<ADD STRING VALUE>\"}],\"accounts\":[{\"info\":{\"currency\":\"<ADD STRING VALUE>\",\"iban\":\"<ADD STRING VALUE>\",\"accountType\":\"<ADD STRING VALUE>\",\"accountSubType\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"alias\":\"<ADD STRING VALUE>\",\"openingDate\":\"<ADD STRING VALUE>\",\"availableBalance\":0,\"ledgerBalance\":0},\"party\":{\"id\":\"<ADD STRING VALUE>\",\"name\":\"<ADD STRING VALUE>\"},\"beneficiaries\":[{\"name\":\"<ADD STRING VALUE>\"}],\"standingOrders\":[{\"description\":\"<ADD STRING VALUE>\",\"frequency\":\"<ADD STRING VALUE>\",\"firstPaymentDate\":\"<ADD STRING VALUE>\",\"nextPaymentDate\":\"<ADD STRING VALUE>\",\"finalPaymentDate\":\"<ADD STRING VALUE>\",\"lastPaymentDate\":\"<ADD STRING VALUE>\",\"status\":\"<ADD STRING VALUE>\",\"amount\":0}],\"scheduledPayments\":[{\"description\":\"<ADD STRING VALUE>\",\"executionDate\":\"<ADD STRING VALUE>\",\"amount\":0,\"senderReference\":\"<ADD STRING VALUE>\"}],\"statements\":[{\"number\":\"<ADD STRING VALUE>\",\"year\":0,\"month\":0}],\"transactions\":[{\"amount\":0,\"currency\":\"<ADD STRING VALUE>\",\"creditDebit\":\"<ADD STRING VALUE>\",\"valueDateTime\":\"<ADD STRING VALUE>\",\"bookingDateTime\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"accountingBalance\":0}]}],\"cards\":[{\"info\":{\"number\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"holderName\":\"<ADD STRING VALUE>\",\"expiration\":\"<ADD STRING VALUE>\",\"type\":\"<ADD STRING VALUE>\",\"subType\":\"<ADD STRING VALUE>\",\"availableBalance\":0,\"ledgerBalance\":0},\"party\":{\"id\":\"<ADD STRING VALUE>\",\"name\":\"<ADD STRING VALUE>\"},\"statements\":[{\"number\":\"<ADD STRING VALUE>\",\"year\":0,\"month\":0}],\"transactions\":[{\"amount\":0,\"currency\":\"<ADD STRING VALUE>\",\"creditDebit\":\"<ADD STRING VALUE>\",\"valueDateTime\":\"<ADD STRING VALUE>\",\"bookingDateTime\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"accountingBalance\":0}]}]}]}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox");

            var request = new RestRequest(Method.PUT);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"sandboxId\":\"<ADD STRING VALUE>\",\"users\":[{\"userId\":\"<ADD STRING VALUE>\",\"retryCacheEntries\":[{\"cacheKey\":\"<ADD STRING VALUE>\",\"count\":0,\"expirationTimestamp\":\"<ADD STRING VALUE>\"}],\"accounts\":[{\"info\":{\"currency\":\"<ADD STRING VALUE>\",\"iban\":\"<ADD STRING VALUE>\",\"accountType\":\"<ADD STRING VALUE>\",\"accountSubType\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"alias\":\"<ADD STRING VALUE>\",\"openingDate\":\"<ADD STRING VALUE>\",\"availableBalance\":0,\"ledgerBalance\":0},\"party\":{\"id\":\"<ADD STRING VALUE>\",\"name\":\"<ADD STRING VALUE>\"},\"beneficiaries\":[{\"name\":\"<ADD STRING VALUE>\"}],\"standingOrders\":[{\"description\":\"<ADD STRING VALUE>\",\"frequency\":\"<ADD STRING VALUE>\",\"firstPaymentDate\":\"<ADD STRING VALUE>\",\"nextPaymentDate\":\"<ADD STRING VALUE>\",\"finalPaymentDate\":\"<ADD STRING VALUE>\",\"lastPaymentDate\":\"<ADD STRING VALUE>\",\"status\":\"<ADD STRING VALUE>\",\"amount\":0}],\"scheduledPayments\":[{\"description\":\"<ADD STRING VALUE>\",\"executionDate\":\"<ADD STRING VALUE>\",\"amount\":0,\"senderReference\":\"<ADD STRING VALUE>\"}],\"statements\":[{\"number\":\"<ADD STRING VALUE>\",\"year\":0,\"month\":0}],\"transactions\":[{\"amount\":0,\"currency\":\"<ADD STRING VALUE>\",\"creditDebit\":\"<ADD STRING VALUE>\",\"valueDateTime\":\"<ADD STRING VALUE>\",\"bookingDateTime\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"accountingBalance\":0}]}],\"cards\":[{\"info\":{\"number\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"holderName\":\"<ADD STRING VALUE>\",\"expiration\":\"<ADD STRING VALUE>\",\"type\":\"<ADD STRING VALUE>\",\"subType\":\"<ADD STRING VALUE>\",\"availableBalance\":0,\"ledgerBalance\":0},\"party\":{\"id\":\"<ADD STRING VALUE>\",\"name\":\"<ADD STRING VALUE>\"},\"statements\":[{\"number\":\"<ADD STRING VALUE>\",\"year\":0,\"month\":0}],\"transactions\":[{\"amount\":0,\"currency\":\"<ADD STRING VALUE>\",\"creditDebit\":\"<ADD STRING VALUE>\",\"valueDateTime\":\"<ADD STRING VALUE>\",\"bookingDateTime\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"accountingBalance\":0}]}]}]}", ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"strings"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox"

            	payload := strings.NewReader("{\"sandboxId\":\"<ADD STRING VALUE>\",\"users\":[{\"userId\":\"<ADD STRING VALUE>\",\"retryCacheEntries\":[{\"cacheKey\":\"<ADD STRING VALUE>\",\"count\":0,\"expirationTimestamp\":\"<ADD STRING VALUE>\"}],\"accounts\":[{\"info\":{\"currency\":\"<ADD STRING VALUE>\",\"iban\":\"<ADD STRING VALUE>\",\"accountType\":\"<ADD STRING VALUE>\",\"accountSubType\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"alias\":\"<ADD STRING VALUE>\",\"openingDate\":\"<ADD STRING VALUE>\",\"availableBalance\":0,\"ledgerBalance\":0},\"party\":{\"id\":\"<ADD STRING VALUE>\",\"name\":\"<ADD STRING VALUE>\"},\"beneficiaries\":[{\"name\":\"<ADD STRING VALUE>\"}],\"standingOrders\":[{\"description\":\"<ADD STRING VALUE>\",\"frequency\":\"<ADD STRING VALUE>\",\"firstPaymentDate\":\"<ADD STRING VALUE>\",\"nextPaymentDate\":\"<ADD STRING VALUE>\",\"finalPaymentDate\":\"<ADD STRING VALUE>\",\"lastPaymentDate\":\"<ADD STRING VALUE>\",\"status\":\"<ADD STRING VALUE>\",\"amount\":0}],\"scheduledPayments\":[{\"description\":\"<ADD STRING VALUE>\",\"executionDate\":\"<ADD STRING VALUE>\",\"amount\":0,\"senderReference\":\"<ADD STRING VALUE>\"}],\"statements\":[{\"number\":\"<ADD STRING VALUE>\",\"year\":0,\"month\":0}],\"transactions\":[{\"amount\":0,\"currency\":\"<ADD STRING VALUE>\",\"creditDebit\":\"<ADD STRING VALUE>\",\"valueDateTime\":\"<ADD STRING VALUE>\",\"bookingDateTime\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"accountingBalance\":0}]}],\"cards\":[{\"info\":{\"number\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"holderName\":\"<ADD STRING VALUE>\",\"expiration\":\"<ADD STRING VALUE>\",\"type\":\"<ADD STRING VALUE>\",\"subType\":\"<ADD STRING VALUE>\",\"availableBalance\":0,\"ledgerBalance\":0},\"party\":{\"id\":\"<ADD STRING VALUE>\",\"name\":\"<ADD STRING VALUE>\"},\"statements\":[{\"number\":\"<ADD STRING VALUE>\",\"year\":0,\"month\":0}],\"transactions\":[{\"amount\":0,\"currency\":\"<ADD STRING VALUE>\",\"creditDebit\":\"<ADD STRING VALUE>\",\"valueDateTime\":\"<ADD STRING VALUE>\",\"bookingDateTime\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"accountingBalance\":0}]}]}]}")

            	req, _ := http.NewRequest("PUT", url, payload)

            	req.Header.Add("accept", "application/json")
            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType, "{\"sandboxId\":\"<ADD STRING VALUE>\",\"users\":[{\"userId\":\"<ADD STRING VALUE>\",\"retryCacheEntries\":[{\"cacheKey\":\"<ADD STRING VALUE>\",\"count\":0,\"expirationTimestamp\":\"<ADD STRING VALUE>\"}],\"accounts\":[{\"info\":{\"currency\":\"<ADD STRING VALUE>\",\"iban\":\"<ADD STRING VALUE>\",\"accountType\":\"<ADD STRING VALUE>\",\"accountSubType\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"alias\":\"<ADD STRING VALUE>\",\"openingDate\":\"<ADD STRING VALUE>\",\"availableBalance\":0,\"ledgerBalance\":0},\"party\":{\"id\":\"<ADD STRING VALUE>\",\"name\":\"<ADD STRING VALUE>\"},\"beneficiaries\":[{\"name\":\"<ADD STRING VALUE>\"}],\"standingOrders\":[{\"description\":\"<ADD STRING VALUE>\",\"frequency\":\"<ADD STRING VALUE>\",\"firstPaymentDate\":\"<ADD STRING VALUE>\",\"nextPaymentDate\":\"<ADD STRING VALUE>\",\"finalPaymentDate\":\"<ADD STRING VALUE>\",\"lastPaymentDate\":\"<ADD STRING VALUE>\",\"status\":\"<ADD STRING VALUE>\",\"amount\":0}],\"scheduledPayments\":[{\"description\":\"<ADD STRING VALUE>\",\"executionDate\":\"<ADD STRING VALUE>\",\"amount\":0,\"senderReference\":\"<ADD STRING VALUE>\"}],\"statements\":[{\"number\":\"<ADD STRING VALUE>\",\"year\":0,\"month\":0}],\"transactions\":[{\"amount\":0,\"currency\":\"<ADD STRING VALUE>\",\"creditDebit\":\"<ADD STRING VALUE>\",\"valueDateTime\":\"<ADD STRING VALUE>\",\"bookingDateTime\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"accountingBalance\":0}]}],\"cards\":[{\"info\":{\"number\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"holderName\":\"<ADD STRING VALUE>\",\"expiration\":\"<ADD STRING VALUE>\",\"type\":\"<ADD STRING VALUE>\",\"subType\":\"<ADD STRING VALUE>\",\"availableBalance\":0,\"ledgerBalance\":0},\"party\":{\"id\":\"<ADD STRING VALUE>\",\"name\":\"<ADD STRING VALUE>\"},\"statements\":[{\"number\":\"<ADD STRING VALUE>\",\"year\":0,\"month\":0}],\"transactions\":[{\"amount\":0,\"currency\":\"<ADD STRING VALUE>\",\"creditDebit\":\"<ADD STRING VALUE>\",\"valueDateTime\":\"<ADD STRING VALUE>\",\"bookingDateTime\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"accountingBalance\":0}]}]}]}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox")
              .put(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'PUT',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { sandboxId: '<ADD STRING VALUE>',
                 users:
                  [ { userId: '<ADD STRING VALUE>',
                      retryCacheEntries:
                       [ { cacheKey: '<ADD STRING VALUE>',
                           count: 0,
                           expirationTimestamp: '<ADD STRING VALUE>' } ],
                      accounts:
                       [ { info:
                            { currency: '<ADD STRING VALUE>',
                              iban: '<ADD STRING VALUE>',
                              accountType: '<ADD STRING VALUE>',
                              accountSubType: '<ADD STRING VALUE>',
                              description: '<ADD STRING VALUE>',
                              alias: '<ADD STRING VALUE>',
                              openingDate: '<ADD STRING VALUE>',
                              availableBalance: 0,
                              ledgerBalance: 0 },
                           party: { id: '<ADD STRING VALUE>', name: '<ADD STRING VALUE>' },
                           beneficiaries: [ { name: '<ADD STRING VALUE>' } ],
                           standingOrders:
                            [ { description: '<ADD STRING VALUE>',
                                frequency: '<ADD STRING VALUE>',
                                firstPaymentDate: '<ADD STRING VALUE>',
                                nextPaymentDate: '<ADD STRING VALUE>',
                                finalPaymentDate: '<ADD STRING VALUE>',
                                lastPaymentDate: '<ADD STRING VALUE>',
                                status: '<ADD STRING VALUE>',
                                amount: 0 } ],
                           scheduledPayments:
                            [ { description: '<ADD STRING VALUE>',
                                executionDate: '<ADD STRING VALUE>',
                                amount: 0,
                                senderReference: '<ADD STRING VALUE>' } ],
                           statements: [ { number: '<ADD STRING VALUE>', year: 0, month: 0 } ],
                           transactions:
                            [ { amount: 0,
                                currency: '<ADD STRING VALUE>',
                                creditDebit: '<ADD STRING VALUE>',
                                valueDateTime: '<ADD STRING VALUE>',
                                bookingDateTime: '<ADD STRING VALUE>',
                                description: '<ADD STRING VALUE>',
                                accountingBalance: 0 } ] } ],
                      cards:
                       [ { info:
                            { number: '<ADD STRING VALUE>',
                              description: '<ADD STRING VALUE>',
                              holderName: '<ADD STRING VALUE>',
                              expiration: '<ADD STRING VALUE>',
                              type: '<ADD STRING VALUE>',
                              subType: '<ADD STRING VALUE>',
                              availableBalance: 0,
                              ledgerBalance: 0 },
                           party: { id: '<ADD STRING VALUE>', name: '<ADD STRING VALUE>' },
                           statements: [ { number: '<ADD STRING VALUE>', year: 0, month: 0 } ],
                           transactions:
                            [ { amount: 0,
                                currency: '<ADD STRING VALUE>',
                                creditDebit: '<ADD STRING VALUE>',
                                valueDateTime: '<ADD STRING VALUE>',
                                bookingDateTime: '<ADD STRING VALUE>',
                                description: '<ADD STRING VALUE>',
                                accountingBalance: 0 } ] } ] } ] },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PUT",
              CURLOPT_POSTFIELDS => "{\"sandboxId\":\"<ADD STRING VALUE>\",\"users\":[{\"userId\":\"<ADD STRING VALUE>\",\"retryCacheEntries\":[{\"cacheKey\":\"<ADD STRING VALUE>\",\"count\":0,\"expirationTimestamp\":\"<ADD STRING VALUE>\"}],\"accounts\":[{\"info\":{\"currency\":\"<ADD STRING VALUE>\",\"iban\":\"<ADD STRING VALUE>\",\"accountType\":\"<ADD STRING VALUE>\",\"accountSubType\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"alias\":\"<ADD STRING VALUE>\",\"openingDate\":\"<ADD STRING VALUE>\",\"availableBalance\":0,\"ledgerBalance\":0},\"party\":{\"id\":\"<ADD STRING VALUE>\",\"name\":\"<ADD STRING VALUE>\"},\"beneficiaries\":[{\"name\":\"<ADD STRING VALUE>\"}],\"standingOrders\":[{\"description\":\"<ADD STRING VALUE>\",\"frequency\":\"<ADD STRING VALUE>\",\"firstPaymentDate\":\"<ADD STRING VALUE>\",\"nextPaymentDate\":\"<ADD STRING VALUE>\",\"finalPaymentDate\":\"<ADD STRING VALUE>\",\"lastPaymentDate\":\"<ADD STRING VALUE>\",\"status\":\"<ADD STRING VALUE>\",\"amount\":0}],\"scheduledPayments\":[{\"description\":\"<ADD STRING VALUE>\",\"executionDate\":\"<ADD STRING VALUE>\",\"amount\":0,\"senderReference\":\"<ADD STRING VALUE>\"}],\"statements\":[{\"number\":\"<ADD STRING VALUE>\",\"year\":0,\"month\":0}],\"transactions\":[{\"amount\":0,\"currency\":\"<ADD STRING VALUE>\",\"creditDebit\":\"<ADD STRING VALUE>\",\"valueDateTime\":\"<ADD STRING VALUE>\",\"bookingDateTime\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"accountingBalance\":0}]}],\"cards\":[{\"info\":{\"number\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"holderName\":\"<ADD STRING VALUE>\",\"expiration\":\"<ADD STRING VALUE>\",\"type\":\"<ADD STRING VALUE>\",\"subType\":\"<ADD STRING VALUE>\",\"availableBalance\":0,\"ledgerBalance\":0},\"party\":{\"id\":\"<ADD STRING VALUE>\",\"name\":\"<ADD STRING VALUE>\"},\"statements\":[{\"number\":\"<ADD STRING VALUE>\",\"year\":0,\"month\":0}],\"transactions\":[{\"amount\":0,\"currency\":\"<ADD STRING VALUE>\",\"creditDebit\":\"<ADD STRING VALUE>\",\"valueDateTime\":\"<ADD STRING VALUE>\",\"bookingDateTime\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"accountingBalance\":0}]}]}]}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"sandboxId\":\"<ADD STRING VALUE>\",\"users\":[{\"userId\":\"<ADD STRING VALUE>\",\"retryCacheEntries\":[{\"cacheKey\":\"<ADD STRING VALUE>\",\"count\":0,\"expirationTimestamp\":\"<ADD STRING VALUE>\"}],\"accounts\":[{\"info\":{\"currency\":\"<ADD STRING VALUE>\",\"iban\":\"<ADD STRING VALUE>\",\"accountType\":\"<ADD STRING VALUE>\",\"accountSubType\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"alias\":\"<ADD STRING VALUE>\",\"openingDate\":\"<ADD STRING VALUE>\",\"availableBalance\":0,\"ledgerBalance\":0},\"party\":{\"id\":\"<ADD STRING VALUE>\",\"name\":\"<ADD STRING VALUE>\"},\"beneficiaries\":[{\"name\":\"<ADD STRING VALUE>\"}],\"standingOrders\":[{\"description\":\"<ADD STRING VALUE>\",\"frequency\":\"<ADD STRING VALUE>\",\"firstPaymentDate\":\"<ADD STRING VALUE>\",\"nextPaymentDate\":\"<ADD STRING VALUE>\",\"finalPaymentDate\":\"<ADD STRING VALUE>\",\"lastPaymentDate\":\"<ADD STRING VALUE>\",\"status\":\"<ADD STRING VALUE>\",\"amount\":0}],\"scheduledPayments\":[{\"description\":\"<ADD STRING VALUE>\",\"executionDate\":\"<ADD STRING VALUE>\",\"amount\":0,\"senderReference\":\"<ADD STRING VALUE>\"}],\"statements\":[{\"number\":\"<ADD STRING VALUE>\",\"year\":0,\"month\":0}],\"transactions\":[{\"amount\":0,\"currency\":\"<ADD STRING VALUE>\",\"creditDebit\":\"<ADD STRING VALUE>\",\"valueDateTime\":\"<ADD STRING VALUE>\",\"bookingDateTime\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"accountingBalance\":0}]}],\"cards\":[{\"info\":{\"number\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"holderName\":\"<ADD STRING VALUE>\",\"expiration\":\"<ADD STRING VALUE>\",\"type\":\"<ADD STRING VALUE>\",\"subType\":\"<ADD STRING VALUE>\",\"availableBalance\":0,\"ledgerBalance\":0},\"party\":{\"id\":\"<ADD STRING VALUE>\",\"name\":\"<ADD STRING VALUE>\"},\"statements\":[{\"number\":\"<ADD STRING VALUE>\",\"year\":0,\"month\":0}],\"transactions\":[{\"amount\":0,\"currency\":\"<ADD STRING VALUE>\",\"creditDebit\":\"<ADD STRING VALUE>\",\"valueDateTime\":\"<ADD STRING VALUE>\",\"bookingDateTime\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"accountingBalance\":0}]}]}]}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("PUT", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox", payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Put.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"sandboxId\":\"<ADD STRING VALUE>\",\"users\":[{\"userId\":\"<ADD STRING VALUE>\",\"retryCacheEntries\":[{\"cacheKey\":\"<ADD STRING VALUE>\",\"count\":0,\"expirationTimestamp\":\"<ADD STRING VALUE>\"}],\"accounts\":[{\"info\":{\"currency\":\"<ADD STRING VALUE>\",\"iban\":\"<ADD STRING VALUE>\",\"accountType\":\"<ADD STRING VALUE>\",\"accountSubType\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"alias\":\"<ADD STRING VALUE>\",\"openingDate\":\"<ADD STRING VALUE>\",\"availableBalance\":0,\"ledgerBalance\":0},\"party\":{\"id\":\"<ADD STRING VALUE>\",\"name\":\"<ADD STRING VALUE>\"},\"beneficiaries\":[{\"name\":\"<ADD STRING VALUE>\"}],\"standingOrders\":[{\"description\":\"<ADD STRING VALUE>\",\"frequency\":\"<ADD STRING VALUE>\",\"firstPaymentDate\":\"<ADD STRING VALUE>\",\"nextPaymentDate\":\"<ADD STRING VALUE>\",\"finalPaymentDate\":\"<ADD STRING VALUE>\",\"lastPaymentDate\":\"<ADD STRING VALUE>\",\"status\":\"<ADD STRING VALUE>\",\"amount\":0}],\"scheduledPayments\":[{\"description\":\"<ADD STRING VALUE>\",\"executionDate\":\"<ADD STRING VALUE>\",\"amount\":0,\"senderReference\":\"<ADD STRING VALUE>\"}],\"statements\":[{\"number\":\"<ADD STRING VALUE>\",\"year\":0,\"month\":0}],\"transactions\":[{\"amount\":0,\"currency\":\"<ADD STRING VALUE>\",\"creditDebit\":\"<ADD STRING VALUE>\",\"valueDateTime\":\"<ADD STRING VALUE>\",\"bookingDateTime\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"accountingBalance\":0}]}],\"cards\":[{\"info\":{\"number\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"holderName\":\"<ADD STRING VALUE>\",\"expiration\":\"<ADD STRING VALUE>\",\"type\":\"<ADD STRING VALUE>\",\"subType\":\"<ADD STRING VALUE>\",\"availableBalance\":0,\"ledgerBalance\":0},\"party\":{\"id\":\"<ADD STRING VALUE>\",\"name\":\"<ADD STRING VALUE>\"},\"statements\":[{\"number\":\"<ADD STRING VALUE>\",\"year\":0,\"month\":0}],\"transactions\":[{\"amount\":0,\"currency\":\"<ADD STRING VALUE>\",\"creditDebit\":\"<ADD STRING VALUE>\",\"valueDateTime\":\"<ADD STRING VALUE>\",\"bookingDateTime\":\"<ADD STRING VALUE>\",\"description\":\"<ADD STRING VALUE>\",\"accountingBalance\":0}]}]}]}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request PUT \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox \
              --header 'accept: application/json' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --data '{"sandboxId":"<ADD STRING VALUE>","users":[{"userId":"<ADD STRING VALUE>","retryCacheEntries":[{"cacheKey":"<ADD STRING VALUE>","count":0,"expirationTimestamp":"<ADD STRING VALUE>"}],"accounts":[{"info":{"currency":"<ADD STRING VALUE>","iban":"<ADD STRING VALUE>","accountType":"<ADD STRING VALUE>","accountSubType":"<ADD STRING VALUE>","description":"<ADD STRING VALUE>","alias":"<ADD STRING VALUE>","openingDate":"<ADD STRING VALUE>","availableBalance":0,"ledgerBalance":0},"party":{"id":"<ADD STRING VALUE>","name":"<ADD STRING VALUE>"},"beneficiaries":[{"name":"<ADD STRING VALUE>"}],"standingOrders":[{"description":"<ADD STRING VALUE>","frequency":"<ADD STRING VALUE>","firstPaymentDate":"<ADD STRING VALUE>","nextPaymentDate":"<ADD STRING VALUE>","finalPaymentDate":"<ADD STRING VALUE>","lastPaymentDate":"<ADD STRING VALUE>","status":"<ADD STRING VALUE>","amount":0}],"scheduledPayments":[{"description":"<ADD STRING VALUE>","executionDate":"<ADD STRING VALUE>","amount":0,"senderReference":"<ADD STRING VALUE>"}],"statements":[{"number":"<ADD STRING VALUE>","year":0,"month":0}],"transactions":[{"amount":0,"currency":"<ADD STRING VALUE>","creditDebit":"<ADD STRING VALUE>","valueDateTime":"<ADD STRING VALUE>","bookingDateTime":"<ADD STRING VALUE>","description":"<ADD STRING VALUE>","accountingBalance":0}]}],"cards":[{"info":{"number":"<ADD STRING VALUE>","description":"<ADD STRING VALUE>","holderName":"<ADD STRING VALUE>","expiration":"<ADD STRING VALUE>","type":"<ADD STRING VALUE>","subType":"<ADD STRING VALUE>","availableBalance":0,"ledgerBalance":0},"party":{"id":"<ADD STRING VALUE>","name":"<ADD STRING VALUE>"},"statements":[{"number":"<ADD STRING VALUE>","year":0,"month":0}],"transactions":[{"amount":0,"currency":"<ADD STRING VALUE>","creditDebit":"<ADD STRING VALUE>","valueDateTime":"<ADD STRING VALUE>","bookingDateTime":"<ADD STRING VALUE>","description":"<ADD STRING VALUE>","accountingBalance":0}]}]}]}'
  "/sandbox/{sandboxId}":
    delete:
      description: Delete Sandbox
      parameters:
        - description: Sandbox Id
          in: path
          name: sandboxId
          required: true
          schema:
            description: Sandbox Id
            nullable: true
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
        "406":
          description: Not Acceptable
        "415":
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
      summary: Delete Sandbox
      tags:
        - Sandbox
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox/%7BsandboxId%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox/%7BsandboxId%7D");

            var request = new RestRequest(Method.DELETE);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox/%7BsandboxId%7D"

            	req, _ := http.NewRequest("DELETE", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox/%7BsandboxId%7D")
              .delete(null)
              .addHeader("content-type", "application/json")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'DELETE',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox/%7BsandboxId%7D',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox/%7BsandboxId%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("DELETE", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox/%7BsandboxId%7D", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox/%7BsandboxId%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Delete.new(url)

            request["content-type"] = 'application/json'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request DELETE \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox/%7BsandboxId%7D \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json'
    get:
      description: Get Sandbox
      parameters:
        - description: Sandbox Id
          in: path
          name: sandboxId
          required: true
          schema:
            description: Sandbox Id
            nullable: true
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sandbox"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/Sandbox"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
        "406":
          description: Not Acceptable
        "415":
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
      summary: Get Sandbox
      tags:
        - Sandbox
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox/%7BsandboxId%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox/%7BsandboxId%7D");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox/%7BsandboxId%7D"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox/%7BsandboxId%7D")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox/%7BsandboxId%7D',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox/%7BsandboxId%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox/%7BsandboxId%7D", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox/%7BsandboxId%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/sandbox/%7BsandboxId%7D \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json'
  /scheduled-payments:
    get:
      description: Get Scheduled Payments
      parameters:
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadScheduledPayment3"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadScheduledPayment3"
          description: Scheduled Payments Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Scheduled Payments
      tags:
        - ScheduledPayments
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/scheduled-payments");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/scheduled-payments");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/scheduled-payments"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/scheduled-payments")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/scheduled-payments',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/scheduled-payments",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/scheduled-payments", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/scheduled-payments")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/scheduled-payments \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  /standing-orders:
    get:
      description: Get Standing Orders
      parameters:
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadStandingOrder6"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadStandingOrder6"
          description: Standing Orders Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Standing Orders
      tags:
        - StandingOrders
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/standing-orders");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/standing-orders");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/standing-orders"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/standing-orders")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/standing-orders',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/standing-orders",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/standing-orders", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/standing-orders")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/standing-orders \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  /statements:
    get:
      description: Get Statements
      parameters:
        - description: The UTC ISO 8601 Date Time to filter statements FROM NB Time
            component is optional - set to 00:00:00 for just Date. If the Date
            Time contains a timezone, the ASPSP must ignore the timezone
            component.
          in: query
          name: fromStatementDateTime
          schema:
            description: The UTC ISO 8601 Date Time to filter statements FROM NB Time
              component is optional - set to 00:00:00 for just Date. If the Date
              Time contains a timezone, the ASPSP must ignore the timezone
              component.
            format: date-time
            nullable: true
            type: string
        - description: The UTC ISO 8601 Date Time to filter statements TO NB Time
            component is optional - set to 00:00:00 for just Date. If the Date
            Time contains a timezone, the ASPSP must ignore the timezone
            component.
          in: query
          name: toStatementDateTime
          schema:
            description: The UTC ISO 8601 Date Time to filter statements TO NB Time
              component is optional - set to 00:00:00 for just Date. If the Date
              Time contains a timezone, the ASPSP must ignore the timezone
              component.
            format: date-time
            nullable: true
            type: string
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadStatement2"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadStatement2"
          description: Statements Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Statements
      tags:
        - Statements
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/statements',
              qs:
               { fromStatementDateTime: 'SOME_STRING_VALUE',
                 toStatementDateTime: 'SOME_STRING_VALUE' },
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url 'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
  /transactions:
    get:
      description: Get Transactions
      parameters:
        - description: The UTC ISO 8601 Date Time to filter transactions FROM NB Time
            component is optional - set to 00:00:00 for just Date. If the Date
            Time contains a timezone, the ASPSP must ignore the timezone
            component.
          in: query
          name: fromBookingDateTime
          schema:
            description: The UTC ISO 8601 Date Time to filter transactions FROM NB Time
              component is optional - set to 00:00:00 for just Date. If the Date
              Time contains a timezone, the ASPSP must ignore the timezone
              component.
            format: date-time
            nullable: true
            type: string
        - description: The UTC ISO 8601 Date Time to filter transactions TO NB Time
            component is optional - set to 00:00:00 for just Date. If the Date
            Time contains a timezone, the ASPSP must ignore the timezone
            component.
          in: query
          name: toBookingDateTime
          schema:
            description: The UTC ISO 8601 Date Time to filter transactions TO NB Time
              component is optional - set to 00:00:00 for just Date. If the Date
              Time contains a timezone, the ASPSP must ignore the timezone
              component.
            format: date-time
            nullable: true
            type: string
        - description: "The time when the PSU last logged in with the TPP.\r

            All dates in the HTTP headers are represented as RFC
            7231 Full Dates. An example is below:\r

            Sun, 10 Sep 2017 19:43:31 UTC"
          in: header
          name: x-fapi-auth-date
          schema:
            type: string
        - description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          name: x-fapi-customer-ip-address
          schema:
            type: string
        - description: An RFC4122 UID used as a correlation id.
          in: header
          name: x-fapi-interaction-id
          schema:
            type: string
        - description: An Authorisation Token as per https://tools.ietf.org/html/rfc6750
          in: header
          name: Authorization
          required: true
          schema:
            default: "Bearer "
            type: string
        - description: Indicates the user-agent that the PSU is using.
          in: header
          name: x-customer-user-agent
          schema:
            type: string
        - description: The unique id of the sandbox to be used
          in: header
          name: sandbox-id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBReadTransaction6"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBReadTransaction6"
          description: Transactions Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Bad request
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "404":
          description: Not found
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "406":
          description: Not Acceptable
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "429":
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                description: Number in seconds to wait
                format: ""
                type: integer
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/OBErrorResponse1"
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                description: An RFC4122 UID used as a correlation id
                format: ""
                type: string
      summary: Get Transactions
      tags:
        - Transactions
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL, "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id: SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-auth-date: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-auth-date", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: >-
            package main


            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )


            func main() {

            	url := "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("content-type", "application/json")
            	req.Header.Add("x-fapi-auth-date", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
            	req.Header.Add("x-fapi-interaction-id", "SOME_STRING_VALUE")
            	req.Header.Add("authorization", "SOME_STRING_VALUE")
            	req.Header.Add("x-customer-user-agent", "SOME_STRING_VALUE")
            	req.Header.Add("sandbox-id", "SOME_STRING_VALUE")
            	req.Header.Add("client-id", "SOME_APIKEY_VALUE")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-auth-date", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: >
            var request = require("request");


            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/transactions',
              qs:
               { fromBookingDateTime: 'SOME_STRING_VALUE',
                 toBookingDateTime: 'SOME_STRING_VALUE' },
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-auth-date': 'SOME_STRING_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: >-
            <?php


            $curl = curl_init();


            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-auth-date: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE"
              ),
            ));


            $response = curl_exec($curl);

            $err = curl_error($curl);


            curl_close($curl);


            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'x-fapi-auth-date': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET", "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["x-fapi-auth-date"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: >-
            curl --request GET \
              --url 'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.5/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-auth-date: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE'
components:
  schemas:
    ErrorCode:
      description: This is Data Type gives a low level textual error code to help
        categorise an error response. The applicable HTTP response code is also
        given.
      enum:
        - UK.OBIE.Field.Expected
        - UK.OBIE.Field.Invalid
        - UK.OBIE.Field.InvalidDate
        - UK.OBIE.Field.Missing
        - UK.OBIE.Field.Unexpected
        - UK.OBIE.Header.Invalid
        - UK.OBIE.Header.Missing
        - UK.OBIE.Resource.ConsentMismatch
        - UK.OBIE.Resource.InvalidConsentStatus
        - UK.OBIE.Resource.InvalidFormat
        - UK.OBIE.Resource.NotFound
        - UK.OBIE.Rules.AfterCutOffDateTime
        - UK.OBIE.Rules.DuplicateReference
        - UK.OBIE.Signature.Invalid
        - UK.OBIE.Signature.InvalidClaim
        - UK.OBIE.Signature.MissingClaim
        - UK.OBIE.Signature.Malformed
        - UK.OBIE.Signature.Missing
        - UK.OBIE.Signature.Unexpected
        - UK.OBIE.Unsupported.AccountIdentifier
        - UK.OBIE.Unsupported.AccountSecondaryIdentifier
        - UK.OBIE.Unsupported.Currency
        - UK.OBIE.Unsupported.EventType
        - UK.OBIE.Unsupported.Frequency
        - UK.OBIE.Unsupported.LocalInstrument
        - UK.OBIE.Unsupported.Scheme
        - UK.OBIE.Reauthenticate
        - UK.OBIE.Rules.ResourceAlreadyExists
        - UK.OBIE.UnexpectedError
      type: string
    Links:
      additionalProperties: false
      description: Links relevant to the payload
      properties:
        First:
          description: ""
          nullable: true
          type: string
        Last:
          description: ""
          nullable: true
          type: string
        Next:
          description: ""
          nullable: true
          type: string
        Prev:
          description: ""
          nullable: true
          type: string
        Self:
          description: ""
          type: string
      required:
        - Self
      type: object
    Meta:
      additionalProperties: false
      description: Meta Data relevant to the payload
      properties:
        FirstAvailableDateTime:
          description: "All dates in the JSON payloads are represented in ISO 8601
            date-time format.\r

            All date-time fields in responses must include the
            timezone.An example is below:\r

            2017-04-05T10:43:07+00:00"
          nullable: true
          type: string
        LastAvailableDateTime:
          description: "All dates in the JSON payloads are represented in ISO 8601
            date-time format.\r

            All date-time fields in responses must include the
            timezone.An example is below:\r

            2017-04-05T10:43:07+00:00"
          nullable: true
          type: string
        TotalPages:
          description: ""
          format: int32
          nullable: true
          type: integer
      type: object
    OBAccount6:
      additionalProperties: false
      description: Unambiguous identification of the account to which credit and debit
        entries are made.
      properties:
        Account:
          description: Provides the details to identify an account.
          items:
            $ref: "#/components/schemas/OBCashAccount5"
          nullable: true
          type: array
        AccountId:
          description: A unique and immutable identifier used to identify the account
            resource. This identifier has no meaning to the account owner.
          maxLength: 40
          minLength: 1
          type: string
        AccountSubType:
          $ref: "#/components/schemas/OBExternalAccountSubType1Code"
        AccountType:
          $ref: "#/components/schemas/OBExternalAccountType1Code"
        Currency:
          description: "Identification of the currency in which the account is
            held.  Usage: Currency should only be used in case one and the same
            account number covers several currencies and the initiating party
            needs to identify which currency needs to be used for settlement on
            the account."
          pattern: ^[A-Z]{3,3}$
          type: string
        Description:
          description: Specifies the description of the account type.
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
        MaturityDate:
          description: "Maturity date of the account.All dates in the JSON payloads are
            represented in ISO 8601 date-time format.  All date-time fields in
            responses must include the timezone. An example is below:
            2017-04-05T10:43:07+00:00"
          format: date-time
          nullable: true
          type: string
        Nickname:
          description: The nickname of the account, assigned by the account owner in order
            to provide an additional means of identification of the account.
          maxLength: 70
          minLength: 1
          nullable: true
          type: string
        OpeningDate:
          description: "Date on which the account and related basic services are
            effectively operational for the account owner.All dates in the JSON
            payloads are represented in ISO 8601 date-time format.  All
            date-time fields in responses must include the timezone. An example
            is below: 2017-04-05T10:43:07+00:00"
          format: date-time
          nullable: true
          type: string
        Servicer:
          $ref: "#/components/schemas/OBBranchAndFinancialInstitutionIdentification5"
        Status:
          $ref: "#/components/schemas/OBAccountStatus1Code"
        StatusUpdateDateTime:
          description: "Date and time at which the resource status was updated.All dates
            in the JSON payloads are represented in ISO 8601 date-time
            format.  All date-time fields in responses must include the
            timezone. An example is below: 2017-04-05T10:43:07+00:00"
          format: date-time
          nullable: true
          type: string
      required:
        - AccountId
        - AccountSubType
        - AccountType
        - Currency
      type: object
    OBAccountStatus1Code:
      description: ""
      enum:
        - Deleted
        - Disabled
        - Enabled
        - Pending
        - ProForma
      type: string
    OBActiveOrHistoricCurrencyAndAmount:
      additionalProperties: false
      description: ""
      properties:
        Amount:
          description: A number of monetary units specified in an active currency where
            the unit of currency is explicit and compliant with ISO 4217.
          pattern: ^\d{1,13}$|^\d{1,13}[\.,]\d{1,5}$
          type: string
        Currency:
          description: A code allocated to a currency by a Maintenance Agency under an
            international identification scheme, as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds".
          pattern: ^[A-Z]{3,3}$
          type: string
      required:
        - Amount
        - Currency
      type: object
    OBAddressTypeCode:
      description: Identifies the nature of the postal address.
      enum:
        - Business
        - Correspondence
        - DeliveryTo
        - MailTo
        - POBox
        - Postal
        - Residential
        - Statement
      type: string
    OBBCAData1:
      additionalProperties: false
      description: ""
      properties:
        CreditInterest:
          $ref: "#/components/schemas/OBCreditInterest1"
        OtherFeesCharges:
          description: Contains details of fees and charges which are not associated with
            either Overdraft or features/benefits
          items:
            $ref: "#/components/schemas/OBOtherFeesAndCharges1"
          nullable: true
          type: array
        Overdraft:
          $ref: "#/components/schemas/OBOverdraft1"
        ProductDetails:
          $ref: "#/components/schemas/OBBCAProductDetails1"
      type: object
    OBBCAProductDetails1:
      additionalProperties: false
      description: ""
      properties:
        FeeFreeLength:
          description: The length/duration of the fee free period
          format: float
          nullable: true
          type: number
        FeeFreeLengthPeriod:
          $ref: "#/components/schemas/OBPeriod1Code"
        Notes:
          description: Optional additional notes to supplement the Core product details
          items:
            type: string
          nullable: true
          type: array
        Segment:
          description: "Market segmentation is a marketing term referring to the
            aggregating of prospective buyers into groups, or segments, that
            have common needs and respond similarly to a marketing action.
            Market segmentation enables companies to target different categories
            of consumers who perceive the full value of certain products and
            services differently from one another.  Read more: Market
            Segmentation
            http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfE\
            EalTd  With respect to BCA products, they are segmented in relation
            to different markets that they wish to focus on."
          items:
            $ref: "#/components/schemas/OBBCAProductSegment1Code"
          nullable: true
          type: array
      type: object
    OBBCAProductSegment1Code:
      description: ""
      enum:
        - ClientAccount
        - Standard
        - NonCommercialChaitiesClbSoc
        - NonCommercialPublicAuthGovt
        - Religious
        - SectorSpecific
        - Startup
        - Switcher
      type: string
    OBBalanceType1Code:
      description: ""
      enum:
        - ClosingAvailable
        - ClosingBooked
        - ClosingCleared
        - Expected
        - ForwardAvailable
        - Information
        - InterimAvailable
        - InterimBooked
        - InterimCleared
        - OpeningAvailable
        - OpeningBooked
        - OpeningCleared
        - PreviouslyClosedBooked
      type: string
    OBBankTransactionCodeStructure1:
      additionalProperties: false
      description: Set of elements used to fully identify the type of underlying
        transaction resulting in an entry.
      properties:
        Code:
          description: Specifies the family within a domain.
          maxLength: 4
          minLength: 1
          type: string
        SubCode:
          description: Specifies the sub-product family within a specific family.
          maxLength: 4
          minLength: 1
          type: string
      required:
        - Code
        - SubCode
      type: object
    OBBeneficiary5:
      additionalProperties: false
      description: ""
      properties:
        AccountId:
          description: A unique and immutable identifier used to identify the account
            resource. This identifier has no meaning to the account owner.
          maxLength: 40
          minLength: 1
          nullable: true
          type: string
        BeneficiaryId:
          description: A unique and immutable identifier used to identify the beneficiary
            resource. This identifier has no meaning to the account owner.
          maxLength: 40
          minLength: 1
          nullable: true
          type: string
        BeneficiaryType:
          $ref: "#/components/schemas/OBBeneficiaryType1Code"
        CreditorAccount:
          $ref: "#/components/schemas/OBCashAccount5"
        CreditorAgent:
          $ref: "#/components/schemas/OBBranchAndFinancialInstitutionIdentification6"
        Reference:
          description: "Unique reference, as assigned by the creditor, to unambiguously
            refer to the payment transaction.\r

            Usage: If available, the initiating party should provide
            this reference in the structured remittance information, to enable
            reconciliation by the creditor upon receipt of the amount of
            money.\r

            If the business context requires the use of a creditor
            reference or a payment remit identification, and only one identifier
            can be passed through the end-to-end chain, the creditor's reference
            or payment remittance identification should be quoted in the
            end-to-end transaction identification."
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
        SupplementaryData:
          $ref: "#/components/schemas/OBSupplementaryData1"
      type: object
    OBBeneficiaryType1Code:
      description: Specifies the Beneficiary Type.
      enum:
        - Trusted
        - Ordinary
      type: string
    OBBranchAndFinancialInstitutionIdentification5:
      additionalProperties: false
      description: ""
      properties:
        Identification:
          description: Unique and unambiguous identification of the servicing institution.
          maxLength: 35
          minLength: 1
          type: string
        SchemeName:
          description: Name of the identification scheme, in a coded form as published in
            an external list.
          example: '[ "UK.OBIE.BICFI" ]'
          type: string
      required:
        - Identification
        - SchemeName
      type: object
    OBBranchAndFinancialInstitutionIdentification6:
      additionalProperties: false
      description: ""
      properties:
        Identification:
          description: Unique and unambiguous identification of the servicing institution.
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
        Name:
          description: Name by which an agent is known and which is usually used to
            identify that agent.
          maxLength: 140
          minLength: 1
          nullable: true
          type: string
        PostalAddress:
          $ref: "#/components/schemas/OBPostalAddress6"
        SchemeName:
          description: Name of the identification scheme, in a coded form as published in
            an external list.
          example: '[ "UK.OBIE.BICFI" ]'
          nullable: true
          type: string
      type: object
    OBCashAccount5:
      additionalProperties: false
      description: ""
      properties:
        Identification:
          description: Identification assigned by an institution to identify an account.
            This identification is known by the account owner.
          maxLength: 256
          minLength: 1
          type: string
        Name:
          description: "The account name is the name or names of the account owner(s)
            represented at an account level, as displayed by the ASPSP's online
            channels.\r

            Note, the account name is not the product name or the
            nickname of the account."
          maxLength: 70
          minLength: 1
          nullable: true
          type: string
        SchemeName:
          description: Name of the identification scheme, in a coded form as published in
            an external list.
          example: '[ "UK.OBIE.BBAN", "UK.OBIE.IBAN", "UK.OBIE.PAN", "UK.OBIE.Paym",
            "UK.OBIE.SortCodeAccountNumber" ]'
          type: string
        SecondaryIdentification:
          description: "This is secondary identification of the account, as assigned by
            the account servicing institution.\r

            This can be used by building societies to additionally
            identify accounts with a roll number(in addition to a sort code and
            account number combination)."
          maxLength: 34
          minLength: 1
          nullable: true
          type: string
      required:
        - Identification
        - SchemeName
      type: object
    OBCashAccount6:
      additionalProperties: false
      description: Unambiguous identification of the account of the creditor, in the
        case of a debit transaction.
      properties:
        Identification:
          description: Identification assigned by an institution to identify an account.
            This identification is known by the account owner.
          maxLength: 256
          minLength: 1
          nullable: true
          type: string
        Name:
          description: "The account name is the name or names of the account owner(s)
            represented at an account level, as displayed by the ASPSP's online
            channels.\r

            Note, the account name is not the product name or the
            nickname of the account."
          maxLength: 70
          minLength: 1
          nullable: true
          type: string
        SchemeName:
          description: Name of the identification scheme, in a coded form as published in
            an external list.
          example: '[ "UK.OBIE.BBAN", "UK.OBIE.IBAN", "UK.OBIE.PAN", "UK.OBIE.Paym",
            "UK.OBIE.SortCodeAccountNumber" ]'
          nullable: true
          type: string
        SecondaryIdentification:
          description: "This is secondary identification of the account, as assigned by
            the account servicing institution.\r

            This can be used by building societies to additionally
            identify accounts with a roll number(in addition to a sort code and
            account number combination)."
          maxLength: 34
          minLength: 1
          nullable: true
          type: string
      type: object
    OBCashBalance1:
      additionalProperties: false
      description: Set of elements used to define the balance details.
      properties:
        AccountId:
          description: A unique and immutable identifier used to identify the account
            resource. This identifier has no meaning to the account owner.
          maxLength: 40
          minLength: 1
          type: string
        Amount:
          $ref: "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
        CreditDebitIndicator:
          $ref: "#/components/schemas/OBCreditDebitCode"
        CreditLine:
          description: Set of elements used to provide details on the credit line.
          items:
            $ref: "#/components/schemas/OBCreditLine1"
          nullable: true
          type: array
        DateTime:
          description: "Indicates the date (and time) of the balance.All dates in the JSON
            payloads are represented in ISO 8601 date-time format.  All
            date-time fields in responses must include the timezone. An example
            is below: 2017-04-05T10:43:07+00:00"
          format: date-time
          type: string
        Type:
          $ref: "#/components/schemas/OBBalanceType1Code"
      required:
        - AccountId
        - Amount
        - CreditDebitIndicator
        - DateTime
        - Type
      type: object
    OBCreditDebitCode:
      description: ""
      enum:
        - Credit
        - Debit
      type: string
    OBCreditInterest1:
      additionalProperties: false
      description: Details about the interest that may be payable to the Account holders
      properties:
        TierBandSet:
          description: ""
          items:
            $ref: "#/components/schemas/OBTierBandSet1"
          type: array
      required:
        - TierBandSet
      type: object
    OBCreditLine1:
      additionalProperties: false
      description: ""
      properties:
        Amount:
          $ref: "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
        Included:
          description: "Indicates whether or not the credit line is included in the
            balance of the account.\r

            Usage: If not present, credit line is not included in
            the balance amount of the account."
          type: boolean
        Type:
          $ref: "#/components/schemas/OBExternalLimitType1Code"
      required:
        - Included
      type: object
    OBCurrencyExchange5:
      additionalProperties: false
      description: Set of elements used to provide details on the currency exchange.
      properties:
        ContractIdentification:
          description: Unique identification to unambiguously identify the foreign
            exchange contract.
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
        ExchangeRate:
          description: "Factor used to convert an amount from one currency into another.
            This reflects the price at which one currency was bought with
            another currency. Usage: ExchangeRate expresses the ratio between
            UnitCurrency and QuotedCurrency (ExchangeRate =
            UnitCurrency/QuotedCurrency)."
          format: double
          type: number
        InstructedAmount:
          $ref: "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
        QuotationDate:
          description: "Date and time at which an exchange rate is quoted.All dates in the
            JSON payloads are represented in ISO 8601 date-time format.  All
            date-time fields in responses must include the timezone. An example
            is below: 2017-04-05T10:43:07+00:00"
          format: date-time
          nullable: true
          type: string
        SourceCurrency:
          description: Currency from which an amount is to be converted in a currency
            conversion.
          pattern: ^[A-Z]{3,3}$
          type: string
        TargetCurrency:
          description: Currency into which an amount is to be converted in a currency
            conversion.
          nullable: true
          pattern: ^[A-Z]{3,3}$
          type: string
        UnitCurrency:
          description: Currency in which the rate of exchange is expressed in a currency
            exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.
          nullable: true
          pattern: ^[A-Z]{3,3}$
          type: string
      required:
        - ExchangeRate
        - SourceCurrency
      type: object
    OBDirectDebit2:
      additionalProperties: false
      description: Account to or from which a cash entry is made.
      properties:
        AccountId:
          description: A unique and immutable identifier used to identify the account
            resource. This identifier has no meaning to the account owner.
          maxLength: 40
          minLength: 1
          type: string
        DirectDebitId:
          description: A unique and immutable identifier used to identify the direct debit
            resource. This identifier has no meaning to the account owner.
          maxLength: 40
          minLength: 1
          nullable: true
          type: string
        DirectDebitStatusCode:
          $ref: "#/components/schemas/OBExternalDirectDebitStatus1Code"
        Frequency:
          description: Regularity with which direct debit instructions are to be created
            and processed.
          example: '[ "UK.OBIE.Annual", "UK.OBIE.Daily", "UK.OBIE.Fortnightly",
            "UK.OBIE.HalfYearly", "UK.OBIE.Monthly", "UK.OBIE.NotKnown",
            "UK.OBIE.Quarterly", "UK.OBIE.Weekly" ]'
          nullable: true
          type: string
        MandateIdentification:
          description: Direct Debit reference. For AUDDIS service users provide Core
            Reference. For non AUDDIS service users provide Core reference if
            possible or last used reference.
          maxLength: 35
          minLength: 1
          type: string
        Name:
          description: Name of Service User.
          maxLength: 70
          minLength: 1
          type: string
        PreviousPaymentAmount:
          $ref: "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
        PreviousPaymentDateTime:
          description: "Date of most recent direct debit collection.All dates in the JSON
            payloads are represented in ISO 8601 date-time format.\r

            All date-time fields in responses must include the
            timezone.An example is below:\r

            2017-04-05T10:43:07+00:00"
          format: date-time
          nullable: true
          type: string
      required:
        - AccountId
        - MandateIdentification
        - Name
      type: object
    OBEntryStatus1Code:
      description: ""
      enum:
        - Booked
        - Pending
      type: string
    OBError1:
      additionalProperties: false
      description: ""
      properties:
        ErrorCode:
          $ref: "#/components/schemas/ErrorCode"
        Message:
          description: A description of the error that occurred. e.g., 'A mandatory field
            isn't supplied' or 'RequestedExecutionDateTime must be in
            future'OBIE doesn't standardise this field
          maxLength: 500
          minLength: 1
          type: string
        Path:
          description: Recommended but optional reference to the JSON Path of the field
            with error, e.g., Data.Initiation.InstructedAmount.Currency
          maxLength: 500
          minLength: 1
          nullable: true
          type: string
        Url:
          description: URL to help remediate the problem, or provide more information, or
            to API Reference, or help etc
          nullable: true
          type: string
      required:
        - ErrorCode
        - Message
      type: object
    OBErrorResponse1:
      additionalProperties: false
      description: An array of detail error codes, and messages, and URLs to
        documentation to help remediation.
      properties:
        Code:
          description: High level textual error code, to help categorize the errors.
          maxLength: 40
          minLength: 1
          type: string
        Errors:
          description: Gets or Sets Errors
          items:
            $ref: "#/components/schemas/OBError1"
          type: array
        Id:
          description: A unique reference for the error instance, for audit purposes, in
            case of unknown/unclassified errors.
          maxLength: 40
          minLength: 1
          nullable: true
          type: string
        Message:
          description: Brief Error message, e.g., 'There is something wrong with the
            request parameters provided'
          maxLength: 500
          minLength: 1
          type: string
      required:
        - Code
        - Errors
        - Message
      type: object
    OBExternalAccountSubType1Code:
      description: ""
      enum:
        - ChargeCard
        - CreditCard
        - CurrentAccount
        - EMoney
        - Loan
        - Mortgage
        - PrePaidCard
        - Savings
      type: string
    OBExternalAccountType1Code:
      description: ""
      enum:
        - Business
        - Personal
      type: string
    OBExternalCardAuthorisationType1Code:
      description: The card authorisation type.
      enum:
        - ConsumerDevice
        - Contactless
        - None
        - PIN
      type: string
    OBExternalCardSchemeType1Code:
      description: Name of the card scheme.
      enum:
        - AmericanExpress
        - Diners
        - Discover
        - MasterCard
        - VISA
      type: string
    OBExternalDirectDebitStatus1Code:
      description: ""
      enum:
        - Active
        - Inactive
      type: string
    OBExternalLimitType1Code:
      description: ""
      enum:
        - Available
        - Credit
        - Emergency
        - Pre-Agreed
        - Temporary
      type: string
    OBExternalOfferType1Code:
      description: ""
      enum:
        - BalanceTransfer
        - LimitIncrease
        - MoneyTransfer
        - Other
        - PromotionalRate
      type: string
    OBExternalPartyType1Code:
      description: ""
      enum:
        - Delegate
        - Joint
        - Sole
      type: string
    OBExternalPermissions1Code:
      description: Specifies the Open Banking account access data types. This is a
        list of the data clusters being consented by the PSU, and requested for
        authorisation with the ASPSP.
      enum:
        - ReadAccountsBasic
        - ReadAccountsDetail
        - ReadBalances
        - ReadBeneficiariesBasic
        - ReadBeneficiariesDetail
        - ReadDirectDebits
        - ReadOffers
        - ReadPAN
        - ReadParty
        - ReadPartyPSU
        - ReadProducts
        - ReadScheduledPaymentsBasic
        - ReadScheduledPaymentsDetail
        - ReadStandingOrdersBasic
        - ReadStandingOrdersDetail
        - ReadStatementsBasic
        - ReadStatementsDetail
        - ReadTransactionsBasic
        - ReadTransactionsCredits
        - ReadTransactionsDebits
        - ReadTransactionsDetail
      type: string
    OBExternalProductType1Code:
      description: "Product type : Personal Current Account, Business Current Account"
      enum:
        - BusinessCurrentAccount
        - CommercialCreditCard
        - Other
        - PersonalCurrentAccount
        - SMELoan
      type: string
    OBExternalRequestStatus1Code:
      description: Specifies the status of consent resource in code form.
      enum:
        - Authorised
        - AwaitingAuthorisation
        - Rejected
        - Revoked
      type: string
    OBExternalScheduleType1Code:
      description: ""
      enum:
        - Arrival
        - Execution
      type: string
    OBExternalStandingOrderStatus1Code:
      description: ""
      enum:
        - Active
        - Inactive
      type: string
    OBExternalStatementType1Code:
      description: ""
      enum:
        - AccountClosure
        - AccountOpening
        - Annual
        - Interim
        - RegularPeriodic
      type: string
    OBFeeApplicableRange1:
      additionalProperties: false
      description: Range or amounts or rates for which the fee/charge applies
      properties:
        MaximumAmount:
          description: Maximum Amount on which fee is applicable (where it is expressed as
            an amount)
          nullable: true
          pattern: ^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$
          type: string
        MaximumRate:
          description: Maximum rate on which fee/charge is applicable(where it is
            expressed as an rate)
          nullable: true
          pattern: ^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$
          type: string
        MinimumAmount:
          description: Minimum Amount on which fee/charge is applicable (where it is
            expressed as an amount)
          nullable: true
          pattern: ^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$
          type: string
        MinimumRate:
          description: Minimum rate on which fee/charge is applicable(where it is
            expressed as an rate)
          nullable: true
          pattern: ^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$
          type: string
      type: object
    OBFeeCategory1Code:
      description: Categorisation of fees and charges into standard categories.
      enum:
        - FCOT
        - FCRE
        - FCSV
      type: string
    OBFeeChargeCap1:
      additionalProperties: false
      description: Details about any caps (maximum charges) that apply to a particular
        or group of fee/charge
      properties:
        CappingPeriod:
          $ref: "#/components/schemas/OBPeriod1Code"
        FeeCapAmount:
          description: Cap amount charged for a fee/charge (where it is charged in terms
            of an amount rather than a rate)
          nullable: true
          pattern: ^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$
          type: string
        FeeCapOccurrence:
          description: Fee/Charges are captured dependent on the number of occurrences
            rather than capped at a particular amount
          format: int32
          nullable: true
          type: integer
        FeeType:
          description: ""
          items:
            $ref: "#/components/schemas/OBFeeType1Code"
          type: array
        MinMaxType:
          $ref: "#/components/schemas/OBMinMaxType1Code"
        Notes:
          description: Free text for adding extra details for fee charge cap
          items:
            type: string
          nullable: true
          type: array
        OtherFeeType:
          description: ""
          items:
            $ref: "#/components/schemas/OBOtherCodeType1"
          nullable: true
          type: array
      required:
        - FeeType
        - MinMaxType
      type: object
    OBFeeChargeDetail1:
      additionalProperties: false
      description: Other fees/charges details
      properties:
        ApplicationFrequency:
          $ref: "#/components/schemas/OBFeeFrequency1Code"
        CalculationFrequency:
          $ref: "#/components/schemas/OBFeeFrequency1Code"
        FeeAmount:
          description: Fee Amount charged for a fee/charge (where it is charged in terms
            of an amount rather than a rate)
          nullable: true
          pattern: ^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$
          type: string
        FeeApplicableRange:
          $ref: "#/components/schemas/OBFeeApplicableRange1"
        FeeCategory:
          $ref: "#/components/schemas/OBFeeCategory1Code"
        FeeChargeCap:
          description: ""
          items:
            $ref: "#/components/schemas/OBFeeChargeCap1"
          nullable: true
          type: array
        FeeRate:
          description: Rate charged for Fee/Charge (where it is charged in terms of a rate
            rather than an amount)
          nullable: true
          pattern: ^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$
          type: string
        FeeRateType:
          $ref: "#/components/schemas/OBInterestRateType1Code"
        FeeType:
          $ref: "#/components/schemas/OBFeeType1Code"
        NegotiableIndicator:
          description: Fee/charge which is usually negotiable rather than a fixed amount
          nullable: true
          type: boolean
        Notes:
          description: Optional additional notes to supplement the fee/charge details.
          items:
            type: string
          nullable: true
          type: array
        OtherApplicationFrequency:
          $ref: "#/components/schemas/OBOtherCodeType1"
        OtherCalculationFrequency:
          $ref: "#/components/schemas/OBOtherCodeType1"
        OtherFeeCategoryType:
          $ref: "#/components/schemas/OBOtherCodeType1"
        OtherFeeRateType:
          $ref: "#/components/schemas/OBOtherCodeType1"
        OtherFeeType:
          $ref: "#/components/schemas/OBOtherFeeChargeDetailType"
      required:
        - ApplicationFrequency
        - FeeCategory
        - FeeType
      type: object
    OBFeeFrequency1Code:
      description: Frequency at which the overdraft charge is applied to the account
      enum:
        - FEAC
        - FEAO
        - FECP
        - FEDA
        - FEHO
        - FEI
        - FEMO
        - FEOA
        - FEOT
        - FEPC
        - FEPH
        - FEPO
        - FEPS
        - FEPT
        - FEPTA
        - FEPTP
        - FEQU
        - FESM
        - FEST
        - FEWE
        - FEYE
      type: string
    OBFeeType1Code:
      description: Fee/Charge Type
      enum:
        - FEPF
        - FTOT
        - FYAF
        - FYAM
        - FYAQ
        - FYCP
        - FYDB
        - FYMI
        - FYXX
      type: string
    OBFrequency1Code:
      description: How often is credit interest calculated for the account.
      enum:
        - FQAT
        - FQDY
        - FQHY
        - FQMY
        - FQOT
        - FQQY
        - FQSD
        - FQWY
        - FQYY
      type: string
    OBInterestCalculationMethod1Code:
      description: ""
      enum:
        - ITCO
        - ITOT
        - ITSI
      type: string
    OBInterestDestination1Code:
      description: Describes whether accrued interest is payable only to the BCA or to
        another bank account
      enum:
        - INOT
        - INPA
        - INSC
      type: string
    OBInterestFixedVariableType1Code:
      description: Type of interest rate, Fixed or Variable
      enum:
        - INFI
        - INVA
      type: string
    OBInterestRateType1Code:
      description: Interest rate types, other than AER, which financial institutions
        may use to describe the annual interest rate payable to the account
        holder's account.
      enum:
        - INBB
        - INFR
        - INGR
        - INLR
        - INNE
        - INOT
      type: string
    OBLoanInterest1:
      additionalProperties: false
      description: Details about the interest that may be payable to the SME Loan holders
      properties:
        LoanInterestTierBandSet:
          description: ""
          items:
            $ref: "#/components/schemas/OBLoanInterestTierBandSet1"
          type: array
        Notes:
          description: Optional additional notes to supplement the LoanInterest
          items:
            type: string
          nullable: true
          type: array
      required:
        - LoanInterestTierBandSet
      type: object
    OBLoanInterestFeesChargeCap1:
      additionalProperties: false
      description: Details about any caps (minimum/maximum charges) that apply to a
        particular fee/charge
      properties:
        CappingPeriod:
          $ref: "#/components/schemas/OBFeeFrequency1Code"
        FeeCapAmount:
          description: Cap amount charged for a fee/charge (where it is charged in terms
            of an amount rather than a rate)
          nullable: true
          pattern: ^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$
          type: string
        FeeCapOccurrence:
          description: Fee/charges are captured dependent on the number of occurrences
            rather than capped at a particular amount
          format: int32
          nullable: true
          type: integer
        FeeType:
          description: ""
          items:
            $ref: "#/components/schemas/OBFeeType1Code"
          type: array
        MinMaxType:
          $ref: "#/components/schemas/OBMinMaxType1Code"
        Notes:
          description: Free text for adding extra details for fee charge cap
          items:
            type: string
          nullable: true
          type: array
        OtherFeeType:
          description: ""
          items:
            $ref: "#/components/schemas/OBOtherCodeType1"
          nullable: true
          type: array
      required:
        - FeeType
        - MinMaxType
      type: object
    OBLoanInterestFeesChargeDetail1:
      additionalProperties: false
      description: Other fees/charges details
      properties:
        ApplicationFrequency:
          $ref: "#/components/schemas/OBFeeFrequency1Code"
        CalculationFrequency:
          $ref: "#/components/schemas/OBFeeFrequency1Code"
        FeeAmount:
          description: Fee Amount charged for a fee/charge (where it is charged in terms
            of an amount rather than a rate)
          nullable: true
          pattern: ^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$
          type: string
        FeeRate:
          description: Rate charged for Fee/Charge (where it is charged in terms of a rate
            rather than an amount)
          nullable: true
          pattern: ^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$
          type: string
        FeeRateType:
          $ref: "#/components/schemas/OBInterestRateType1Code"
        FeeType:
          $ref: "#/components/schemas/OBFeeType1Code"
        NegotiableIndicator:
          description: Fee/charge which is usually negotiable rather than a fixed amount
          nullable: true
          type: boolean
        Notes:
          description: Optional additional notes to supplement the fee/charge details.
          items:
            type: string
          nullable: true
          type: array
        OtherApplicationFrequency:
          $ref: "#/components/schemas/OBOtherCodeType1"
        OtherCalculationFrequency:
          $ref: "#/components/schemas/OBOtherCodeType1"
        OtherFeeRateType:
          $ref: "#/components/schemas/OBOtherCodeType1"
        OtherFeeType:
          $ref: "#/components/schemas/OBOtherFeeChargeDetailType"
      required:
        - ApplicationFrequency
        - CalculationFrequency
        - FeeType
      type: object
    OBLoanInterestFeesCharges1:
      additionalProperties: false
      description: Contains details of fees and charges which are not associated with
        either LoanRepayment or features/benefits
      properties:
        LoanInterestFeeChargeCap:
          description: ""
          items:
            $ref: "#/components/schemas/OBLoanInterestFeesChargeCap1"
          nullable: true
          type: array
        LoanInterestFeeChargeDetail:
          description: ""
          items:
            $ref: "#/components/schemas/OBLoanInterestFeesChargeDetail1"
          type: array
      required:
        - LoanInterestFeeChargeDetail
      type: object
    OBLoanInterestTierBand1:
      additionalProperties: false
      description: Tier Band Details
      properties:
        FixedVariableInterestRateType:
          $ref: "#/components/schemas/OBInterestFixedVariableType1Code"
        Identification:
          description: Unique and unambiguous identification of a  Tier Band for a SME Loan.
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
        LoanInterestFeesCharges:
          description: ""
          items:
            $ref: "#/components/schemas/OBLoanInterestFeesCharges1"
          nullable: true
          type: array
        LoanProviderInterestRate:
          description: Loan provider Interest for the SME Loan product
          nullable: true
          pattern: ^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$
          type: string
        LoanProviderInterestRateType:
          $ref: "#/components/schemas/OBInterestRateType1Code"
        MaxTermPeriod:
          $ref: "#/components/schemas/OBPeriod1Code"
        MinTermPeriod:
          $ref: "#/components/schemas/OBPeriod1Code"
        Notes:
          description: Optional additional notes to supplement the Tier Band details
          items:
            type: string
          nullable: true
          type: array
        OtherLoanProviderInterestRateType:
          $ref: "#/components/schemas/OBOtherCodeType1"
        RepAPR:
          description: The annual equivalent rate (AER) is interest that is calculated
            under the assumption that any interest paid is combined with the
            original balance and the next interest payment will be based on the
            slightly higher account balance. Overall, this means that interest
            can be compounded several times in a year depending on the number of
            times that interest payments are made.  For SME Loan, this APR is
            the representative APR which includes any account fees.
          pattern: ^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$
          type: string
        TierValueMaxTerm:
          description: Maximum loan term for which the loan interest tier applies.
          format: int32
          nullable: true
          type: integer
        TierValueMaximum:
          description: Maximum loan value for which the loan interest tier applies.
          nullable: true
          pattern: ^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$
          type: string
        TierValueMinTerm:
          description: Minimum loan term for which the loan interest tier applies.
          format: int32
          type: integer
        TierValueMinimum:
          description: Minimum loan value for which the loan interest tier applies.
          pattern: ^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$
          type: string
      required:
        - FixedVariableInterestRateType
        - MinTermPeriod
        - RepAPR
        - TierValueMinimum
        - TierValueMinTerm
      type: object
    OBLoanInterestTierBandSet1:
      additionalProperties: false
      description: The group of tiers or bands for which debit interest can be applied.
      properties:
        CalculationMethod:
          $ref: "#/components/schemas/OBInterestCalculationMethod1Code"
        Identification:
          description: Loan interest tierbandset identification. Used by  loan providers
            for internal use purpose.
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
        LoanInterestFeesCharges:
          description: ""
          items:
            $ref: "#/components/schemas/OBLoanInterestFeesCharges1"
          nullable: true
          type: array
        LoanInterestTierBand:
          description: ""
          items:
            $ref: "#/components/schemas/OBLoanInterestTierBand1"
          type: array
        Notes:
          description: Optional additional notes to supplement the Tier Band Set details
          items:
            type: string
          nullable: true
          type: array
        OtherCalculationMethod:
          $ref: "#/components/schemas/OBOtherCodeType1"
        TierBandMethod:
          $ref: "#/components/schemas/OBTierBandType1Code"
      required:
        - CalculationMethod
        - LoanInterestTierBand
        - TierBandMethod
      type: object
    OBMerchantDetails1:
      additionalProperties: false
      description: Details of the merchant involved in the transaction.
      properties:
        MerchantCategoryCode:
          description: Category code conform to ISO 18245, related to the type of services
            or goods the merchant provides for the transaction.
          maxLength: 4
          minLength: 1
          nullable: true
          type: string
        MerchantName:
          description: Name by which the merchant is known.
          maxLength: 350
          minLength: 1
          nullable: true
          type: string
      type: object
    OBMinMaxType1Code:
      description: Min Max type
      enum:
        - FMMN
        - FMMX
      type: string
    OBOffer1:
      additionalProperties: false
      description: ""
      properties:
        AccountId:
          description: A unique and immutable identifier used to identify the account
            resource. This identifier has no meaning to the account owner.
          maxLength: 40
          minLength: 1
          type: string
        Amount:
          $ref: "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
        Description:
          description: Further details of the offer.
          maxLength: 50
          minLength: 1
          nullable: true
          type: string
        EndDateTime:
          description: "Date and time at which the offer ends.All dates in the JSON
            payloads are represented in ISO 8601 date-time format.  All
            date-time fields in responses must include the timezone. An example
            is below: 2017-04-05T10:43:07+00:00"
          format: date-time
          nullable: true
          type: string
        Fee:
          $ref: "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
        OfferId:
          description: A unique and immutable identifier used to identify the offer
            resource. This identifier has no meaning to the account owner.
          maxLength: 40
          minLength: 1
          nullable: true
          type: string
        OfferType:
          $ref: "#/components/schemas/OBExternalOfferType1Code"
        Rate:
          description: Rate associated with the offer type.
          nullable: true
          pattern: ^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$
          type: string
        StartDateTime:
          description: "Date and time at which the offer starts.All dates in the JSON
            payloads are represented in ISO 8601 date-time format.  All
            date-time fields in responses must include the timezone. An example
            is below: 2017-04-05T10:43:07+00:00"
          format: date-time
          nullable: true
          type: string
        Term:
          description: Further details of the term of the offer.
          maxLength: 500
          minLength: 1
          nullable: true
          type: string
        URL:
          description: URL (Uniform Resource Locator) where documentation on the offer can
            be found
          maxLength: 256
          minLength: 1
          nullable: true
          type: string
        Value:
          description: Value associated with the offer type.
          format: int32
          nullable: true
          type: integer
      required:
        - AccountId
      type: object
    OBOtherCodeType1:
      additionalProperties: false
      description: ""
      properties:
        Code:
          description: The four letter Mnemonic used within an XML file to identify a code
          nullable: true
          pattern: ^\\w{0,4}$
          type: string
        Description:
          description: Description to describe the purpose of the code
          maxLength: 350
          minLength: 1
          type: string
        Name:
          description: Long name associated with the code
          maxLength: 70
          minLength: 1
          type: string
      required:
        - Description
        - Name
      type: object
    OBOtherFeeChargeDetailType:
      additionalProperties: false
      description: Other Fee/charge type which is not available in the standard code set
      properties:
        Code:
          description: The four letter Mnemonic used within an XML file to identify a code
          nullable: true
          pattern: ^\\w{0,4}$
          type: string
        Description:
          description: Description to describe the purpose of the code
          maxLength: 350
          minLength: 1
          type: string
        FeeCategory:
          $ref: "#/components/schemas/OBFeeCategory1Code"
        Name:
          description: Long name associated with the code
          maxLength: 70
          minLength: 1
          type: string
      required:
        - Description
        - FeeCategory
        - Name
      type: object
    OBOtherFeesAndCharges1:
      additionalProperties: false
      description: Contains details of fees and charges which are not associated with
        either Overdraft or features/benefits
      properties:
        FeeChargeCap:
          description: ""
          items:
            $ref: "#/components/schemas/OBFeeChargeCap1"
          nullable: true
          type: array
        FeeChargeDetail:
          description: ""
          items:
            $ref: "#/components/schemas/OBFeeChargeDetail1"
          type: array
        OtherTariffType:
          $ref: "#/components/schemas/OBOtherCodeType1"
        TariffName:
          description: Name of the tariff
          maxLength: 350
          minLength: 1
          nullable: true
          type: string
        TariffType:
          $ref: "#/components/schemas/OBTariffType1Code"
      required:
        - FeeChargeDetail
      type: object
    OBOtherProductDetails1:
      additionalProperties: false
      description: ""
      properties:
        FeeFreeLength:
          description: The length/duration of the fee free period
          format: int32
          nullable: true
          type: integer
        FeeFreeLengthPeriod:
          $ref: "#/components/schemas/OBPeriod1Code"
        MonthlyMaximumCharge:
          description: The maximum relevant charges that could accrue as defined fully in
            Part 7 of the CMA order
          nullable: true
          pattern: ^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$
          type: string
        Notes:
          description: Optional additional notes to supplement the Core product details
          items:
            type: string
          nullable: true
          type: array
        OtherSegment:
          $ref: "#/components/schemas/OBOtherCodeType1"
        Segment:
          description: "Market segmentation is a marketing term referring to the
            aggregating of prospective buyers into groups, or segments, that
            have common needs and respond similarly to a marketing action.
            Market segmentation enables companies to target different categories
            of consumers who perceive the full value of certain products and
            services differently from one another. Read more: Market
            Segmentation
            http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfE\
            EalTd"
          items:
            $ref: "#/components/schemas/OBOtherProductSegment1Code"
          nullable: true
          type: array
      type: object
    OBOtherProductSegment1Code:
      description: ""
      enum:
        - GEAS
        - GEBA
        - GEBR
        - GEBU
        - GECI
        - GECS
        - GEFB
        - GEFG
        - GEG
        - GEGR
        - GEGS
        - GEOT
        - GEOV
        - GEPA
        - GEPR
        - GERE
        - GEST
        - GEYA
        - GEYO
        - PSCA
        - PSES
        - PSNC
        - PSNP
        - PSRG
        - PSSS
        - PSST
        - PSSW
      type: string
    OBOtherProductType1:
      additionalProperties: false
      description: Other product type details associated with the account.
      properties:
        CreditInterest:
          $ref: "#/components/schemas/OBCreditInterest1"
        Description:
          description: Description of the Product associated with the account
          maxLength: 350
          minLength: 1
          type: string
        LoanInterest:
          $ref: "#/components/schemas/OBLoanInterest1"
        Name:
          description: Long name associated with the product
          maxLength: 350
          minLength: 1
          type: string
        OtherFeesCharges:
          description: ""
          items:
            $ref: "#/components/schemas/OBOtherFeesAndCharges1"
          nullable: true
          type: array
        Overdraft:
          $ref: "#/components/schemas/OBOverdraft1"
        ProductDetails:
          $ref: "#/components/schemas/OBOtherProductDetails1"
        Repayment:
          $ref: "#/components/schemas/OBRepayment1"
        SupplementaryData:
          $ref: "#/components/schemas/OBSupplementaryData1"
      required:
        - Description
        - Name
      type: object
    OBOverdraft1:
      additionalProperties: false
      description: Borrowing details
      properties:
        Notes:
          description: Associated Notes about the overdraft rates
          items:
            type: string
          nullable: true
          type: array
        OverdraftTierBandSet:
          description: Tier band set details
          items:
            $ref: "#/components/schemas/OBOverdraftTierbandSet1"
          type: array
      required:
        - OverdraftTierBandSet
      type: object
    OBOverdraftFeeChargeCap1:
      additionalProperties: false
      description: Details about any caps (maximum charges) that apply to a particular
        fee/charge. Capping can either be based on an amount (in gbp), an amount
        (in items) or a rate.
      properties:
        CappingPeriod:
          $ref: "#/components/schemas/OBPeriod1Code"
        FeeCapAmount:
          description: Cap amount charged for a fee/charge
          nullable: true
          pattern: ^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$
          type: string
        FeeCapOccurrence:
          description: Indicates whether the advertised overdraft rate is guaranteed to be
            offered to a borrower by the bank e.g. if it's part of a government
            scheme, or whether the rate may vary dependent on the applicant's
            circumstances.
          format: int32
          nullable: true
          type: integer
        FeeType:
          description: ""
          items:
            $ref: "#/components/schemas/OBOverdraftFeeType1Code"
          type: array
        MinMaxType:
          $ref: "#/components/schemas/OBMinMaxType1Code"
        Notes:
          description: Notes related to Overdraft fee charge cap
          items:
            type: string
          nullable: true
          type: array
        OtherFeeType:
          description: ""
          items:
            $ref: "#/components/schemas/OBOtherCodeType1"
          nullable: true
          type: array
      required:
        - FeeType
        - MinMaxType
      type: object
    OBOverdraftFeeType1Code:
      description: Fee/charge type which is being capped
      enum:
        - FBAO
        - FBAR
        - FBEB
        - FBIT
        - FBOR
        - FBOS
        - FBSC
        - FBTO
        - FBUB
        - FBUT
        - FTOT
        - FTUT
      type: string
    OBOverdraftFeesChargeDetails1:
      additionalProperties: false
      description: Details about the fees/charges
      properties:
        ApplicationFrequency:
          $ref: "#/components/schemas/OBFeeFrequency1Code"
        CalculationFrequency:
          $ref: "#/components/schemas/OBFeeFrequency1Code"
        FeeAmount:
          description: Amount charged for an overdraft fee/charge (where it is charged in
            terms of an amount rather than a rate)
          nullable: true
          pattern: ^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$
          type: string
        FeeRate:
          description: Rate charged for overdraft fee/charge (where it is charged in terms
            of a rate rather than an amount)
          nullable: true
          pattern: ^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$
          type: string
        FeeRateType:
          $ref: "#/components/schemas/OBInterestRateType1Code"
        FeeType:
          $ref: "#/components/schemas/OBOverdraftFeeType1Code"
        IncrementalBorrowingAmount:
          description: Every additional tranche of an overdraft balance to which an
            overdraft fee is applied
          nullable: true
          pattern: ^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$
          type: string
        NegotiableIndicator:
          description: Indicates whether fee and charges are negotiable
          nullable: true
          type: boolean
        Notes:
          description: Free text for capturing any other info related to Overdraft Fees
            Charge Details
          items:
            type: string
          nullable: true
          type: array
        OtherApplicationFrequency:
          $ref: "#/components/schemas/OBOtherCodeType1"
        OtherCalculationFrequency:
          $ref: "#/components/schemas/OBOtherCodeType1"
        OtherFeeRateType:
          $ref: "#/components/schemas/OBOtherCodeType1"
        OtherFeeType:
          $ref: "#/components/schemas/OBOtherCodeType1"
        OverdraftControlIndicator:
          description: Indicates if the fee/charge is already covered by an 'Overdraft
            Control' fee or not.
          nullable: true
          type: boolean
        OverdraftFeeChargeCap:
          description: ""
          items:
            $ref: "#/components/schemas/OBOverdraftFeeChargeCap1"
          nullable: true
          type: array
      required:
        - ApplicationFrequency
        - FeeType
      type: object
    OBOverdraftFeesCharges1:
      additionalProperties: false
      description: Overdraft fees and charges
      properties:
        OverdraftFeeChargeCap:
          description: ""
          items:
            $ref: "#/components/schemas/OBOverdraftFeeChargeCap1"
          nullable: true
          type: array
        OverdraftFeeChargeDetail:
          description: ""
          items:
            $ref: "#/components/schemas/OBOverdraftFeesChargeDetails1"
          type: array
      required:
        - OverdraftFeeChargeDetail
      type: object
    OBOverdraftTierBand1:
      additionalProperties: false
      description: Provides overdraft details for a specific tier or band
      properties:
        AgreementLengthMax:
          description: Specifies the maximum length of a band for a fixed overdraft
            agreement
          format: int32
          nullable: true
          type: integer
        AgreementLengthMin:
          description: Specifies the minimum length of a band for a fixed overdraft
            agreement
          format: int32
          nullable: true
          type: integer
        AgreementPeriod:
          $ref: "#/components/schemas/OBPeriod1Code"
        BankGuaranteedIndicator:
          description: Indicates whether the advertised overdraft rate is guaranteed to be
            offered to a borrower by the bank e.g. if it�s part of a government
            scheme, or whether the rate may vary dependent on the applicant�s
            circumstances.
          nullable: true
          type: boolean
        EAR:
          description: EAR means Effective Annual Rate and/or Equivalent Annual Rate
            (frequently used interchangeably), being the actual annual interest
            rate of an Overdraft.
          nullable: true
          pattern: ^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$
          type: string
        Identification:
          description: Unique and unambiguous identification of a  Tier Band for a
            overdraft.
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
        Notes:
          description: Optional additional notes to supplement the Tier/band details
          items:
            type: string
          nullable: true
          type: array
        OverdraftFeesCharges:
          description: ""
          items:
            $ref: "#/components/schemas/OBOverdraftFeesCharges1"
          nullable: true
          type: array
        OverdraftInterestChargingCoverage:
          $ref: "#/components/schemas/OBTierBandType1Code"
        TierValueMax:
          description: Maximum value of Overdraft Tier/Band
          nullable: true
          pattern: ^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$
          type: string
        TierValueMin:
          description: Minimum value of Overdraft Tier/Band
          pattern: ^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$
          type: string
      required:
        - TierValueMin
      type: object
    OBOverdraftTierbandSet1:
      additionalProperties: false
      description: Tier band set details
      properties:
        AuthorisedIndicator:
          description: Indicates if the Overdraft is authorised (Y) or unauthorised (N)
          nullable: true
          type: boolean
        BufferAmount:
          description: "When a customer exceeds their credit limit, a financial
            institution will not charge the customer unauthorised overdraft
            charges if they do not exceed by more than the buffer amount. Note:
            Authorised overdraft charges may still apply."
          nullable: true
          pattern: ^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$
          type: string
        Identification:
          description: Unique and unambiguous identification of a  Tier Band for a
            overdraft product.
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
        Notes:
          description: Optional additional notes to supplement the overdraft Tier Band Set
            details
          items:
            type: string
          nullable: true
          type: array
        OverdraftFeesCharges:
          description: ""
          items:
            $ref: "#/components/schemas/OBOverdraftFeesCharges1"
          nullable: true
          type: array
        OverdraftTierBand:
          description: ""
          items:
            $ref: "#/components/schemas/OBOverdraftTierBand1"
          type: array
        OverdraftType:
          $ref: "#/components/schemas/OBOverdraftType1Code"
        TierBandMethod:
          $ref: "#/components/schemas/OBTierBandType1Code"
      required:
        - OverdraftTierBand
        - TierBandMethod
      type: object
    OBOverdraftType1Code:
      description: An overdraft can either be 'committed' which means that the
        facility cannot be withdrawn without reasonable notification before it's
        agreed end date, or 'on demand' which means that the financial
        institution can demand repayment at any point in time.
      enum:
        - OVCO
        - OVOD
        - OVOT
      type: string
    OBPCAData1:
      additionalProperties: false
      description: ""
      properties:
        CreditInterest:
          $ref: "#/components/schemas/OBCreditInterest1"
        OtherFeesCharges:
          $ref: "#/components/schemas/OBOtherFeesAndCharges1"
        Overdraft:
          $ref: "#/components/schemas/OBOverdraft1"
        ProductDetails:
          $ref: "#/components/schemas/OBPCAProductDetails1"
      type: object
    OBPCAProductDetails1:
      additionalProperties: false
      description: ""
      properties:
        MonthlyMaximumCharge:
          description: The maximum relevant charges that could accrue as defined fully in
            Part 7 of the CMA order
          nullable: true
          type: string
        Notes:
          description: Optional additional notes to supplement the Core product details
          items:
            type: string
          nullable: true
          type: array
        Segment:
          description: "Market segmentation is a marketing term referring to the
            aggregating of prospective buyers into groups, or segments, that
            have common needs and respond similarly to a marketing action.
            Market segmentation enables companies to target different categories
            of consumers who perceive the full value of certain products and
            services differently from one another.  Read more: Market
            Segmentation
            http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfE\
            EalTd  With respect to PCA products, they are segmented in relation
            to different markets that they wish to focus on."
          items:
            $ref: "#/components/schemas/OBPCAProductSegment1Code"
          nullable: true
          type: array
      type: object
    OBPCAProductSegment1Code:
      description: ""
      enum:
        - Basic
        - BenefitAndReward
        - CreditInterest
        - Cashback
        - General
        - Graduate
        - Other
        - Overdraft
        - Packaged
        - Premium
        - Reward
        - Student
        - YoungAdult
        - Youth
      type: string
    OBParty2:
      additionalProperties: false
      description: ""
      properties:
        AccountRole:
          description: A party’s role with respect to the related account.
          example: "[ \"UK.OBIE.Administrator\", \"UK.OBIE.Beneficiary\",
            \"UK.OBIE.CustodianForMinor\", \"UK.OBIE.Granter\",
            \"UK.OBIE.LegalGuardian\",\r

            \"UK.OBIE.OtherParty\", \"UK.OBIE.PowerOfAttorney\",
            \"UK.OBIE.Principal\", \"UK.OBIE.Protector\",
            \"UK.OBIE.RegisteredShareholderName\",\r

            \"UK.OBIE.SecondaryOwner\",
            \"UK.OBIE.SeniorManagingOfficial\", \"UK.OBIE.Settlor\",
            \"UK.OBIE.SuccessorOnDeath\" ]"
          nullable: true
          type: string
        Address:
          description: Postal address of a party.
          items:
            $ref: "#/components/schemas/OBPostalAddress8"
          nullable: true
          type: array
        BeneficialOwnership:
          description: A flag to indicate a party's beneficial ownership of the related
            account.
          nullable: true
          type: boolean
        EmailAddress:
          description: Address for electronic mail (e-mail).
          maxLength: 256
          minLength: 1
          nullable: true
          type: string
        FullLegalName:
          description: Specifies a character string with a maximum length of 350 characters.
          maxLength: 350
          minLength: 1
          nullable: true
          type: string
        LegalStructure:
          description: Legal standing of the party.
          example: "[ \"UK.OBIE.CIC\", \"UK.OBIE.CIO\", \"UK.OBIE.Charity\",
            \"UK.OBIE.CoOp\", \"UK.OBIE.GeneralPartnership\",\r

            \"UK.OBIE.Individual\",
            \"UK.OBIE.LimitedLiabilityPartnership\",
            \"UK.OBIE.LimitedPartnership\",\r

            \"UK.OBIE.PrivateLimitedCompany\",
            \"UK.OBIE.PublicLimitedCompany\",\"UK.OBIE.ScottishLimitedPartnersh\
            ip\", \"UK.OBIE.Sole\" ]"
          nullable: true
          type: string
        Mobile:
          description: Collection of information that identifies a mobile phone number, as
            defined by telecom services.
          nullable: true
          pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
          type: string
        Name:
          description: Name by which a party is known and which is usually used to
            identify that party.
          maxLength: 70
          minLength: 1
          nullable: true
          type: string
        PartyId:
          description: A unique and immutable identifier used to identify the customer
            resource. This identifier has no meaning to the account owner.
          maxLength: 40
          minLength: 1
          type: string
        PartyNumber:
          description: Number assigned by an agent to identify its customer.
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
        PartyType:
          $ref: "#/components/schemas/OBExternalPartyType1Code"
        Phone:
          description: Collection of information that identifies a phone number, as
            defined by telecom services.
          nullable: true
          pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
          type: string
        Relationships:
          $ref: "#/components/schemas/OBPartyRelationships1"
      required:
        - PartyId
      type: object
    OBPartyRelationships1:
      additionalProperties: false
      description: ""
      properties:
        Account:
          $ref: "#/components/schemas/OBRelationship1"
      type: object
    OBPeriod1Code:
      description: The unit of period (days, weeks, months etc.) of the promotional length
      enum:
        - PACT
        - PDAY
        - PHYR
        - PMTH
        - PQTR
        - PWEK
        - PYER
      type: string
    OBPostalAddress6:
      additionalProperties: false
      description: Information that locates and identifies a specific address, as
        defined by postal services.
      properties:
        AddressLine:
          description: Information that locates and identifies a specific address, as
            defined by postal services, presented in free format text.
          items:
            type: string
          nullable: true
          type: array
        AddressType:
          $ref: "#/components/schemas/OBAddressTypeCode"
        BuildingNumber:
          description: Number that identifies the position of a building on a street.
          maxLength: 16
          minLength: 1
          nullable: true
          type: string
        Country:
          description: Nation with its own government.
          nullable: true
          pattern: ^[A-Z]{2,2}$
          type: string
        CountrySubDivision:
          description: Identifies a subdivision of a country such as state, region, county.
          nullable: true
          type: string
        Department:
          description: Identification of a division of a large organisation or building.
          maxLength: 70
          minLength: 1
          nullable: true
          type: string
        PostCode:
          description: Identifier consisting of a group of letters and/or numbers that is
            added to a postal address to assist the sorting of mail.
          maxLength: 16
          minLength: 1
          nullable: true
          type: string
        StreetName:
          description: Name of a street or thoroughfare.
          maxLength: 70
          minLength: 1
          nullable: true
          type: string
        SubDepartment:
          description: Identification of a sub-division of a large organisation or building.
          maxLength: 70
          minLength: 1
          nullable: true
          type: string
        TownName:
          description: Name of a built-up area, with defined boundaries, and a local
            government.
          maxLength: 16
          minLength: 1
          nullable: true
          type: string
      type: object
    OBPostalAddress8:
      additionalProperties: false
      description: ""
      properties:
        AddressLine:
          description: Information that locates and identifies a specific address, as
            defined by postal services, that is presented in free format text.
          items:
            type: string
          nullable: true
          type: array
        AddressType:
          $ref: "#/components/schemas/OBAddressTypeCode"
        BuildingNumber:
          description: Number that identifies the position of a building on a street.
          maxLength: 16
          minLength: 1
          nullable: true
          type: string
        Country:
          description: Nation with its own government, occupying a particular territory.
          pattern: ^[A-Z]{2,2}$
          type: string
        CountrySubDivision:
          description: Identifies a subdivision of a country eg, state, region, county.
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
        PostCode:
          description: Identifier consisting of a group of letters and/or numbers that is
            added to a postal address to assist the sorting of mail.
          maxLength: 16
          minLength: 1
          nullable: true
          type: string
        StreetName:
          description: Name of a street or thoroughfare.
          maxLength: 70
          minLength: 1
          nullable: true
          type: string
        TownName:
          description: Name of a built-up area, with defined boundaries, and a local
            government.
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
      required:
        - Country
      type: object
    OBProduct2:
      additionalProperties: false
      description: Product details associated with the Account
      properties:
        AccountId:
          description: A unique and immutable identifier used to identify the account
            resource. This identifier has no meaning to the account owner.
          maxLength: 40
          minLength: 1
          type: string
        BCA:
          $ref: "#/components/schemas/OBBCAData1"
        MarketingStateId:
          description: Unique and unambiguous identification of a  Product Marketing State.
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
        OtherProductType:
          $ref: "#/components/schemas/OBOtherProductType1"
        PCA:
          $ref: "#/components/schemas/OBPCAData1"
        ProductId:
          description: The unique ID that has been internally assigned by the financial
            institution to each of the current account banking products they
            market to their retail and/or small to medium enterprise (SME)
            customers.
          maxLength: 40
          minLength: 1
          nullable: true
          type: string
        ProductName:
          description: The name of the Product used for marketing purposes from a customer
            perspective. I.e. what the customer would recognise.
          maxLength: 350
          minLength: 1
          nullable: true
          type: string
        ProductType:
          $ref: "#/components/schemas/OBExternalProductType1Code"
        SecondaryProductId:
          description: Any secondary Identification which  supports Product Identifier to
            uniquely identify the current account banking products.
          maxLength: 70
          minLength: 1
          nullable: true
          type: string
      required:
        - AccountId
        - ProductType
      type: object
    OBReadAccount5:
      additionalProperties: false
      description: ""
      properties:
        Data:
          $ref: "#/components/schemas/OBReadDataAccount5"
        Links:
          $ref: "#/components/schemas/Links"
        Meta:
          $ref: "#/components/schemas/Meta"
      required:
        - Data
      type: object
    OBReadBalance1:
      additionalProperties: false
      description: ""
      properties:
        Data:
          $ref: "#/components/schemas/OBReadDataBalance1"
        Links:
          $ref: "#/components/schemas/Links"
        Meta:
          $ref: "#/components/schemas/Meta"
      required:
        - Data
        - Links
        - Meta
      type: object
    OBReadBeneficiary5:
      additionalProperties: false
      description: ""
      properties:
        Data:
          $ref: "#/components/schemas/OBReadDataBeneficiary5"
        Links:
          $ref: "#/components/schemas/Links"
        Meta:
          $ref: "#/components/schemas/Meta"
      required:
        - Data
      type: object
    OBReadConsent1:
      additionalProperties: false
      description: ""
      properties:
        Data:
          $ref: "#/components/schemas/OBReadData1"
        Risk:
          $ref: "#/components/schemas/OBRisk2"
      required:
        - Data
        - Risk
      type: object
    OBReadConsentResponse1:
      additionalProperties: false
      description: ""
      properties:
        Data:
          $ref: "#/components/schemas/OBReadDataConsentResponse1"
        Links:
          $ref: "#/components/schemas/Links"
        Meta:
          $ref: "#/components/schemas/Meta"
        Risk:
          $ref: "#/components/schemas/OBRisk2"
      required:
        - Data
        - Links
        - Meta
        - Risk
      type: object
    OBReadData1:
      additionalProperties: false
      description: ""
      properties:
        ExpirationDateTime:
          description: "Specified date and time the permissions will expire. If this is
            not populated, the permissions will be open ended. All dates in the
            JSON payloads are represented in ISO 8601 date-time format.  All
            date-time fields in responses must include the timezone. An example
            is below: 2017-04-05T10:43:07+00:00"
          format: date-time
          nullable: true
          type: string
        Permissions:
          description: Specifies the Open Banking account access data types. This is a
            list of the data clusters being consented by the PSU, and requested
            for authorisation with the ASPSP.
          items:
            $ref: "#/components/schemas/OBExternalPermissions1Code"
          type: array
        TransactionFromDateTime:
          description: "Specified start date and time for the transaction query period. If
            this is not populated, the start date will be open ended, and data
            will be returned from the earliest available transaction. All dates
            in the JSON payloads are represented in ISO 8601 date-time
            format.  All date-time fields in responses must include the
            timezone. An example is below: 2017-04-05T10:43:07+00:00"
          format: date-time
          nullable: true
          type: string
        TransactionToDateTime:
          description: "Specified end date and time for the transaction query period. If
            this is not populated, the end date will be open ended, and data
            will be returned to the latest available transaction. All dates in
            the JSON payloads are represented in ISO 8601 date-time format.  All
            date-time fields in responses must include the timezone. An example
            is below: 2017-04-05T10:43:07+00:00"
          format: date-time
          nullable: true
          type: string
      required:
        - Permissions
      type: object
    OBReadDataAccount5:
      additionalProperties: false
      description: ""
      properties:
        Account:
          description: Unambiguous identification of the account to which credit and debit
            entries are made.
          items:
            $ref: "#/components/schemas/OBAccount6"
          nullable: true
          type: array
      type: object
    OBReadDataBalance1:
      additionalProperties: false
      description: ""
      properties:
        Balance:
          description: Set of elements used to define the balance details.
          items:
            $ref: "#/components/schemas/OBCashBalance1"
          type: array
      required:
        - Balance
      type: object
    OBReadDataBeneficiary5:
      additionalProperties: false
      description: ""
      properties:
        Beneficiary:
          description: ""
          items:
            $ref: "#/components/schemas/OBBeneficiary5"
          nullable: true
          type: array
      type: object
    OBReadDataConsentResponse1:
      additionalProperties: false
      description: ""
      properties:
        ConsentId:
          description: Unique identification as assigned to identify the account access
            consent resource.
          type: string
        CreationDateTime:
          description: "Date and time at which the resource was created. All dates in the
            JSON payloads are represented in ISO 8601 date-time format.  All
            date-time fields in responses must include the timezone. An example
            is below: 2017-04-05T10:43:07+00:00"
          format: date-time
          type: string
        ExpirationDateTime:
          description: "Specified date and time the permissions will expire. If this is
            not populated, the permissions will be open ended. All dates in the
            JSON payloads are represented in ISO 8601 date-time format.  All
            date-time fields in responses must include the timezone. An example
            is below: 2017-04-05T10:43:07+00:00"
          format: date-time
          nullable: true
          type: string
        Permissions:
          description: Specifies the Open Banking account access data types. This is a
            list of the data clusters being consented by the PSU, and requested
            for authorisation with the ASPSP.
          items:
            $ref: "#/components/schemas/OBExternalPermissions1Code"
          type: array
        Status:
          $ref: "#/components/schemas/OBExternalRequestStatus1Code"
        StatusUpdateDateTime:
          description: "Date and time at which the resource status was updated. All dates
            in the JSON payloads are represented in ISO 8601 date-time
            format.  All date-time fields in responses must include the
            timezone. An example is below: 2017-04-05T10:43:07+00:00"
          format: date-time
          type: string
        TransactionFromDateTime:
          description: "Specified start date and time for the transaction query period. If
            this is not populated, the start date will be open ended, and data
            will be returned from the earliest available transaction. All dates
            in the JSON payloads are represented in ISO 8601 date-time
            format.  All date-time fields in responses must include the
            timezone. An example is below: 2017-04-05T10:43:07+00:00"
          format: date-time
          nullable: true
          type: string
        TransactionToDateTime:
          description: "Specified end date and time for the transaction query period. If
            this is not populated, the end date will be open ended, and data
            will be returned to the latest available transaction. All dates in
            the JSON payloads are represented in ISO 8601 date-time format.  All
            date-time fields in responses must include the timezone. An example
            is below: 2017-04-05T10:43:07+00:00"
          format: date-time
          nullable: true
          type: string
      required:
        - ConsentId
        - CreationDateTime
        - Permissions
        - Status
        - StatusUpdateDateTime
      type: object
    OBReadDataDirectDebit2:
      additionalProperties: false
      description: ""
      properties:
        DirectDebit:
          description: Account to or from which a cash entry is made.
          items:
            $ref: "#/components/schemas/OBDirectDebit2"
          nullable: true
          type: array
      type: object
    OBReadDataOffer1:
      additionalProperties: false
      description: ""
      properties:
        Offer:
          description: ""
          items:
            $ref: "#/components/schemas/OBOffer1"
          nullable: true
          type: array
      type: object
    OBReadDataParty2:
      additionalProperties: false
      description: ""
      properties:
        Party:
          $ref: "#/components/schemas/OBParty2"
      type: object
    OBReadDataParty3:
      additionalProperties: false
      description: ""
      properties:
        Party:
          description: ""
          items:
            $ref: "#/components/schemas/OBParty2"
          nullable: true
          type: array
      type: object
    OBReadDataProduct2:
      additionalProperties: false
      description: Aligning with the read write specs structure.
      properties:
        Product:
          description: ""
          items:
            $ref: "#/components/schemas/OBProduct2"
          nullable: true
          type: array
      type: object
    OBReadDataScheduledPayment3:
      additionalProperties: false
      description: ""
      properties:
        ScheduledPayment:
          description: ""
          items:
            $ref: "#/components/schemas/OBScheduledPayment3"
          nullable: true
          type: array
      type: object
    OBReadDataStandingOrder5:
      additionalProperties: false
      description: ""
      properties:
        StandingOrder:
          description: ""
          items:
            $ref: "#/components/schemas/OBStandingOrder5"
          nullable: true
          type: array
      type: object
    OBReadDataStatement2:
      additionalProperties: false
      description: ""
      properties:
        Statement:
          description: Provides further details on a statement resource.
          items:
            $ref: "#/components/schemas/OBStatement2"
          nullable: true
          type: array
      type: object
    OBReadDataTransaction6:
      additionalProperties: false
      description: ""
      properties:
        Transaction:
          description: Provides further details on an entry in the report.
          items:
            $ref: "#/components/schemas/OBTransaction6"
          nullable: true
          type: array
      type: object
    OBReadDirectDebit2:
      additionalProperties: false
      description: ""
      properties:
        Data:
          $ref: "#/components/schemas/OBReadDataDirectDebit2"
        Links:
          $ref: "#/components/schemas/Links"
        Meta:
          $ref: "#/components/schemas/Meta"
      required:
        - Data
      type: object
    OBReadOffer1:
      additionalProperties: false
      description: ""
      properties:
        Data:
          $ref: "#/components/schemas/OBReadDataOffer1"
        Links:
          $ref: "#/components/schemas/Links"
        Meta:
          $ref: "#/components/schemas/Meta"
      required:
        - Data
      type: object
    OBReadParty2:
      additionalProperties: false
      description: ""
      properties:
        Data:
          $ref: "#/components/schemas/OBReadDataParty2"
        Links:
          $ref: "#/components/schemas/Links"
        Meta:
          $ref: "#/components/schemas/Meta"
      required:
        - Data
      type: object
    OBReadParty3:
      additionalProperties: false
      description: ""
      properties:
        Data:
          $ref: "#/components/schemas/OBReadDataParty3"
        Links:
          $ref: "#/components/schemas/Links"
        Meta:
          $ref: "#/components/schemas/Meta"
      required:
        - Data
      type: object
    OBReadProduct2:
      additionalProperties: false
      description: Product details of Other Product which is not avaiable in the
        standard list
      properties:
        Data:
          $ref: "#/components/schemas/OBReadDataProduct2"
        Links:
          $ref: "#/components/schemas/Links"
        Meta:
          $ref: "#/components/schemas/Meta"
      required:
        - Data
      type: object
    OBReadScheduledPayment3:
      additionalProperties: false
      description: ""
      properties:
        Data:
          $ref: "#/components/schemas/OBReadDataScheduledPayment3"
        Links:
          $ref: "#/components/schemas/Links"
        Meta:
          $ref: "#/components/schemas/Meta"
      required:
        - Data
      type: object
    OBReadStandingOrder6:
      additionalProperties: false
      description: ""
      properties:
        Data:
          $ref: "#/components/schemas/OBReadDataStandingOrder5"
        Links:
          $ref: "#/components/schemas/Links"
        Meta:
          $ref: "#/components/schemas/Meta"
      required:
        - Data
      type: object
    OBReadStatement2:
      additionalProperties: false
      description: ""
      properties:
        Data:
          $ref: "#/components/schemas/OBReadDataStatement2"
        Links:
          $ref: "#/components/schemas/Links"
        Meta:
          $ref: "#/components/schemas/Meta"
      required:
        - Data
      type: object
    OBReadTransaction6:
      additionalProperties: false
      description: ""
      properties:
        Data:
          $ref: "#/components/schemas/OBReadDataTransaction6"
        Links:
          $ref: "#/components/schemas/Links"
        Meta:
          $ref: "#/components/schemas/Meta"
      required:
        - Data
      type: object
    OBRelationship1:
      additionalProperties: false
      description: ""
      properties:
        Id:
          description: Unique identification as assigned by the ASPSP to uniquely identify
            the related resource.
          maxLength: 40
          minLength: 1
          type: string
        Related:
          description: Absolute URI to the related resource.
          type: string
      required:
        - Id
        - Related
      type: object
    OBRepayment1:
      additionalProperties: false
      description: Repayment details of the Loan product
      properties:
        AmountType:
          $ref: "#/components/schemas/OBRepaymentAmountType1Code"
        Notes:
          description: Optional additional notes to supplement the Repayment
          items:
            type: string
          nullable: true
          type: array
        OtherAmountType:
          $ref: "#/components/schemas/OBOtherCodeType1"
        OtherRepaymentFrequency:
          $ref: "#/components/schemas/OBOtherCodeType1"
        OtherRepaymentType:
          $ref: "#/components/schemas/OBOtherCodeType1"
        RepaymentFeeCharges:
          $ref: "#/components/schemas/OBRepaymentFeeCharges1"
        RepaymentFrequency:
          $ref: "#/components/schemas/OBRepaymentFrequency1Code"
        RepaymentHoliday:
          description: ""
          items:
            $ref: "#/components/schemas/OBRepaymentHoliday1"
          nullable: true
          type: array
        RepaymentType:
          $ref: "#/components/schemas/OBRepaymentType1Code"
      type: object
    OBRepaymentAmountType1Code:
      description: The repayment is for paying just the interest only or both interest
        and capital or bullet amount or balance to date etc
      enum:
        - RABD
        - RABL
        - RACI
        - RAFC
        - RAIO
        - RALT
        - USOT
      type: string
    OBRepaymentFeeChargeCap1:
      additionalProperties: false
      description: RepaymentFeeChargeCap sets daily, weekly, monthly, yearly limits on
        the fees that are charged
      properties:
        CappingPeriod:
          $ref: "#/components/schemas/OBPeriod1Code"
        FeeCapAmount:
          description: Cap amount charged for a fee/charge (where it is charged in terms
            of an amount rather than a rate)
          nullable: true
          pattern: ^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$
          type: string
        FeeCapOccurrence:
          description: Fee/Charges are captured dependent on the number of occurrences
            rather than capped at a particular amount
          format: int32
          nullable: true
          type: integer
        FeeType:
          description: ""
          items:
            $ref: "#/components/schemas/OBFeeType1Code"
          type: array
        MinMaxType:
          $ref: "#/components/schemas/OBMinMaxType1Code"
        Notes:
          description: Free text for adding extra details for fee charge cap
          items:
            type: string
          nullable: true
          type: array
        OtherFeeType:
          description: ""
          items:
            $ref: "#/components/schemas/OBOtherCodeType1"
          nullable: true
          type: array
      required:
        - FeeType
        - MinMaxType
      type: object
    OBRepaymentFeeChargeDetail1:
      additionalProperties: false
      description: Details about specific fees/charges that are applied for repayment
      properties:
        ApplicationFrequency:
          $ref: "#/components/schemas/OBFeeFrequency1Code"
        CalculationFrequency:
          $ref: "#/components/schemas/OBFeeFrequency1Code"
        FeeAmount:
          description: Fee Amount charged for a fee/charge (where it is charged in terms
            of an amount rather than a rate)
          nullable: true
          pattern: ^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$
          type: string
        FeeRate:
          description: Rate charged for Fee/Charge (where it is charged in terms of a rate
            rather than an amount)
          nullable: true
          pattern: ^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$
          type: string
        FeeRateType:
          $ref: "#/components/schemas/OBInterestRateType1Code"
        FeeType:
          $ref: "#/components/schemas/OBFeeType1Code"
        NegotiableIndicator:
          description: Fee/charge which is usually negotiable rather than a fixed amount
          nullable: true
          type: boolean
        Notes:
          description: Optional additional notes to supplement the fee/charge details
          items:
            type: string
          nullable: true
          type: array
        OtherApplicationFrequency:
          $ref: "#/components/schemas/OBOtherCodeType1"
        OtherCalculationFrequency:
          $ref: "#/components/schemas/OBOtherCodeType1"
        OtherFeeRateType:
          $ref: "#/components/schemas/OBOtherCodeType1"
        OtherFeeType:
          $ref: "#/components/schemas/OBOtherFeeChargeDetailType"
      required:
        - ApplicationFrequency
        - CalculationFrequency
        - FeeType
      type: object
    OBRepaymentFeeCharges1:
      additionalProperties: false
      description: Applicable fee/charges for repayment such as prepayment, full early
        repayment or non repayment.
      properties:
        RepaymentFeeChargeCap:
          description: ""
          items:
            $ref: "#/components/schemas/OBRepaymentFeeChargeCap1"
          nullable: true
          type: array
        RepaymentFeeChargeDetail:
          description: ""
          items:
            $ref: "#/components/schemas/OBRepaymentFeeChargeDetail1"
          type: array
      required:
        - RepaymentFeeChargeDetail
      type: object
    OBRepaymentFrequency1Code:
      description: Repayment frequency
      enum:
        - SMDA
        - SMFL
        - SMFO
        - SMHY
        - SMMO
        - SMOT
        - SMQU
        - SMWE
        - SMYE
      type: string
    OBRepaymentHoliday1:
      additionalProperties: false
      description: Details of capital repayment holiday if any
      properties:
        MaxHolidayLength:
          description: The maximum length/duration of a Repayment Holiday
          format: int32
          nullable: true
          type: integer
        MaxHolidayPeriod:
          $ref: "#/components/schemas/OBPeriod1Code"
        Notes:
          description: Free text for adding details for repayment holiday
          items:
            type: string
          nullable: true
          type: array
      type: object
    OBRepaymentType1Code:
      description: Repayment type
      enum:
        - USBA
        - USBU
        - USCI
        - USCS
        - USER
        - USFA
        - USFB
        - USFI
        - USIO
        - USOT
        - USPF
        - USRW
        - USSL
      type: string
    OBRisk2:
      additionalProperties: false
      description: The Risk section is sent by the initiating party to the ASPSP. It
        is used to specify additional details for risk scoring for Account Info.
      type: object
    OBScheduledPayment3:
      additionalProperties: false
      description: ""
      properties:
        AccountId:
          description: A unique and immutable identifier used to identify the account
            resource. This identifier has no meaning to the account owner.
          maxLength: 40
          minLength: 1
          type: string
        CreditorAccount:
          $ref: "#/components/schemas/OBCashAccount5"
        CreditorAgent:
          $ref: "#/components/schemas/OBBranchAndFinancialInstitutionIdentification5"
        DebtorReference:
          description: A reference value provided by the PSU to the PISP while setting up
            the scheduled payment.
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
        InstructedAmount:
          $ref: "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
        Reference:
          description: "Unique reference, as assigned by the creditor, to unambiguously
            refer to the payment transaction.\r

            Usage: If available, the initiating party should provide
            this reference in the structured remittance information, to enable
            reconciliation by the creditor upon receipt of the amount of
            money.\r

            If the business context requires the use of a creditor
            reference or a payment remit identification, and only one identifier
            can be passed through the end-to-end chain, the creditor's reference
            or payment remittance identification should be quoted in the
            end-to-end transaction identification."
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
        ScheduledPaymentDateTime:
          description: "The date on which the scheduled payment will be made.All dates in
            the JSON payloads are represented in ISO 8601 date-time format.\r

            All date-time fields in responses must include the
            timezone.An example is below:\r

            2017-04-05T10:43:07+00:00"
          format: date-time
          type: string
        ScheduledPaymentId:
          description: A unique and immutable identifier used to identify the scheduled
            payment resource. This identifier has no meaning to the account
            owner.
          maxLength: 40
          minLength: 1
          nullable: true
          type: string
        ScheduledType:
          $ref: "#/components/schemas/OBExternalScheduleType1Code"
      required:
        - AccountId
        - InstructedAmount
        - ScheduledPaymentDateTime
        - ScheduledType
      type: object
    OBStandingOrder5:
      additionalProperties: false
      description: ""
      properties:
        AccountId:
          description: A unique and immutable identifier used to identify the account
            resource. This identifier has no meaning to the account owner.
          maxLength: 40
          minLength: 1
          type: string
        CreditorAccount:
          $ref: "#/components/schemas/OBCashAccount5"
        CreditorAgent:
          $ref: "#/components/schemas/OBBranchAndFinancialInstitutionIdentification5"
        FinalPaymentAmount:
          $ref: "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
        FinalPaymentDateTime:
          description: "The date on which the final payment for a Standing Order schedule
            will be made.All dates in the JSON payloads are represented in ISO
            8601 date-time format.\r

            All date-time fields in responses must include the
            timezone.An example is below:\r

            2017-04-05T10:43:07+00:00"
          format: date-time
          nullable: true
          type: string
        FirstPaymentAmount:
          $ref: "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
        FirstPaymentDateTime:
          description: "The date on which the first payment for a Standing Order schedule
            will be made.All dates in the JSON payloads are represented in ISO
            8601 date-time format.\r

            All date-time fields in responses must include the
            timezone.An example is below:\r

            2017-04-05T10:43:07+00:00"
          format: date-time
          nullable: true
          type: string
        Frequency:
          description: "Individual Definitions:\r

            NotKnown - Not Known\r

            EvryDay - Every day\r

            EvryWorkgDay - Every working day\r

            IntrvlDay - An interval specified in number of calendar
            days(02 to 31)\r

            IntrvlWkDay - An interval specified in weeks(01 to 09),
            and the day within the week(01 to 07)\r

            WkInMnthDay - A monthly interval, specifying the week of
            the month(01 to 05) and day within the week(01 to 07)\r

            IntrvlMnthDay - An interval specified in months(between
            01 to 06, 12, 24), specifying the day within the month(-05 to -01,
            01 to 31)\r

            QtrDay - Quarterly(either ENGLISH, SCOTTISH, or
            RECEIVED)\r

            ENGLISH = Paid on the 25th March, 24th June, 29th
            September and 25th December.\r

            SCOTTISH = Paid on the 2nd February, 15th May, 1st
            August and 11th November.\r

            RECEIVED = Paid on the 20th March, 19th June, 24th
            September and 20th December.\r

            Individual Patterns:\r

            NotKnown (ScheduleCode)\r

            EvryDay (ScheduleCode)\r

            EvryWorkgDay (ScheduleCode)\r

            IntrvlDay:NoOfDay (ScheduleCode + NoOfDay)\r

            IntrvlWkDay:IntervalInWeeks:DayInWeek(ScheduleCode +
            IntervalInWeeks + DayInWeek)\r

            WkInMnthDay:WeekInMonth:DayInWeek(ScheduleCode +
            WeekInMonth + DayInWeek)\r

            IntrvlMnthDay:IntervalInMonths:DayInMonth(ScheduleCode +
            IntervalInMonths + DayInMonth)\r

            QtrDay: + either(ENGLISH, SCOTTISH or RECEIVED)
            ScheduleCode + QuarterDay\r

            The regular expression for this element combines five
            smaller versions for each permitted pattern.To aid legibility - the
            components are presented individually here:\r

            NotKnown\r

            EvryDay\r

            EvryWorkgDay\r

            IntrvlDay:((0[2-9])|([1 - 2][0 - 9])|3[0-1])\r

            IntrvlWkDay:0[1-9]:0[1-7]\r

            WkInMnthDay:0[1-5]:0[1-7]\r

            IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12]
            [0-9]|3[01])\r

            QtrDay:(ENGLISH|SCOTTISH|RECEIVED)\r

            Full Regular Expression:\r

            ^(NotKnown)$|^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:(\
            (0[2-9])|([1 - 2][0 -
            9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[\
            1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12]
            [0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$"
          pattern: ^(NotKnown)$|^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
          type: string
        LastPaymentAmount:
          $ref: "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
        LastPaymentDateTime:
          description: "The date on which the last (most recent) payment for a Standing
            Order schedule was made.All dates in the JSON payloads are
            represented in ISO 8601 date-time format.\r

            All date-time fields in responses must include the
            timezone.An example is below:\r

            2017-04-05T10:43:07+00:00"
          format: date-time
          nullable: true
          type: string
        NextPaymentAmount:
          $ref: "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
        NextPaymentDateTime:
          description: "The date on which the next payment for a Standing Order schedule
            will be made.All dates in the JSON payloads are represented in ISO
            8601 date-time format.\r

            All date-time fields in responses must include the
            timezone.An example is below:\r

            2017-04-05T10:43:07+00:00"
          format: date-time
          nullable: true
          type: string
        NumberOfPayments:
          description: Number of the payments that will be made in completing this
            frequency sequence including any executed since the sequence start
            date.
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
        Reference:
          description: "Unique reference, as assigned by the creditor, to unambiguously
            refer to the payment transaction.\r

            Usage: If available, the initiating party should provide
            this reference in the structured remittance information, to enable
            reconciliation by the creditor upon receipt of the amount of
            money.\r

            If the business context requires the use of a creditor
            reference or a payment remit identification, and only one identifier
            can be passed through the end-to-end chain, the creditor's reference
            or payment remittance identification should be quoted in the
            end-to-end transaction identification."
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
        StandingOrderId:
          description: A unique and immutable identifier used to identify the standing
            order resource. This identifier has no meaning to the account owner.
          maxLength: 40
          minLength: 1
          nullable: true
          type: string
        StandingOrderStatusCode:
          $ref: "#/components/schemas/OBExternalStandingOrderStatus1Code"
        SupplementaryData:
          $ref: "#/components/schemas/OBSupplementaryData1"
      required:
        - AccountId
        - Frequency
      type: object
    OBStatement2:
      additionalProperties: false
      description: Provides further details on a statement resource.
      properties:
        AccountId:
          description: A unique and immutable identifier used to identify the account
            resource. This identifier has no meaning to the account owner.
          maxLength: 40
          minLength: 1
          type: string
        CreationDateTime:
          description: "Date and time at which the statement period starts.All dates in
            the JSON payloads are represented in ISO 8601 date-time format.\r

            All date-time fields in responses must include the
            timezone.An example is below:\r

            2017-04-05T10:43:07+00:00"
          format: date-time
          type: string
        EndDateTime:
          description: "Date and time at which the statement period starts.All dates in
            the JSON payloads are represented in ISO 8601 date-time format.\r

            All date-time fields in responses must include the
            timezone.An example is below:\r

            2017-04-05T10:43:07+00:00"
          format: date-time
          type: string
        StartDateTime:
          description: "Date and time at which the statement period starts.All dates in
            the JSON payloads are represented in ISO 8601 date-time format.\r

            All date-time fields in responses must include the
            timezone.An example is below:\r

            2017-04-05T10:43:07+00:00"
          format: date-time
          type: string
        StatementAmount:
          description: Set of elements used to provide details of a generic amount for the
            statement resource.
          items:
            $ref: "#/components/schemas/OBStatementAmount1"
          nullable: true
          type: array
        StatementBenefit:
          description: Set of elements used to provide details of a benefit or reward
            amount for the statement resource.
          items:
            $ref: "#/components/schemas/OBStatementBenefit1"
          nullable: true
          type: array
        StatementDateTime:
          description: Set of elements used to provide details of a generic date time for
            the statement resource.
          items:
            $ref: "#/components/schemas/OBStatementDateTime1"
          nullable: true
          type: array
        StatementDescription:
          description: Other descriptions that may be available for the statement resource.
          items:
            type: string
          nullable: true
          type: array
        StatementFee:
          description: Set of elements used to provide details of a fee for the statement
            resource.
          items:
            $ref: "#/components/schemas/OBStatementFee2"
          nullable: true
          type: array
        StatementId:
          description: Unique identifier for the statement resource within an servicing
            institution. This identifier is both unique and immutable.
          maxLength: 40
          minLength: 1
          nullable: true
          type: string
        StatementInterest:
          description: Set of elements used to provide details of a generic interest
            amount related to the statement resource.
          items:
            $ref: "#/components/schemas/OBStatementInterest2"
          nullable: true
          type: array
        StatementRate:
          description: Set of elements used to provide details of a generic rate related
            to the statement resource.
          items:
            $ref: "#/components/schemas/OBStatementRate1"
          nullable: true
          type: array
        StatementReference:
          description: Unique reference for the statement. This reference may be
            optionally populated if available.
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
        StatementValue:
          description: Set of elements used to provide details of a generic number value
            related to the statement resource.
          items:
            $ref: "#/components/schemas/OBStatementValue1"
          nullable: true
          type: array
        Type:
          $ref: "#/components/schemas/OBExternalStatementType1Code"
      required:
        - AccountId
        - CreationDateTime
        - EndDateTime
        - StartDateTime
        - Type
      type: object
    OBStatementAmount1:
      additionalProperties: false
      description: Set of elements used to provide details of a generic amount for the
        statement resource.
      properties:
        Amount:
          $ref: "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
        CreditDebitIndicator:
          $ref: "#/components/schemas/OBCreditDebitCode"
        Type:
          description: Amount type, in a coded form.
          example: "[ \"UK.OBIE.ArrearsClosingBalance\", \"UK.OBIE.AvailableBalance\",
            \"UK.OBIE.AverageBalanceWhenInCredit\",\r

            \"UK.OBIE.AverageBalanceWhenInDebit\",
            \"UK.OBIE.AverageDailyBalance\",
            \"UK.OBIE.BalanceTransferClosingBalance\",\r

            \"UK.OBIE.CashClosingBalance\",
            \"UK.OBIE.ClosingBalance\", \"UK.OBIE.CreditLimit\",
            \"UK.OBIE.CurrentPayment\",\r

            \"UK.OBIE.DirectDebitPaymentDue\",
            \"UK.OBIE.FSCSInsurance\", \"UK.OBIE.MinimumPaymentDue\",
            \"UK.OBIE.PendingTransactionsBalance\",\r

            \"UK.OBIE.PreviousClosingBalance\",
            \"UK.OBIE.PreviousPayment\", \"UK.OBIE.PurchaseClosingBalance\",
            \"UK.OBIE.StartingBalance\",\r

            \"UK.OBIE.TotalAdjustments\",
            \"UK.OBIE.TotalCashAdvances\", \"UK.OBIE.TotalCharges\",
            \"UK.OBIE.TotalCredits\", \"UK.OBIE.TotalDebits\",\r

            \"UK.OBIE.TotalPurchases\" ]"
          type: string
      required:
        - Amount
        - CreditDebitIndicator
        - Type
      type: object
    OBStatementBenefit1:
      additionalProperties: false
      description: Set of elements used to provide details of a benefit or reward
        amount for the statement resource.
      properties:
        Amount:
          $ref: "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
        Type:
          description: Benefit type, in a coded form.
          example: '[ "UK.OBIE.Cashback", "UK.OBIE.Insurance", "UK.OBIE.TravelDiscount",
            "UK.OBIE.TravelInsurance" ]'
          type: string
      required:
        - Amount
        - Type
      type: object
    OBStatementDateTime1:
      additionalProperties: false
      description: Set of elements used to provide details of a generic date time for
        the statement resource.
      properties:
        DateTime:
          description: "Date and time associated with the date time type.All dates in the
            JSON payloads are represented in ISO 8601 date-time format.\r

            All date-time fields in responses must include the
            timezone.An example is below:\r

            2017-04-05T10:43:07+00:00"
          format: date-time
          type: string
        Type:
          description: Date time type, in a coded form.
          example: "[ \"UK.OBIE.BalanceTransferPromoEnd\", \"UK.OBIE.DirectDebitDue\",
            \"UK.OBIE.LastPayment\", \"UK.OBIE.LastStatement\",\r

            \"UK.OBIE.NextStatement\", \"UK.OBIE.PaymentDue\",
            \"UK.OBIE.PurchasePromoEnd\", \"UK.OBIE.StatementAvailable\" ]"
          type: string
      required:
        - DateTime
        - Type
      type: object
    OBStatementFee2:
      additionalProperties: false
      description: Set of elements used to provide details of a fee for the statement
        resource.
      properties:
        Amount:
          $ref: "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
        CreditDebitIndicator:
          $ref: "#/components/schemas/OBCreditDebitCode"
        Description:
          description: Description that may be available for the statement fee.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        Frequency:
          description: How frequently the fee is applied to the Account.
          example: "[ \"UK.OBIE.ChargingPeriod\", \"UK.OBIE.PerTransactionAmount\",
            \"UK.OBIE.PerTransactionPercentage\",\r

            \"UK.OBIE.Quarterly\", \"UK.OBIE.StatementMonthly\",
            \"UK.OBIE.Weekly\" ]"
          nullable: true
          type: string
        Rate:
          description: Rate charged for Statement Fee (where it is charged in terms of a
            rate rather than an amount)
          format: double
          nullable: true
          type: number
        RateType:
          description: Description that may be available for the statement fee rate type.
          example: '[ "UK.OBIE.AER", "UK.OBIE.EAR" ]'
          nullable: true
          type: string
        Type:
          description: Fee type, in a coded form.
          example: "[ \"UK.OBIE.Annual\", \"UK.OBIE.BalanceTransfer\",
            \"UK.OBIE.CashAdvance\", \"UK.OBIE.CashTransaction\",
            \"UK.OBIE.ForeignCashTransaction\",\r

            \"UK.OBIE.ForeignTransaction\", \"UK.OBIE.Gambling\",
            \"UK.OBIE.LatePayment\", \"UK.OBIE.MoneyTransfer\",
            \"UK.OBIE.Monthly\", \"UK.OBIE.Overlimit\",\r

            \"UK.OBIE.PostalOrder\", \"UK.OBIE.PrizeEntry\",
            \"UK.OBIE.StatementCopy\", \"UK.OBIE.Total\" ]"
          type: string
      required:
        - Amount
        - CreditDebitIndicator
        - Type
      type: object
    OBStatementInterest2:
      additionalProperties: false
      description: Set of elements used to provide details of a generic interest
        amount related to the statement resource.
      properties:
        Amount:
          $ref: "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
        CreditDebitIndicator:
          $ref: "#/components/schemas/OBCreditDebitCode"
        Description:
          description: Description that may be available for the statement interest.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        Frequency:
          description: Specifies the statement fee type requested
          example: '[ "UK.OBIE.Daily", "UK.OBIE.HalfYearly", "UK.OBIE.Monthly",
            "UK.OBIE.PerStatementDate", "UK.OBIE.Quarterly", "UK.OBIE.Weekly",
            "UK.OBIE.Yearly" ]'
          nullable: true
          type: string
        Rate:
          description: Field representing a percentage (e.g. 0.05 represents 5% and 0.9525
            represents 95.25%). Note the number of decimal places may vary.
          format: double
          nullable: true
          type: number
        RateType:
          description: Description that may be available for the statement Interest rate
            type.
          example: '[ "UK.OBIE.BOEBaseRate", "UK.OBIE.FixedRate", "UK.OBIE.Gross",
            "UK.OBIE.LoanProviderBaseRate", "UK.OBIE.Net" ]'
          nullable: true
          type: string
        Type:
          description: Interest amount type, in a coded form.
          example: '[ "UK.OBIE.BalanceTransfer", "UK.OBIE.Cash", "UK.OBIE.EstimatedNext",
            "UK.OBIE.Purchase", "UK.OBIE.Total" ]'
          type: string
      required:
        - Amount
        - CreditDebitIndicator
        - Type
      type: object
    OBStatementRate1:
      additionalProperties: false
      description: Set of elements used to provide details of a generic rate related
        to the statement resource.
      properties:
        Rate:
          description: Rate associated with the statement rate type.
          pattern: ^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$
          type: string
        Type:
          description: Statement rate type, in a coded form.
          example: "[ \"UK.OBIE.AnnualBalanceTransfer\",
            \"UK.OBIE.AnnualBalanceTransferAfterPromo\",
            \"UK.OBIE.AnnualBalanceTransferPromo\",\r

            \"UK.OBIE.AnnualCash\", \"UK.OBIE.AnnualPurchase\",
            \"UK.OBIE.AnnualPurchaseAfterPromo\",
            \"UK.OBIE.AnnualPurchasePromo\",\r

            \"UK.OBIE.MonthlyBalanceTransfer\",
            \"UK.OBIE.MonthlyCash\", \"UK.OBIE.MonthlyPurchase\" ]"
          type: string
      required:
        - Rate
        - Type
      type: object
    OBStatementValue1:
      additionalProperties: false
      description: Set of elements used to provide details of a generic number value
        related to the statement resource.
      properties:
        Type:
          description: Statement value type, in a coded form.
          example: "[ \"UK.OBIE.AirMilesPoints\", \"UK.OBIE.AirMilesPointsBalance\",
            \"UK.OBIE.Credits\", \"UK.OBIE.Debits\", \"UK.OBIE.HotelPoints\",\r

            \"UK.OBIE.HotelPointsBalance\",
            \"UK.OBIE.RetailShoppingPoints\",
            \"UK.OBIE.RetailShoppingPointsBalance\" ]"
          type: string
        Value:
          description: Value associated with the statement value type.
          maxLength: 40
          minLength: 1
          type: string
      required:
        - Type
        - Value
      type: object
    OBSupplementaryData1:
      additionalProperties: false
      description: Additional information that can not be captured in the structured
        fields and/or any other specific block.
      type: object
    OBTariffType1Code:
      description: TariffType which defines the fee and charges.
      enum:
        - TTEL
        - TTMX
        - TTOT
      type: string
    OBTierBand1:
      additionalProperties: false
      description: Tier Band Details
      properties:
        AER:
          description: "The annual equivalent rate (AER) is interest that is calculated
            under the assumption that any interest paid is combined with the
            original balance and the next interest payment will be based on the
            slightly higher account balance. Overall, this means that interest
            can be compounded several times in a year depending on the number of
            times that interest payments are made.  Read more: Annual Equivalent
            Rate (AER)
            http://www.investopedia.com/terms/a/aer.asp#ixzz4gfR7IO1A"
          pattern: ^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$
          type: string
        ApplicationFrequency:
          $ref: "#/components/schemas/OBFrequency1Code"
        BankInterestRate:
          description: Bank Interest for the product
          nullable: true
          pattern: ^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$
          type: string
        BankInterestRateType:
          $ref: "#/components/schemas/OBInterestRateType1Code"
        CalculationFrequency:
          $ref: "#/components/schemas/OBFrequency1Code"
        DepositInterestAppliedCoverage:
          $ref: "#/components/schemas/OBTierBandType1Code"
        FixedVariableInterestRateType:
          $ref: "#/components/schemas/OBInterestFixedVariableType1Code"
        Identification:
          description: Unique and unambiguous identification of a  Tier Band for the
            Product.
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
        Notes:
          description: Optional additional notes to supplement the Tier Band details
          items:
            type: string
          nullable: true
          type: array
        OtherApplicationFrequency:
          $ref: "#/components/schemas/OBOtherCodeType1"
        OtherBankInterestType:
          $ref: "#/components/schemas/OBOtherCodeType1"
        OtherCalculationFrequency:
          $ref: "#/components/schemas/OBOtherCodeType1"
        TierValueMaximum:
          description: Maximum deposit value for which the credit interest tier applies.
          nullable: true
          pattern: ^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$
          type: string
        TierValueMinimum:
          description: Minimum deposit value for which the credit interest tier applies.
          pattern: ^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$
          type: string
      required:
        - AER
        - ApplicationFrequency
        - FixedVariableInterestRateType
        - TierValueMinimum
      type: object
    OBTierBandSet1:
      additionalProperties: false
      description: The group of tiers or bands for which credit interest can be applied.
      properties:
        CalculationMethod:
          $ref: "#/components/schemas/OBInterestCalculationMethod1Code"
        Destination:
          $ref: "#/components/schemas/OBInterestDestination1Code"
        Notes:
          description: Optional additional notes to supplement the Tier Band Set details
          items:
            type: string
          nullable: true
          type: array
        OtherCalculationMethod:
          $ref: "#/components/schemas/OBOtherCodeType1"
        OtherDestination:
          $ref: "#/components/schemas/OBOtherCodeType1"
        TierBand:
          description: Tier Band Details
          items:
            $ref: "#/components/schemas/OBTierBand1"
          type: array
        TierBandMethod:
          $ref: "#/components/schemas/OBTierBandType1Code"
      required:
        - Destination
        - TierBand
        - TierBandMethod
      type: object
    OBTierBandType1Code:
      description: The methodology of how credit interest is paid/applied. It can be:-
        1. Banded Interest rates are banded. i.e. Increasing rate on whole
        balance as balance increases. 2. Tiered Interest rates are tiered. i.e.
        increasing rate for each tier as balance increases, but interest paid on
        tier fixed for that tier and not on whole balance. 3. Whole The same
        interest rate is applied irrespective of the product holder's account
        balance
      enum:
        - INBA
        - INTI
        - INWH
      type: string
    OBTransaction6:
      additionalProperties: false
      description: Provides further details on an entry in the report.
      properties:
        AccountId:
          description: A unique and immutable identifier used to identify the account
            resource. This identifier has no meaning to the account owner.
          maxLength: 40
          minLength: 1
          type: string
        AddressLine:
          description: Information that locates and identifies a specific address for a
            transaction entry, that is presented in free format text
          maxLength: 70
          minLength: 1
          nullable: true
          type: string
        Amount:
          $ref: "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
        Balance:
          $ref: "#/components/schemas/OBTransactionCashBalance"
        BankTransactionCode:
          $ref: "#/components/schemas/OBBankTransactionCodeStructure1"
        BookingDateTime:
          description: "Date and time when a transaction entry is posted to an account on
            the account servicer's books.\r

            Usage: Booking date is the expected booking date, unless
            the status is booked, in which case it is the actual booking
            date.All dates in the JSON payloads are represented in ISO 8601
            date-time format.\r

            All date-time fields in responses must include the
            timezone.An example is below:\r

            2017-04-05T10:43:07+00:00"
          format: date-time
          type: string
        CardInstrument:
          $ref: "#/components/schemas/OBTransactionCardInstrument1"
        ChargeAmount:
          $ref: "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
        CreditDebitIndicator:
          $ref: "#/components/schemas/OBCreditDebitCode"
        CreditorAccount:
          $ref: "#/components/schemas/OBCashAccount6"
        CreditorAgent:
          $ref: "#/components/schemas/OBBranchAndFinancialInstitutionIdentification6"
        CurrencyExchange:
          $ref: "#/components/schemas/OBCurrencyExchange5"
        DebtorAccount:
          $ref: "#/components/schemas/OBCashAccount6"
        DebtorAgent:
          $ref: "#/components/schemas/OBBranchAndFinancialInstitutionIdentification6"
        MerchantDetails:
          $ref: "#/components/schemas/OBMerchantDetails1"
        ProprietaryBankTransactionCode:
          $ref: "#/components/schemas/ProprietaryBankTransactionCodeStructure1"
        StatementReference:
          description: Unique reference for the statement. This reference may be
            optionally populated if available.
          items:
            type: string
          nullable: true
          type: array
        Status:
          $ref: "#/components/schemas/OBEntryStatus1Code"
        SupplementaryData:
          $ref: "#/components/schemas/OBSupplementaryData1"
        TransactionId:
          description: Unique identifier for the transaction within an servicing
            institution. This identifier is both unique and immutable.
          maxLength: 210
          minLength: 1
          nullable: true
          type: string
        TransactionInformation:
          description: "Further details of the transaction.\r

            This is the transaction narrative, which is unstructured
            text."
          maxLength: 500
          minLength: 1
          nullable: true
          type: string
        TransactionMutability:
          $ref: "#/components/schemas/OBTransactionMutability1Code"
        TransactionReference:
          description: Unique reference for the transaction. This reference is optionally
            populated, and may as an example be the FPID in the Faster Payments
            context.
          maxLength: 210
          minLength: 1
          nullable: true
          type: string
        ValueDateTime:
          description: "Date and time at which assets become available to the account
            owner in case of a credit entry, or cease to be available to the
            account owner in case of a debit transaction entry.\r

            Usage: If transaction entry status is pending and value
            date is present, then the value date refers to an expected/requested
            value date.\r

            For transaction entries subject to availability/float
            and for which availability information is provided, the value date
            must not be used.In this case the availability component identifies
            the number of availability days.All dates in the JSON payloads are
            represented in ISO 8601 date-time format.\r

            All date-time fields in responses must include the
            timezone.An example is below:\r

            2017-04-05T10:43:07+00:00"
          format: date-time
          nullable: true
          type: string
      required:
        - AccountId
        - Amount
        - BookingDateTime
        - CreditDebitIndicator
        - Status
      type: object
    OBTransactionCardInstrument1:
      additionalProperties: false
      description: Set of elements to describe the card instrument used in the transaction.
      properties:
        AuthorisationType:
          $ref: "#/components/schemas/OBExternalCardAuthorisationType1Code"
        CardSchemeName:
          $ref: "#/components/schemas/OBExternalCardSchemeType1Code"
        Identification:
          description: Identification assigned by an institution to identify the card
            instrument used in the transaction. This identification is known by
            the account owner, and may be masked.
          maxLength: 34
          minLength: 1
          nullable: true
          type: string
        Name:
          description: Name of the cardholder using the card instrument.
          maxLength: 70
          minLength: 1
          nullable: true
          type: string
      required:
        - CardSchemeName
      type: object
    OBTransactionCashBalance:
      additionalProperties: false
      description: Set of elements used to define the balance as a numerical
        representation of the net increases and decreases in an account after a
        transaction entry is applied to the account.
      properties:
        Amount:
          $ref: "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
        CreditDebitIndicator:
          $ref: "#/components/schemas/OBCreditDebitCode"
        Type:
          $ref: "#/components/schemas/OBBalanceType1Code"
      required:
        - Amount
        - CreditDebitIndicator
        - Type
      type: object
    OBTransactionMutability1Code:
      description: ""
      enum:
        - Mutable
        - Immutable
      type: string
    ProprietaryBankTransactionCodeStructure1:
      additionalProperties: false
      description: Set of elements to fully identify a proprietary bank transaction code.
      properties:
        Code:
          description: Proprietary bank transaction code to identify the underlying
            transaction.
          maxLength: 35
          minLength: 1
          type: string
        Issuer:
          description: Identification of the issuer of the proprietary bank transaction
            code.
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
      required:
        - Code
      type: object
    Sandbox:
      additionalProperties: false
      description: Sandbox model
      properties:
        sandboxId:
          description: Sandbox id
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
        users:
          description: List of users
          items:
            $ref: "#/components/schemas/SandboxUser"
          nullable: true
          type: array
      required:
        - sandboxId
      type: object
    SandboxBankAccount:
      additionalProperties: false
      description: Sandbox bank account
      properties:
        beneficiaries:
          description: List of account's beneficiaries
          items:
            $ref: "#/components/schemas/SandboxBeneficiary"
          nullable: true
          type: array
        info:
          $ref: "#/components/schemas/SandboxBankAccountInfo"
        party:
          $ref: "#/components/schemas/SandboxParty"
        scheduledPayments:
          description: List of account's scheduled payments
          items:
            $ref: "#/components/schemas/SandboxScheduledPayment"
          nullable: true
          type: array
        standingOrders:
          description: List of account's standing orders
          items:
            $ref: "#/components/schemas/SandboxStandingOrder"
          nullable: true
          type: array
        statements:
          description: List of account's statements
          items:
            $ref: "#/components/schemas/SandboxStatement"
          nullable: true
          type: array
        transactions:
          description: List of account's transactions
          items:
            $ref: "#/components/schemas/SandboxTransaction"
          nullable: true
          type: array
      type: object
    SandboxBankAccountInfo:
      additionalProperties: false
      description: General account information
      properties:
        accountSubType:
          description: Account's sub-type (ChargeCard, CreditCard, CurrentAccount ...)
          type: string
        accountType:
          description: Account's type (Business, Personal)
          type: string
        alias:
          description: Account's alias
          maxLength: 70
          minLength: 1
          nullable: true
          type: string
        availableBalance:
          description: Account's available balance
          format: double
          type: number
        currency:
          description: Currency (EUR, USD ...)
          pattern: ^[A-Z]{3,3}$
          type: string
        description:
          description: Account's description
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
        iban:
          description: Account's IBAN
          type: string
        ledgerBalance:
          description: Account's ledger balance
          format: double
          type: number
        openingDate:
          description: Account's opening date
          format: date-time
          nullable: true
          type: string
      required:
        - accountSubType
        - accountType
        - currency
        - iban
      type: object
    SandboxBeneficiary:
      additionalProperties: false
      description: Beneficiary information
      properties:
        name:
          description: Beneficiary name
          nullable: true
          type: string
      type: object
    SandboxCard:
      additionalProperties: false
      description: Sandbox card
      properties:
        info:
          $ref: "#/components/schemas/SandboxCardInfo"
        party:
          $ref: "#/components/schemas/SandboxParty"
        statements:
          description: Card statements
          items:
            $ref: "#/components/schemas/SandboxStatement"
          nullable: true
          type: array
        transactions:
          description: Card transactions
          items:
            $ref: "#/components/schemas/SandboxTransaction"
          nullable: true
          type: array
      type: object
    SandboxCardInfo:
      additionalProperties: false
      description: Sandbox card information
      properties:
        availableBalance:
          description: Available balance
          format: double
          type: number
        description:
          description: Description
          nullable: true
          type: string
        expiration:
          description: Expiration date (05/2022)
          maxLength: 7
          minLength: 1
          type: string
        holderName:
          description: Holder name
          type: string
        ledgerBalance:
          description: Ledger balance
          format: double
          type: number
        number:
          description: Card number
          maxLength: 16
          minLength: 1
          type: string
        subType:
          description: Sub type
          nullable: true
          type: string
        type:
          description: Type
          nullable: true
          type: string
      required:
        - expiration
        - holderName
        - number
      type: object
    SandboxParty:
      additionalProperties: false
      description: Connected party information
      properties:
        id:
          description: Party id
          nullable: true
          type: string
        name:
          description: Name
          nullable: true
          type: string
      type: object
    SandboxRequest:
      additionalProperties: false
      description: Request to create a new sandbox
      properties:
        sandboxId:
          description: Sandbox Id
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
      required:
        - sandboxId
      type: object
    SandboxRetryCacheEntry:
      additionalProperties: false
      description: Keeps the number of calls without x-fapi-customer-ip-address header
        present
      properties:
        cacheKey:
          description: Cache key
          nullable: true
          type: string
        count:
          description: Number of retries ( up to 4 )
          format: int32
          type: integer
        expirationTimestamp:
          description: Expiration timestamp of the entry
          format: date-time
          type: string
      type: object
    SandboxScheduledPayment:
      additionalProperties: false
      description: Scheduled payment information
      properties:
        amount:
          description: Amount
          format: double
          type: number
        description:
          description: Scheduled payment's short description
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
        executionDate:
          description: Scheduled payment's execution date
          format: date-time
          nullable: true
          type: string
        senderReference:
          description: Debtor / Sender reference
          maxLength: 35
          minLength: 1
          nullable: true
          type: string
      type: object
    SandboxStandingOrder:
      additionalProperties: false
      description: Standing order information
      properties:
        amount:
          description: Standing order amount
          format: double
          type: number
        description:
          description: Standing order short description
          nullable: true
          type: string
        finalPaymentDate:
          description: Standing order final collection date
          format: date-time
          nullable: true
          type: string
        firstPaymentDate:
          description: Standing order first collection date
          format: date-time
          nullable: true
          type: string
        frequency:
          description: Standing order frequency
          maxLength: 35
          minLength: 1
          type: string
        lastPaymentDate:
          description: Standing order last executed payment date
          format: date-time
          nullable: true
          type: string
        nextPaymentDate:
          description: Standing order next collection date
          format: date-time
          nullable: true
          type: string
        status:
          description: Standing order status (Active, Inactive)
          nullable: true
          type: string
      required:
        - frequency
      type: object
    SandboxStatement:
      additionalProperties: false
      description: Statement information
      properties:
        month:
          description: Statement month
          format: int32
          type: integer
        number:
          description: Statement number
          nullable: true
          type: string
        year:
          description: Statement year
          format: int32
          type: integer
      type: object
    SandboxTransaction:
      additionalProperties: false
      description: Transaction information
      properties:
        accountingBalance:
          description: Balance
          format: double
          type: number
        amount:
          description: Amount
          format: double
          type: number
        bookingDateTime:
          description: Booking date time
          format: date-time
          type: string
        creditDebit:
          description: Credit / Debit indicator
          nullable: true
          type: string
        currency:
          description: Currency (EUR, USD ...)
          nullable: true
          type: string
        description:
          description: Description
          nullable: true
          type: string
        valueDateTime:
          description: Valeur
          format: date-time
          nullable: true
          type: string
      type: object
    SandboxUser:
      additionalProperties: false
      description: User data
      properties:
        accounts:
          description: List of accounts
          items:
            $ref: "#/components/schemas/SandboxBankAccount"
          nullable: true
          type: array
        cards:
          description: List of cards
          items:
            $ref: "#/components/schemas/SandboxCard"
          nullable: true
          type: array
        retryCacheEntries:
          description: Retry cache entries
          items:
            $ref: "#/components/schemas/SandboxRetryCacheEntry"
          nullable: true
          type: array
        userId:
          description: Connected user id
          nullable: true
          type: string
      type: object
  securitySchemes:
    Client-Id:
      description: Application's Id
      in: header
      name: Client-Id
      type: apiKey
