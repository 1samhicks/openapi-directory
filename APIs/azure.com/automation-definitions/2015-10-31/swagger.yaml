swagger: '2.0'
schemes:
  - https
host: management.azure.com
info:
  title: AutomationManagement
  version: '2015-10-31'
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/current/specification/automation/resource-manager/Microsoft.Automation/2015-10-31/definitions.json'
      version: '2.0'
  x-providerName: azure.com
  x-serviceName: automation-definitions
  x-tags:
    - Azure
    - Microsoft
consumes:
  - application/json
produces:
  - application/json
parameters:
  ApiVersionParameter:
    description: Client Api Version.
    in: query
    name: api-version
    required: true
    type: string
  ResourceGroupNameParameter:
    description: The resource group name.
    in: path
    name: resourceGroupName
    pattern: '^[-\w\._]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  SubscriptionIdParameter:
    description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
    in: path
    name: subscriptionId
    required: true
    type: string
paths: {}
definitions:
  Activity:
    description: Definition of the activity.
    properties:
      id:
        description: Gets or sets the id of the resource.
        type: string
      name:
        description: Gets the name of the activity.
        readOnly: true
        type: string
      properties:
        $ref: '#/definitions/ActivityProperties'
        description: Gets or sets the properties of the activity.
        x-ms-client-flatten: true
  ActivityListResult:
    description: The response model for the list activity operation.
    properties:
      nextLink:
        description: Gets or sets the next link.
        type: string
      value:
        description: Gets or sets a list of activities.
        items:
          $ref: '#/definitions/Activity'
        type: array
  ActivityOutputType:
    description: Definition of the activity output type.
    properties:
      name:
        description: Gets or sets the name of the activity output type.
        type: string
      type:
        description: Gets or sets the type of the activity output type.
        type: string
  ActivityParameter:
    description: Definition of the activity parameter.
    properties:
      isDynamic:
        description: Gets or sets a Boolean value that indicates true if the parameter is dynamic.
        type: boolean
      isMandatory:
        description: 'Gets or sets a Boolean value that indicates true if the parameter is required. If the value is false, the parameter is optional.'
        type: boolean
      name:
        description: Gets or sets the name of the activity parameter.
        type: string
      position:
        description: Gets or sets the position of the activity parameter.
        type: boolean
      type:
        description: Gets or sets the type of the activity parameter.
        type: string
      valueFromPipeline:
        description: Gets or sets a Boolean value that indicates true if the parameter can take values from the incoming pipeline objects. This setting is used if the cmdlet must access the complete input object. false indicates that the parameter cannot take values from the complete input object.
        type: boolean
      valueFromPipelineByPropertyName:
        description: 'Gets or sets a Boolean value that indicates true if the parameter can be filled from a property of the incoming pipeline object that has the same name as this parameter. false indicates that the parameter cannot be filled from the incoming pipeline object property with the same name. '
        type: boolean
      valueFromRemainingArguments:
        description: Gets or sets a Boolean value that indicates true if the cmdlet parameter accepts all the remaining command-line arguments that are associated with this parameter in the form of an array. false if the cmdlet parameter does not accept all the remaining argument values.
        type: boolean
  ActivityParameterSet:
    description: Definition of the activity parameter set.
    properties:
      name:
        description: Gets or sets the name of the activity parameter set.
        type: string
      parameters:
        description: Gets or sets the parameters of the activity parameter set.
        items:
          $ref: '#/definitions/ActivityParameter'
        type: array
  ActivityProperties:
    description: Properties of the activity.
    properties:
      creationTime:
        description: Gets or sets the creation time.
        format: date-time
        type: string
      definition:
        description: Gets or sets the user name of the activity.
        type: string
      description:
        description: Gets or sets the description.
        type: string
      lastModifiedTime:
        description: Gets or sets the last modified time.
        format: date-time
        type: string
      outputTypes:
        description: Gets or sets the output types of the activity.
        items:
          $ref: '#/definitions/ActivityOutputType'
        type: array
      parameterSets:
        description: Gets or sets the parameter sets of the activity.
        items:
          $ref: '#/definitions/ActivityParameterSet'
        type: array
  AdvancedSchedule:
    description: The properties of the create Advanced Schedule.
    properties:
      monthDays:
        description: Days of the month that the job should execute on. Must be between 1 and 31.
        items:
          format: int32
          type: integer
        type: array
      monthlyOccurrences:
        description: Occurrences of days within a month.
        items:
          $ref: '#/definitions/AdvancedScheduleMonthlyOccurrence'
        type: array
      weekDays:
        description: Days of the week that the job should execute on.
        items:
          type: string
        type: array
  AdvancedScheduleMonthlyOccurrence:
    description: The properties of the create advanced schedule monthly occurrence.
    properties:
      day:
        description: 'Day of the occurrence. Must be one of monday, tuesday, wednesday,thursday, friday, saturday, sunday.'
        enum:
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          - Sunday
        type: string
        x-ms-enum:
          modelAsString: true
          name: ScheduleDay
      occurrence:
        description: Occurrence of the week within the month. Must be between 1 and 5
        format: int32
        type: integer
  AgentRegistration:
    description: Definition of the agent registration infomration type.
    properties:
      dscMetaConfiguration:
        description: Gets or sets the dsc meta configuration.
        type: string
      endpoint:
        description: Gets or sets the dsc server endpoint.
        type: string
      id:
        description: Gets or sets the id.
        type: string
      keys:
        $ref: '#/definitions/AgentRegistrationKeys'
        description: Gets or sets the agent registration keys.
  AgentRegistrationKeys:
    description: Definition of the agent registration keys.
    properties:
      primary:
        description: Gets or sets the primary key.
        type: string
      secondary:
        description: Gets or sets the secondary key.
        type: string
  AgentRegistrationRegenerateKeyParameter:
    description: The parameters supplied to the regenerate keys operation.
    properties:
      keyName:
        description: Gets or sets the agent registration key name - Primary or Secondary.
        enum:
          - Primary
          - Secondary
        type: string
        x-ms-enum:
          modelAsString: true
          name: AgentRegistrationKeyName
      location:
        description: Gets or sets the location of the resource.
        type: string
      name:
        description: Gets or sets the name of the resource.
        type: string
      tags:
        additionalProperties:
          type: string
        description: Gets or sets the tags attached to the resource.
        type: object
    required:
      - keyName
  AutomationAccount:
    allOf:
      - $ref: '#/definitions/Resource'
    description: Definition of the automation account type.
    properties:
      etag:
        description: Gets or sets the etag of the resource.
        type: string
      properties:
        $ref: '#/definitions/AutomationAccountProperties'
        description: Gets or sets the automation account properties.
        x-ms-client-flatten: true
  AutomationAccountCreateOrUpdateParameters:
    description: The parameters supplied to the create or update automation account operation.
    properties:
      location:
        description: Gets or sets the location of the resource.
        type: string
      name:
        description: Gets or sets name of the resource.
        type: string
      properties:
        $ref: '#/definitions/AutomationAccountCreateOrUpdateProperties'
        description: Gets or sets account create or update properties.
        x-ms-client-flatten: true
      tags:
        additionalProperties:
          type: string
        description: Gets or sets the tags attached to the resource.
        type: object
  AutomationAccountCreateOrUpdateProperties:
    description: The parameters supplied to the create or update account properties.
    properties:
      sku:
        $ref: '#/definitions/Sku'
        description: Gets or sets account SKU.
  AutomationAccountListResult:
    description: The response model for the list account operation.
    properties:
      nextLink:
        description: Gets or sets the next link.
        type: string
      value:
        description: Gets or sets list of accounts.
        items:
          $ref: '#/definitions/AutomationAccount'
        type: array
  AutomationAccountProperties:
    description: Definition of the account property.
    properties:
      creationTime:
        description: Gets the creation time.
        format: date-time
        readOnly: true
        type: string
      description:
        description: Gets or sets the description.
        type: string
      lastModifiedBy:
        description: Gets or sets the last modified by.
        type: string
      lastModifiedTime:
        description: Gets the last modified time.
        format: date-time
        readOnly: true
        type: string
      sku:
        $ref: '#/definitions/Sku'
        description: Gets or sets the SKU of account.
      state:
        description: Gets status of account.
        enum:
          - Ok
          - Unavailable
          - Suspended
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: true
          name: AutomationAccountState
  AutomationAccountUpdateParameters:
    description: The parameters supplied to the update automation account operation.
    properties:
      location:
        description: Gets or sets the location of the resource.
        type: string
      name:
        description: Gets or sets the name of the resource.
        type: string
      properties:
        $ref: '#/definitions/AutomationAccountUpdateProperties'
        description: Gets or sets account update properties.
        x-ms-client-flatten: true
      tags:
        additionalProperties:
          type: string
        description: Gets or sets the tags attached to the resource.
        type: object
    required:
      - properties
  AutomationAccountUpdateProperties:
    description: The parameters supplied to the update account properties.
    properties:
      sku:
        $ref: '#/definitions/Sku'
        description: Gets or sets account SKU.
  Certificate:
    description: Definition of the certificate.
    properties:
      id:
        description: Gets the id of the resource.
        readOnly: true
        type: string
      name:
        description: Gets the name of the certificate.
        readOnly: true
        type: string
      properties:
        $ref: '#/definitions/CertificateProperties'
        description: Gets or sets the properties of the certificate.
        x-ms-client-flatten: true
  CertificateCreateOrUpdateParameters:
    description: The parameters supplied to the create or update or replace certificate operation.
    properties:
      name:
        description: Gets or sets the name of the certificate.
        type: string
      properties:
        $ref: '#/definitions/CertificateCreateOrUpdateProperties'
        description: Gets or sets the properties of the certificate.
        x-ms-client-flatten: true
    required:
      - name
      - properties
  CertificateCreateOrUpdateProperties:
    description: The properties of the create certificate operation.
    properties:
      base64Value:
        description: Gets or sets the base64 encoded value of the certificate.
        type: string
      description:
        description: Gets or sets the description of the certificate.
        type: string
      isExportable:
        description: Gets or sets the is exportable flag of the certificate.
        type: boolean
      thumbprint:
        description: Gets or sets the thumbprint of the certificate.
        type: string
    required:
      - base64Value
  CertificateListResult:
    description: The response model for the list certificate operation.
    properties:
      nextLink:
        description: Gets or sets the next link.
        type: string
      value:
        description: Gets or sets a list of certificates.
        items:
          $ref: '#/definitions/Certificate'
        type: array
  CertificateProperties:
    description: Properties of the certificate.
    properties:
      creationTime:
        description: Gets the creation time.
        format: date-time
        readOnly: true
        type: string
      description:
        description: Gets or sets the description.
        type: string
      expiryTime:
        description: Gets the expiry time of the certificate.
        format: date-time
        readOnly: true
        type: string
      isExportable:
        description: Gets the is exportable flag of the certificate.
        readOnly: true
        type: boolean
      lastModifiedTime:
        description: Gets the last modified time.
        format: date-time
        readOnly: true
        type: string
      thumbprint:
        description: Gets the thumbprint of the certificate.
        readOnly: true
        type: string
  CertificateUpdateParameters:
    description: The parameters supplied to the update certificate operation.
    properties:
      name:
        description: Gets or sets the name of the certificate.
        type: string
      properties:
        $ref: '#/definitions/CertificateUpdateProperties'
        description: Gets or sets the properties of the certificate.
        x-ms-client-flatten: true
    required:
      - name
  CertificateUpdateProperties:
    description: The properties of the update certificate operation
    properties:
      description:
        description: Gets or sets the description of the certificate.
        type: string
  Connection:
    description: Definition of the connection.
    properties:
      id:
        description: Gets the id of the resource.
        readOnly: true
        type: string
      name:
        description: Gets the name of the connection.
        readOnly: true
        type: string
      properties:
        $ref: '#/definitions/ConnectionProperties'
        description: Gets or sets the properties of the connection.
        x-ms-client-flatten: true
  ConnectionCreateOrUpdateParameters:
    description: The parameters supplied to the create or update connection operation.
    properties:
      name:
        description: Gets or sets the name of the connection.
        type: string
      properties:
        $ref: '#/definitions/ConnectionCreateOrUpdateProperties'
        description: Gets or sets the properties of the connection.
        x-ms-client-flatten: true
    required:
      - name
      - properties
  ConnectionCreateOrUpdateProperties:
    description: The properties of the create connection properties
    properties:
      connectionType:
        $ref: '#/definitions/ConnectionTypeAssociationProperty'
        description: Gets or sets the connectionType of the connection.
      description:
        description: Gets or sets the description of the connection.
        type: string
      fieldDefinitionValues:
        additionalProperties:
          type: string
        description: Gets or sets the field definition properties of the connection.
        type: object
    required:
      - connectionType
  ConnectionListResult:
    description: The response model for the list connection operation.
    properties:
      nextLink:
        description: Gets or sets the next link.
        type: string
      value:
        description: Gets or sets a list of connection.
        items:
          $ref: '#/definitions/Connection'
        type: array
  ConnectionProperties:
    description: Definition of the connection properties.
    properties:
      connectionType:
        $ref: '#/definitions/ConnectionTypeAssociationProperty'
        description: Gets or sets the connectionType of the connection.
      creationTime:
        description: Gets the creation time.
        format: date-time
        readOnly: true
        type: string
      description:
        description: Gets or sets the description.
        type: string
      fieldDefinitionValues:
        additionalProperties:
          type: string
        description: Gets the field definition values of the connection.
        readOnly: true
        type: object
      lastModifiedTime:
        description: Gets the last modified time.
        format: date-time
        readOnly: true
        type: string
  ConnectionType:
    description: Definition of the connection type.
    properties:
      id:
        description: Gets the id of the resource.
        readOnly: true
        type: string
      name:
        description: Gets the name of the connection type.
        readOnly: true
        type: string
      properties:
        $ref: '#/definitions/ConnectionTypeProperties'
        description: Gets or sets the properties of the connection type.
        x-ms-client-flatten: true
  ConnectionTypeAssociationProperty:
    description: The connection type property associated with the entity.
    properties:
      name:
        description: Gets or sets the name of the connection type.
        type: string
  ConnectionTypeCreateOrUpdateParameters:
    description: The parameters supplied to the create or update connection type operation.
    properties:
      name:
        description: Gets or sets the name of the connection type.
        type: string
      properties:
        $ref: '#/definitions/ConnectionTypeCreateOrUpdateProperties'
        description: Gets or sets the value of the connection type.
        x-ms-client-flatten: true
    required:
      - name
      - properties
  ConnectionTypeCreateOrUpdateProperties:
    description: The properties of the create connection type.
    properties:
      fieldDefinitions:
        additionalProperties:
          $ref: '#/definitions/FieldDefinition'
        description: Gets or sets the field definitions of the connection type.
        type: object
      isGlobal:
        description: Gets or sets a Boolean value to indicate if the connection type is global.
        type: boolean
    required:
      - fieldDefinitions
  ConnectionTypeListResult:
    description: The response model for the list connection type operation.
    properties:
      nextLink:
        description: Gets or sets the next link.
        type: string
      value:
        description: Gets or sets a list of connection types.
        items:
          $ref: '#/definitions/ConnectionType'
        type: array
  ConnectionTypeProperties:
    description: Properties of the connection type.
    properties:
      creationTime:
        description: Gets the creation time.
        format: date-time
        readOnly: true
        type: string
      description:
        description: Gets or sets the description.
        type: string
      fieldDefinitions:
        additionalProperties:
          $ref: '#/definitions/FieldDefinition'
        description: Gets the field definitions of the connection type.
        readOnly: true
        type: object
      isGlobal:
        description: Gets or sets a Boolean value to indicate if the connection type is global.
        type: boolean
      lastModifiedTime:
        description: Gets or sets the last modified time.
        format: date-time
        type: string
  ConnectionUpdateParameters:
    description: The parameters supplied to the update connection operation.
    properties:
      name:
        description: Gets or sets the name of the connection.
        type: string
      properties:
        $ref: '#/definitions/ConnectionUpdateProperties'
        description: Gets or sets the properties of the connection.
        x-ms-client-flatten: true
    required:
      - properties
  ConnectionUpdateProperties:
    description: The properties of the update connection operation.
    properties:
      description:
        description: Gets or sets the description of the connection.
        type: string
      fieldDefinitionValues:
        additionalProperties:
          type: string
        description: Gets or sets the field definition values of the connection.
        type: object
  ContentHash:
    description: Definition of the runbook property type.
    properties:
      algorithm:
        description: Gets or sets the content hash algorithm used to hash the content.
        type: string
      value:
        description: Gets or sets expected hash value of the content.
        type: string
    required:
      - algorithm
      - value
  ContentLink:
    description: Definition of the content link.
    properties:
      contentHash:
        $ref: '#/definitions/ContentHash'
        description: Gets or sets the hash.
      uri:
        description: Gets or sets the uri of the runbook content.
        type: string
      version:
        description: Gets or sets the version of the content.
        type: string
  ContentSource:
    description: Definition of the content source.
    properties:
      hash:
        $ref: '#/definitions/ContentHash'
        description: Gets or sets the hash.
      type:
        description: Gets or sets the content source type.
        enum:
          - embeddedContent
          - uri
        type: string
        x-ms-enum:
          modelAsString: true
          name: ContentSourceType
      value:
        description: Gets or sets the value of the content. This is based on the content source type.
        type: string
      version:
        description: Gets or sets the version of the content.
        type: string
  Credential:
    description: Definition of the credential.
    properties:
      id:
        description: Gets the id of the resource.
        readOnly: true
        type: string
      name:
        description: Gets the name of the credential.
        type: string
      properties:
        $ref: '#/definitions/CredentialProperties'
        description: Gets or sets the properties of the credential.
        x-ms-client-flatten: true
  CredentialCreateOrUpdateParameters:
    description: The parameters supplied to the create or update credential operation.
    properties:
      name:
        description: Gets or sets the name of the credential.
        type: string
      properties:
        $ref: '#/definitions/CredentialCreateOrUpdateProperties'
        description: Gets or sets the properties of the credential.
        x-ms-client-flatten: true
    required:
      - name
      - properties
  CredentialCreateOrUpdateProperties:
    description: The properties of the create cerdential operation.
    properties:
      description:
        description: Gets or sets the description of the credential.
        type: string
      password:
        description: Gets or sets the password of the credential.
        type: string
      userName:
        description: Gets or sets the user name of the credential.
        type: string
    required:
      - userName
      - password
  CredentialListResult:
    description: The response model for the list credential operation.
    properties:
      nextLink:
        description: Gets or sets the next link.
        type: string
      value:
        description: Gets or sets a list of credentials.
        items:
          $ref: '#/definitions/Credential'
        type: array
  CredentialProperties:
    description: Definition of the credential properties
    properties:
      creationTime:
        description: Gets the creation time.
        format: date-time
        readOnly: true
        type: string
      description:
        description: Gets or sets the description.
        type: string
      lastModifiedTime:
        description: Gets the last modified time.
        format: date-time
        readOnly: true
        type: string
      userName:
        description: Gets the user name of the credential.
        readOnly: true
        type: string
  CredentialUpdateParameters:
    description: The parameters supplied to the Update credential operation.
    properties:
      name:
        description: Gets or sets the name of the credential.
        type: string
      properties:
        $ref: '#/definitions/CredentialUpdateProperties'
        description: Gets or sets the properties of the variable.
        x-ms-client-flatten: true
    required:
      - name
  CredentialUpdateProperties:
    description: The properties of the Update credential
    properties:
      description:
        description: Gets or sets the description of the credential.
        type: string
      password:
        description: Gets or sets the password of the credential.
        type: string
      userName:
        description: Gets or sets the user name of the credential.
        type: string
  DscCompilationJob:
    description: Definition of the Dsc Compilation job.
    properties:
      id:
        description: Gets the id of the resource.
        readOnly: true
        type: string
      properties:
        $ref: '#/definitions/DscCompilationJobProperties'
        description: Gets or sets the properties of the Dsc Compilation job.
        x-ms-client-flatten: true
  DscCompilationJobCreateParameters:
    description: The parameters supplied to the create compilation job operation.
    properties:
      location:
        description: Gets or sets the location of the resource.
        type: string
      name:
        description: Gets or sets name of the resource.
        type: string
      properties:
        $ref: '#/definitions/DscCompilationJobCreateProperties'
        description: Gets or sets the list of compilation job properties.
        x-ms-client-flatten: true
      tags:
        additionalProperties:
          type: string
        description: Gets or sets the tags attached to the resource.
        type: object
    required:
      - properties
  DscCompilationJobCreateProperties:
    description: The parameters supplied to the create compilation job operation.
    properties:
      configuration:
        $ref: '#/definitions/DscConfigurationAssociationProperty'
        description: Gets or sets the configuration.
      newNodeConfigurationBuildVersionRequired:
        description: If a new build version of NodeConfiguration is required.
        type: boolean
      parameters:
        additionalProperties:
          type: string
        description: Gets or sets the parameters of the job.
        type: object
    required:
      - configuration
  DscCompilationJobListResult:
    description: The response model for the list job operation.
    properties:
      nextLink:
        description: Gets or sets the next link.
        type: string
      value:
        description: Gets or sets a list of Dsc Compilation jobs.
        items:
          $ref: '#/definitions/DscCompilationJob'
        type: array
  DscCompilationJobProperties:
    description: Definition of Dsc Compilation job properties.
    properties:
      configuration:
        $ref: '#/definitions/DscConfigurationAssociationProperty'
        description: Gets or sets the configuration.
      creationTime:
        description: Gets the creation time of the job.
        format: date-time
        readOnly: true
        type: string
      endTime:
        description: Gets the end time of the job.
        format: date-time
        readOnly: true
        type: string
      exception:
        description: Gets the exception of the job.
        readOnly: true
        type: string
      jobId:
        description: Gets the id of the job.
        format: uuid
        readOnly: true
        type: string
      lastModifiedTime:
        description: Gets the last modified time of the job.
        format: date-time
        readOnly: true
        type: string
      lastStatusModifiedTime:
        description: Gets the last status modified time of the job.
        format: date-time
        readOnly: true
        type: string
      parameters:
        additionalProperties:
          type: string
        description: Gets or sets the parameters of the job.
        type: object
      startTime:
        description: Gets the start time of the job.
        format: date-time
        readOnly: true
        type: string
      startedBy:
        description: Gets the compilation job started by.
        readOnly: true
        type: string
      status:
        description: Gets or sets the status of the job.
        enum:
          - New
          - Activating
          - Running
          - Completed
          - Failed
          - Stopped
          - Blocked
          - Suspended
          - Disconnected
          - Suspending
          - Stopping
          - Resuming
          - Removing
        type: string
        x-ms-enum:
          modelAsString: true
          name: JobStatus
      statusDetails:
        description: Gets or sets the status details of the job.
        type: string
  DscConfiguration:
    allOf:
      - $ref: '#/definitions/Resource'
    description: Definition of the configuration type.
    properties:
      etag:
        description: Gets or sets the etag of the resource.
        type: string
      properties:
        $ref: '#/definitions/DscConfigurationProperties'
        description: Gets or sets the configuration properties.
        x-ms-client-flatten: true
  DscConfigurationAssociationProperty:
    description: The Dsc configuration property associated with the entity.
    properties:
      name:
        description: Gets or sets the name of the Dsc configuration.
        type: string
  DscConfigurationCreateOrUpdateParameters:
    description: The parameters supplied to the create or update configuration operation.
    properties:
      location:
        description: Gets or sets the location of the resource.
        type: string
      name:
        description: Gets or sets name of the resource.
        type: string
      properties:
        $ref: '#/definitions/DscConfigurationCreateOrUpdateProperties'
        description: Gets or sets configuration create or update properties.
        x-ms-client-flatten: true
      tags:
        additionalProperties:
          type: string
        description: Gets or sets the tags attached to the resource.
        type: object
    required:
      - properties
  DscConfigurationCreateOrUpdateProperties:
    description: The properties to create or update configuration.
    properties:
      description:
        description: Gets or sets the description of the configuration.
        type: string
      logProgress:
        description: Gets or sets progress log option.
        type: boolean
      logVerbose:
        description: Gets or sets verbose log option.
        type: boolean
      parameters:
        additionalProperties:
          $ref: '#/definitions/DscConfigurationParameter'
        description: Gets or sets the configuration parameters.
        type: object
      source:
        $ref: '#/definitions/ContentSource'
        description: Gets or sets the source.
    required:
      - source
  DscConfigurationListResult:
    description: The response model for the list configuration operation.
    properties:
      nextLink:
        description: Gets or sets the next link.
        type: string
      value:
        description: Gets or sets a list of configurations.
        items:
          $ref: '#/definitions/DscConfiguration'
        type: array
  DscConfigurationParameter:
    description: Definition of the configuration parameter type.
    properties:
      defaultValue:
        description: Gets or sets the default value of parameter.
        type: string
      isMandatory:
        description: Gets or sets a Boolean value to indicate whether the parameter is madatory or not.
        type: boolean
      position:
        description: Get or sets the position of the parameter.
        format: int32
        type: integer
      type:
        description: Gets or sets the type of the parameter.
        type: string
  DscConfigurationProperties:
    description: Definition of the configuration property type.
    properties:
      creationTime:
        description: Gets or sets the creation time.
        format: date-time
        type: string
      description:
        description: Gets or sets the description.
        type: string
      jobCount:
        description: Gets or sets the job count of the configuration.
        format: int32
        type: integer
      lastModifiedTime:
        description: Gets or sets the last modified time.
        format: date-time
        type: string
      logVerbose:
        description: Gets or sets verbose log option.
        type: boolean
      parameters:
        additionalProperties:
          $ref: '#/definitions/DscConfigurationParameter'
        description: Gets or sets the configuration parameters.
        type: object
      provisioningState:
        description: Gets or sets the provisioning state of the configuration.
        enum:
          - Succeeded
        type: string
        x-ms-enum:
          modelAsString: false
          name: DscConfigurationProvisioningState
      source:
        $ref: '#/definitions/ContentSource'
        description: Gets or sets the source.
      state:
        description: Gets or sets the state of the configuration.
        enum:
          - New
          - Edit
          - Published
        type: string
        x-ms-enum:
          modelAsString: true
          name: DscConfigurationState
  DscMetaConfiguration:
    description: Definition of the DSC Meta Configuration.
    properties:
      actionAfterReboot:
        description: Gets or sets the ActionAfterReboot value of the meta configuration.
        type: string
      allowModuleOverwrite:
        description: Gets or sets the AllowModuleOverwrite value of the meta configuration.
        type: boolean
      certificateId:
        description: Gets or sets the CertificateId value of the meta configuration.
        type: string
      configurationMode:
        description: Gets or sets the ConfigurationMode value of the meta configuration.
        type: string
      configurationModeFrequencyMins:
        description: Gets or sets the ConfigurationModeFrequencyMins value of the meta configuration.
        format: int32
        type: integer
      rebootNodeIfNeeded:
        description: Gets or sets the RebootNodeIfNeeded value of the meta configuration.
        type: boolean
      refreshFrequencyMins:
        description: Gets or sets the RefreshFrequencyMins value of the meta configuration.
        format: int32
        type: integer
  DscNode:
    allOf:
      - $ref: '#/definitions/Resource'
    description: Definition of the dsc node type.
    properties:
      accountId:
        description: Gets or sets the account id of the node.
        type: string
      etag:
        description: Gets or sets the etag of the resource.
        type: string
      extensionHandler:
        description: Gets or sets the list of extensionHandler properties for a Node.
        items:
          $ref: '#/definitions/DscNodeExtensionHandlerAssociationProperty'
        type: array
      ip:
        description: Gets or sets the ip of the node.
        type: string
      lastSeen:
        description: Gets or sets the last seen time of the node.
        format: date-time
        type: string
      nodeConfiguration:
        $ref: '#/definitions/DscNodeConfigurationAssociationProperty'
        description: Gets or sets the configuration of the node.
      nodeId:
        description: Gets or sets the node id.
        type: string
      registrationTime:
        description: Gets or sets the registration time of the node.
        format: date-time
        type: string
      status:
        description: Gets or sets the status of the node.
        type: string
  DscNodeConfiguration:
    description: Definition of the dsc node configuration.
    properties:
      configuration:
        $ref: '#/definitions/DscConfigurationAssociationProperty'
        description: Gets or sets the configuration of the node.
      creationTime:
        description: Gets or sets creation time.
        format: date-time
        type: string
      id:
        description: Gets or sets the id of the resource.
        type: string
      lastModifiedTime:
        description: Gets or sets the last modified time.
        format: date-time
        type: string
      name:
        description: Gets or sets the node configuration name.
        type: string
  DscNodeConfigurationAssociationProperty:
    description: The dsc nodeconfiguration property associated with the entity.
    properties:
      name:
        description: Gets or sets the name of the dsc nodeconfiguration.
        type: string
  DscNodeConfigurationCreateOrUpdateParameters:
    description: The parameters supplied to the create or update node configuration operation.
    properties:
      configuration:
        $ref: '#/definitions/DscConfigurationAssociationProperty'
        description: Gets or sets the configuration of the node.
      name:
        description: Gets or sets the type of the parameter.
        type: string
      newNodeConfigurationBuildVersionRequired:
        description: If a new build version of NodeConfiguration is required.
        type: boolean
      source:
        $ref: '#/definitions/ContentSource'
        description: Gets or sets the source.
    required:
      - source
      - name
      - configuration
  DscNodeConfigurationListResult:
    description: The response model for the list job operation.
    properties:
      nextLink:
        description: Gets or sets the next link.
        type: string
      value:
        description: Gets or sets a list of Dsc node configurations.
        items:
          $ref: '#/definitions/DscNodeConfiguration'
        type: array
  DscNodeExtensionHandlerAssociationProperty:
    description: The dsc extensionHandler property associated with the node
    properties:
      name:
        description: Gets or sets the name of the extension handler.
        type: string
      version:
        description: Gets or sets the version of the extension handler.
        type: string
  DscNodeListResult:
    description: The response model for the list dsc nodes operation.
    properties:
      nextLink:
        description: Gets or sets the next link.
        type: string
      value:
        description: Gets or sets a list of dsc nodes.
        items:
          $ref: '#/definitions/DscNode'
        type: array
  DscNodeReport:
    description: Definition of the dsc node report type.
    properties:
      configurationVersion:
        description: Gets or sets the configurationVersion of the node report.
        type: string
      endTime:
        description: Gets or sets the end time of the node report.
        format: date-time
        type: string
      errors:
        description: Gets or sets the errors for the node report.
        items:
          $ref: '#/definitions/DscReportError'
        type: array
      hostName:
        description: Gets or sets the hostname of the node that sent the report.
        type: string
      iPV4Addresses:
        description: Gets or sets the IPv4 address of the node that sent the report.
        items:
          type: string
        type: array
      iPV6Addresses:
        description: Gets or sets the IPv6 address of the node that sent the report.
        items:
          type: string
        type: array
      id:
        description: Gets or sets the id.
        type: string
      lastModifiedTime:
        description: Gets or sets the lastModifiedTime of the node report.
        format: date-time
        type: string
      metaConfiguration:
        $ref: '#/definitions/DscMetaConfiguration'
        description: Gets or sets the metaConfiguration of the node at the time of the report.
      numberOfResources:
        description: Gets or sets the number of resource in the node report.
        format: int32
        type: integer
      rawErrors:
        description: Gets or sets the unparsed errors for the node report.
        type: string
      rebootRequested:
        description: Gets or sets the rebootRequested of the node report.
        type: string
      refreshMode:
        description: Gets or sets the refreshMode of the node report.
        type: string
      reportFormatVersion:
        description: Gets or sets the reportFormatVersion of the node report.
        type: string
      reportId:
        description: Gets or sets the id of the node report.
        type: string
      resources:
        description: Gets or sets the resource for the node report.
        items:
          $ref: '#/definitions/DscReportResource'
        type: array
      startTime:
        description: Gets or sets the start time of the node report.
        format: date-time
        type: string
      status:
        description: Gets or sets the status of the node report.
        type: string
      type:
        description: Gets or sets the type of the node report.
        type: string
  DscNodeReportListResult:
    description: The response model for the list dsc nodes operation.
    properties:
      nextLink:
        description: Gets or sets the next link.
        type: string
      value:
        description: Gets or sets a list of dsc node reports.
        items:
          $ref: '#/definitions/DscNodeReport'
        type: array
  DscNodeUpdateParameters:
    description: The parameters supplied to the update dsc node operation.
    properties:
      nodeConfiguration:
        $ref: '#/definitions/DscNodeConfigurationAssociationProperty'
        description: Gets or sets the configuration of the node.
      nodeId:
        description: Gets or sets the id of the dsc node.
        type: string
  DscReportError:
    description: Definition of the dsc node report error type.
    properties:
      errorCode:
        description: Gets or sets the error code.
        type: string
      errorDetails:
        description: Gets or sets the error details.
        type: string
      errorMessage:
        description: Gets or sets the error message.
        type: string
      errorSource:
        description: Gets or sets the source of the error.
        type: string
      locale:
        description: Gets or sets the locale of the error.
        type: string
      resourceId:
        description: Gets or sets the resource ID which generated the error.
        type: string
  DscReportResource:
    description: Definition of the DSC Report Resource.
    properties:
      dependsOn:
        description: Gets or sets the Resource Navigation values for resources the resource depends on.
        items:
          $ref: '#/definitions/DscReportResourceNavigation'
        type: array
      durationInSeconds:
        description: Gets or sets the duration in seconds for the resource.
        format: double
        type: number
      error:
        description: Gets or sets the error of the resource.
        type: string
      moduleName:
        description: Gets or sets the module name of the resource.
        type: string
      moduleVersion:
        description: Gets or sets the module version of the resource.
        type: string
      resourceId:
        description: Gets or sets the ID of the resource.
        type: string
      resourceName:
        description: Gets or sets the name of the resource.
        type: string
      sourceInfo:
        description: Gets or sets the source info of the resource.
        type: string
      startDate:
        description: Gets or sets the start date of the resource.
        format: date-time
        type: string
      status:
        description: Gets or sets the status of the resource.
        type: string
  DscReportResourceNavigation:
    description: Navigation for DSC Report Resource.
    properties:
      resourceId:
        description: Gets or sets the ID of the resource to navigate to.
        type: string
  ErrorResponse:
    description: Error response of an operation failure
    properties:
      code:
        description: Error code
        type: string
      message:
        description: Error message indicating why the operation failed.
        type: string
    type: object
  FieldDefinition:
    description: Definition of the connection fields.
    properties:
      isEncrypted:
        description: Gets or sets the isEncrypted flag of the connection field definition.
        type: boolean
      isOptional:
        description: Gets or sets the isOptional flag of the connection field definition.
        type: boolean
      type:
        description: Gets or sets the type of the connection field definition.
        type: string
    required:
      - type
  HybridRunbookWorker:
    description: Definition of hybrid runbook worker.
    properties:
      ip:
        description: Gets or sets the assigned machine IP address.
        type: string
      name:
        description: Gets or sets the worker machine name.
        type: string
      registrationTime:
        description: Gets or sets the registration time of the worker machine.
        format: date-time
        type: string
  HybridRunbookWorkerGroup:
    description: Definition of hybrid runbook worker group.
    properties:
      credential:
        $ref: '#/definitions/RunAsCredentialAssociationProperty'
        description: Sets the credential of a worker group.
      hybridRunbookWorkers:
        description: Gets or sets the list of hybrid runbook workers.
        items:
          $ref: '#/definitions/HybridRunbookWorker'
        type: array
      id:
        description: Gets or sets the id of the resource.
        type: string
      name:
        description: Gets or sets the name of the group.
        type: string
  HybridRunbookWorkerGroupUpdateParameters:
    description: Parameters supplied to the update operation.
    properties:
      credential:
        $ref: '#/definitions/RunAsCredentialAssociationProperty'
        description: Sets the credential of a worker group.
  HybridRunbookWorkerGroupsListResult:
    description: The response model for the list hybrid runbook worker groups.
    properties:
      nextLink:
        description: Gets or sets the next link.
        type: string
      value:
        description: Gets or sets a list of hybrid runbook worker groups.
        items:
          $ref: '#/definitions/HybridRunbookWorkerGroup'
        type: array
  Job:
    description: Definition of the job.
    properties:
      id:
        description: Gets or sets the id of the resource.
        type: string
      properties:
        description: Definition of job properties.
        properties:
          creationTime:
            description: Gets or sets the creation time of the job.
            format: date-time
            type: string
          endTime:
            description: Gets or sets the end time of the job.
            format: date-time
            type: string
          exception:
            description: Gets or sets the exception of the job.
            type: string
          jobId:
            description: Gets or sets the id of the job.
            format: uuid
            type: string
          lastModifiedTime:
            description: Gets or sets the last modified time of the job.
            format: date-time
            type: string
          lastStatusModifiedTime:
            description: Gets or sets the last status modified time of the job.
            format: date-time
            type: string
          parameters:
            additionalProperties:
              type: string
            description: Gets or sets the parameters of the job.
            type: object
          runOn:
            description: Gets or sets the runOn which specifies the group name where the job is to be executed.
            type: string
          runbook:
            description: The runbook property associated with the entity.
            properties:
              name:
                description: Gets or sets the name of the runbook.
                type: string
          startTime:
            description: Gets or sets the start time of the job.
            format: date-time
            type: string
          startedBy:
            description: Gets or sets the job started by.
            type: string
          status:
            description: Gets or sets the status of the job.
            enum:
              - New
              - Activating
              - Running
              - Completed
              - Failed
              - Stopped
              - Blocked
              - Suspended
              - Disconnected
              - Suspending
              - Stopping
              - Resuming
              - Removing
            type: string
            x-ms-enum:
              modelAsString: true
              name: JobStatus
          statusDetails:
            description: Gets or sets the status details of the job.
            type: string
  JobCreateParameters:
    description: The parameters supplied to the create job operation.
    properties:
      location:
        description: Gets or sets the location of the resource.
        type: string
      name:
        description: Gets or sets name of the resource.
        type: string
      properties:
        description: The parameters supplied to the create job operation.
        properties:
          parameters:
            additionalProperties:
              type: string
            description: Gets or sets the parameters of the job.
            type: object
          runOn:
            description: Gets or sets the runOn which specifies the group name where the job is to be executed.
            type: string
          runbook:
            description: The runbook property associated with the entity.
            properties:
              name:
                description: Gets or sets the name of the runbook.
                type: string
        required:
          - runbook
      tags:
        additionalProperties:
          type: string
        description: Gets or sets the tags attached to the resource.
        type: object
    required:
      - properties
  JobCreateProperties:
    description: The parameters supplied to the create job operation.
    properties:
      parameters:
        additionalProperties:
          type: string
        description: Gets or sets the parameters of the job.
        type: object
      runOn:
        description: Gets or sets the runOn which specifies the group name where the job is to be executed.
        type: string
      runbook:
        description: The runbook property associated with the entity.
        properties:
          name:
            description: Gets or sets the name of the runbook.
            type: string
    required:
      - runbook
  JobListResult:
    description: The response model for the list job operation.
    properties:
      nextLink:
        description: Gets or sets the next link.
        type: string
      value:
        description: Gets or sets a list of jobs.
        items:
          description: Definition of the job.
          properties:
            id:
              description: Gets or sets the id of the resource.
              type: string
            properties:
              description: Definition of job properties.
              properties:
                creationTime:
                  description: Gets or sets the creation time of the job.
                  format: date-time
                  type: string
                endTime:
                  description: Gets or sets the end time of the job.
                  format: date-time
                  type: string
                exception:
                  description: Gets or sets the exception of the job.
                  type: string
                jobId:
                  description: Gets or sets the id of the job.
                  format: uuid
                  type: string
                lastModifiedTime:
                  description: Gets or sets the last modified time of the job.
                  format: date-time
                  type: string
                lastStatusModifiedTime:
                  description: Gets or sets the last status modified time of the job.
                  format: date-time
                  type: string
                parameters:
                  additionalProperties:
                    type: string
                  description: Gets or sets the parameters of the job.
                  type: object
                runOn:
                  description: Gets or sets the runOn which specifies the group name where the job is to be executed.
                  type: string
                runbook:
                  description: The runbook property associated with the entity.
                  properties:
                    name:
                      description: Gets or sets the name of the runbook.
                      type: string
                startTime:
                  description: Gets or sets the start time of the job.
                  format: date-time
                  type: string
                startedBy:
                  description: Gets or sets the job started by.
                  type: string
                status:
                  description: Gets or sets the status of the job.
                  enum:
                    - New
                    - Activating
                    - Running
                    - Completed
                    - Failed
                    - Stopped
                    - Blocked
                    - Suspended
                    - Disconnected
                    - Suspending
                    - Stopping
                    - Resuming
                    - Removing
                  type: string
                  x-ms-enum:
                    modelAsString: true
                    name: JobStatus
                statusDetails:
                  description: Gets or sets the status details of the job.
                  type: string
        type: array
  JobProperties:
    description: Definition of job properties.
    properties:
      creationTime:
        description: Gets or sets the creation time of the job.
        format: date-time
        type: string
      endTime:
        description: Gets or sets the end time of the job.
        format: date-time
        type: string
      exception:
        description: Gets or sets the exception of the job.
        type: string
      jobId:
        description: Gets or sets the id of the job.
        format: uuid
        type: string
      lastModifiedTime:
        description: Gets or sets the last modified time of the job.
        format: date-time
        type: string
      lastStatusModifiedTime:
        description: Gets or sets the last status modified time of the job.
        format: date-time
        type: string
      parameters:
        additionalProperties:
          type: string
        description: Gets or sets the parameters of the job.
        type: object
      runOn:
        description: Gets or sets the runOn which specifies the group name where the job is to be executed.
        type: string
      runbook:
        description: The runbook property associated with the entity.
        properties:
          name:
            description: Gets or sets the name of the runbook.
            type: string
      startTime:
        description: Gets or sets the start time of the job.
        format: date-time
        type: string
      startedBy:
        description: Gets or sets the job started by.
        type: string
      status:
        description: Gets or sets the status of the job.
        enum:
          - New
          - Activating
          - Running
          - Completed
          - Failed
          - Stopped
          - Blocked
          - Suspended
          - Disconnected
          - Suspending
          - Stopping
          - Resuming
          - Removing
        type: string
        x-ms-enum:
          modelAsString: true
          name: JobStatus
      statusDetails:
        description: Gets or sets the status details of the job.
        type: string
  JobSchedule:
    description: Definition of the job schedule.
    properties:
      id:
        description: Gets or sets the id of the resource.
        type: string
      properties:
        $ref: '#/definitions/JobScheduleProperties'
        description: Gets or sets the properties of the job schedule.
        x-ms-client-flatten: true
  JobScheduleCreateParameters:
    description: The parameters supplied to the create job schedule operation.
    properties:
      properties:
        $ref: '#/definitions/JobScheduleCreateProperties'
        description: Gets or sets the list of job schedule properties.
        x-ms-client-flatten: true
    required:
      - properties
  JobScheduleCreateProperties:
    description: The parameters supplied to the create job schedule operation.
    properties:
      parameters:
        additionalProperties:
          type: string
        description: Gets or sets a list of job properties.
        type: object
      runOn:
        description: Gets or sets the hybrid worker group that the scheduled job should run on.
        type: string
      runbook:
        $ref: '#/definitions/RunbookAssociationProperty'
        description: Gets or sets the runbook.
      schedule:
        $ref: '#/definitions/ScheduleAssociationProperty'
        description: Gets or sets the schedule.
    required:
      - schedule
      - runbook
  JobScheduleListResult:
    description: The response model for the list job schedule operation.
    properties:
      nextLink:
        description: Gets or sets the next link.
        type: string
      value:
        description: Gets or sets a list of job schedules.
        items:
          $ref: '#/definitions/JobSchedule'
        type: array
  JobScheduleProperties:
    description: Definition of job schedule parameters.
    properties:
      jobScheduleId:
        description: Gets or sets the id of job schedule.
        type: string
      parameters:
        additionalProperties:
          type: string
        description: Gets or sets the parameters of the job schedule.
        type: object
      runOn:
        description: Gets or sets the hybrid worker group that the scheduled job should run on.
        type: string
      runbook:
        $ref: '#/definitions/RunbookAssociationProperty'
        description: Gets or sets the runbook.
      schedule:
        $ref: '#/definitions/ScheduleAssociationProperty'
        description: Gets or sets the schedule.
  JobStream:
    description: Definition of the job stream.
    properties:
      id:
        description: Gets or sets the id of the resource.
        type: string
      properties:
        description: Definition of the job stream.
        properties:
          jobStreamId:
            description: Gets or sets the id of the job stream.
            type: string
          streamText:
            description: Gets or sets the stream text.
            type: string
          streamType:
            description: Gets or sets the stream type.
            enum:
              - Progress
              - Output
              - Warning
              - Error
              - Debug
              - Verbose
              - Any
            type: string
            x-ms-enum:
              modelAsString: true
              name: JobStreamType
          summary:
            description: Gets or sets the summary.
            type: string
          time:
            description: Gets or sets the creation time of the job.
            format: date-time
            type: string
          value:
            additionalProperties:
              type: object
            description: Gets or sets the values of the job stream.
            type: object
        x-ms-client-flatten: true
  JobStreamListResult:
    description: The response model for the list job stream operation.
    properties:
      nextLink:
        description: Gets or sets the next link.
        type: string
      value:
        description: A list of job streams.
        items:
          description: Definition of the job stream.
          properties:
            id:
              description: Gets or sets the id of the resource.
              type: string
            properties:
              description: Definition of the job stream.
              properties:
                jobStreamId:
                  description: Gets or sets the id of the job stream.
                  type: string
                streamText:
                  description: Gets or sets the stream text.
                  type: string
                streamType:
                  description: Gets or sets the stream type.
                  enum:
                    - Progress
                    - Output
                    - Warning
                    - Error
                    - Debug
                    - Verbose
                    - Any
                  type: string
                  x-ms-enum:
                    modelAsString: true
                    name: JobStreamType
                summary:
                  description: Gets or sets the summary.
                  type: string
                time:
                  description: Gets or sets the creation time of the job.
                  format: date-time
                  type: string
                value:
                  additionalProperties:
                    type: object
                  description: Gets or sets the values of the job stream.
                  type: object
              x-ms-client-flatten: true
        type: array
  JobStreamProperties:
    description: Definition of the job stream.
    properties:
      jobStreamId:
        description: Gets or sets the id of the job stream.
        type: string
      streamText:
        description: Gets or sets the stream text.
        type: string
      streamType:
        description: Gets or sets the stream type.
        enum:
          - Progress
          - Output
          - Warning
          - Error
          - Debug
          - Verbose
          - Any
        type: string
        x-ms-enum:
          modelAsString: true
          name: JobStreamType
      summary:
        description: Gets or sets the summary.
        type: string
      time:
        description: Gets or sets the creation time of the job.
        format: date-time
        type: string
      value:
        additionalProperties:
          type: object
        description: Gets or sets the values of the job stream.
        type: object
    x-ms-client-flatten: true
  Module:
    allOf:
      - $ref: '#/definitions/Resource'
    description: Definition of the module type.
    properties:
      etag:
        description: Gets or sets the etag of the resource.
        type: string
      properties:
        $ref: '#/definitions/ModuleProperties'
        description: Gets or sets the module properties.
        x-ms-client-flatten: true
  ModuleCreateOrUpdateParameters:
    description: The parameters supplied to the create or update module operation.
    properties:
      location:
        description: Gets or sets the location of the resource.
        type: string
      name:
        description: Gets or sets name of the resource.
        type: string
      properties:
        $ref: '#/definitions/ModuleCreateOrUpdateProperties'
        description: Gets or sets the module create properties.
        x-ms-client-flatten: true
      tags:
        additionalProperties:
          type: string
        description: Gets or sets the tags attached to the resource.
        type: object
    required:
      - properties
  ModuleCreateOrUpdateProperties:
    description: The parameters supplied to the create or update module properties.
    properties:
      contentLink:
        $ref: '#/definitions/ContentLink'
        description: Gets or sets the module content link.
    required:
      - contentLink
  ModuleErrorInfo:
    description: Definition of the module error info type.
    properties:
      code:
        description: Gets or sets the error code.
        type: string
      message:
        description: Gets or sets the error message.
        type: string
  ModuleListResult:
    description: The response model for the list module operation.
    properties:
      nextLink:
        description: Gets or sets the next link.
        type: string
      value:
        description: Gets or sets a list of modules.
        items:
          $ref: '#/definitions/Module'
        type: array
  ModuleProperties:
    description: Definition of the module property type.
    properties:
      activityCount:
        description: Gets or sets the activity count of the module.
        format: int32
        type: integer
      contentLink:
        $ref: '#/definitions/ContentLink'
        description: Gets or sets the contentLink of the module.
      creationTime:
        description: Gets or sets the creation time.
        format: date-time
        type: string
      description:
        description: Gets or sets the description.
        type: string
      error:
        $ref: '#/definitions/ModuleErrorInfo'
        description: Gets or sets the error info of the module.
      isGlobal:
        description: Gets or sets the isGlobal flag of the module.
        type: boolean
      lastModifiedTime:
        description: Gets or sets the last modified time.
        format: date-time
        type: string
      provisioningState:
        description: Gets or sets the provisioning state of the module.
        enum:
          - Created
          - Creating
          - StartingImportModuleRunbook
          - RunningImportModuleRunbook
          - ContentRetrieved
          - ContentDownloaded
          - ContentValidated
          - ConnectionTypeImported
          - ContentStored
          - ModuleDataStored
          - ActivitiesStored
          - ModuleImportRunbookComplete
          - Succeeded
          - Failed
          - Cancelled
          - Updating
        type: string
        x-ms-enum:
          modelAsString: false
          name: ModuleProvisioningState
      sizeInBytes:
        description: Gets or sets the size in bytes of the module.
        format: int64
        type: integer
      version:
        description: Gets or sets the version of the module.
        type: string
  ModuleUpdateParameters:
    description: The parameters supplied to the update module operation.
    properties:
      location:
        description: Gets or sets the location of the resource.
        type: string
      name:
        description: Gets or sets name of the resource.
        type: string
      properties:
        $ref: '#/definitions/ModuleUpdateProperties'
        description: Gets or sets the module update properties.
        x-ms-client-flatten: true
      tags:
        additionalProperties:
          type: string
        description: Gets or sets the tags attached to the resource.
        type: object
    required:
      - properties
  ModuleUpdateProperties:
    description: The parameters supplied to the update properties.
    properties:
      contentLink:
        $ref: '#/definitions/ContentLink'
        description: Gets or sets the module content link.
  Operation:
    description: Automation REST API operation
    properties:
      display:
        description: 'Provider, Resource and Operation values'
        properties:
          operation:
            description: 'Operation type: Read, write, delete, etc.'
            type: string
          provider:
            description: 'Service provider: Microsoft.Automation'
            type: string
          resource:
            description: 'Resource on which the operation is performed: Runbooks, Jobs etc.'
            type: string
      name:
        description: 'Operation name: {provider}/{resource}/{operation}'
        type: string
    type: object
  OperationListResult:
    description: The response model for the list of Automation operations
    properties:
      value:
        description: List of Automation operations supported by the Automation resource provider.
        items:
          $ref: '#/definitions/Operation'
        type: array
  Resource:
    description: The Resource definition.
    properties:
      id:
        description: Resource Id
        readOnly: true
        type: string
      location:
        description: Resource location
        type: string
      name:
        description: Resource name
        readOnly: true
        type: string
      tags:
        additionalProperties:
          type: string
        description: Resource tags
        type: object
      type:
        description: Resource type
        readOnly: true
        type: string
    required:
      - location
    x-ms-azure-resource: true
  RunAsCredentialAssociationProperty:
    description: Definition of runas credential to use for hybrid worker.
    properties:
      name:
        description: Gets or sets the name of the credential.
        type: string
  Runbook:
    allOf:
      - $ref: '#/definitions/Resource'
    description: Definition of the runbook type.
    properties:
      etag:
        description: Gets or sets the etag of the resource.
        type: string
      properties:
        $ref: '#/definitions/RunbookProperties'
        description: Gets or sets the runbook properties.
        x-ms-client-flatten: true
  RunbookAssociationProperty:
    description: The runbook property associated with the entity.
    properties:
      name:
        description: Gets or sets the name of the runbook.
        type: string
  RunbookCreateOrUpdateDraftParameters:
    description: The parameters supplied to the create or update runbook operation.
    properties:
      runbookContent:
        description: Content of the Runbook.
        type: string
    required:
      - runbookContent
    x-ms-client-flatten: true
  RunbookCreateOrUpdateDraftProperties:
    description: The parameters supplied to the create or update dratft runbook properties.
    properties:
      description:
        description: Gets or sets the description of the runbook.
        type: string
      draft:
        $ref: '#/definitions/RunbookDraft'
        description: Gets or sets the draft runbook properties.
      logActivityTrace:
        description: Gets or sets the activity-level tracing options of the runbook.
        format: int32
        type: integer
      logProgress:
        description: Gets or sets progress log option.
        type: boolean
      logVerbose:
        description: Gets or sets verbose log option.
        type: boolean
      runbookType:
        description: Gets or sets the type of the runbook.
        enum:
          - Script
          - Graph
          - PowerShellWorkflow
          - PowerShell
          - GraphPowerShellWorkflow
          - GraphPowerShell
        type: string
        x-ms-enum:
          modelAsString: true
          name: RunbookTypeEnum
    required:
      - runbookType
      - draft
  RunbookCreateOrUpdateParameters:
    description: The parameters supplied to the create or update runbook operation.
    properties:
      location:
        description: Gets or sets the location of the resource.
        type: string
      name:
        description: Gets or sets the name of the resource.
        type: string
      properties:
        $ref: '#/definitions/RunbookCreateOrUpdateProperties'
        description: Gets or sets runbook create or update properties.
        x-ms-client-flatten: true
      tags:
        additionalProperties:
          type: string
        description: Gets or sets the tags attached to the resource.
        type: object
    required:
      - properties
  RunbookCreateOrUpdateProperties:
    description: The parameters supplied to the create or update runbook properties.
    properties:
      description:
        description: Gets or sets the description of the runbook.
        type: string
      draft:
        $ref: '#/definitions/RunbookDraft'
        description: Gets or sets the draft runbook properties.
      logActivityTrace:
        description: Gets or sets the activity-level tracing options of the runbook.
        format: int32
        type: integer
      logProgress:
        description: Gets or sets progress log option.
        type: boolean
      logVerbose:
        description: Gets or sets verbose log option.
        type: boolean
      publishContentLink:
        $ref: '#/definitions/ContentLink'
        description: Gets or sets the published runbook content link.
      runbookType:
        description: Gets or sets the type of the runbook.
        enum:
          - Script
          - Graph
          - PowerShellWorkflow
          - PowerShell
          - GraphPowerShellWorkflow
          - GraphPowerShell
        type: string
        x-ms-enum:
          modelAsString: true
          name: RunbookTypeEnum
    required:
      - runbookType
  RunbookDraft:
    description: Definition of the runbook type.
    properties:
      creationTime:
        description: Gets or sets the creation time of the runbook draft.
        format: date-time
        type: string
      draftContentLink:
        $ref: '#/definitions/ContentLink'
        description: Gets or sets the draft runbook content link.
      inEdit:
        description: Gets or sets whether runbook is in edit mode.
        type: boolean
      lastModifiedTime:
        description: Gets or sets the last modified time of the runbook draft.
        format: date-time
        type: string
      outputTypes:
        description: Gets or sets the runbook output types.
        items:
          type: string
        type: array
      parameters:
        additionalProperties:
          $ref: '#/definitions/RunbookParameter'
        description: Gets or sets the runbook draft parameters.
        type: object
  RunbookDraftUndoEditResult:
    description: The response model for the undoedit runbook operation.
    properties:
      requestId:
        type: string
      statusCode:
        enum:
          - Continue
          - SwitchingProtocols
          - OK
          - Created
          - Accepted
          - NonAuthoritativeInformation
          - NoContent
          - ResetContent
          - PartialContent
          - MultipleChoices
          - Ambiguous
          - MovedPermanently
          - Moved
          - Found
          - Redirect
          - SeeOther
          - RedirectMethod
          - NotModified
          - UseProxy
          - Unused
          - TemporaryRedirect
          - RedirectKeepVerb
          - BadRequest
          - Unauthorized
          - PaymentRequired
          - Forbidden
          - NotFound
          - MethodNotAllowed
          - NotAcceptable
          - ProxyAuthenticationRequired
          - RequestTimeout
          - Conflict
          - Gone
          - LengthRequired
          - PreconditionFailed
          - RequestEntityTooLarge
          - RequestUriTooLong
          - UnsupportedMediaType
          - RequestedRangeNotSatisfiable
          - ExpectationFailed
          - UpgradeRequired
          - InternalServerError
          - NotImplemented
          - BadGateway
          - ServiceUnavailable
          - GatewayTimeout
          - HttpVersionNotSupported
        type: string
        x-ms-enum:
          modelAsString: false
          name: HttpStatusCode
  RunbookListResult:
    description: The response model for the list runbook operation.
    properties:
      nextLink:
        description: Gets or sets the next link.
        type: string
      value:
        description: Gets or sets a list of runbooks.
        items:
          $ref: '#/definitions/Runbook'
        type: array
  RunbookParameter:
    description: Definition of the runbook parameter type.
    properties:
      defaultValue:
        description: Gets or sets the default value of parameter.
        type: string
      isMandatory:
        description: Gets or sets a Boolean value to indicate whether the parameter is madatory or not.
        type: boolean
      position:
        description: Get or sets the position of the parameter.
        format: int32
        type: integer
      type:
        description: Gets or sets the type of the parameter.
        type: string
  RunbookProperties:
    description: Definition of the runbook property type.
    properties:
      creationTime:
        description: Gets or sets the creation time.
        format: date-time
        type: string
      description:
        description: Gets or sets the description.
        type: string
      draft:
        $ref: '#/definitions/RunbookDraft'
        description: Gets or sets the draft runbook properties.
      jobCount:
        description: Gets or sets the job count of the runbook.
        format: int32
        type: integer
      lastModifiedBy:
        description: Gets or sets the last modified by.
        type: string
      lastModifiedTime:
        description: Gets or sets the last modified time.
        format: date-time
        type: string
      logActivityTrace:
        description: Gets or sets the option to log activity trace of the runbook.
        format: int32
        type: integer
      logProgress:
        description: Gets or sets progress log option.
        type: boolean
      logVerbose:
        description: Gets or sets verbose log option.
        type: boolean
      outputTypes:
        description: Gets or sets the runbook output types.
        items:
          type: string
        type: array
      parameters:
        additionalProperties:
          $ref: '#/definitions/RunbookParameter'
        description: Gets or sets the runbook parameters.
        type: object
      provisioningState:
        description: Gets or sets the provisioning state of the runbook.
        enum:
          - Succeeded
        type: string
        x-ms-enum:
          modelAsString: false
          name: RunbookProvisioningState
      publishContentLink:
        $ref: '#/definitions/ContentLink'
        description: Gets or sets the published runbook content link.
      runbookType:
        description: Gets or sets the type of the runbook.
        enum:
          - Script
          - Graph
          - PowerShellWorkflow
          - PowerShell
          - GraphPowerShellWorkflow
          - GraphPowerShell
        type: string
        x-ms-enum:
          modelAsString: true
          name: RunbookTypeEnum
      state:
        description: Gets or sets the state of the runbook.
        enum:
          - New
          - Edit
          - Published
        type: string
        x-ms-enum:
          modelAsString: true
          name: RunbookState
  RunbookUpdateParameters:
    description: The parameters supplied to the update runbook operation.
    properties:
      location:
        description: Gets or sets the location of the resource.
        type: string
      name:
        description: Gets or sets the name of the resource.
        type: string
      properties:
        $ref: '#/definitions/RunbookUpdateProperties'
        description: Gets or sets the runbook update properties.
        x-ms-client-flatten: true
      tags:
        additionalProperties:
          type: string
        description: Gets or sets the tags attached to the resource.
        type: object
  RunbookUpdateProperties:
    description: The parameters supplied to the update runbook properties.
    properties:
      description:
        description: Gets or sets the description of the runbook.
        type: string
      logActivityTrace:
        description: Gets or sets the activity-level tracing options of the runbook.
        format: int32
        type: integer
      logProgress:
        description: Gets or sets progress log option.
        type: boolean
      logVerbose:
        description: Gets or sets verbose log option.
        type: boolean
  Schedule:
    description: Definition of the schedule.
    properties:
      id:
        description: Gets or sets the id of the resource.
        type: string
      name:
        description: Gets or sets the name of the schedule.
        type: string
      properties:
        $ref: '#/definitions/ScheduleProperties'
        description: Gets or sets the properties of the schedule.
        x-ms-client-flatten: true
  ScheduleAssociationProperty:
    description: The schedule property associated with the entity.
    properties:
      name:
        description: Gets or sets the name of the schedule.
        type: string
  ScheduleCreateOrUpdateParameters:
    description: The parameters supplied to the create or update schedule operation.
    properties:
      name:
        description: Gets or sets the name of the schedule.
        type: string
      properties:
        $ref: '#/definitions/ScheduleCreateOrUpdateProperties'
        description: Gets or sets the list of schedule properties.
        x-ms-client-flatten: true
    required:
      - name
      - properties
  ScheduleCreateOrUpdateProperties:
    description: The parameters supplied to the create or update schedule operation.
    properties:
      advancedSchedule:
        $ref: '#/definitions/AdvancedSchedule'
        description: Gets or sets the AdvancedSchedule.
      description:
        description: Gets or sets the description of the schedule.
        type: string
      expiryTime:
        description: Gets or sets the end time of the schedule.
        format: date-time
        type: string
      frequency:
        $ref: '#/definitions/scheduleFrequency'
        type: string
      interval:
        description: Gets or sets the interval of the schedule.
      startTime:
        description: Gets or sets the start time of the schedule.
        format: date-time
        type: string
      timeZone:
        description: Gets or sets the time zone of the schedule.
        type: string
    required:
      - startTime
      - frequency
  ScheduleListResult:
    description: The response model for the list schedule operation.
    properties:
      nextLink:
        description: Gets or sets the next link.
        type: string
      value:
        description: Gets or sets a list of schedules.
        items:
          $ref: '#/definitions/Schedule'
        type: array
  ScheduleProperties:
    description: Definition of schedule parameters.
    properties:
      advancedSchedule:
        $ref: '#/definitions/AdvancedSchedule'
        description: Gets or sets the advanced schedule.
      creationTime:
        description: Gets or sets the creation time.
        format: date-time
        type: string
      description:
        description: Gets or sets the description.
        type: string
      expiryTime:
        description: Gets or sets the end time of the schedule.
        format: date-time
        type: string
      expiryTimeOffsetMinutes:
        description: Gets or sets the expiry time's offset in minutes.
        format: double
        type: number
      frequency:
        description: Gets or sets the frequency of the schedule.
        enum:
          - OneTime
          - Day
          - Hour
          - Week
          - Month
        type: string
        x-ms-enum:
          modelAsString: true
          name: ScheduleFrequency
      interval:
        description: Gets or sets the interval of the schedule.
      isEnabled:
        default: false
        description: Gets or sets a value indicating whether this schedule is enabled.
        type: boolean
      lastModifiedTime:
        description: Gets or sets the last modified time.
        format: date-time
        type: string
      nextRun:
        description: Gets or sets the next run time of the schedule.
        format: date-time
        type: string
      nextRunOffsetMinutes:
        description: Gets or sets the next run time's offset in minutes.
        format: double
        type: number
      startTime:
        description: Gets or sets the start time of the schedule.
        format: date-time
        type: string
      startTimeOffsetMinutes:
        description: Gets the start time's offset in minutes.
        format: double
        readOnly: true
        type: number
      timeZone:
        description: Gets or sets the time zone of the schedule.
        type: string
  ScheduleUpdateParameters:
    description: The parameters supplied to the update schedule operation.
    properties:
      name:
        description: Gets or sets the name of the schedule.
        type: string
      properties:
        $ref: '#/definitions/ScheduleUpdateProperties'
        description: Gets or sets the list of schedule properties.
        x-ms-client-flatten: true
    required:
      - name
  ScheduleUpdateProperties:
    description: The parameters supplied to the update schedule operation.
    properties:
      description:
        description: Gets or sets the description of the schedule.
        type: string
      isEnabled:
        description: Gets or sets a value indicating whether this schedule is enabled.
        type: boolean
  Sku:
    description: The account SKU.
    properties:
      capacity:
        description: Gets or sets the SKU capacity.
        format: int32
        type: integer
      family:
        description: Gets or sets the SKU family.
        type: string
      name:
        description: Gets or sets the SKU name of the account.
        enum:
          - Free
          - Basic
        type: string
        x-ms-enum:
          modelAsString: true
          name: SkuNameEnum
    required:
      - name
  Statistics:
    description: Definition of the statistic.
    properties:
      counterProperty:
        description: Gets the property value of the statistic.
        readOnly: true
        type: string
      counterValue:
        description: Gets the value of the statistic.
        format: int64
        readOnly: true
        type: integer
      endTime:
        description: Gets the endTime of the statistic.
        format: date-time
        readOnly: true
        type: string
      id:
        description: Gets the id.
        readOnly: true
        type: string
      startTime:
        description: Gets the startTime of the statistic.
        format: date-time
        readOnly: true
        type: string
  StatisticsListResult:
    description: The response model for the list statistics operation.
    properties:
      value:
        description: Gets or sets a list of statistics.
        items:
          $ref: '#/definitions/Statistics'
        type: array
  SubResource:
    description: The Sub Resource definition.
    properties:
      id:
        description: Resource Id
        type: string
    x-ms-azure-resource: true
  TestJob:
    description: Definition of the test job.
    properties:
      creationTime:
        description: Gets or sets the creation time of the test job.
        format: date-time
        type: string
      endTime:
        description: Gets or sets the end time of the test job.
        format: date-time
        type: string
      exception:
        description: Gets or sets the exception of the test job.
        type: string
      lastModifiedTime:
        description: Gets or sets the last modified time of the test job.
        format: date-time
        type: string
      lastStatusModifiedTime:
        description: Gets or sets the last status modified time of the test job.
        format: date-time
        type: string
      parameters:
        additionalProperties:
          type: string
        description: Gets or sets the parameters of the test job.
        type: object
      runOn:
        description: Gets or sets the runOn which specifies the group name where the job is to be executed.
        type: string
      startTime:
        description: Gets or sets the start time of the test job.
        format: date-time
        type: string
      status:
        description: Gets or sets the status of the test job.
        type: string
      statusDetails:
        description: Gets or sets the status details of the test job.
        type: string
  TestJobCreateParameters:
    description: The parameters supplied to the create test job operation.
    properties:
      parameters:
        additionalProperties:
          type: string
        description: Gets or sets the parameters of the test job.
        type: object
      runOn:
        description: Gets or sets the runOn which specifies the group name where the job is to be executed.
        type: string
      runbookName:
        description: Gets or sets the runbook name.
        type: string
    required:
      - runbookName
  TypeField:
    description: Information about a field of a type.
    properties:
      name:
        description: Gets or sets the name of the field.
        type: string
      type:
        description: Gets or sets the type of the field.
        type: string
  TypeFieldListResult:
    description: The response model for the list fields operation.
    properties:
      value:
        description: Gets or sets a list of fields.
        items:
          $ref: '#/definitions/TypeField'
        type: array
  Usage:
    description: Definition of Usage.
    properties:
      currentValue:
        description: Gets or sets the current usage value.
        format: double
        type: number
      id:
        description: Gets or sets the id of the resource.
        type: string
      limit:
        description: Gets or sets max limit. -1 for unlimited
        format: int64
        type: integer
      name:
        $ref: '#/definitions/UsageCounterName'
        description: Gets or sets the usage counter name.
      throttleStatus:
        description: Gets or sets the throttle status.
        type: string
      unit:
        description: Gets or sets the usage unit name.
        type: string
  UsageCounterName:
    description: Definition of usage counter name.
    properties:
      localizedValue:
        description: Gets or sets the localized usage counter name.
        type: string
      value:
        description: Gets or sets the usage counter name.
        type: string
  UsageListResult:
    description: The response model for the get usage operation.
    properties:
      value:
        description: Gets or sets usage.
        items:
          $ref: '#/definitions/Usage'
        type: array
  Variable:
    description: Definition of the varible.
    properties:
      id:
        description: Gets or sets the id of the resource.
        type: string
      name:
        description: Gets or sets the name of the variable.
        type: string
      properties:
        $ref: '#/definitions/VariableProperties'
        description: Gets or sets the properties of the variable.
        x-ms-client-flatten: true
  VariableCreateOrUpdateParameters:
    description: The parameters supplied to the create or update variable operation.
    properties:
      name:
        description: Gets or sets the name of the variable.
        type: string
      properties:
        $ref: '#/definitions/VariableCreateOrUpdateProperties'
        description: Gets or sets the properties of the variable.
        x-ms-client-flatten: true
    required:
      - name
      - properties
  VariableCreateOrUpdateProperties:
    description: The properties of the create variable operation.
    properties:
      description:
        description: Gets or sets the description of the variable.
        type: string
      isEncrypted:
        description: Gets or sets the encrypted flag of the variable.
        type: boolean
      value:
        description: Gets or sets the value of the variable.
        type: string
  VariableListResult:
    description: The response model for the list variables operation.
    properties:
      nextLink:
        description: Gets or sets the next link.
        type: string
      value:
        description: Gets or sets a list of variables.
        items:
          $ref: '#/definitions/Variable'
        type: array
  VariableProperties:
    description: Definition of the varible properties
    properties:
      creationTime:
        description: Gets or sets the creation time.
        format: date-time
        type: string
      description:
        description: Gets or sets the description.
        type: string
      isEncrypted:
        description: Gets or sets the encrypted flag of the variable.
        type: boolean
      lastModifiedTime:
        description: Gets or sets the last modified time.
        format: date-time
        type: string
      value:
        description: Gets or sets the value of the variable.
        type: string
  VariableUpdateParameters:
    description: The parameters supplied to the update variable operation.
    properties:
      name:
        description: Gets or sets the name of the variable.
        type: string
      properties:
        $ref: '#/definitions/VariableUpdateProperties'
        description: Gets or sets the value of the variable.
        x-ms-client-flatten: true
    required:
      - name
  VariableUpdateProperties:
    description: The properties of the update variable
    properties:
      description:
        description: Gets or sets the description of the variable.
        type: string
      value:
        description: Gets or sets the value of the variable.
        type: string
  Webhook:
    description: Definition of the webhook type.
    properties:
      id:
        description: Gets or sets the id of the resource.
        type: string
      name:
        description: Gets or sets the name of the webhook.
        type: string
      properties:
        $ref: '#/definitions/WebhookProperties'
        description: Gets or sets the webhook properties.
        x-ms-client-flatten: true
  WebhookCreateOrUpdateParameters:
    description: The parameters supplied to the create or update webhook operation.
    properties:
      name:
        description: Gets or sets the name of the webhook.
        type: string
      properties:
        $ref: '#/definitions/WebhookCreateOrUpdateProperties'
        description: Gets or sets the properties of the webhook.
        x-ms-client-flatten: true
    required:
      - name
      - properties
  WebhookCreateOrUpdateProperties:
    description: The properties of the create webhook operation.
    properties:
      expiryTime:
        description: Gets or sets the expiry time.
        format: date-time
        type: string
      isEnabled:
        description: Gets or sets the value of the enabled flag of webhook.
        type: boolean
      parameters:
        additionalProperties:
          type: string
        description: Gets or sets the parameters of the job.
        type: object
      runOn:
        description: Gets or sets the name of the hybrid worker group the webhook job will run on.
        type: string
      runbook:
        $ref: '#/definitions/RunbookAssociationProperty'
        description: Gets or sets the runbook.
      uri:
        description: Gets or sets the uri.
        type: string
  WebhookListResult:
    description: The response model for the list webhook operation.
    properties:
      nextLink:
        description: Gets or sets the next link.
        type: string
      value:
        description: Gets or sets a list of webhooks.
        items:
          $ref: '#/definitions/Webhook'
        type: array
  WebhookProperties:
    description: Definition of the webhook properties
    properties:
      creationTime:
        description: Gets or sets the creation time.
        format: date-time
        type: string
      description:
        description: Gets or sets the description.
        type: string
      expiryTime:
        description: Gets or sets the expiry time.
        format: date-time
        type: string
      isEnabled:
        default: false
        description: Gets or sets the value of the enabled flag of the webhook.
        type: boolean
      lastInvokedTime:
        description: Gets or sets the last invoked time.
        format: date-time
        type: string
      lastModifiedTime:
        description: Gets or sets the last modified time.
        format: date-time
        type: string
      parameters:
        additionalProperties:
          type: string
        description: Gets or sets the parameters of the job that is created when the webhook calls the runbook it is associated with.
        type: object
      runOn:
        description: Gets or sets the name of the hybrid worker group the webhook job will run on.
        type: string
      runbook:
        $ref: '#/definitions/RunbookAssociationProperty'
        description: Gets or sets the runbook the webhook is associated with.
      uri:
        description: Gets or sets the webhook uri.
        type: string
  WebhookUpdateParameters:
    description: The parameters supplied to the update webhook operation.
    properties:
      name:
        description: Gets or sets the name of the webhook.
        type: string
      properties:
        $ref: '#/definitions/WebhookUpdateProperties'
        description: Gets or sets the value of the webhook.
        x-ms-client-flatten: true
    required:
      - name
  WebhookUpdateProperties:
    description: The properties of the update webhook.
    properties:
      description:
        description: Gets or sets the description of the webhook.
        type: string
      isEnabled:
        description: Gets or sets the value of the enabled flag of webhook.
        type: boolean
      parameters:
        additionalProperties:
          type: string
        description: Gets or sets the parameters of the job.
        type: object
      runOn:
        description: Gets or sets the name of the hybrid worker group the webhook job will run on.
        type: string
  scheduleFrequency:
    description: Gets or sets the frequency of the schedule.
    enum:
      - OneTime
      - Day
      - Hour
      - Week
      - Month
    type: string
    x-ms-enum:
      modelAsString: true
      name: ScheduleFrequency
