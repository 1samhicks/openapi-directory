swagger: '2.0'
schemes:
  - https
host: management.azure.com
info:
  title: AppServicePlans API Client
  version: '2016-09-01'
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-web/2016-09-01/swagger/AppServicePlans.json'
      version: '2.0'
  x-providerName: azure.com
  x-preferred: false
  x-serviceName: arm-web
  x-tags:
    - Azure
    - Microsoft
securityDefinitions:
  azure_auth:
    authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
    description: Azure Active Directory OAuth2 Flow
    flow: implicit
    scopes:
      user_impersonation: impersonate your user account
    type: oauth2
security:
  - azure_auth:
      - user_impersonation
parameters:
  apiVersionParameter:
    description: API Version
    in: query
    name: api-version
    required: true
    type: string
  resourceGroupNameParameter:
    description: Name of the resource group to which the resource belongs.
    in: path
    maxLength: 90
    minLength: 1
    name: resourceGroupName
    pattern: '^[-\w\._\(\)]+[^\.]$'
    required: true
    type: string
    x-ms-parameter-location: method
  subscriptionIdParameter:
    description: Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
    in: path
    name: subscriptionId
    required: true
    type: string
paths:
  '/subscriptions/{subscriptionId}/providers/Microsoft.Web/serverfarms':
    get:
      description: Get all App Service plans for a subcription.
      operationId: AppServicePlans_List
      parameters:
        - description: |-
            Specify <code>true</code> to return all App Service plan properties. The default is <code>false</code>, which returns a subset of the properties.
             Retrieval of all properties may increase the API latency.
          in: query
          name: detailed
          type: boolean
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AppServicePlanCollection'
      summary: Get all App Service plans for a subcription.
      tags:
        - AppServicePlans
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms':
    get:
      description: Get all App Service plans in a resource group.
      operationId: AppServicePlans_ListByResourceGroup
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AppServicePlanCollection'
      summary: Get all App Service plans in a resource group.
      tags:
        - AppServicePlans
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}':
    delete:
      description: Delete an App Service plan.
      operationId: AppServicePlans_Delete
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      responses:
        '200':
          description: OK.
      summary: Delete an App Service plan.
      tags:
        - AppServicePlans
    get:
      description: Get an App Service plan.
      operationId: AppServicePlans_Get
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AppServicePlan'
      summary: Get an App Service plan.
      tags:
        - AppServicePlans
    put:
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      description: Creates or updates an App Service Plan.
      operationId: AppServicePlans_CreateOrUpdate
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - description: Details of the App Service plan.
          in: body
          name: appServicePlan
          required: true
          schema:
            $ref: '#/definitions/AppServicePlan'
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/AppServicePlan'
        '202':
          description: Operation is in progress.
          schema:
            $ref: '#/definitions/AppServicePlan'
      summary: Creates or updates an App Service Plan.
      tags:
        - AppServicePlans
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/capabilities':
    get:
      description: List all capabilities of an App Service plan.
      operationId: AppServicePlans_ListCapabilities
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Capability'
            type: array
      summary: List all capabilities of an App Service plan.
      tags:
        - AppServicePlans
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}':
    delete:
      description: Delete a Hybrid Connection in use in an App Service plan.
      operationId: AppServicePlans_DeleteHybridConnection
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - description: Name of the Service Bus namespace.
          in: path
          name: namespaceName
          required: true
          type: string
        - description: Name of the Service Bus relay.
          in: path
          name: relayName
          required: true
          type: string
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      responses:
        '200':
          description: Successfully deleted hybrid connection
        '204':
          description: Hybrid connection does not exist
      summary: Delete a Hybrid Connection in use in an App Service plan.
      tags:
        - AppServicePlans
    get:
      description: Retrieve a Hybrid Connection in use in an App Service plan.
      operationId: AppServicePlans_GetHybridConnection
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - description: Name of the Service Bus namespace.
          in: path
          name: namespaceName
          required: true
          type: string
        - description: Name of the Service Bus relay.
          in: path
          name: relayName
          required: true
          type: string
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/HybridConnection'
      summary: Retrieve a Hybrid Connection in use in an App Service plan.
      tags:
        - AppServicePlans
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}/listKeys':
    post:
      description: Get the send key name and value of a Hybrid Connection.
      operationId: AppServicePlans_ListHybridConnectionKeys
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - description: The name of the Service Bus namespace.
          in: path
          name: namespaceName
          required: true
          type: string
        - description: The name of the Service Bus relay.
          in: path
          name: relayName
          required: true
          type: string
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/HybridConnectionKey'
      summary: Get the send key name and value of a Hybrid Connection.
      tags:
        - AppServicePlans
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}/sites':
    get:
      description: Get all apps that use a Hybrid Connection in an App Service Plan.
      operationId: AppServicePlans_ListWebAppsByHybridConnection
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - description: Name of the Hybrid Connection namespace.
          in: path
          name: namespaceName
          required: true
          type: string
        - description: Name of the Hybrid Connection relay.
          in: path
          name: relayName
          required: true
          type: string
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResourceCollection'
      summary: Get all apps that use a Hybrid Connection in an App Service Plan.
      tags:
        - AppServicePlans
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/hybridConnectionPlanLimits/limit':
    get:
      description: Get the maximum number of Hybrid Connections allowed in an App Service plan.
      operationId: AppServicePlans_GetHybridConnectionPlanLimit
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/HybridConnectionLimits'
      summary: Get the maximum number of Hybrid Connections allowed in an App Service plan.
      tags:
        - AppServicePlans
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/hybridConnectionRelays':
    get:
      description: Retrieve all Hybrid Connections in use in an App Service plan.
      operationId: AppServicePlans_ListHybridConnections
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/HybridConnectionCollection'
      summary: Retrieve all Hybrid Connections in use in an App Service plan.
      tags:
        - AppServicePlans
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/metricdefinitions':
    get:
      description: 'Get metrics that can be queried for an App Service plan, and their definitions.'
      operationId: AppServicePlans_ListMetricDefintions
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResourceMetricDefinitionCollection'
      summary: 'Get metrics that can be queried for an App Service plan, and their definitions.'
      tags:
        - AppServicePlans
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/metrics':
    get:
      description: Get metrics for an App Serice plan.
      operationId: AppServicePlans_ListMetrics
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - description: Specify <code>true</code> to include instance details. The default is <code>false</code>.
          in: query
          name: details
          type: boolean
        - description: 'Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq ''Metric1'' or name.value eq ''Metric2'') and startTime eq ''2014-01-01T00:00:00Z'' and endTime eq ''2014-12-31T23:59:59Z'' and timeGrain eq duration''[Hour|Minute|Day]''.'
          in: query
          name: $filter
          type: string
          x-ms-skip-url-encoding: true
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResourceMetricCollection'
      summary: Get metrics for an App Serice plan.
      tags:
        - AppServicePlans
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/restartSites':
    post:
      description: Restart all apps in an App Service plan.
      operationId: AppServicePlans_RestartWebApps
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - description: 'Specify <code>true</code> to performa a soft restart, applies the configuration settings and restarts the apps if necessary. The default is <code>false</code>, which always restarts and reprovisions the apps'
          in: query
          name: softRestart
          type: boolean
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      responses:
        '204':
          description: No Content
      summary: Restart all apps in an App Service plan.
      tags:
        - AppServicePlans
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/sites':
    get:
      description: Get all apps associated with an App Service plan.
      operationId: AppServicePlans_ListWebApps
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - description: 'Skip to a web app in the list of webapps associated with app service plan. If specified, the resulting list will contain web apps starting from (including) the skipToken. Otherwise, the resulting list contains web apps from the start of the list'
          in: query
          name: $skipToken
          type: string
        - description: 'Supported filter: $filter=state eq running. Returns only web apps that are currently running'
          in: query
          name: $filter
          type: string
          x-ms-skip-url-encoding: true
        - description: 'List page size. If specified, results are paged.'
          in: query
          name: $top
          type: string
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/WebAppCollection'
      summary: Get all apps associated with an App Service plan.
      tags:
        - AppServicePlans
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections':
    get:
      description: Get all Virtual Networks associated with an App Service plan.
      operationId: AppServicePlans_ListVnets
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/VnetInfo'
            type: array
      summary: Get all Virtual Networks associated with an App Service plan.
      tags:
        - AppServicePlans
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}':
    get:
      description: Get a Virtual Network associated with an App Service plan.
      operationId: AppServicePlans_GetVnetFromServerFarm
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - description: Name of the Virtual Network.
          in: path
          name: vnetName
          required: true
          type: string
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/VnetInfo'
        '404':
          description: Virtual network could not be found.
      summary: Get a Virtual Network associated with an App Service plan.
      tags:
        - AppServicePlans
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}':
    get:
      description: Get a Virtual Network gateway.
      operationId: AppServicePlans_GetVnetGateway
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - description: Name of the Virtual Network.
          in: path
          name: vnetName
          required: true
          type: string
        - description: Name of the gateway. Only the 'primary' gateway is supported.
          in: path
          name: gatewayName
          required: true
          type: string
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VnetGateway'
      summary: Get a Virtual Network gateway.
      tags:
        - AppServicePlans
    put:
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      description: Update a Virtual Network gateway.
      operationId: AppServicePlans_UpdateVnetGateway
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - description: Name of the Virtual Network.
          in: path
          name: vnetName
          required: true
          type: string
        - description: Name of the gateway. Only the 'primary' gateway is supported.
          in: path
          name: gatewayName
          required: true
          type: string
        - description: Definition of the gateway.
          in: body
          name: connectionEnvelope
          required: true
          schema:
            $ref: '#/definitions/VnetGateway'
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VnetGateway'
      summary: Update a Virtual Network gateway.
      tags:
        - AppServicePlans
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes':
    get:
      description: Get all routes that are associated with a Virtual Network in an App Service plan.
      operationId: AppServicePlans_ListRoutesForVnet
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - description: Name of the Virtual Network.
          in: path
          name: vnetName
          required: true
          type: string
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/VnetRoute'
            type: array
      summary: Get all routes that are associated with a Virtual Network in an App Service plan.
      tags:
        - AppServicePlans
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes/{routeName}':
    delete:
      description: Delete a Virtual Network route in an App Service plan.
      operationId: AppServicePlans_DeleteVnetRoute
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - description: Name of the Virtual Network.
          in: path
          name: vnetName
          required: true
          type: string
        - description: Name of the Virtual Network route.
          in: path
          name: routeName
          required: true
          type: string
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      responses:
        '200':
          description: Successfully deleted Virtual Network route.
        '404':
          description: Specified Virtual Network route does not exist.
      summary: Delete a Virtual Network route in an App Service plan.
      tags:
        - AppServicePlans
    get:
      description: Get a Virtual Network route in an App Service plan.
      operationId: AppServicePlans_GetRouteForVnet
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - description: Name of the Virtual Network.
          in: path
          name: vnetName
          required: true
          type: string
        - description: Name of the Virtual Network route.
          in: path
          name: routeName
          required: true
          type: string
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/VnetRoute'
            type: array
        '404':
          description: Specified route does not exist.
      summary: Get a Virtual Network route in an App Service plan.
      tags:
        - AppServicePlans
    patch:
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      description: Create or update a Virtual Network route in an App Service plan.
      operationId: AppServicePlans_UpdateVnetRoute
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - description: Name of the Virtual Network.
          in: path
          name: vnetName
          required: true
          type: string
        - description: Name of the Virtual Network route.
          in: path
          name: routeName
          required: true
          type: string
        - description: Definition of the Virtual Network route.
          in: body
          name: route
          required: true
          schema:
            $ref: '#/definitions/VnetRoute'
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/VnetRoute'
        '400':
          description: 'Invalid request. Ensure that required parameters are given, and that addresses and address spaces are valid.'
        '404':
          description: Route not found.
      summary: Create or update a Virtual Network route in an App Service plan.
      tags:
        - AppServicePlans
    put:
      consumes:
        - application/json
        - text/json
        - application/x-www-form-urlencoded
      description: Create or update a Virtual Network route in an App Service plan.
      operationId: AppServicePlans_CreateOrUpdateVnetRoute
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - description: Name of the Virtual Network.
          in: path
          name: vnetName
          required: true
          type: string
        - description: Name of the Virtual Network route.
          in: path
          name: routeName
          required: true
          type: string
        - description: Definition of the Virtual Network route.
          in: body
          name: route
          required: true
          schema:
            $ref: '#/definitions/VnetRoute'
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/VnetRoute'
        '400':
          description: 'Invalid request. Ensure that required parameters are given, and that addresses and address spaces are valid.'
        '404':
          description: Route not found.
      summary: Create or update a Virtual Network route in an App Service plan.
      tags:
        - AppServicePlans
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/workers/{workerName}/reboot':
    post:
      description: Reboot a worker machine in an App Service plan.
      operationId: AppServicePlans_RebootWorker
      parameters:
        - $ref: '#/parameters/resourceGroupNameParameter'
        - description: Name of the App Service plan.
          in: path
          name: name
          required: true
          type: string
        - description: 'Name of worker machine, which typically starts with RD.'
          in: path
          name: workerName
          required: true
          type: string
        - $ref: '#/parameters/subscriptionIdParameter'
        - $ref: '#/parameters/apiVersionParameter'
      responses:
        '204':
          description: No Content
      summary: Reboot a worker machine in an App Service plan.
      tags:
        - AppServicePlans
definitions:
  ApiDefinitionInfo:
    description: Information about the formal API definition for the app.
    properties:
      url:
        description: The URL of the API definition.
        type: string
    type: object
  AppServicePlan:
    allOf:
      - $ref: '#/definitions/Resource'
    description: App Service plan.
    properties:
      properties:
        description: AppServicePlan resource specific properties
        properties:
          adminSiteName:
            description: App Service plan administration site.
            type: string
          geoRegion:
            description: Geographical location for the App Service plan.
            readOnly: true
            type: string
          hostingEnvironmentProfile:
            $ref: '#/definitions/HostingEnvironmentProfile'
            description: Specification for the App Service Environment to use for the App Service plan.
            x-ms-mutability:
              - create
              - read
          maximumNumberOfWorkers:
            description: Maximum number of instances that can be assigned to this App Service plan.
            format: int32
            readOnly: true
            type: integer
          name:
            description: Name for the App Service plan.
            type: string
          numberOfSites:
            description: Number of apps assigned to this App Service plan.
            format: int32
            readOnly: true
            type: integer
          perSiteScaling:
            default: false
            description: |-
              If <code>true</code>, apps assigned to this App Service plan can be scaled independently.
               If <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan.
            type: boolean
          provisioningState:
            description: Provisioning state of the App Service Environment.
            enum:
              - Succeeded
              - Failed
              - Canceled
              - InProgress
              - Deleting
            readOnly: true
            type: string
            x-ms-enum:
              modelAsString: false
              name: ProvisioningState
          reserved:
            default: false
            description: Reserved.
            type: boolean
            x-ms-mutability:
              - create
              - read
          resourceGroup:
            description: Resource group of the App Service plan.
            readOnly: true
            type: string
          status:
            description: App Service plan status.
            enum:
              - Ready
              - Pending
            readOnly: true
            type: string
            x-ms-enum:
              modelAsString: false
              name: StatusOptions
          subscription:
            description: App Service plan subscription.
            readOnly: true
            type: string
          targetWorkerCount:
            description: Scaling worker count.
            format: int32
            type: integer
          targetWorkerSizeId:
            description: Scaling worker size ID.
            format: int32
            type: integer
          workerTierName:
            description: Target worker tier assigned to the App Service plan.
            type: string
        required:
          - name
        x-ms-client-flatten: true
      sku:
        $ref: '#/definitions/SkuDescription'
    type: object
  AppServicePlanCollection:
    description: Collection of App Service plans.
    properties:
      nextLink:
        description: Link to next page of resources.
        type: string
      value:
        description: Collection of resources.
        items:
          $ref: '#/definitions/AppServicePlan'
        type: array
    required:
      - value
    type: object
  AutoHealActions:
    description: Actions which to take by the auto-heal module when a rule is triggered.
    properties:
      actionType:
        description: Predefined action to be taken.
        enum:
          - Recycle
          - LogEvent
          - CustomAction
        type: string
        x-ms-enum:
          modelAsString: false
          name: AutoHealActionType
      customAction:
        $ref: '#/definitions/AutoHealCustomAction'
        description: Custom action to be taken.
      minProcessExecutionTime:
        description: |-
          Minimum time the process must execute
           before taking the action
        type: string
    type: object
  AutoHealCustomAction:
    description: |-
      Custom action to be executed
       when an auto heal rule is triggered.
    properties:
      exe:
        description: Executable to be run.
        type: string
      parameters:
        description: Parameters for the executable.
        type: string
    type: object
  AutoHealRules:
    description: Rules that can be defined for auto-heal.
    properties:
      actions:
        $ref: '#/definitions/AutoHealActions'
        description: Actions to be executed when a rule is triggered.
      triggers:
        $ref: '#/definitions/AutoHealTriggers'
        description: Conditions that describe when to execute the auto-heal actions.
    type: object
  AutoHealTriggers:
    description: Triggers for auto-heal.
    properties:
      privateBytesInKB:
        description: A rule based on private bytes.
        format: int32
        type: integer
      requests:
        $ref: '#/definitions/RequestsBasedTrigger'
        description: A rule based on total requests.
      slowRequests:
        $ref: '#/definitions/SlowRequestsBasedTrigger'
        description: A rule based on request execution time.
      statusCodes:
        description: A rule based on status codes.
        items:
          $ref: '#/definitions/StatusCodesBasedTrigger'
        type: array
    type: object
  Capability:
    description: Describes the capabilities/features allowed for a specific SKU.
    properties:
      name:
        description: Name of the SKU capability.
        type: string
      reason:
        description: Reason of the SKU capability.
        type: string
      value:
        description: Value of the SKU capability.
        type: string
    type: object
  CloningInfo:
    description: Information needed for cloning operation.
    properties:
      appSettingsOverrides:
        additionalProperties:
          type: string
        description: |-
          Application setting overrides for cloned app. If specified, these settings override the settings cloned
           from source app. Otherwise, application settings from source app are retained.
        type: object
      cloneCustomHostNames:
        description: '<code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.'
        type: boolean
      cloneSourceControl:
        description: '<code>true</code> to clone source control from source app; otherwise, <code>false</code>.'
        type: boolean
      configureLoadBalancing:
        description: <code>true</code> to configure load balancing for source and destination app.
        type: boolean
      correlationId:
        description: |-
          Correlation ID of cloning operation. This ID ties multiple cloning operations
           together to use the same snapshot.
        type: string
      hostingEnvironment:
        description: App Service Environment.
        type: string
      ignoreQuotas:
        description: '<code>true</code> if quotas should be ignored; otherwise, <code>false</code>.'
        type: boolean
      overwrite:
        description: '<code>true</code> to overwrite destination app; otherwise, <code>false</code>.'
        type: boolean
      sourceWebAppId:
        description: |-
          ARM resource ID of the source app. App resource ID is of the form
           /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
           /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
        type: string
      trafficManagerProfileId:
        description: |-
          ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
           /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
        type: string
      trafficManagerProfileName:
        description: Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
        type: string
    required:
      - sourceWebAppId
    type: object
  ConnStringInfo:
    description: Database connection string information.
    properties:
      connectionString:
        description: Connection string value.
        type: string
      name:
        description: Name of connection string.
        type: string
      type:
        description: Type of database.
        enum:
          - MySql
          - SQLServer
          - SQLAzure
          - Custom
          - NotificationHub
          - ServiceBus
          - EventHub
          - ApiHub
          - DocDb
          - RedisCache
          - PostgreSQL
        type: string
        x-ms-enum:
          modelAsString: false
          name: ConnectionStringType
    type: object
  CorsSettings:
    description: Cross-Origin Resource Sharing (CORS) settings for the app.
    properties:
      allowedOrigins:
        description: |-
          Gets or sets the list of origins that should be allowed to make cross-origin
           calls (for example: http://example.com:12345). Use "*" to allow all.
        items:
          type: string
        type: array
    type: object
  Experiments:
    description: Routing rules in production experiments.
    properties:
      rampUpRules:
        description: List of ramp-up rules.
        items:
          $ref: '#/definitions/RampUpRule'
        type: array
    type: object
  HandlerMapping:
    description: |-
      The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
       For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
    properties:
      arguments:
        description: Command-line arguments to be passed to the script processor.
        type: string
      extension:
        description: Requests with this extension will be handled using the specified FastCGI application.
        type: string
      scriptProcessor:
        description: The absolute path to the FastCGI application.
        type: string
    type: object
  HostNameSslState:
    description: SSL-enabled hostname.
    properties:
      hostType:
        description: Indicates whether the hostname is a standard or repository hostname.
        enum:
          - Standard
          - Repository
        type: string
        x-ms-enum:
          modelAsString: false
          name: HostType
      name:
        description: Hostname.
        type: string
      sslState:
        description: SSL type.
        enum:
          - Disabled
          - SniEnabled
          - IpBasedEnabled
        type: string
        x-ms-enum:
          modelAsString: false
          name: SslState
      thumbprint:
        description: SSL certificate thumbprint.
        type: string
      toUpdate:
        description: Set to <code>true</code> to update existing hostname.
        type: boolean
      virtualIP:
        description: Virtual IP address assigned to the hostname if IP based SSL is enabled.
        type: string
    type: object
  HostingEnvironmentProfile:
    description: Specification for an App Service Environment to use for this resource.
    properties:
      id:
        description: Resource ID of the App Service Environment.
        type: string
      name:
        description: Name of the App Service Environment.
        readOnly: true
        type: string
      type:
        description: Resource type of the App Service Environment.
        readOnly: true
        type: string
    type: object
  HybridConnection:
    allOf:
      - $ref: '#/definitions/Resource'
    description: Hybrid Connection contract. This is used to configure a Hybrid Connection.
    properties:
      properties:
        description: HybridConnection resource specific properties
        properties:
          hostname:
            description: The hostname of the endpoint.
            type: string
          port:
            description: The port of the endpoint.
            format: int32
            type: integer
          relayArmUri:
            description: The ARM URI to the Service Bus relay.
            type: string
          relayName:
            description: The name of the Service Bus relay.
            type: string
            x-ms-mutability:
              - create
              - read
          sendKeyName:
            description: The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.
            type: string
          sendKeyValue:
            description: |-
              The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned
               normally, use the POST /listKeys API instead.
            type: string
          serviceBusNamespace:
            description: The name of the Service Bus namespace.
            type: string
            x-ms-mutability:
              - create
              - read
        x-ms-client-flatten: true
    type: object
  HybridConnectionCollection:
    description: Collection of hostname bindings.
    properties:
      nextLink:
        description: Link to next page of resources.
        type: string
      value:
        description: Collection of resources.
        items:
          $ref: '#/definitions/HybridConnection'
        type: array
    required:
      - value
    type: object
  HybridConnectionKey:
    allOf:
      - $ref: '#/definitions/Resource'
    description: Hybrid Connection key contract. This has the send key name and value for a Hybrid Connection.
    properties:
      properties:
        description: HybridConnectionKey resource specific properties
        properties:
          sendKeyName:
            description: The name of the send key.
            readOnly: true
            type: string
          sendKeyValue:
            description: The value of the send key.
            readOnly: true
            type: string
        x-ms-client-flatten: true
    type: object
  HybridConnectionLimits:
    allOf:
      - $ref: '#/definitions/Resource'
    description: Hybrid Connection limits contract. This is used to return the plan limits of Hybrid Connections.
    properties:
      properties:
        description: HybridConnectionLimits resource specific properties
        properties:
          current:
            description: The current number of Hybrid Connections.
            format: int32
            readOnly: true
            type: integer
          maximum:
            description: The maximum number of Hybrid Connections allowed.
            format: int32
            readOnly: true
            type: integer
        x-ms-client-flatten: true
    type: object
  IpSecurityRestriction:
    description: IP security restriction on an app.
    properties:
      ipAddress:
        description: IP address the security restriction is valid for.
        type: string
      subnetMask:
        description: Subnet mask for the range of IP addresses the restriction is valid for.
        type: string
    required:
      - ipAddress
    type: object
  NameValuePair:
    description: Name value pair.
    properties:
      name:
        description: Pair name.
        type: string
      value:
        description: Pair value.
        type: string
    type: object
  PushSettings:
    description: Push settings for the App.
    properties:
      dynamicTagsJson:
        description: Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
        type: string
      isPushEnabled:
        description: Gets or sets a flag indicating whether the Push endpoint is enabled.
        type: boolean
      tagWhitelistJson:
        description: Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
        type: string
      tagsRequiringAuth:
        description: |-
          Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
           Tags can consist of alphanumeric characters and the following:
           '_', '@', '#', '.', ':', '-'.
           Validation should be performed at the PushRequestHandler.
        type: string
    required:
      - isPushEnabled
    type: object
  RampUpRule:
    description: Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
    properties:
      actionHostName:
        description: Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
        type: string
      changeDecisionCallbackUrl:
        description: |-
          Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
           https://www.siteextensions.net/packages/TiPCallback/
        type: string
      changeIntervalInMinutes:
        description: Specifies interval in mimuntes to reevaluate ReroutePercentage.
        format: int32
        type: integer
      changeStep:
        description: |-
          In auto ramp up scenario this is the step to to add/remove from <code>ReroutePercentage</code> until it reaches
           <code>MinReroutePercentage</code> or <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specificed in <code>ChangeIntervalInMinutes</code>.
           Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
        format: double
        type: number
      maxReroutePercentage:
        description: Specifies upper boundary below which ReroutePercentage will stay.
        format: double
        type: number
      minReroutePercentage:
        description: Specifies lower boundary above which ReroutePercentage will stay.
        format: double
        type: number
      name:
        description: Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
        type: string
      reroutePercentage:
        description: Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
        format: double
        type: number
    type: object
  RequestsBasedTrigger:
    description: Trigger based on total requests.
    properties:
      count:
        description: Count.
        format: int32
        type: integer
      timeInterval:
        description: Time interval.
        type: string
    type: object
  Resource:
    description: Azure resource.
    properties:
      id:
        description: Resource Id.
        readOnly: true
        type: string
      kind:
        description: Kind of resource.
        type: string
      location:
        description: Resource Location.
        type: string
      name:
        description: Resource Name.
        type: string
      tags:
        additionalProperties:
          type: string
        description: Resource tags.
        type: object
      type:
        description: Resource type.
        type: string
    required:
      - location
    x-ms-azure-resource: true
  ResourceCollection:
    description: Collection of resources.
    properties:
      nextLink:
        description: Link to next page of resources.
        type: string
      value:
        description: Collection of resources.
        items:
          type: string
        type: array
    required:
      - value
    type: object
  ResourceMetric:
    description: Object representing a metric for any resource .
    properties:
      endTime:
        description: Metric end time.
        format: date-time
        readOnly: true
        type: string
      id:
        description: Resource Id.
        readOnly: true
        type: string
      metricValues:
        description: Metric values.
        items:
          $ref: '#/definitions/ResourceMetricValue'
        readOnly: true
        type: array
      name:
        $ref: '#/definitions/ResourceMetricName'
        description: Name of metric.
        readOnly: true
      properties:
        description: Properties.
        items:
          $ref: '#/definitions/ResourceMetricProperty'
        readOnly: true
        type: array
      resourceId:
        description: Metric resource Id.
        readOnly: true
        type: string
      startTime:
        description: Metric start time.
        format: date-time
        readOnly: true
        type: string
      timeGrain:
        description: 'Metric granularity. E.g PT1H, PT5M, P1D'
        readOnly: true
        type: string
      unit:
        description: Metric unit.
        readOnly: true
        type: string
    type: object
  ResourceMetricAvailability:
    description: Metrics availability and retention.
    properties:
      retention:
        description: Retention period for the current time grain.
        readOnly: true
        type: string
      timeGrain:
        description: Time grain .
        readOnly: true
        type: string
    type: object
  ResourceMetricCollection:
    description: Collection of metric responses.
    properties:
      nextLink:
        description: Link to next page of resources.
        type: string
      value:
        description: Collection of resources.
        items:
          $ref: '#/definitions/ResourceMetric'
        type: array
    required:
      - value
    type: object
  ResourceMetricDefinition:
    allOf:
      - $ref: '#/definitions/Resource'
    description: Metadata for the metrics.
    properties:
      properties:
        description: ResourceMetricDefinition resource specific properties
        properties:
          id:
            description: Resource ID.
            readOnly: true
            type: string
          metricAvailabilities:
            description: List of time grains supported for the metric together with retention period.
            items:
              $ref: '#/definitions/ResourceMetricAvailability'
            readOnly: true
            type: array
          name:
            $ref: '#/definitions/ResourceMetricName'
            description: Name of the metric.
            readOnly: true
          primaryAggregationType:
            description: Primary aggregation type.
            readOnly: true
            type: string
          properties:
            additionalProperties:
              type: string
            description: Properties.
            readOnly: true
            type: object
          resourceUri:
            description: Resource URI.
            readOnly: true
            type: string
          unit:
            description: Unit of the metric.
            readOnly: true
            type: string
        x-ms-client-flatten: true
    type: object
  ResourceMetricDefinitionCollection:
    description: Collection of metric definitions.
    properties:
      nextLink:
        description: Link to next page of resources.
        type: string
      value:
        description: Collection of resources.
        items:
          $ref: '#/definitions/ResourceMetricDefinition'
        type: array
    required:
      - value
    type: object
  ResourceMetricName:
    description: Name of a metric for any resource .
    properties:
      localizedValue:
        description: Localized metric name value.
        readOnly: true
        type: string
      value:
        description: metric name value.
        readOnly: true
        type: string
    type: object
  ResourceMetricProperty:
    description: Resource metric property.
    properties:
      key:
        description: Key for resource metric property.
        type: string
      value:
        description: Value of pair.
        type: string
    type: object
  ResourceMetricValue:
    description: Value of resource metric.
    properties:
      average:
        description: Value average.
        format: float
        readOnly: true
        type: number
      count:
        description: Value count.
        format: float
        readOnly: true
        type: number
      maximum:
        description: Value maximum.
        format: float
        readOnly: true
        type: number
      minimum:
        description: Value minimum.
        format: float
        readOnly: true
        type: number
      properties:
        description: Properties.
        items:
          $ref: '#/definitions/ResourceMetricProperty'
        readOnly: true
        type: array
      timestamp:
        description: Value timestamp.
        readOnly: true
        type: string
      total:
        description: Value total.
        format: float
        readOnly: true
        type: number
    type: object
  Site:
    allOf:
      - $ref: '#/definitions/Resource'
    description: 'A web app, a mobile app backend, or an API app.'
    properties:
      properties:
        description: Site resource specific properties
        properties:
          availabilityState:
            description: Management information availability state for the app.
            enum:
              - Normal
              - Limited
              - DisasterRecoveryMode
            readOnly: true
            type: string
            x-ms-enum:
              modelAsString: false
              name: SiteAvailabilityState
          clientAffinityEnabled:
            description: '<code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.'
            type: boolean
          clientCertEnabled:
            description: '<code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.'
            type: boolean
          cloningInfo:
            $ref: '#/definitions/CloningInfo'
            description: 'If specified during app creation, the app is cloned from a source app.'
            x-ms-mutability:
              - create
          containerSize:
            description: Size of the function container.
            format: int32
            type: integer
          dailyMemoryTimeQuota:
            description: Maximum allowed daily memory-time quota (applicable on dynamic apps only).
            format: int32
            type: integer
          defaultHostName:
            description: Default hostname of the app. Read-only.
            readOnly: true
            type: string
          enabled:
            description: '<code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).'
            type: boolean
          enabledHostNames:
            description: |-
              Enabled hostnames for the app.Hostnames need to be assigned (see HostNames) AND enabled. Otherwise,
               the app is not served on those hostnames.
            items:
              type: string
            readOnly: true
            type: array
          gatewaySiteName:
            description: Name of gateway app associated with the app.
            type: string
            x-ms-mutability:
              - create
              - read
          hostNameSslStates:
            description: Hostname SSL states are used to manage the SSL bindings for app's hostnames.
            items:
              $ref: '#/definitions/HostNameSslState'
            type: array
          hostNames:
            description: Hostnames associated with the app.
            items:
              type: string
            readOnly: true
            type: array
          hostNamesDisabled:
            description: |-
              <code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.
               If <code>true</code>, the app is only accessible via API management process.
            type: boolean
          hostingEnvironmentProfile:
            $ref: '#/definitions/HostingEnvironmentProfile'
            description: App Service Environment to use for the app.
            x-ms-mutability:
              - create
              - read
          isDefaultContainer:
            description: '<code>true</code> if the app is a default container; otherwise, <code>false</code>.'
            readOnly: true
            type: boolean
          lastModifiedTimeUtc:
            description: 'Last time the app was modified, in UTC. Read-only.'
            format: date-time
            readOnly: true
            type: string
          maxNumberOfWorkers:
            description: |-
              Maximum number of workers.
               This only applies to Functions container.
            format: int32
            readOnly: true
            type: integer
          microService:
            default: WebSites
            description: 'Micro services like apps, logic apps.'
            type: string
            x-ms-mutability:
              - create
              - read
          outboundIpAddresses:
            description: List of IP addresses that the app uses for outbound connections (e.g. database access). Read-only.
            readOnly: true
            type: string
          premiumAppDeployed:
            description: Indicates whether app is deployed as a premium app.
            readOnly: true
            type: boolean
          repositorySiteName:
            description: Name of the repository site.
            readOnly: true
            type: string
          reserved:
            default: false
            description: '<code>true</code> if reserved; otherwise, <code>false</code>.'
            type: boolean
            x-ms-mutability:
              - create
              - read
          resourceGroup:
            description: Name of the resource group the app belongs to. Read-only.
            readOnly: true
            type: string
          scmSiteAlsoStopped:
            default: false
            description: '<code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.'
            type: boolean
          serverFarmId:
            description: 'Resource ID of the associated App Service plan, formatted as: "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".'
            type: string
          siteConfig:
            $ref: '#/definitions/SiteConfig'
            description: Configuration of the app.
          slotSwapStatus:
            $ref: '#/definitions/SlotSwapStatus'
            description: Status of the last deployment slot swap operation.
            readOnly: true
          state:
            description: Current state of the app.
            readOnly: true
            type: string
          suspendedTill:
            description: App suspended till in case memory-time quota is exceeded.
            format: date-time
            readOnly: true
            type: string
          targetSwapSlot:
            description: Specifies which deployment slot this app will swap into. Read-only.
            readOnly: true
            type: string
          trafficManagerHostNames:
            description: Azure Traffic Manager hostnames associated with the app. Read-only.
            items:
              type: string
            readOnly: true
            type: array
          usageState:
            description: State indicating whether the app has exceeded its quota usage. Read-only.
            enum:
              - Normal
              - Exceeded
            readOnly: true
            type: string
            x-ms-enum:
              modelAsString: false
              name: UsageState
        x-ms-client-flatten: true
    type: object
  SiteConfig:
    description: Configuration of an App Service app.
    properties:
      alwaysOn:
        description: '<code>true</code> if Always On is enabled; otherwise, <code>false</code>.'
        type: boolean
      apiDefinition:
        $ref: '#/definitions/ApiDefinitionInfo'
        description: Information about the formal API definition for the app.
      appCommandLine:
        description: App command line to launch.
        type: string
      appSettings:
        description: Application settings.
        items:
          $ref: '#/definitions/NameValuePair'
        type: array
      autoHealEnabled:
        description: '<code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.'
        type: boolean
      autoHealRules:
        $ref: '#/definitions/AutoHealRules'
        description: Auto Heal rules.
      autoSwapSlotName:
        description: Auto-swap slot name.
        type: string
      connectionStrings:
        description: Connection strings.
        items:
          $ref: '#/definitions/ConnStringInfo'
        type: array
      cors:
        $ref: '#/definitions/CorsSettings'
        description: Cross-Origin Resource Sharing (CORS) settings.
      defaultDocuments:
        description: Default documents.
        items:
          type: string
        type: array
      detailedErrorLoggingEnabled:
        description: '<code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.'
        type: boolean
      documentRoot:
        description: Document root.
        type: string
      experiments:
        $ref: '#/definitions/Experiments'
        description: This is work around for polymophic types.
      handlerMappings:
        description: Handler mappings.
        items:
          $ref: '#/definitions/HandlerMapping'
        type: array
      httpLoggingEnabled:
        description: '<code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.'
        type: boolean
      ipSecurityRestrictions:
        description: IP security restrictions.
        items:
          $ref: '#/definitions/IpSecurityRestriction'
        type: array
      javaContainer:
        description: Java container.
        type: string
      javaContainerVersion:
        description: Java container version.
        type: string
      javaVersion:
        description: Java version.
        type: string
      limits:
        $ref: '#/definitions/SiteLimits'
        description: Site limits.
      linuxFxVersion:
        description: Linux App Framework and version
        type: string
      loadBalancing:
        description: Site load balancing.
        enum:
          - WeightedRoundRobin
          - LeastRequests
          - LeastResponseTime
          - WeightedTotalTraffic
          - RequestHash
        type: string
        x-ms-enum:
          modelAsString: false
          name: SiteLoadBalancing
      localMySqlEnabled:
        default: false
        description: '<code>true</code> to enable local MySQL; otherwise, <code>false</code>.'
        type: boolean
      logsDirectorySizeLimit:
        description: HTTP logs directory size limit.
        format: int32
        type: integer
      machineKey:
        $ref: '#/definitions/SiteMachineKey'
        description: Site MachineKey.
        readOnly: true
      managedPipelineMode:
        description: Managed pipeline mode.
        enum:
          - Integrated
          - Classic
        type: string
        x-ms-enum:
          modelAsString: false
          name: ManagedPipelineMode
      netFrameworkVersion:
        default: v4.6
        description: .NET Framework version.
        type: string
      nodeVersion:
        description: Version of Node.js.
        type: string
      numberOfWorkers:
        description: Number of workers.
        format: int32
        type: integer
      phpVersion:
        description: Version of PHP.
        type: string
      publishingUsername:
        description: Publishing user name.
        type: string
      push:
        $ref: '#/definitions/PushSettings'
        description: Push endpoint settings.
      pythonVersion:
        description: Version of Python.
        type: string
      remoteDebuggingEnabled:
        description: '<code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.'
        type: boolean
      remoteDebuggingVersion:
        description: Remote debugging version.
        type: string
      requestTracingEnabled:
        description: '<code>true</code> if request tracing is enabled; otherwise, <code>false</code>.'
        type: boolean
      requestTracingExpirationTime:
        description: Request tracing expiration time.
        format: date-time
        type: string
      scmType:
        description: SCM type.
        enum:
          - None
          - Dropbox
          - Tfs
          - LocalGit
          - GitHub
          - CodePlexGit
          - CodePlexHg
          - BitbucketGit
          - BitbucketHg
          - ExternalGit
          - ExternalHg
          - OneDrive
          - VSO
        type: string
        x-ms-enum:
          modelAsString: true
          name: ScmType
      tracingOptions:
        description: Tracing options.
        type: string
      use32BitWorkerProcess:
        description: '<code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.'
        type: boolean
      virtualApplications:
        description: Virtual applications.
        items:
          $ref: '#/definitions/VirtualApplication'
        type: array
      vnetName:
        description: Virtual Network name.
        type: string
        x-ms-mutability:
          - create
          - read
      webSocketsEnabled:
        description: '<code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.'
        type: boolean
    type: object
  SiteLimits:
    description: Metric limits set on an app.
    properties:
      maxDiskSizeInMb:
        description: Maximum allowed disk size usage in MB.
        format: int64
        type: integer
      maxMemoryInMb:
        description: Maximum allowed memory usage in MB.
        format: int64
        type: integer
      maxPercentageCpu:
        description: Maximum allowed CPU usage percentage.
        format: double
        type: number
    type: object
  SiteMachineKey:
    description: MachineKey of an app.
    properties:
      decryption:
        description: Decryption.
        type: string
      decryptionKey:
        description: Decryption key.
        type: string
      validation:
        description: MachineKey validation.
        type: string
      validationKey:
        description: Validation key.
        type: string
    type: object
  SkuCapacity:
    description: Description of the App Service plan scale options.
    properties:
      default:
        description: Default number of workers for this App Service plan SKU.
        format: int32
        type: integer
      maximum:
        description: Maximum number of workers for this App Service plan SKU.
        format: int32
        type: integer
      minimum:
        description: Minimum number of workers for this App Service plan SKU.
        format: int32
        type: integer
      scaleType:
        description: Available scale configurations for an App Service plan.
        type: string
    type: object
  SkuDescription:
    description: Description of a SKU for a scalable resource.
    properties:
      capabilities:
        description: 'Capabilities of the SKU, e.g., is traffic manager enabled?'
        items:
          $ref: '#/definitions/Capability'
        type: array
      capacity:
        description: Current number of instances assigned to the resource.
        format: int32
        type: integer
      family:
        description: Family code of the resource SKU.
        type: string
      locations:
        description: Locations of the SKU.
        items:
          type: string
        type: array
      name:
        description: Name of the resource SKU.
        type: string
      size:
        description: Size specifier of the resource SKU.
        type: string
      skuCapacity:
        $ref: '#/definitions/SkuCapacity'
        description: 'Min, max, and default scale values of the SKU.'
      tier:
        description: Service tier of the resource SKU.
        type: string
    type: object
  SlotSwapStatus:
    description: The status of the last successfull slot swap operation.
    properties:
      destinationSlotName:
        description: The destination slot of the last swap operation.
        readOnly: true
        type: string
      sourceSlotName:
        description: The source slot of the last swap operation.
        readOnly: true
        type: string
      timestampUtc:
        description: The time the last successful slot swap completed.
        format: date-time
        readOnly: true
        type: string
    type: object
  SlowRequestsBasedTrigger:
    description: Trigger based on request execution time.
    properties:
      count:
        description: Count.
        format: int32
        type: integer
      timeInterval:
        description: Time interval.
        type: string
      timeTaken:
        description: Time taken.
        type: string
    type: object
  StatusCodesBasedTrigger:
    description: Trigger based on status code.
    properties:
      count:
        description: Count.
        format: int32
        type: integer
      status:
        description: HTTP status code.
        format: int32
        type: integer
      subStatus:
        description: SubStatus.
        format: int32
        type: integer
      timeInterval:
        description: Time interval.
        type: string
      win32Status:
        description: Win32 error code.
        format: int32
        type: integer
    type: object
  VirtualApplication:
    description: Virtual application in an app.
    properties:
      physicalPath:
        description: Physical path.
        type: string
      preloadEnabled:
        description: '<code>true</code> if preloading is enabled; otherwise, <code>false</code>.'
        type: boolean
      virtualDirectories:
        description: Virtual directories for virtual application.
        items:
          $ref: '#/definitions/VirtualDirectory'
        type: array
      virtualPath:
        description: Virtual path.
        type: string
    type: object
  VirtualDirectory:
    description: Directory for virtual application.
    properties:
      physicalPath:
        description: Physical path.
        type: string
      virtualPath:
        description: Path to virtual application.
        type: string
    type: object
  VnetGateway:
    allOf:
      - $ref: '#/definitions/Resource'
    description: The Virtual Network gateway contract. This is used to give the Virtual Network gateway access to the VPN package.
    properties:
      properties:
        description: VnetGateway resource specific properties
        properties:
          vnetName:
            description: The Virtual Network name.
            type: string
            x-ms-mutability:
              - create
              - read
          vpnPackageUri:
            description: The URI where the VPN package can be downloaded.
            type: string
            x-ms-mutability:
              - create
              - update
        required:
          - vpnPackageUri
        x-ms-client-flatten: true
    type: object
  VnetInfo:
    description: Virtual Network information contract.
    properties:
      certBlob:
        description: |-
          A certificate file (.cer) blob containing the public key of the private key used to authenticate a
           Point-To-Site VPN connection.
        type: string
      certThumbprint:
        description: The client certificate thumbprint.
        readOnly: true
        type: string
      dnsServers:
        description: DNS servers to be used by this Virtual Network. This should be a comma-separated list of IP addresses.
        type: string
      resyncRequired:
        description: '<code>true</code> if a resync is required; otherwise, <code>false</code>.'
        readOnly: true
        type: boolean
      routes:
        description: The routes that this Virtual Network connection uses.
        items:
          $ref: '#/definitions/VnetRoute'
        readOnly: true
        type: array
      vnetResourceId:
        description: The Virtual Network's resource ID.
        type: string
    type: object
  VnetRoute:
    allOf:
      - $ref: '#/definitions/Resource'
    description: Virtual Network route contract used to pass routing information for a Virtual Network.
    properties:
      properties:
        description: VnetRoute resource specific properties
        properties:
          endAddress:
            description: 'The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.'
            type: string
          name:
            description: The name of this route. This is only returned by the server and does not need to be set by the client.
            type: string
            x-ms-client-name: vnetRouteName
            x-ms-mutability:
              - create
              - read
          routeType:
            description: |-
              The type of route this is:
               DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
               INHERITED - Routes inherited from the real Virtual Network routes
               STATIC - Static route set on the app only

               These values will be used for syncing an app's routes with those from a Virtual Network.
            enum:
              - DEFAULT
              - INHERITED
              - STATIC
            type: string
            x-ms-enum:
              modelAsString: true
              name: RouteType
          startAddress:
            description: 'The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.'
            type: string
        x-ms-client-flatten: true
    type: object
  WebAppCollection:
    description: Collection of App Service apps.
    properties:
      nextLink:
        description: Link to next page of resources.
        type: string
      value:
        description: Collection of resources.
        items:
          $ref: '#/definitions/Site'
        type: array
    required:
      - value
    type: object
