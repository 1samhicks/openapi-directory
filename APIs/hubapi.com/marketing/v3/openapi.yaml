openapi: 3.0.1
servers:
  - url: https://api.hubapi.com/
info:
  title: Transactional Email
  version: v3
  x-origin:
    - format: openapi
      url: https://api.hubspot.com/api-catalog-public/v1/apis/marketing/v3/transactional
      version: "3.0"
  x-providerName: hubapi.com
  x-serviceName: marketing
paths:
  /marketing/v3/transactional/single-email/send:
    post:
      description: Asynchronously send a transactional email. Returns the status of
        the email send with a statusId that can be used to continuously query
        for the status using the Email Send Status API.
      operationId: post-/marketing/v3/transactional/single-email/send_sendEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PublicSingleSendRequestEgg"
        description: A request object describing the email to send.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailSendStatusView"
          description: successful operation
        default:
          $ref: "#/components/responses/Error"
      security:
        - hapikey: []
        - oauth2:
            - transactional-email
      summary: Send a single transactional email asynchronously.
      tags: []
      x-hubspot-rate-limit-exemptions:
        - daily
        - ten-secondly
  /marketing/v3/transactional/smtp-tokens:
    get:
      description: Query multiple SMTP API tokens by campaign name or a single token
        by emailCampaignId.
      operationId: get-/marketing/v3/transactional/smtp-tokens_getTokensPage
      parameters:
        - description: A name for the campaign tied to the SMTP API token.
          explode: true
          in: query
          name: campaignName
          required: false
          schema:
            type: string
          style: form
        - description: Identifier assigned to the campaign provided during the token
            creation.
          explode: true
          in: query
          name: emailCampaignId
          required: false
          schema:
            type: string
          style: form
        - description: Starting point to get the next set of results.
          explode: true
          in: query
          name: after
          required: false
          schema:
            type: string
          style: form
        - description: Maximum number of tokens to return.
          explode: true
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionResponseSmtpApiTokenView"
          description: successful operation
        default:
          $ref: "#/components/responses/Error"
      security:
        - hapikey: []
      summary: Query SMTP API tokens by campaign name or an emailCampaignId.
      tags: []
    post:
      description: Create a SMTP API token.
      operationId: post-/marketing/v3/transactional/smtp-tokens_createToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SmtpApiTokenRequestEgg"
        description: A request object that includes the campaign name tied to the token
          and whether contacts should be created for recipients of emails.
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmtpApiTokenView"
          description: successful operation
        default:
          $ref: "#/components/responses/Error"
      security:
        - hapikey: []
      summary: Create a SMTP API token.
      tags: []
  "/marketing/v3/transactional/smtp-tokens/{tokenId}":
    delete:
      description: Delete a single token by ID.
      operationId: delete-/marketing/v3/transactional/smtp-tokens/{tokenId}_archiveToken
      parameters:
        - description: Identifier generated when a token is created.
          explode: false
          in: path
          name: tokenId
          required: true
          schema:
            type: string
          style: simple
      responses:
        "204":
          content: {}
          description: No content
        default:
          $ref: "#/components/responses/Error"
      security:
        - hapikey: []
      summary: Delete a single token by ID.
      tags: []
    get:
      description: Query a single token by ID.
      operationId: get-/marketing/v3/transactional/smtp-tokens/{tokenId}_getTokenById
      parameters:
        - description: Identifier generated when a token is created.
          explode: false
          in: path
          name: tokenId
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmtpApiTokenView"
          description: successful operation
        default:
          $ref: "#/components/responses/Error"
      security:
        - hapikey: []
      summary: Query a single token by ID.
      tags: []
  "/marketing/v3/transactional/smtp-tokens/{tokenId}/password-reset":
    post:
      description: Allows the creation of a replacement password for a given token.
        Once the password is successfully reset, the old password for the token
        will be invalid.
      operationId: post-/marketing/v3/transactional/smtp-tokens/{tokenId}/password-reset_resetPassword
      parameters:
        - description: Identifier generated when a token is created.
          explode: false
          in: path
          name: tokenId
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmtpApiTokenView"
          description: successful operation
        default:
          $ref: "#/components/responses/Error"
      security:
        - hapikey: []
      summary: Reset the password of an existing token.
      tags: []
components:
  responses:
    Error:
      content:
        "*/*":
          schema:
            $ref: "#/components/schemas/Error"
      description: An error occurred.
  schemas:
    CollectionResponseSmtpApiTokenView:
      description: A collection of SMTP API tokens.
      properties:
        paging:
          $ref: "#/components/schemas/Paging"
        results:
          description: The actual collection of tokens.
          items:
            $ref: "#/components/schemas/SmtpApiTokenView"
          type: array
      required:
        - results
      type: object
    EmailSendStatusView:
      description: Describes the status of an email send request.
      properties:
        completedAt:
          description: Time when the send was completed.
          format: date-time
          type: string
        eventId:
          $ref: "#/components/schemas/EventIdView"
        requestedAt:
          description: Time when the send was requested.
          format: date-time
          type: string
        sendResult:
          description: Result of the send.
          enum:
            - SENT
            - IDEMPOTENT_IGNORE
            - QUEUED
            - IDEMPOTENT_FAIL
            - THROTTLED
            - EMAIL_DISABLED
            - PORTAL_SUSPENDED
            - INVALID_TO_ADDRESS
            - BLOCKED_DOMAIN
            - PREVIOUSLY_BOUNCED
            - EMAIL_UNCONFIRMED
            - PREVIOUS_SPAM
            - PREVIOUSLY_UNSUBSCRIBED_MESSAGE
            - PREVIOUSLY_UNSUBSCRIBED_PORTAL
            - INVALID_FROM_ADDRESS
            - CAMPAIGN_CANCELLED
            - VALIDATION_FAILED
            - MTA_IGNORE
            - BLOCKED_ADDRESS
            - PORTAL_OVER_LIMIT
            - PORTAL_EXPIRED
            - PORTAL_MISSING_MARKETING_SCOPE
            - MISSING_TEMPLATE_PROPERTIES
            - MISSING_REQUIRED_PARAMETER
            - PORTAL_AUTHENTICATION_FAILURE
            - MISSING_CONTENT
            - CORRUPT_INPUT
            - TEMPLATE_RENDER_EXCEPTION
            - GRAYMAIL_SUPPRESSED
            - UNCONFIGURED_SENDING_DOMAIN
            - UNDELIVERABLE
            - CANCELLED_ABUSE
            - QUARANTINED_ADDRESS
            - ADDRESS_ONLY_ACCEPTED_ON_PROD
            - PORTAL_NOT_AUTHORIZED_FOR_APPLICATION
            - ADDRESS_LIST_BOMBED
            - ADDRESS_OPTED_OUT
            - RECIPIENT_FATIGUE_SUPPRESSED
            - TOO_MANY_RECIPIENTS
            - PREVIOUSLY_UNSUBSCRIBED_BRAND
            - NON_MARKETABLE_CONTACT
          type: string
        startedAt:
          description: Time when the send began processing.
          format: date-time
          type: string
        status:
          description: Status of the send request.
          enum:
            - PENDING
            - PROCESSING
            - CANCELED
            - COMPLETE
          type: string
        statusId:
          description: Identifier used to query the status of the send.
          type: string
      required:
        - status
        - statusId
      type: object
    Error:
      example:
        category: VALIDATION_ERROR
        correlationId: aeb5f871-7f07-4993-9211-075dc63e7cbf
        links:
          knowledge-base: https://www.hubspot.com/products/service/knowledge-base
        message: Invalid input (details will vary based on the error)
      properties:
        category:
          description: The error category
          type: string
        context:
          additionalProperties:
            items:
              type: string
            type: array
          description: Context about the error condition
          example:
            invalidPropertyName:
              - propertyValue
            missingScopes:
              - scope1
              - scope2
          type: object
        correlationId:
          description: A unique identifier for the request. Include this value with any
            error reports or support tickets
          example: aeb5f871-7f07-4993-9211-075dc63e7cbf
          format: uuid
          type: string
        errors:
          description: further information about the error
          items:
            $ref: "#/components/schemas/ErrorDetail"
          type: array
        links:
          additionalProperties:
            type: string
          description: A map of link names to associated URIs containing documentation
            about the error or recommended remediation steps
          type: object
        message:
          description: A human readable message describing the error along with
            remediation steps where appropriate
          example: An error occurred
          type: string
        subCategory:
          description: A specific category that contains more specific detail about the
            error
          type: string
      required:
        - category
        - correlationId
        - message
      type: object
    ErrorDetail:
      properties:
        code:
          description: The status code associated with the error detail
          type: string
        context:
          additionalProperties:
            items:
              type: string
            type: array
          description: Context about the error condition
          example:
            missingScopes:
              - scope1
              - scope2
          type: object
        in:
          description: The name of the field or parameter in which the error was found.
          type: string
        message:
          description: A human readable message describing the error along with
            remediation steps where appropriate
          type: string
        subCategory:
          description: A specific category that contains more specific detail about the
            error
          type: string
      required:
        - message
      type: object
    EventIdView:
      description: The ID of a send event.
      properties:
        created:
          description: Time of event creation.
          format: date-time
          type: string
        id:
          description: Identifier of event.
          type: string
      required:
        - created
        - id
      type: object
    NextPage:
      properties:
        after:
          type: string
        link:
          type: string
      required:
        - after
      type: object
    Paging:
      properties:
        next:
          $ref: "#/components/schemas/NextPage"
      type: object
    PublicSingleSendEmail:
      description: A JSON object containing anything you want to override.
      properties:
        bcc:
          description: List of email addresses to send as Bcc.
          items:
            type: string
          type: array
        cc:
          description: List of email addresses to send as Cc.
          items:
            type: string
          type: array
        from:
          description: The From header for the email.
          type: string
        replyTo:
          description: List of Reply-To header values for the email.
          items:
            type: string
          type: array
        sendId:
          description: ID for a particular send. No more than one email will be sent per
            sendId.
          type: string
        to:
          description: The recipient of the email.
          type: string
      required:
        - bcc
        - cc
        - replyTo
      type: object
    PublicSingleSendRequestEgg:
      description: A request to send a single transactional email asynchronously.
      properties:
        contactProperties:
          additionalProperties:
            type: string
          description: The contactProperties field is a map of contact property values.
            Each contact property value contains a name and value property. Each
            property will get set on the contact record and will be visible in
            the template under {{ contact.NAME }}. Use these properties when you
            want to set a contact property while you’re sending the email. For
            example, when sending a reciept you may want to set a last_paid_date
            property, as the sending of the receipt will have information about
            the last payment.
          type: object
        customProperties:
          description: >-
            The customProperties field is a map of property values. Each
            property value contains a name and value property. Each property
            will be visible in the template under {{ custom.NAME }}.

            Note: Custom properties do not currently support arrays. To provide a listing in an email, one workaround is to build an HTML list (either with tables or ul) and specify it as a custom property.
          properties: {}
          type: object
        emailId:
          description: The content ID for the transactional email, which can be found in
            email tool UI.
          format: int32
          type: integer
        message:
          $ref: "#/components/schemas/PublicSingleSendEmail"
      required:
        - contactProperties
        - customProperties
        - emailId
        - message
      type: object
    SmtpApiTokenRequestEgg:
      description: A request object to create a SMTP API token
      properties:
        campaignName:
          description: A name for the campaign tied to the SMTP API token.
          type: string
        createContact:
          description: Indicates whether a contact should be created for recipients of
            emails.
          type: boolean
      required:
        - campaignName
        - createContact
      type: object
    SmtpApiTokenView:
      description: A SMTP API token provides both an ID and password that can be used
        to send email through the HubSpot SMTP API.
      properties:
        campaignName:
          description: A name for the campaign tied to the token.
          type: string
        createContact:
          description: Indicates whether a contact should be created for recipients of
            emails.
          type: boolean
        createdAt:
          description: Timestamp generated when a token is created.
          format: date-time
          type: string
        createdBy:
          description: Email address of the user that sent the token creation request.
          type: string
        emailCampaignId:
          description: Identifier assigned to the campaign provided in the token creation
            request.
          type: string
        id:
          description: User name to log into the HubSpot SMTP server.
          type: string
        password:
          description: Password used to log into the HubSpot SMTP server.
          type: string
      required:
        - campaignName
        - createContact
        - createdAt
        - createdBy
        - emailCampaignId
        - id
      type: object
  securitySchemes:
    hapikey:
      in: query
      name: hapikey
      type: apiKey
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: https://app.hubspot.com/oauth/authorize
          scopes:
            transactional-email: Transactional Emails
          tokenUrl: https://api.hubapi.com/oauth/v1/token
      type: oauth2
