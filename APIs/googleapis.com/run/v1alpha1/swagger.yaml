swagger: '2.0'
schemes:
  - https
host: run.googleapis.com
basePath: /
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: Deploy and manage user provided container images that scale automatically based on HTTP traffic.
  title: Cloud Run
  version: v1alpha1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.7.31
      format: google
      url: 'https://run.googleapis.com/$discovery/rest?version=v1alpha1'
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: run
externalDocs:
  url: 'https://cloud.google.com/run/'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
    type: oauth2
parameters:
  $.xgafv:
    description: V1 error format.
    enum:
      - '1'
      - '2'
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    enum:
      - json
      - media
      - proto
    in: query
    name: alt
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
tags:
  - name: namespaces
  - name: projects
paths:
  '/apis/domains.cloudrun.com/v1alpha1/{name}':
    delete:
      description: Rpc to delete a domain mapping.
      operationId: run.namespaces.domainmappings.delete
      parameters:
        - description: Cloud Run currently ignores this parameter.
          in: query
          name: apiVersion
          type: string
        - description: Cloud Run currently ignores this parameter.
          in: query
          name: kind
          type: string
        - description: |-
            The name of the domain mapping being deleted. If needed, replace
            {namespace_id} with the project ID.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            Deprecated.
            Specifies the cascade behavior on delete.
            Cloud Run only supports cascading behavior, so this must be false.
            This attribute is deprecated, and is now replaced with PropagationPolicy
            See https://github.com/kubernetes/kubernetes/issues/46659 for more info.
          in: query
          name: orphanDependents
          type: boolean
        - description: |-
            Specifies the propagation policy of delete. Cloud Run currently ignores
            this setting, and deletes in the background. Please see
            kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for
            more information.
          in: query
          name: propagationPolicy
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - namespaces
    get:
      description: Rpc to get information about a domain mapping.
      operationId: run.namespaces.domainmappings.get
      parameters:
        - description: |-
            The name of the domain mapping being retrieved. If needed, replace
            {namespace_id} with the project ID.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DomainMapping'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - namespaces
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/apis/domains.cloudrun.com/v1alpha1/{parent}/authorizeddomains':
    get:
      description: RPC to list authorized domains.
      operationId: run.namespaces.authorizeddomains.list
      parameters:
        - description: Maximum results to return per page.
          in: query
          name: pageSize
          type: integer
        - description: Continuation token for fetching the next page of results.
          in: query
          name: pageToken
          type: string
        - description: 'Name of the parent Application resource. Example: `apps/myapp`.'
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListAuthorizedDomainsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - namespaces
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/apis/domains.cloudrun.com/v1alpha1/{parent}/domainmappings':
    get:
      description: Rpc to list domain mappings.
      operationId: run.namespaces.domainmappings.list
      parameters:
        - description: Optional encoded string to continue paging.
          in: query
          name: continue
          type: string
        - description: |-
            Allows to filter resources based on a specific value for a field name.
            Send this in a query string format. i.e. 'metadata.name%3Dlorem'.
            Not currently used by Cloud Run.
          in: query
          name: fieldSelector
          type: string
        - description: Not currently used by Cloud Run.
          in: query
          name: includeUninitialized
          type: boolean
        - description: |-
            Allows to filter resources based on a label. Supported operations are
            =, !=, exists, in, and notIn.
          in: query
          name: labelSelector
          type: string
        - description: The maximum number of records that should be returned.
          in: query
          name: limit
          type: integer
        - description: |-
            The project ID or project number from which the domain mappings should be
            listed.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            The baseline resource version from which the list or watch operation should
            start. Not currently used by Cloud Run.
          in: query
          name: resourceVersion
          type: string
        - description: |-
            Flag that indicates that the client expects to watch this resource as well.
            Not currently used by Cloud Run.
          in: query
          name: watch
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListDomainMappingsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - namespaces
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Creates a new domain mapping.
      operationId: run.namespaces.domainmappings.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/DomainMapping'
        - description: |-
            The project ID or project number in which this domain mapping should be
            created.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DomainMapping'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - namespaces
  '/apis/serving.knative.dev/v1alpha1/{name}':
    delete:
      description: Rpc to delete a revision.
      operationId: run.namespaces.revisions.delete
      parameters:
        - description: Cloud Run currently ignores this parameter.
          in: query
          name: apiVersion
          type: string
        - description: Cloud Run currently ignores this parameter.
          in: query
          name: kind
          type: string
        - description: |-
            The name of the revision being deleted. If needed, replace
            {namespace_id} with the project ID.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            Deprecated.
            Specifies the cascade behavior on delete.
            Cloud Run only supports cascading behavior, so this must be false.
            This attribute is deprecated, and is now replaced with PropagationPolicy
            See https://github.com/kubernetes/kubernetes/issues/46659 for more info.
          in: query
          name: orphanDependents
          type: boolean
        - description: |-
            Specifies the propagation policy of delete. Cloud Run currently ignores
            this setting, and deletes in the background. Please see
            kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for
            more information.
          in: query
          name: propagationPolicy
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - namespaces
    get:
      description: Rpc to get information about a configuration.
      operationId: run.namespaces.configurations.get
      parameters:
        - description: |-
            The name of the configuration being retrieved. If needed, replace
            {namespace_id} with the project ID.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Configuration'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - namespaces
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    put:
      description: |-
        Rpc to replace a service.

        Only the spec and metadata labels and annotations are modifiable. After
        the Update request, Cloud Run will work to make the 'status'
        match the requested 'spec'.

        May provide metadata.resourceVersion to enforce update from last read for
        optimistic concurrency control.
      operationId: run.namespaces.services.replaceService
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Service'
        - description: |-
            The name of the service being replaced. If needed, replace
            {namespace_id} with the project ID.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Service'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - namespaces
  '/apis/serving.knative.dev/v1alpha1/{parent}/configurations':
    get:
      description: Rpc to list configurations.
      operationId: run.namespaces.configurations.list
      parameters:
        - description: Optional encoded string to continue paging.
          in: query
          name: continue
          type: string
        - description: |-
            Allows to filter resources based on a specific value for a field name.
            Send this in a query string format. i.e. 'metadata.name%3Dlorem'.
            Not currently used by Cloud Run.
          in: query
          name: fieldSelector
          type: string
        - description: Not currently used by Cloud Run.
          in: query
          name: includeUninitialized
          type: boolean
        - description: |-
            Allows to filter resources based on a label. Supported operations are
            =, !=, exists, in, and notIn.
          in: query
          name: labelSelector
          type: string
        - description: The maximum number of records that should be returned.
          in: query
          name: limit
          type: integer
        - description: |-
            The project ID or project number from which the configurations should be
            listed.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            The baseline resource version from which the list or watch operation should
            start. Not currently used by Cloud Run.
          in: query
          name: resourceVersion
          type: string
        - description: |-
            Flag that indicates that the client expects to watch this resource as well.
            Not currently used by Cloud Run.
          in: query
          name: watch
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListConfigurationsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - namespaces
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/apis/serving.knative.dev/v1alpha1/{parent}/revisions':
    get:
      description: Rpc to list revisions.
      operationId: run.namespaces.revisions.list
      parameters:
        - description: Optional encoded string to continue paging.
          in: query
          name: continue
          type: string
        - description: |-
            Allows to filter resources based on a specific value for a field name.
            Send this in a query string format. i.e. 'metadata.name%3Dlorem'.
            Not currently used by Cloud Run.
          in: query
          name: fieldSelector
          type: string
        - description: Not currently used by Cloud Run.
          in: query
          name: includeUninitialized
          type: boolean
        - description: |-
            Allows to filter resources based on a label. Supported operations are
            =, !=, exists, in, and notIn.
          in: query
          name: labelSelector
          type: string
        - description: The maximum number of records that should be returned.
          in: query
          name: limit
          type: integer
        - description: The project ID or project number from which the revisions should be listed.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            The baseline resource version from which the list or watch operation should
            start. Not currently used by Cloud Run.
          in: query
          name: resourceVersion
          type: string
        - description: |-
            Flag that indicates that the client expects to watch this resource as well.
            Not currently used by Cloud Run.
          in: query
          name: watch
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListRevisionsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - namespaces
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/apis/serving.knative.dev/v1alpha1/{parent}/routes':
    get:
      description: Rpc to list routes.
      operationId: run.namespaces.routes.list
      parameters:
        - description: Optional encoded string to continue paging.
          in: query
          name: continue
          type: string
        - description: |-
            Allows to filter resources based on a specific value for a field name.
            Send this in a query string format. i.e. 'metadata.name%3Dlorem'.
            Not currently used by Cloud Run.
          in: query
          name: fieldSelector
          type: string
        - description: Not currently used by Cloud Run.
          in: query
          name: includeUninitialized
          type: boolean
        - description: |-
            Allows to filter resources based on a label. Supported operations are
            =, !=, exists, in, and notIn.
          in: query
          name: labelSelector
          type: string
        - description: The maximum number of records that should be returned.
          in: query
          name: limit
          type: integer
        - description: The project ID or project number from which the routes should be listed.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            The baseline resource version from which the list or watch operation should
            start. Not currently used by Cloud Run.
          in: query
          name: resourceVersion
          type: string
        - description: |-
            Flag that indicates that the client expects to watch this resource as well.
            Not currently used by Cloud Run.
          in: query
          name: watch
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListRoutesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - namespaces
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/apis/serving.knative.dev/v1alpha1/{parent}/services':
    get:
      description: Rpc to list services.
      operationId: run.namespaces.services.list
      parameters:
        - description: Optional encoded string to continue paging.
          in: query
          name: continue
          type: string
        - description: |-
            Allows to filter resources based on a specific value for a field name.
            Send this in a query string format. i.e. 'metadata.name%3Dlorem'.
            Not currently used by Cloud Run.
          in: query
          name: fieldSelector
          type: string
        - description: Not currently used by Cloud Run.
          in: query
          name: includeUninitialized
          type: boolean
        - description: |-
            Allows to filter resources based on a label. Supported operations are
            =, !=, exists, in, and notIn.
          in: query
          name: labelSelector
          type: string
        - description: The maximum number of records that should be returned.
          in: query
          name: limit
          type: integer
        - description: The project ID or project number from which the services should be listed.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            The baseline resource version from which the list or watch operation should
            start. Not currently used by Cloud Run.
          in: query
          name: resourceVersion
          type: string
        - description: |-
            Flag that indicates that the client expects to watch this resource as well.
            Not currently used by Cloud Run.
          in: query
          name: watch
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListServicesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - namespaces
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Rpc to create a service.
      operationId: run.namespaces.services.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Service'
        - description: The project ID or project number in which this service should be created.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Service'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - namespaces
  '/v1alpha1/{name}':
    delete:
      description: |-
        Rpc to delete a service.
        This will cause the Service to stop serving traffic and will delete the
        child entities like Routes, Configurations and Revisions.
      operationId: run.projects.locations.services.delete
      parameters:
        - description: Cloud Run currently ignores this parameter.
          in: query
          name: apiVersion
          type: string
        - description: Cloud Run currently ignores this parameter.
          in: query
          name: kind
          type: string
        - description: |-
            The name of the service being deleted. If needed, replace
            {namespace_id} with the project ID.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            Deprecated.
            Specifies the cascade behavior on delete.
            Cloud Run only supports cascading behavior, so this must be false.
            This attribute is deprecated, and is now replaced with PropagationPolicy
            See https://github.com/kubernetes/kubernetes/issues/46659 for more info.
          in: query
          name: orphanDependents
          type: boolean
        - description: |-
            Specifies the propagation policy of delete. Cloud Run currently ignores
            this setting, and deletes in the background. Please see
            kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for
            more information.
          in: query
          name: propagationPolicy
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    get:
      description: Rpc to get information about a service.
      operationId: run.projects.locations.services.get
      parameters:
        - description: |-
            The name of the service being retrieved. If needed, replace
            {namespace_id} with the project ID.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Service'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    put:
      description: |-
        Rpc to replace a service.

        Only the spec and metadata labels and annotations are modifiable. After
        the Update request, Cloud Run will work to make the 'status'
        match the requested 'spec'.

        May provide metadata.resourceVersion to enforce update from last read for
        optimistic concurrency control.
      operationId: run.projects.locations.services.replaceService
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Service'
        - description: |-
            The name of the service being replaced. If needed, replace
            {namespace_id} with the project ID.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Service'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1alpha1/{name}/locations':
    get:
      description: Lists information about the supported locations for this service.
      operationId: run.projects.locations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          type: string
        - description: 'The resource that owns the locations collection, if applicable.'
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: The standard list page size.
          in: query
          name: pageSize
          type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListLocationsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1alpha1/{parent}/authorizeddomains':
    get:
      description: RPC to list authorized domains.
      operationId: run.projects.locations.authorizeddomains.list
      parameters:
        - description: Maximum results to return per page.
          in: query
          name: pageSize
          type: integer
        - description: Continuation token for fetching the next page of results.
          in: query
          name: pageToken
          type: string
        - description: 'Name of the parent Application resource. Example: `apps/myapp`.'
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListAuthorizedDomainsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1alpha1/{parent}/configurations':
    get:
      description: Rpc to list configurations.
      operationId: run.projects.locations.configurations.list
      parameters:
        - description: Optional encoded string to continue paging.
          in: query
          name: continue
          type: string
        - description: |-
            Allows to filter resources based on a specific value for a field name.
            Send this in a query string format. i.e. 'metadata.name%3Dlorem'.
            Not currently used by Cloud Run.
          in: query
          name: fieldSelector
          type: string
        - description: Not currently used by Cloud Run.
          in: query
          name: includeUninitialized
          type: boolean
        - description: |-
            Allows to filter resources based on a label. Supported operations are
            =, !=, exists, in, and notIn.
          in: query
          name: labelSelector
          type: string
        - description: The maximum number of records that should be returned.
          in: query
          name: limit
          type: integer
        - description: |-
            The project ID or project number from which the configurations should be
            listed.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            The baseline resource version from which the list or watch operation should
            start. Not currently used by Cloud Run.
          in: query
          name: resourceVersion
          type: string
        - description: |-
            Flag that indicates that the client expects to watch this resource as well.
            Not currently used by Cloud Run.
          in: query
          name: watch
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListConfigurationsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1alpha1/{parent}/domainmappings':
    get:
      description: Rpc to list domain mappings.
      operationId: run.projects.locations.domainmappings.list
      parameters:
        - description: Optional encoded string to continue paging.
          in: query
          name: continue
          type: string
        - description: |-
            Allows to filter resources based on a specific value for a field name.
            Send this in a query string format. i.e. 'metadata.name%3Dlorem'.
            Not currently used by Cloud Run.
          in: query
          name: fieldSelector
          type: string
        - description: Not currently used by Cloud Run.
          in: query
          name: includeUninitialized
          type: boolean
        - description: |-
            Allows to filter resources based on a label. Supported operations are
            =, !=, exists, in, and notIn.
          in: query
          name: labelSelector
          type: string
        - description: The maximum number of records that should be returned.
          in: query
          name: limit
          type: integer
        - description: |-
            The project ID or project number from which the domain mappings should be
            listed.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            The baseline resource version from which the list or watch operation should
            start. Not currently used by Cloud Run.
          in: query
          name: resourceVersion
          type: string
        - description: |-
            Flag that indicates that the client expects to watch this resource as well.
            Not currently used by Cloud Run.
          in: query
          name: watch
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListDomainMappingsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Creates a new domain mapping.
      operationId: run.projects.locations.domainmappings.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/DomainMapping'
        - description: |-
            The project ID or project number in which this domain mapping should be
            created.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DomainMapping'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1alpha1/{parent}/revisions':
    get:
      description: Rpc to list revisions.
      operationId: run.projects.locations.revisions.list
      parameters:
        - description: Optional encoded string to continue paging.
          in: query
          name: continue
          type: string
        - description: |-
            Allows to filter resources based on a specific value for a field name.
            Send this in a query string format. i.e. 'metadata.name%3Dlorem'.
            Not currently used by Cloud Run.
          in: query
          name: fieldSelector
          type: string
        - description: Not currently used by Cloud Run.
          in: query
          name: includeUninitialized
          type: boolean
        - description: |-
            Allows to filter resources based on a label. Supported operations are
            =, !=, exists, in, and notIn.
          in: query
          name: labelSelector
          type: string
        - description: The maximum number of records that should be returned.
          in: query
          name: limit
          type: integer
        - description: The project ID or project number from which the revisions should be listed.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            The baseline resource version from which the list or watch operation should
            start. Not currently used by Cloud Run.
          in: query
          name: resourceVersion
          type: string
        - description: |-
            Flag that indicates that the client expects to watch this resource as well.
            Not currently used by Cloud Run.
          in: query
          name: watch
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListRevisionsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1alpha1/{parent}/routes':
    get:
      description: Rpc to list routes.
      operationId: run.projects.locations.routes.list
      parameters:
        - description: Optional encoded string to continue paging.
          in: query
          name: continue
          type: string
        - description: |-
            Allows to filter resources based on a specific value for a field name.
            Send this in a query string format. i.e. 'metadata.name%3Dlorem'.
            Not currently used by Cloud Run.
          in: query
          name: fieldSelector
          type: string
        - description: Not currently used by Cloud Run.
          in: query
          name: includeUninitialized
          type: boolean
        - description: |-
            Allows to filter resources based on a label. Supported operations are
            =, !=, exists, in, and notIn.
          in: query
          name: labelSelector
          type: string
        - description: The maximum number of records that should be returned.
          in: query
          name: limit
          type: integer
        - description: The project ID or project number from which the routes should be listed.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            The baseline resource version from which the list or watch operation should
            start. Not currently used by Cloud Run.
          in: query
          name: resourceVersion
          type: string
        - description: |-
            Flag that indicates that the client expects to watch this resource as well.
            Not currently used by Cloud Run.
          in: query
          name: watch
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListRoutesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1alpha1/{parent}/services':
    get:
      description: Rpc to list services.
      operationId: run.projects.locations.services.list
      parameters:
        - description: Optional encoded string to continue paging.
          in: query
          name: continue
          type: string
        - description: |-
            Allows to filter resources based on a specific value for a field name.
            Send this in a query string format. i.e. 'metadata.name%3Dlorem'.
            Not currently used by Cloud Run.
          in: query
          name: fieldSelector
          type: string
        - description: Not currently used by Cloud Run.
          in: query
          name: includeUninitialized
          type: boolean
        - description: |-
            Allows to filter resources based on a label. Supported operations are
            =, !=, exists, in, and notIn.
          in: query
          name: labelSelector
          type: string
        - description: The maximum number of records that should be returned.
          in: query
          name: limit
          type: integer
        - description: The project ID or project number from which the services should be listed.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            The baseline resource version from which the list or watch operation should
            start. Not currently used by Cloud Run.
          in: query
          name: resourceVersion
          type: string
        - description: |-
            Flag that indicates that the client expects to watch this resource as well.
            Not currently used by Cloud Run.
          in: query
          name: watch
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListServicesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Rpc to create a service.
      operationId: run.projects.locations.services.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Service'
        - description: The project ID or project number in which this service should be created.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Service'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1alpha1/{resource}:getIamPolicy':
    get:
      description: |-
        Get the IAM Access Control policy currently in effect for the given
        Cloud Run service. This result does not include any inherited policies.
      operationId: run.projects.locations.services.getIamPolicy
      parameters:
        - description: |-
            REQUIRED: The resource for which the policy is being requested.
            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1alpha1/{resource}:setIamPolicy':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Sets the IAM Access control policy for the specified Service. Overwrites
        any existing policy.
      operationId: run.projects.locations.services.setIamPolicy
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SetIamPolicyRequest'
        - description: |-
            REQUIRED: The resource for which the policy is being specified.
            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1alpha1/{resource}:testIamPermissions':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Returns permissions that a caller has on the specified Project.

        There are no permissions required for making this API call.
      operationId: run.projects.locations.services.testIamPermissions
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TestIamPermissionsRequest'
        - description: |-
            REQUIRED: The resource for which the policy detail is being requested.
            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TestIamPermissionsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
definitions:
  Addressable:
    description: Information for connecting over HTTP(s).
    properties:
      hostname:
        type: string
    type: object
  AuditConfig:
    description: |-
      Specifies the audit configuration for a service.
      The configuration determines which permission types are logged, and what
      identities, if any, are exempted from logging.
      An AuditConfig must have one or more AuditLogConfigs.

      If there are AuditConfigs for both `allServices` and a specific service,
      the union of the two AuditConfigs is used for that service: the log_types
      specified in each AuditConfig are enabled, and the exempted_members in each
      AuditLogConfig are exempted.

      Example Policy with multiple AuditConfigs:

          {
            "audit_configs": [
              {
                "service": "allServices"
                "audit_log_configs": [
                  {
                    "log_type": "DATA_READ",
                    "exempted_members": [
                      "user:foo@gmail.com"
                    ]
                  },
                  {
                    "log_type": "DATA_WRITE",
                  },
                  {
                    "log_type": "ADMIN_READ",
                  }
                ]
              },
              {
                "service": "fooservice.googleapis.com"
                "audit_log_configs": [
                  {
                    "log_type": "DATA_READ",
                  },
                  {
                    "log_type": "DATA_WRITE",
                    "exempted_members": [
                      "user:bar@gmail.com"
                    ]
                  }
                ]
              }
            ]
          }

      For fooservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
      logging. It also exempts foo@gmail.com from DATA_READ logging, and
      bar@gmail.com from DATA_WRITE logging.
    properties:
      auditLogConfigs:
        description: The configuration for logging of each type of permission.
        items:
          $ref: '#/definitions/AuditLogConfig'
        type: array
      service:
        description: |-
          Specifies a service that will be enabled for audit logging.
          For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
          `allServices` is a special value that covers all services.
        type: string
    type: object
  AuditLogConfig:
    description: |-
      Provides the configuration for logging a type of permissions.
      Example:

          {
            "audit_log_configs": [
              {
                "log_type": "DATA_READ",
                "exempted_members": [
                  "user:foo@gmail.com"
                ]
              },
              {
                "log_type": "DATA_WRITE",
              }
            ]
          }

      This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
      foo@gmail.com from DATA_READ logging.
    properties:
      exemptedMembers:
        description: |-
          Specifies the identities that do not cause logging for this type of
          permission.
          Follows the same format of Binding.members.
        items:
          type: string
        type: array
      logType:
        description: The log type that this config enables.
        enum:
          - LOG_TYPE_UNSPECIFIED
          - ADMIN_READ
          - DATA_WRITE
          - DATA_READ
        type: string
    type: object
  AuthorizedDomain:
    description: |-
      A domain that a user has been authorized to administer. To authorize use
      of a domain, verify ownership via
      [Webmaster Central](https://www.google.com/webmasters/verification/home).
    properties:
      id:
        description: 'Relative name of the domain authorized for use. Example: `example.com`.'
        type: string
      name:
        description: |-
          Read only. Full path to the `AuthorizedDomain` resource in the API.
          Example: `apps/myapp/authorizedDomains/example.com`.
        type: string
    type: object
  Binding:
    description: Associates `members` with a `role`.
    properties:
      condition:
        $ref: '#/definitions/Expr'
        description: |-
          The condition that is associated with this binding.
          NOTE: an unsatisfied condition will not allow user access via current
          binding. Different bindings, including their conditions, are examined
          independently.
      members:
        description: |+
          Specifies the identities requesting access for a Cloud Platform resource.
          `members` can have the following values:

          * `allUsers`: A special identifier that represents anyone who is
             on the internet; with or without a Google account.

          * `allAuthenticatedUsers`: A special identifier that represents anyone
             who is authenticated with a Google account or a service account.

          * `user:{emailid}`: An email address that represents a specific Google
             account. For example, `alice@gmail.com` .


          * `serviceAccount:{emailid}`: An email address that represents a service
             account. For example, `my-other-app@appspot.gserviceaccount.com`.

          * `group:{emailid}`: An email address that represents a Google group.
             For example, `admins@example.com`.


          * `domain:{domain}`: The G Suite domain (primary) that represents all the
             users of that domain. For example, `google.com` or `example.com`.

        items:
          type: string
        type: array
      role:
        description: |-
          Role that is assigned to `members`.
          For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
        type: string
    type: object
  Capabilities:
    description: Adds and removes POSIX capabilities from running containers.
    properties:
      add:
        description: |-
          Added capabilities
          +optional
        items:
          type: string
        type: array
      drop:
        description: |-
          Removed capabilities
          +optional
        items:
          type: string
        type: array
    type: object
  ConfigMapEnvSource:
    description: |-
      ConfigMapEnvSource selects a ConfigMap to populate the environment
      variables with.

      The contents of the target ConfigMap's Data field will represent the
      key-value pairs as environment variables.
    properties:
      localObjectReference:
        $ref: '#/definitions/LocalObjectReference'
        description: The ConfigMap to select from.
      optional:
        description: |-
          Specify whether the ConfigMap must be defined
          +optional
        type: boolean
    type: object
  Configuration:
    description: |-
      Configuration represents the "floating HEAD" of a linear history of
      Revisions, and optionally how the containers those revisions reference are
      built. Users create new Revisions by updating the Configuration's spec. The
      "latest created" revision's name is available under status, as is the "latest
      ready" revision's name. See also:
      https://github.com/knative/serving/blob/master/docs/spec/overview.md#configuration
    properties:
      apiVersion:
        description: The API version for this call such as "v1alpha1".
        type: string
      kind:
        description: 'The kind of resource, in this case always "Configuration".'
        type: string
      metadata:
        $ref: '#/definitions/ObjectMeta'
        description: |-
          Metadata associated with this Configuration, including name, namespace,
          labels, and annotations.
      spec:
        $ref: '#/definitions/ConfigurationSpec'
        description: Spec holds the desired state of the Configuration (from the client).
      status:
        $ref: '#/definitions/ConfigurationStatus'
        description: |-
          Status communicates the observed state of the Configuration (from the
          controller).
    type: object
  ConfigurationCondition:
    description: ConfigurationCondition defines a readiness condition for a Configuration.
    properties:
      lastTransitionTime:
        description: |-
          Last time the condition transitioned from one status to another.
          +optional
        format: google-datetime
        type: string
      message:
        description: |-
          Human-readable message indicating details about last transition.
          +optional
        type: string
      reason:
        description: |-
          One-word CamelCase reason for the condition's last transition.
          +optional
        type: string
      status:
        description: 'Status of the condition, one of True, False, Unknown.'
        type: string
      type:
        description: |-
          ConfigurationConditionType is used to communicate the status of the
          reconciliation process. See also:
          https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting
          Types include:"Ready"
        type: string
    type: object
  ConfigurationSpec:
    description: |-
      ConfigurationSpec holds the desired state of the Configuration (from the
      client).
    properties:
      generation:
        description: |-
          Deprecated and not currently populated by Cloud Run. See
          metadata.generation instead, which is the sequence number containing the
          latest generation of the desired state.

          Read-only.
        format: int32
        type: integer
      revisionTemplate:
        $ref: '#/definitions/RevisionTemplate'
        description: |-
          RevisionTemplate holds the latest specification for the Revision to
          be stamped out. The template references the container image, and may also
          include labels and annotations that should be attached to the Revision.
          To correlate a Revision, and/or to force a Revision to be created when the
          spec doesn't otherwise change, a nonce label may be provided in the
          template metadata. For more details, see:
          https://github.com/knative/serving/blob/master/docs/client-conventions.md#associate-modifications-with-revisions

          Cloud Run does not currently support referencing a build that is
          responsible for materializing the container image from source.
    type: object
  ConfigurationStatus:
    description: |-
      ConfigurationStatus communicates the observed state of the Configuration
      (from the controller).
    properties:
      conditions:
        description: |-
          Conditions communicates information about ongoing/complete
          reconciliation processes that bring the "spec" inline with the observed
          state of the world.
        items:
          $ref: '#/definitions/ConfigurationCondition'
        type: array
      latestCreatedRevisionName:
        description: |-
          LatestCreatedRevisionName is the last revision that was created from this
          Configuration. It might not be ready yet, for that use
          LatestReadyRevisionName.
        type: string
      latestReadyRevisionName:
        description: |-
          LatestReadyRevisionName holds the name of the latest Revision stamped out
          from this Configuration that has had its "Ready" condition become "True".
        type: string
      observedGeneration:
        description: |-
          ObservedGeneration is the 'Generation' of the Configuration that
          was last processed by the controller. The observed generation is updated
          even if the controller failed to process the spec and create the Revision.

          Clients polling for completed reconciliation should poll until
          observedGeneration = metadata.generation, and the Ready condition's status
          is True or False.
        format: int32
        type: integer
    type: object
  Container:
    description: |-
      A single application container.
      This specifies both the container to run, the command to run in the container
      and the arguments to supply to it.
      Note that additional arguments may be supplied by the system to the container
      at runtime.
    properties:
      args:
        description: |-
          Arguments to the entrypoint.
          The docker image's CMD is used if this is not provided.
          Variable references $(VAR_NAME) are expanded using the container's
          environment. If a variable cannot be resolved, the reference in the input
          string will be unchanged. The $(VAR_NAME) syntax can be escaped with a
          double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
          regardless of whether the variable exists or not.
          Cannot be updated.
          More info:
          https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
          +optional
        items:
          type: string
        type: array
      command:
        description: |-
          Entrypoint array. Not executed within a shell.
          The docker image's ENTRYPOINT is used if this is not provided.
          Variable references $(VAR_NAME) are expanded using the container's
          environment. If a variable cannot be resolved, the reference in the input
          string will be unchanged. The $(VAR_NAME) syntax can be escaped with a
          double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
          regardless of whether the variable exists or not.
          Cannot be updated.
          More info:
          https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
          +optional
        items:
          type: string
        type: array
      env:
        description: |-
          List of environment variables to set in the container.
          Cannot be updated.
          +optional
        items:
          $ref: '#/definitions/EnvVar'
        type: array
      envFrom:
        description: |-
          List of sources to populate environment variables in the container.
          The keys defined within a source must be a C_IDENTIFIER. All invalid keys
          will be reported as an event when the container is starting. When a key
          exists in multiple sources, the value associated with the last source will
          take precedence. Values defined by an Env with a duplicate key will take
          precedence. Cannot be updated. +optional
        items:
          $ref: '#/definitions/EnvFromSource'
        type: array
      image:
        description: |-
          Docker image name.
          More info: https://kubernetes.io/docs/concepts/containers/images
        type: string
      imagePullPolicy:
        description: |-
          Image pull policy.
          One of Always, Never, IfNotPresent.
          Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
          Cannot be updated.
          More info:
          https://kubernetes.io/docs/concepts/containers/images#updating-images
          +optional
        type: string
      lifecycle:
        $ref: '#/definitions/Lifecycle'
        description: |-
          Actions that the management system should take in response to container
          lifecycle events. Cannot be updated. +optional
      livenessProbe:
        $ref: '#/definitions/Probe'
        description: |-
          Periodic probe of container liveness.
          Container will be restarted if the probe fails.
          Cannot be updated.
          More info:
          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
      name:
        description: |-
          Name of the container specified as a DNS_LABEL.
          Each container must have a unique name (DNS_LABEL).
          Cannot be updated.
        type: string
      ports:
        description: |-
          List of ports to expose from the container. Exposing a port here gives
          the system additional information about the network connections a
          container uses, but is primarily informational. Not specifying a port here
          DOES NOT prevent that port from being exposed. Any port which is
          listening on the default "0.0.0.0" address inside a container will be
          accessible from the network.
          Cannot be updated.
          +optional
        items:
          $ref: '#/definitions/ContainerPort'
        type: array
      readinessProbe:
        $ref: '#/definitions/Probe'
        description: |-
          Periodic probe of container service readiness.
          Container will be removed from service endpoints if the probe fails.
          Cannot be updated.
          More info:
          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
      resources:
        $ref: '#/definitions/ResourceRequirements'
        description: |-
          Compute Resources required by this container.
          Cannot be updated.
          More info:
          https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
          +optional
      securityContext:
        $ref: '#/definitions/SecurityContext'
        description: |-
          Security options the pod should run with.
          More info: https://kubernetes.io/docs/concepts/policy/security-context/
          More info:
          https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
          +optional
      stdin:
        description: |-
          Whether this container should allocate a buffer for stdin in the container
          runtime. If this is not set, reads from stdin in the container will always
          result in EOF. Default is false. +optional
        type: boolean
      stdinOnce:
        description: |-
          Whether the container runtime should close the stdin channel after it has
          been opened by a single attach. When stdin is true the stdin stream will
          remain open across multiple attach sessions. If stdinOnce is set to true,
          stdin is opened on container start, is empty until the first client
          attaches to stdin, and then remains open and accepts data until the client
          disconnects, at which time stdin is closed and remains closed until the
          container is restarted. If this flag is false, a container processes that
          reads from stdin will never receive an EOF. Default is false +optional
        type: boolean
      terminationMessagePath:
        description: |-
          Optional: Path at which the file to which the container's termination
          message will be written is mounted into the container's filesystem. Message
          written is intended to be brief final status, such as an assertion failure
          message. Will be truncated by the node if greater than 4096 bytes. The
          total message length across all containers will be limited to 12kb.
          Defaults to /dev/termination-log.
          Cannot be updated.
          +optional
        type: string
      terminationMessagePolicy:
        description: |-
          Indicate how the termination message should be populated. File will use the
          contents of terminationMessagePath to populate the container status message
          on both success and failure. FallbackToLogsOnError will use the last chunk
          of container log output if the termination message file is empty and the
          container exited with an error. The log output is limited to 2048 bytes or
          80 lines, whichever is smaller. Defaults to File. Cannot be updated.
          +optional
        type: string
      tty:
        description: |-
          Whether this container should allocate a TTY for itself, also requires
          'stdin' to be true. Default is false. +optional
        type: boolean
      volumeDevices:
        description: |-
          volumeDevices is the list of block devices to be used by the container.
          This is an alpha feature and may change in the future.
          +optional
        items:
          $ref: '#/definitions/VolumeDevice'
        type: array
      volumeMounts:
        description: |-
          Pod volumes to mount into the container's filesystem.
          Cannot be updated.
          +optional
        items:
          $ref: '#/definitions/VolumeMount'
        type: array
      workingDir:
        description: |-
          Container's working directory.
          If not specified, the container runtime's default will be used, which
          might be configured in the container image.
          Cannot be updated.
          +optional
        type: string
    type: object
  ContainerPort:
    description: ContainerPort represents a network port in a single container.
    properties:
      containerPort:
        description: |-
          Number of port to expose on the pod's IP address.
          This must be a valid port number, 0 < x < 65536.
        format: int32
        type: integer
      hostIP:
        description: |-
          What host IP to bind the external port to.
          +optional
        type: string
      hostPort:
        description: |-
          Number of port to expose on the host.
          If specified, this must be a valid port number, 0 < x < 65536.
          If HostNetwork is specified, this must match ContainerPort.
          Most containers do not need this.
          +optional
        format: int32
        type: integer
      name:
        description: |-
          If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
          named port in a pod must have a unique name. Name for the port that can be
          referred to by services.
          +optional
        type: string
      protocol:
        description: |-
          Protocol for port. Must be UDP or TCP.
          Defaults to "TCP".
          +optional
        type: string
    type: object
  DomainMapping:
    description: Resource to hold the state and status of a user's domain mapping.
    properties:
      apiVersion:
        description: The API version for this call such as "v1alpha1".
        type: string
      kind:
        description: 'The kind of resource, in this case "DomainMapping".'
        type: string
      metadata:
        $ref: '#/definitions/ObjectMeta'
        description: Metadata associated with this BuildTemplate.
      spec:
        $ref: '#/definitions/DomainMappingSpec'
        description: The spec for this DomainMapping.
      status:
        $ref: '#/definitions/DomainMappingStatus'
        description: The current status of the DomainMapping.
    type: object
  DomainMappingCondition:
    description: DomainMappingCondition contains state information for a DomainMapping.
    properties:
      message:
        description: |-
          Human readable message indicating details about the current status.
          +optional
        type: string
      reason:
        description: |-
          One-word CamelCase reason for the condition's current status.
          +optional
        type: string
      status:
        description: 'Status of the condition, one of True, False, Unknown.'
        type: string
      type:
        description: Type of domain mapping condition.
        type: string
    type: object
  DomainMappingSpec:
    description: The desired state of the Domain Mapping.
    properties:
      certificateMode:
        description: The mode of the certificate.
        enum:
          - CERTIFICATE_MODE_UNSPECIFIED
          - NONE
          - AUTOMATIC
        type: string
      forceOverride:
        description: |-
          If set, the mapping will override any mapping set before this spec was set.
          It is recommended that the user leaves this empty to receive an error
          warning about a potential conflict and only set it once the respective UI
          has given such a warning.
        type: boolean
      routeName:
        description: |-
          The name of the Knative Route that this DomainMapping applies to.
          The route must exist.
        type: string
    type: object
  DomainMappingStatus:
    description: The current state of the Domain Mapping.
    properties:
      conditions:
        description: |-
          Array of observed DomainMappingConditions, indicating the current state
          of the DomainMapping.
        items:
          $ref: '#/definitions/DomainMappingCondition'
        type: array
      mappedRouteName:
        description: The name of the route that the mapping currently points to.
        type: string
      observedGeneration:
        description: |-
          ObservedGeneration is the 'Generation' of the DomainMapping that
          was last processed by the controller.

          Clients polling for completed reconciliation should poll until
          observedGeneration = metadata.generation and the Ready condition's status
          is True or False.
        format: int32
        type: integer
      resourceRecords:
        description: |-
          The resource records required to configure this domain mapping. These
          records must be added to the domain's DNS configuration in order to
          serve the application via this domain mapping.
        items:
          $ref: '#/definitions/ResourceRecord'
        type: array
    type: object
  Empty:
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance:

          service Foo {
            rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
          }

      The JSON representation for `Empty` is empty JSON object `{}`.
    properties: {}
    type: object
  EnvFromSource:
    description: EnvFromSource represents the source of a set of ConfigMaps
    properties:
      configMapRef:
        $ref: '#/definitions/ConfigMapEnvSource'
        description: |-
          The ConfigMap to select from
          +optional
      prefix:
        description: |-
          An optional identifier to prepend to each key in the ConfigMap. Must be a
          C_IDENTIFIER. +optional
        type: string
      secretRef:
        $ref: '#/definitions/SecretEnvSource'
        description: |-
          The Secret to select from
          +optional
    type: object
  EnvVar:
    description: EnvVar represents an environment variable present in a Container.
    properties:
      name:
        description: Name of the environment variable. Must be a C_IDENTIFIER.
        type: string
      value:
        description: |-
          Variable references $(VAR_NAME) are expanded
          using the previous defined environment variables in the container and
          any route environment variables. If a variable cannot be resolved,
          the reference in the input string will be unchanged. The $(VAR_NAME)
          syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
          references will never be expanded, regardless of whether the variable
          exists or not.
          Defaults to "".
          +optional
        type: string
    type: object
  ExecAction:
    description: ExecAction describes a "run in container" action.
    properties:
      command:
        description: |-
          Command is the command line to execute inside the container, the working
          directory for the command  is root ('/') in the container's filesystem. The
          command is simply exec'd, it is not run inside a shell, so traditional
          shell instructions ('|', etc) won't work. To use a shell, you need to
          explicitly call out to that shell. Exit status of 0 is treated as
          live/healthy and non-zero is unhealthy. +optional
        type: string
    type: object
  Expr:
    description: |-
      Represents an expression text. Example:

          title: "User account presence"
          description: "Determines whether the request has a user account"
          expression: "size(request.user) > 0"
    properties:
      description:
        description: |-
          An optional description of the expression. This is a longer text which
          describes the expression, e.g. when hovered over it in a UI.
        type: string
      expression:
        description: |-
          Textual representation of an expression in
          Common Expression Language syntax.

          The application context of the containing message determines which
          well-known feature set of CEL is supported.
        type: string
      location:
        description: |-
          An optional string indicating the location of the expression for error
          reporting, e.g. a file name and a position in the file.
        type: string
      title:
        description: |-
          An optional title for the expression, i.e. a short string describing
          its purpose. This can be used e.g. in UIs which allow to enter the
          expression.
        type: string
    type: object
  HTTPGetAction:
    description: HTTPGetAction describes an action based on HTTP Get requests.
    properties:
      host:
        description: |-
          Host name to connect to, defaults to the pod IP. You probably want to set
          "Host" in httpHeaders instead.
          +optional
        type: string
      httpHeaders:
        description: |-
          Custom headers to set in the request. HTTP allows repeated headers.
          +optional
        items:
          $ref: '#/definitions/HTTPHeader'
        type: array
      path:
        description: |-
          Path to access on the HTTP server.
          +optional
        type: string
      port:
        $ref: '#/definitions/IntOrString'
        description: |-
          Name or number of the port to access on the container.
          Number must be in the range 1 to 65535.
          Name must be an IANA_SVC_NAME.
      scheme:
        description: |-
          Scheme to use for connecting to the host.
          Defaults to HTTP.
          +optional
        type: string
    type: object
  HTTPHeader:
    description: HTTPHeader describes a custom header to be used in HTTP probes
    properties:
      name:
        description: The header field name
        type: string
      value:
        description: The header field value
        type: string
    type: object
  Handler:
    description: Handler defines a specific action that should be taken
    properties:
      exec:
        $ref: '#/definitions/ExecAction'
        description: |-
          One and only one of the following should be specified.
          Exec specifies the action to take.
          +optional
      httpGet:
        $ref: '#/definitions/HTTPGetAction'
        description: |-
          HTTPGet specifies the http request to perform.
          +optional
      tcpSocket:
        $ref: '#/definitions/TCPSocketAction'
        description: |-
          TCPSocket specifies an action involving a TCP port.
          TCP hooks not yet supported
    type: object
  Initializer:
    description: Initializer is information about an initializer that has not yet completed.
    properties:
      name:
        description: name of the process that is responsible for initializing this object.
        type: string
    type: object
  Initializers:
    description: Initializers tracks the progress of initialization.
    properties:
      pending:
        description: |-
          Pending is a list of initializers that must execute in order before this
          object is visible. When the last pending initializer is removed, and no
          failing result is set, the initializers struct will be set to nil and the
          object is considered as initialized and visible to all clients.
          +patchMergeKey=name
          +patchStrategy=merge
        items:
          $ref: '#/definitions/Initializer'
        type: array
    type: object
  IntOrString:
    description: |-
      IntOrString is a type that can hold an int32 or a string.  When used in
      JSON or YAML marshalling and unmarshalling, it produces or consumes the
      inner type.  This allows you to have, for example, a JSON field that can
      accept a name or number.
    properties:
      intVal:
        description: The int value.
        format: int32
        type: integer
      strVal:
        description: The string value.
        type: string
      type:
        description: The type of the value.
        format: int64
        type: string
    type: object
  Lifecycle:
    description: |-
      Lifecycle describes actions that the management system should take in
      response to container lifecycle events. For the PostStart and PreStop
      lifecycle handlers, management of the container blocks until the action is
      complete, unless the container process fails, in which case the handler is
      aborted.
    properties:
      postStart:
        $ref: '#/definitions/Handler'
        description: |-
          PostStart is called immediately after a container is created. If the
          handler fails, the container is terminated and restarted according to its
          restart policy. Other management of the container blocks until the hook
          completes. More info:
          https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
          +optional
      preStop:
        $ref: '#/definitions/Handler'
        description: |-
          PreStop is called immediately before a container is terminated.
          The container is terminated after the handler completes.
          The reason for termination is passed to the handler.
          Regardless of the outcome of the handler, the container is eventually
          terminated. Other management of the container blocks until the hook
          completes. More info:
          https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
          +optional
    type: object
  ListAuthorizedDomainsResponse:
    description: A list of Authorized Domains.
    properties:
      domains:
        description: The authorized domains belonging to the user.
        items:
          $ref: '#/definitions/AuthorizedDomain'
        type: array
      nextPageToken:
        description: Continuation token for fetching the next page of results.
        type: string
    type: object
  ListConfigurationsResponse:
    description: ListConfigurationsResponse is a list of Configuration resources.
    properties:
      apiVersion:
        description: The API version for this call such as "v1alpha1".
        type: string
      items:
        description: List of Configurations.
        items:
          $ref: '#/definitions/Configuration'
        type: array
      kind:
        description: 'The kind of this resource, in this case "ConfigurationList".'
        type: string
      metadata:
        $ref: '#/definitions/ListMeta'
        description: Metadata associated with this Configuration list.
      unreachable:
        description: Locations that could not be reached.
        items:
          type: string
        type: array
    type: object
  ListDomainMappingsResponse:
    description: ListDomainMappingsResponse is a list of DomainMapping resources.
    properties:
      apiVersion:
        description: The API version for this call such as "v1alpha1".
        type: string
      items:
        description: List of DomainMappings.
        items:
          $ref: '#/definitions/DomainMapping'
        type: array
      kind:
        description: 'The kind of this resource, in this case "DomainMappingList".'
        type: string
      metadata:
        $ref: '#/definitions/ListMeta'
        description: Metadata associated with this DomainMapping list.
    type: object
  ListLocationsResponse:
    description: The response message for Locations.ListLocations.
    properties:
      locations:
        description: A list of locations that matches the specified filter in the request.
        items:
          $ref: '#/definitions/Location'
        type: array
      nextPageToken:
        description: The standard List next-page token.
        type: string
    type: object
  ListMeta:
    description: |-
      ListMeta describes metadata that synthetic resources must have, including
      lists and various status objects. A resource may have only one of
      {ObjectMeta, ListMeta}.
    properties:
      continue:
        description: |-
          continue may be set if the user set a limit on the number of items
          returned, and indicates that the server has more data available. The value
          is opaque and may be used to issue another request to the endpoint that
          served this list to retrieve the next set of available objects. Continuing
          a list may not be possible if the server configuration has changed or more
          than a few minutes have passed. The resourceVersion field returned when
          using this continue value will be identical to the value in the first
          response.
        type: string
      resourceVersion:
        description: |-
          String that identifies the server's internal version of this object that
          can be used by clients to determine when objects have changed. Value must
          be treated as opaque by clients and passed unmodified back to the server.
          Populated by the system.
          Read-only.
          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
        type: string
    type: object
  ListRevisionsResponse:
    description: ListRevisionsResponse is a list of Revision resources.
    properties:
      apiVersion:
        description: The API version for this call such as "v1alpha1".
        type: string
      items:
        description: List of Revisions.
        items:
          $ref: '#/definitions/Revision'
        type: array
      kind:
        description: 'The kind of this resource, in this case "RevisionList".'
        type: string
      metadata:
        $ref: '#/definitions/ListMeta'
        description: Metadata associated with this revision list.
      unreachable:
        description: Locations that could not be reached.
        items:
          type: string
        type: array
    type: object
  ListRoutesResponse:
    description: ListRoutesResponse is a list of Route resources.
    properties:
      apiVersion:
        description: The API version for this call such as "v1alpha1".
        type: string
      items:
        description: List of Routes.
        items:
          $ref: '#/definitions/Route'
        type: array
      kind:
        description: 'The kind of this resource, in this case always "RouteList".'
        type: string
      metadata:
        $ref: '#/definitions/ListMeta'
        description: Metadata associated with this Route list.
      unreachable:
        description: Locations that could not be reached.
        items:
          type: string
        type: array
    type: object
  ListServicesResponse:
    description: A list of Service resources.
    properties:
      apiVersion:
        description: The API version for this call such as "v1alpha1".
        type: string
      items:
        description: List of Services.
        items:
          $ref: '#/definitions/Service'
        type: array
      kind:
        description: 'The kind of this resource, in this case "ServiceList".'
        type: string
      metadata:
        $ref: '#/definitions/ListMeta'
        description: Metadata associated with this Service list.
      unreachable:
        description: Locations that could not be reached.
        items:
          type: string
        type: array
    type: object
  LocalObjectReference:
    description: |-
      LocalObjectReference contains enough information to let you locate the
      referenced object inside the same namespace.
    properties:
      name:
        description: |-
          Name of the referent.
          More info:
          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        type: string
    type: object
  Location:
    description: A resource that represents Google Cloud Platform location.
    properties:
      displayName:
        description: |-
          The friendly name for this location, typically a nearby city name.
          For example, "Tokyo".
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Cross-service attributes for the location. For example

              {"cloud.googleapis.com/region": "us-east1"}
        type: object
      locationId:
        description: 'The canonical id for this location. For example: `"us-east1"`.'
        type: string
      metadata:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: |-
          Service-specific metadata. For example the available capacity at the given
          location.
        type: object
      name:
        description: |-
          Resource name for the location, which may vary between implementations.
          For example: `"projects/example-project/locations/us-east1"`
        type: string
    type: object
  ObjectMeta:
    description: |-
      ObjectMeta is metadata that all persisted resources must have, which includes
      all objects users must create.
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that
          may be set by external tools to store and retrieve arbitrary metadata. They
          are not queryable and should be preserved when modifying objects. More
          info: http://kubernetes.io/docs/user-guide/annotations +optional
        type: object
      clusterName:
        description: |-
          Not currently supported by Cloud Run.

          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in
          different clusters. This field is not set anywhere right now and apiserver
          is going to ignore it if set in create or update request. +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this
          object was created. It is not guaranteed to be set in happens-before order
          across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        format: google-datetime
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Not currently supported by Cloud Run.

          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also
          set. May only be shortened. Read-only. +optional
        format: int32
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be
          deleted. This field is set by the server when a graceful deletion is
          requested by the user, and is not directly settable by a client. The
          resource is expected to be deleted (no longer visible from resource lists,
          and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items,
          deletion is blocked. Once the deletionTimestamp is set, this value may not
          be unset or be set further into the future, although it may be shortened or
          the resource may be deleted prior to this time. For example, a user may
          request that a pod is deleted in 30 seconds. The Kubelet will react by
          sending a graceful termination signal to the containers in the pod. After
          that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)
          to the container and after cleanup, remove the pod from the API. In the
          presence of network partitions, this object may still exist after this
          timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          +optional
        format: google-datetime
        type: string
      finalizers:
        description: |-
          Not currently supported by Cloud Run.

          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          Not currently supported by Cloud Run.

          GenerateName is an optional prefix, used by the server, to generate a
          unique name ONLY IF the Name field has not been provided. If this field is
          used, the name returned to the client will be different than the name
          passed. This value will also be combined with a unique suffix. The provided
          value has the same validation rules as the Name field, and may be truncated
          by the length of the suffix required to make the value unique on the
          server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with
          Reason ServerTimeout indicating a unique name could not be found in the
          time allotted, and the client should retry (optionally after the time
          indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          +optional
           string generateName = 2;
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        format: int32
        type: integer
      initializers:
        $ref: '#/definitions/Initializers'
        description: |-
          Not currently supported by Cloud Run.

          An initializer is a controller which enforces some system invariant at
          object creation time. This field is a list of initializers that have not
          yet acted on this object. If nil or empty, this object has been completely
          initialized. Otherwise, the object is considered uninitialized and is
          hidden (in list/watch and get calls) from clients that haven't explicitly
          asked to observe uninitialized objects.

          When an object is created, the system will populate this list with the
          current set of initializers. Only privileged users may set or modify this
          list. Once it is empty, it may not be modified further by any user.
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and routes.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      name:
        description: |-
          Name must be unique within a namespace, within a Cloud Run region.
          Is required when creating
          resources, although some resources may allow a client to request the
          generation of an appropriate name automatically. Name is primarily intended
          for creation idempotence and configuration definition. Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within each name must be unique, within a
          Cloud Run region. In Cloud Run the namespace must be equal to either the
          project ID or project number.
        type: string
      ownerReferences:
        description: |-
          List of objects that own this object. If ALL objects in the list have
          been deleted, this object will be garbage collected.
          +optional
        items:
          $ref: '#/definitions/OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that
          can be used by clients to determine when objects have changed. May be used
          for optimistic concurrency, change detection, and the watch operation on a
          resource or set of resources. Clients must treat these values as opaque and
          passed unmodified back to the server. They may only be valid for a
          particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
           string selfLink = 4;
        type: string
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically
          generated by the server on successful creation of a resource and is not
          allowed to change on PUT operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  OwnerReference:
    description: |-
      OwnerReference contains enough information to let you identify an owning
      object. Currently, an owning object must be in the same namespace, so there
      is no namespace field.
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
      blockOwnerDeletion:
        description: |-
          If true, AND if the owner has the "foregroundDeletion" finalizer, then
          the owner cannot be deleted from the key-value store until this
          reference is removed.
          Defaults to false.
          To set this field, a user needs "delete" permission of the owner,
          otherwise 422 (Unprocessable Entity) will be returned.
          +optional
        type: boolean
      controller:
        description: |-
          If true, this reference points to the managing controller.
          +optional
        type: boolean
      kind:
        description: |-
          Kind of the referent.
          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
        type: string
      name:
        description: |-
          Name of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
        type: string
      uid:
        description: |-
          UID of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
        type: string
    type: object
  Policy:
    description: |-
      Defines an Identity and Access Management (IAM) policy. It is used to
      specify access control policies for Cloud Platform resources.


      A `Policy` consists of a list of `bindings`. A `binding` binds a list of
      `members` to a `role`, where the members can be user accounts, Google groups,
      Google domains, and service accounts. A `role` is a named list of permissions
      defined by IAM.

      **JSON Example**

          {
            "bindings": [
              {
                "role": "roles/owner",
                "members": [
                  "user:mike@example.com",
                  "group:admins@example.com",
                  "domain:google.com",
                  "serviceAccount:my-other-app@appspot.gserviceaccount.com"
                ]
              },
              {
                "role": "roles/viewer",
                "members": ["user:sean@example.com"]
              }
            ]
          }

      **YAML Example**

          bindings:
          - members:
            - user:mike@example.com
            - group:admins@example.com
            - domain:google.com
            - serviceAccount:my-other-app@appspot.gserviceaccount.com
            role: roles/owner
          - members:
            - user:sean@example.com
            role: roles/viewer


      For a description of IAM and its features, see the
      [IAM developer's guide](https://cloud.google.com/iam/docs).
    properties:
      auditConfigs:
        description: Specifies cloud audit logging configuration for this policy.
        items:
          $ref: '#/definitions/AuditConfig'
        type: array
      bindings:
        description: |-
          Associates a list of `members` to a `role`.
          `bindings` with no members will result in an error.
        items:
          $ref: '#/definitions/Binding'
        type: array
      etag:
        description: |-
          `etag` is used for optimistic concurrency control as a way to help
          prevent simultaneous updates of a policy from overwriting each other.
          It is strongly suggested that systems make use of the `etag` in the
          read-modify-write cycle to perform policy updates in order to avoid race
          conditions: An `etag` is returned in the response to `getIamPolicy`, and
          systems are expected to put that etag in the request to `setIamPolicy` to
          ensure that their change will be applied to the same version of the policy.

          If no `etag` is provided in the call to `setIamPolicy`, then the existing
          policy is overwritten blindly.
        format: byte
        type: string
      version:
        description: Deprecated.
        format: int32
        type: integer
    type: object
  Probe:
    description: |-
      Probe describes a health check to be performed against a container to
      determine whether it is alive or ready to receive traffic.
    properties:
      failureThreshold:
        description: |-
          Minimum consecutive failures for the probe to be considered failed after
          having succeeded. Defaults to 3. Minimum value is 1. +optional
        format: int32
        type: integer
      handler:
        $ref: '#/definitions/Handler'
        description: The action taken to determine the health of a container
      initialDelaySeconds:
        description: |-
          Number of seconds after the container has started before liveness probes
          are initiated. More info:
          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
        format: int32
        type: integer
      periodSeconds:
        description: |-
          How often (in seconds) to perform the probe.
          Default to 10 seconds. Minimum value is 1.
          +optional
        format: int32
        type: integer
      successThreshold:
        description: |-
          Minimum consecutive successes for the probe to be considered successful
          after having failed. Defaults to 1. Must be 1 for liveness. Minimum value
          is 1. +optional
        format: int32
        type: integer
      timeoutSeconds:
        description: |-
          Number of seconds after which the probe times out.
          Defaults to 1 second. Minimum value is 1.
          More info:
          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
        format: int32
        type: integer
    type: object
  Quantity:
    description: |-
      The view model of a single quantity, e.g. "800 MiB". Corresponds to
      https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/generated.proto
    properties:
      string:
        description: 'Stringified version of the quantity, e.g., "800 MiB".'
        type: string
    type: object
  ResourceRecord:
    description: A DNS resource record.
    properties:
      name:
        description: |-
          Relative name of the object affected by this record. Only applicable for
          `CNAME` records. Example: 'www'.
        type: string
      rrdata:
        description: |-
          Data for this record. Values vary by record type, as defined in RFC 1035
          (section 5) and RFC 1034 (section 3.6.1).
        type: string
      type:
        description: 'Resource record type. Example: `AAAA`.'
        enum:
          - RECORD_TYPE_UNSPECIFIED
          - A
          - AAAA
          - CNAME
        type: string
    type: object
  ResourceRequirements:
    description: ResourceRequirements describes the compute resource requirements.
    properties:
      limits:
        additionalProperties:
          type: string
        description: |-
          Limits describes the maximum amount of compute resources allowed.
          The values of the map is string form of the 'quantity' k8s type:
          https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
        type: object
      limitsInMap:
        additionalProperties:
          $ref: '#/definitions/Quantity'
        description: |-
          Limits describes the maximum amount of compute resources allowed.
          This is a temporary field created to migrate away from the
          map<string, Quantity> limits field. This is done to become compliant
          with k8s style API.
          This field is deprecated in favor of limits field.
        type: object
      requests:
        additionalProperties:
          type: string
        description: |-
          Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value.
          The values of the map is string form of the 'quantity' k8s type:
          https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
        type: object
      requestsInMap:
        additionalProperties:
          $ref: '#/definitions/Quantity'
        description: |-
          Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value.
          This is a temporary field created to migrate away from the
          map<string, Quantity> requests field. This is done to become compliant
          with k8s style API.
          This field is deprecated in favor of requests field.
        type: object
    type: object
  Revision:
    description: |-
      Revision is an immutable snapshot of code and configuration.  A revision
      references a container image. Revisions are created by updates to a
      Configuration.

      Cloud Run does not currently support referencing a build that is responsible
      for materializing the container image from source.

      See also:
      https://github.com/knative/serving/blob/master/docs/spec/overview.md#revision
    properties:
      apiVersion:
        description: The API version for this call such as "v1alpha1".
        type: string
      kind:
        description: 'The kind of this resource, in this case "Revision".'
        type: string
      metadata:
        $ref: '#/definitions/ObjectMeta'
        description: |-
          Metadata associated with this Revision, including name, namespace, labels,
          and annotations.
      spec:
        $ref: '#/definitions/RevisionSpec'
        description: Spec holds the desired state of the Revision (from the client).
      status:
        $ref: '#/definitions/RevisionStatus'
        description: |-
          Status communicates the observed state of the Revision (from the
          controller).
    type: object
  RevisionCondition:
    description: RevisionCondition defines a readiness condition for a Revision.
    properties:
      lastTransitionTime:
        description: |-
          Last time the condition transitioned from one status to another.
          +optional
        format: google-datetime
        type: string
      message:
        description: |-
          Human readable message indicating details about the current status.
          +optional
        type: string
      reason:
        description: |-
          One-word CamelCase reason for the condition's last transition.
          +optional
        type: string
      status:
        description: 'Status of the condition, one of True, False, Unknown.'
        type: string
      type:
        description: |-
          RevisionConditionType is used to communicate the status of the
          reconciliation process. See also:
          https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting
          Types include:

          * "Ready": True when the Revision is ready.
          * "ResourcesAvailable": True when underlying resources have been
          provisioned.
          * "ContainerHealthy": True when the Revision readiness check completes.
          * "Active": True when the Revision may receive traffic.
        type: string
    type: object
  RevisionSpec:
    description: RevisionSpec holds the desired state of the Revision (from the client).
    properties:
      concurrencyModel:
        description: |-
          ConcurrencyModel specifies the desired concurrency model
          (Single or Multi) for the Revision. Defaults to Multi.
          Deprecated in favor of ContainerConcurrency.
          +optional
        type: string
      container:
        $ref: '#/definitions/Container'
        description: |-
          Container defines the unit of execution for this Revision.
          In the context of a Revision, we disallow a number of the fields of
          this Container, including: name, ports, and volumeMounts.
          The runtime contract is documented here:
          https://github.com/knative/serving/blob/master/docs/runtime-contract.md
      containerConcurrency:
        description: |-
          ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
          requests per container of the Revision. Values are:
          - `0` thread-safe, the system should manage the max concurrency. This is
             the default value.
          - `1` not-thread-safe. Single concurrency
          - `2-N` thread-safe, max concurrency of N
        format: int32
        type: integer
      generation:
        description: |-
          Deprecated and not currently populated by Cloud Run. See
          metadata.generation instead, which is the sequence number containing the
          latest generation of the desired state.

          Read-only.
        format: int32
        type: integer
      serviceAccountName:
        description: Not currently used by Cloud Run.
        type: string
      servingState:
        description: |-
          ServingState holds a value describing the state the resources
          are in for this Revision.
          Users must not specify this when creating a revision. It is expected
          that the system will manipulate this based on routability and load.

          Populated by the system.
          Read-only.
        enum:
          - REVISION_SERVING_STATE_UNSPECIFIED
          - ACTIVE
          - RESERVE
          - RETIRED
        type: string
      timeoutSeconds:
        description: |-
          TimeoutSeconds holds the max duration the instance is allowed for
          responding to a request.
          Not currently used by Cloud Run.
        format: int32
        type: integer
    type: object
  RevisionStatus:
    description: |-
      RevisionStatus communicates the observed state of the Revision (from the
      controller).
    properties:
      conditions:
        description: |-
          Conditions communicates information about ongoing/complete
          reconciliation processes that bring the "spec" inline with the observed
          state of the world.

          As a Revision is being prepared, it will incrementally
          update conditions "ResourcesAvailable", "ContainerHealthy", and "Active",
          which contribute to the overall "Ready" condition.
        items:
          $ref: '#/definitions/RevisionCondition'
        type: array
      imageDigest:
        description: |-
          ImageDigest holds the resolved digest for the image specified
          within .Spec.Container.Image. The digest is resolved during the creation
          of Revision. This field holds the digest value regardless of whether
          a tag or digest was originally specified in the Container object.
        type: string
      logUrl:
        description: |-
          Specifies the generated logging url for this particular revision
          based on the revision url template specified in the controller's config.
          +optional
        type: string
      observedGeneration:
        description: |-
          ObservedGeneration is the 'Generation' of the Revision that
          was last processed by the controller.

          Clients polling for completed reconciliation should poll until
          observedGeneration = metadata.generation, and the Ready condition's status
          is True or False.
        format: int32
        type: integer
      serviceName:
        description: Not currently used by Cloud Run.
        type: string
    type: object
  RevisionTemplate:
    description: |-
      RevisionTemplateSpec describes the data a revision should have when created
      from a template. Based on:
      https://github.com/kubernetes/api/blob/e771f807/core/v1/types.go#L3179-L3190
    properties:
      metadata:
        $ref: '#/definitions/ObjectMeta'
        description: |-
          Optional metadata for this Revision, including labels and annotations. Name
          will be generated by the Configuration.
      spec:
        $ref: '#/definitions/RevisionSpec'
        description: RevisionSpec holds the desired state of the Revision (from the client).
    type: object
  Route:
    description: |-
      Route is responsible for configuring ingress over a collection of Revisions.
      Some of the Revisions a Route distributes traffic over may be specified by
      referencing the Configuration responsible for creating them; in these cases
      the Route is additionally responsible for monitoring the Configuration for
      "latest ready" revision changes, and smoothly rolling out latest revisions.
      See also:
      https://github.com/knative/serving/blob/master/docs/spec/overview.md#route

      Cloud Run currently supports referencing a single Configuration to
      automatically deploy the "latest ready" Revision from that Configuration.
    properties:
      apiVersion:
        description: The API version for this call such as "v1alpha1".
        type: string
      kind:
        description: 'The kind of this resource, in this case always "Route".'
        type: string
      metadata:
        $ref: '#/definitions/ObjectMeta'
        description: |-
          Metadata associated with this Route, including name, namespace, labels,
          and annotations.
      spec:
        $ref: '#/definitions/RouteSpec'
        description: Spec holds the desired state of the Route (from the client).
      status:
        $ref: '#/definitions/RouteStatus'
        description: Status communicates the observed state of the Route (from the controller).
    type: object
  RouteCondition:
    description: RouteCondition defines a readiness condition for a Route.
    properties:
      lastTransitionTime:
        description: |-
          Last time the condition transitioned from one status to another.
          +optional
        format: google-datetime
        type: string
      message:
        description: |-
          Human-readable message indicating details about last transition.
          +optional
        type: string
      reason:
        description: |-
          One-word CamelCase reason for the condition's last transition.
          +optional
        type: string
      status:
        description: 'Status of the condition, one of "True", "False", "Unknown".'
        type: string
      type:
        description: |-
          RouteConditionType is used to communicate the status of the reconciliation
          process. See also:
          https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting
          Types include: "Ready".
        type: string
    type: object
  RouteSpec:
    description: RouteSpec holds the desired state of the Route (from the client).
    properties:
      generation:
        description: |-
          Deprecated and not currently populated by Cloud Run. See
          metadata.generation instead, which is the sequence number containing the
          latest generation of the desired state.

          Read-only.
        format: int32
        type: integer
      traffic:
        description: |-
          Traffic specifies how to distribute traffic over a collection of Knative
          Revisions and Configurations.
          Cloud Run currently supports a single configurationName.
        items:
          $ref: '#/definitions/TrafficTarget'
        type: array
    type: object
  RouteStatus:
    description: |-
      RouteStatus communicates the observed state of the Route (from the
      controller).
    properties:
      address:
        $ref: '#/definitions/Addressable'
        description: 'Similar to domain, information on where the service is available on HTTP.'
      conditions:
        description: |-
          Conditions communicates information about ongoing/complete
          reconciliation processes that bring the "spec" inline with the observed
          state of the world.
        items:
          $ref: '#/definitions/RouteCondition'
        type: array
      domain:
        description: |-
          Domain holds the top-level domain that will distribute traffic over the
          provided targets. It generally has the form
          https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app
        type: string
      domainInternal:
        description: 'For Cloud Run, identifical to domain.'
        type: string
      observedGeneration:
        description: |-
          ObservedGeneration is the 'Generation' of the Route that
          was last processed by the controller.

          Clients polling for completed reconciliation should poll until
          observedGeneration = metadata.generation and the Ready condition's status
          is True or False.

          Note that providing a trafficTarget that only has a configurationName will
          result in a Route that does not increment either its metadata.generation or
          its observedGeneration, as new "latest ready" revisions from the
          Configuration are processed without an update to the Route's spec.
        format: int32
        type: integer
      traffic:
        description: |-
          Traffic holds the configured traffic distribution.
          These entries will always contain RevisionName references.
          When ConfigurationName appears in the spec, this will hold the
          LatestReadyRevisionName that we last observed.
        items:
          $ref: '#/definitions/TrafficTarget'
        type: array
    type: object
  SELinuxOptions:
    description: SELinuxOptions are the labels to be applied to the container
    properties:
      level:
        description: |-
          Level is SELinux level label that applies to the container.
          +optional
        type: string
      role:
        description: |-
          Role is a SELinux role label that applies to the container.
          +optional
        type: string
      type:
        description: |-
          Type is a SELinux type label that applies to the container.
          +optional
        type: string
      user:
        description: |-
          User is a SELinux user label that applies to the container.
          +optional
        type: string
    type: object
  SecretEnvSource:
    description: |-
      SecretEnvSource selects a Secret to populate the environment
      variables with.

      The contents of the target Secret's Data field will represent the
      key-value pairs as environment variables.
    properties:
      localObjectReference:
        $ref: '#/definitions/LocalObjectReference'
        description: The Secret to select from.
      optional:
        description: |-
          Specify whether the Secret must be defined
          +optional
        type: boolean
    type: object
  SecurityContext:
    description: |-
      SecurityContext holds security configuration that will be applied to a
      container. Some fields are present in both SecurityContext and
      PodSecurityContext.  When both are set, the values in SecurityContext take
      precedence.
    properties:
      allowPrivilegeEscalation:
        description: |-
          AllowPrivilegeEscalation controls whether a process can gain more
          privileges than its parent process. This bool directly controls if
          the no_new_privs flag will be set on the container process.
          AllowPrivilegeEscalation is true always when the container is:
          1) run as Privileged
          2) has CAP_SYS_ADMIN
          +optional
        type: boolean
      capabilities:
        $ref: '#/definitions/Capabilities'
        description: |-
          The capabilities to add/drop when running containers.
          Defaults to the default set of capabilities granted by the container
          runtime. +optional
      privileged:
        description: |-
          Run container in privileged mode.
          Processes in privileged containers are essentially equivalent to root on
          the host. Defaults to false. +optional
        type: boolean
      readOnlyRootFilesystem:
        description: |-
          Whether this container has a read-only root filesystem.
          Default is false.
          +optional
        type: boolean
      runAsGroup:
        description: |-
          The GID to run the entrypoint of the container process.
          Uses runtime default if unset.
          May also be set in PodSecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes
          precedence. +optional
        format: int64
        type: string
      runAsNonRoot:
        description: |-
          Indicates that the container must run as a non-root user.
          If true, the Kubelet will validate the image at runtime to ensure that it
          does not run as UID 0 (root) and fail to start the container if it does.
          If unset or false, no such validation will be performed.
          May also be set in PodSecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes
          precedence. +optional
        type: boolean
      runAsUser:
        description: |-
          The UID to run the entrypoint of the container process.
          Defaults to user specified in image metadata if unspecified.
          May also be set in PodSecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes
          precedence. +optional
        format: int64
        type: string
      seLinuxOptions:
        $ref: '#/definitions/SELinuxOptions'
        description: |-
          The SELinux context to be applied to the container.
          If unspecified, the container runtime will allocate a random SELinux
          context for each container.  May also be set in PodSecurityContext.  If set
          in both SecurityContext and PodSecurityContext, the value specified in
          SecurityContext takes precedence. +optional
    type: object
  Service:
    description: |-
      Service acts as a top-level container that manages a set of Routes and
      Configurations which implement a network service. Service exists to provide a
      singular abstraction which can be access controlled, reasoned about, and
      which encapsulates software lifecycle decisions such as rollout policy and
      team resource ownership. Service acts only as an orchestrator of the
      underlying Routes and Configurations (much as a kubernetes Deployment
      orchestrates ReplicaSets).

      The Service's controller will track the statuses of its owned Configuration
      and Route, reflecting their statuses and conditions as its own.

      See also:
      https://github.com/knative/serving/blob/master/docs/spec/overview.md#service
    properties:
      apiVersion:
        description: The API version for this call such as "v1alpha1".
        type: string
      kind:
        description: 'The kind of resource, in this case "Service".'
        type: string
      metadata:
        $ref: '#/definitions/ObjectMeta'
        description: |-
          Metadata associated with this Service, including name, namespace, labels,
          and annotations.
      spec:
        $ref: '#/definitions/ServiceSpec'
        description: Spec holds the desired state of the Service (from the client).
      status:
        $ref: '#/definitions/ServiceStatus'
        description: |-
          Status communicates the observed state of the Service (from the
          controller).
    type: object
  ServiceCondition:
    description: ServiceCondition defines a readiness condition for a Service.
    properties:
      lastTransitionTime:
        description: |-
          Last time the condition transitioned from one status to another.
          +optional
        format: google-datetime
        type: string
      message:
        description: |-
          Human-readable message indicating details about last transition.
          +optional
        type: string
      reason:
        description: |-
          One-word CamelCase reason for the condition's last transition.
          +optional
        type: string
      status:
        description: 'Status of the condition, one of True, False, Unknown.'
        type: string
      type:
        description: |-
          ServiceConditionType is used to communicate the status of the
          reconciliation process. See also:
          https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting

          Types include: "Ready", "ConfigurationsReady", and "RoutesReady". "Ready"
          will be true when the underlying Route and Configuration are ready.
        type: string
    type: object
  ServiceSpec:
    description: |-
      ServiceSpec holds the desired state of the Route (from the client), which
      is used to manipulate the underlying Route and Configuration(s).
    properties:
      generation:
        description: |-
          Deprecated and not currently populated by Cloud Run. See
          metadata.generation instead, which is the sequence number containing the
          latest generation of the desired state.

          Read-only.
        format: int32
        type: integer
      manual:
        $ref: '#/definitions/ServiceSpecManualType'
        description: |-
          Manual contains the options for configuring a manual service. See
          ServiceSpec for more details.

          Not currently supported by Cloud Run.
      pinned:
        $ref: '#/definitions/ServiceSpecPinnedType'
        description: |-
          Pins this service to a specific revision name. The revision must
          be owned by the configuration provided.

          Deprecated and not supported by Cloud Run.
          +optional
      release:
        $ref: '#/definitions/ServiceSpecReleaseType'
        description: |-
          Release enables gradual promotion of new revisions by allowing traffic
          to be split between two revisions. This type replaces the deprecated
          Pinned type.

          Not currently supported by Cloud Run.
      runLatest:
        $ref: '#/definitions/ServiceSpecRunLatest'
        description: |-
          RunLatest defines a simple Service. It will automatically
          configure a route that keeps the latest ready revision
          from the supplied configuration running.
          +optional
    type: object
  ServiceSpecManualType:
    description: |-
      ServiceSpecManualType contains the options for configuring a manual service.
      See ServiceSpec for more details.

      Not currently supported by Cloud Run.
    properties: {}
    type: object
  ServiceSpecPinnedType:
    description: |-
      ServiceSpecPinnedType Pins this service to a specific revision name. The
      revision must be owned by the configuration provided.

      Deprecated and not supported by Cloud Run.
    properties:
      configuration:
        $ref: '#/definitions/ConfigurationSpec'
        description: The configuration for this service.
      revisionName:
        description: |-
          The revision name to pin this service to until changed
          to a different service type.
        type: string
    type: object
  ServiceSpecReleaseType:
    description: |-
      ServiceSpecReleaseType contains the options for slowly releasing revisions.
      See ServiceSpec for more details.

      Not currently supported by Cloud Run.
    properties:
      configuration:
        $ref: '#/definitions/ConfigurationSpec'
        description: |-
          The configuration for this service. All revisions from this service must
          come from a single configuration.
      revisions:
        description: |-
          Revisions is an ordered list of 1 or 2 revisions. The first is the current
          revision, and the second is the candidate revision. If a single revision
          is provided, traffic will be pinned at that revision.

          "@latest" is a shortcut for usage that refers to the latest created
          revision by the configuration.
        items:
          type: string
        type: array
      rolloutPercent:
        description: |-
          RolloutPercent is the percent of traffic that should be sent to the
          candidate revision, i.e. the 2nd revision in the revisions list.
          Valid values are between 0 and 99 inclusive.
        format: int32
        type: integer
    type: object
  ServiceSpecRunLatest:
    description: |-
      ServiceSpecRunLatest contains the options for always having a route to the
      latest configuration. See ServiceSpec for more details.
    properties:
      configuration:
        $ref: '#/definitions/ConfigurationSpec'
        description: The configuration for this service.
    type: object
  ServiceStatus:
    description: The current state of the Service. Output only.
    properties:
      address:
        $ref: '#/definitions/Addressable'
        description: |-
          From RouteStatus.
          Similar to domain, information on where the service is available on HTTP.
      conditions:
        description: |-
          Conditions communicates information about ongoing/complete
          reconciliation processes that bring the "spec" inline with the observed
          state of the world.
        items:
          $ref: '#/definitions/ServiceCondition'
        type: array
      domain:
        description: |-
          From RouteStatus.
          Domain holds the top-level domain that will distribute traffic over the
          provided targets. It generally has the form
          https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app
        type: string
      latestCreatedRevisionName:
        description: |-
          From ConfigurationStatus.
          LatestCreatedRevisionName is the last revision that was created from this
          Service's Configuration. It might not be ready yet, for that use
          LatestReadyRevisionName.
        type: string
      latestReadyRevisionName:
        description: |-
          From ConfigurationStatus.
          LatestReadyRevisionName holds the name of the latest Revision stamped out
          from this Service's Configuration that has had its "Ready" condition become
          "True".
        type: string
      observedGeneration:
        description: |-
          ObservedGeneration is the 'Generation' of the Route that
          was last processed by the controller.

          Clients polling for completed reconciliation should poll until
          observedGeneration = metadata.generation and the Ready condition's status
          is True or False.
        format: int32
        type: integer
      traffic:
        description: |-
          From RouteStatus.
          Traffic holds the configured traffic distribution.
          These entries will always contain RevisionName references.
          When ConfigurationName appears in the spec, this will hold the
          LatestReadyRevisionName that we last observed.
        items:
          $ref: '#/definitions/TrafficTarget'
        type: array
    type: object
  SetIamPolicyRequest:
    description: Request message for `SetIamPolicy` method.
    properties:
      policy:
        $ref: '#/definitions/Policy'
        description: |-
          REQUIRED: The complete policy to be applied to the `resource`. The size of
          the policy is limited to a few 10s of KB. An empty policy is a
          valid policy but certain Cloud Platform services (such as Projects)
          might reject them.
      updateMask:
        description: |-
          OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
          the fields in the mask will be modified. If no mask is provided, the
          following default mask is used:
          paths: "bindings, etag"
          This field is only used by Cloud IAM.
        format: google-fieldmask
        type: string
    type: object
  TCPSocketAction:
    description: TCPSocketAction describes an action based on opening a socket
    properties:
      host:
        description: |-
          Optional: Host name to connect to, defaults to the pod IP.
          +optional
        type: string
      port:
        $ref: '#/definitions/IntOrString'
        description: |-
          Number or name of the port to access on the container.
          Number must be in the range 1 to 65535.
          Name must be an IANA_SVC_NAME.
    type: object
  TestIamPermissionsRequest:
    description: Request message for `TestIamPermissions` method.
    properties:
      permissions:
        description: |-
          The set of permissions to check for the `resource`. Permissions with
          wildcards (such as '*' or 'storage.*') are not allowed. For more
          information see
          [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
        items:
          type: string
        type: array
    type: object
  TestIamPermissionsResponse:
    description: Response message for `TestIamPermissions` method.
    properties:
      permissions:
        description: |-
          A subset of `TestPermissionsRequest.permissions` that the caller is
          allowed.
        items:
          type: string
        type: array
    type: object
  TrafficTarget:
    description: TrafficTarget holds a single entry of the routing table for a Route.
    properties:
      configurationName:
        description: |-
          ConfigurationName of a configuration to whose latest revision we will
          send this portion of traffic. When the "status.latestReadyRevisionName"
          of the referenced configuration changes, we will automatically migrate
          traffic from the prior "latest ready" revision to the new one. This field
          is never set in Route's status, only its spec. This is mutually exclusive
          with RevisionName.

          Cloud Run currently supports a single ConfigurationName.
        type: string
      name:
        description: |-
          Name is optionally used to expose a dedicated hostname for referencing this
          target exclusively.

          Not currently supported by Cloud Run.
          +optional
        type: string
      percent:
        description: |-
          Percent specifies percent of the traffic to this Revision or Configuration.
          This defaults to zero if unspecified.

          Cloud Run currently requires 100 percent for a single ConfigurationName
          TrafficTarget entry.
        format: int32
        type: integer
      revisionName:
        description: |-
          RevisionName of a specific revision to which to send this portion of
          traffic. This is mutually exclusive with ConfigurationName.

          Providing RevisionName in spec is not currently supported by Cloud Run.
        type: string
    type: object
  VolumeDevice:
    description: volumeDevice describes a mapping of a raw block device within a container.
    properties:
      devicePath:
        description: |-
          devicePath is the path inside of the container that the device will be
          mapped to.
        type: string
      name:
        description: name must match the name of a persistentVolumeClaim in the pod
        type: string
    type: object
  VolumeMount:
    description: VolumeMount describes a mounting of a Volume within a container.
    properties:
      mountPath:
        description: |-
          Path within the container at which the volume should be mounted.  Must
          not contain ':'.
        type: string
      mountPropagation:
        description: |-
          mountPropagation determines how mounts are propagated from the host
          to container and the other way around.
          When not set, MountPropagationHostToContainer is used.
          This field is beta in 1.10.
          +optional
        type: string
      name:
        description: This must match the Name of a Volume.
        type: string
      readOnly:
        description: |-
          Mounted read-only if true, read-write otherwise (false or unspecified).
          Defaults to false.
          +optional
        type: boolean
      subPath:
        description: |-
          Path within the volume from which the container's volume should be mounted.
          Defaults to "" (volume's root).
          +optional
        type: string
    type: object
