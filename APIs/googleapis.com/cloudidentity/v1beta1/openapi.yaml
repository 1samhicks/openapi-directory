openapi: 3.0.0
servers:
  - url: 'https://cloudidentity.googleapis.com/'
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: API for provisioning and managing identity resources.
  license:
    name: Creative Commons Attribution 3.0
    url: 'http://creativecommons.org/licenses/by/3.0/'
  termsOfService: 'https://developers.google.com/terms/'
  title: Cloud Identity
  version: v1beta1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.7.31
      format: google
      url: 'https://cloudidentity.googleapis.com/$discovery/rest?version=v1beta1'
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: cloudidentity
externalDocs:
  url: 'https://cloud.google.com/identity/'
tags:
  - name: groups
paths:
  /v1beta1/groups:
    get:
      description: Lists the `Group`s under a customer or namespace.
      operationId: cloudidentity.groups.list
      parameters:
        - description: |-
            The maximum number of results to return.

            Note that the number of results returned may be less than this value even
            if there are more available results. To fetch all results, clients must
            continue calling this method repeatedly until the response no longer
            contains a `next_page_token`.

            If unspecified, defaults to 200 for `View.BASIC` and to 50 for `View.FULL`.

            Must not be greater than 1000 for `View.BASIC` or 500 for `View.FULL`.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: 'The `next_page_token` value returned from a previous list request, if any.'
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            Required. The parent resource under which to list all `Group`s.

            Must be of the form `identitysources/{identity_source_id}` for external-
            identity-mapped groups or `customers/{customer_id}` for Google Groups.
          in: query
          name: parent
          schema:
            type: string
        - description: |-
            The level of detail to be returned.

            If unspecified, defaults to `View.BASIC`.
          in: query
          name: view
          schema:
            enum:
              - VIEW_UNSPECIFIED
              - BASIC
              - FULL
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-identity.groups.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-identity.groups.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - groups
    parameters:
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
    post:
      description: Creates a `Group`.
      operationId: cloudidentity.groups.create
      parameters:
        - description: Required. The initial configuration option for the `Group`.
          in: query
          name: initialGroupConfig
          schema:
            enum:
              - INITIAL_GROUP_CONFIG_UNSPECIFIED
              - WITH_INITIAL_OWNER
              - EMPTY
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Group'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - groups
  '/v1beta1/groups:lookup':
    get:
      description: |-
        Looks up the [resource
        name](https://cloud.google.com/apis/design/resource_names) of a `Group` by
        its `EntityKey`.
      operationId: cloudidentity.groups.lookup
      parameters:
        - description: |-
            The ID of the entity.

            For Google-managed entities, the `id` must be the email address of an
            existing group or user.

            For external-identity-mapped entities, the `id` must be a string conforming
            to the Identity Source's requirements.

            Must be unique within a `namespace`.
          in: query
          name: groupKey.id
          schema:
            type: string
        - description: |-
            The namespace in which the entity exists.

            If not specified, the `EntityKey` represents a Google-managed entity such
            as a Google user or a Google Group.

            If specified, the `EntityKey` represents an external-identity-mapped group.
            The namespace must correspond to an identity source created in Admin
            Console and must be in the form of `identitysources/{identity_source_id}.
          in: query
          name: groupKey.namespace
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LookupGroupNameResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-identity.groups.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-identity.groups.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - groups
    parameters:
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
  '/v1beta1/groups:search':
    get:
      description: Searches for `Group`s matching a specified query.
      operationId: cloudidentity.groups.search
      parameters:
        - description: |-
            The maximum number of results to return.

            Note that the number of results returned may be less than this value even
            if there are more available results. To fetch all results, clients must
            continue calling this method repeatedly until the response no longer
            contains a `next_page_token`.

            If unspecified, defaults to 200 for `GroupView.BASIC` and to 50 for
            `GroupView.FULL`.

            Must not be greater than 1000 for `GroupView.BASIC` or 500 for
            `GroupView.FULL`.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            The `next_page_token` value returned from a previous search request, if
            any.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            Required. The search query.

            Must be specified in [Common Expression
            Language](https://opensource.google/projects/cel). May only contain
            equality operators on the parent and inclusion operators on labels (e.g.,
            `parent == 'customers/{customer_id}' &&
            'cloudidentity.googleapis.com/groups.discussion_forum' in labels`).
          in: query
          name: query
          schema:
            type: string
        - description: |-
            The level of detail to be returned.

            If unspecified, defaults to `View.BASIC`.
          in: query
          name: view
          schema:
            enum:
              - BASIC
              - FULL
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchGroupsResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-identity.groups.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-identity.groups.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - groups
    parameters:
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
  '/v1beta1/{name}':
    delete:
      description: Deletes a `Membership`.
      operationId: cloudidentity.groups.memberships.delete
      parameters:
        - description: |-
            Required. The [resource name](https://cloud.google.com/apis/design/resource_names) of
            the `Membership` to delete.

            Must be of the form `groups/{group_id}/memberships/{membership_id}`.
          in: path
          name: name
          required: true
          schema:
            type: string
          x-reservedExpansion: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - groups
    get:
      description: Retrieves a `Membership`.
      operationId: cloudidentity.groups.memberships.get
      parameters:
        - description: |-
            Required. The [resource name](https://cloud.google.com/apis/design/resource_names) of
            the `Membership` to retrieve.

            Must be of the form `groups/{group_id}/memberships/{membership_id}`.
          in: path
          name: name
          required: true
          schema:
            type: string
          x-reservedExpansion: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Membership'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-identity.groups.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-identity.groups.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - groups
    parameters:
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
    patch:
      description: Updates a `Group`.
      operationId: cloudidentity.groups.patch
      parameters:
        - description: |-
            Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of
            the `Group`.

            Shall be of the form `groups/{group_id}`.
          in: path
          name: name
          required: true
          schema:
            type: string
          x-reservedExpansion: true
        - description: |-
            Required. The fully-qualified names of fields to update.

            May only contain the following fields: `display_name`, `description`.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - groups
  '/v1beta1/{name}:modifyMembershipRoles':
    parameters:
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
    post:
      description: Modifies the `MembershipRole`s of a `Membership`.
      operationId: cloudidentity.groups.memberships.modifyMembershipRoles
      parameters:
        - description: |-
            Required. The [resource name](https://cloud.google.com/apis/design/resource_names) of
            the `Membership` whose roles are to be modified.

            Must be of the form `groups/{group_id}/memberships/{membership_id}`.
          in: path
          name: name
          required: true
          schema:
            type: string
          x-reservedExpansion: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyMembershipRolesRequest'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModifyMembershipRolesResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - groups
  '/v1beta1/{parent}/memberships':
    get:
      description: Lists the `Membership`s within a `Group`.
      operationId: cloudidentity.groups.memberships.list
      parameters:
        - description: |-
            Required. The parent `Group` resource under which to lookup the `Membership` name.

            Must be of the form `groups/{group_id}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
          x-reservedExpansion: true
        - description: |-
            The maximum number of results to return.

            Note that the number of results returned may be less than this value even
            if there are more available results. To fetch all results, clients must
            continue calling this method repeatedly until the response no longer
            contains a `next_page_token`.

            If unspecified, defaults to 200 for `GroupView.BASIC` and to 50 for
            `GroupView.FULL`.

            Must not be greater than 1000 for `GroupView.BASIC` or 500 for
            `GroupView.FULL`.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            The `next_page_token` value returned from a previous search request, if
            any.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            The level of detail to be returned.

            If unspecified, defaults to `MembershipView.BASIC`.
          in: query
          name: view
          schema:
            enum:
              - BASIC
              - FULL
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListMembershipsResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-identity.groups.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-identity.groups.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - groups
    parameters:
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
    post:
      description: Creates a `Membership`.
      operationId: cloudidentity.groups.memberships.create
      parameters:
        - description: |-
            Required. The parent `Group` resource under which to create the `Membership`.

            Must be of the form `groups/{group_id}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
          x-reservedExpansion: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Membership'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - groups
  '/v1beta1/{parent}/memberships:lookup':
    get:
      description: |-
        Looks up the [resource
        name](https://cloud.google.com/apis/design/resource_names) of a
        `Membership` by its `EntityKey`.
      operationId: cloudidentity.groups.memberships.lookup
      parameters:
        - description: |-
            Required. The parent `Group` resource under which to lookup the `Membership` name.

            Must be of the form `groups/{group_id}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
          x-reservedExpansion: true
        - description: |-
            The ID of the entity.

            For Google-managed entities, the `id` must be the email address of an
            existing group or user.

            For external-identity-mapped entities, the `id` must be a string conforming
            to the Identity Source's requirements.

            Must be unique within a `namespace`.
          in: query
          name: memberKey.id
          schema:
            type: string
        - description: |-
            The namespace in which the entity exists.

            If not specified, the `EntityKey` represents a Google-managed entity such
            as a Google user or a Google Group.

            If specified, the `EntityKey` represents an external-identity-mapped group.
            The namespace must correspond to an identity source created in Admin
            Console and must be in the form of `identitysources/{identity_source_id}.
          in: query
          name: memberKey.namespace
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LookupMembershipNameResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-identity.groups'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-identity.groups.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-identity.groups.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - groups
    parameters:
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - '1'
          - '2'
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        default: json
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        default: true
        type: boolean
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
  requestBodies:
    Group:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Group'
  schemas:
    EntityKey:
      description: |-
        A unique identifier for an entity in the Cloud Identity Groups API.

        An entity can represent either a group with an optional `namespace` or a user
        without a `namespace`. The combination of `id` and `namespace` must be
        unique; however, the same `id` can be used with different `namespace`s.
      properties:
        id:
          description: |-
            The ID of the entity.

            For Google-managed entities, the `id` must be the email address of an
            existing group or user.

            For external-identity-mapped entities, the `id` must be a string conforming
            to the Identity Source's requirements.

            Must be unique within a `namespace`.
          type: string
        namespace:
          description: |-
            The namespace in which the entity exists.

            If not specified, the `EntityKey` represents a Google-managed entity such
            as a Google user or a Google Group.

            If specified, the `EntityKey` represents an external-identity-mapped group.
            The namespace must correspond to an identity source created in Admin
            Console and must be in the form of `identitysources/{identity_source_id}.
          type: string
      type: object
    GetMembershipGraphResponse:
      description: The response message for MembershipsService.GetMembershipGraph.
      properties:
        adjacencyList:
          description: The membership graph's path information represented as an adjacency list.
          items:
            $ref: '#/components/schemas/MembershipAdjacencyList'
          type: array
        groups:
          description: |-
            The resources representing each group in the adjacency list. Each
            group in this list can be correlated to a 'group' of the
            MembershipAdjacencyList using the 'name' of the Group resource.
          items:
            $ref: '#/components/schemas/Group'
          type: array
      type: object
    Group:
      description: |-
        A group within the Cloud Identity Groups API.

        A `Group` is a collection of entities, where each entity is either a user,
        another group or a service account.
      properties:
        additionalGroupKeys:
          description: Additional entity key aliases for a Group.
          items:
            $ref: '#/components/schemas/EntityKey'
          type: array
        createTime:
          description: Output only. The time when the `Group` was created.
          format: google-datetime
          type: string
        description:
          description: |-
            An extended description to help users determine the purpose of a `Group`.

            Must not be longer than 4,096 characters.
          type: string
        displayName:
          description: The display name of the `Group`.
          type: string
        groupKey:
          $ref: '#/components/schemas/EntityKey'
          description: Required. Immutable. The `EntityKey` of the `Group`.
        labels:
          additionalProperties:
            type: string
          description: |-
            Required. The labels that apply to the `Group`.

            Must not contain more than one entry. Must contain the entry
            `'cloudidentity.googleapis.com/groups.discussion_forum': ''` if the `Group`
            is a Google Group or `'system/groups/external': ''` if the `Group` is an
            external-identity-mapped group.
          type: object
        name:
          description: |-
            Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of
            the `Group`.

            Shall be of the form `groups/{group_id}`.
          type: string
        parent:
          description: |-
            Required. Immutable. The resource name of the entity under which this `Group` resides in the
            Cloud Identity resource hierarchy.

            Must be of the form `identitysources/{identity_source_id}` for external-
            identity-mapped groups or `customers/{customer_id}` for Google Groups.
          type: string
        updateTime:
          description: Output only. The time when the `Group` was last updated.
          format: google-datetime
          type: string
      type: object
    ListGroupsResponse:
      description: The response message for GroupsService.ListGroups.
      properties:
        groups:
          description: The `Group`s under the specified `parent`.
          items:
            $ref: '#/components/schemas/Group'
          type: array
        nextPageToken:
          description: |-
            A continuation token to retrieve the next page of results, or empty if
            there are no more results available.
          type: string
      type: object
    ListMembershipsResponse:
      description: The response message for MembershipsService.ListMemberships.
      properties:
        memberships:
          description: The `Membership`s under the specified `parent`.
          items:
            $ref: '#/components/schemas/Membership'
          type: array
        nextPageToken:
          description: |-
            A continuation token to retrieve the next page of results, or empty if
            there are no more results available.
          type: string
      type: object
    LookupGroupNameResponse:
      description: The response message for GroupsService.LookupGroupName.
      properties:
        name:
          description: |-
            Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of
            the looked-up `Group`.
          type: string
      type: object
    LookupMembershipNameResponse:
      description: The response message for MembershipsService.LookupMembershipName.
      properties:
        name:
          description: |-
            The [resource name](https://cloud.google.com/apis/design/resource_names) of
            the looked-up `Membership`.

            Must be of the form `groups/{group_id}/memberships/{membership_id}`.
          type: string
      type: object
    Membership:
      description: |-
        A membership within the Cloud Identity Groups API.

        A `Membership` defines a relationship between a `Group` and an entity
        belonging to that `Group`, referred to as a "member".
      properties:
        createTime:
          description: Output only. The time when the `Membership` was created.
          format: google-datetime
          type: string
        memberKey:
          $ref: '#/components/schemas/EntityKey'
          description: |-
            Immutable. The `EntityKey` of the member.

            Either `member_key` or `preferred_member_key` must be set when calling
            MembershipsService.CreateMembership but not both; both shall be set
            when returned.
        name:
          description: |-
            Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of
            the `Membership`.

            Shall be of the form `groups/{group_id}/memberships/{membership_id}`.
          type: string
        preferredMemberKey:
          $ref: '#/components/schemas/EntityKey'
          description: |-
            Required. Immutable. The `EntityKey` of the member.

            Either `member_key` or `preferred_member_key` must be set when calling
            MembershipsService.CreateMembership but not both; both shall be set
            when returned.
        roles:
          description: |-
            The `MembershipRole`s that apply to the `Membership`.

            If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`.

            Must not contain duplicate `MembershipRole`s with the same `name`.
          items:
            $ref: '#/components/schemas/MembershipRole'
          type: array
        updateTime:
          description: Output only. The time when the `Membership` was last updated.
          format: google-datetime
          type: string
      type: object
    MembershipAdjacencyList:
      description: Membership graph's path information as an adjacency list.
      properties:
        edges:
          description: Each edge contains information about the member that belongs to this group.
          items:
            $ref: '#/components/schemas/Membership'
          type: array
        group:
          description: Resource name of the group that the members belong to.
          type: string
      type: object
    MembershipRole:
      description: |-
        A membership role within the Cloud Identity Groups API.

        A `MembershipRole` defines the privileges granted to a `Membership`.
      properties:
        name:
          description: |-
            The name of the `MembershipRole`.

            Must be one of `OWNER`, `MANAGER`, `MEMBER`.
          type: string
      type: object
    ModifyMembershipRolesRequest:
      description: The request message for MembershipsService.ModifyMembershipRoles.
      properties:
        addRoles:
          description: |-
            The `MembershipRole`s to be added.

            Adding or removing roles in the same request as updating roles is not
            supported.

            Must not be set if `update_roles_params` is set.
          items:
            $ref: '#/components/schemas/MembershipRole'
          type: array
        removeRoles:
          description: |-
            The `name`s of the `MembershipRole`s to be removed.

            Adding or removing roles in the same request as updating roles is not
            supported.

            It is not possible to remove the `MEMBER` `MembershipRole`. If you wish to
            delete a `Membership`, call MembershipsService.DeleteMembership
            instead.

            Must not contain `MEMBER`. Must not be set if `update_roles_params` is set.
          items:
            type: string
          type: array
        updateRolesParams:
          description: |-
            The `MembershipRole`s to be updated.

            Updating roles in the same request as adding or removing roles is not
            supported.

            Must not be set if either `add_roles` or `remove_roles` is set.
          items:
            $ref: '#/components/schemas/UpdateMembershipRolesParams'
          type: array
      type: object
    ModifyMembershipRolesResponse:
      description: The response message for MembershipsService.ModifyMembershipRoles.
      properties:
        membership:
          $ref: '#/components/schemas/Membership'
          description: The `Membership` resource after modifying its `MembershipRole`s.
      type: object
    Operation:
      description: |-
        This resource represents a long-running operation that is the result of a
        network API call.
      properties:
        done:
          description: |-
            If the value is `false`, it means the operation is still in progress.
            If `true`, the operation is completed, and either `error` or `response` is
            available.
          type: boolean
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: |-
            Service-specific metadata associated with the operation.  It typically
            contains progress information and common metadata such as create time.
            Some services might not provide such metadata.  Any method that returns a
            long-running operation should document the metadata type, if any.
          type: object
        name:
          description: |-
            The server-assigned name, which is only unique within the same service that
            originally returns it. If you use the default HTTP mapping, the
            `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: |-
            The normal response of the operation in case of success.  If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`.  If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource.  For other
            methods, the response should have the type `XxxResponse`, where `Xxx`
            is the original method name.  For example, if the original method name
            is `TakeSnapshot()`, the inferred response type is
            `TakeSnapshotResponse`.
          type: object
      type: object
    SearchGroupsResponse:
      description: The response message for GroupsService.SearchGroups.
      properties:
        groups:
          description: The `Group`s that match the search query.
          items:
            $ref: '#/components/schemas/Group'
          type: array
        nextPageToken:
          description: |-
            A continuation token to retrieve the next page of results, or empty if
            there are no more results available.
          type: string
      type: object
    Status:
      description: |-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It is
        used by [gRPC](https://github.com/grpc). Each `Status` message contains
        three pieces of data: error code, error message, and error details.

        You can find out more about this error model and how to work with it in the
        [API Design Guide](https://cloud.google.com/apis/design/errors).
      properties:
        code:
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          format: int32
          type: integer
        details:
          description: |-
            A list of messages that carry the error details.  There is a common set of
            message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: |-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    UpdateMembershipRolesParams:
      description: The details of an update to a `MembershipRole`.
      properties:
        fieldMask:
          description: |-
            The fully-qualified names of fields to update.

            May only contain the field `expiry_detail`.
          format: google-fieldmask
          type: string
        membershipRole:
          $ref: '#/components/schemas/MembershipRole'
          description: |-
            The `MembershipRole`s to be updated.

            Only `MEMBER` `MembershipRoles` can currently be updated.

            May only contain a `MembershipRole` with `name` `MEMBER`.
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes:
            'https://www.googleapis.com/auth/cloud-identity.groups': 'See, change, create, and delete any of the Cloud Identity Groups that you can access, including the members of each group'
            'https://www.googleapis.com/auth/cloud-identity.groups.readonly': 'See any Cloud Identity Groups that you can access, including group members and their emails'
            'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes:
            'https://www.googleapis.com/auth/cloud-identity.groups': 'See, change, create, and delete any of the Cloud Identity Groups that you can access, including the members of each group'
            'https://www.googleapis.com/auth/cloud-identity.groups.readonly': 'See any Cloud Identity Groups that you can access, including group members and their emails'
            'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
      type: oauth2
