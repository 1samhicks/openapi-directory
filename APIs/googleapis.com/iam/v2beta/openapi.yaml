openapi: 3.0.0
servers:
  - url: https://iam.googleapis.com/
x-hasEquivalentPaths: true
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: "Manages identity and access control for Google Cloud Platform resources, including the creation of service accounts, which you can use to authenticate to Google and make API calls. "
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Identity and Access Management (IAM) API
  version: v2beta
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/mermade/oas-kit
        version: 7.0.4
      format: openapi
      url: https://iam.googleapis.com/$discovery/rest?version=v1
      version: "3.0"
  x-providerName: googleapis.com
  x-serviceName: iam
externalDocs:
  url: https://cloud.google.com/iam/
tags:
  - name: policies
paths:
  "/v2beta/{name}":
    delete:
      description: Deletes a policy. Can provide 'Policy.etag' to enforce delete from last read for optimistic concurrency control.
      operationId: iam.policies.delete
      parameters:
        - description: Required. Resource name of the policy to delete.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The expected etag of the policy to delete. If the policy was modified concurrently such that the etag changed, the delete operation will fail.
          in: query
          name: etag
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - policies
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: iam.policies.operations.get
      parameters:
        - description: The name of the operation resource.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - policies
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    put:
      description: Updates the specified existing policy. Only `Policy.rules` and `Policy.display_name` may be updated. Need to provide 'Policy.etag' to enforce update from last read for optimistic concurrency control.
      operationId: iam.policies.update
      parameters:
        - description: "Immutable. The resource name of the `Policy`. Takes the form: `policies/{attachment-point}/{kind-plural}/{policy-id}` The attachment point is identified by its URL encoded full resource name, which means that the forward-slash character, '/', must be written as %2F. For example, `policies/cloudresourcemanager.googleapis.com%2Fprojects%2F123/denypolicies/a-deny-policy`."
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleIamV2betaPolicy"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - policies
  "/v2beta/{parent}":
    get:
      description: Retrieves all of the policies attached to the specified resource, of the given kind. Only policy metadata is listed; specifically `policy.rules` is omitted.
      operationId: iam.policies.listPolicies
      parameters:
        - description: "Required. The Cloud resource that the policy is attached to. Takes the form: `policies/{attachment-point}/{kind-plural}`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of policies to return. If unspecified, at most 1000 policies are returned. The maximum value is 1000; values above are 1000 truncated to 1000. The minimum value is 1000; values below 1000 are increased to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListPolicies` call. Provide this to retrieve the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleIamV2betaListPoliciesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - policies
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a policy. All the policies attached to a specific resource must have unique IDs.
      operationId: iam.policies.createPolicy
      parameters:
        - description: "Required. The Cloud resource the new Policy is attached to. Takes the form: `policies/{attachment-point}/{kind-plural}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The ID to use for this policy, which will become the final component of the policy's resource name. Must match a-z{3,63}.
          in: query
          name: policyId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleIamV2betaPolicy"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - policies
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    GoogleIamAdminV1AuditData:
      description: Audit log information specific to Cloud IAM admin APIs. This message is serialized as an `Any` type in the `ServiceData` message of an `AuditLog` message.
      properties:
        permissionDelta:
          $ref: "#/components/schemas/GoogleIamAdminV1AuditDataPermissionDelta"
          description: The permission_delta when when creating or updating a Role.
      type: object
    GoogleIamAdminV1AuditDataPermissionDelta:
      description: A PermissionDelta message to record the added_permissions and removed_permissions inside a role.
      properties:
        addedPermissions:
          description: Added permissions.
          items:
            type: string
          type: array
        removedPermissions:
          description: Removed permissions.
          items:
            type: string
          type: array
      type: object
    GoogleIamV1BindingDelta:
      description: One delta entry for Binding. Each individual change (only one member in each entry) to a binding will be a separate entry.
      properties:
        action:
          description: The action that was performed on a Binding. Required
          enum:
            - ACTION_UNSPECIFIED
            - ADD
            - REMOVE
          type: string
        condition:
          $ref: "#/components/schemas/GoogleTypeExpr"
          description: The condition that is associated with this binding.
        member:
          description: A single identity requesting access for a Cloud Platform resource. Follows the same format of Binding.members. Required
          type: string
        role:
          description: Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. Required
          type: string
      type: object
    GoogleIamV1LoggingAuditData:
      description: Audit log information specific to Cloud IAM. This message is serialized as an `Any` type in the `ServiceData` message of an `AuditLog` message.
      properties:
        policyDelta:
          $ref: "#/components/schemas/GoogleIamV1PolicyDelta"
          description: Policy delta between the original policy and the newly set policy.
      type: object
    GoogleIamV1PolicyDelta:
      description: The difference delta between two policies.
      properties:
        bindingDeltas:
          description: The delta for Bindings between two policies.
          items:
            $ref: "#/components/schemas/GoogleIamV1BindingDelta"
          type: array
      type: object
    GoogleIamV2betaDenyRule:
      description: IAM Deny Policy Rule.
      properties:
        denialCondition:
          $ref: "#/components/schemas/GoogleTypeExpr"
          description: "The condition that is associated with this deny rule. NOTE: A satisfied condition will explicitly deny access for applicable principal, permission, and resource. Different deny rules, including their conditions, are examined independently. Only tag based conditions are supported."
        deniedPermissions:
          description: "Specifies the permissions that are explicitly denied by this rule. The denied permission can be specified in the following ways: * a full permission string in the following canonical formats as described in the service specific documentation: -- `{service_FQDN}/{resource}.{verb}`. For example, `iam.googleapis.com/roles.list`."
          items:
            type: string
          type: array
        deniedPrincipals:
          items:
            type: string
          type: array
        exceptionPermissions:
          description: Specifies the permissions that are excluded from the set of denied permissions given by `denied_permissions`. If a permission appears in `denied_permissions` _and_ in `excluded_permissions` then it will _not_ be denied. The excluded permissions can be specified using the same syntax as `denied_permissions`.
          items:
            type: string
          type: array
        exceptionPrincipals:
          description: "Specifies the identities requesting access for a Cloud Platform resource, which are excluded from the deny rule. `exception_principals` can have the following values: * Google and G Suite user accounts: -- `principal://goog/subject/{emailId}`: An email address that represents a specific Google account. For example, `principal://goog/subject/alice@gmail.com`. * Google and G Suite groups: -- `principalSet://goog/group/{groupId}`: An identifier that represents a Google group. For example, `principalSet://goog/group/admins@example.com`. * Service Accounts: -- `principal://iam.googleapis.com/projects/-/serviceAccounts/{serviceAccountId}`: An identifier that represents a service account. For example, `principal://iam.googleapis.com/projects/-/serviceAccounts/sa123@iam.gserviceaccount.com`. * G Suite Customers: -- `principalSet://goog/cloudIdentityCustomerId/{customerId}`: All of the principals associated with the specified G Suite Customer ID. For example, `principalSet://goog/cloudIdentityCustomerId/C01Abc35`."
          items:
            type: string
          type: array
      type: object
    GoogleIamV2betaListPoliciesResponse:
      description: Response message for ListPolicies method.
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        policies:
          description: The collection of policy metadata that are attached on the resource.
          items:
            $ref: "#/components/schemas/GoogleIamV2betaPolicy"
          type: array
      type: object
    GoogleIamV2betaPolicy:
      description: Represents policy data.
      properties:
        createTime:
          description: Output only. The time when the `Policy` was created.
          format: google-datetime
          readOnly: true
          type: string
        deleteTime:
          description: Output only. The time when the `Policy` was deleted. Empty if the policy is not deleted.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: A user-specified opaque description of the `Policy`. Must be less than or equal to 63 characters.
          type: string
        etag:
          description: An opaque tag indicating the current version of the `Policy`, used for concurrency control. When the `Policy` is returned from `GetPolicy` request, this `etag` indicates the version of the current `Policy` to use when executing a read-modify-write loop. When the `Policy` is used in a `UpdatePolicy` method, use the `etag` value that was returned from a `GetPolicy` request as part of a read-modify-write loop for concurrency control. This field is ignored if used in a `CreatePolicy` request.
          type: string
        kind:
          description: Output only. The kind of the `Policy`. This is a read only field derived from the policy name.
          readOnly: true
          type: string
        name:
          description: "Immutable. The resource name of the `Policy`. Takes the form: `policies/{attachment-point}/{kind-plural}/{policy-id}` The attachment point is identified by its URL encoded full resource name, which means that the forward-slash character, '/', must be written as %2F. For example, `policies/cloudresourcemanager.googleapis.com%2Fprojects%2F123/denypolicies/a-deny-policy`."
          type: string
        rules:
          description: List of rules that specify the behavior of the `Policy`. The list contains a single kind of rules, that matches the kind specified in the policy name.
          items:
            $ref: "#/components/schemas/GoogleIamV2betaPolicyRule"
          type: array
        uid:
          description: Immutable. The globally unique ID of the `Policy`. This is a read only field assigned on policy creation.
          type: string
        updateTime:
          description: Output only. The time when the `Policy` was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleIamV2betaPolicyOperationMetadata:
      description: Metadata for long-running Policy operations.
      properties:
        createTime:
          description: Timestamp when the google.longrunning.Operation was created.
          format: google-datetime
          type: string
      type: object
    GoogleIamV2betaPolicyRule:
      description: A single rule in a `Policy`.
      properties:
        denyRule:
          $ref: "#/components/schemas/GoogleIamV2betaDenyRule"
          description: Specification of a Deny `Policy`.
        description:
          description: A user-specified opaque description of the rule. Must be less than or equal to 256 characters.
          type: string
      type: object
    GoogleLongrunningOperation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    GoogleRpcStatus:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    GoogleTypeExpr:
      description: "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
      properties:
        description:
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        location:
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
