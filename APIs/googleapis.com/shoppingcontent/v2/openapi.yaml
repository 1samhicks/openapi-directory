openapi: 3.0.0
servers:
  - url: https://shoppingcontent.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Manage your product listings and accounts for Google Shopping
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Content API for Shopping
  version: v2
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://shoppingcontent.googleapis.com/$discovery/rest?version=v2
      version: v1
  x-providerName: googleapis.com
  x-serviceName: shoppingcontent
externalDocs:
  url: https://developers.google.com/shopping-content/v2/
tags:
  - name: productstatuses
  - name: orders
  - name: orderinvoices
  - name: pos
  - name: liasettings
  - name: shippingsettings
  - name: accounts
  - name: inventory
  - name: products
  - name: orderreturns
  - name: accountstatuses
  - name: accounttax
  - name: datafeedstatuses
  - name: orderreports
  - name: datafeeds
paths:
  /content/v2/accounts/authinfo:
    get:
      description: Returns information about the authenticated user.
      operationId: content.accounts.authinfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountsAuthInfoResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  /content/v2/accounts/batch:
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Retrieves, inserts, updates, and deletes multiple Merchant Center (sub-)accounts in a single request.
      operationId: content.accounts.custombatch
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountsCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountsCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  /content/v2/accountstatuses/batch:
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Retrieves multiple Merchant Center account statuses in a single request.
      operationId: content.accountstatuses.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountstatusesCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountstatusesCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accountstatuses
  /content/v2/accounttax/batch:
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Retrieves and updates tax settings of multiple accounts in a single request.
      operationId: content.accounttax.custombatch
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccounttaxCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccounttaxCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounttax
  /content/v2/datafeeds/batch:
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Deletes, fetches, gets, inserts and updates multiple datafeeds in a single request.
      operationId: content.datafeeds.custombatch
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2DatafeedsCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2DatafeedsCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
  /content/v2/datafeedstatuses/batch:
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Gets multiple Merchant Center datafeed statuses in a single request.
      operationId: content.datafeedstatuses.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2DatafeedstatusesCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2DatafeedstatusesCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeedstatuses
  /content/v2/inventory/batch:
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Updates price and availability for multiple products or stores in a single request. This operation does not update the expiration date of the products.
      operationId: content.inventory.custombatch
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2InventoryCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2InventoryCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - inventory
  /content/v2/liasettings/batch:
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Retrieves and/or updates the LIA settings of multiple accounts in a single request.
      operationId: content.liasettings.custombatch
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiasettingsCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiasettingsCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
  /content/v2/liasettings/posdataproviders:
    get:
      description: Retrieves the list of POS data providers that have active settings for the all eiligible countries.
      operationId: content.liasettings.listposdataproviders
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiasettingsListPosDataProvidersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  /content/v2/orders/batch:
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Retrieves or modifies multiple orders in a single request.
      operationId: content.orders.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  /content/v2/pos/batch:
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Batches multiple POS-related calls in a single request.
      operationId: content.pos.custombatch
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pos
  /content/v2/products/batch:
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Retrieves, inserts, and deletes multiple products in a single request.
      operationId: content.products.custombatch
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductsCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductsCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - products
  /content/v2/productstatuses/batch:
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Gets the statuses of multiple products in a single request.
      operationId: content.productstatuses.custombatch
      parameters:
        - description: Flag to include full product data in the results of this request. The default value is false.
          in: query
          name: includeAttributes
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductstatusesCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductstatusesCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - productstatuses
  /content/v2/shippingsettings/batch:
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Retrieves and updates the shipping settings of multiple accounts in a single request.
      operationId: content.shippingsettings.custombatch
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ShippingsettingsCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ShippingsettingsCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shippingsettings
  "/content/v2/{merchantId}/accounts":
    get:
      description: Lists the sub-accounts in your Merchant Center account.
      operationId: content.accounts.list
      parameters:
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The maximum number of accounts to return in the response, used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountsListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Creates a Merchant Center sub-account.
      operationId: content.accounts.insert
      parameters:
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Account"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Account"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  "/content/v2/{merchantId}/accounts/{accountId}":
    delete:
      description: Deletes a Merchant Center sub-account.
      operationId: content.accounts.delete
      parameters:
        - description: The ID of the managing account. This must be a multi-client account, and accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: Flag to delete sub-accounts with products. The default value is false.
          in: query
          name: force
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
    get:
      description: Retrieves a Merchant Center account.
      operationId: content.accounts.get
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Account"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    put:
      description: Updates a Merchant Center account. Any fields that are not provided are deleted from the resource.
      operationId: content.accounts.update
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Account"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Account"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  "/content/v2/{merchantId}/accounts/{accountId}/claimwebsite":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Claims the website of a Merchant Center sub-account.
      operationId: content.accounts.claimwebsite
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account whose website is claimed.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Only available to selected merchants. When set to `True`, this flag removes any existing claim on the requested website by another account and replaces it with a claim from this account.
          in: query
          name: overwrite
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountsClaimWebsiteResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  "/content/v2/{merchantId}/accounts/{accountId}/link":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Performs an action on a link between two Merchant Center accounts, namely accountId and linkedAccountId.
      operationId: content.accounts.link
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account that should be linked.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountsLinkRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountsLinkResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  "/content/v2/{merchantId}/accountstatuses":
    get:
      description: Lists the statuses of the sub-accounts in your Merchant Center account.
      operationId: content.accountstatuses.list
      parameters:
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.
          explode: true
          in: query
          name: destinations
          schema:
            items:
              type: string
            type: array
          style: form
        - description: The maximum number of account statuses to return in the response, used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountstatusesListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accountstatuses
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/accountstatuses/{accountId}":
    get:
      description: Retrieves the status of a Merchant Center account. No itemLevelIssues are returned for multi-client accounts.
      operationId: content.accountstatuses.get
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.
          explode: true
          in: query
          name: destinations
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountStatus"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accountstatuses
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/accounttax":
    get:
      description: Lists the tax settings of the sub-accounts in your Merchant Center account.
      operationId: content.accounttax.list
      parameters:
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The maximum number of tax settings to return in the response, used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccounttaxListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounttax
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/accounttax/{accountId}":
    get:
      description: Retrieves the tax settings of the account.
      operationId: content.accounttax.get
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to get/update account tax settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountTax"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounttax
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    put:
      description: Updates the tax settings of the account. Any fields that are not provided are deleted from the resource.
      operationId: content.accounttax.update
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to get/update account tax settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountTax"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountTax"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounttax
  "/content/v2/{merchantId}/datafeeds":
    get:
      description: Lists the configurations for datafeeds in your Merchant Center account.
      operationId: content.datafeeds.list
      parameters:
        - description: The ID of the account that manages the datafeeds. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The maximum number of products to return in the response, used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2DatafeedsListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Registers a datafeed configuration with your Merchant Center account.
      operationId: content.datafeeds.insert
      parameters:
        - description: The ID of the account that manages the datafeed. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Datafeed"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Datafeed"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
  "/content/v2/{merchantId}/datafeeds/{datafeedId}":
    delete:
      description: Deletes a datafeed configuration from your Merchant Center account.
      operationId: content.datafeeds.delete
      parameters:
        - description: The ID of the account that manages the datafeed. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the datafeed.
          in: path
          name: datafeedId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
    get:
      description: Retrieves a datafeed configuration from your Merchant Center account.
      operationId: content.datafeeds.get
      parameters:
        - description: The ID of the account that manages the datafeed. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the datafeed.
          in: path
          name: datafeedId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Datafeed"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    put:
      description: Updates a datafeed configuration of your Merchant Center account. Any fields that are not provided are deleted from the resource.
      operationId: content.datafeeds.update
      parameters:
        - description: The ID of the account that manages the datafeed. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the datafeed.
          in: path
          name: datafeedId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Datafeed"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Datafeed"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
  "/content/v2/{merchantId}/datafeeds/{datafeedId}/fetchNow":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Invokes a fetch for the datafeed in your Merchant Center account.
      operationId: content.datafeeds.fetchnow
      parameters:
        - description: The ID of the account that manages the datafeed. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the datafeed to be fetched.
          in: path
          name: datafeedId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2DatafeedsFetchNowResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
  "/content/v2/{merchantId}/datafeedstatuses":
    get:
      description: Lists the statuses of the datafeeds in your Merchant Center account.
      operationId: content.datafeedstatuses.list
      parameters:
        - description: The ID of the account that manages the datafeeds. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The maximum number of products to return in the response, used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2DatafeedstatusesListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeedstatuses
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/datafeedstatuses/{datafeedId}":
    get:
      description: Retrieves the status of a datafeed from your Merchant Center account.
      operationId: content.datafeedstatuses.get
      parameters:
        - description: The ID of the account that manages the datafeed. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the datafeed.
          in: path
          name: datafeedId
          required: true
          schema:
            type: string
        - description: The country for which to get the datafeed status. If this parameter is provided then language must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target.
          in: query
          name: country
          schema:
            type: string
        - description: The language for which to get the datafeed status. If this parameter is provided then country must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target.
          in: query
          name: language
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2DatafeedStatus"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeedstatuses
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/inventory/{storeCode}/products/{productId}":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Updates price and availability of a product in your Merchant Center account.
      operationId: content.inventory.set
      parameters:
        - description: The ID of the account that contains the product. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The code of the store for which to update price and availability. Use `online` to update price and availability of an online product.
          in: path
          name: storeCode
          required: true
          schema:
            type: string
        - description: The REST ID of the product for which to update price and availability.
          in: path
          name: productId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2InventorySetRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2InventorySetResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - inventory
  "/content/v2/{merchantId}/liasettings":
    get:
      description: Lists the LIA settings of the sub-accounts in your Merchant Center account.
      operationId: content.liasettings.list
      parameters:
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The maximum number of LIA settings to return in the response, used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiasettingsListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/liasettings/{accountId}":
    get:
      description: Retrieves the LIA settings of the account.
      operationId: content.liasettings.get
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to get or update LIA settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiaSettings"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    put:
      description: Updates the LIA settings of the account. Any fields that are not provided are deleted from the resource.
      operationId: content.liasettings.update
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to get or update LIA settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiaSettings"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiaSettings"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
  "/content/v2/{merchantId}/liasettings/{accountId}/accessiblegmbaccounts":
    get:
      description: Retrieves the list of accessible Google My Business accounts.
      operationId: content.liasettings.getaccessiblegmbaccounts
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to retrieve accessible Google My Business accounts.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiasettingsGetAccessibleGmbAccountsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/liasettings/{accountId}/requestgmbaccess":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Requests access to a specified Google My Business account.
      operationId: content.liasettings.requestgmbaccess
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which GMB access is requested.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The email of the Google My Business account.
          in: query
          name: gmbEmail
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiasettingsRequestGmbAccessResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
  "/content/v2/{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Requests inventory validation for the specified country.
      operationId: content.liasettings.requestinventoryverification
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The country for which inventory validation is requested.
          in: path
          name: country
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiasettingsRequestInventoryVerificationResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
  "/content/v2/{merchantId}/liasettings/{accountId}/setinventoryverificationcontact":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Sets the inventory verification contract for the specified country.
      operationId: content.liasettings.setinventoryverificationcontact
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The email of the inventory verification contact.
          in: query
          name: contactEmail
          schema:
            type: string
        - description: The name of the inventory verification contact.
          in: query
          name: contactName
          schema:
            type: string
        - description: The country for which inventory verification is requested.
          in: query
          name: country
          schema:
            type: string
        - description: The language for which inventory verification is requested.
          in: query
          name: language
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiasettingsSetInventoryVerificationContactResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
  "/content/v2/{merchantId}/liasettings/{accountId}/setposdataprovider":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Sets the POS data provider for the specified country.
      operationId: content.liasettings.setposdataprovider
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to retrieve accessible Google My Business accounts.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The country for which the POS data provider is selected.
          in: query
          name: country
          schema:
            type: string
        - description: The ID of POS data provider.
          in: query
          name: posDataProviderId
          schema:
            type: string
        - description: The account ID by which this merchant is known to the POS data provider.
          in: query
          name: posExternalAccountId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiasettingsSetPosDataProviderResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
  "/content/v2/{merchantId}/orderinvoices/{orderId}/createChargeInvoice":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Creates a charge invoice for a shipment group, and triggers a charge capture for orderinvoice enabled orders.
      operationId: content.orderinvoices.createchargeinvoice
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderinvoicesCreateChargeInvoiceRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderinvoicesCreateChargeInvoiceResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderinvoices
  "/content/v2/{merchantId}/orderinvoices/{orderId}/createRefundInvoice":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Creates a refund invoice for one or more shipment groups, and triggers a refund for orderinvoice enabled orders. This can only be used for line items that have previously been charged using `createChargeInvoice`. All amounts (except for the summary) are incremental with respect to the previous invoice.
      operationId: content.orderinvoices.createrefundinvoice
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderinvoicesCreateRefundInvoiceRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderinvoicesCreateRefundInvoiceResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderinvoices
  "/content/v2/{merchantId}/orderreports/disbursements":
    get:
      description: Retrieves a report for disbursements from your Merchant Center account.
      operationId: content.orderreports.listdisbursements
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: "The last date which disbursements occurred. In ISO 8601 format. Default: current date."
          in: query
          name: disbursementEndDate
          schema:
            type: string
        - description: The first date which disbursements occurred. In ISO 8601 format.
          in: query
          name: disbursementStartDate
          schema:
            type: string
        - description: The maximum number of disbursements to return in the response, used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderreportsListDisbursementsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderreports
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/orderreports/disbursements/{disbursementId}/transactions":
    get:
      description: Retrieves a list of transactions for a disbursement from your Merchant Center account.
      operationId: content.orderreports.listtransactions
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The Google-provided ID of the disbursement (found in Wallet).
          in: path
          name: disbursementId
          required: true
          schema:
            type: string
        - description: The maximum number of disbursements to return in the response, used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The last date in which transaction occurred. In ISO 8601 format. Default: current date."
          in: query
          name: transactionEndDate
          schema:
            type: string
        - description: The first date in which transaction occurred. In ISO 8601 format.
          in: query
          name: transactionStartDate
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderreportsListTransactionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderreports
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/orderreturns":
    get:
      description: Lists order returns in your Merchant Center account.
      operationId: content.orderreturns.list
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Obtains order returns created before this date (inclusively), in ISO 8601 format.
          in: query
          name: createdEndDate
          schema:
            type: string
        - description: Obtains order returns created after this date (inclusively), in ISO 8601 format.
          in: query
          name: createdStartDate
          schema:
            type: string
        - description: The maximum number of order returns to return in the response, used for paging. The default value is 25 returns per page, and the maximum allowed value is 250 returns per page.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: Return the results in the specified order.
          in: query
          name: orderBy
          schema:
            enum:
              - RETURN_CREATION_TIME_DESC
              - RETURN_CREATION_TIME_ASC
            type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderreturnsListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderreturns
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/orderreturns/{returnId}":
    get:
      description: Retrieves an order return from your Merchant Center account.
      operationId: content.orderreturns.get
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Merchant order return ID generated by Google.
          in: path
          name: returnId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2MerchantOrderReturn"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderreturns
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/orders":
    get:
      description: Lists the orders in your Merchant Center account.
      operationId: content.orders.list
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: "Obtains orders that match the acknowledgement status. When set to true, obtains orders that have been acknowledged. When false, obtains orders that have not been acknowledged. We recommend using this filter set to `false`, in conjunction with the `acknowledge` call, such that only un-acknowledged orders are returned. "
          in: query
          name: acknowledged
          schema:
            type: boolean
        - description: The maximum number of orders to return in the response, used for paging. The default value is 25 orders per page, and the maximum allowed value is 250 orders per page.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: "Order results by placement date in descending or ascending order. Acceptable values are: - placedDateAsc - placedDateDesc "
          in: query
          name: orderBy
          schema:
            type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Obtains orders placed before this date (exclusively), in ISO 8601 format.
          in: query
          name: placedDateEnd
          schema:
            type: string
        - description: Obtains orders placed after this date (inclusively), in ISO 8601 format.
          in: query
          name: placedDateStart
          schema:
            type: string
        - description: Obtains orders that match any of the specified statuses. Please note that `active` is a shortcut for `pendingShipment` and `partiallyShipped`, and `completed` is a shortcut for `shipped`, `partiallyDelivered`, `delivered`, `partiallyReturned`, `returned`, and `canceled`.
          explode: true
          in: query
          name: statuses
          schema:
            items:
              enum:
                - ACTIVE
                - COMPLETED
                - CANCELED
                - IN_PROGRESS
                - PENDING_SHIPMENT
                - PARTIALLY_SHIPPED
                - SHIPPED
                - PARTIALLY_DELIVERED
                - DELIVERED
                - PARTIALLY_RETURNED
                - RETURNED
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/orders/{orderId}":
    get:
      description: Retrieves an order from your Merchant Center account.
      operationId: content.orders.get
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Order"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/orders/{orderId}/acknowledge":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Marks an order as acknowledged.
      operationId: content.orders.acknowledge
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersAcknowledgeRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersAcknowledgeResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/content/v2/{merchantId}/orders/{orderId}/cancel":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Cancels all line items in an order, making a full refund.
      operationId: content.orders.cancel
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order to cancel.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCancelRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCancelResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/content/v2/{merchantId}/orders/{orderId}/cancelLineItem":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Cancels a line item, making a full refund.
      operationId: content.orders.cancellineitem
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCancelLineItemRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCancelLineItemResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/content/v2/{merchantId}/orders/{orderId}/inStoreRefundLineItem":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: "Deprecated. Notifies that item return and refund was handled directly by merchant outside of Google payments processing (e.g. cash refund done in store). Note: We recommend calling the returnrefundlineitem method to refund in-store returns. We will issue the refund directly to the customer. This helps to prevent possible differences arising between merchant and Google transaction records. We also recommend having the point of sale system communicate with Google to ensure that customers do not receive a double refund by first refunding via Google then via an in-store return."
      operationId: content.orders.instorerefundlineitem
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersInStoreRefundLineItemRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersInStoreRefundLineItemResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/content/v2/{merchantId}/orders/{orderId}/refund":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Deprecated, please use returnRefundLineItem instead.
      operationId: content.orders.refund
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order to refund.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersRefundRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersRefundResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/content/v2/{merchantId}/orders/{orderId}/rejectReturnLineItem":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Rejects return on an line item.
      operationId: content.orders.rejectreturnlineitem
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersRejectReturnLineItemRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersRejectReturnLineItemResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/content/v2/{merchantId}/orders/{orderId}/returnLineItem":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Returns a line item.
      operationId: content.orders.returnlineitem
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersReturnLineItemRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersReturnLineItemResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/content/v2/{merchantId}/orders/{orderId}/returnRefundLineItem":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Returns and refunds a line item. Note that this method can only be called on fully shipped orders. Please also note that the Orderreturns API is the preferred way to handle returns after you receive a return from a customer. You can use Orderreturns.list or Orderreturns.get to search for the return, and then use Orderreturns.processreturn to issue the refund. If the return cannot be found, then we recommend using this API to issue a refund.
      operationId: content.orders.returnrefundlineitem
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersReturnRefundLineItemRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersReturnRefundLineItemResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/content/v2/{merchantId}/orders/{orderId}/setLineItemMetadata":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Sets (or overrides if it already exists) merchant provided annotations in the form of key-value pairs. A common use case would be to supply us with additional structured information about a line item that cannot be provided via other methods. Submitted key-value pairs can be retrieved as part of the orders resource.
      operationId: content.orders.setlineitemmetadata
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersSetLineItemMetadataRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersSetLineItemMetadataResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/content/v2/{merchantId}/orders/{orderId}/shipLineItems":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Marks line item(s) as shipped.
      operationId: content.orders.shiplineitems
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersShipLineItemsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersShipLineItemsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/content/v2/{merchantId}/orders/{orderId}/testreturn":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Sandbox only. Creates a test return.
      operationId: content.orders.createtestreturn
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCreateTestReturnRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCreateTestReturnResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/content/v2/{merchantId}/orders/{orderId}/updateLineItemShippingDetails":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Updates ship by and delivery by dates for a line item.
      operationId: content.orders.updatelineitemshippingdetails
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersUpdateLineItemShippingDetailsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersUpdateLineItemShippingDetailsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/content/v2/{merchantId}/orders/{orderId}/updateMerchantOrderId":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Updates the merchant order ID for a given order.
      operationId: content.orders.updatemerchantorderid
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersUpdateMerchantOrderIdRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersUpdateMerchantOrderIdResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/content/v2/{merchantId}/orders/{orderId}/updateShipment":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Updates a shipment's status, carrier, and/or tracking ID.
      operationId: content.orders.updateshipment
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersUpdateShipmentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersUpdateShipmentResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/content/v2/{merchantId}/ordersbymerchantid/{merchantOrderId}":
    get:
      description: Retrieves an order using merchant order ID.
      operationId: content.orders.getbymerchantorderid
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The merchant order ID to be looked for.
          in: path
          name: merchantOrderId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersGetByMerchantOrderIdResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/pos/{targetMerchantId}/inventory":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Submit inventory for the given merchant.
      operationId: content.pos.inventory
      parameters:
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosInventoryRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosInventoryResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pos
  "/content/v2/{merchantId}/pos/{targetMerchantId}/sale":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Submit a sale event for the given merchant.
      operationId: content.pos.sale
      parameters:
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosSaleRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosSaleResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pos
  "/content/v2/{merchantId}/pos/{targetMerchantId}/store":
    get:
      description: Lists the stores of the target merchant.
      operationId: content.pos.list
      parameters:
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pos
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Creates a store for the given merchant.
      operationId: content.pos.insert
      parameters:
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosStore"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosStore"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pos
  "/content/v2/{merchantId}/pos/{targetMerchantId}/store/{storeCode}":
    delete:
      description: Deletes a store for the given merchant.
      operationId: content.pos.delete
      parameters:
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
        - description: A store code that is unique per merchant.
          in: path
          name: storeCode
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pos
    get:
      description: Retrieves information about the given store.
      operationId: content.pos.get
      parameters:
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
        - description: A store code that is unique per merchant.
          in: path
          name: storeCode
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosStore"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pos
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/products":
    get:
      description: Lists the products in your Merchant Center account. The response might contain fewer items than specified by maxResults. Rely on nextPageToken to determine if there are more items to be requested.
      operationId: content.products.list
      parameters:
        - description: The ID of the account that contains the products. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Flag to include the invalid inserted items in the result of the list request. By default the invalid items are not shown (the default value is false).
          in: query
          name: includeInvalidInsertedItems
          schema:
            type: boolean
        - description: The maximum number of products to return in the response, used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductsListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - products
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Uploads a product to your Merchant Center account. If an item with the same channel, contentLanguage, offerId, and targetCountry already exists, this method updates that entry.
      operationId: content.products.insert
      parameters:
        - description: The ID of the account that contains the product. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Product"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Product"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - products
  "/content/v2/{merchantId}/products/{productId}":
    delete:
      description: Deletes a product from your Merchant Center account.
      operationId: content.products.delete
      parameters:
        - description: The ID of the account that contains the product. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The REST ID of the product.
          in: path
          name: productId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - products
    get:
      description: Retrieves a product from your Merchant Center account.
      operationId: content.products.get
      parameters:
        - description: The ID of the account that contains the product. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The REST ID of the product.
          in: path
          name: productId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Product"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - products
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/productstatuses":
    get:
      description: Lists the statuses of the products in your Merchant Center account.
      operationId: content.productstatuses.list
      parameters:
        - description: The ID of the account that contains the products. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.
          explode: true
          in: query
          name: destinations
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Flag to include full product data in the results of the list request. The default value is false.
          in: query
          name: includeAttributes
          schema:
            type: boolean
        - description: Flag to include the invalid inserted items in the result of the list request. By default the invalid items are not shown (the default value is false).
          in: query
          name: includeInvalidInsertedItems
          schema:
            type: boolean
        - description: The maximum number of product statuses to return in the response, used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductstatusesListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - productstatuses
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/productstatuses/{productId}":
    get:
      description: Gets the status of a product from your Merchant Center account.
      operationId: content.productstatuses.get
      parameters:
        - description: The ID of the account that contains the product. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The REST ID of the product.
          in: path
          name: productId
          required: true
          schema:
            type: string
        - description: If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.
          explode: true
          in: query
          name: destinations
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Flag to include full product data in the result of this get request. The default value is false.
          in: query
          name: includeAttributes
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductStatus"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - productstatuses
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/shippingsettings":
    get:
      description: Lists the shipping settings of the sub-accounts in your Merchant Center account.
      operationId: content.shippingsettings.list
      parameters:
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The maximum number of shipping settings to return in the response, used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ShippingsettingsListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shippingsettings
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/shippingsettings/{accountId}":
    get:
      description: Retrieves the shipping settings of the account.
      operationId: content.shippingsettings.get
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to get/update shipping settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ShippingSettings"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shippingsettings
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    put:
      description: Updates the shipping settings of the account. Any fields that are not provided are deleted from the resource.
      operationId: content.shippingsettings.update
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to get/update shipping settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ShippingSettings"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ShippingSettings"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shippingsettings
  "/content/v2/{merchantId}/supportedCarriers":
    get:
      description: Retrieves supported carriers and carrier services for an account.
      operationId: content.shippingsettings.getsupportedcarriers
      parameters:
        - description: The ID of the account for which to retrieve the supported carriers.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ShippingsettingsGetSupportedCarriersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shippingsettings
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/supportedHolidays":
    get:
      description: Retrieves supported holidays for an account.
      operationId: content.shippingsettings.getsupportedholidays
      parameters:
        - description: The ID of the account for which to retrieve the supported holidays.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ShippingsettingsGetSupportedHolidaysResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shippingsettings
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/supportedPickupServices":
    get:
      description: Retrieves supported pickup services for an account.
      operationId: content.shippingsettings.getsupportedpickupservices
      parameters:
        - description: The ID of the account for which to retrieve the supported pickup services.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ShippingsettingsGetSupportedPickupServicesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shippingsettings
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
  "/content/v2/{merchantId}/testorders":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Sandbox only. Creates a test order.
      operationId: content.orders.createtestorder
      parameters:
        - description: The ID of the account that should manage the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCreateTestOrderRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCreateTestOrderResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/content/v2/{merchantId}/testorders/{orderId}/advance":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Sandbox only. Moves a test order from state "`inProgress`" to state "`pendingShipment`".
      operationId: content.orders.advancetestorder
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the test order to modify.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersAdvanceTestOrderResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/content/v2/{merchantId}/testorders/{orderId}/cancelByCustomer":
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
    post:
      description: Sandbox only. Cancels a test order for customer-initiated cancellation.
      operationId: content.orders.canceltestorderbycustomer
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the test order to cancel.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCancelTestOrderByCustomerRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCancelTestOrderByCustomerResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/content/v2/{merchantId}/testordertemplates/{templateName}":
    get:
      description: Sandbox only. Retrieves an order template that can be used to quickly create a new order in sandbox.
      operationId: content.orders.gettestordertemplate
      parameters:
        - description: The ID of the account that should manage the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The name of the template to retrieve.
          in: path
          name: templateName
          required: true
          schema:
            enum:
              - TEMPLATE1
              - TEMPLATE2
              - TEMPLATE1A
              - TEMPLATE1B
              - TEMPLATE3
            type: string
        - description: The country of the template to retrieve. Defaults to `US`.
          in: query
          name: country
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersGetTestOrderTemplateResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
    parameters:
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/alt"
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AdsShoppingContentapiProtoFrontendV2Account:
      description: Account data. After the creation of a new account it may take a few minutes before it is fully operational. The methods delete, insert, and update require the admin role.
      properties:
        adultContent:
          description: Indicates whether the merchant sells adult content.
          type: boolean
        adwordsLinks:
          description: List of linked AdWords accounts that are active or pending approval. To create a new link request, add a new link with status `active` to the list. It will remain in a `pending` state until approved or rejected either in the AdWords interface or through the AdWords API. To delete an active link, or to cancel a link request, remove it from the list.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountAdwordsLink"
          type: array
        businessInformation:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountBusinessInformation"
          description: The business information of the account.
        googleMyBusinessLink:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountGoogleMyBusinessLink"
          description: The GMB account which is linked or in the process of being linked with the Merchant Center account.
        id:
          description: Required for update. Merchant Center account ID.
          format: uint64
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#account`"'
          type: string
        name:
          description: Required. Display name for the account.
          type: string
        reviewsUrl:
          description: "[DEPRECATED] This field is never returned and will be ignored if provided."
          type: string
        sellerId:
          description: Client-specific, locally-unique, internal ID for the child account.
          type: string
        users:
          description: Users with access to the account. Every account (except for subaccounts) must have at least one admin user.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountUser"
          type: array
        websiteUrl:
          description: The merchant's website.
          type: string
        youtubeChannelLinks:
          description: List of linked YouTube channels that are active or pending approval. To create a new link request, add a new link with status `active` to the list. It will remain in a `pending` state until approved or rejected in the YT Creator Studio interface. To delete an active link, or to cancel a link request, remove it from the list.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountYouTubeChannelLink"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountAddress:
      properties:
        country:
          description: CLDR country code (e.g. "US").
          type: string
        locality:
          description: City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs).
          type: string
        postalCode:
          description: Postal code or ZIP (e.g. "94043").
          type: string
        region:
          description: Top-level administrative subdivision of the country. For example, a state like California ("CA") or a province like Quebec ("QC").
          type: string
        streetAddress:
          description: Street-level part of the address.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountAdwordsLink:
      properties:
        adwordsId:
          description: Customer ID of the AdWords account.
          format: uint64
          type: string
        status:
          description: "Status of the link between this Merchant Center account and the AdWords account. Upon retrieval, it represents the actual status of the link and can be either `active` if it was approved in Google AdWords or `pending` if it's pending approval. Upon insertion, it represents the *intended* status of the link. Re-uploading a link with status `active` when it's still pending or with status `pending` when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status `inactive` is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending. Acceptable values are: - \"`active`\" - \"`pending`\" "
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountBusinessInformation:
      properties:
        address:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountAddress"
          description: The address of the business.
        customerService:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountCustomerService"
          description: The customer service information of the business.
        phoneNumber:
          description: The phone number of the business.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountCustomerService:
      properties:
        email:
          description: Customer service email.
          type: string
        phoneNumber:
          description: Customer service phone number.
          type: string
        url:
          description: Customer service URL.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountGoogleMyBusinessLink:
      properties:
        gmbEmail:
          description: The GMB email address of which a specific account within a GMB account. A sample account within a GMB account could be a business account with set of locations, managed under the GMB account.
          type: string
        status:
          description: 'Status of the link between this Merchant Center account and the GMB account. Acceptable values are: - "`active`" - "`pending`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountIdentifier:
      properties:
        aggregatorId:
          description: The aggregator ID, set for aggregators and subaccounts (in that case, it represents the aggregator of the subaccount).
          format: uint64
          type: string
        merchantId:
          description: The merchant account ID, set for individual accounts and subaccounts.
          format: uint64
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountStatus:
      description: The status of an account, i.e., information about its products, which is computed offline and not returned immediately at insertion time.
      properties:
        accountId:
          description: The ID of the account for which the status is reported.
          type: string
        accountLevelIssues:
          description: A list of account level issues.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountStatusAccountLevelIssue"
          type: array
        dataQualityIssues:
          description: DEPRECATED - never populated.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountStatusDataQualityIssue"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountStatus`"'
          type: string
        products:
          description: List of product-related data by channel, destination, and country. Data in this field may be delayed by up to 30 minutes.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountStatusProducts"
          type: array
        websiteClaimed:
          description: Whether the account's website is claimed or not.
          type: boolean
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountStatusAccountLevelIssue:
      properties:
        country:
          description: Country for which this issue is reported.
          type: string
        destination:
          description: The destination the issue applies to.
          type: string
        detail:
          description: Additional details about the issue.
          type: string
        documentation:
          description: The URL of a web page to help resolving this issue.
          type: string
        id:
          description: Issue identifier.
          type: string
        severity:
          description: 'Severity of the issue. Acceptable values are: - "`critical`" - "`error`" - "`suggestion`" '
          type: string
        title:
          description: Short description of the issue.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountStatusDataQualityIssue:
      properties:
        country:
          type: string
        destination:
          type: string
        detail:
          type: string
        displayedValue:
          type: string
        exampleItems:
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountStatusExampleItem"
          type: array
        id:
          type: string
        lastChecked:
          type: string
        location:
          type: string
        numItems:
          format: uint32
          type: integer
        severity:
          description: ' Acceptable values are: - "`critical`" - "`error`" - "`suggestion`" '
          type: string
        submittedValue:
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountStatusExampleItem:
      properties:
        itemId:
          type: string
        link:
          type: string
        submittedValue:
          type: string
        title:
          type: string
        valueOnLandingPage:
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountStatusItemLevelIssue:
      properties:
        attributeName:
          description: The attribute's name, if the issue is caused by a single attribute.
          type: string
        code:
          description: The error code of the issue.
          type: string
        description:
          description: A short issue description in English.
          type: string
        detail:
          description: A detailed issue description in English.
          type: string
        documentation:
          description: The URL of a web page to help with resolving this issue.
          type: string
        numItems:
          description: Number of items with this issue.
          format: int64
          type: string
        resolution:
          description: Whether the issue can be resolved by the merchant.
          type: string
        servability:
          description: How this issue affects serving of the offer.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountStatusProducts:
      properties:
        channel:
          description: 'The channel the data applies to. Acceptable values are: - "`local`" - "`online`" '
          type: string
        country:
          description: The country the data applies to.
          type: string
        destination:
          description: The destination the data applies to.
          type: string
        itemLevelIssues:
          description: List of item-level issues.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountStatusItemLevelIssue"
          type: array
        statistics:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountStatusStatistics"
          description: Aggregated product statistics.
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountStatusStatistics:
      properties:
        active:
          description: Number of active offers.
          format: int64
          type: string
        disapproved:
          description: Number of disapproved offers.
          format: int64
          type: string
        expiring:
          description: Number of expiring offers.
          format: int64
          type: string
        pending:
          description: Number of pending offers.
          format: int64
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountTax:
      description: The tax settings of a merchant account. All methods require the admin role.
      properties:
        accountId:
          description: Required. The ID of the account to which these account tax settings belong.
          format: uint64
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountTax".'
          type: string
        rules:
          description: Tax rules. Updating the tax rules will enable US taxes (not reversible). Defining no rules is equivalent to not charging tax at all.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountTaxTaxRule"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountTaxTaxRule:
      description: Tax calculation rule to apply in a state or province (USA only).
      properties:
        country:
          description: Country code in which tax is applicable.
          type: string
        locationId:
          description: Required. State (or province) is which the tax is applicable, described by its location ID (also called criteria ID).
          format: uint64
          type: string
        ratePercent:
          description: Explicit tax rate in percent, represented as a floating point number without the percentage character. Must not be negative.
          type: string
        shippingTaxed:
          description: If true, shipping charges are also taxed.
          type: boolean
        useGlobalRate:
          description: Whether the tax rate is taken from a global tax table or specified explicitly.
          type: boolean
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountUser:
      properties:
        admin:
          description: Whether user is an admin.
          type: boolean
        emailAddress:
          description: User's email address.
          type: string
        orderManager:
          description: Whether user is an order manager.
          type: boolean
        paymentsAnalyst:
          description: Whether user can access payment statements.
          type: boolean
        paymentsManager:
          description: Whether user can manage payment settings.
          type: boolean
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountYouTubeChannelLink:
      properties:
        channelId:
          description: Channel ID.
          type: string
        status:
          description: "Status of the link between this Merchant Center account and the YouTube channel. Upon retrieval, it represents the actual status of the link and can be either `active` if it was approved in YT Creator Studio or `pending` if it's pending approval. Upon insertion, it represents the *intended* status of the link. Re-uploading a link with status `active` when it's still pending or with status `pending` when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status `inactive` is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending."
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountsAuthInfoResponse:
      properties:
        accountIdentifiers:
          description: "The account identifiers corresponding to the authenticated user. - For an individual account: only the merchant ID is defined - For an aggregator: only the aggregator ID is defined - For a subaccount of an MCA: both the merchant ID and the aggregator ID are defined. "
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountIdentifier"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountsAuthInfoResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountsClaimWebsiteResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountsClaimWebsiteResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountsCustomBatchRequestEntry"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountsCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch accounts request.
      properties:
        account:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Account"
          description: The account to create or update. Only defined if the method is `insert` or `update`.
        accountId:
          description: The ID of the targeted account. Only defined if the method is not `insert`.
          format: uint64
          type: string
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        force:
          description: Whether the account should be deleted if the account has offers. Only applicable if the method is `delete`.
          type: boolean
        labelIds:
          description: Label IDs for the 'updatelabels' request.
          items:
            format: uint64
            type: string
          type: array
        linkRequest:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountsCustomBatchRequestEntryLinkRequest"
          description: Details about the `link` request.
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`claimWebsite`" - "`delete`" - "`get`" - "`insert`" - "`link`" - "`update`" '
          type: string
        overwrite:
          description: Only applicable if the method is `claimwebsite`. Indicates whether or not to take the claim from another account in case there is a conflict.
          type: boolean
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountsCustomBatchRequestEntryLinkRequest:
      properties:
        action:
          description: 'Action to perform for this link. The `"request"` action is only available to select merchants. Acceptable values are: - "`approve`" - "`remove`" - "`request`" '
          type: string
        linkType:
          description: 'Type of the link between the two accounts. Acceptable values are: - "`channelPartner`" - "`eCommercePlatform`" '
          type: string
        linkedAccountId:
          description: The ID of the linked account.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountsCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountsCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountsCustomBatchResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountsCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch accounts response.
      properties:
        account:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Account"
          description: The retrieved, created, or updated account. Not defined if the method was `delete`, `claimwebsite` or `link`.
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Errors"
          description: A list of errors defined if and only if the request failed.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountsCustomBatchResponseEntry`"'
          type: string
        linkStatus:
          description: 'Deprecated. This field is never set. Acceptable values are: - "`active`" - "`inactive`" - "`pending`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountsLinkRequest:
      properties:
        action:
          description: 'Action to perform for this link. The `"request"` action is only available to select merchants. Acceptable values are: - "`approve`" - "`remove`" - "`request`" '
          type: string
        linkType:
          description: 'Type of the link between the two accounts. Acceptable values are: - "`channelPartner`" - "`eCommercePlatform`" '
          type: string
        linkedAccountId:
          description: The ID of the linked account.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountsLinkResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountsLinkResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountsListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountsListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of accounts.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Account"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountstatusesCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountstatusesCustomBatchRequestEntry"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountstatusesCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch accountstatuses request.
      properties:
        accountId:
          description: The ID of the (sub-)account whose status to get.
          format: uint64
          type: string
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        destinations:
          description: If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.
          items:
            type: string
          type: array
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`get`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountstatusesCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountstatusesCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountstatusesCustomBatchResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountstatusesCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch accountstatuses response.
      properties:
        accountStatus:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountStatus"
          description: The requested account status. Defined if and only if the request was successful.
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Errors"
          description: A list of errors defined if and only if the request failed.
      type: object
    AdsShoppingContentapiProtoFrontendV2AccountstatusesListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountstatusesListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of account statuses.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountStatus"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2AccounttaxCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccounttaxCustomBatchRequestEntry"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2AccounttaxCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch accounttax request.
      properties:
        accountId:
          description: The ID of the account for which to get/update account tax settings.
          format: uint64
          type: string
        accountTax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountTax"
          description: The account tax settings to update. Only defined if the method is `update`.
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`get`" - "`update`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccounttaxCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccounttaxCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accounttaxCustomBatchResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccounttaxCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch accounttax response.
      properties:
        accountTax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountTax"
          description: The retrieved or updated account tax settings.
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Errors"
          description: A list of errors defined if and only if the request failed.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accounttaxCustomBatchResponseEntry`"'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2AccounttaxListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accounttaxListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of account tax settings.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2AccountTax"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2Amount:
      properties:
        pretax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: "[required] Value before taxes."
        tax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: "[required] Tax value."
      type: object
    AdsShoppingContentapiProtoFrontendV2BusinessDayConfig:
      properties:
        businessDays:
          description: Regular business days. May not be empty.
          items:
            type: string
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2CarrierRate:
      properties:
        carrierName:
          description: Carrier service, such as `"UPS"` or `"Fedex"`. The list of supported carriers can be retrieved via the `getSupportedCarriers` method. Required.
          type: string
        carrierService:
          description: Carrier service, such as `"ground"` or `"2 days"`. The list of supported services for a carrier can be retrieved via the `getSupportedCarriers` method. Required.
          type: string
        flatAdjustment:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: 'Additive shipping rate modifier. Can be negative. For example `{ "value": "1", "currency" : "USD" }` adds $1 to the rate, `{ "value": "-3", "currency" : "USD" }` removes $3 from the rate. Optional.'
        name:
          description: Name of the carrier rate. Must be unique per rate group. Required.
          type: string
        originPostalCode:
          description: Shipping origin for this carrier rate. Required.
          type: string
        percentageAdjustment:
          description: Multiplicative shipping rate modifier as a number in decimal notation. Can be negative. For example `"5.4"` increases the rate by 5.4%, `"-3"` decreases the rate by 3%. Optional.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2CarriersCarrier:
      properties:
        country:
          description: The CLDR country code of the carrier (e.g., "US"). Always present.
          type: string
        name:
          description: The name of the carrier (e.g., `"UPS"`). Always present.
          type: string
        services:
          description: A list of supported services (e.g., `"ground"`) for that carrier. Contains at least one service.
          items:
            type: string
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2CustomAttribute:
      properties:
        name:
          description: The name of the attribute. Underscores will be replaced by spaces upon insertion.
          type: string
        type:
          description: 'The type of the attribute. Acceptable values are: - "`boolean`" - "`datetimerange`" - "`float`" - "`group`" - "`int`" - "`price`" - "`text`" - "`time`" - "`url`" '
          type: string
        unit:
          description: Free-form unit of the attribute. Unit can only be used for values of type int, float, or price.
          type: string
        value:
          description: The value of the attribute.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2CustomGroup:
      properties:
        attributes:
          description: The sub-attributes.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2CustomAttribute"
          type: array
        name:
          description: The name of the group. Underscores will be replaced by spaces upon insertion.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2CustomerReturnReason:
      properties:
        description:
          description: Description of the reason.
          type: string
        reasonCode:
          description: 'Code of the return reason. Acceptable values are: - "`betterPriceFound`" - "`changedMind`" - "`damagedOrDefectiveItem`" - "`didNotMatchDescription`" - "`doesNotFit`" - "`expiredItem`" - "`incorrectItemReceived`" - "`noLongerNeeded`" - "`notSpecified`" - "`orderedWrongItem`" - "`other`" - "`qualityNotExpected`" - "`receivedTooLate`" - "`undeliverable`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2CutoffTime:
      properties:
        hour:
          description: Hour of the cutoff time until which an order has to be placed to be processed in the same day. Required.
          format: uint32
          type: integer
        minute:
          description: Minute of the cutoff time until which an order has to be placed to be processed in the same day. Required.
          format: uint32
          type: integer
        timezone:
          description: Timezone identifier for the cutoff time. A list of identifiers can be found in the AdWords API documentation. E.g. "Europe/Zurich". Required.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2Datafeed:
      description: Datafeed configuration data.
      properties:
        attributeLanguage:
          description: The two-letter ISO 639-1 language in which the attributes are defined in the data feed.
          type: string
        contentLanguage:
          description: "[DEPRECATED] Please use targets[].language instead. The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for `targetCountry`."
          type: string
        contentType:
          description: 'Required. The type of data feed. For product inventory feeds, only feeds for local stores, not online stores, are supported. Acceptable values are: - "`local products`" - "`product inventory`" - "`products`" '
          type: string
        fetchSchedule:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2DatafeedFetchSchedule"
          description: Fetch schedule for the feed file.
        fileName:
          description: Required. The filename of the feed. All feeds must have a unique file name.
          type: string
        format:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2DatafeedFormat"
          description: Format of the feed file.
        id:
          description: Required for update. The ID of the data feed.
          format: int64
          type: string
        intendedDestinations:
          description: "[DEPRECATED] Please use targets[].includedDestinations instead. The list of intended destinations (corresponds to checked check boxes in Merchant Center)."
          items:
            type: string
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#datafeed`"'
          type: string
        name:
          description: Required for insert. A descriptive name of the data feed.
          type: string
        targetCountry:
          description: "[DEPRECATED] Please use targets[].country instead. The country where the items in the feed will be included in the search index, represented as a CLDR territory code."
          type: string
        targets:
          description: The targets this feed should apply to (country, language, destinations).
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2DatafeedTarget"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2DatafeedFetchSchedule:
      description: The required fields vary based on the frequency of fetching. For a monthly fetch schedule, day_of_month and hour are required. For a weekly fetch schedule, weekday and hour are required. For a daily fetch schedule, only hour is required.
      properties:
        dayOfMonth:
          description: The day of the month the feed file should be fetched (1-31).
          format: uint32
          type: integer
        fetchUrl:
          description: The URL where the feed file can be fetched. Google Merchant Center will support automatic scheduled uploads using the HTTP, HTTPS, FTP, or SFTP protocols, so the value will need to be a valid link using one of those four protocols.
          type: string
        hour:
          description: The hour of the day the feed file should be fetched (0-23).
          format: uint32
          type: integer
        minuteOfHour:
          description: The minute of the hour the feed file should be fetched (0-59). Read-only.
          format: uint32
          type: integer
        password:
          description: An optional password for fetch_url.
          type: string
        paused:
          description: Whether the scheduled fetch is paused or not.
          type: boolean
        timeZone:
          description: Time zone used for schedule. UTC by default. E.g., "America/Los_Angeles".
          type: string
        username:
          description: An optional user name for fetch_url.
          type: string
        weekday:
          description: 'The day of the week the feed file should be fetched. Acceptable values are: - "`monday`" - "`tuesday`" - "`wednesday`" - "`thursday`" - "`friday`" - "`saturday`" - "`sunday`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2DatafeedFormat:
      properties:
        columnDelimiter:
          description: 'Delimiter for the separation of values in a delimiter-separated values feed. If not specified, the delimiter will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - "`pipe`" - "`tab`" - "`tilde`" '
          type: string
        fileEncoding:
          description: 'Character encoding scheme of the data feed. If not specified, the encoding will be auto-detected. Acceptable values are: - "`latin-1`" - "`utf-16be`" - "`utf-16le`" - "`utf-8`" - "`windows-1252`" '
          type: string
        quotingMode:
          description: 'Specifies how double quotes are interpreted. If not specified, the mode will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - "`normal character`" - "`value quoting`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2DatafeedStatus:
      description: The status of a datafeed, i.e., the result of the last retrieval of the datafeed computed asynchronously when the feed processing is finished.
      properties:
        country:
          description: The country for which the status is reported, represented as a CLDR territory code.
          type: string
        datafeedId:
          description: The ID of the feed for which the status is reported.
          format: uint64
          type: string
        errors:
          description: The list of errors occurring in the feed.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2DatafeedStatusError"
          type: array
        itemsTotal:
          description: The number of items in the feed that were processed.
          format: uint64
          type: string
        itemsValid:
          description: The number of items in the feed that were valid.
          format: uint64
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#datafeedStatus`"'
          type: string
        language:
          description: The two-letter ISO 639-1 language for which the status is reported.
          type: string
        lastUploadDate:
          description: The last date at which the feed was uploaded.
          type: string
        processingStatus:
          description: 'The processing status of the feed. Acceptable values are: - "`"`failure`": The feed could not be processed or all items had errors.`" - "`in progress`": The feed is being processed. - "`none`": The feed has not yet been processed. For example, a feed that has never been uploaded will have this processing status. - "`success`": The feed was processed successfully, though some items might have had errors. '
          type: string
        warnings:
          description: The list of errors occurring in the feed.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2DatafeedStatusError"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2DatafeedStatusError:
      description: An error occurring in the feed, like "invalid price".
      properties:
        code:
          description: The code of the error, e.g., "validation/invalid_value".
          type: string
        count:
          description: The number of occurrences of the error in the feed.
          format: uint64
          type: string
        examples:
          description: A list of example occurrences of the error, grouped by product.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2DatafeedStatusExample"
          type: array
        message:
          description: The error message, e.g., "Invalid price".
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2DatafeedStatusExample:
      description: An example occurrence for a particular error.
      properties:
        itemId:
          description: The ID of the example item.
          type: string
        lineNumber:
          description: Line number in the data feed where the example is found.
          format: uint64
          type: string
        value:
          description: The problematic value.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2DatafeedTarget:
      properties:
        country:
          description: The country where the items in the feed will be included in the search index, represented as a CLDR territory code.
          type: string
        excludedDestinations:
          description: The list of destinations to exclude for this target (corresponds to unchecked check boxes in Merchant Center).
          items:
            type: string
          type: array
        includedDestinations:
          description: "The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in `excludedDestinations`. List of supported destinations (if available to the account): - DisplayAds - Shopping - ShoppingActions - SurfacesAcrossGoogle "
          items:
            type: string
          type: array
        language:
          description: The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for `targets[].country`.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2DatafeedsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2DatafeedsCustomBatchRequestEntry"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2DatafeedsCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch datafeeds request.
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        datafeed:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Datafeed"
          description: The data feed to insert.
        datafeedId:
          description: The ID of the data feed to get, delete or fetch.
          format: uint64
          type: string
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`delete`" - "`fetchNow`" - "`get`" - "`insert`" - "`update`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2DatafeedsCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2DatafeedsCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#datafeedsCustomBatchResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2DatafeedsCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch datafeeds response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        datafeed:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Datafeed"
          description: The requested data feed. Defined if and only if the request was successful.
        errors:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Errors"
          description: A list of errors defined if and only if the request failed.
      type: object
    AdsShoppingContentapiProtoFrontendV2DatafeedsFetchNowResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#datafeedsFetchNowResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2DatafeedsListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#datafeedsListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of datafeeds.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Datafeed"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2DatafeedstatusesCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2DatafeedstatusesCustomBatchRequestEntry"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2DatafeedstatusesCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch datafeedstatuses request.
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        country:
          description: The country for which to get the datafeed status. If this parameter is provided then language must also be provided. Note that for multi-target datafeeds this parameter is required.
          type: string
        datafeedId:
          description: The ID of the data feed to get.
          format: uint64
          type: string
        language:
          description: The language for which to get the datafeed status. If this parameter is provided then country must also be provided. Note that for multi-target datafeeds this parameter is required.
          type: string
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`get`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2DatafeedstatusesCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2DatafeedstatusesCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#datafeedstatusesCustomBatchResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2DatafeedstatusesCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch datafeedstatuses response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        datafeedStatus:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2DatafeedStatus"
          description: The requested data feed status. Defined if and only if the request was successful.
        errors:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Errors"
          description: A list of errors defined if and only if the request failed.
      type: object
    AdsShoppingContentapiProtoFrontendV2DatafeedstatusesListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#datafeedstatusesListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of datafeed statuses.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2DatafeedStatus"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2DeliveryTime:
      properties:
        cutoffTime:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2CutoffTime"
          description: Business days cutoff time definition. If not configured the cutoff time will be defaulted to 8AM PST.
        handlingBusinessDayConfig:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2BusinessDayConfig"
          description: The business days during which orders can be handled. If not provided, Monday to Friday business days will be assumed.
        holidayCutoffs:
          description: Holiday cutoff definitions. If configured, they specify order cutoff times for holiday-specific shipping.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2HolidayCutoff"
          type: array
        maxHandlingTimeInDays:
          description: Maximum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped. Must be greater than or equal to `minHandlingTimeInDays`.
          format: uint32
          type: integer
        maxTransitTimeInDays:
          description: Maximum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Must be greater than or equal to `minTransitTimeInDays`.
          format: uint32
          type: integer
        minHandlingTimeInDays:
          description: Minimum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped.
          format: uint32
          type: integer
        minTransitTimeInDays:
          description: Minimum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Either `{min,max}TransitTimeInDays` or `transitTimeTable` must be set, but not both.
          format: uint32
          type: integer
        transitBusinessDayConfig:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2BusinessDayConfig"
          description: The business days during which orders can be in-transit. If not provided, Monday to Friday business days will be assumed.
        transitTimeTable:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2TransitTable"
          description: Transit time table, number of business days spent in transit based on row and column dimensions. Either `{min,max}TransitTimeInDays` or `transitTimeTable` can be set, but not both.
      type: object
    AdsShoppingContentapiProtoFrontendV2Error:
      description: An error returned by the API.
      properties:
        domain:
          description: The domain of the error.
          type: string
        message:
          description: A description of the error.
          type: string
        reason:
          description: The error code.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2Errors:
      description: A list of errors returned by a failed batch entry.
      properties:
        code:
          description: The HTTP status of the first error in `errors`.
          format: uint32
          type: integer
        errors:
          description: A list of errors.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Error"
          type: array
        message:
          description: The message of the first error in `errors`.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2GmbAccounts:
      properties:
        accountId:
          description: The ID of the Merchant Center account.
          format: uint64
          type: string
        gmbAccounts:
          description: A list of GMB accounts which are available to the merchant.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2GmbAccountsGmbAccount"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2GmbAccountsGmbAccount:
      properties:
        email:
          description: The email which identifies the GMB account.
          type: string
        listingCount:
          description: Number of listings under this account.
          format: uint64
          type: string
        name:
          description: The name of the GMB account.
          type: string
        type:
          description: The type of the GMB account (User or Business).
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2Headers:
      description: A non-empty list of row or column headers for a table. Exactly one of `prices`, `weights`, `numItems`, `postalCodeGroupNames`, or `location` must be set.
      properties:
        locations:
          description: A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LocationIdSet"
          type: array
        numberOfItems:
          description: A list of inclusive number of items upper bounds. The last value can be `"infinity"`. For example `["10", "50", "infinity"]` represents the headers "<= 10 items", "<= 50 items", and "> 50 items". Must be non-empty. Can only be set if all other fields are not set.
          items:
            type: string
          type: array
        postalCodeGroupNames:
          description: 'A list of postal group names. The last value can be `"all other locations"`. Example: `["zone 1", "zone 2", "all other locations"]`. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.'
          items:
            type: string
          type: array
        prices:
          description: "A list of inclusive order price upper bounds. The last price's value can be `\"infinity\"`. For example `[{\"value\": \"10\", \"currency\": \"USD\"}, {\"value\": \"500\", \"currency\": \"USD\"}, {\"value\": \"infinity\", \"currency\": \"USD\"}]` represents the headers \"<= $10\", \"<= $500\", and \"> $500\". All prices within a service must have the same currency. Must be non-empty. Can only be set if all other fields are not set."
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          type: array
        weights:
          description: "A list of inclusive order weight upper bounds. The last weight's value can be `\"infinity\"`. For example `[{\"value\": \"10\", \"unit\": \"kg\"}, {\"value\": \"50\", \"unit\": \"kg\"}, {\"value\": \"infinity\", \"unit\": \"kg\"}]` represents the headers \"<= 10kg\", \"<= 50kg\", and \"> 50kg\". All weights within a service must have the same unit. Must be non-empty. Can only be set if all other fields are not set."
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Weight"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2HolidayCutoff:
      properties:
        deadlineDate:
          description: Date of the order deadline, in ISO 8601 format. E.g. "2016-11-29" for 29th November 2016. Required.
          type: string
        deadlineHour:
          description: "Hour of the day on the deadline date until which the order has to be placed to qualify for the delivery guarantee. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Required."
          format: uint32
          type: integer
        deadlineTimezone:
          description: Timezone identifier for the deadline hour. A list of identifiers can be found in the AdWords API documentation. E.g. "Europe/Zurich". Required.
          type: string
        holidayId:
          description: Unique identifier for the holiday. Required.
          type: string
        visibleFromDate:
          description: Date on which the deadline will become visible to consumers in ISO 8601 format. E.g. "2016-10-31" for 31st October 2016. Required.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2HolidaysHoliday:
      properties:
        countryCode:
          description: The CLDR territory code of the country in which the holiday is available. E.g. "US", "DE", "GB". A holiday cutoff can only be configured in a shipping settings service with matching delivery country. Always present.
          type: string
        date:
          description: Date of the holiday, in ISO 8601 format. E.g. "2016-12-25" for Christmas 2016. Always present.
          type: string
        deliveryGuaranteeDate:
          description: Date on which the order has to arrive at the customer's, in ISO 8601 format. E.g. "2016-12-24" for 24th December 2016. Always present.
          type: string
        deliveryGuaranteeHour:
          description: "Hour of the day in the delivery location's timezone on the guaranteed delivery date by which the order has to arrive at the customer's. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Always present."
          format: uint64
          type: string
        id:
          description: Unique identifier for the holiday to be used when configuring holiday cutoffs. Always present.
          type: string
        type:
          description: "The holiday type. Always present. Acceptable values are: - \"`Christmas`\" - \"`Easter`\" - \"`Father's Day`\" - \"`Halloween`\" - \"`Independence Day (USA)`\" - \"`Mother's Day`\" - \"`Thanksgiving`\" - \"`Valentine's Day`\" "
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2Installment:
      properties:
        amount:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: The amount the buyer has to pay per month.
        months:
          description: The number of installments the buyer has to pay.
          format: int64
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2Inventory:
      properties:
        availability:
          description: 'The availability of the product. Acceptable values are: - "`in stock`" - "`out of stock`" - "`preorder`" '
          type: string
        customLabel0:
          description: Custom label 0 for custom grouping of items in a Shopping campaign. Only supported for online products.
          type: string
        customLabel1:
          description: Custom label 1 for custom grouping of items in a Shopping campaign. Only supported for online products.
          type: string
        customLabel2:
          description: Custom label 2 for custom grouping of items in a Shopping campaign. Only supported for online products.
          type: string
        customLabel3:
          description: Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products.
          type: string
        customLabel4:
          description: Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products.
          type: string
        installment:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Installment"
          description: Number and amount of installments to pay for an item. Brazil only.
        instoreProductLocation:
          description: The instore product location. Supported only for local products.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#inventory`"'
          type: string
        loyaltyPoints:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LoyaltyPoints"
          description: Loyalty points that users receive after purchasing the item. Japan only.
        pickup:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2InventoryPickup"
          description: Store pickup information. Only supported for local inventory. Not setting `pickup` means "don't update" while setting it to the empty value (`{}` in JSON) means "delete". Otherwise, `pickupMethod` and `pickupSla` must be set together, unless `pickupMethod` is "not supported".
        price:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: The price of the product.
        quantity:
          description: The quantity of the product. Must be equal to or greater than zero. Supported only for local products.
          format: uint32
          type: integer
        salePrice:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: The sale price of the product. Mandatory if `sale_price_effective_date` is defined.
        salePriceEffectiveDate:
          description: A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as 'null' if undecided.
          type: string
        sellOnGoogleQuantity:
          description: The quantity of the product that is available for selling on Google. Supported only for online products.
          format: uint32
          type: integer
      type: object
    AdsShoppingContentapiProtoFrontendV2InventoryCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2InventoryCustomBatchRequestEntry"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2InventoryCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch inventory request.
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        inventory:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Inventory"
          description: Price and availability of the product.
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        productId:
          description: The ID of the product for which to update price and availability.
          type: string
        storeCode:
          description: The code of the store for which to update price and availability. Use `online` to update price and availability of an online product.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2InventoryCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2InventoryCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#inventoryCustomBatchResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2InventoryCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch inventory response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Errors"
          description: A list of errors defined if and only if the request failed.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#inventoryCustomBatchResponseEntry`"'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2InventoryPickup:
      properties:
        pickupMethod:
          description: 'Whether store pickup is available for this offer and whether the pickup option should be shown as buy, reserve, or not supported. Only supported for local inventory. Unless the value is "not supported", must be submitted together with `pickupSla`. Acceptable values are: - "`buy`" - "`not supported`" - "`reserve`" - "`ship to store`" '
          type: string
        pickupSla:
          description: 'The expected date that an order will be ready for pickup, relative to when the order is placed. Only supported for local inventory. Must be submitted together with `pickupMethod`. Acceptable values are: - "`five day`" - "`four day`" - "`multi day`" - "`multi week`" - "`next day`" - "`same day`" - "`seven day`" - "`six day`" - "`three day`" - "`two day`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2InventorySetRequest:
      properties:
        availability:
          description: 'The availability of the product. Acceptable values are: - "`in stock`" - "`out of stock`" - "`preorder`" '
          type: string
        customLabel0:
          description: Custom label 0 for custom grouping of items in a Shopping campaign. Only supported for online products.
          type: string
        customLabel1:
          description: Custom label 1 for custom grouping of items in a Shopping campaign. Only supported for online products.
          type: string
        customLabel2:
          description: Custom label 2 for custom grouping of items in a Shopping campaign. Only supported for online products.
          type: string
        customLabel3:
          description: Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products.
          type: string
        customLabel4:
          description: Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products.
          type: string
        installment:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Installment"
          description: Number and amount of installments to pay for an item. Brazil only.
        instoreProductLocation:
          description: The instore product location. Supported only for local products.
          type: string
        loyaltyPoints:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LoyaltyPoints"
          description: Loyalty points that users receive after purchasing the item. Japan only.
        pickup:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2InventoryPickup"
          description: Store pickup information. Only supported for local inventory. Not setting `pickup` means "don't update" while setting it to the empty value (`{}` in JSON) means "delete". Otherwise, `pickupMethod` and `pickupSla` must be set together, unless `pickupMethod` is "not supported".
        price:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: The price of the product.
        quantity:
          description: The quantity of the product. Must be equal to or greater than zero. Supported only for local products.
          format: uint32
          type: integer
        salePrice:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: The sale price of the product. Mandatory if `sale_price_effective_date` is defined.
        salePriceEffectiveDate:
          description: A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as 'null' if undecided.
          type: string
        sellOnGoogleQuantity:
          description: The quantity of the product that is available for selling on Google. Supported only for online products.
          format: uint32
          type: integer
      type: object
    AdsShoppingContentapiProtoFrontendV2InventorySetResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#inventorySetResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2InvoiceSummary:
      properties:
        additionalChargeSummaries:
          description: Summary of the total amounts of the additional charges.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2InvoiceSummaryAdditionalChargeSummary"
          type: array
        customerBalance:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Amount"
          description: Deprecated.
        googleBalance:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Amount"
          description: Deprecated.
        merchantBalance:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Amount"
          description: Deprecated.
        productTotal:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Amount"
          description: "[required] Total price for the product."
        promotionSummaries:
          description: Deprecated.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Promotion"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2InvoiceSummaryAdditionalChargeSummary:
      properties:
        totalAmount:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Amount"
          description: "[required] Total additional charge for this type."
        type:
          description: '[required] Type of the additional charge. Acceptable values are: - "`shipping`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2LiaAboutPageSettings:
      properties:
        status:
          description: 'The status of the verification process for the About page. Acceptable values are: - "`active`" - "`inactive`" - "`pending`" '
          type: string
        url:
          description: The URL for the About page.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2LiaCountrySettings:
      properties:
        about:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiaAboutPageSettings"
          description: The settings for the About page.
        country:
          description: Required. CLDR country code (e.g. "US").
          type: string
        hostedLocalStorefrontActive:
          description: The status of the "Merchant hosted local storefront" feature.
          type: boolean
        inventory:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiaInventorySettings"
          description: LIA inventory verification settings.
        onDisplayToOrder:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiaOnDisplayToOrderSettings"
          description: LIA "On Display To Order" settings.
        posDataProvider:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiaPosDataProvider"
          description: The POS data provider linked with this country.
        storePickupActive:
          description: The status of the "Store pickup" feature.
          type: boolean
      type: object
    AdsShoppingContentapiProtoFrontendV2LiaInventorySettings:
      properties:
        inventoryVerificationContactEmail:
          description: The email of the contact for the inventory verification process.
          type: string
        inventoryVerificationContactName:
          description: The name of the contact for the inventory verification process.
          type: string
        inventoryVerificationContactStatus:
          description: 'The status of the verification contact. Acceptable values are: - "`active`" - "`inactive`" - "`pending`" '
          type: string
        status:
          description: 'The status of the inventory verification process. Acceptable values are: - "`active`" - "`inactive`" - "`pending`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2LiaOnDisplayToOrderSettings:
      properties:
        shippingCostPolicyUrl:
          description: Shipping cost and policy URL.
          type: string
        status:
          description: 'The status of the ?On display to order? feature. Acceptable values are: - "`active`" - "`inactive`" - "`pending`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2LiaPosDataProvider:
      properties:
        posDataProviderId:
          description: The ID of the POS data provider.
          format: uint64
          type: string
        posExternalAccountId:
          description: The account ID by which this merchant is known to the POS data provider.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2LiaSettings:
      description: Local Inventory ads (LIA) settings. All methods except listposdataproviders require the admin role.
      properties:
        accountId:
          description: The ID of the account to which these LIA settings belong. Ignored upon update, always present in get request responses.
          format: uint64
          type: string
        countrySettings:
          description: The LIA settings for each country.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiaCountrySettings"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liaSettings`"'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2LiasettingsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiasettingsCustomBatchRequestEntry"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2LiasettingsCustomBatchRequestEntry:
      properties:
        accountId:
          description: The ID of the account for which to get/update account LIA settings.
          format: uint64
          type: string
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        contactEmail:
          description: Inventory validation contact email. Required only for SetInventoryValidationContact.
          type: string
        contactName:
          description: Inventory validation contact name. Required only for SetInventoryValidationContact.
          type: string
        country:
          description: The country code. Required only for RequestInventoryVerification.
          type: string
        gmbEmail:
          description: The GMB account. Required only for RequestGmbAccess.
          type: string
        liaSettings:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiaSettings"
          description: The account Lia settings to update. Only defined if the method is `update`.
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`get`" - "`getAccessibleGmbAccounts`" - "`requestGmbAccess`" - "`requestInventoryVerification`" - "`setInventoryVerificationContact`" - "`update`" '
          type: string
        posDataProviderId:
          description: The ID of POS data provider. Required only for SetPosProvider.
          format: uint64
          type: string
        posExternalAccountId:
          description: The account ID by which this merchant is known to the POS provider.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2LiasettingsCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiasettingsCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#liasettingsCustomBatchResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2LiasettingsCustomBatchResponseEntry:
      properties:
        batchId:
          description: The ID of the request entry to which this entry responds.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Errors"
          description: A list of errors defined if, and only if, the request failed.
        gmbAccounts:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2GmbAccounts"
          description: The the list of accessible GMB accounts.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liasettingsCustomBatchResponseEntry`"'
          type: string
        liaSettings:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiaSettings"
          description: The retrieved or updated Lia settings.
        posDataProviders:
          description: The list of POS data providers.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosDataProviders"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2LiasettingsGetAccessibleGmbAccountsResponse:
      properties:
        accountId:
          description: The ID of the Merchant Center account.
          format: uint64
          type: string
        gmbAccounts:
          description: A list of GMB accounts which are available to the merchant.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2GmbAccountsGmbAccount"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#liasettingsGetAccessibleGmbAccountsResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2LiasettingsListPosDataProvidersResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#liasettingsListPosDataProvidersResponse".'
          type: string
        posDataProviders:
          description: The list of POS data providers for each eligible country
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosDataProviders"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2LiasettingsListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#liasettingsListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of LIA settings.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LiaSettings"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2LiasettingsRequestGmbAccessResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#liasettingsRequestGmbAccessResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2LiasettingsRequestInventoryVerificationResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#liasettingsRequestInventoryVerificationResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2LiasettingsSetInventoryVerificationContactResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#liasettingsSetInventoryVerificationContactResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2LiasettingsSetPosDataProviderResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#liasettingsSetPosDataProviderResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2LocationIdSet:
      properties:
        locationIds:
          description: A non-empty list of location IDs. They must all be of the same location type (e.g., state).
          items:
            type: string
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2LoyaltyPoints:
      properties:
        name:
          description: Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters.
          type: string
        pointsValue:
          description: The retailer's loyalty points in absolute value.
          format: int64
          type: string
        ratio:
          description: The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0.
          format: double
          type: number
      type: object
    AdsShoppingContentapiProtoFrontendV2MerchantOrderReturn:
      description: Order return. Production access (all methods) requires the order manager role. Sandbox access does not.
      properties:
        creationDate:
          description: The date of creation of the return, in ISO 8601 format.
          type: string
        merchantOrderId:
          description: Merchant defined order ID.
          type: string
        orderId:
          description: Google order ID.
          type: string
        orderReturnId:
          description: Order return ID generated by Google.
          type: string
        returnItems:
          description: Items of the return.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2MerchantOrderReturnItem"
          type: array
        returnShipments:
          description: Shipments of the return.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ReturnShipment"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2MerchantOrderReturnItem:
      properties:
        customerReturnReason:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2CustomerReturnReason"
          description: The reason that the customer chooses to return an item.
        itemId:
          description: Product level item ID. If the returned items are of the same product, they will have the same ID.
          type: string
        merchantReturnReason:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2RefundReason"
          description: The reason that merchant chooses to accept a return item.
        product:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderLineItemProduct"
          description: Product data from the time of the order placement.
        returnShipmentIds:
          description: IDs of the return shipments that this return item belongs to.
          items:
            type: string
          type: array
        state:
          description: 'State of the item. Acceptable values are: - "`canceled`" - "`new`" - "`received`" - "`refunded`" - "`rejected`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2MinimumOrderValueTable:
      properties:
        storeCodeSetWithMovs:
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2MinimumOrderValueTableStoreCodeSetWithMov"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2MinimumOrderValueTableStoreCodeSetWithMov:
      description: A list of store code sets sharing the same minimum order value. At least two sets are required and the last one must be empty, which signifies 'MOV for all other stores'. Each store code can only appear once across all the sets. All prices within a service must have the same currency.
      properties:
        storeCodes:
          description: A list of unique store codes or empty for the catch all.
          items:
            type: string
          type: array
        value:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: The minimum order value for the given stores.
      type: object
    AdsShoppingContentapiProtoFrontendV2Order:
      description: Order. Production access (all methods) requires the order manager role. Sandbox access does not.
      properties:
        acknowledged:
          description: Whether the order was acknowledged.
          type: boolean
        channelType:
          description: 'Deprecated. Acceptable values are: - "`googleExpress`" - "`purchasesOnGoogle`" '
          type: string
        customer:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderCustomer"
          description: The details of the customer who placed the order.
        deliveryDetails:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderDeliveryDetails"
          description: Delivery details for shipments of type `delivery`.
        id:
          description: The REST ID of the order. Globally unique.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#order`"'
          type: string
        lineItems:
          description: Line items that are ordered.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderLineItem"
          type: array
        merchantId:
          format: uint64
          type: string
        merchantOrderId:
          description: Merchant-provided ID of the order.
          type: string
        netAmount:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: The net amount for the order. For example, if an order was originally for a grand total of $100 and a refund was issued for $20, the net amount will be $80.
        paymentMethod:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderPaymentMethod"
          description: The details of the payment method.
        paymentStatus:
          description: 'The status of the payment. Acceptable values are: - "`paymentCaptured`" - "`paymentRejected`" - "`paymentSecured`" - "`pendingAuthorization`" '
          type: string
        pickupDetails:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderPickupDetails"
          description: Pickup details for shipments of type `pickup`.
        placedDate:
          description: The date when the order was placed, in ISO 8601 format.
          type: string
        promotions:
          description: "The details of the merchant provided promotions applied to the order. To determine which promotions apply to which products, check the `Promotions[].Benefits[].OfferIds` field against the `LineItems[].Product.OfferId` field for each promotion. If a promotion is applied to more than 1 `offerId`, divide the discount value by the number of affected offers to determine how much discount to apply to each `offerId`. Examples: 1. To calculate the line item level discount for a single specific item: For each promotion, subtract the `Promotions[].Benefits[].Discount.value` amount from the `LineItems[].Price.value`. 2. To calculate the line item level discount for multiple quantity of a specific item: For each promotion, divide the `Promotions[].Benefits[].Discount.value` by the quantity of products and substract it from `LineItems[].Product.Price.value` for each quantity item. Only 1 promotion can be applied to an offerId in a given order. To refund an item which had a promotion applied to it, make sure to refund the amount after first subtracting the promotion discount from the item price. More details about the program are here."
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderLegacyPromotion"
          type: array
        refunds:
          description: Refunds for the order.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderRefund"
          type: array
        shipments:
          description: Shipments of the order.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderShipment"
          type: array
        shippingCost:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: The total cost of shipping for all items.
        shippingCostTax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: The tax for the total shipping cost.
        shippingOption:
          description: 'Deprecated. Shipping details are provided with line items instead. Acceptable values are: - "`economy`" - "`expedited`" - "`oneDay`" - "`sameDay`" - "`standard`" - "`twoDay`" '
          type: string
        status:
          description: 'The status of the order. Acceptable values are: - "`canceled`" - "`delivered`" - "`inProgress`" - "`partiallyDelivered`" - "`partiallyReturned`" - "`partiallyShipped`" - "`pendingShipment`" - "`returned`" - "`shipped`" '
          type: string
        taxCollector:
          description: 'The party responsible for collecting and remitting taxes. Acceptable values are: - "`marketplaceFacilitator`" - "`merchant`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderAddress:
      properties:
        country:
          description: CLDR country code (e.g. "US").
          type: string
        fullAddress:
          description: "Strings representing the lines of the printed label for mailing the order, for example: John Smith 1600 Amphitheatre Parkway Mountain View, CA, 94043 United States "
          items:
            type: string
          type: array
        isPostOfficeBox:
          description: Whether the address is a post office box.
          type: boolean
        locality:
          description: City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs).
          type: string
        postalCode:
          description: Postal Code or ZIP (e.g. "94043").
          type: string
        recipientName:
          description: Name of the recipient.
          type: string
        region:
          description: Top-level administrative subdivision of the country. For example, a state like California ("CA") or a province like Quebec ("QC").
          type: string
        streetAddress:
          description: Street-level part of the address.
          items:
            type: string
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderCancellation:
      properties:
        actor:
          description: 'The actor that created the cancellation. Acceptable values are: - "`customer`" - "`googleBot`" - "`googleCustomerService`" - "`googlePayments`" - "`googleSabre`" - "`merchant`" '
          type: string
        creationDate:
          description: Date on which the cancellation has been created, in ISO 8601 format.
          type: string
        quantity:
          description: The quantity that was canceled.
          format: uint32
          type: integer
        reason:
          description: 'The reason for the cancellation. Orders that are canceled with a noInventory reason will lead to the removal of the product from Shopping Actions until you make an update to that product. This will not affect your Shopping ads. Acceptable values are: - "`autoPostInternal`" - "`autoPostInvalidBillingAddress`" - "`autoPostNoInventory`" - "`autoPostPriceError`" - "`autoPostUndeliverableShippingAddress`" - "`couponAbuse`" - "`customerCanceled`" - "`customerInitiatedCancel`" - "`customerSupportRequested`" - "`failToPushOrderGoogleError`" - "`failToPushOrderMerchantError`" - "`failToPushOrderMerchantFulfillmentError`" - "`failToPushOrderToMerchant`" - "`failToPushOrderToMerchantOutOfStock`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`merchantDidNotShipOnTime`" - "`noInventory`" - "`orderTimeout`" - "`other`" - "`paymentAbuse`" - "`paymentDeclined`" - "`priceError`" - "`returnRefundAbuse`" - "`shippingPriceError`" - "`taxError`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderCustomer:
      properties:
        email:
          description: Deprecated.
          type: string
        explicitMarketingPreference:
          description: Deprecated. Please use marketingRightsInfo instead.
          type: boolean
        fullName:
          description: Full name of the customer.
          type: string
        invoiceReceivingEmail:
          description: Email address for the merchant to send value-added tax or invoice documentation of the order. Only the last document sent is made available to the customer. For more information, see About automated VAT invoicing for Shopping Actions.
          type: string
        marketingRightsInfo:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderCustomerMarketingRightsInfo"
          description: Customer's marketing preferences. Contains the marketing opt-in information that is current at the time that the merchant call. User preference selections can change from one order to the next so preferences must be checked with every order.
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderCustomerMarketingRightsInfo:
      properties:
        explicitMarketingPreference:
          description: 'Last known customer selection regarding marketing preferences. In certain cases this selection might not be known, so this field would be empty. If a customer selected `granted` in their most recent order, they can be subscribed to marketing emails. Customers who have chosen `denied` must not be subscribed, or must be unsubscribed if already opted-in. Acceptable values are: - "`denied`" - "`granted`" '
          type: string
        lastUpdatedTimestamp:
          description: Timestamp when last time marketing preference was updated. Could be empty, if user wasn't offered a selection yet.
          type: string
        marketingEmailAddress:
          description: Email address that can be used for marketing purposes. The field may be empty even if `explicitMarketingPreference` is 'granted'. This happens when retrieving an old order from the customer who deleted their account.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderDeliveryDetails:
      properties:
        address:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderAddress"
          description: The delivery address
        phoneNumber:
          description: The phone number of the person receiving the delivery.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderLegacyPromotion:
      properties:
        benefits:
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderLegacyPromotionBenefit"
          type: array
        effectiveDates:
          description: The date and time frame when the promotion is active and ready for validation review. Note that the promotion live time may be delayed for a few hours due to the validation review. Start date and end date are separated by a forward slash (/). The start date is specified by the format (YYYY-MM-DD), followed by the letter ?T?, the time of the day when the sale starts (in Greenwich Mean Time, GMT), followed by an expression of the time zone for the sale. The end date is in the same format.
          type: string
        genericRedemptionCode:
          description: Optional. The text code that corresponds to the promotion when applied on the retailer?s website.
          type: string
        id:
          description: The unique ID of the promotion.
          type: string
        longTitle:
          description: The full title of the promotion.
          type: string
        productApplicability:
          description: 'Whether the promotion is applicable to all products or only specific products. Acceptable values are: - "`allProducts`" - "`specificProducts`" '
          type: string
        redemptionChannel:
          description: 'Indicates that the promotion is valid online. Acceptable values are: - "`online`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderLegacyPromotionBenefit:
      properties:
        discount:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: The discount in the order price when the promotion is applied.
        offerIds:
          description: The OfferId(s) that were purchased in this order and map to this specific benefit of the promotion.
          items:
            type: string
          type: array
        subType:
          description: 'Further describes the benefit of the promotion. Note that we will expand on this enumeration as we support new promotion sub-types. Acceptable values are: - "`buyMGetMoneyOff`" - "`buyMGetNMoneyOff`" - "`buyMGetNPercentOff`" - "`buyMGetPercentOff`" - "`freeGift`" - "`freeGiftWithItemId`" - "`freeGiftWithValue`" - "`freeOvernightShipping`" - "`freeShipping`" - "`freeTwoDayShipping`" - "`moneyOff`" - "`percentageOff`" - "`rewardPoints`" - "`salePrice`" '
          type: string
        taxImpact:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: The impact on tax when the promotion is applied.
        type:
          description: 'Describes whether the promotion applies to products (e.g. 20% off) or to shipping (e.g. Free Shipping). Acceptable values are: - "`product`" - "`shipping`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderLineItem:
      properties:
        annotations:
          description: Annotations that are attached to the line item.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderMerchantProvidedAnnotation"
          type: array
        cancellations:
          description: Cancellations of the line item.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderCancellation"
          type: array
        id:
          description: The ID of the line item.
          type: string
        price:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Total price for the line item. For example, if two items for $10 are purchased, the total price will be $20.
        product:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderLineItemProduct"
          description: Product data as seen by customer from the time of the order placement. Note that certain attributes values (e.g. title or gtin) might be reformatted and no longer match values submitted via product feed.
        quantityCanceled:
          description: Number of items canceled.
          format: uint32
          type: integer
        quantityDelivered:
          description: Number of items delivered.
          format: uint32
          type: integer
        quantityOrdered:
          description: Number of items ordered.
          format: uint32
          type: integer
        quantityPending:
          description: Number of items pending.
          format: uint32
          type: integer
        quantityReadyForPickup:
          description: Number of items ready for pickup.
          format: uint32
          type: integer
        quantityReturned:
          description: Number of items returned.
          format: uint32
          type: integer
        quantityShipped:
          description: Number of items shipped.
          format: uint32
          type: integer
        returnInfo:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderLineItemReturnInfo"
          description: Details of the return policy for the line item.
        returns:
          description: Returns of the line item.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderReturn"
          type: array
        shippingDetails:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderLineItemShippingDetails"
          description: Details of the requested shipping for the line item.
        tax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Total tax amount for the line item. For example, if two items are purchased, and each have a cost tax of $2, the total tax amount will be $4.
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderLineItemProduct:
      properties:
        brand:
          description: Brand of the item.
          type: string
        channel:
          description: "The item's channel (online or local). Acceptable values are: - \"`local`\" - \"`online`\" "
          type: string
        condition:
          description: 'Condition or state of the item. Acceptable values are: - "`new`" - "`refurbished`" - "`used`" '
          type: string
        contentLanguage:
          description: The two-letter ISO 639-1 language code for the item.
          type: string
        fees:
          description: Associated fees at order creation time.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderLineItemProductFee"
          type: array
        gtin:
          description: Global Trade Item Number (GTIN) of the item.
          type: string
        id:
          description: The REST ID of the product.
          type: string
        imageLink:
          description: URL of an image of the item.
          type: string
        itemGroupId:
          description: Shared identifier for all variants of the same product.
          type: string
        mpn:
          description: Manufacturer Part Number (MPN) of the item.
          type: string
        offerId:
          description: An identifier of the item.
          type: string
        price:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Price of the item.
        shownImage:
          description: URL to the cached image shown to the user when order was placed.
          type: string
        targetCountry:
          description: The CLDR territory // code of the target country of the product.
          type: string
        title:
          description: The title of the product.
          type: string
        variantAttributes:
          description: Variant attributes for the item. These are dimensions of the product, such as color, gender, material, pattern, and size. You can find a comprehensive list of variant attributes here.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderLineItemProductVariantAttribute"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderLineItemProductFee:
      properties:
        amount:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Amount of the fee.
        name:
          description: Name of the fee.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderLineItemProductVariantAttribute:
      properties:
        dimension:
          description: The dimension of the variant.
          type: string
        value:
          description: The value for the dimension.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderLineItemReturnInfo:
      properties:
        daysToReturn:
          description: Required. How many days later the item can be returned.
          format: int32
          type: integer
        isReturnable:
          description: Required. Whether the item is returnable.
          type: boolean
        policyUrl:
          description: Required. URL of the item return policy.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderLineItemShippingDetails:
      properties:
        deliverByDate:
          description: Required. The delivery by date, in ISO 8601 format.
          type: string
        method:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderLineItemShippingDetailsMethod"
          description: Required. Details of the shipping method.
        shipByDate:
          description: Required. The ship by date, in ISO 8601 format.
          type: string
        type:
          description: 'Type of shipment. Indicates whether `deliveryDetails` or `pickupDetails` is applicable for this shipment. Acceptable values are: - "`delivery`" - "`pickup`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderLineItemShippingDetailsMethod:
      properties:
        carrier:
          description: The carrier for the shipping. Optional. See `shipments[].carrier` for a list of acceptable values.
          type: string
        maxDaysInTransit:
          description: Required. Maximum transit time.
          format: uint32
          type: integer
        methodName:
          description: Required. The name of the shipping method.
          type: string
        minDaysInTransit:
          description: Required. Minimum transit time.
          format: uint32
          type: integer
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderMerchantProvidedAnnotation:
      properties:
        key:
          description: Key for additional merchant provided (as key-value pairs) annotation about the line item.
          type: string
        value:
          description: Value for additional merchant provided (as key-value pairs) annotation about the line item.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderPaymentMethod:
      properties:
        billingAddress:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderAddress"
          description: The billing address.
        expirationMonth:
          description: The card expiration month (January = 1, February = 2 etc.).
          format: int32
          type: integer
        expirationYear:
          description: The card expiration year (4-digit, e.g. 2015).
          format: int32
          type: integer
        lastFourDigits:
          description: The last four digits of the card number.
          type: string
        phoneNumber:
          description: The billing phone number.
          type: string
        type:
          description: 'The type of instrument. Acceptable values are: - "`AMEX`" - "`DISCOVER`" - "`JCB`" - "`MASTERCARD`" - "`UNIONPAY`" - "`VISA`" - "``" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderPickupDetails:
      properties:
        address:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderAddress"
          description: Address of the pickup location where the shipment should be sent. Note that `recipientName` in the address is the name of the business at the pickup location.
        collectors:
          description: Collectors authorized to pick up shipment from the pickup location.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderPickupDetailsCollector"
          type: array
        locationId:
          description: ID of the pickup location.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderPickupDetailsCollector:
      properties:
        name:
          description: Name of the person picking up the shipment.
          type: string
        phoneNumber:
          description: Phone number of the person picking up the shipment.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderRefund:
      properties:
        actor:
          description: 'The actor that created the refund. Acceptable values are: - "`customer`" - "`googleBot`" - "`googleCustomerService`" - "`googlePayments`" - "`googleSabre`" - "`merchant`" '
          type: string
        amount:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: The amount that is refunded.
        creationDate:
          description: Date on which the item has been created, in ISO 8601 format.
          type: string
        reason:
          description: 'The reason for the refund. Acceptable values are: - "`adjustment`" - "`autoPostInternal`" - "`autoPostInvalidBillingAddress`" - "`autoPostNoInventory`" - "`autoPostPriceError`" - "`autoPostUndeliverableShippingAddress`" - "`couponAbuse`" - "`courtesyAdjustment`" - "`customerCanceled`" - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`customerSupportRequested`" - "`deliveredLateByCarrier`" - "`deliveredTooLate`" - "`expiredItem`" - "`failToPushOrderGoogleError`" - "`failToPushOrderMerchantError`" - "`failToPushOrderMerchantFulfillmentError`" - "`failToPushOrderToMerchant`" - "`failToPushOrderToMerchantOutOfStock`" - "`feeAdjustment`" - "`invalidCoupon`" - "`lateShipmentCredit`" - "`malformedShippingAddress`" - "`merchantDidNotShipOnTime`" - "`noInventory`" - "`orderTimeout`" - "`other`" - "`paymentAbuse`" - "`paymentDeclined`" - "`priceAdjustment`" - "`priceError`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`promoReallocation`" - "`qualityNotAsExpected`" - "`returnRefundAbuse`" - "`shippingCostAdjustment`" - "`shippingPriceError`" - "`taxAdjustment`" - "`taxError`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderReportDisbursement:
      description: Order disbursement. All methods require the payment analyst role.
      properties:
        disbursementAmount:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: The disbursement amount.
        disbursementCreationDate:
          description: The disbursement date, in ISO 8601 format.
          type: string
        disbursementDate:
          description: The date the disbursement was initiated, in ISO 8601 format.
          type: string
        disbursementId:
          description: The ID of the disbursement.
          type: string
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderReportTransaction:
      properties:
        disbursementAmount:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: The disbursement amount.
        disbursementCreationDate:
          description: The date the disbursement was created, in ISO 8601 format.
          type: string
        disbursementDate:
          description: The date the disbursement was initiated, in ISO 8601 format.
          type: string
        disbursementId:
          description: The ID of the disbursement.
          type: string
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        merchantOrderId:
          description: Merchant-provided ID of the order.
          type: string
        orderId:
          description: The ID of the order.
          type: string
        productAmount:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Amount"
          description: Total amount for the items.
        productAmountWithRemittedTax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductAmount"
          description: Total amount with remitted tax for the items.
        transactionDate:
          description: The date of the transaction, in ISO 8601 format.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderReturn:
      properties:
        actor:
          description: 'The actor that created the refund. Acceptable values are: - "`customer`" - "`googleBot`" - "`googleCustomerService`" - "`googlePayments`" - "`googleSabre`" - "`merchant`" '
          type: string
        creationDate:
          description: Date on which the item has been created, in ISO 8601 format.
          type: string
        quantity:
          description: Quantity that is returned.
          format: uint32
          type: integer
        reason:
          description: 'The reason for the return. Acceptable values are: - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`deliveredTooLate`" - "`expiredItem`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`other`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`qualityNotAsExpected`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderShipment:
      properties:
        carrier:
          description: 'The carrier handling the shipment. For supported carriers, Google includes the carrier name and tracking URL in emails to customers. For select supported carriers, Google also automatically updates the shipment status based on the provided shipment ID. *Note:* You can also use unsupported carriers, but emails to customers will not include the carrier name or tracking URL, and there will be no automatic order status updates. Supported carriers for US are: - "`ups`" (United Parcel Service) *automatic status updates* - "`usps`" (United States Postal Service) *automatic status updates* - "`fedex`" (FedEx) *automatic status updates * - "`dhl`" (DHL eCommerce) *automatic status updates* (US only) - "`ontrac`" (OnTrac) *automatic status updates * - "`dhl express`" (DHL Express) - "`deliv`" (Deliv) - "`dynamex`" (TForce) - "`lasership`" (LaserShip) - "`mpx`" (Military Parcel Xpress) - "`uds`" (United Delivery Service) - "`efw`" (Estes Forwarding Worldwide) - "`jd logistics`" (JD Logistics) - "`yunexpress`" (YunExpress) - "`china post`" (China Post) - "`china ems`" (China Post Express Mail Service) - "`singapore post`" (Singapore Post) - "`pos malaysia`" (Pos Malaysia) - "`postnl`" (PostNL) - "`ptt`" (PTT Turkish Post) - "`eub`" (ePacket) - "`chukou1`" (Chukou1 Logistics) - "`bestex`" (Best Express) - "`canada post`" (Canada Post) - "`purolator`" (Purolator) - "`canpar`" (Canpar) - "`india post`" (India Post) - "`blue dart`" (Blue Dart) - "`delhivery`" (Delhivery) - "`dtdc`" (DTDC) - "`tpc india`" (TPC India) Supported carriers for FR are: - "`la poste`" (La Poste) *automatic status updates * - "`colissimo`" (Colissimo by La Poste) *automatic status updates* - "`ups`" (United Parcel Service) *automatic status updates * - "`chronopost`" (Chronopost by La Poste) - "`gls`" (General Logistics Systems France) - "`dpd`" (DPD Group by GeoPost) - "`bpost`" (Belgian Post Group) - "`colis prive`" (Colis Privé) - "`boxtal`" (Boxtal) - "`geodis`" (GEODIS) - "`tnt`" (TNT) - "`db schenker`" (DB Schenker) - "`aramex`" (Aramex) '
          type: string
        creationDate:
          description: Date on which the shipment has been created, in ISO 8601 format.
          type: string
        deliveryDate:
          description: Date on which the shipment has been delivered, in ISO 8601 format. Present only if `status` is `delivered`
          type: string
        id:
          description: The ID of the shipment.
          type: string
        lineItems:
          description: The line items that are shipped.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderShipmentLineItemShipment"
          type: array
        scheduledDeliveryDetails:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderShipmentScheduledDeliveryDetails"
          description: Delivery details of the shipment if scheduling is needed.
        status:
          description: 'The status of the shipment. Acceptable values are: - "`delivered`" - "`readyForPickup`" - "`shipped`" - "`undeliverable`" '
          type: string
        trackingId:
          description: The tracking ID for the shipment.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderShipmentLineItemShipment:
      properties:
        lineItemId:
          description: The ID of the line item that is shipped. This value is assigned by Google when an order is created. Either lineItemId or productId is required.
          type: string
        productId:
          description: The ID of the product to ship. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity that is shipped.
          format: uint32
          type: integer
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderShipmentScheduledDeliveryDetails:
      properties:
        carrierPhoneNumber:
          description: The phone number of the carrier fulfilling the delivery. The phone number is formatted as the international notation in ITU-T Recommendation E.123 (e.g., "+41 44 668 1800").
          type: string
        scheduledDate:
          description: The date a shipment is scheduled for delivery, in ISO 8601 format.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderinvoicesCreateChargeInvoiceRequest:
      properties:
        invoiceId:
          description: "[required] The ID of the invoice."
          type: string
        invoiceSummary:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2InvoiceSummary"
          description: "[required] Invoice summary."
        lineItemInvoices:
          description: "[required] Invoice details per line item."
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ShipmentInvoiceLineItemInvoice"
          type: array
        operationId:
          description: "[required] The ID of the operation, unique across all operations for a given order."
          type: string
        shipmentGroupId:
          description: "[required] ID of the shipment group. It is assigned by the merchant in the `shipLineItems` method and is used to group multiple line items that have the same kind of shipping charges."
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderinvoicesCreateChargeInvoiceResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#orderinvoicesCreateChargeInvoiceResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderinvoicesCreateRefundInvoiceRequest:
      properties:
        invoiceId:
          description: "[required] The ID of the invoice."
          type: string
        operationId:
          description: "[required] The ID of the operation, unique across all operations for a given order."
          type: string
        refundOnlyOption:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption"
          description: Option to create a refund-only invoice. Exactly one of `refundOnlyOption` or `returnOption` must be provided.
        returnOption:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption"
          description: Option to create an invoice for a refund and mark all items within the invoice as returned. Exactly one of `refundOnlyOption` or `returnOption` must be provided.
        shipmentInvoices:
          description: Invoice details for different shipment groups.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ShipmentInvoice"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderinvoicesCreateRefundInvoiceResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#orderinvoicesCreateRefundInvoiceResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption:
      properties:
        description:
          description: Optional description of the refund reason.
          type: string
        reason:
          description: '[required] Reason for the refund. Acceptable values are: - "`adjustment`" - "`autoPostInternal`" - "`autoPostInvalidBillingAddress`" - "`autoPostNoInventory`" - "`autoPostPriceError`" - "`autoPostUndeliverableShippingAddress`" - "`couponAbuse`" - "`courtesyAdjustment`" - "`customerCanceled`" - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`customerSupportRequested`" - "`deliveredLateByCarrier`" - "`deliveredTooLate`" - "`expiredItem`" - "`failToPushOrderGoogleError`" - "`failToPushOrderMerchantError`" - "`failToPushOrderMerchantFulfillmentError`" - "`failToPushOrderToMerchant`" - "`failToPushOrderToMerchantOutOfStock`" - "`feeAdjustment`" - "`invalidCoupon`" - "`lateShipmentCredit`" - "`malformedShippingAddress`" - "`merchantDidNotShipOnTime`" - "`noInventory`" - "`orderTimeout`" - "`other`" - "`paymentAbuse`" - "`paymentDeclined`" - "`priceAdjustment`" - "`priceError`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`promoReallocation`" - "`qualityNotAsExpected`" - "`returnRefundAbuse`" - "`shippingCostAdjustment`" - "`shippingPriceError`" - "`taxAdjustment`" - "`taxError`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption:
      properties:
        description:
          description: Optional description of the return reason.
          type: string
        reason:
          description: '[required] Reason for the return. Acceptable values are: - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`deliveredTooLate`" - "`expiredItem`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`other`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`qualityNotAsExpected`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderreportsListDisbursementsResponse:
      properties:
        disbursements:
          description: The list of disbursements.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderReportDisbursement"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#orderreportsListDisbursementsResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of disbursements.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderreportsListTransactionsResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#orderreportsListTransactionsResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of transactions.
          type: string
        transactions:
          description: The list of transactions.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderReportTransaction"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2OrderreturnsListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#orderreturnsListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of returns.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2MerchantOrderReturn"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersAcknowledgeRequest:
      properties:
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersAcknowledgeResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersAcknowledgeResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersAdvanceTestOrderResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersAdvanceTestOrderResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCancelLineItemRequest:
      properties:
        amount:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Deprecated. Please use amountPretax and amountTax instead.
        amountPretax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Amount to refund for the cancelation. Optional. If not set, Google will calculate the default based on the price and tax of the items involved. The amount must not be larger than the net amount left on the order.
        amountTax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Tax amount that corresponds to cancellation amount in amountPretax. Optional, but if filled, then amountPretax must be set. Calculated automatically if not provided.
        lineItemId:
          description: The ID of the line item to cancel. Either lineItemId or productId is required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        productId:
          description: The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to cancel.
          format: uint32
          type: integer
        reason:
          description: 'The reason for the cancellation. Acceptable values are: - "`customerInitiatedCancel`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`noInventory`" - "`other`" - "`priceError`" - "`shippingPriceError`" - "`taxError`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCancelLineItemResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersCancelLineItemResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCancelRequest:
      properties:
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        reason:
          description: 'The reason for the cancellation. Acceptable values are: - "`customerInitiatedCancel`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`noInventory`" - "`other`" - "`priceError`" - "`shippingPriceError`" - "`taxError`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCancelResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersCancelResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCancelTestOrderByCustomerRequest:
      properties:
        reason:
          description: 'The reason for the cancellation. Acceptable values are: - "`changedMind`" - "`orderedWrongItem`" - "`other`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCancelTestOrderByCustomerResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersCancelTestOrderByCustomerResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCreateTestOrderRequest:
      properties:
        country:
          description: 'The CLDR territory code of the country of the test order to create. Affects the currency and addresses of orders created via `template_name`, or the addresses of orders created via `test_order`. Acceptable values are: - "`US`" - "`FR`" Defaults to `US`.'
          type: string
        templateName:
          description: 'The test order template to use. Specify as an alternative to `testOrder` as a shortcut for retrieving a template and then creating an order using that template. Acceptable values are: - "`template1`" - "`template1a`" - "`template1b`" - "`template2`" - "`template3`" '
          type: string
        testOrder:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2TestOrder"
          description: The test order to create.
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCreateTestOrderResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersCreateTestOrderResponse".'
          type: string
        orderId:
          description: The ID of the newly created test order.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCreateTestReturnRequest:
      properties:
        items:
          description: Returned items.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryCreateTestReturnReturnItem"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCreateTestReturnResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersCreateTestReturnResponse".'
          type: string
        returnId:
          description: The ID of the newly created test order return.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntry"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntry:
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        cancel:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryCancel"
          description: Required for `cancel` method.
        cancelLineItem:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryCancelLineItem"
          description: Required for `cancelLineItem` method.
        inStoreRefundLineItem:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryInStoreRefundLineItem"
          description: Required for `inStoreReturnLineItem` method.
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        merchantOrderId:
          description: The merchant order ID. Required for `updateMerchantOrderId` and `getByMerchantOrderId` methods.
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`acknowledge`" - "`cancel`" - "`cancelLineItem`" - "`get`" - "`getByMerchantOrderId`" - "`inStoreRefundLineItem`" - "`refund`" - "`rejectReturnLineItem`" - "`returnLineItem`" - "`returnRefundLineItem`" - "`setLineItemMetadata`" - "`shipLineItems`" - "`updateLineItemShippingDetails`" - "`updateMerchantOrderId`" - "`updateShipment`" '
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order. Required for all methods beside `get` and `getByMerchantOrderId`.
          type: string
        orderId:
          description: The ID of the order. Required for all methods beside `getByMerchantOrderId`.
          type: string
        refund:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryRefund"
          description: Required for `refund` method.
        rejectReturnLineItem:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryRejectReturnLineItem"
          description: Required for `rejectReturnLineItem` method.
        returnLineItem:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryReturnLineItem"
          description: Required for `returnLineItem` method.
        returnRefundLineItem:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryReturnRefundLineItem"
          description: Required for `returnRefundLineItem` method.
        setLineItemMetadata:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntrySetLineItemMetadata"
          description: Required for `setLineItemMetadata` method.
        shipLineItems:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryShipLineItems"
          description: Required for `shipLineItems` method.
        updateLineItemShippingDetails:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails"
          description: Required for `updateLineItemShippingDate` method.
        updateShipment:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryUpdateShipment"
          description: Required for `updateShipment` method.
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryCancel:
      properties:
        reason:
          description: 'The reason for the cancellation. Acceptable values are: - "`customerInitiatedCancel`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`noInventory`" - "`other`" - "`priceError`" - "`shippingPriceError`" - "`taxError`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryCancelLineItem:
      properties:
        amount:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Deprecated. Please use amountPretax and amountTax instead.
        amountPretax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Amount to refund for the cancelation. Optional. If not set, Google will calculate the default based on the price and tax of the items involved. The amount must not be larger than the net amount left on the order.
        amountTax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Tax amount that corresponds to cancellation amount in amountPretax. Optional, but if filled, then amountPretax must be set. Calculated automatically if not provided.
        lineItemId:
          description: The ID of the line item to cancel. Either lineItemId or productId is required.
          type: string
        productId:
          description: The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to cancel.
          format: uint32
          type: integer
        reason:
          description: 'The reason for the cancellation. Acceptable values are: - "`customerInitiatedCancel`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`noInventory`" - "`other`" - "`priceError`" - "`shippingPriceError`" - "`taxError`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryCreateTestReturnReturnItem:
      properties:
        lineItemId:
          description: The ID of the line item to return.
          type: string
        quantity:
          description: Quantity that is returned.
          format: uint32
          type: integer
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryInStoreRefundLineItem:
      properties:
        amountPretax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: The amount that is refunded. Required.
        amountTax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Tax amount that correspond to refund amount in amountPretax. Required.
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is required.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund.
          format: uint32
          type: integer
        reason:
          description: 'The reason for the return. Acceptable values are: - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`deliveredTooLate`" - "`expiredItem`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`other`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`qualityNotAsExpected`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryRefund:
      properties:
        amount:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Deprecated. Please use amountPretax and amountTax instead.
        amountPretax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: The amount that is refunded. Either amount or amountPretax should be filled.
        amountTax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Tax amount that corresponds to refund amount in amountPretax. Optional, but if filled, amountPretax must be set. Calculated automatically if not provided.
        reason:
          description: 'The reason for the refund. Acceptable values are: - "`adjustment`" - "`courtesyAdjustment`" - "`customerCanceled`" - "`customerDiscretionaryReturn`" - "`deliveredLateByCarrier`" - "`feeAdjustment`" - "`lateShipmentCredit`" - "`noInventory`" - "`other`" - "`priceError`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`shippingCostAdjustment`" - "`taxAdjustment`" - "`undeliverableShippingAddress`" - "`wrongProductShipped`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryRejectReturnLineItem:
      properties:
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is required.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund.
          format: uint32
          type: integer
        reason:
          description: 'The reason for the return. Acceptable values are: - "`damagedOrUsed`" - "`missingComponent`" - "`notEligible`" - "`other`" - "`outOfReturnWindow`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryReturnLineItem:
      properties:
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is required.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return.
          format: uint32
          type: integer
        reason:
          description: 'The reason for the return. Acceptable values are: - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`deliveredTooLate`" - "`expiredItem`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`other`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`qualityNotAsExpected`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryReturnRefundLineItem:
      properties:
        amountPretax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: The amount that is refunded. If omitted, refundless return is assumed (same as calling returnLineItem method).
        amountTax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Tax amount that corresponds to refund amount in amountPretax. Optional, but if filled, then amountPretax must be set. Calculated automatically if not provided.
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is required.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund.
          format: uint32
          type: integer
        reason:
          description: 'The reason for the return. Acceptable values are: - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`deliveredTooLate`" - "`expiredItem`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`other`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`qualityNotAsExpected`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntrySetLineItemMetadata:
      properties:
        annotations:
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderMerchantProvidedAnnotation"
          type: array
        lineItemId:
          description: The ID of the line item to set metadata. Either lineItemId or productId is required.
          type: string
        productId:
          description: The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryShipLineItems:
      properties:
        carrier:
          description: Deprecated. Please use shipmentInfo instead. The carrier handling the shipment. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values.
          type: string
        lineItems:
          description: Line items to ship.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderShipmentLineItemShipment"
          type: array
        shipmentGroupId:
          description: ID of the shipment group. Required for orders that use the orderinvoices service.
          type: string
        shipmentId:
          description: Deprecated. Please use shipmentInfo instead. The ID of the shipment.
          type: string
        shipmentInfos:
          description: Shipment information. This field is repeated because a single line item can be shipped in several packages (and have several tracking IDs).
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo"
          type: array
        trackingId:
          description: Deprecated. Please use shipmentInfo instead. The tracking ID for the shipment.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo:
      properties:
        carrier:
          description: The carrier handling the shipment. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values.
          type: string
        shipmentId:
          description: Required. The ID of the shipment. This is assigned by the merchant and is unique to each shipment.
          type: string
        trackingId:
          description: The tracking ID for the shipment.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails:
      properties:
        deliverByDate:
          description: Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past.
          type: string
        lineItemId:
          description: The ID of the line item to set metadata. Either lineItemId or productId is required.
          type: string
        productId:
          description: The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        shipByDate:
          description: Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryUpdateShipment:
      properties:
        carrier:
          description: The carrier handling the shipment. Not updated if missing. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values.
          type: string
        deliveryDate:
          description: Date on which the shipment has been delivered, in ISO 8601 format. Optional and can be provided only if `status` is `delivered`.
          type: string
        shipmentId:
          description: The ID of the shipment.
          type: string
        status:
          description: 'New status for the shipment. Not updated if missing. Acceptable values are: - "`delivered`" - "`undeliverable`" - "`readyForPickup`" '
          type: string
        trackingId:
          description: The tracking ID for the shipment. Not updated if missing.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersCustomBatchResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchResponseEntry:
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Errors"
          description: A list of errors defined if and only if the request failed.
        executionStatus:
          description: 'The status of the execution. Only defined if 1. the request was successful; and 2. the method is not `get`, `getByMerchantOrderId`, or one of the test methods. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersCustomBatchResponseEntry`"'
          type: string
        order:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Order"
          description: The retrieved order. Only defined if the method is `get` and if the request was successful.
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersGetByMerchantOrderIdResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersGetByMerchantOrderIdResponse".'
          type: string
        order:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Order"
          description: The requested order.
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersGetTestOrderTemplateResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersGetTestOrderTemplateResponse".'
          type: string
        template:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2TestOrder"
          description: The requested test order template.
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersInStoreRefundLineItemRequest:
      properties:
        amountPretax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: The amount that is refunded. Required.
        amountTax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Tax amount that correspond to refund amount in amountPretax. Required.
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund.
          format: uint32
          type: integer
        reason:
          description: 'The reason for the return. Acceptable values are: - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`deliveredTooLate`" - "`expiredItem`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`other`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`qualityNotAsExpected`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersInStoreRefundLineItemResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersInStoreRefundLineItemResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of orders.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Order"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersRefundRequest:
      properties:
        amount:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Deprecated. Please use amountPretax and amountTax instead.
        amountPretax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: The amount that is refunded. Either amount or amountPretax should be filled.
        amountTax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Tax amount that corresponds to refund amount in amountPretax. Optional, but if filled, amountPretax must be set. Calculated automatically if not provided.
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        reason:
          description: 'The reason for the refund. Acceptable values are: - "`adjustment`" - "`courtesyAdjustment`" - "`customerCanceled`" - "`customerDiscretionaryReturn`" - "`deliveredLateByCarrier`" - "`feeAdjustment`" - "`lateShipmentCredit`" - "`noInventory`" - "`other`" - "`priceError`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`shippingCostAdjustment`" - "`taxAdjustment`" - "`undeliverableShippingAddress`" - "`wrongProductShipped`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersRefundResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersRefundResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersRejectReturnLineItemRequest:
      properties:
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund.
          format: uint32
          type: integer
        reason:
          description: 'The reason for the return. Acceptable values are: - "`damagedOrUsed`" - "`missingComponent`" - "`notEligible`" - "`other`" - "`outOfReturnWindow`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersRejectReturnLineItemResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersRejectReturnLineItemResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersReturnLineItemRequest:
      properties:
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return.
          format: uint32
          type: integer
        reason:
          description: 'The reason for the return. Acceptable values are: - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`deliveredTooLate`" - "`expiredItem`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`other`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`qualityNotAsExpected`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersReturnLineItemResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersReturnLineItemResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersReturnRefundLineItemRequest:
      properties:
        amountPretax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: The amount that is refunded. If omitted, refundless return is assumed (same as calling returnLineItem method).
        amountTax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Tax amount that corresponds to refund amount in amountPretax. Optional, but if filled, then amountPretax must be set. Calculated automatically if not provided.
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund.
          format: uint32
          type: integer
        reason:
          description: 'The reason for the return. Acceptable values are: - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`deliveredTooLate`" - "`expiredItem`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`other`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`qualityNotAsExpected`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersReturnRefundLineItemResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersReturnRefundLineItemResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersSetLineItemMetadataRequest:
      properties:
        annotations:
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderMerchantProvidedAnnotation"
          type: array
        lineItemId:
          description: The ID of the line item to set metadata. Either lineItemId or productId is required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        productId:
          description: The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersSetLineItemMetadataResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersSetLineItemMetadataResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersShipLineItemsRequest:
      properties:
        carrier:
          description: Deprecated. Please use shipmentInfo instead. The carrier handling the shipment. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values.
          type: string
        lineItems:
          description: Line items to ship.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderShipmentLineItemShipment"
          type: array
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        shipmentGroupId:
          description: ID of the shipment group. Required for orders that use the orderinvoices service.
          type: string
        shipmentId:
          description: Deprecated. Please use shipmentInfo instead. The ID of the shipment.
          type: string
        shipmentInfos:
          description: Shipment information. This field is repeated because a single line item can be shipped in several packages (and have several tracking IDs).
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo"
          type: array
        trackingId:
          description: Deprecated. Please use shipmentInfo instead. The tracking ID for the shipment.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersShipLineItemsResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersShipLineItemsResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersUpdateLineItemShippingDetailsRequest:
      properties:
        deliverByDate:
          description: Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past.
          type: string
        lineItemId:
          description: The ID of the line item to set metadata. Either lineItemId or productId is required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        productId:
          description: The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        shipByDate:
          description: Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersUpdateLineItemShippingDetailsResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersUpdateLineItemShippingDetailsResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersUpdateMerchantOrderIdRequest:
      properties:
        merchantOrderId:
          description: The merchant order id to be assigned to the order. Must be unique per merchant.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersUpdateMerchantOrderIdResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersUpdateMerchantOrderIdResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersUpdateShipmentRequest:
      properties:
        carrier:
          description: The carrier handling the shipment. Not updated if missing. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values.
          type: string
        deliveryDate:
          description: Date on which the shipment has been delivered, in ISO 8601 format. Optional and can be provided only if `status` is `delivered`.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        shipmentId:
          description: The ID of the shipment.
          type: string
        status:
          description: 'New status for the shipment. Not updated if missing. Acceptable values are: - "`delivered`" - "`undeliverable`" - "`readyForPickup`" '
          type: string
        trackingId:
          description: The tracking ID for the shipment. Not updated if missing.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2OrdersUpdateShipmentResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersUpdateShipmentResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2PickupCarrierService:
      properties:
        carrierName:
          description: The name of the pickup carrier (e.g., `"UPS"`). Required.
          type: string
        serviceName:
          description: The name of the pickup service (e.g., `"Access point"`). Required.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2PickupServicesPickupService:
      properties:
        carrierName:
          description: The name of the carrier (e.g., `"UPS"`). Always present.
          type: string
        country:
          description: The CLDR country code of the carrier (e.g., "US"). Always present.
          type: string
        serviceName:
          description: The name of the pickup service (e.g., `"Access point"`). Always present.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2PosCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosCustomBatchRequestEntry"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2PosCustomBatchRequestEntry:
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        inventory:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosInventory"
          description: The inventory to submit. Set this only if the method is `inventory`.
        merchantId:
          description: The ID of the POS data provider.
          format: uint64
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`delete`" - "`get`" - "`insert`" - "`inventory`" - "`sale`" '
          type: string
        sale:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosSale"
          description: The sale information to submit. Set this only if the method is `sale`.
        store:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosStore"
          description: The store information to submit. Set this only if the method is `insert`.
        storeCode:
          description: The store code. Set this only if the method is `delete` or `get`.
          type: string
        targetMerchantId:
          description: The ID of the account for which to get/submit data.
          format: uint64
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2PosCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#posCustomBatchResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2PosCustomBatchResponseEntry:
      properties:
        batchId:
          description: The ID of the request entry to which this entry responds.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Errors"
          description: A list of errors defined if, and only if, the request failed.
        inventory:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosInventory"
          description: The updated inventory information.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#posCustomBatchResponseEntry`"'
          type: string
        sale:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosSale"
          description: The updated sale information.
        store:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosStore"
          description: The retrieved or updated store information.
      type: object
    AdsShoppingContentapiProtoFrontendV2PosDataProviders:
      properties:
        country:
          description: Country code.
          type: string
        posDataProviders:
          description: A list of POS data providers.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosDataProvidersPosDataProvider"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2PosDataProvidersPosDataProvider:
      properties:
        displayName:
          description: The display name of Pos data Provider.
          type: string
        fullName:
          description: The full name of this POS data Provider.
          type: string
        providerId:
          description: The ID of the account.
          format: uint64
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2PosInventory:
      description: The absolute quantity of an item available at the given store.
      properties:
        contentLanguage:
          description: Required. The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number.
          type: string
        itemId:
          description: Required. A unique identifier for the item.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#posInventory`"'
          type: string
        price:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Required. The current price of the item.
        quantity:
          description: Required. The available quantity of the item.
          format: int64
          type: string
        storeCode:
          description: Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business.
          type: string
        targetCountry:
          description: Required. The CLDR territory code for the item.
          type: string
        timestamp:
          description: Required. The inventory timestamp, in ISO 8601 format.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2PosInventoryRequest:
      properties:
        contentLanguage:
          description: Required. The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number.
          type: string
        itemId:
          description: Required. A unique identifier for the item.
          type: string
        price:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Required. The current price of the item.
        quantity:
          description: Required. The available quantity of the item.
          format: int64
          type: string
        storeCode:
          description: Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business.
          type: string
        targetCountry:
          description: Required. The CLDR territory code for the item.
          type: string
        timestamp:
          description: Required. The inventory timestamp, in ISO 8601 format.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2PosInventoryResponse:
      properties:
        contentLanguage:
          description: Required. The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number.
          type: string
        itemId:
          description: Required. A unique identifier for the item.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#posInventoryResponse".'
          type: string
        price:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Required. The current price of the item.
        quantity:
          description: Required. The available quantity of the item.
          format: int64
          type: string
        storeCode:
          description: Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business.
          type: string
        targetCountry:
          description: Required. The CLDR territory code for the item.
          type: string
        timestamp:
          description: Required. The inventory timestamp, in ISO 8601 format.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2PosListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#posListResponse".'
          type: string
        resources:
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PosStore"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2PosSale:
      description: The change of the available quantity of an item at the given store.
      properties:
        contentLanguage:
          description: Required. The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number.
          type: string
        itemId:
          description: Required. A unique identifier for the item.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#posSale`"'
          type: string
        price:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Required. The price of the item.
        quantity:
          description: Required. The relative change of the available quantity. Negative for items returned.
          format: int64
          type: string
        saleId:
          description: A unique ID to group items from the same sale event.
          type: string
        storeCode:
          description: Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business.
          type: string
        targetCountry:
          description: Required. The CLDR territory code for the item.
          type: string
        timestamp:
          description: Required. The inventory timestamp, in ISO 8601 format.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2PosSaleRequest:
      properties:
        contentLanguage:
          description: Required. The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number.
          type: string
        itemId:
          description: Required. A unique identifier for the item.
          type: string
        price:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Required. The price of the item.
        quantity:
          description: Required. The relative change of the available quantity. Negative for items returned.
          format: int64
          type: string
        saleId:
          description: A unique ID to group items from the same sale event.
          type: string
        storeCode:
          description: Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business.
          type: string
        targetCountry:
          description: Required. The CLDR territory code for the item.
          type: string
        timestamp:
          description: Required. The inventory timestamp, in ISO 8601 format.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2PosSaleResponse:
      properties:
        contentLanguage:
          description: Required. The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number.
          type: string
        itemId:
          description: Required. A unique identifier for the item.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#posSaleResponse".'
          type: string
        price:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Required. The price of the item.
        quantity:
          description: Required. The relative change of the available quantity. Negative for items returned.
          format: int64
          type: string
        saleId:
          description: A unique ID to group items from the same sale event.
          type: string
        storeCode:
          description: Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business.
          type: string
        targetCountry:
          description: Required. The CLDR territory code for the item.
          type: string
        timestamp:
          description: Required. The inventory timestamp, in ISO 8601 format.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2PosStore:
      description: Store resource.
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#posStore`"'
          type: string
        storeAddress:
          description: Required. The street address of the store.
          type: string
        storeCode:
          description: Required. A store identifier that is unique for the given merchant.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2PostalCodeGroup:
      properties:
        country:
          description: The CLDR territory code of the country the postal code group applies to. Required.
          type: string
        name:
          description: The name of the postal code group, referred to in headers. Required.
          type: string
        postalCodeRanges:
          description: A range of postal codes. Required.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PostalCodeRange"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2PostalCodeRange:
      properties:
        postalCodeRangeBegin:
          description: 'A postal code or a pattern of the form `prefix*` denoting the inclusive lower bound of the range defining the area. Examples values: `"94108"`, `"9410*"`, `"9*"`. Required.'
          type: string
        postalCodeRangeEnd:
          description: "A postal code or a pattern of the form `prefix*` denoting the inclusive upper bound of the range defining the area. It must have the same length as `postalCodeRangeBegin`: if `postalCodeRangeBegin` is a postal code then `postalCodeRangeEnd` must be a postal code too; if `postalCodeRangeBegin` is a pattern then `postalCodeRangeEnd` must be a pattern with the same prefix length. Optional: if not set, then the area is defined as being all the postal codes matching `postalCodeRangeBegin`."
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2Price:
      properties:
        currency:
          description: The currency of the price.
          type: string
        value:
          description: The price represented as a number.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2Product:
      description: " Required product attributes are primarily defined by the products data specification. See the Products Data Specification Help Center article for information. Some attributes are country-specific, so make sure you select the appropriate country in the drop-down selector at the top of the page. Product data. After inserting, updating, or deleting a product, it may take several minutes before changes take effect."
      properties:
        additionalImageLinks:
          description: Additional URLs of images of the item.
          items:
            type: string
          type: array
        additionalProductTypes:
          description: Additional categories of the item (formatted as in products data specification).
          items:
            type: string
          type: array
        adult:
          description: Set to true if the item is targeted towards adults.
          type: boolean
        adwordsGrouping:
          description: Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise.
          type: string
        adwordsLabels:
          description: Similar to adwords_grouping, but only works on CPC.
          items:
            type: string
          type: array
        adwordsRedirect:
          description: Allows advertisers to override the item URL when the product is shown within the context of Product Ads.
          type: string
        ageGroup:
          description: 'Target age group of the item. Acceptable values are: - "`adult`" - "`infant`" - "`kids`" - "`newborn`" - "`toddler`" - "`youngAdult`" '
          type: string
        aspects:
          description: Deprecated. Do not use.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductAspect"
          type: array
        availability:
          description: 'Availability status of the item. Acceptable values are: - "`in stock`" - "`out of stock`" - "`preorder`" '
          type: string
        availabilityDate:
          description: The day a pre-ordered product becomes available for delivery, in ISO 8601 format.
          type: string
        brand:
          description: Brand of the item.
          type: string
        canonicalLink:
          description: URL for the canonical version of your item's landing page.
          type: string
        channel:
          description: "Required. The item's channel (online or local). Acceptable values are: - \"`local`\" - \"`online`\" "
          type: string
        color:
          description: Color of the item.
          type: string
        condition:
          description: 'Condition or state of the item. Acceptable values are: - "`local`" - "`online`" '
          type: string
        contentLanguage:
          description: Required. The two-letter ISO 639-1 language code for the item.
          type: string
        costOfGoodsSold:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Cost of goods sold. Used for gross profit reporting.
        customAttributes:
          description: 'A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form (e.g., `{ "name": "size type", "value": "regular" }`). This is useful for submitting attributes not explicitly exposed by the API, such as additional attributes used for Shopping Actions.'
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2CustomAttribute"
          type: array
        customGroups:
          description: A list of custom (merchant-provided) custom attribute groups.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2CustomGroup"
          type: array
        customLabel0:
          description: Custom label 0 for custom grouping of items in a Shopping campaign.
          type: string
        customLabel1:
          description: Custom label 1 for custom grouping of items in a Shopping campaign.
          type: string
        customLabel2:
          description: Custom label 2 for custom grouping of items in a Shopping campaign.
          type: string
        customLabel3:
          description: Custom label 3 for custom grouping of items in a Shopping campaign.
          type: string
        customLabel4:
          description: Custom label 4 for custom grouping of items in a Shopping campaign.
          type: string
        description:
          description: Description of the item.
          type: string
        destinations:
          description: Specifies the intended destinations for the product.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductDestination"
          type: array
        displayAdsId:
          description: An identifier for an item for dynamic remarketing campaigns.
          type: string
        displayAdsLink:
          description: URL directly to your item's landing page for dynamic remarketing campaigns.
          type: string
        displayAdsSimilarIds:
          description: Advertiser-specified recommendations.
          items:
            type: string
          type: array
        displayAdsTitle:
          description: Title of an item for dynamic remarketing campaigns.
          type: string
        displayAdsValue:
          description: Offer margin for dynamic remarketing campaigns.
          format: double
          type: number
        energyEfficiencyClass:
          description: 'The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - "`A`" - "`A+`" - "`A++`" - "`A+++`" - "`B`" - "`C`" - "`D`" - "`E`" - "`F`" - "`G`" '
          type: string
        expirationDate:
          description: Date on which the item should expire, as specified upon insertion, in ISO 8601 format. The actual expiration date in Google Shopping is exposed in `productstatuses` as `googleExpirationDate` and might be earlier if `expirationDate` is too far in the future.
          type: string
        gender:
          description: 'Target gender of the item. Acceptable values are: - "`female`" - "`male`" - "`unisex`" '
          type: string
        googleProductCategory:
          description: Google's category of the item (see Google product taxonomy).
          type: string
        gtin:
          description: Global Trade Item Number (GTIN) of the item.
          type: string
        id:
          description: "The REST ID of the product. Content API methods that operate on products take this as their `productId` parameter. The REST ID for a product is of the form channel:contentLanguage: targetCountry: offerId."
          type: string
        identifierExists:
          description: False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada.
          type: boolean
        imageLink:
          description: URL of an image of the item.
          type: string
        installment:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Installment"
          description: Number and amount of installments to pay for an item.
        isBundle:
          description: Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price.
          type: boolean
        itemGroupId:
          description: Shared identifier for all variants of the same product.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#product`"'
          type: string
        link:
          description: URL directly linking to your item's page on your website.
          type: string
        loyaltyPoints:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2LoyaltyPoints"
          description: Loyalty points that users receive after purchasing the item. Japan only.
        material:
          description: The material of which the item is made.
          type: string
        maxEnergyEfficiencyClass:
          description: 'The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - "`A`" - "`A+`" - "`A++`" - "`A+++`" - "`B`" - "`C`" - "`D`" - "`E`" - "`F`" - "`G`" '
          type: string
        maxHandlingTime:
          description: Maximal product handling time (in business days).
          format: int64
          type: string
        minEnergyEfficiencyClass:
          description: 'The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - "`A`" - "`A+`" - "`A++`" - "`A+++`" - "`B`" - "`C`" - "`D`" - "`E`" - "`F`" - "`G`" '
          type: string
        minHandlingTime:
          description: Minimal product handling time (in business days).
          format: int64
          type: string
        mobileLink:
          description: URL for the mobile-optimized version of your item's landing page.
          type: string
        mpn:
          description: Manufacturer Part Number (MPN) of the item.
          type: string
        multipack:
          description: The number of identical products in a merchant-defined multipack.
          format: int64
          type: string
        offerId:
          description: Required. A unique identifier for the item. Leading and trailing whitespaces are stripped and multiple whitespaces are replaced by a single whitespace upon submission. Only valid unicode characters are accepted. See the products feed specification for details. *Note:* Content API methods that operate on products take the REST ID of the product, *not* this identifier.
          type: string
        onlineOnly:
          description: Deprecated.
          type: boolean
        pattern:
          description: The item's pattern (e.g. polka dots).
          type: string
        price:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Price of the item.
        productType:
          description: Your category of the item (formatted as in products data specification).
          type: string
        promotionIds:
          description: The unique ID of a promotion.
          items:
            type: string
          type: array
        salePrice:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Advertised sale price of the item.
        salePriceEffectiveDate:
          description: Date range during which the item is on sale (see products data specification ).
          type: string
        sellOnGoogleQuantity:
          description: The quantity of the product that is available for selling on Google. Supported only for online products.
          format: int64
          type: string
        shipping:
          description: Shipping rules.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductShipping"
          type: array
        shippingHeight:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductShippingDimension"
          description: Height of the item for shipping.
        shippingLabel:
          description: The shipping label of the product, used to group product in account-level shipping rules.
          type: string
        shippingLength:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductShippingDimension"
          description: Length of the item for shipping.
        shippingWeight:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductShippingWeight"
          description: Weight of the item for shipping.
        shippingWidth:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductShippingDimension"
          description: Width of the item for shipping.
        sizeSystem:
          description: 'System in which the size is specified. Recommended for apparel items. Acceptable values are: - "`AU`" - "`BR`" - "`CN`" - "`DE`" - "`EU`" - "`FR`" - "`IT`" - "`JP`" - "`MEX`" - "`UK`" - "`US`" '
          type: string
        sizeType:
          description: 'The cut of the item. Recommended for apparel items. Acceptable values are: - "`big and tall`" - "`maternity`" - "`oversize`" - "`petite`" - "`plus`" - "`regular`" '
          type: string
        sizes:
          description: Size of the item. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same `itemGroupId` value (see size definition).
          items:
            type: string
          type: array
        source:
          description: 'The source of the offer, i.e., how the offer was created. Acceptable values are: - "`api`" - "`crawl`" - "`feed`" '
          type: string
        targetCountry:
          description: Required. The CLDR territory code for the item.
          type: string
        taxes:
          description: Tax information.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductTax"
          type: array
        title:
          description: Title of the item.
          type: string
        unitPricingBaseMeasure:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductUnitPricingBaseMeasure"
          description: The preference of the denominator of the unit price.
        unitPricingMeasure:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductUnitPricingMeasure"
          description: The measure and dimension of an item.
        validatedDestinations:
          description: Deprecated. The read-only list of intended destinations which passed validation.
          items:
            type: string
          type: array
        warnings:
          description: Read-only warnings.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Error"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductAmount:
      properties:
        priceAmount:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: The pre-tax or post-tax price depending on the location of the order.
        remittedTaxAmount:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Remitted tax value.
        taxAmount:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Tax value.
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductAspect:
      properties:
        aspectName:
          description: Deprecated.
          type: string
        destinationName:
          description: Deprecated.
          type: string
        intention:
          description: Deprecated.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductDestination:
      properties:
        destinationName:
          description: The name of the destination.
          type: string
        intention:
          description: 'Whether the destination is required, excluded or should be validated. Acceptable values are: - "`default`" - "`excluded`" - "`optional`" - "`required`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductShipping:
      properties:
        country:
          description: The CLDR territory code of the country to which an item will ship.
          type: string
        locationGroupName:
          description: The location where the shipping is applicable, represented by a location group name.
          type: string
        locationId:
          description: The numeric ID of a location that the shipping rate applies to as defined in the AdWords API.
          format: int64
          type: string
        postalCode:
          description: The postal code range that the shipping rate applies to, represented by a postal code, a postal code prefix followed by a * wildcard, a range between two postal codes or two postal code prefixes of equal length.
          type: string
        price:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Fixed shipping price, represented as a number.
        region:
          description: The geographic region to which a shipping rate applies.
          type: string
        service:
          description: A free-form description of the service class or delivery speed.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductShippingDimension:
      properties:
        unit:
          description: The unit of value.
          type: string
        value:
          description: The dimension of the product used to calculate the shipping cost of the item.
          format: double
          type: number
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductShippingWeight:
      properties:
        unit:
          description: The unit of value.
          type: string
        value:
          description: The weight of the product used to calculate the shipping cost of the item.
          format: double
          type: number
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductStatus:
      description: The status of a product, i.e., information about a product computed asynchronously.
      properties:
        creationDate:
          description: Date on which the item has been created, in ISO 8601 format.
          type: string
        dataQualityIssues:
          description: DEPRECATED - never populated
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductStatusDataQualityIssue"
          type: array
        destinationStatuses:
          description: The intended destinations for the product.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductStatusDestinationStatus"
          type: array
        googleExpirationDate:
          description: Date on which the item expires in Google Shopping, in ISO 8601 format.
          type: string
        itemLevelIssues:
          description: A list of all issues associated with the product.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductStatusItemLevelIssue"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#productStatus`"'
          type: string
        lastUpdateDate:
          description: Date on which the item has been last updated, in ISO 8601 format.
          type: string
        link:
          description: The link to the product.
          type: string
        product:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Product"
          description: Product data after applying all the join inputs.
        productId:
          description: The ID of the product for which status is reported.
          type: string
        title:
          description: The title of the product.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductStatusDataQualityIssue:
      properties:
        destination:
          type: string
        detail:
          type: string
        fetchStatus:
          type: string
        id:
          type: string
        location:
          type: string
        severity:
          type: string
        timestamp:
          type: string
        valueOnLandingPage:
          type: string
        valueProvided:
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductStatusDestinationStatus:
      properties:
        approvalPending:
          description: Whether the approval status might change due to further processing.
          type: boolean
        approvalStatus:
          description: "The destination's approval status. Acceptable values are: - \"`approved`\" - \"`disapproved`\" "
          type: string
        destination:
          description: The name of the destination
          type: string
        intention:
          description: 'Provided for backward compatibility only. Always set to "required". Acceptable values are: - "`default`" - "`excluded`" - "`optional`" - "`required`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductStatusItemLevelIssue:
      properties:
        attributeName:
          description: The attribute's name, if the issue is caused by a single attribute.
          type: string
        code:
          description: The error code of the issue.
          type: string
        description:
          description: A short issue description in English.
          type: string
        destination:
          description: The destination the issue applies to.
          type: string
        detail:
          description: A detailed issue description in English.
          type: string
        documentation:
          description: The URL of a web page to help with resolving this issue.
          type: string
        resolution:
          description: Whether the issue can be resolved by the merchant.
          type: string
        servability:
          description: How this issue affects serving of the offer.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductTax:
      properties:
        country:
          description: The country within which the item is taxed, specified as a CLDR territory code.
          type: string
        locationId:
          description: The numeric ID of a location that the tax rate applies to as defined in the AdWords API.
          format: int64
          type: string
        postalCode:
          description: "The postal code range that the tax rate applies to, represented by a ZIP code, a ZIP code prefix using * wildcard, a range between two ZIP codes or two ZIP code prefixes of equal length. Examples: 94114, 94*, 94002-95460, 94*-95*."
          type: string
        rate:
          description: The percentage of tax rate that applies to the item price.
          format: double
          type: number
        region:
          description: The geographic region to which the tax rate applies.
          type: string
        taxShip:
          description: Set to true if tax is charged on shipping.
          type: boolean
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductUnitPricingBaseMeasure:
      properties:
        unit:
          description: The unit of the denominator.
          type: string
        value:
          description: The denominator of the unit price.
          format: int64
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductUnitPricingMeasure:
      properties:
        unit:
          description: The unit of the measure.
          type: string
        value:
          description: The measure of an item.
          format: double
          type: number
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductsCustomBatchRequestEntry"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductsCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch products request.
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`delete`" - "`get`" - "`insert`" '
          type: string
        product:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Product"
          description: The product to insert. Only required if the method is `insert`.
        productId:
          description: The ID of the product to get or delete. Only defined if the method is `get` or `delete`.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductsCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductsCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#productsCustomBatchResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductsCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch products response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Errors"
          description: A list of errors defined if and only if the request failed.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#productsCustomBatchResponseEntry`"'
          type: string
        product:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Product"
          description: The inserted product. Only defined if the method is `insert` and if the request was successful.
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductsListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#productsListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of products.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Product"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductstatusesCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductstatusesCustomBatchRequestEntry"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductstatusesCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch productstatuses request.
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        destinations:
          description: If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.
          items:
            type: string
          type: array
        includeAttributes:
          type: boolean
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`get`" '
          type: string
        productId:
          description: The ID of the product whose status to get.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductstatusesCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductstatusesCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#productstatusesCustomBatchResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductstatusesCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch productstatuses response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Errors"
          description: A list of errors, if the request failed.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#productstatusesCustomBatchResponseEntry`"'
          type: string
        productStatus:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductStatus"
          description: The requested product status. Only defined if the request was successful.
      type: object
    AdsShoppingContentapiProtoFrontendV2ProductstatusesListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#productstatusesListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of products statuses.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ProductStatus"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2Promotion:
      properties:
        promotionAmount:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Amount"
          description: "[required] Amount of the promotion. The values here are the promotion applied to the unit price pretax and to the total of the tax amounts."
        promotionId:
          description: "[required] ID of the promotion."
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2RateGroup:
      properties:
        applicableShippingLabels:
          description: "A list of shipping labels defining the products to which this rate group applies to. This is a disjunction: only one of the labels has to match for the rate group to apply. May only be empty for the last rate group of a service. Required."
          items:
            type: string
          type: array
        carrierRates:
          description: A list of carrier rates that can be referred to by `mainTable` or `singleValue`.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2CarrierRate"
          type: array
        mainTable:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Table"
          description: A table defining the rate group, when `singleValue` is not expressive enough. Can only be set if `singleValue` is not set.
        name:
          description: Name of the rate group. Optional. If set has to be unique within shipping service.
          type: string
        singleValue:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Value"
          description: The value of the rate group (e.g. flat rate $10). Can only be set if `mainTable` and `subtables` are not set.
        subtables:
          description: A list of subtables referred to by `mainTable`. Can only be set if `mainTable` is set.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Table"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2RefundReason:
      properties:
        description:
          description: Description of the reason.
          type: string
        reasonCode:
          description: 'Code of the refund reason. Acceptable values are: - "`adjustment`" - "`autoPostInternal`" - "`autoPostInvalidBillingAddress`" - "`autoPostNoInventory`" - "`autoPostPriceError`" - "`autoPostUndeliverableShippingAddress`" - "`couponAbuse`" - "`courtesyAdjustment`" - "`customerCanceled`" - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`customerSupportRequested`" - "`deliveredLateByCarrier`" - "`deliveredTooLate`" - "`expiredItem`" - "`failToPushOrderGoogleError`" - "`failToPushOrderMerchantError`" - "`failToPushOrderMerchantFulfillmentError`" - "`failToPushOrderToMerchant`" - "`failToPushOrderToMerchantOutOfStock`" - "`feeAdjustment`" - "`invalidCoupon`" - "`lateShipmentCredit`" - "`malformedShippingAddress`" - "`merchantDidNotShipOnTime`" - "`noInventory`" - "`orderTimeout`" - "`other`" - "`paymentAbuse`" - "`paymentDeclined`" - "`priceAdjustment`" - "`priceError`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`promoReallocation`" - "`qualityNotAsExpected`" - "`returnRefundAbuse`" - "`shippingCostAdjustment`" - "`shippingPriceError`" - "`taxAdjustment`" - "`taxError`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2ReturnShipment:
      properties:
        creationDate:
          description: The date of creation of the shipment, in ISO 8601 format.
          type: string
        deliveryDate:
          description: The date of delivery of the shipment, in ISO 8601 format.
          type: string
        returnMethodType:
          description: 'Type of the return method. Acceptable values are: - "`byMail`" - "`contactCustomerSupport`" - "`returnless`" '
          type: string
        shipmentId:
          description: Shipment ID generated by Google.
          type: string
        shipmentTrackingInfos:
          description: Tracking information of the shipment. One return shipment might be handled by several shipping carriers sequentially.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ShipmentTrackingInfo"
          type: array
        shippingDate:
          description: The date of shipping of the shipment, in ISO 8601 format.
          type: string
        state:
          description: 'State of the shipment. Acceptable values are: - "`completed`" - "`new`" - "`shipped`" - "`undeliverable`" - "`pending`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2Row:
      properties:
        cells:
          description: The list of cells that constitute the row. Must have the same length as `columnHeaders` for two-dimensional tables, a length of 1 for one-dimensional tables. Required.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Value"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2Service:
      properties:
        active:
          description: A boolean exposing the active status of the shipping service. Required.
          type: boolean
        currency:
          description: The CLDR code of the currency to which this service applies. Must match that of the prices in rate groups.
          type: string
        deliveryCountry:
          description: The CLDR territory code of the country to which the service applies. Required.
          type: string
        deliveryTime:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2DeliveryTime"
          description: Time spent in various aspects from order to the delivery of the product. Required.
        eligibility:
          description: 'Eligibility for this service. Acceptable values are: - "`All scenarios`" - "`All scenarios except Shopping Actions`" - "`Shopping Actions`" '
          type: string
        minimumOrderValue:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Minimum order value for this service. If set, indicates that customers will have to spend at least this amount. All prices within a service must have the same currency. Cannot be set together with minimum_order_value_table.
        minimumOrderValueTable:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2MinimumOrderValueTable"
          description: Table of per store minimum order values for the pickup fulfillment type. Cannot be set together with minimum_order_value.
        name:
          description: Free-form name of the service. Must be unique within target account. Required.
          type: string
        pickupService:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PickupCarrierService"
          description: The carrier-service pair delivering items to collection points. The list of supported pickup services can be retrieved via the `getSupportedPickupServices` method. Required if and only if the service delivery type is `pickup`.
        rateGroups:
          description: Shipping rate group definitions. Only the last one is allowed to have an empty `applicableShippingLabels`, which means "everything else". The other `applicableShippingLabels` must not overlap.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2RateGroup"
          type: array
        shipmentType:
          description: 'Type of locations this service ships orders to. Acceptable values are: - "`delivery`" - "`pickup`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2ShipmentInvoice:
      properties:
        invoiceSummary:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2InvoiceSummary"
          description: "[required] Invoice summary."
        lineItemInvoices:
          description: "[required] Invoice details per line item."
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ShipmentInvoiceLineItemInvoice"
          type: array
        shipmentGroupId:
          description: "[required] ID of the shipment group. It is assigned by the merchant in the `shipLineItems` method and is used to group multiple line items that have the same kind of shipping charges."
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2ShipmentInvoiceLineItemInvoice:
      properties:
        lineItemId:
          description: ID of the line item. Either lineItemId or productId must be set.
          type: string
        productId:
          description: ID of the product. This is the REST ID used in the products service. Either lineItemId or productId must be set.
          type: string
        shipmentUnitIds:
          description: "[required] The shipment unit ID is assigned by the merchant and defines individual quantities within a line item. The same ID can be assigned to units that are the same while units that differ must be assigned a different ID (for example: free or promotional units)."
          items:
            type: string
          type: array
        unitInvoice:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2UnitInvoice"
          description: "[required] Invoice details for a single unit."
      type: object
    AdsShoppingContentapiProtoFrontendV2ShipmentTrackingInfo:
      properties:
        carrier:
          description: 'The shipping carrier that handles the package. Acceptable values are: - "`boxtal`" - "`bpost`" - "`chronopost`" - "`colisPrive`" - "`colissimo`" - "`cxt`" - "`deliv`" - "`dhl`" - "`dpd`" - "`dynamex`" - "`eCourier`" - "`easypost`" - "`efw`" - "`fedex`" - "`fedexSmartpost`" - "`geodis`" - "`gls`" - "`googleCourier`" - "`gsx`" - "`jdLogistics`" - "`laPoste`" - "`lasership`" - "`manual`" - "`mpx`" - "`onTrac`" - "`other`" - "`tnt`" - "`uds`" - "`ups`" - "`usps`" '
          type: string
        trackingNumber:
          description: The tracking number for the package.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2ShippingSettings:
      description: The merchant account's shipping settings. All methods except getsupportedcarriers and getsupportedholidays require the admin role.
      properties:
        accountId:
          description: The ID of the account to which these account shipping settings belong. Ignored upon update, always present in get request responses.
          format: uint64
          type: string
        postalCodeGroups:
          description: A list of postal code groups that can be referred to in `services`. Optional.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PostalCodeGroup"
          type: array
        services:
          description: The target account's list of services. Optional.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Service"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2ShippingsettingsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ShippingsettingsCustomBatchRequestEntry"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2ShippingsettingsCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch shippingsettings request.
      properties:
        accountId:
          description: The ID of the account for which to get/update account shipping settings.
          format: uint64
          type: string
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`get`" - "`update`" '
          type: string
        shippingSettings:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ShippingSettings"
          description: The account shipping settings to update. Only defined if the method is `update`.
      type: object
    AdsShoppingContentapiProtoFrontendV2ShippingsettingsCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ShippingsettingsCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#shippingsettingsCustomBatchResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2ShippingsettingsCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch shipping settings response.
      properties:
        batchId:
          description: The ID of the request entry to which this entry responds.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Errors"
          description: A list of errors defined if, and only if, the request failed.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#shippingsettingsCustomBatchResponseEntry`"'
          type: string
        shippingSettings:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ShippingSettings"
          description: The retrieved or updated account shipping settings.
      type: object
    AdsShoppingContentapiProtoFrontendV2ShippingsettingsGetSupportedCarriersResponse:
      properties:
        carriers:
          description: A list of supported carriers. May be empty.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2CarriersCarrier"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#shippingsettingsGetSupportedCarriersResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2ShippingsettingsGetSupportedHolidaysResponse:
      properties:
        holidays:
          description: A list of holidays applicable for delivery guarantees. May be empty.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2HolidaysHoliday"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#shippingsettingsGetSupportedHolidaysResponse".'
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2ShippingsettingsGetSupportedPickupServicesResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#shippingsettingsGetSupportedPickupServicesResponse".'
          type: string
        pickupServices:
          description: A list of supported pickup services. May be empty.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2PickupServicesPickupService"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2ShippingsettingsListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#shippingsettingsListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of shipping settings.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2ShippingSettings"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2Table:
      properties:
        columnHeaders:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Headers"
          description: "Headers of the table's columns. Optional: if not set then the table has only one dimension."
        name:
          description: Name of the table. Required for subtables, ignored for the main table.
          type: string
        rowHeaders:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Headers"
          description: Headers of the table's rows. Required.
        rows:
          description: The list of rows that constitute the table. Must have the same length as `rowHeaders`. Required.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Row"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2TestOrder:
      properties:
        customer:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2TestOrderCustomer"
          description: Required. The details of the customer who placed the order.
        enableOrderinvoices:
          description: Whether the orderinvoices service should support this order.
          type: boolean
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#testOrder`"'
          type: string
        lineItems:
          description: Required. Line items that are ordered. At least one line item must be provided.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2TestOrderLineItem"
          type: array
        notificationMode:
          description: Restricted. Do not use.
          type: string
        paymentMethod:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2TestOrderPaymentMethod"
          description: The details of the payment method.
        predefinedDeliveryAddress:
          description: 'Required. Identifier of one of the predefined delivery addresses for the delivery. Acceptable values are: - "`dwight`" - "`jim`" - "`pam`" '
          type: string
        predefinedPickupDetails:
          description: 'Identifier of one of the predefined pickup details. Required for orders containing line items with shipping type `pickup`. Acceptable values are: - "`dwight`" - "`jim`" - "`pam`" '
          type: string
        promotions:
          description: Deprecated. Ignored if provided.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderLegacyPromotion"
          type: array
        shippingCost:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Required. The price of shipping for all items. Shipping tax is automatically calculated for orders where marketplace facilitator tax laws are applicable. Otherwise, tax settings from Merchant Center are applied. Note that shipping is not taxed in certain states.
        shippingCostTax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Deprecated. Ignored if provided.
        shippingOption:
          description: 'Required. The requested shipping option. Acceptable values are: - "`economy`" - "`expedited`" - "`oneDay`" - "`sameDay`" - "`standard`" - "`twoDay`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2TestOrderCustomer:
      properties:
        email:
          description: 'Required. Email address of the customer. Acceptable values are: - "`pog.dwight.schrute@gmail.com`" - "`pog.jim.halpert@gmail.com`" - "`penpog.pam.beesly@gmail.comding`" '
          type: string
        explicitMarketingPreference:
          description: Deprecated. Please use marketingRightsInfo instead.
          type: boolean
        fullName:
          description: Full name of the customer.
          type: string
        marketingRightsInfo:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2TestOrderCustomerMarketingRightsInfo"
          description: Customer's marketing preferences.
      type: object
    AdsShoppingContentapiProtoFrontendV2TestOrderCustomerMarketingRightsInfo:
      properties:
        explicitMarketingPreference:
          description: 'Last know user use selection regards marketing preferences. In certain cases selection might not be known, so this field would be empty. Acceptable values are: - "`denied`" - "`granted`" '
          type: string
        lastUpdatedTimestamp:
          description: Timestamp when last time marketing preference was updated. Could be empty, if user wasn't offered a selection yet.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2TestOrderLineItem:
      properties:
        product:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2TestOrderLineItemProduct"
          description: Required. Product data from the time of the order placement.
        quantityOrdered:
          description: Required. Number of items ordered.
          format: uint32
          type: integer
        returnInfo:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderLineItemReturnInfo"
          description: Required. Details of the return policy for the line item.
        shippingDetails:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderLineItemShippingDetails"
          description: Required. Details of the requested shipping for the line item.
        unitTax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Deprecated. Ignored if provided.
      type: object
    AdsShoppingContentapiProtoFrontendV2TestOrderLineItemProduct:
      properties:
        brand:
          description: Required. Brand of the item.
          type: string
        channel:
          description: 'Deprecated. Acceptable values are: - "`online`" '
          type: string
        condition:
          description: 'Required. Condition or state of the item. Acceptable values are: - "`new`" '
          type: string
        contentLanguage:
          description: 'Required. The two-letter ISO 639-1 language code for the item. Acceptable values are: - "`en`" - "`fr`" '
          type: string
        fees:
          description: Fees for the item. Optional.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderLineItemProductFee"
          type: array
        gtin:
          description: Global Trade Item Number (GTIN) of the item. Optional.
          type: string
        imageLink:
          description: Required. URL of an image of the item.
          type: string
        itemGroupId:
          description: Shared identifier for all variants of the same product. Optional.
          type: string
        mpn:
          description: Manufacturer Part Number (MPN) of the item. Optional.
          type: string
        offerId:
          description: Required. An identifier of the item.
          type: string
        price:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: Required. The price for the product. Tax is automatically calculated for orders where marketplace facilitator tax laws are applicable. Otherwise, tax settings from Merchant Center are applied.
        targetCountry:
          description: Required. The CLDR territory // code of the target country of the product.
          type: string
        title:
          description: Required. The title of the product.
          type: string
        variantAttributes:
          description: Variant attributes for the item. Optional.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2OrderLineItemProductVariantAttribute"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2TestOrderPaymentMethod:
      properties:
        expirationMonth:
          description: The card expiration month (January = 1, February = 2 etc.).
          format: int32
          type: integer
        expirationYear:
          description: The card expiration year (4-digit, e.g. 2015).
          format: int32
          type: integer
        lastFourDigits:
          description: The last four digits of the card number.
          type: string
        predefinedBillingAddress:
          description: 'The billing address. Acceptable values are: - "`dwight`" - "`jim`" - "`pam`" '
          type: string
        type:
          description: 'The type of instrument. Note that real orders might have different values than the four values accepted by `createTestOrder`. Acceptable values are: - "`AMEX`" - "`DISCOVER`" - "`MASTERCARD`" - "`VISA`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2TransitTable:
      properties:
        postalCodeGroupNames:
          description: 'A list of postal group names. The last value can be `"all other locations"`. Example: `["zone 1", "zone 2", "all other locations"]`. The referred postal code groups must match the delivery country of the service.'
          items:
            type: string
          type: array
        rows:
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2TransitTableTransitTimeRow"
          type: array
        transitTimeLabels:
          description: 'A list of transit time labels. The last value can be `"all other labels"`. Example: `["food", "electronics", "all other labels"]`.'
          items:
            type: string
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2TransitTableTransitTimeRow:
      properties:
        values:
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2TransitTableTransitTimeRowTransitTimeValue"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2TransitTableTransitTimeRowTransitTimeValue:
      properties:
        maxTransitTimeInDays:
          description: Must be greater than or equal to `minTransitTimeInDays`.
          format: uint32
          type: integer
        minTransitTimeInDays:
          description: Transit time range (min-max) in business days. 0 means same day delivery, 1 means next day delivery.
          format: uint32
          type: integer
      type: object
    AdsShoppingContentapiProtoFrontendV2UnitInvoice:
      properties:
        additionalCharges:
          description: Additional charges for a unit, e.g. shipping costs.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2UnitInvoiceAdditionalCharge"
          type: array
        promotions:
          description: Deprecated.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Promotion"
          type: array
        unitPricePretax:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: "[required] Price of the unit, before applying taxes."
        unitPriceTaxes:
          description: Tax amounts to apply to the unit price.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2UnitInvoiceTaxLine"
          type: array
      type: object
    AdsShoppingContentapiProtoFrontendV2UnitInvoiceAdditionalCharge:
      properties:
        additionalChargeAmount:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Amount"
          description: "[required] Amount of the additional charge."
        additionalChargePromotions:
          description: Deprecated.
          items:
            $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Promotion"
          type: array
        type:
          description: '[required] Type of the additional charge. Acceptable values are: - "`shipping`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2UnitInvoiceTaxLine:
      properties:
        taxAmount:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: "[required] Tax amount for the tax type."
        taxName:
          description: Optional name of the tax type. This should only be provided if `taxType` is `otherFeeTax`.
          type: string
        taxType:
          description: '[required] Type of the tax. Acceptable values are: - "`otherFee`" - "`otherFeeTax`" - "`sales`" '
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2Value:
      description: The single value of a rate group or the value of a rate group table's cell. Exactly one of `noShipping`, `flatRate`, `pricePercentage`, `carrierRateName`, `subtableName` must be set.
      properties:
        carrierRateName:
          description: The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.
          type: string
        flatRate:
          $ref: "#/components/schemas/AdsShoppingContentapiProtoFrontendV2Price"
          description: A flat rate. Can only be set if all other fields are not set.
        noShipping:
          description: If true, then the product can't ship. Must be true when set, can only be set if all other fields are not set.
          type: boolean
        pricePercentage:
          description: A percentage of the price represented as a number in decimal notation (e.g., `"5.4"`). Can only be set if all other fields are not set.
          type: string
        subtableName:
          description: The name of a subtable. Can only be set in table cells (i.e., not for single values), and only if all other fields are not set.
          type: string
      type: object
    AdsShoppingContentapiProtoFrontendV2Weight:
      properties:
        unit:
          description: 'Required. The weight unit. Acceptable values are: - "`kg`" - "`lb`" '
          type: string
        value:
          description: Required. The weight represented as a number.
          type: string
      type: object
    GoogleProtobufEmpty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
      properties: {}
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/content: Manage your product listings and accounts for Google Shopping
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/content: Manage your product listings and accounts for Google Shopping
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
