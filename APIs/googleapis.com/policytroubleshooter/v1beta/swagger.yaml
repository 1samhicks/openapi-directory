swagger: '2.0'
schemes:
  - https
host: policytroubleshooter.googleapis.com
basePath: /
info:
  contact:
    name: Google
    url: 'https://google.com'
  license:
    name: Creative Commons Attribution 3.0
    url: 'http://creativecommons.org/licenses/by/3.0/'
  termsOfService: 'https://developers.google.com/terms/'
  title: Policy Troubleshooter
  version: v1beta
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.7.31
      format: google
      url: 'https://policytroubleshooter.googleapis.com/$discovery/rest?version=v1beta'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: policytroubleshooter
externalDocs:
  url: 'https://cloud.google.com/iam/'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 implicit authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
    type: oauth2
  Oauth2c:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 accessCode authentication
    flow: accessCode
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
    tokenUrl: 'https://accounts.google.com/o/oauth2/token'
    type: oauth2
parameters:
  $.xgafv:
    description: V1 error format.
    enum:
      - '1'
      - '2'
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    enum:
      - json
      - media
      - proto
    in: query
    name: alt
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
tags:
  - name: iam
paths:
  '/v1beta/iam:troubleshoot':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Perform a check on whether a member is granted a permission
        on a resource and how that grant/deny is determined accordinga
        to the resource's effective IAM policy interpretation.
      operationId: policytroubleshooter.iam.troubleshoot
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - iam
definitions:
  GoogleCloudPolicytroubleshooterV1betaAccessTuple:
    description: |-
      AccessTuple defines information required for checking an access attempt.
      In other words, this is the tuple given to `CheckAccess`.
    properties:
      fullResourceName:
        description: |-
          Required. A full resource name according to
          https://cloud.google.com/apis/design/resource_names. This is the full
          resource name of the resource that access is checked against.
        type: string
      permission:
        description: |-
          Required. The Cloud IAM permission under which defines the kind of access
          being explained. Example: "resourcemanager.projects.get" would explain
          if and why the principal has the resourcemanager.projects.get permission
          on the resource specified in full_resource_name declared in this structure.
          See https://cloud.google.com/iam/docs/testing-permissions
        type: string
      principal:
        description: |-
          Required. The principal on behalf of who the access is explained for.
          The format is one of the principal's email addresses associated with
          its gaia account. It must be an account that can appear as an actor.
          For example groups are not supported. Currently, service accounts, users
          are supported.
        type: string
    type: object
  GoogleCloudPolicytroubleshooterV1betaBindingExplanation:
    description: Binding Explanation.
    properties:
      access:
        description: 'REQUIRED: Access decision for this binding.'
        enum:
          - ACCESS_STATE_UNSPECIFIED
          - GRANTED
          - NOT_GRANTED
          - UNKNOWN_CONDITIONAL
          - UNKNOWN_INFO_DENIED
        type: string
      condition:
        $ref: '#/definitions/GoogleTypeExpr'
        description: |-
          The condition which needs to be satisfied in order for this
          binding to grant the role to the principal.
          See https://cloud.google.com/iam/docs/conditions-base
      memberships:
        additionalProperties:
          $ref: '#/definitions/GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership'
        description: |-
          For each member in the binding, provides information
          whether or not the principal from the request is included
          in the member by which the CheckResult is keyed.
          May indicate that the caller has no access to this information.
          example key: 'group:cloud-iam-assist-eng@google.com'
          example value '{NOT_GRANTED, HIGH}
        type: object
      relevance:
        description: |-
          Bubbles up role_permission level relavance to BindingExplanation object.
          If role permission is NORMAL, then binding relevance is NORMAL.
          If role permission is HIGH, then binding relevance is HIGH.
        enum:
          - HEURISTIC_RELEVANCE_UNSPECIFIED
          - NORMAL
          - HIGH
        type: string
      role:
        description: |-
          The role that this binding grants in the policy.
          for example "roles/compute.serviceAgent"
        type: string
      rolePermission:
        description: Whether the role of this binding contains the checked permission
        enum:
          - ROLE_PERMISSION_UNSPECIFIED
          - ROLE_PERMISSION_INCLUDED
          - ROLE_PERMISSION_NOT_INCLUDED
          - ROLE_PERMISSION_UNKNOWN_INFO_DENIED
        type: string
      rolePermissionRelevance:
        description: The relevance of this permission with respect to the BindingExplanation.
        enum:
          - HEURISTIC_RELEVANCE_UNSPECIFIED
          - NORMAL
          - HIGH
        type: string
    type: object
  GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership:
    description: |-
      Encapsulated membership and the relevance of that membership with respect
      to BindingExplanation.
    properties:
      membership:
        description: Membership status.
        enum:
          - MEMBERSHIP_UNSPECIFIED
          - MEMBERSHIP_INCLUDED
          - MEMBERSHIP_NOT_INCLUDED
          - MEMBERSHIP_UNKNOWN_INFO_DENIED
          - MEMBERSHIP_UNKNOWN_UNSUPPORTED
        type: string
      relevance:
        description: Relevance of this membership with respect to BindingExplanation.
        enum:
          - HEURISTIC_RELEVANCE_UNSPECIFIED
          - NORMAL
          - HIGH
        type: string
    type: object
  GoogleCloudPolicytroubleshooterV1betaExplainedPolicy:
    description: |-
      An explained IAM policy combines the raw policy in the context
      of the resource which it is attached to along with detailed
      evaluation on the evaluation parameters provided through the request.
    properties:
      access:
        description: Access decision for this section of the resource's effective policy.
        enum:
          - ACCESS_STATE_UNSPECIFIED
          - GRANTED
          - NOT_GRANTED
          - UNKNOWN_CONDITIONAL
          - UNKNOWN_INFO_DENIED
        type: string
      bindingExplanations:
        description: |-
          Detailed binding evaluation explanations provide information
          about how each binding contributes to the principal's
          access or the lack thereof.
        items:
          $ref: '#/definitions/GoogleCloudPolicytroubleshooterV1betaBindingExplanation'
        type: array
      fullResourceName:
        description: Resource that this section of the effective policy attaches to.
        type: string
      policy:
        $ref: '#/definitions/GoogleIamV1Policy'
        description: The IAM policy attached to the resource.
      relevance:
        description: Relevance of this Policy.
        enum:
          - HEURISTIC_RELEVANCE_UNSPECIFIED
          - NORMAL
          - HIGH
        type: string
    type: object
  GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest:
    description: TroubleshootIamPolicyRequest is used in TroubleshootIamPolicy
    properties:
      accessTuple:
        $ref: '#/definitions/GoogleCloudPolicytroubleshooterV1betaAccessTuple'
        description: |-
          Collection of attributes for example user, permission, resource that define
          troubleshooter's input.
    type: object
  GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponse:
    description: TroubleshootIamPolicyResponse is used in TroubleshootIamPolicy.
    properties:
      access:
        description: |-
          Reflects whether the probed access was granted, denied
          or ultimately could not be decided from the caller's point of view.
        enum:
          - ACCESS_STATE_UNSPECIFIED
          - GRANTED
          - NOT_GRANTED
          - UNKNOWN_CONDITIONAL
          - UNKNOWN_INFO_DENIED
        type: string
      explainedPolicies:
        description: |-
          List of explained policies.
          Each explanation corresponds to one policy along the ancestry path.
        items:
          $ref: '#/definitions/GoogleCloudPolicytroubleshooterV1betaExplainedPolicy'
        type: array
    type: object
  GoogleIamV1AuditConfig:
    description: |-
      Specifies the audit configuration for a service.
      The configuration determines which permission types are logged, and what
      identities, if any, are exempted from logging.
      An AuditConfig must have one or more AuditLogConfigs.

      If there are AuditConfigs for both `allServices` and a specific service,
      the union of the two AuditConfigs is used for that service: the log_types
      specified in each AuditConfig are enabled, and the exempted_members in each
      AuditLogConfig are exempted.

      Example Policy with multiple AuditConfigs:

          {
            "audit_configs": [
              {
                "service": "allServices"
                "audit_log_configs": [
                  {
                    "log_type": "DATA_READ",
                    "exempted_members": [
                      "user:jose@example.com"
                    ]
                  },
                  {
                    "log_type": "DATA_WRITE",
                  },
                  {
                    "log_type": "ADMIN_READ",
                  }
                ]
              },
              {
                "service": "sampleservice.googleapis.com"
                "audit_log_configs": [
                  {
                    "log_type": "DATA_READ",
                  },
                  {
                    "log_type": "DATA_WRITE",
                    "exempted_members": [
                      "user:aliya@example.com"
                    ]
                  }
                ]
              }
            ]
          }

      For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
      logging. It also exempts jose@example.com from DATA_READ logging, and
      aliya@example.com from DATA_WRITE logging.
    properties:
      auditLogConfigs:
        description: The configuration for logging of each type of permission.
        items:
          $ref: '#/definitions/GoogleIamV1AuditLogConfig'
        type: array
      service:
        description: |-
          Specifies a service that will be enabled for audit logging.
          For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
          `allServices` is a special value that covers all services.
        type: string
    type: object
  GoogleIamV1AuditLogConfig:
    description: |-
      Provides the configuration for logging a type of permissions.
      Example:

          {
            "audit_log_configs": [
              {
                "log_type": "DATA_READ",
                "exempted_members": [
                  "user:jose@example.com"
                ]
              },
              {
                "log_type": "DATA_WRITE",
              }
            ]
          }

      This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
      jose@example.com from DATA_READ logging.
    properties:
      exemptedMembers:
        description: |-
          Specifies the identities that do not cause logging for this type of
          permission.
          Follows the same format of Binding.members.
        items:
          type: string
        type: array
      logType:
        description: The log type that this config enables.
        enum:
          - LOG_TYPE_UNSPECIFIED
          - ADMIN_READ
          - DATA_WRITE
          - DATA_READ
        type: string
    type: object
  GoogleIamV1Binding:
    description: Associates `members` with a `role`.
    properties:
      condition:
        $ref: '#/definitions/GoogleTypeExpr'
        description: |-
          The condition that is associated with this binding.
          NOTE: An unsatisfied condition will not allow user access via current
          binding. Different bindings, including their conditions, are examined
          independently.
      members:
        description: |+
          Specifies the identities requesting access for a Cloud Platform resource.
          `members` can have the following values:

          * `allUsers`: A special identifier that represents anyone who is
             on the internet; with or without a Google account.

          * `allAuthenticatedUsers`: A special identifier that represents anyone
             who is authenticated with a Google account or a service account.

          * `user:{emailid}`: An email address that represents a specific Google
             account. For example, `alice@example.com` .


          * `serviceAccount:{emailid}`: An email address that represents a service
             account. For example, `my-other-app@appspot.gserviceaccount.com`.

          * `group:{emailid}`: An email address that represents a Google group.
             For example, `admins@example.com`.


          * `domain:{domain}`: The G Suite domain (primary) that represents all the
             users of that domain. For example, `google.com` or `example.com`.

        items:
          type: string
        type: array
      role:
        description: |-
          Role that is assigned to `members`.
          For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
        type: string
    type: object
  GoogleIamV1Policy:
    description: |-
      Defines an Identity and Access Management (IAM) policy. It is used to
      specify access control policies for Cloud Platform resources.


      A `Policy` is a collection of `bindings`. A `binding` binds one or more
      `members` to a single `role`. Members can be user accounts, service accounts,
      Google groups, and domains (such as G Suite). A `role` is a named list of
      permissions (defined by IAM or configured by users). A `binding` can
      optionally specify a `condition`, which is a logic expression that further
      constrains the role binding based on attributes about the request and/or
      target resource.

      **JSON Example**

          {
            "bindings": [
              {
                "role": "roles/resourcemanager.organizationAdmin",
                "members": [
                  "user:mike@example.com",
                  "group:admins@example.com",
                  "domain:google.com",
                  "serviceAccount:my-project-id@appspot.gserviceaccount.com"
                ]
              },
              {
                "role": "roles/resourcemanager.organizationViewer",
                "members": ["user:eve@example.com"],
                "condition": {
                  "title": "expirable access",
                  "description": "Does not grant access after Sep 2020",
                  "expression": "request.time <
                  timestamp('2020-10-01T00:00:00.000Z')",
                }
              }
            ]
          }

      **YAML Example**

          bindings:
          - members:
            - user:mike@example.com
            - group:admins@example.com
            - domain:google.com
            - serviceAccount:my-project-id@appspot.gserviceaccount.com
            role: roles/resourcemanager.organizationAdmin
          - members:
            - user:eve@example.com
            role: roles/resourcemanager.organizationViewer
            condition:
              title: expirable access
              description: Does not grant access after Sep 2020
              expression: request.time < timestamp('2020-10-01T00:00:00.000Z')

      For a description of IAM and its features, see the
      [IAM developer's guide](https://cloud.google.com/iam/docs).
    properties:
      auditConfigs:
        description: Specifies cloud audit logging configuration for this policy.
        items:
          $ref: '#/definitions/GoogleIamV1AuditConfig'
        type: array
      bindings:
        description: |-
          Associates a list of `members` to a `role`. Optionally may specify a
          `condition` that determines when binding is in effect.
          `bindings` with no members will result in an error.
        items:
          $ref: '#/definitions/GoogleIamV1Binding'
        type: array
      etag:
        description: |-
          `etag` is used for optimistic concurrency control as a way to help
          prevent simultaneous updates of a policy from overwriting each other.
          It is strongly suggested that systems make use of the `etag` in the
          read-modify-write cycle to perform policy updates in order to avoid race
          conditions: An `etag` is returned in the response to `getIamPolicy`, and
          systems are expected to put that etag in the request to `setIamPolicy` to
          ensure that their change will be applied to the same version of the policy.

          If no `etag` is provided in the call to `setIamPolicy`, then the existing
          policy is overwritten. Due to blind-set semantics of an etag-less policy,
          'setIamPolicy' will not fail even if either of incoming or stored policy
          does not meet the version requirements.
        format: byte
        type: string
      version:
        description: |-
          Specifies the format of the policy.

          Valid values are 0, 1, and 3. Requests specifying an invalid value will be
          rejected.

          Operations affecting conditional bindings must specify version 3. This can
          be either setting a conditional policy, modifying a conditional binding,
          or removing a conditional binding from the stored conditional policy.
          Operations on non-conditional policies may specify any valid value or
          leave the field unset.

          If no etag is provided in the call to `setIamPolicy`, any version
          compliance checks on the incoming and/or stored policy is skipped.
        format: int32
        type: integer
    type: object
  GoogleTypeExpr:
    description: |-
      Represents an expression text. Example:

          title: "User account presence"
          description: "Determines whether the request has a user account"
          expression: "size(request.user) > 0"
    properties:
      description:
        description: |-
          An optional description of the expression. This is a longer text which
          describes the expression, e.g. when hovered over it in a UI.
        type: string
      expression:
        description: |-
          Textual representation of an expression in
          Common Expression Language syntax.

          The application context of the containing message determines which
          well-known feature set of CEL is supported.
        type: string
      location:
        description: |-
          An optional string indicating the location of the expression for error
          reporting, e.g. a file name and a position in the file.
        type: string
      title:
        description: |-
          An optional title for the expression, i.e. a short string describing
          its purpose. This can be used e.g. in UIs which allow to enter the
          expression.
        type: string
    type: object
