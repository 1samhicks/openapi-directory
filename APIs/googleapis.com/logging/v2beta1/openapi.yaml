openapi: 3.0.0
servers:
  - url: https://logging.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Writes log entries and manages your Cloud Logging configuration. The table entries below are presented in alphabetical order, not in order of common use. For explanations of the concepts found in the table entries, read the documentation at https://cloud.google.com/logging/docs.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Logging API
  version: v2beta1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/mermade/oas-kit
        version: 7.0.4
      format: openapi
      url: https://logging.googleapis.com/$discovery/rest?version=v2
      version: "3.0"
  x-providerName: googleapis.com
  x-serviceName: logging
externalDocs:
  url: https://cloud.google.com/logging/docs/
tags:
  - name: entries
  - name: projects
paths:
  /v2beta1/entries:list:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Lists log entries. Use this method to retrieve log entries that originated from a project/folder/organization/billing account. For ways to export log entries, see Exporting Logs (https://cloud.google.com/logging/docs/export).
      operationId: logging.entries.list
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListLogEntriesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLogEntriesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/logging.admin
          Oauth2c:
            - https://www.googleapis.com/auth/logging.admin
        - Oauth2:
            - https://www.googleapis.com/auth/logging.read
          Oauth2c:
            - https://www.googleapis.com/auth/logging.read
      tags:
        - entries
  /v2beta1/entries:write:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Writes log entries to Logging. This API method is the only way to send log entries to Logging. This method is used, directly or indirectly, by the Logging agent (fluentd) and all logging libraries configured to use Logging. A single request may contain log entries for a maximum of 1000 different resources (projects, organizations, billing accounts or folders)
      operationId: logging.entries.write
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WriteLogEntriesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WriteLogEntriesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/logging.admin
          Oauth2c:
            - https://www.googleapis.com/auth/logging.admin
        - Oauth2:
            - https://www.googleapis.com/auth/logging.write
          Oauth2c:
            - https://www.googleapis.com/auth/logging.write
      tags:
        - entries
  "/v2beta1/{parent}/sinks":
    get:
      description: Lists sinks.
      operationId: logging.projects.sinks.list
      parameters:
        - description: 'Required. The parent resource whose sinks are to be listed: "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]" "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]" '
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The maximum number of results to return from this request. Non-positive values are ignored. The presence of nextPageToken in the response indicates that more results might be available.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. If present, then retrieve the next batch of results from the preceding call to this method. pageToken must be the value of nextPageToken from the previous response. The values of other method parameters should be identical to those in the previous call.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSinksResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/logging.admin
          Oauth2c:
            - https://www.googleapis.com/auth/logging.admin
        - Oauth2:
            - https://www.googleapis.com/auth/logging.read
          Oauth2c:
            - https://www.googleapis.com/auth/logging.read
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a sink that exports specified log entries to a destination. The export of newly-ingested log entries begins immediately, unless the sink's writer_identity is not permitted to write to the destination. A sink can export log entries only from the resource owning the sink.
      operationId: logging.projects.sinks.create
      parameters:
        - description: 'Required. The resource in which to create the sink: "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]" "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]" For examples:"projects/my-project" "organizations/123456789"'
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Determines the kind of IAM identity returned as writer_identity in the new sink. If this value is omitted or set to false, and if the sink's parent is a project, then the value returned as writer_identity is the same group or service account used by Cloud Logging before the addition of writer identities to this API. The sink's destination must be in the same project as the sink itself.If this field is set to true, or if the sink is owned by a non-project resource such as an organization, then the value of writer_identity will be a unique service account used only for exports from the new sink. For more information, see writer_identity in LogSink.
          in: query
          name: uniqueWriterIdentity
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogSink"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogSink"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/logging.admin
          Oauth2c:
            - https://www.googleapis.com/auth/logging.admin
      tags:
        - projects
  "/v2beta1/{sinkName}":
    delete:
      description: Deletes a sink. If the sink has a unique writer_identity, then that service account is also deleted.
      operationId: logging.projects.sinks.delete
      parameters:
        - description: 'Required. The full resource name of the sink to delete, including the parent resource and the sink identifier: "projects/[PROJECT_ID]/sinks/[SINK_ID]" "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]" "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]" "folders/[FOLDER_ID]/sinks/[SINK_ID]" For example:"projects/my-project/sinks/my-sink"'
          in: path
          name: sinkName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/logging.admin
          Oauth2c:
            - https://www.googleapis.com/auth/logging.admin
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    BigQueryOptions:
      description: Options that change functionality of a sink exporting data to BigQuery.
      properties:
        usePartitionedTables:
          description: Optional. Whether to use BigQuery's partition tables (https://cloud.google.com/bigquery/docs/partitioned-tables). By default, Cloud Logging creates dated tables based on the log entries' timestamps, e.g. syslog_20170523. With partitioned tables the date suffix is no longer present and special query syntax (https://cloud.google.com/bigquery/docs/querying-partitioned-tables) has to be used instead. In both cases, tables are sharded based on UTC timezone.
          type: boolean
        usesTimestampColumnPartitioning:
          description: Output only. True if new timestamp column based partitioning is in use, false if legacy ingestion-time partitioning is in use.All new sinks will have this field set true and will use timestamp column based partitioning. If use_partitioned_tables is false, this value has no meaning and will be false. Legacy sinks using partitioned tables will have this field set to false.
          readOnly: true
          type: boolean
      type: object
    CopyLogEntriesMetadata:
      description: Metadata for CopyLogEntries long running operations.
      properties:
        cancellationRequested:
          description: Identifies whether the user has requested cancellation of the operation.
          type: boolean
        endTime:
          description: The end time of an operation.
          format: google-datetime
          type: string
        progress:
          description: Estimated progress of the operation (0 - 100%).
          format: int32
          type: integer
        request:
          $ref: "#/components/schemas/CopyLogEntriesRequest"
          description: CopyLogEntries RPC request.
        startTime:
          description: The create time of an operation.
          format: google-datetime
          type: string
        state:
          description: State of an operation.
          enum:
            - OPERATION_STATE_UNSPECIFIED
            - OPERATION_STATE_SCHEDULED
            - OPERATION_STATE_WAITING_FOR_PERMISSIONS
            - OPERATION_STATE_RUNNING
            - OPERATION_STATE_SUCCEEDED
            - OPERATION_STATE_FAILED
            - OPERATION_STATE_CANCELLED
          type: string
        writerIdentity:
          description: 'The IAM identity of a service account that must be granted access to the destination.If the service account is not granted permission to the destination within an hour, the operation will be cancelled.For example: "serviceAccount:foo@bar.com"'
          type: string
      type: object
    CopyLogEntriesRequest:
      description: The parameters to CopyLogEntries.
      properties:
        destination:
          description: Required. Destination to which to copy log entries.
          type: string
        filter:
          description: Optional. A filter specifying which log entries to copy. The filter must be no more than 20k characters. An empty filter matches all log entries.
          type: string
        name:
          description: Required. Log bucket from which to copy log entries.For example:"projects/my-project/locations/global/buckets/my-source-bucket"
          type: string
      type: object
    CopyLogEntriesResponse:
      description: Response type for CopyLogEntries long running operations.
      properties:
        logEntriesCopiedCount:
          description: Number of log entries copied.
          format: int64
          type: string
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for Empty is empty JSON object {}."
      properties: {}
      type: object
    HttpRequest:
      description: A common proto for logging HTTP requests. Only contains semantics defined by the HTTP specification. Product-specific logging information MUST be defined in a separate message.
      properties:
        cacheFillBytes:
          description: The number of HTTP response bytes inserted into cache. Set only when a cache fill was attempted.
          format: int64
          type: string
        cacheHit:
          description: Whether or not an entity was served from cache (with or without validation).
          type: boolean
        cacheLookup:
          description: Whether or not a cache lookup was attempted.
          type: boolean
        cacheValidatedWithOriginServer:
          description: Whether or not the response was validated with the origin server before being served from cache. This field is only meaningful if cache_hit is True.
          type: boolean
        latency:
          description: The request processing latency on the server, from the time the request was received until the response was sent.
          format: google-duration
          type: string
        protocol:
          description: 'Protocol used for the request. Examples: "HTTP/1.1", "HTTP/2", "websocket"'
          type: string
        referer:
          description: The referer URL of the request, as defined in HTTP/1.1 Header Field Definitions (http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).
          type: string
        remoteIp:
          description: 'The IP address (IPv4 or IPv6) of the client that issued the HTTP request. This field can include port information. Examples: "192.168.1.1", "10.0.0.1:80", "FE80::0202:B3FF:FE1E:8329".'
          type: string
        requestMethod:
          description: 'The request method. Examples: "GET", "HEAD", "PUT", "POST".'
          type: string
        requestSize:
          description: The size of the HTTP request message in bytes, including the request headers and the request body.
          format: int64
          type: string
        requestUrl:
          description: 'The scheme (http, https), the host name, the path and the query portion of the URL that was requested. Example: "http://example.com/some/info?color=red".'
          type: string
        responseSize:
          description: The size of the HTTP response message sent back to the client, in bytes, including the response headers and the response body.
          format: int64
          type: string
        serverIp:
          description: 'The IP address (IPv4 or IPv6) of the origin server that the request was sent to. This field can include port information. Examples: "192.168.1.1", "10.0.0.1:80", "FE80::0202:B3FF:FE1E:8329".'
          type: string
        status:
          description: "The response code indicating the status of response. Examples: 200, 404."
          format: int32
          type: integer
        userAgent:
          description: 'The user agent sent by the client. Example: "Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET CLR 1.0.3705)".'
          type: string
      type: object
    ListLogEntriesRequest:
      description: The parameters to ListLogEntries.
      properties:
        filter:
          description: Optional. A filter that chooses which log entries to return. See Advanced Logs Queries (https://cloud.google.com/logging/docs/view/advanced-queries). Only log entries that match the filter are returned. An empty filter matches all log entries in the resources listed in resource_names. Referencing a parent resource that is not listed in resource_names will cause the filter to return no results. The maximum length of the filter is 20000 characters.
          type: string
        orderBy:
          description: Optional. How the results should be sorted. Presently, the only permitted values are "timestamp asc" (default) and "timestamp desc". The first option returns entries in order of increasing values of LogEntry.timestamp (oldest first), and the second option returns entries in order of decreasing timestamps (newest first). Entries with equal timestamps are returned in order of their insert_id values.
          type: string
        pageSize:
          description: Optional. The maximum number of results to return from this request. Default is 50. If the value is negative or exceeds 1000, the request is rejected. The presence of next_page_token in the response indicates that more results might be available.
          format: int32
          type: integer
        pageToken:
          description: Optional. If present, then retrieve the next batch of results from the preceding call to this method. page_token must be the value of next_page_token from the previous response. The values of other method parameters should be identical to those in the previous call.
          type: string
        projectIds:
          description: 'Optional. Deprecated. Use resource_names instead. One or more project identifiers or project numbers from which to retrieve log entries. Example: "my-project-1A".'
          items:
            type: string
          type: array
        resourceNames:
          description: "Required. Names of one or more parent resources from which to retrieve log entries: projects/[PROJECT_ID] organizations/[ORGANIZATION_ID] billingAccounts/[BILLING_ACCOUNT_ID] folders/[FOLDER_ID]May alternatively be one or more views: projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID] organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID] billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID] folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]Projects listed in the project_ids field are added to this list."
          items:
            type: string
          type: array
      type: object
    ListLogEntriesResponse:
      description: Result returned from ListLogEntries.
      properties:
        entries:
          description: A list of log entries. If entries is empty, nextPageToken may still be returned, indicating that more entries may exist. See nextPageToken for more information.
          items:
            $ref: "#/components/schemas/LogEntry"
          type: array
        nextPageToken:
          description: If there might be more results than those appearing in this response, then nextPageToken is included. To get the next set of results, call this method again using the value of nextPageToken as pageToken.If a value for next_page_token appears and the entries field is empty, it means that the search found no log entries so far but it did not have time to search all the possible log entries. Retry the method with this value for page_token to continue the search. Alternatively, consider speeding up the search by changing your filter to specify a single log name or resource type, or to narrow the time range of the search.
          type: string
      type: object
    ListSinksResponse:
      description: Result returned from ListSinks.
      properties:
        nextPageToken:
          description: If there might be more results than appear in this response, then nextPageToken is included. To get the next set of results, call the same method again using the value of nextPageToken as pageToken.
          type: string
        sinks:
          description: A list of sinks.
          items:
            $ref: "#/components/schemas/LogSink"
          type: array
      type: object
    LogEntry:
      description: An individual entry in a log.
      properties:
        httpRequest:
          $ref: "#/components/schemas/HttpRequest"
          description: Optional. Information about the HTTP request associated with this log entry, if applicable.
        insertId:
          description: Optional. A unique identifier for the log entry. If you provide a value, then Logging considers other log entries in the same project, with the same timestamp, and with the same insert_id to be duplicates which are removed in a single query result. However, there are no guarantees of de-duplication in the export of logs.If the insert_id is omitted when writing a log entry, the Logging API assigns its own unique identifier in this field.In queries, the insert_id is also used to order log entries that have the same log_name and timestamp values.
          type: string
        jsonPayload:
          additionalProperties:
            description: Properties of the object.
          description: The log entry payload, represented as a structure that is expressed as a JSON object.
          type: object
        labels:
          additionalProperties:
            type: string
          description: "Optional. A map of key, value pairs that provides additional information about the log entry. The labels can be user-defined or system-defined.User-defined labels are arbitrary key, value pairs that you can use to classify logs.System-defined labels are defined by GCP services for platform logs. They have two components - a service namespace component and the attribute name. For example: compute.googleapis.com/resource_name.Cloud Logging truncates label keys that exceed 512 B and label values that exceed 64 KB upon their associated log entry being written. The truncation is indicated by an ellipsis at the end of the character string."
          type: object
        logName:
          description: 'Required. The resource name of the log to which this log entry belongs: "projects/[PROJECT_ID]/logs/[LOG_ID]" "organizations/[ORGANIZATION_ID]/logs/[LOG_ID]" "billingAccounts/[BILLING_ACCOUNT_ID]/logs/[LOG_ID]" "folders/[FOLDER_ID]/logs/[LOG_ID]" A project number may be used in place of PROJECT_ID. The project number is translated to its corresponding PROJECT_ID internally and the log_name field will contain PROJECT_ID in queries and exports.[LOG_ID] must be URL-encoded within log_name. Example: "organizations/1234567890/logs/cloudresourcemanager.googleapis.com%2Factivity".[LOG_ID] must be less than 512 characters long and can only include the following characters: upper and lower case alphanumeric characters, forward-slash, underscore, hyphen, and period.For backward compatibility, if log_name begins with a forward-slash, such as /projects/..., then the log entry is ingested as usual, but the forward-slash is removed. Listing the log entry will not show the leading slash and filtering for a log name with a leading slash will never return any results.'
          type: string
        metadata:
          $ref: "#/components/schemas/MonitoredResourceMetadata"
          description: Output only. Deprecated. This field is not used by Logging. Any value written to it is cleared.
          readOnly: true
        operation:
          $ref: "#/components/schemas/LogEntryOperation"
          description: Optional. Information about an operation associated with the log entry, if applicable.
        protoPayload:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The log entry payload, represented as a protocol buffer. Some Google Cloud Platform services use this field for their log entry payloads.The following protocol buffer types are supported; user-defined types are not supported:"type.googleapis.com/google.cloud.audit.AuditLog" "type.googleapis.com/google.appengine.logging.v1.RequestLog"
          type: object
        receiveTimestamp:
          description: Output only. The time the log entry was received by Logging.
          format: google-datetime
          readOnly: true
          type: string
        resource:
          $ref: "#/components/schemas/MonitoredResource"
          description: "Required. The monitored resource that produced this log entry.Example: a log entry that reports a database error would be associated with the monitored resource designating the particular database that reported the error."
        severity:
          description: Optional. The severity of the log entry. The default value is LogSeverity.DEFAULT.
          enum:
            - DEFAULT
            - DEBUG
            - INFO
            - NOTICE
            - WARNING
            - ERROR
            - CRITICAL
            - ALERT
            - EMERGENCY
          type: string
        sourceLocation:
          $ref: "#/components/schemas/LogEntrySourceLocation"
          description: Optional. Source code location information associated with the log entry, if any.
        spanId:
          description: "Optional. The span ID within the trace associated with the log entry.For Trace spans, this is the same format that the Trace API v2 uses: a 16-character hexadecimal encoding of an 8-byte array, such as 000000000000004a."
          type: string
        textPayload:
          description: The log entry payload, represented as a Unicode string (UTF-8).
          type: string
        timestamp:
          description: Optional. The time the event described by the log entry occurred. This time is used to compute the log entry's age and to enforce the logs retention period. If this field is omitted in a new log entry, then Logging assigns it the current time. Timestamps have nanosecond accuracy, but trailing zeros in the fractional seconds might be omitted when the timestamp is displayed.Incoming log entries must have timestamps that don't exceed the logs retention period (https://cloud.google.com/logging/quotas#logs_retention_periods) in the past, and that don't exceed 24 hours in the future. Log entries outside those time boundaries aren't ingested by Logging.
          format: google-datetime
          type: string
        trace:
          description: "Optional. Resource name of the trace associated with the log entry, if any. If it contains a relative resource name, the name is assumed to be relative to //tracing.googleapis.com. Example: projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824"
          type: string
        traceSampled:
          description: Optional. The sampling decision of the trace associated with the log entry.True means that the trace resource name in the trace field was sampled for storage in a trace backend. False means that the trace was not sampled for storage when this log entry was written, or the sampling decision was unknown at the time. A non-sampled trace value is still useful as a request correlation identifier. The default is False.
          type: boolean
      type: object
    LogEntryOperation:
      description: Additional information about a potentially long-running operation with which a log entry is associated.
      properties:
        first:
          description: Optional. Set this to True if this is the first log entry in the operation.
          type: boolean
        id:
          description: Optional. An arbitrary operation identifier. Log entries with the same identifier are assumed to be part of the same operation.
          type: string
        last:
          description: Optional. Set this to True if this is the last log entry in the operation.
          type: boolean
        producer:
          description: 'Optional. An arbitrary producer identifier. The combination of id and producer must be globally unique. Examples for producer: "MyDivision.MyBigCompany.com", "github.com/MyProject/MyApplication".'
          type: string
      type: object
    LogEntrySourceLocation:
      description: Additional information about the source code location that produced the log entry.
      properties:
        file:
          description: Optional. Source file name. Depending on the runtime environment, this might be a simple name or a fully-qualified name.
          type: string
        function:
          description: "Optional. Human-readable name of the function or method being invoked, with optional context such as the class or package name. This information may be used in contexts such as the logs viewer, where a file and line number are less meaningful. The format can vary by language. For example: qual.if.ied.Class.method (Java), dir/package.func (Go), function (Python)."
          type: string
        line:
          description: Optional. Line within the source file. 1-based; 0 indicates no line number available.
          format: int64
          type: string
      type: object
    LogExclusion:
      description: Specifies a set of log entries that are not to be stored in Cloud Logging. If your GCP resource receives a large volume of log entries, you can use exclusions to reduce your chargeable logs. Exclusions are processed after log sinks, so you can export log entries before they are excluded. Note that organization-level and folder-level exclusions don't apply to child resources, and that you can't exclude audit log entries.
      properties:
        createTime:
          description: Output only. The creation timestamp of the exclusion.This field may not be present for older exclusions.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. A description of this exclusion.
          type: string
        disabled:
          description: Optional. If set to True, then this exclusion is disabled and it does not exclude any log entries. You can update an exclusion to change the value of this field.
          type: boolean
        filter:
          description: Required. An advanced logs filter (https://cloud.google.com/logging/docs/view/advanced-queries) that matches the log entries to be excluded. By using the sample function (https://cloud.google.com/logging/docs/view/advanced-queries#sample), you can exclude less than 100% of the matching log entries.For example, the following query matches 99% of low-severity log entries from Google Cloud Storage buckets:resource.type=gcs_bucket severity<ERROR sample(insertId, 0.99)
          type: string
        name:
          description: Required. A client-assigned identifier, such as "load-balancer-exclusion". Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
          type: string
        updateTime:
          description: Output only. The last update timestamp of the exclusion.This field may not be present for older exclusions.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    LogLine:
      description: Application log line emitted while processing a request.
      properties:
        logMessage:
          description: App-provided log message.
          type: string
        severity:
          description: Severity of this log entry.
          enum:
            - DEFAULT
            - DEBUG
            - INFO
            - NOTICE
            - WARNING
            - ERROR
            - CRITICAL
            - ALERT
            - EMERGENCY
          type: string
        sourceLocation:
          $ref: "#/components/schemas/SourceLocation"
          description: Where in the source code this log message was written.
        time:
          description: Approximate time when this log entry was made.
          format: google-datetime
          type: string
      type: object
    LogSink:
      description: "Describes a sink used to export log entries to one of the following destinations in any project: a Cloud Storage bucket, a BigQuery dataset, a Pub/Sub topic or a Cloud Logging log bucket. A logs filter controls which log entries are exported. The sink must be created within a project, organization, billing account, or folder."
      properties:
        bigqueryOptions:
          $ref: "#/components/schemas/BigQueryOptions"
          description: Optional. Options that affect sinks exporting data to BigQuery.
        createTime:
          description: Output only. The creation timestamp of the sink.This field may not be present for older sinks.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. A description of this sink.The maximum length of the description is 8000 characters.
          type: string
        destination:
          description: "Required. The export destination: \"storage.googleapis.com/[GCS_BUCKET]\" \"bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]\" \"pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]\" The sink's writer_identity, set when the sink is created, must have permission to write to the destination or else the log entries are not exported. For more information, see Exporting Logs with Sinks (https://cloud.google.com/logging/docs/api/tasks/exporting-logs)."
          type: string
        disabled:
          description: Optional. If set to true, then this sink is disabled and it does not export any log entries.
          type: boolean
        exclusions:
          description: Optional. Log entries that match any of these exclusion filters will not be exported.If a log entry is matched by both filter and one of exclusion_filters it will not be exported.
          items:
            $ref: "#/components/schemas/LogExclusion"
          type: array
        filter:
          description: Optional. An advanced logs filter (https://cloud.google.com/logging/docs/view/advanced-queries). The only exported log entries are those that are in the resource owning the sink and that match the filter.For example:logName="projects/[PROJECT_ID]/logs/[LOG_ID]" AND severity>=ERROR
          type: string
        includeChildren:
          description: Optional. This field applies only to sinks owned by organizations and folders. If the field is false, the default, only the logs owned by the sink's parent resource are available for export. If the field is true, then log entries from all the projects, folders, and billing accounts contained in the sink's parent resource are also available for export. Whether a particular log entry from the children is exported depends on the sink's filter expression.For example, if this field is true, then the filter resource.type=gce_instance would export all Compute Engine VM instance log entries from all projects in the sink's parent.To only export entries from certain child projects, filter on the project part of the log name:logName:("projects/test-project1/" OR "projects/test-project2/") AND resource.type=gce_instance
          type: boolean
        name:
          description: 'Required. The client-assigned sink identifier, unique within the project.For example: "my-syslog-errors-to-pubsub". Sink identifiers are limited to 100 characters and can include only the following characters: upper and lower-case alphanumeric characters, underscores, hyphens, and periods. First character has to be alphanumeric.'
          type: string
        outputVersionFormat:
          description: Deprecated. This field is unused.
          enum:
            - VERSION_FORMAT_UNSPECIFIED
            - V2
            - V1
          type: string
        updateTime:
          description: Output only. The last update timestamp of the sink.This field may not be present for older sinks.
          format: google-datetime
          readOnly: true
          type: string
        writerIdentity:
          description: Output only. An IAM identity—a service account or group—under which Cloud Logging writes the exported log entries to the sink's destination. This field is set by sinks.create and sinks.update based on the value of unique_writer_identity in those methods.Until you grant this identity write-access to the destination, log entry exports from this sink will fail. For more information, see Granting Access for a Resource (https://cloud.google.com/iam/docs/granting-roles-to-service-accounts#granting_access_to_a_service_account_for_a_resource). Consult the destination service's documentation to determine the appropriate IAM roles to assign to the identity.
          readOnly: true
          type: string
      type: object
    MonitoredResource:
      description: "An object representing a resource that can be used for monitoring, logging, billing, or other purposes. Examples include virtual machine instances, databases, and storage devices such as disks. The type field identifies a MonitoredResourceDescriptor object that describes the resource's schema. Information in the labels field identifies the actual resource and its attributes according to the schema. For example, a particular Compute Engine VM instance could be represented by the following object, because the MonitoredResourceDescriptor for \"gce_instance\" has labels \"instance_id\" and \"zone\": { \"type\": \"gce_instance\", \"labels\": { \"instance_id\": \"12345678901234\", \"zone\": \"us-central1-a\" }} "
      properties:
        labels:
          additionalProperties:
            type: string
          description: Required. Values for all of the labels listed in the associated monitored resource descriptor. For example, Compute Engine VM instances use the labels "project_id", "instance_id", and "zone".
          type: object
        type:
          description: Required. The monitored resource type. This field must match the type field of a MonitoredResourceDescriptor object. For example, the type of a Compute Engine VM instance is gce_instance.
          type: string
      type: object
    MonitoredResourceMetadata:
      description: Auxiliary metadata for a MonitoredResource object. MonitoredResource objects contain the minimum set of information to uniquely identify a monitored resource instance. There is some other useful auxiliary metadata. Monitoring and Logging use an ingestion pipeline to extract metadata for cloud resources of all types, and store the metadata in this message.
      properties:
        systemLabels:
          additionalProperties:
            description: Properties of the object.
          description: 'Output only. Values for predefined system metadata labels. System labels are a kind of metadata extracted by Google, including "machine_image", "vpc", "subnet_id", "security_group", "name", etc. System label values can be only strings, Boolean values, or a list of strings. For example: { "name": "my-test-instance", "security_group": ["a", "b", "c"], "spot_instance": false } '
          type: object
        userLabels:
          additionalProperties:
            type: string
          description: Output only. A map of user-defined metadata labels.
          type: object
      type: object
    RequestLog:
      description: Complete log information about a single HTTP request to an App Engine application.
      properties:
        appEngineRelease:
          description: App Engine release version.
          type: string
        appId:
          description: Application that handled this request.
          type: string
        cost:
          description: An indication of the relative cost of serving this request.
          format: double
          type: number
        endTime:
          description: Time when the request finished.
          format: google-datetime
          type: string
        finished:
          description: Whether this request is finished or active.
          type: boolean
        first:
          description: Whether this is the first RequestLog entry for this request. If an active request has several RequestLog entries written to Stackdriver Logging, then this field will be set for one of them.
          type: boolean
        host:
          description: Internet host and port number of the resource being requested.
          type: string
        httpVersion:
          description: 'HTTP version of request. Example: "HTTP/1.1".'
          type: string
        instanceId:
          description: An identifier for the instance that handled the request.
          type: string
        instanceIndex:
          description: If the instance processing this request belongs to a manually scaled module, then this is the 0-based index of the instance. Otherwise, this value is -1.
          format: int32
          type: integer
        ip:
          description: Origin IP address.
          type: string
        latency:
          description: Latency of the request.
          format: google-duration
          type: string
        line:
          description: A list of log lines emitted by the application while serving this request.
          items:
            $ref: "#/components/schemas/LogLine"
          type: array
        megaCycles:
          description: Number of CPU megacycles used to process request.
          format: int64
          type: string
        method:
          description: 'Request method. Example: "GET", "HEAD", "PUT", "POST", "DELETE".'
          type: string
        moduleId:
          description: Module of the application that handled this request.
          type: string
        nickname:
          description: The logged-in user who made the request.Most likely, this is the part of the user's email before the @ sign. The field value is the same for different requests from the same user, but different users can have similar names. This information is also available to the application via the App Engine Users API.This field will be populated starting with App Engine 1.9.21.
          type: string
        pendingTime:
          description: Time this request spent in the pending request queue.
          format: google-duration
          type: string
        referrer:
          description: Referrer URL of request.
          type: string
        requestId:
          description: Globally unique identifier for a request, which is based on the request start time. Request IDs for requests which started later will compare greater as strings than those for requests which started earlier.
          type: string
        resource:
          description: 'Contains the path and query portion of the URL that was requested. For example, if the URL was "http://example.com/app?name=val", the resource would be "/app?name=val". The fragment identifier, which is identified by the # character, is not included.'
          type: string
        responseSize:
          description: Size in bytes sent back to client by request.
          format: int64
          type: string
        sourceReference:
          description: Source code for the application that handled this request. There can be more than one source reference per deployed application if source code is distributed among multiple repositories.
          items:
            $ref: "#/components/schemas/SourceReference"
          type: array
        startTime:
          description: Time when the request started.
          format: google-datetime
          type: string
        status:
          description: "HTTP response status code. Example: 200, 404."
          format: int32
          type: integer
        taskName:
          description: Task name of the request, in the case of an offline request.
          type: string
        taskQueueName:
          description: Queue name of the request, in the case of an offline request.
          type: string
        traceId:
          description: Stackdriver Trace identifier for this request.
          type: string
        traceSampled:
          description: If true, the value in the 'trace_id' field was sampled for storage in a trace backend.
          type: boolean
        urlMapEntry:
          description: File or class that handled the request.
          type: string
        userAgent:
          description: User agent that made the request.
          type: string
        versionId:
          description: Version of the application that handled this request.
          type: string
        wasLoadingRequest:
          description: Whether this was a loading request for the instance.
          type: boolean
      type: object
    SourceLocation:
      description: Specifies a location in a source code file.
      properties:
        file:
          description: Source file name. Depending on the runtime environment, this might be a simple name or a fully-qualified name.
          type: string
        functionName:
          description: "Human-readable name of the function or method being invoked, with optional context such as the class or package name. This information is used in contexts such as the logs viewer, where a file and line number are less meaningful. The format can vary by language. For example: qual.if.ied.Class.method (Java), dir/package.func (Go), function (Python)."
          type: string
        line:
          description: Line within the source file.
          format: int64
          type: string
      type: object
    SourceReference:
      description: A reference to a particular snapshot of the source tree used to build and deploy an application.
      properties:
        repository:
          description: 'Optional. A URI string identifying the repository. Example: "https://github.com/GoogleCloudPlatform/kubernetes.git"'
          type: string
        revisionId:
          description: 'The canonical and persistent identifier of the deployed revision. Example (git): "0035781c50ec7aa23385dc841529ce8a4b70db1b"'
          type: string
      type: object
    WriteLogEntriesRequest:
      description: The parameters to WriteLogEntries.
      properties:
        dryRun:
          description: Optional. If true, the request should expect normal response, but the entries won't be persisted nor exported. Useful for checking whether the logging API endpoints are working properly before sending valuable data.
          type: boolean
        entries:
          description: Required. The log entries to send to Logging. The order of log entries in this list does not matter. Values supplied in this method's log_name, resource, and labels fields are copied into those log entries in this list that do not include values for their corresponding fields. For more information, see the LogEntry type.If the timestamp or insert_id fields are missing in log entries, then this method supplies the current time or a unique identifier, respectively. The supplied values are chosen so that, among the log entries that did not supply their own values, the entries earlier in the list will sort before the entries later in the list. See the entries.list method.Log entries with timestamps that are more than the logs retention period (https://cloud.google.com/logging/quotas) in the past or more than 24 hours in the future will not be available when calling entries.list. However, those log entries can still be exported with LogSinks (https://cloud.google.com/logging/docs/api/tasks/exporting-logs).To improve throughput and to avoid exceeding the quota limit (https://cloud.google.com/logging/quotas) for calls to entries.write, you should try to include several log entries in this list, rather than calling this method for each individual log entry.
          items:
            $ref: "#/components/schemas/LogEntry"
          type: array
        labels:
          additionalProperties:
            type: string
          description: Optional. Default labels that are added to the labels field of all log entries in entries. If a log entry already has a label with the same key as a label in this parameter, then the log entry's label is not changed. See LogEntry.
          type: object
        logName:
          description: 'Optional. A default log resource name that is assigned to all log entries in entries that do not specify a value for log_name: projects/[PROJECT_ID]/logs/[LOG_ID] organizations/[ORGANIZATION_ID]/logs/[LOG_ID] billingAccounts/[BILLING_ACCOUNT_ID]/logs/[LOG_ID] folders/[FOLDER_ID]/logs/[LOG_ID][LOG_ID] must be URL-encoded. For example: "projects/my-project-id/logs/syslog" "organizations/123/logs/cloudaudit.googleapis.com%2Factivity" The permission logging.logEntries.create is needed on each project, organization, billing account, or folder that is receiving new log entries, whether the resource is specified in logName or in an individual log entry.'
          type: string
        partialSuccess:
          description: Optional. Whether valid entries should be written even if some other entries fail due to INVALID_ARGUMENT or PERMISSION_DENIED errors. If any entry is not written, then the response status is the error associated with one of the failed entries and the response includes error details keyed by the entries' zero-based index in the entries.write method.
          type: boolean
        resource:
          $ref: "#/components/schemas/MonitoredResource"
          description: 'Optional. A default monitored resource object that is assigned to all log entries in entries that do not specify a value for resource. Example: { "type": "gce_instance", "labels": { "zone": "us-central1-a", "instance_id": "00000000000000000000" }} See LogEntry.'
      type: object
    WriteLogEntriesResponse:
      description: Result returned from WriteLogEntries.
      properties: {}
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud services and see the email address of your Google Account
            https://www.googleapis.com/auth/logging.admin: Administrate log data for your projects
            https://www.googleapis.com/auth/logging.read: View log data for your projects
            https://www.googleapis.com/auth/logging.write: Submit log data for your projects
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud services and see the email address of your Google Account
            https://www.googleapis.com/auth/logging.admin: Administrate log data for your projects
            https://www.googleapis.com/auth/logging.read: View log data for your projects
            https://www.googleapis.com/auth/logging.write: Submit log data for your projects
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
