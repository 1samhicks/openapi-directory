openapi: 3.0.0
servers:
  - url: https://firebasehosting.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: The Firebase Hosting REST API enables programmatic and customizable deployments to your Firebase-hosted sites. Use this REST API to deploy new or updated hosting configurations and content files.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Firebase Hosting API
  version: v1beta1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/mermade/oas-kit
        version: 7.0.4
      format: google
      url: https://firebasehosting.googleapis.com/$discovery/rest?version=v1beta1
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: firebasehosting
externalDocs:
  url: https://firebase.google.com/docs/hosting/
tags:
  - name: projects
  - name: sites
paths:
  "/v1beta1/{name}":
    delete:
      description: Deletes the specified version.
      operationId: firebasehosting.sites.versions.delete
      parameters:
        - description: "Required. The name of the version to be deleted, in the format: sites/ site-name/versions/versionID"
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      tags:
        - sites
    get:
      description: Gets a domain mapping on the specified site.
      operationId: firebasehosting.sites.domains.get
      parameters:
        - description: Required. The name of the domain configuration to get.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Domain"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      tags:
        - sites
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates the specified metadata for a version. Note that this method will fail with `FAILED_PRECONDITION` in the event of an invalid state transition. The only valid transition for a version is currently from a `CREATED` status to a `FINALIZED` status. Use [`DeleteVersion`](../sites.versions/delete) to set the status of a version to `DELETED`.
      operationId: firebasehosting.sites.versions.patch
      parameters:
        - description: "The unique identifier for a version, in the format: sites/site-name /versions/versionID This name is provided in the response body when you call the [`CreateVersion`](../sites.versions/create) endpoint."
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: A set of field names from your [version](../sites.versions) that you want to update. A field will be overwritten if, and only if, it's in the mask. If a mask is not provided then a default mask of only [`status`](../sites.versions#Version.FIELDS.status) will be used.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Version"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Version"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      tags:
        - sites
    put:
      description: Updates the specified domain mapping, creating the mapping as if it does not exist.
      operationId: firebasehosting.sites.domains.update
      parameters:
        - description: Required. The name of the domain association to update or create, if an association doesn't already exist.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Domain"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Domain"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      tags:
        - sites
  "/v1beta1/{parent}/channels":
    get:
      description: Lists the channels for the specified site. All sites have a default "live" channel.
      operationId: firebasehosting.sites.channels.list
      parameters:
        - description: Required. The site from which to list channels.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of versions to return. The service may return fewer than this value. If unspecified, at most 25 channels will be returned. The maximum value is 100; valuupdateses above 100 will be coerced to 100
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token from a previous request, if provided.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListChannelsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      tags:
        - sites
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new channel in the specified site.
      operationId: firebasehosting.sites.channels.create
      parameters:
        - description: Required. The site in which this channel should be created.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. Immutable. A unique id within the site to identify the channel.
          in: query
          name: channelId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Channel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channel"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      tags:
        - sites
  "/v1beta1/{parent}/domains":
    get:
      description: Lists the domains for the specified site.
      operationId: firebasehosting.sites.domains.list
      parameters:
        - description: "Required. The parent for which to list domains, in the format: sites/ site-name"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The page size to return. Defaults to 50.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token from a previous request, if provided.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDomainsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      tags:
        - sites
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a domain mapping on the specified site.
      operationId: firebasehosting.sites.domains.create
      parameters:
        - description: "Required. The parent to create the domain association for, in the format: sites/site-name"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Domain"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Domain"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      tags:
        - sites
  "/v1beta1/{parent}/files":
    get:
      description: Lists the remaining files to be uploaded for the specified version.
      operationId: firebasehosting.sites.versions.files.list
      parameters:
        - description: "Required. The parent to list files for, in the format: sites/site-name /versions/versionID"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The page size to return. Defaults to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token from a previous request, if provided. This will be the encoded version of a firebase.hosting.proto.metadata.ListFilesPageToken.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The type of files in the version that should be listed.
          in: query
          name: status
          schema:
            enum:
              - STATUS_UNSPECIFIED
              - EXPECTED
              - ACTIVE
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListVersionFilesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      tags:
        - sites
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1beta1/{parent}/releases":
    get:
      description: Lists the releases that have been created on the specified site.
      operationId: firebasehosting.sites.releases.list
      parameters:
        - description: "Required. The parent for which to list files, in the format: sites/site-name"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The page size to return. Defaults to 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token from a previous request, if provided.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListReleasesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      tags:
        - sites
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new release which makes the content of the specified version actively display on the appropriate URL(s).
      operationId: firebasehosting.sites.releases.create
      parameters:
        - description: "Required. The site that the release belongs to, in the format: sites/ site-name"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "The unique identifier for a version, in the format: /sites/site-name /versions/versionID The site-name in this version identifier must match the site-name in the `parent` parameter. This query parameter must be empty if the `type` field in the request body is `SITE_DISABLE`."
          in: query
          name: versionName
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Release"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Release"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      tags:
        - sites
  "/v1beta1/{parent}/versions":
    get:
      description: Lists the versions that have been created on the specified site. Will include filtering in the future.
      operationId: firebasehosting.sites.versions.list
      parameters:
        - description: "Required. The parent for which to list files, in the format: sites/site-name"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "The filter string used to return a subset of versions in the response. Currently supported fields for filtering are: name, status, and create_time. Filter processing will be implemented in accordance with go/filtering."
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of versions to return. The service may return fewer than this value. If unspecified, at most 25 versions will be returned. The maximum value is 100; values above 100 will be coerced to 100
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token from a previous request, if provided.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListVersionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      tags:
        - sites
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new version for a site.
      operationId: firebasehosting.sites.versions.create
      parameters:
        - description: "Required. The parent to create the version for, in the format: sites/ site-name"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The self-reported size of the version. This value is used for a pre-emptive quota check for legacy version uploads.
          in: query
          name: sizeBytes
          schema:
            type: string
        - description: A unique id for the new version. This is was only specified for legacy version creations, and should be blank.
          in: query
          name: versionId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Version"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Version"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      tags:
        - sites
  "/v1beta1/{parent}/versions:clone":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new version on the target site using the content of the specified version.
      operationId: firebasehosting.sites.versions.clone
      parameters:
        - description: "Required. The target site where the cloned version will reside, in the format: `sites/{site}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CloneVersionRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      tags:
        - sites
  "/v1beta1/{parent}:populateFiles":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Adds content files to a version. Each file must be under 2 GB.
      operationId: firebasehosting.sites.versions.populateFiles
      parameters:
        - description: "Required. The version to add files to, in the format: sites/site-name /versions/versionID"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PopulateVersionFilesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PopulateVersionFilesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      tags:
        - sites
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    ActingUser:
      description: Contains metadata about the user who performed an action, such as creating a release or finalizing a version.
      properties:
        email:
          description: The email address of the user when the user performed the action.
          type: string
        imageUrl:
          description: A profile image URL for the user. May not be present if the user has changed their email address or deleted their account.
          type: string
      type: object
    CertDnsChallenge:
      description: Represents a DNS certificate challenge.
      properties:
        domainName:
          description: The domain name upon which the DNS challenge must be satisfied.
          type: string
        token:
          description: The value that must be present as a TXT record on the domain name to satisfy the challenge.
          type: string
      type: object
    CertHttpChallenge:
      description: Represents an HTTP certificate challenge.
      properties:
        path:
          description: The URL path on which to serve the specified token to satisfy the certificate challenge.
          type: string
        token:
          description: The token to serve at the specified URL path to satisfy the certificate challenge.
          type: string
      type: object
    Channel:
      description: A `Channel` represents a stream of releases for a site. All sites have a default `live` channel that serves content to the live Firebase-provided domains and any connected custom domains.
      properties:
        createTime:
          description: Output only. The time at which the channel was created.
          format: google-datetime
          readOnly: true
          type: string
        expireTime:
          description: The time at which the channel will be automatically deleted. If null, the channel will not be automatically deleted. This field is present in output whether set directly or via the `ttl` field.
          format: google-datetime
          type: string
        labels:
          additionalProperties:
            type: string
          description: Text labels used for extra metadata and/or filtering.
          type: object
        name:
          description: The fully-qualified identifier of the Channel.
          type: string
        release:
          $ref: "#/components/schemas/Release"
          description: Output only. The current release for the channel, if any.
          readOnly: true
        retainedReleaseCount:
          description: The number of previous releases to retain on the channel for rollback or other purposes. Must be a number between 1-100. Defaults to 10 for new channels.
          format: int32
          type: integer
        ttl:
          description: Input only. A time-to-live for this channel. Sets `expire_time` to the provided duration past the time of the request.
          format: google-duration
          type: string
        updateTime:
          description: Output only. The time at which the channel was last updated.
          format: google-datetime
          readOnly: true
          type: string
        url:
          description: Output only. The URL at which the channel can be viewed. For the `live` channel, the content of the current release may also be visible at other URLs.
          readOnly: true
          type: string
      type: object
    CloneVersionRequest:
      description: The request sent to CloneVersion.
      properties:
        exclude:
          $ref: "#/components/schemas/PathFilter"
          description: If provided, only paths that do not match any of the regexes in this list will be included in the new version.
        finalize:
          description: If true, immediately finalize the version after cloning is complete.
          type: boolean
        include:
          $ref: "#/components/schemas/PathFilter"
          description: If provided, only paths that match one or more regexes in this list will be included in the new version.
        sourceVersion:
          description: "Required. The name of the version to be cloned, in the format: `sites/{site}/versions/{version}`"
          type: string
      type: object
    CloudRunRewrite:
      description: A configured rewrite that directs requests to a Cloud Run service. If the Cloud Run service does not exist when setting or updating your Firebase Hosting configuration, then the request fails. Any errors from the Cloud Run service are passed to the end user (for example, if you delete a service, any requests directed to that service receive a `404` error).
      properties:
        region:
          description: Optional. User-provided region where the Cloud Run service is hosted. Defaults to `us-central1` if not supplied.
          type: string
        serviceId:
          description: Required. User-defined ID of the Cloud Run service.
          type: string
      type: object
    Domain:
      description: The intended behavior and status information of a domain.
      properties:
        domainName:
          description: Required. The domain name of the association.
          type: string
        domainRedirect:
          $ref: "#/components/schemas/DomainRedirect"
          description: If set, the domain should redirect with the provided parameters.
        provisioning:
          $ref: "#/components/schemas/DomainProvisioning"
          description: Output only. Information about the provisioning of certificates and the health of the DNS resolution for the domain.
        site:
          description: Required. The site name of the association.
          type: string
        status:
          description: Output only. Additional status of the domain association.
          enum:
            - DOMAIN_STATUS_UNSPECIFIED
            - DOMAIN_CHANGE_PENDING
            - DOMAIN_ACTIVE
            - DOMAIN_VERIFICATION_REQUIRED
            - DOMAIN_VERIFICATION_LOST
          type: string
        updateTime:
          description: Output only. The time at which the domain was last updated.
          format: google-datetime
          type: string
      type: object
    DomainProvisioning:
      description: The current certificate provisioning status information for a domain.
      properties:
        certChallengeDiscoveredTxt:
          description: The TXT records (for the certificate challenge) that were found at the last DNS fetch.
          items:
            type: string
          type: array
        certChallengeDns:
          $ref: "#/components/schemas/CertDnsChallenge"
          description: The DNS challenge for generating a certificate.
        certChallengeHttp:
          $ref: "#/components/schemas/CertHttpChallenge"
          description: The HTTP challenge for generating a certificate.
        certStatus:
          description: The certificate provisioning status; updated when Firebase Hosting provisions an SSL certificate for the domain.
          enum:
            - CERT_STATUS_UNSPECIFIED
            - CERT_PENDING
            - CERT_MISSING
            - CERT_PROCESSING
            - CERT_PROPAGATING
            - CERT_ACTIVE
            - CERT_ERROR
          type: string
        discoveredIps:
          description: The IPs found at the last DNS fetch.
          items:
            type: string
          type: array
        dnsFetchTime:
          description: The time at which the last DNS fetch occurred.
          format: google-datetime
          type: string
        dnsStatus:
          description: The DNS record match status as of the last DNS fetch.
          enum:
            - DNS_STATUS_UNSPECIFIED
            - DNS_PENDING
            - DNS_MISSING
            - DNS_PARTIAL_MATCH
            - DNS_MATCH
            - DNS_EXTRANEOUS_MATCH
          type: string
        expectedIps:
          description: The list of IPs to which the domain is expected to resolve.
          items:
            type: string
          type: array
      type: object
    DomainRedirect:
      description: Defines the behavior of a domain-level redirect. Domain redirects preserve the path of the redirect but replace the requested domain with the one specified in the redirect configuration.
      properties:
        domainName:
          description: Required. The domain name to redirect to.
          type: string
        type:
          description: Required. The redirect status code.
          enum:
            - REDIRECT_TYPE_UNSPECIFIED
            - MOVED_PERMANENTLY
          type: string
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
      properties: {}
      type: object
    Header:
      description: A [`header`](/docs/hosting/full-config#headers) is an object that specifies a URL pattern that, if matched to the request URL path, triggers Hosting to apply the specified custom response headers.
      properties:
        glob:
          description: The user-supplied [glob](/docs/hosting/full-config#glob_pattern_matching) to match against the request URL path.
          type: string
        headers:
          additionalProperties:
            type: string
          description: Required. The additional headers to add to the response.
          type: object
        regex:
          description: The user-supplied RE2 regular expression to match against the request URL path.
          type: string
      type: object
    I18nConfig:
      description: If provided, i18n rewrites are enabled.
      properties:
        root:
          description: Required. The user-supplied path where country and language specific content will be looked for within the public directory.
          type: string
      type: object
    ListChannelsResponse:
      description: The response returned by ListChannels.
      properties:
        channels:
          description: The list of channels.
          items:
            $ref: "#/components/schemas/Channel"
          type: array
        nextPageToken:
          description: If there are additional releases remaining beyond the ones in this response, then supply this token in the next [`list`](../sites.channels/list) call to continue with the next set of releases.
          type: string
      type: object
    ListDomainsResponse:
      description: The response to listing Domains.
      properties:
        domains:
          description: The list of domains, if any exist.
          items:
            $ref: "#/components/schemas/Domain"
          type: array
        nextPageToken:
          description: The pagination token, if more results exist.
          type: string
      type: object
    ListReleasesResponse:
      properties:
        nextPageToken:
          description: If there are additional releases remaining beyond the ones in this response, then supply this token in the next [`list`](../sites.versions.files/list) call to continue with the next set of releases.
          type: string
        releases:
          description: The list of hashes of files that still need to be uploaded, if any exist.
          items:
            $ref: "#/components/schemas/Release"
          type: array
      type: object
    ListVersionFilesResponse:
      properties:
        files:
          description: The list path/hashes in the specified version.
          items:
            $ref: "#/components/schemas/VersionFile"
          type: array
        nextPageToken:
          description: The pagination token, if more results exist.
          type: string
      type: object
    ListVersionsResponse:
      properties:
        nextPageToken:
          description: The pagination token, if more results exist
          type: string
        versions:
          description: The list of versions, if any exist.
          items:
            $ref: "#/components/schemas/Version"
          type: array
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    PathFilter:
      description: A representation of filter path.
      properties:
        regexes:
          description: An array of regexes to filter by.
          items:
            type: string
          type: array
      type: object
    PopulateVersionFilesRequest:
      description: The request to populate a Version's Files.
      properties:
        files:
          additionalProperties:
            type: string
          description: A set of file paths to the hashes corresponding to assets that should be added to the version. Note that a file path to an empty hash will remove the path from the version. Calculate a hash by Gzipping the file then taking the SHA256 hash of the newly compressed file.
          type: object
      type: object
    PopulateVersionFilesResponse:
      properties:
        uploadRequiredHashes:
          description: The content hashes of the specified files that need to be uploaded to the specified endpoint.
          items:
            type: string
          type: array
        uploadUrl:
          description: 'The URL to which the files should be uploaded, in the format: "https://upload-firebasehosting.googleapis.com/upload/sites/site-name /versions/versionID/files". Perform a multipart `POST` of the Gzipped file contents to the URL using a forward slash and the hash of the file appended to the end.'
          type: string
      type: object
    PreviewConfig:
      description: Version preview configuration. If active and unexpired, this version will be accessible via a custom URL even if it is not the currently released version. Deprecated in favor of site channels.
      properties:
        active:
          description: If true, preview URLs are enabled for this version.
          type: boolean
        expireTime:
          description: Indicates the expiration time for previewing this version; preview URL requests received after this time will 404.
          format: google-datetime
          type: string
      type: object
    Redirect:
      description: A [`redirect`](/docs/hosting/full-config#redirects) object specifies a URL pattern that, if matched to the request URL path, triggers Hosting to respond with a redirect to the specified destination path.
      properties:
        glob:
          description: The user-supplied [glob](/docs/hosting/full-config#glob_pattern_matching) to match against the request URL path.
          type: string
        location:
          description: 'Required. The value to put in the HTTP location header of the response. The location can contain capture group values from the pattern using a `:` prefix to identify the segment and an optional `*` to capture the rest of the URL. For example: "glob": "/:capture*", "statusCode": 301, "location": "https://example.com/foo/:capture"'
          type: string
        regex:
          description: The user-supplied RE2 regular expression to match against the request URL path.
          type: string
        statusCode:
          description: Required. The status HTTP code to return in the response. It must be a valid 3xx status code.
          format: int32
          type: integer
      type: object
    Release:
      description: A `Release` is a particular [collection of configurations and files](sites.versions) that is set to be public at a particular time.
      properties:
        message:
          description: The deploy description when the release was created. The value can be up to 512 characters.
          type: string
        name:
          description: "Output only. The unique identifier for the release, in the format: sites/ site-name/releases/releaseID This name is provided in the response body when you call the [`CreateRelease`](sites.releases/create) endpoint."
          type: string
        releaseTime:
          description: Output only. The time at which the version is set to be public.
          format: google-datetime
          type: string
        releaseUser:
          $ref: "#/components/schemas/ActingUser"
          description: Output only. Identifies the user who created the release.
        type:
          description: Explains the reason for the release. Specify a value for this field only when creating a `SITE_DISABLE` type release.
          enum:
            - TYPE_UNSPECIFIED
            - DEPLOY
            - ROLLBACK
            - SITE_DISABLE
          type: string
        version:
          $ref: "#/components/schemas/Version"
          description: Output only. The configuration and content that was released.
      type: object
    Rewrite:
      description: A [`rewrite`](/docs/hosting/full-config#rewrites) object specifies a URL pattern that, if matched to the request URL path, triggers Hosting to respond as if the service were given the specified destination URL.
      properties:
        dynamicLinks:
          description: The request will be forwarded to Firebase Dynamic Links.
          type: boolean
        function:
          description: The function to proxy requests to. Must match the exported function name exactly.
          type: string
        glob:
          description: The user-supplied [glob](/docs/hosting/full-config#glob_pattern_matching) to match against the request URL path.
          type: string
        path:
          description: The URL path to rewrite the request to.
          type: string
        regex:
          description: The user-supplied RE2 regular expression to match against the request URL path.
          type: string
        run:
          $ref: "#/components/schemas/CloudRunRewrite"
          description: The request will be forwarded to Cloud Run.
      type: object
    ServingConfig:
      description: The configuration for how incoming requests to a site should be routed and processed before serving content. The URL request paths are matched against the specified URL patterns in the configuration, then Hosting applies the applicable configuration according to a specific [priority order](/docs/hosting/full-config#hosting_priority_order).
      properties:
        appAssociation:
          description: How to handle well known App Association files.
          enum:
            - AUTO
            - NONE
          type: string
        cleanUrls:
          description: Defines whether to drop the file extension from uploaded files.
          type: boolean
        headers:
          description: An array of objects, where each object specifies a URL pattern that, if matched to the request URL path, triggers Hosting to apply the specified custom response headers.
          items:
            $ref: "#/components/schemas/Header"
          type: array
        i18n:
          $ref: "#/components/schemas/I18nConfig"
          description: Optional. Defines i18n rewrite behavior.
        redirects:
          description: An array of objects (called redirect rules), where each rule specifies a URL pattern that, if matched to the request URL path, triggers Hosting to respond with a redirect to the specified destination path.
          items:
            $ref: "#/components/schemas/Redirect"
          type: array
        rewrites:
          description: An array of objects (called rewrite rules), where each rule specifies a URL pattern that, if matched to the request URL path, triggers Hosting to respond as if the service were given the specified destination URL.
          items:
            $ref: "#/components/schemas/Rewrite"
          type: array
        trailingSlashBehavior:
          description: Defines how to handle a trailing slash in the URL path.
          enum:
            - TRAILING_SLASH_BEHAVIOR_UNSPECIFIED
            - ADD
            - REMOVE
          type: string
      type: object
    SiteConfig:
      description: A `SiteConfig` contains metadata associated with a specific site that controls Firebase Hosting serving behavior
      properties:
        cloudLoggingEnabled:
          description: Whether or not web requests made by site visitors are logged via Cloud Logging.
          type: boolean
        maxVersions:
          description: The number of FINALIZED versions that will be held for a site before automatic deletion. When a new version is deployed, content for versions in storage in excess of this number will be deleted, and will no longer be billed for storage usage. Oldest versions will be deleted first; sites are created with an unlimited number of max_versions by default.
          format: int64
          type: string
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    Version:
      description: A `Version` is the collection of configuration and [static files](sites.versions.files) that determine how a site is displayed.
      properties:
        config:
          $ref: "#/components/schemas/ServingConfig"
          description: The configuration for the behavior of the site. This configuration exists in the [`firebase.json`](/docs/cli/#the_firebasejson_file) file.
        createTime:
          description: Output only. The time at which the version was created.
          format: google-datetime
          type: string
        createUser:
          $ref: "#/components/schemas/ActingUser"
          description: Output only. Identifies the user who created the version.
        deleteTime:
          description: Output only. The time at which the version was `DELETED`.
          format: google-datetime
          type: string
        deleteUser:
          $ref: "#/components/schemas/ActingUser"
          description: Output only. Identifies the user who `DELETED` the version.
        fileCount:
          description: Output only. The total number of files associated with the version. This value is calculated after a version is `FINALIZED`.
          format: int64
          type: string
        finalizeTime:
          description: Output only. The time at which the version was `FINALIZED`.
          format: google-datetime
          type: string
        finalizeUser:
          $ref: "#/components/schemas/ActingUser"
          description: Output only. Identifies the user who `FINALIZED` the version.
        labels:
          additionalProperties:
            type: string
          description: The labels used for extra metadata and/or filtering.
          type: object
        name:
          description: "The unique identifier for a version, in the format: sites/site-name /versions/versionID This name is provided in the response body when you call the [`CreateVersion`](../sites.versions/create) endpoint."
          type: string
        preview:
          $ref: "#/components/schemas/PreviewConfig"
          description: Deprecated in favor of site channels. Version preview configuration for the site version. This configuration specifies whether previewing is enabled for this site version. Version previews allow you to preview your site at a custom URL before releasing it as the live version.
        status:
          description: The deploy status of a version. For a successful deploy, call the [`CreateVersion`](sites.versions/create) endpoint to make a new version (`CREATED` status), [upload all desired files](sites.versions/populateFiles) to the version, then [update](sites.versions/patch) the version to the `FINALIZED` status. Note that if you leave the version in the `CREATED` state for more than 12 hours, the system will automatically mark the version as `ABANDONED`. You can also change the status of a version to `DELETED` by calling the [`DeleteVersion`](sites.versions/delete) endpoint.
          enum:
            - VERSION_STATUS_UNSPECIFIED
            - CREATED
            - FINALIZED
            - DELETED
            - ABANDONED
            - EXPIRED
            - CLONING
          type: string
        versionBytes:
          description: Output only. The total stored bytesize of the version. This value is calculated after a version is `FINALIZED`.
          format: int64
          type: string
      type: object
    VersionFile:
      description: A static content file that is part of a version.
      properties:
        hash:
          description: The SHA256 content hash of the file.
          type: string
        path:
          description: The URI at which the file's content should display.
          type: string
        status:
          description: Output only. The current status of a particular file in the specified version. The value will be either `pending upload` or `uploaded`.
          enum:
            - STATUS_UNSPECIFIED
            - EXPECTED
            - ACTIVE
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud Platform services
            https://www.googleapis.com/auth/firebase: View and administer all your Firebase data and settings
            https://www.googleapis.com/auth/firebase.readonly: View all your Firebase data and settings
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud Platform services
            https://www.googleapis.com/auth/firebase: View and administer all your Firebase data and settings
            https://www.googleapis.com/auth/firebase.readonly: View all your Firebase data and settings
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
